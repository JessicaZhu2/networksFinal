// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles
parcelRequire = (function (modules, cache, entry, globalName) {
  // Save the require from previous bundle to this closure if any
  var previousRequire = typeof parcelRequire === 'function' && parcelRequire;
  var nodeRequire = typeof require === 'function' && require;

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire = typeof parcelRequire === 'function' && parcelRequire;
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error('Cannot find module \'' + name + '\'');
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = cache[name] = new newRequire.Module(name);

      modules[name][0].call(module.exports, localRequire, module, module.exports, this);
    }

    return cache[name].exports;

    function localRequire(x){
      return newRequire(localRequire.resolve(x));
    }

    function resolve(x){
      return modules[name][1][x] || x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [function (require, module) {
      module.exports = exports;
    }, {}];
  };

  var error;
  for (var i = 0; i < entry.length; i++) {
    try {
      newRequire(entry[i]);
    } catch (e) {
      // Save first error but execute all entries
      if (!error) {
        error = e;
      }
    }
  }

  if (entry.length) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(entry[entry.length - 1]);

    // CommonJS
    if (typeof exports === "object" && typeof module !== "undefined") {
      module.exports = mainExports;

    // RequireJS
    } else if (typeof define === "function" && define.amd) {
     define(function () {
       return mainExports;
     });

    // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }

  // Override the current require with this new one
  parcelRequire = newRequire;

  if (error) {
    // throw error from earlier, _after updating parcelRequire_
    throw error;
  }

  return newRequire;
})({"pT13":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dependencies = exports.devDependencies = exports.scripts = exports.files = exports.repository = exports.module = exports.jsdelivr = exports.unpkg = exports.main = exports.author = exports.license = exports.homepage = exports.keywords = exports.description = exports.version = exports.name = void 0;
var name = "d3";
exports.name = name;
var version = "5.15.0";
exports.version = version;
var description = "Data-Driven Documents";
exports.description = description;
var keywords = ["dom", "visualization", "svg", "animation", "canvas"];
exports.keywords = keywords;
var homepage = "https://d3js.org";
exports.homepage = homepage;
var license = "BSD-3-Clause";
exports.license = license;
var author = {
  "name": "Mike Bostock",
  "url": "https://bost.ocks.org/mike"
};
exports.author = author;
var main = "dist/d3.node.js";
exports.main = main;
var unpkg = "dist/d3.min.js";
exports.unpkg = unpkg;
var jsdelivr = "dist/d3.min.js";
exports.jsdelivr = jsdelivr;
var _module = "index.js";
exports.module = _module;
var repository = {
  "type": "git",
  "url": "https://github.com/d3/d3.git"
};
exports.repository = repository;
var files = ["dist/**/*.js", "index.js"];
exports.files = files;
var scripts = {
  "pretest": "rimraf dist && mkdir dist && json2module package.json > dist/package.js && rollup -c",
  "test": "tape 'test/**/*-test.js'",
  "prepublishOnly": "yarn test",
  "postpublish": "git push && git push --tags && cd ../d3.github.com && git pull && cp ../d3/dist/d3.js d3.v5.js && cp ../d3/dist/d3.min.js d3.v5.min.js && git add d3.v5.js d3.v5.min.js && git commit -m \"d3 ${npm_package_version}\" && git push && cd - && cd ../d3-bower && git pull && cp ../d3/LICENSE ../d3/README.md ../d3/dist/d3.js ../d3/dist/d3.min.js . && git add -- LICENSE README.md d3.js d3.min.js && git commit -m \"${npm_package_version}\" && git tag -am \"${npm_package_version}\" v${npm_package_version} && git push && git push --tags && cd - && zip -j dist/d3.zip -- LICENSE README.md API.md CHANGES.md dist/d3.js dist/d3.min.js"
};
exports.scripts = scripts;
var devDependencies = {
  "json2module": "0.0",
  "rimraf": "2",
  "rollup": "1",
  "rollup-plugin-ascii": "0.0",
  "rollup-plugin-node-resolve": "3",
  "rollup-plugin-terser": "5",
  "tape": "4"
};
exports.devDependencies = devDependencies;
var dependencies = {
  "d3-array": "1",
  "d3-axis": "1",
  "d3-brush": "1",
  "d3-chord": "1",
  "d3-collection": "1",
  "d3-color": "1",
  "d3-contour": "1",
  "d3-dispatch": "1",
  "d3-drag": "1",
  "d3-dsv": "1",
  "d3-ease": "1",
  "d3-fetch": "1",
  "d3-force": "1",
  "d3-format": "1",
  "d3-geo": "1",
  "d3-hierarchy": "1",
  "d3-interpolate": "1",
  "d3-path": "1",
  "d3-polygon": "1",
  "d3-quadtree": "1",
  "d3-random": "1",
  "d3-scale": "2",
  "d3-scale-chromatic": "1",
  "d3-selection": "1",
  "d3-shape": "1",
  "d3-time": "1",
  "d3-time-format": "2",
  "d3-timer": "1",
  "d3-transition": "1",
  "d3-voronoi": "1",
  "d3-zoom": "1"
};
exports.dependencies = dependencies;
},{}],"yJgn":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
}
},{}],"CQHQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _ascending = _interopRequireDefault(require("./ascending"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(compare) {
  if (compare.length === 1) compare = ascendingComparator(compare);
  return {
    left: function (a, x, lo, hi) {
      if (lo == null) lo = 0;
      if (hi == null) hi = a.length;

      while (lo < hi) {
        var mid = lo + hi >>> 1;
        if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;
      }

      return lo;
    },
    right: function (a, x, lo, hi) {
      if (lo == null) lo = 0;
      if (hi == null) hi = a.length;

      while (lo < hi) {
        var mid = lo + hi >>> 1;
        if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;
      }

      return lo;
    }
  };
}

function ascendingComparator(f) {
  return function (d, x) {
    return (0, _ascending.default)(f(d), x);
  };
}
},{"./ascending":"yJgn"}],"YrTP":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.bisectLeft = exports.bisectRight = void 0;

var _ascending = _interopRequireDefault(require("./ascending"));

var _bisector = _interopRequireDefault(require("./bisector"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ascendingBisect = (0, _bisector.default)(_ascending.default);
var bisectRight = ascendingBisect.right;
exports.bisectRight = bisectRight;
var bisectLeft = ascendingBisect.left;
exports.bisectLeft = bisectLeft;
var _default = bisectRight;
exports.default = _default;
},{"./ascending":"yJgn","./bisector":"CQHQ"}],"DkXH":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.pair = pair;

function _default(array, f) {
  if (f == null) f = pair;
  var i = 0,
      n = array.length - 1,
      p = array[0],
      pairs = new Array(n < 0 ? 0 : n);

  while (i < n) pairs[i] = f(p, p = array[++i]);

  return pairs;
}

function pair(a, b) {
  return [a, b];
}
},{}],"LKVk":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _pairs = require("./pairs");

function _default(values0, values1, reduce) {
  var n0 = values0.length,
      n1 = values1.length,
      values = new Array(n0 * n1),
      i0,
      i1,
      i,
      value0;
  if (reduce == null) reduce = _pairs.pair;

  for (i0 = i = 0; i0 < n0; ++i0) {
    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {
      values[i] = reduce(value0, values1[i1]);
    }
  }

  return values;
}
},{"./pairs":"DkXH"}],"fBAz":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
}
},{}],"XWLP":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return x === null ? NaN : +x;
}
},{}],"Nh5Q":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _number = _interopRequireDefault(require("./number"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(values, valueof) {
  var n = values.length,
      m = 0,
      i = -1,
      mean = 0,
      value,
      delta,
      sum = 0;

  if (valueof == null) {
    while (++i < n) {
      if (!isNaN(value = (0, _number.default)(values[i]))) {
        delta = value - mean;
        mean += delta / ++m;
        sum += delta * (value - mean);
      }
    }
  } else {
    while (++i < n) {
      if (!isNaN(value = (0, _number.default)(valueof(values[i], i, values)))) {
        delta = value - mean;
        mean += delta / ++m;
        sum += delta * (value - mean);
      }
    }
  }

  if (m > 1) return sum / (m - 1);
}
},{"./number":"XWLP"}],"WEAa":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _variance = _interopRequireDefault(require("./variance"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(array, f) {
  var v = (0, _variance.default)(array, f);
  return v ? Math.sqrt(v) : v;
}
},{"./variance":"Nh5Q"}],"UaWb":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(values, valueof) {
  var n = values.length,
      i = -1,
      value,
      min,
      max;

  if (valueof == null) {
    while (++i < n) {
      // Find the first comparable value.
      if ((value = values[i]) != null && value >= value) {
        min = max = value;

        while (++i < n) {
          // Compare the remaining values.
          if ((value = values[i]) != null) {
            if (min > value) min = value;
            if (max < value) max = value;
          }
        }
      }
    }
  } else {
    while (++i < n) {
      // Find the first comparable value.
      if ((value = valueof(values[i], i, values)) != null && value >= value) {
        min = max = value;

        while (++i < n) {
          // Compare the remaining values.
          if ((value = valueof(values[i], i, values)) != null) {
            if (min > value) min = value;
            if (max < value) max = value;
          }
        }
      }
    }
  }

  return [min, max];
}
},{}],"RkzJ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.map = exports.slice = void 0;
var array = Array.prototype;
var slice = array.slice;
exports.slice = slice;
var map = array.map;
exports.map = map;
},{}],"aCvo":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return function () {
    return x;
  };
}
},{}],"NNW9":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return x;
}
},{}],"wcAU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(start, stop, step) {
  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;
  var i = -1,
      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,
      range = new Array(n);

  while (++i < n) {
    range[i] = start + i * step;
  }

  return range;
}
},{}],"EUzg":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.tickIncrement = tickIncrement;
exports.tickStep = tickStep;
var e10 = Math.sqrt(50),
    e5 = Math.sqrt(10),
    e2 = Math.sqrt(2);

function _default(start, stop, count) {
  var reverse,
      i = -1,
      n,
      ticks,
      step;
  stop = +stop, start = +start, count = +count;
  if (start === stop && count > 0) return [start];
  if (reverse = stop < start) n = start, start = stop, stop = n;
  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];

  if (step > 0) {
    start = Math.ceil(start / step);
    stop = Math.floor(stop / step);
    ticks = new Array(n = Math.ceil(stop - start + 1));

    while (++i < n) ticks[i] = (start + i) * step;
  } else {
    start = Math.floor(start * step);
    stop = Math.ceil(stop * step);
    ticks = new Array(n = Math.ceil(start - stop + 1));

    while (++i < n) ticks[i] = (start - i) / step;
  }

  if (reverse) ticks.reverse();
  return ticks;
}

function tickIncrement(start, stop, count) {
  var step = (stop - start) / Math.max(0, count),
      power = Math.floor(Math.log(step) / Math.LN10),
      error = step / Math.pow(10, power);
  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);
}

function tickStep(start, stop, count) {
  var step0 = Math.abs(stop - start) / Math.max(0, count),
      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),
      error = step0 / step1;
  if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;
  return stop < start ? -step1 : step1;
}
},{}],"J0XR":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(values) {
  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;
}
},{}],"d5Tn":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _array = require("./array");

var _bisect = _interopRequireDefault(require("./bisect"));

var _constant = _interopRequireDefault(require("./constant"));

var _extent = _interopRequireDefault(require("./extent"));

var _identity = _interopRequireDefault(require("./identity"));

var _range = _interopRequireDefault(require("./range"));

var _ticks = require("./ticks");

var _sturges = _interopRequireDefault(require("./threshold/sturges"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var value = _identity.default,
      domain = _extent.default,
      threshold = _sturges.default;

  function histogram(data) {
    var i,
        n = data.length,
        x,
        values = new Array(n);

    for (i = 0; i < n; ++i) {
      values[i] = value(data[i], i, data);
    }

    var xz = domain(values),
        x0 = xz[0],
        x1 = xz[1],
        tz = threshold(values, x0, x1); // Convert number of thresholds into uniform thresholds.

    if (!Array.isArray(tz)) {
      tz = (0, _ticks.tickStep)(x0, x1, tz);
      tz = (0, _range.default)(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive
    } // Remove any thresholds outside the domain.


    var m = tz.length;

    while (tz[0] <= x0) tz.shift(), --m;

    while (tz[m - 1] > x1) tz.pop(), --m;

    var bins = new Array(m + 1),
        bin; // Initialize bins.

    for (i = 0; i <= m; ++i) {
      bin = bins[i] = [];
      bin.x0 = i > 0 ? tz[i - 1] : x0;
      bin.x1 = i < m ? tz[i] : x1;
    } // Assign data to bins by value, ignoring any outside the domain.


    for (i = 0; i < n; ++i) {
      x = values[i];

      if (x0 <= x && x <= x1) {
        bins[(0, _bisect.default)(tz, x, 0, m)].push(data[i]);
      }
    }

    return bins;
  }

  histogram.value = function (_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : (0, _constant.default)(_), histogram) : value;
  };

  histogram.domain = function (_) {
    return arguments.length ? (domain = typeof _ === "function" ? _ : (0, _constant.default)([_[0], _[1]]), histogram) : domain;
  };

  histogram.thresholds = function (_) {
    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? (0, _constant.default)(_array.slice.call(_)) : (0, _constant.default)(_), histogram) : threshold;
  };

  return histogram;
}
},{"./array":"RkzJ","./bisect":"YrTP","./constant":"aCvo","./extent":"UaWb","./identity":"NNW9","./range":"wcAU","./ticks":"EUzg","./threshold/sturges":"J0XR"}],"xM5B":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _number = _interopRequireDefault(require("./number"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(values, p, valueof) {
  if (valueof == null) valueof = _number.default;
  if (!(n = values.length)) return;
  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);
  if (p >= 1) return +valueof(values[n - 1], n - 1, values);
  var n,
      i = (n - 1) * p,
      i0 = Math.floor(i),
      value0 = +valueof(values[i0], i0, values),
      value1 = +valueof(values[i0 + 1], i0 + 1, values);
  return value0 + (value1 - value0) * (i - i0);
}
},{"./number":"XWLP"}],"nJJ4":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _array = require("../array");

var _ascending = _interopRequireDefault(require("../ascending"));

var _number = _interopRequireDefault(require("../number"));

var _quantile = _interopRequireDefault(require("../quantile"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(values, min, max) {
  values = _array.map.call(values, _number.default).sort(_ascending.default);
  return Math.ceil((max - min) / (2 * ((0, _quantile.default)(values, 0.75) - (0, _quantile.default)(values, 0.25)) * Math.pow(values.length, -1 / 3)));
}
},{"../array":"RkzJ","../ascending":"yJgn","../number":"XWLP","../quantile":"xM5B"}],"Rqev":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _deviation = _interopRequireDefault(require("../deviation"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(values, min, max) {
  return Math.ceil((max - min) / (3.5 * (0, _deviation.default)(values) * Math.pow(values.length, -1 / 3)));
}
},{"../deviation":"WEAa"}],"Ougw":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(values, valueof) {
  var n = values.length,
      i = -1,
      value,
      max;

  if (valueof == null) {
    while (++i < n) {
      // Find the first comparable value.
      if ((value = values[i]) != null && value >= value) {
        max = value;

        while (++i < n) {
          // Compare the remaining values.
          if ((value = values[i]) != null && value > max) {
            max = value;
          }
        }
      }
    }
  } else {
    while (++i < n) {
      // Find the first comparable value.
      if ((value = valueof(values[i], i, values)) != null && value >= value) {
        max = value;

        while (++i < n) {
          // Compare the remaining values.
          if ((value = valueof(values[i], i, values)) != null && value > max) {
            max = value;
          }
        }
      }
    }
  }

  return max;
}
},{}],"YY5N":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _number = _interopRequireDefault(require("./number"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(values, valueof) {
  var n = values.length,
      m = n,
      i = -1,
      value,
      sum = 0;

  if (valueof == null) {
    while (++i < n) {
      if (!isNaN(value = (0, _number.default)(values[i]))) sum += value;else --m;
    }
  } else {
    while (++i < n) {
      if (!isNaN(value = (0, _number.default)(valueof(values[i], i, values)))) sum += value;else --m;
    }
  }

  if (m) return sum / m;
}
},{"./number":"XWLP"}],"CxwF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _ascending = _interopRequireDefault(require("./ascending"));

var _number = _interopRequireDefault(require("./number"));

var _quantile = _interopRequireDefault(require("./quantile"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(values, valueof) {
  var n = values.length,
      i = -1,
      value,
      numbers = [];

  if (valueof == null) {
    while (++i < n) {
      if (!isNaN(value = (0, _number.default)(values[i]))) {
        numbers.push(value);
      }
    }
  } else {
    while (++i < n) {
      if (!isNaN(value = (0, _number.default)(valueof(values[i], i, values)))) {
        numbers.push(value);
      }
    }
  }

  return (0, _quantile.default)(numbers.sort(_ascending.default), 0.5);
}
},{"./ascending":"yJgn","./number":"XWLP","./quantile":"xM5B"}],"Getd":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(arrays) {
  var n = arrays.length,
      m,
      i = -1,
      j = 0,
      merged,
      array;

  while (++i < n) j += arrays[i].length;

  merged = new Array(j);

  while (--n >= 0) {
    array = arrays[n];
    m = array.length;

    while (--m >= 0) {
      merged[--j] = array[m];
    }
  }

  return merged;
}
},{}],"kP8m":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(values, valueof) {
  var n = values.length,
      i = -1,
      value,
      min;

  if (valueof == null) {
    while (++i < n) {
      // Find the first comparable value.
      if ((value = values[i]) != null && value >= value) {
        min = value;

        while (++i < n) {
          // Compare the remaining values.
          if ((value = values[i]) != null && min > value) {
            min = value;
          }
        }
      }
    }
  } else {
    while (++i < n) {
      // Find the first comparable value.
      if ((value = valueof(values[i], i, values)) != null && value >= value) {
        min = value;

        while (++i < n) {
          // Compare the remaining values.
          if ((value = valueof(values[i], i, values)) != null && min > value) {
            min = value;
          }
        }
      }
    }
  }

  return min;
}
},{}],"RhiG":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(array, indexes) {
  var i = indexes.length,
      permutes = new Array(i);

  while (i--) permutes[i] = array[indexes[i]];

  return permutes;
}
},{}],"swlo":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _ascending = _interopRequireDefault(require("./ascending"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(values, compare) {
  if (!(n = values.length)) return;
  var n,
      i = 0,
      j = 0,
      xi,
      xj = values[j];
  if (compare == null) compare = _ascending.default;

  while (++i < n) {
    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {
      xj = xi, j = i;
    }
  }

  if (compare(xj, xj) === 0) return j;
}
},{"./ascending":"yJgn"}],"Xskt":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(array, i0, i1) {
  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),
      t,
      i;

  while (m) {
    i = Math.random() * m-- | 0;
    t = array[m + i0];
    array[m + i0] = array[i + i0];
    array[i + i0] = t;
  }

  return array;
}
},{}],"uFmM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(values, valueof) {
  var n = values.length,
      i = -1,
      value,
      sum = 0;

  if (valueof == null) {
    while (++i < n) {
      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.
    }
  } else {
    while (++i < n) {
      if (value = +valueof(values[i], i, values)) sum += value;
    }
  }

  return sum;
}
},{}],"DmNI":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _min = _interopRequireDefault(require("./min"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(matrix) {
  if (!(n = matrix.length)) return [];

  for (var i = -1, m = (0, _min.default)(matrix, length), transpose = new Array(m); ++i < m;) {
    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {
      row[j] = matrix[j][i];
    }
  }

  return transpose;
}

function length(d) {
  return d.length;
}
},{"./min":"kP8m"}],"ciZM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _transpose = _interopRequireDefault(require("./transpose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  return (0, _transpose.default)(arguments);
}
},{"./transpose":"DmNI"}],"K0bd":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "bisect", {
  enumerable: true,
  get: function () {
    return _bisect.default;
  }
});
Object.defineProperty(exports, "bisectRight", {
  enumerable: true,
  get: function () {
    return _bisect.bisectRight;
  }
});
Object.defineProperty(exports, "bisectLeft", {
  enumerable: true,
  get: function () {
    return _bisect.bisectLeft;
  }
});
Object.defineProperty(exports, "ascending", {
  enumerable: true,
  get: function () {
    return _ascending.default;
  }
});
Object.defineProperty(exports, "bisector", {
  enumerable: true,
  get: function () {
    return _bisector.default;
  }
});
Object.defineProperty(exports, "cross", {
  enumerable: true,
  get: function () {
    return _cross.default;
  }
});
Object.defineProperty(exports, "descending", {
  enumerable: true,
  get: function () {
    return _descending.default;
  }
});
Object.defineProperty(exports, "deviation", {
  enumerable: true,
  get: function () {
    return _deviation.default;
  }
});
Object.defineProperty(exports, "extent", {
  enumerable: true,
  get: function () {
    return _extent.default;
  }
});
Object.defineProperty(exports, "histogram", {
  enumerable: true,
  get: function () {
    return _histogram.default;
  }
});
Object.defineProperty(exports, "thresholdFreedmanDiaconis", {
  enumerable: true,
  get: function () {
    return _freedmanDiaconis.default;
  }
});
Object.defineProperty(exports, "thresholdScott", {
  enumerable: true,
  get: function () {
    return _scott.default;
  }
});
Object.defineProperty(exports, "thresholdSturges", {
  enumerable: true,
  get: function () {
    return _sturges.default;
  }
});
Object.defineProperty(exports, "max", {
  enumerable: true,
  get: function () {
    return _max.default;
  }
});
Object.defineProperty(exports, "mean", {
  enumerable: true,
  get: function () {
    return _mean.default;
  }
});
Object.defineProperty(exports, "median", {
  enumerable: true,
  get: function () {
    return _median.default;
  }
});
Object.defineProperty(exports, "merge", {
  enumerable: true,
  get: function () {
    return _merge.default;
  }
});
Object.defineProperty(exports, "min", {
  enumerable: true,
  get: function () {
    return _min.default;
  }
});
Object.defineProperty(exports, "pairs", {
  enumerable: true,
  get: function () {
    return _pairs.default;
  }
});
Object.defineProperty(exports, "permute", {
  enumerable: true,
  get: function () {
    return _permute.default;
  }
});
Object.defineProperty(exports, "quantile", {
  enumerable: true,
  get: function () {
    return _quantile.default;
  }
});
Object.defineProperty(exports, "range", {
  enumerable: true,
  get: function () {
    return _range.default;
  }
});
Object.defineProperty(exports, "scan", {
  enumerable: true,
  get: function () {
    return _scan.default;
  }
});
Object.defineProperty(exports, "shuffle", {
  enumerable: true,
  get: function () {
    return _shuffle.default;
  }
});
Object.defineProperty(exports, "sum", {
  enumerable: true,
  get: function () {
    return _sum.default;
  }
});
Object.defineProperty(exports, "ticks", {
  enumerable: true,
  get: function () {
    return _ticks.default;
  }
});
Object.defineProperty(exports, "tickIncrement", {
  enumerable: true,
  get: function () {
    return _ticks.tickIncrement;
  }
});
Object.defineProperty(exports, "tickStep", {
  enumerable: true,
  get: function () {
    return _ticks.tickStep;
  }
});
Object.defineProperty(exports, "transpose", {
  enumerable: true,
  get: function () {
    return _transpose.default;
  }
});
Object.defineProperty(exports, "variance", {
  enumerable: true,
  get: function () {
    return _variance.default;
  }
});
Object.defineProperty(exports, "zip", {
  enumerable: true,
  get: function () {
    return _zip.default;
  }
});

var _bisect = _interopRequireWildcard(require("./bisect"));

var _ascending = _interopRequireDefault(require("./ascending"));

var _bisector = _interopRequireDefault(require("./bisector"));

var _cross = _interopRequireDefault(require("./cross"));

var _descending = _interopRequireDefault(require("./descending"));

var _deviation = _interopRequireDefault(require("./deviation"));

var _extent = _interopRequireDefault(require("./extent"));

var _histogram = _interopRequireDefault(require("./histogram"));

var _freedmanDiaconis = _interopRequireDefault(require("./threshold/freedmanDiaconis"));

var _scott = _interopRequireDefault(require("./threshold/scott"));

var _sturges = _interopRequireDefault(require("./threshold/sturges"));

var _max = _interopRequireDefault(require("./max"));

var _mean = _interopRequireDefault(require("./mean"));

var _median = _interopRequireDefault(require("./median"));

var _merge = _interopRequireDefault(require("./merge"));

var _min = _interopRequireDefault(require("./min"));

var _pairs = _interopRequireDefault(require("./pairs"));

var _permute = _interopRequireDefault(require("./permute"));

var _quantile = _interopRequireDefault(require("./quantile"));

var _range = _interopRequireDefault(require("./range"));

var _scan = _interopRequireDefault(require("./scan"));

var _shuffle = _interopRequireDefault(require("./shuffle"));

var _sum = _interopRequireDefault(require("./sum"));

var _ticks = _interopRequireWildcard(require("./ticks"));

var _transpose = _interopRequireDefault(require("./transpose"));

var _variance = _interopRequireDefault(require("./variance"));

var _zip = _interopRequireDefault(require("./zip"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"./bisect":"YrTP","./ascending":"yJgn","./bisector":"CQHQ","./cross":"LKVk","./descending":"fBAz","./deviation":"WEAa","./extent":"UaWb","./histogram":"d5Tn","./threshold/freedmanDiaconis":"nJJ4","./threshold/scott":"Rqev","./threshold/sturges":"J0XR","./max":"Ougw","./mean":"YY5N","./median":"CxwF","./merge":"Getd","./min":"kP8m","./pairs":"DkXH","./permute":"RhiG","./quantile":"xM5B","./range":"wcAU","./scan":"swlo","./shuffle":"Xskt","./sum":"uFmM","./ticks":"EUzg","./transpose":"DmNI","./variance":"Nh5Q","./zip":"ciZM"}],"KXlw":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.slice = void 0;
var slice = Array.prototype.slice;
exports.slice = slice;
},{}],"c1MF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.axisTop = axisTop;
exports.axisRight = axisRight;
exports.axisBottom = axisBottom;
exports.axisLeft = axisLeft;

var _array = require("./array");

var _identity = _interopRequireDefault(require("./identity"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var top = 1,
    right = 2,
    bottom = 3,
    left = 4,
    epsilon = 1e-6;

function translateX(x) {
  return "translate(" + (x + 0.5) + ",0)";
}

function translateY(y) {
  return "translate(0," + (y + 0.5) + ")";
}

function number(scale) {
  return function (d) {
    return +scale(d);
  };
}

function center(scale) {
  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.

  if (scale.round()) offset = Math.round(offset);
  return function (d) {
    return +scale(d) + offset;
  };
}

function entering() {
  return !this.__axis;
}

function axis(orient, scale) {
  var tickArguments = [],
      tickValues = null,
      tickFormat = null,
      tickSizeInner = 6,
      tickSizeOuter = 6,
      tickPadding = 3,
      k = orient === top || orient === left ? -1 : 1,
      x = orient === left || orient === right ? "x" : "y",
      transform = orient === top || orient === bottom ? translateX : translateY;

  function axis(context) {
    var values = tickValues == null ? scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain() : tickValues,
        format = tickFormat == null ? scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : _identity.default : tickFormat,
        spacing = Math.max(tickSizeInner, 0) + tickPadding,
        range = scale.range(),
        range0 = +range[0] + 0.5,
        range1 = +range[range.length - 1] + 0.5,
        position = (scale.bandwidth ? center : number)(scale.copy()),
        selection = context.selection ? context.selection() : context,
        path = selection.selectAll(".domain").data([null]),
        tick = selection.selectAll(".tick").data(values, scale).order(),
        tickExit = tick.exit(),
        tickEnter = tick.enter().append("g").attr("class", "tick"),
        line = tick.select("line"),
        text = tick.select("text");
    path = path.merge(path.enter().insert("path", ".tick").attr("class", "domain").attr("stroke", "currentColor"));
    tick = tick.merge(tickEnter);
    line = line.merge(tickEnter.append("line").attr("stroke", "currentColor").attr(x + "2", k * tickSizeInner));
    text = text.merge(tickEnter.append("text").attr("fill", "currentColor").attr(x, k * spacing).attr("dy", orient === top ? "0em" : orient === bottom ? "0.71em" : "0.32em"));

    if (context !== selection) {
      path = path.transition(context);
      tick = tick.transition(context);
      line = line.transition(context);
      text = text.transition(context);
      tickExit = tickExit.transition(context).attr("opacity", epsilon).attr("transform", function (d) {
        return isFinite(d = position(d)) ? transform(d) : this.getAttribute("transform");
      });
      tickEnter.attr("opacity", epsilon).attr("transform", function (d) {
        var p = this.parentNode.__axis;
        return transform(p && isFinite(p = p(d)) ? p : position(d));
      });
    }

    tickExit.remove();
    path.attr("d", orient === left || orient == right ? tickSizeOuter ? "M" + k * tickSizeOuter + "," + range0 + "H0.5V" + range1 + "H" + k * tickSizeOuter : "M0.5," + range0 + "V" + range1 : tickSizeOuter ? "M" + range0 + "," + k * tickSizeOuter + "V0.5H" + range1 + "V" + k * tickSizeOuter : "M" + range0 + ",0.5H" + range1);
    tick.attr("opacity", 1).attr("transform", function (d) {
      return transform(position(d));
    });
    line.attr(x + "2", k * tickSizeInner);
    text.attr(x, k * spacing).text(format);
    selection.filter(entering).attr("fill", "none").attr("font-size", 10).attr("font-family", "sans-serif").attr("text-anchor", orient === right ? "start" : orient === left ? "end" : "middle");
    selection.each(function () {
      this.__axis = position;
    });
  }

  axis.scale = function (_) {
    return arguments.length ? (scale = _, axis) : scale;
  };

  axis.ticks = function () {
    return tickArguments = _array.slice.call(arguments), axis;
  };

  axis.tickArguments = function (_) {
    return arguments.length ? (tickArguments = _ == null ? [] : _array.slice.call(_), axis) : tickArguments.slice();
  };

  axis.tickValues = function (_) {
    return arguments.length ? (tickValues = _ == null ? null : _array.slice.call(_), axis) : tickValues && tickValues.slice();
  };

  axis.tickFormat = function (_) {
    return arguments.length ? (tickFormat = _, axis) : tickFormat;
  };

  axis.tickSize = function (_) {
    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;
  };

  axis.tickSizeInner = function (_) {
    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;
  };

  axis.tickSizeOuter = function (_) {
    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;
  };

  axis.tickPadding = function (_) {
    return arguments.length ? (tickPadding = +_, axis) : tickPadding;
  };

  return axis;
}

function axisTop(scale) {
  return axis(top, scale);
}

function axisRight(scale) {
  return axis(right, scale);
}

function axisBottom(scale) {
  return axis(bottom, scale);
}

function axisLeft(scale) {
  return axis(left, scale);
}
},{"./array":"KXlw","./identity":"NNW9"}],"mp0m":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "axisTop", {
  enumerable: true,
  get: function () {
    return _axis.axisTop;
  }
});
Object.defineProperty(exports, "axisRight", {
  enumerable: true,
  get: function () {
    return _axis.axisRight;
  }
});
Object.defineProperty(exports, "axisBottom", {
  enumerable: true,
  get: function () {
    return _axis.axisBottom;
  }
});
Object.defineProperty(exports, "axisLeft", {
  enumerable: true,
  get: function () {
    return _axis.axisLeft;
  }
});

var _axis = require("./axis");
},{"./axis":"c1MF"}],"a3oC":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var noop = {
  value: function () {}
};

function dispatch() {
  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {
    if (!(t = arguments[i] + "") || t in _ || /[\s.]/.test(t)) throw new Error("illegal type: " + t);
    _[t] = [];
  }

  return new Dispatch(_);
}

function Dispatch(_) {
  this._ = _;
}

function parseTypenames(typenames, types) {
  return typenames.trim().split(/^|\s+/).map(function (t) {
    var name = "",
        i = t.indexOf(".");
    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
    if (t && !types.hasOwnProperty(t)) throw new Error("unknown type: " + t);
    return {
      type: t,
      name: name
    };
  });
}

Dispatch.prototype = dispatch.prototype = {
  constructor: Dispatch,
  on: function (typename, callback) {
    var _ = this._,
        T = parseTypenames(typename + "", _),
        t,
        i = -1,
        n = T.length; // If no callback was specified, return the callback of the given type and name.

    if (arguments.length < 2) {
      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;

      return;
    } // If a type was specified, set the callback for the given type and name.
    // Otherwise, if a null callback was specified, remove callbacks of the given name.


    if (callback != null && typeof callback !== "function") throw new Error("invalid callback: " + callback);

    while (++i < n) {
      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);
    }

    return this;
  },
  copy: function () {
    var copy = {},
        _ = this._;

    for (var t in _) copy[t] = _[t].slice();

    return new Dispatch(copy);
  },
  call: function (type, that) {
    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];
    if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);

    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
  },
  apply: function (type, that, args) {
    if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);

    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
  }
};

function get(type, name) {
  for (var i = 0, n = type.length, c; i < n; ++i) {
    if ((c = type[i]).name === name) {
      return c.value;
    }
  }
}

function set(type, name, callback) {
  for (var i = 0, n = type.length; i < n; ++i) {
    if (type[i].name === name) {
      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));
      break;
    }
  }

  if (callback != null) type.push({
    name: name,
    value: callback
  });
  return type;
}

var _default = dispatch;
exports.default = _default;
},{}],"D3zY":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "dispatch", {
  enumerable: true,
  get: function () {
    return _dispatch.default;
  }
});

var _dispatch = _interopRequireDefault(require("./dispatch.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./dispatch.js":"a3oC"}],"YeOr":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.xhtml = void 0;
var xhtml = "http://www.w3.org/1999/xhtml";
exports.xhtml = xhtml;
var _default = {
  svg: "http://www.w3.org/2000/svg",
  xhtml: xhtml,
  xlink: "http://www.w3.org/1999/xlink",
  xml: "http://www.w3.org/XML/1998/namespace",
  xmlns: "http://www.w3.org/2000/xmlns/"
};
exports.default = _default;
},{}],"U3j5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _namespaces = _interopRequireDefault(require("./namespaces"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(name) {
  var prefix = name += "",
      i = prefix.indexOf(":");
  if (i >= 0 && (prefix = name.slice(0, i)) !== "xmlns") name = name.slice(i + 1);
  return _namespaces.default.hasOwnProperty(prefix) ? {
    space: _namespaces.default[prefix],
    local: name
  } : name;
}
},{"./namespaces":"YeOr"}],"z8hd":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _namespace = _interopRequireDefault(require("./namespace"));

var _namespaces = require("./namespaces");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function creatorInherit(name) {
  return function () {
    var document = this.ownerDocument,
        uri = this.namespaceURI;
    return uri === _namespaces.xhtml && document.documentElement.namespaceURI === _namespaces.xhtml ? document.createElement(name) : document.createElementNS(uri, name);
  };
}

function creatorFixed(fullname) {
  return function () {
    return this.ownerDocument.createElementNS(fullname.space, fullname.local);
  };
}

function _default(name) {
  var fullname = (0, _namespace.default)(name);
  return (fullname.local ? creatorFixed : creatorInherit)(fullname);
}
},{"./namespace":"U3j5","./namespaces":"YeOr"}],"vXaf":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function none() {}

function _default(selector) {
  return selector == null ? none : function () {
    return this.querySelector(selector);
  };
}
},{}],"LlPS":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index");

var _selector = _interopRequireDefault(require("../selector"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(select) {
  if (typeof select !== "function") select = (0, _selector.default)(select);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
        if ("__data__" in node) subnode.__data__ = node.__data__;
        subgroup[i] = subnode;
      }
    }
  }

  return new _index.Selection(subgroups, this._parents);
}
},{"./index":"G2fv","../selector":"vXaf"}],"t3Ja":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function empty() {
  return [];
}

function _default(selector) {
  return selector == null ? empty : function () {
    return this.querySelectorAll(selector);
  };
}
},{}],"VXfp":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index");

var _selectorAll = _interopRequireDefault(require("../selectorAll"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(select) {
  if (typeof select !== "function") select = (0, _selectorAll.default)(select);

  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        subgroups.push(select.call(node, node.__data__, i, group));
        parents.push(node);
      }
    }
  }

  return new _index.Selection(subgroups, parents);
}
},{"./index":"G2fv","../selectorAll":"t3Ja"}],"oB3r":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(selector) {
  return function () {
    return this.matches(selector);
  };
}
},{}],"SSab":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index");

var _matcher = _interopRequireDefault(require("../matcher"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(match) {
  if (typeof match !== "function") match = (0, _matcher.default)(match);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
        subgroup.push(node);
      }
    }
  }

  return new _index.Selection(subgroups, this._parents);
}
},{"./index":"G2fv","../matcher":"oB3r"}],"CH7j":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(update) {
  return new Array(update.length);
}
},{}],"Bnlt":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.EnterNode = EnterNode;

var _sparse = _interopRequireDefault(require("./sparse"));

var _index = require("./index");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  return new _index.Selection(this._enter || this._groups.map(_sparse.default), this._parents);
}

function EnterNode(parent, datum) {
  this.ownerDocument = parent.ownerDocument;
  this.namespaceURI = parent.namespaceURI;
  this._next = null;
  this._parent = parent;
  this.__data__ = datum;
}

EnterNode.prototype = {
  constructor: EnterNode,
  appendChild: function (child) {
    return this._parent.insertBefore(child, this._next);
  },
  insertBefore: function (child, next) {
    return this._parent.insertBefore(child, next);
  },
  querySelector: function (selector) {
    return this._parent.querySelector(selector);
  },
  querySelectorAll: function (selector) {
    return this._parent.querySelectorAll(selector);
  }
};
},{"./sparse":"CH7j","./index":"G2fv"}],"qO0c":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index");

var _enter = require("./enter");

var _constant = _interopRequireDefault(require("../constant"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var keyPrefix = "$"; // Protect against keys like “__proto__”.

function bindIndex(parent, group, enter, update, exit, data) {
  var i = 0,
      node,
      groupLength = group.length,
      dataLength = data.length; // Put any non-null nodes that fit into update.
  // Put any null nodes into enter.
  // Put any remaining data into enter.

  for (; i < dataLength; ++i) {
    if (node = group[i]) {
      node.__data__ = data[i];
      update[i] = node;
    } else {
      enter[i] = new _enter.EnterNode(parent, data[i]);
    }
  } // Put any non-null nodes that don’t fit into exit.


  for (; i < groupLength; ++i) {
    if (node = group[i]) {
      exit[i] = node;
    }
  }
}

function bindKey(parent, group, enter, update, exit, data, key) {
  var i,
      node,
      nodeByKeyValue = {},
      groupLength = group.length,
      dataLength = data.length,
      keyValues = new Array(groupLength),
      keyValue; // Compute the key for each node.
  // If multiple nodes have the same key, the duplicates are added to exit.

  for (i = 0; i < groupLength; ++i) {
    if (node = group[i]) {
      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);

      if (keyValue in nodeByKeyValue) {
        exit[i] = node;
      } else {
        nodeByKeyValue[keyValue] = node;
      }
    }
  } // Compute the key for each datum.
  // If there a node associated with this key, join and add it to update.
  // If there is not (or the key is a duplicate), add it to enter.


  for (i = 0; i < dataLength; ++i) {
    keyValue = keyPrefix + key.call(parent, data[i], i, data);

    if (node = nodeByKeyValue[keyValue]) {
      update[i] = node;
      node.__data__ = data[i];
      nodeByKeyValue[keyValue] = null;
    } else {
      enter[i] = new _enter.EnterNode(parent, data[i]);
    }
  } // Add any remaining nodes that were not bound to data to exit.


  for (i = 0; i < groupLength; ++i) {
    if ((node = group[i]) && nodeByKeyValue[keyValues[i]] === node) {
      exit[i] = node;
    }
  }
}

function _default(value, key) {
  if (!value) {
    data = new Array(this.size()), j = -1;
    this.each(function (d) {
      data[++j] = d;
    });
    return data;
  }

  var bind = key ? bindKey : bindIndex,
      parents = this._parents,
      groups = this._groups;
  if (typeof value !== "function") value = (0, _constant.default)(value);

  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {
    var parent = parents[j],
        group = groups[j],
        groupLength = group.length,
        data = value.call(parent, parent && parent.__data__, j, parents),
        dataLength = data.length,
        enterGroup = enter[j] = new Array(dataLength),
        updateGroup = update[j] = new Array(dataLength),
        exitGroup = exit[j] = new Array(groupLength);
    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key); // Now connect the enter nodes to their following update node, such that
    // appendChild can insert the materialized enter node before this node,
    // rather than at the end of the parent node.

    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {
      if (previous = enterGroup[i0]) {
        if (i0 >= i1) i1 = i0 + 1;

        while (!(next = updateGroup[i1]) && ++i1 < dataLength);

        previous._next = next || null;
      }
    }
  }

  update = new _index.Selection(update, parents);
  update._enter = enter;
  update._exit = exit;
  return update;
}
},{"./index":"G2fv","./enter":"Bnlt","../constant":"aCvo"}],"sLhL":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _sparse = _interopRequireDefault(require("./sparse"));

var _index = require("./index");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  return new _index.Selection(this._exit || this._groups.map(_sparse.default), this._parents);
}
},{"./sparse":"CH7j","./index":"G2fv"}],"Rskg":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(onenter, onupdate, onexit) {
  var enter = this.enter(),
      update = this,
      exit = this.exit();
  enter = typeof onenter === "function" ? onenter(enter) : enter.append(onenter + "");
  if (onupdate != null) update = onupdate(update);
  if (onexit == null) exit.remove();else onexit(exit);
  return enter && update ? enter.merge(update).order() : update;
}
},{}],"VSNx":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index");

function _default(selection) {
  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group0[i] || group1[i]) {
        merge[i] = node;
      }
    }
  }

  for (; j < m0; ++j) {
    merges[j] = groups0[j];
  }

  return new _index.Selection(merges, this._parents);
}
},{"./index":"G2fv"}],"z9O9":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {
    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {
      if (node = group[i]) {
        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);
        next = node;
      }
    }
  }

  return this;
}
},{}],"Vwkw":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index");

function _default(compare) {
  if (!compare) compare = ascending;

  function compareNode(a, b) {
    return a && b ? compare(a.__data__, b.__data__) : !a - !b;
  }

  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        sortgroup[i] = node;
      }
    }

    sortgroup.sort(compareNode);
  }

  return new _index.Selection(sortgroups, this._parents).order();
}

function ascending(a, b) {
  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
}
},{"./index":"G2fv"}],"fuyN":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var callback = arguments[0];
  arguments[0] = this;
  callback.apply(null, arguments);
  return this;
}
},{}],"x3ma":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var nodes = new Array(this.size()),
      i = -1;
  this.each(function () {
    nodes[++i] = this;
  });
  return nodes;
}
},{}],"zOHW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {
      var node = group[i];
      if (node) return node;
    }
  }

  return null;
}
},{}],"zFge":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var size = 0;
  this.each(function () {
    ++size;
  });
  return size;
}
},{}],"ZnyY":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  return !this.node();
}
},{}],"ntqp":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(callback) {
  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {
      if (node = group[i]) callback.call(node, node.__data__, i, group);
    }
  }

  return this;
}
},{}],"KUPz":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _namespace = _interopRequireDefault(require("../namespace"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function attrRemove(name) {
  return function () {
    this.removeAttribute(name);
  };
}

function attrRemoveNS(fullname) {
  return function () {
    this.removeAttributeNS(fullname.space, fullname.local);
  };
}

function attrConstant(name, value) {
  return function () {
    this.setAttribute(name, value);
  };
}

function attrConstantNS(fullname, value) {
  return function () {
    this.setAttributeNS(fullname.space, fullname.local, value);
  };
}

function attrFunction(name, value) {
  return function () {
    var v = value.apply(this, arguments);
    if (v == null) this.removeAttribute(name);else this.setAttribute(name, v);
  };
}

function attrFunctionNS(fullname, value) {
  return function () {
    var v = value.apply(this, arguments);
    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);else this.setAttributeNS(fullname.space, fullname.local, v);
  };
}

function _default(name, value) {
  var fullname = (0, _namespace.default)(name);

  if (arguments.length < 2) {
    var node = this.node();
    return fullname.local ? node.getAttributeNS(fullname.space, fullname.local) : node.getAttribute(fullname);
  }

  return this.each((value == null ? fullname.local ? attrRemoveNS : attrRemove : typeof value === "function" ? fullname.local ? attrFunctionNS : attrFunction : fullname.local ? attrConstantNS : attrConstant)(fullname, value));
}
},{"../namespace":"U3j5"}],"iFwm":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(node) {
  return node.ownerDocument && node.ownerDocument.defaultView || // node is a Node
  node.document && node // node is a Window
  || node.defaultView; // node is a Document
}
},{}],"WecP":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.styleValue = styleValue;

var _window = _interopRequireDefault(require("../window"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function styleRemove(name) {
  return function () {
    this.style.removeProperty(name);
  };
}

function styleConstant(name, value, priority) {
  return function () {
    this.style.setProperty(name, value, priority);
  };
}

function styleFunction(name, value, priority) {
  return function () {
    var v = value.apply(this, arguments);
    if (v == null) this.style.removeProperty(name);else this.style.setProperty(name, v, priority);
  };
}

function _default(name, value, priority) {
  return arguments.length > 1 ? this.each((value == null ? styleRemove : typeof value === "function" ? styleFunction : styleConstant)(name, value, priority == null ? "" : priority)) : styleValue(this.node(), name);
}

function styleValue(node, name) {
  return node.style.getPropertyValue(name) || (0, _window.default)(node).getComputedStyle(node, null).getPropertyValue(name);
}
},{"../window":"iFwm"}],"Tr0z":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function propertyRemove(name) {
  return function () {
    delete this[name];
  };
}

function propertyConstant(name, value) {
  return function () {
    this[name] = value;
  };
}

function propertyFunction(name, value) {
  return function () {
    var v = value.apply(this, arguments);
    if (v == null) delete this[name];else this[name] = v;
  };
}

function _default(name, value) {
  return arguments.length > 1 ? this.each((value == null ? propertyRemove : typeof value === "function" ? propertyFunction : propertyConstant)(name, value)) : this.node()[name];
}
},{}],"CVLA":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function classArray(string) {
  return string.trim().split(/^|\s+/);
}

function classList(node) {
  return node.classList || new ClassList(node);
}

function ClassList(node) {
  this._node = node;
  this._names = classArray(node.getAttribute("class") || "");
}

ClassList.prototype = {
  add: function (name) {
    var i = this._names.indexOf(name);

    if (i < 0) {
      this._names.push(name);

      this._node.setAttribute("class", this._names.join(" "));
    }
  },
  remove: function (name) {
    var i = this._names.indexOf(name);

    if (i >= 0) {
      this._names.splice(i, 1);

      this._node.setAttribute("class", this._names.join(" "));
    }
  },
  contains: function (name) {
    return this._names.indexOf(name) >= 0;
  }
};

function classedAdd(node, names) {
  var list = classList(node),
      i = -1,
      n = names.length;

  while (++i < n) list.add(names[i]);
}

function classedRemove(node, names) {
  var list = classList(node),
      i = -1,
      n = names.length;

  while (++i < n) list.remove(names[i]);
}

function classedTrue(names) {
  return function () {
    classedAdd(this, names);
  };
}

function classedFalse(names) {
  return function () {
    classedRemove(this, names);
  };
}

function classedFunction(names, value) {
  return function () {
    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);
  };
}

function _default(name, value) {
  var names = classArray(name + "");

  if (arguments.length < 2) {
    var list = classList(this.node()),
        i = -1,
        n = names.length;

    while (++i < n) if (!list.contains(names[i])) return false;

    return true;
  }

  return this.each((typeof value === "function" ? classedFunction : value ? classedTrue : classedFalse)(names, value));
}
},{}],"wYBq":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function textRemove() {
  this.textContent = "";
}

function textConstant(value) {
  return function () {
    this.textContent = value;
  };
}

function textFunction(value) {
  return function () {
    var v = value.apply(this, arguments);
    this.textContent = v == null ? "" : v;
  };
}

function _default(value) {
  return arguments.length ? this.each(value == null ? textRemove : (typeof value === "function" ? textFunction : textConstant)(value)) : this.node().textContent;
}
},{}],"FDS0":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function htmlRemove() {
  this.innerHTML = "";
}

function htmlConstant(value) {
  return function () {
    this.innerHTML = value;
  };
}

function htmlFunction(value) {
  return function () {
    var v = value.apply(this, arguments);
    this.innerHTML = v == null ? "" : v;
  };
}

function _default(value) {
  return arguments.length ? this.each(value == null ? htmlRemove : (typeof value === "function" ? htmlFunction : htmlConstant)(value)) : this.node().innerHTML;
}
},{}],"AlDR":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function raise() {
  if (this.nextSibling) this.parentNode.appendChild(this);
}

function _default() {
  return this.each(raise);
}
},{}],"wunq":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function lower() {
  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);
}

function _default() {
  return this.each(lower);
}
},{}],"jPcQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _creator = _interopRequireDefault(require("../creator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(name) {
  var create = typeof name === "function" ? name : (0, _creator.default)(name);
  return this.select(function () {
    return this.appendChild(create.apply(this, arguments));
  });
}
},{"../creator":"z8hd"}],"NP4m":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _creator = _interopRequireDefault(require("../creator"));

var _selector = _interopRequireDefault(require("../selector"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function constantNull() {
  return null;
}

function _default(name, before) {
  var create = typeof name === "function" ? name : (0, _creator.default)(name),
      select = before == null ? constantNull : typeof before === "function" ? before : (0, _selector.default)(before);
  return this.select(function () {
    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);
  });
}
},{"../creator":"z8hd","../selector":"vXaf"}],"BhwP":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function remove() {
  var parent = this.parentNode;
  if (parent) parent.removeChild(this);
}

function _default() {
  return this.each(remove);
}
},{}],"C0rN":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function selection_cloneShallow() {
  var clone = this.cloneNode(false),
      parent = this.parentNode;
  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;
}

function selection_cloneDeep() {
  var clone = this.cloneNode(true),
      parent = this.parentNode;
  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;
}

function _default(deep) {
  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);
}
},{}],"dIrG":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(value) {
  return arguments.length ? this.property("__data__", value) : this.node().__data__;
}
},{}],"pgiW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.customEvent = customEvent;
exports.event = void 0;
var filterEvents = {};
var event = null;
exports.event = event;

if (typeof document !== "undefined") {
  var element = document.documentElement;

  if (!("onmouseenter" in element)) {
    filterEvents = {
      mouseenter: "mouseover",
      mouseleave: "mouseout"
    };
  }
}

function filterContextListener(listener, index, group) {
  listener = contextListener(listener, index, group);
  return function (event) {
    var related = event.relatedTarget;

    if (!related || related !== this && !(related.compareDocumentPosition(this) & 8)) {
      listener.call(this, event);
    }
  };
}

function contextListener(listener, index, group) {
  return function (event1) {
    var event0 = event; // Events can be reentrant (e.g., focus).

    exports.event = event = event1;

    try {
      listener.call(this, this.__data__, index, group);
    } finally {
      exports.event = event = event0;
    }
  };
}

function parseTypenames(typenames) {
  return typenames.trim().split(/^|\s+/).map(function (t) {
    var name = "",
        i = t.indexOf(".");
    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
    return {
      type: t,
      name: name
    };
  });
}

function onRemove(typename) {
  return function () {
    var on = this.__on;
    if (!on) return;

    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {
      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {
        this.removeEventListener(o.type, o.listener, o.capture);
      } else {
        on[++i] = o;
      }
    }

    if (++i) on.length = i;else delete this.__on;
  };
}

function onAdd(typename, value, capture) {
  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;
  return function (d, i, group) {
    var on = this.__on,
        o,
        listener = wrap(value, i, group);
    if (on) for (var j = 0, m = on.length; j < m; ++j) {
      if ((o = on[j]).type === typename.type && o.name === typename.name) {
        this.removeEventListener(o.type, o.listener, o.capture);
        this.addEventListener(o.type, o.listener = listener, o.capture = capture);
        o.value = value;
        return;
      }
    }
    this.addEventListener(typename.type, listener, capture);
    o = {
      type: typename.type,
      name: typename.name,
      value: value,
      listener: listener,
      capture: capture
    };
    if (!on) this.__on = [o];else on.push(o);
  };
}

function _default(typename, value, capture) {
  var typenames = parseTypenames(typename + ""),
      i,
      n = typenames.length,
      t;

  if (arguments.length < 2) {
    var on = this.node().__on;

    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {
      for (i = 0, o = on[j]; i < n; ++i) {
        if ((t = typenames[i]).type === o.type && t.name === o.name) {
          return o.value;
        }
      }
    }
    return;
  }

  on = value ? onAdd : onRemove;
  if (capture == null) capture = false;

  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));

  return this;
}

function customEvent(event1, listener, that, args) {
  var event0 = event;
  event1.sourceEvent = event;
  exports.event = event = event1;

  try {
    return listener.apply(that, args);
  } finally {
    exports.event = event = event0;
  }
}
},{}],"YF1h":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _window = _interopRequireDefault(require("../window"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function dispatchEvent(node, type, params) {
  var window = (0, _window.default)(node),
      event = window.CustomEvent;

  if (typeof event === "function") {
    event = new event(type, params);
  } else {
    event = window.document.createEvent("Event");
    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;else event.initEvent(type, false, false);
  }

  node.dispatchEvent(event);
}

function dispatchConstant(type, params) {
  return function () {
    return dispatchEvent(this, type, params);
  };
}

function dispatchFunction(type, params) {
  return function () {
    return dispatchEvent(this, type, params.apply(this, arguments));
  };
}

function _default(type, params) {
  return this.each((typeof params === "function" ? dispatchFunction : dispatchConstant)(type, params));
}
},{"../window":"iFwm"}],"G2fv":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Selection = Selection;
exports.default = exports.root = void 0;

var _select = _interopRequireDefault(require("./select"));

var _selectAll = _interopRequireDefault(require("./selectAll"));

var _filter = _interopRequireDefault(require("./filter"));

var _data = _interopRequireDefault(require("./data"));

var _enter = _interopRequireDefault(require("./enter"));

var _exit = _interopRequireDefault(require("./exit"));

var _join = _interopRequireDefault(require("./join"));

var _merge = _interopRequireDefault(require("./merge"));

var _order = _interopRequireDefault(require("./order"));

var _sort = _interopRequireDefault(require("./sort"));

var _call = _interopRequireDefault(require("./call"));

var _nodes = _interopRequireDefault(require("./nodes"));

var _node = _interopRequireDefault(require("./node"));

var _size = _interopRequireDefault(require("./size"));

var _empty = _interopRequireDefault(require("./empty"));

var _each = _interopRequireDefault(require("./each"));

var _attr = _interopRequireDefault(require("./attr"));

var _style = _interopRequireDefault(require("./style"));

var _property = _interopRequireDefault(require("./property"));

var _classed = _interopRequireDefault(require("./classed"));

var _text = _interopRequireDefault(require("./text"));

var _html = _interopRequireDefault(require("./html"));

var _raise = _interopRequireDefault(require("./raise"));

var _lower = _interopRequireDefault(require("./lower"));

var _append = _interopRequireDefault(require("./append"));

var _insert = _interopRequireDefault(require("./insert"));

var _remove = _interopRequireDefault(require("./remove"));

var _clone = _interopRequireDefault(require("./clone"));

var _datum = _interopRequireDefault(require("./datum"));

var _on = _interopRequireDefault(require("./on"));

var _dispatch = _interopRequireDefault(require("./dispatch"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var root = [null];
exports.root = root;

function Selection(groups, parents) {
  this._groups = groups;
  this._parents = parents;
}

function selection() {
  return new Selection([[document.documentElement]], root);
}

Selection.prototype = selection.prototype = {
  constructor: Selection,
  select: _select.default,
  selectAll: _selectAll.default,
  filter: _filter.default,
  data: _data.default,
  enter: _enter.default,
  exit: _exit.default,
  join: _join.default,
  merge: _merge.default,
  order: _order.default,
  sort: _sort.default,
  call: _call.default,
  nodes: _nodes.default,
  node: _node.default,
  size: _size.default,
  empty: _empty.default,
  each: _each.default,
  attr: _attr.default,
  style: _style.default,
  property: _property.default,
  classed: _classed.default,
  text: _text.default,
  html: _html.default,
  raise: _raise.default,
  lower: _lower.default,
  append: _append.default,
  insert: _insert.default,
  remove: _remove.default,
  clone: _clone.default,
  datum: _datum.default,
  on: _on.default,
  dispatch: _dispatch.default
};
var _default = selection;
exports.default = _default;
},{"./select":"LlPS","./selectAll":"VXfp","./filter":"SSab","./data":"qO0c","./enter":"Bnlt","./exit":"sLhL","./join":"Rskg","./merge":"VSNx","./order":"z9O9","./sort":"Vwkw","./call":"fuyN","./nodes":"x3ma","./node":"zOHW","./size":"zFge","./empty":"ZnyY","./each":"ntqp","./attr":"KUPz","./style":"WecP","./property":"Tr0z","./classed":"CVLA","./text":"wYBq","./html":"FDS0","./raise":"AlDR","./lower":"wunq","./append":"jPcQ","./insert":"NP4m","./remove":"BhwP","./clone":"C0rN","./datum":"dIrG","./on":"pgiW","./dispatch":"YF1h"}],"RAQf":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./selection/index");

function _default(selector) {
  return typeof selector === "string" ? new _index.Selection([[document.querySelector(selector)]], [document.documentElement]) : new _index.Selection([[selector]], _index.root);
}
},{"./selection/index":"G2fv"}],"aaeJ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _creator = _interopRequireDefault(require("./creator"));

var _select = _interopRequireDefault(require("./select"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(name) {
  return (0, _select.default)((0, _creator.default)(name).call(document.documentElement));
}
},{"./creator":"z8hd","./select":"RAQf"}],"iml1":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = local;
var nextId = 0;

function local() {
  return new Local();
}

function Local() {
  this._ = "@" + (++nextId).toString(36);
}

Local.prototype = local.prototype = {
  constructor: Local,
  get: function (node) {
    var id = this._;

    while (!(id in node)) if (!(node = node.parentNode)) return;

    return node[id];
  },
  set: function (node, value) {
    return node[this._] = value;
  },
  remove: function (node) {
    return this._ in node && delete node[this._];
  },
  toString: function () {
    return this._;
  }
};
},{}],"Tqn5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _on = require("./selection/on");

function _default() {
  var current = _on.event,
      source;

  while (source = current.sourceEvent) current = source;

  return current;
}
},{"./selection/on":"pgiW"}],"JEJ4":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(node, event) {
  var svg = node.ownerSVGElement || node;

  if (svg.createSVGPoint) {
    var point = svg.createSVGPoint();
    point.x = event.clientX, point.y = event.clientY;
    point = point.matrixTransform(node.getScreenCTM().inverse());
    return [point.x, point.y];
  }

  var rect = node.getBoundingClientRect();
  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];
}
},{}],"Y8Cy":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _sourceEvent = _interopRequireDefault(require("./sourceEvent"));

var _point = _interopRequireDefault(require("./point"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(node) {
  var event = (0, _sourceEvent.default)();
  if (event.changedTouches) event = event.changedTouches[0];
  return (0, _point.default)(node, event);
}
},{"./sourceEvent":"Tqn5","./point":"JEJ4"}],"zmwq":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./selection/index");

function _default(selector) {
  return typeof selector === "string" ? new _index.Selection([document.querySelectorAll(selector)], [document.documentElement]) : new _index.Selection([selector == null ? [] : selector], _index.root);
}
},{"./selection/index":"G2fv"}],"SZFU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _sourceEvent = _interopRequireDefault(require("./sourceEvent"));

var _point = _interopRequireDefault(require("./point"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(node, touches, identifier) {
  if (arguments.length < 3) identifier = touches, touches = (0, _sourceEvent.default)().changedTouches;

  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {
    if ((touch = touches[i]).identifier === identifier) {
      return (0, _point.default)(node, touch);
    }
  }

  return null;
}
},{"./sourceEvent":"Tqn5","./point":"JEJ4"}],"lhoo":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _sourceEvent = _interopRequireDefault(require("./sourceEvent"));

var _point = _interopRequireDefault(require("./point"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(node, touches) {
  if (touches == null) touches = (0, _sourceEvent.default)().touches;

  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {
    points[i] = (0, _point.default)(node, touches[i]);
  }

  return points;
}
},{"./sourceEvent":"Tqn5","./point":"JEJ4"}],"ysDv":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "create", {
  enumerable: true,
  get: function () {
    return _create.default;
  }
});
Object.defineProperty(exports, "creator", {
  enumerable: true,
  get: function () {
    return _creator.default;
  }
});
Object.defineProperty(exports, "local", {
  enumerable: true,
  get: function () {
    return _local.default;
  }
});
Object.defineProperty(exports, "matcher", {
  enumerable: true,
  get: function () {
    return _matcher.default;
  }
});
Object.defineProperty(exports, "mouse", {
  enumerable: true,
  get: function () {
    return _mouse.default;
  }
});
Object.defineProperty(exports, "namespace", {
  enumerable: true,
  get: function () {
    return _namespace.default;
  }
});
Object.defineProperty(exports, "namespaces", {
  enumerable: true,
  get: function () {
    return _namespaces.default;
  }
});
Object.defineProperty(exports, "clientPoint", {
  enumerable: true,
  get: function () {
    return _point.default;
  }
});
Object.defineProperty(exports, "select", {
  enumerable: true,
  get: function () {
    return _select.default;
  }
});
Object.defineProperty(exports, "selectAll", {
  enumerable: true,
  get: function () {
    return _selectAll.default;
  }
});
Object.defineProperty(exports, "selection", {
  enumerable: true,
  get: function () {
    return _index.default;
  }
});
Object.defineProperty(exports, "selector", {
  enumerable: true,
  get: function () {
    return _selector.default;
  }
});
Object.defineProperty(exports, "selectorAll", {
  enumerable: true,
  get: function () {
    return _selectorAll.default;
  }
});
Object.defineProperty(exports, "style", {
  enumerable: true,
  get: function () {
    return _style.styleValue;
  }
});
Object.defineProperty(exports, "touch", {
  enumerable: true,
  get: function () {
    return _touch.default;
  }
});
Object.defineProperty(exports, "touches", {
  enumerable: true,
  get: function () {
    return _touches.default;
  }
});
Object.defineProperty(exports, "window", {
  enumerable: true,
  get: function () {
    return _window.default;
  }
});
Object.defineProperty(exports, "event", {
  enumerable: true,
  get: function () {
    return _on.event;
  }
});
Object.defineProperty(exports, "customEvent", {
  enumerable: true,
  get: function () {
    return _on.customEvent;
  }
});

var _create = _interopRequireDefault(require("./create"));

var _creator = _interopRequireDefault(require("./creator"));

var _local = _interopRequireDefault(require("./local"));

var _matcher = _interopRequireDefault(require("./matcher"));

var _mouse = _interopRequireDefault(require("./mouse"));

var _namespace = _interopRequireDefault(require("./namespace"));

var _namespaces = _interopRequireDefault(require("./namespaces"));

var _point = _interopRequireDefault(require("./point"));

var _select = _interopRequireDefault(require("./select"));

var _selectAll = _interopRequireDefault(require("./selectAll"));

var _index = _interopRequireDefault(require("./selection/index"));

var _selector = _interopRequireDefault(require("./selector"));

var _selectorAll = _interopRequireDefault(require("./selectorAll"));

var _style = require("./selection/style");

var _touch = _interopRequireDefault(require("./touch"));

var _touches = _interopRequireDefault(require("./touches"));

var _window = _interopRequireDefault(require("./window"));

var _on = require("./selection/on");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./create":"aaeJ","./creator":"z8hd","./local":"iml1","./matcher":"oB3r","./mouse":"Y8Cy","./namespace":"U3j5","./namespaces":"YeOr","./point":"JEJ4","./select":"RAQf","./selectAll":"zmwq","./selection/index":"G2fv","./selector":"vXaf","./selectorAll":"t3Ja","./selection/style":"WecP","./touch":"SZFU","./touches":"lhoo","./window":"iFwm","./selection/on":"pgiW"}],"BxLv":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.nopropagation = nopropagation;
exports.default = _default;

var _d3Selection = require("d3-selection");

function nopropagation() {
  _d3Selection.event.stopImmediatePropagation();
}

function _default() {
  _d3Selection.event.preventDefault();

  _d3Selection.event.stopImmediatePropagation();
}
},{"d3-selection":"ysDv"}],"m07T":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.yesdrag = yesdrag;

var _d3Selection = require("d3-selection");

var _noevent = _interopRequireDefault(require("./noevent.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(view) {
  var root = view.document.documentElement,
      selection = (0, _d3Selection.select)(view).on("dragstart.drag", _noevent.default, true);

  if ("onselectstart" in root) {
    selection.on("selectstart.drag", _noevent.default, true);
  } else {
    root.__noselect = root.style.MozUserSelect;
    root.style.MozUserSelect = "none";
  }
}

function yesdrag(view, noclick) {
  var root = view.document.documentElement,
      selection = (0, _d3Selection.select)(view).on("dragstart.drag", null);

  if (noclick) {
    selection.on("click.drag", _noevent.default, true);
    setTimeout(function () {
      selection.on("click.drag", null);
    }, 0);
  }

  if ("onselectstart" in root) {
    selection.on("selectstart.drag", null);
  } else {
    root.style.MozUserSelect = root.__noselect;
    delete root.__noselect;
  }
}
},{"d3-selection":"ysDv","./noevent.js":"BxLv"}],"qb7E":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = DragEvent;

function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {
  this.target = target;
  this.type = type;
  this.subject = subject;
  this.identifier = id;
  this.active = active;
  this.x = x;
  this.y = y;
  this.dx = dx;
  this.dy = dy;
  this._ = dispatch;
}

DragEvent.prototype.on = function () {
  var value = this._.on.apply(this._, arguments);

  return value === this._ ? this : value;
};
},{}],"NgLN":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Dispatch = require("d3-dispatch");

var _d3Selection = require("d3-selection");

var _nodrag = _interopRequireWildcard(require("./nodrag.js"));

var _noevent = _interopRequireWildcard(require("./noevent.js"));

var _constant = _interopRequireDefault(require("./constant.js"));

var _event = _interopRequireDefault(require("./event.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Ignore right-click, since that should open the context menu.
function defaultFilter() {
  return !_d3Selection.event.ctrlKey && !_d3Selection.event.button;
}

function defaultContainer() {
  return this.parentNode;
}

function defaultSubject(d) {
  return d == null ? {
    x: _d3Selection.event.x,
    y: _d3Selection.event.y
  } : d;
}

function defaultTouchable() {
  return navigator.maxTouchPoints || "ontouchstart" in this;
}

function _default() {
  var filter = defaultFilter,
      container = defaultContainer,
      subject = defaultSubject,
      touchable = defaultTouchable,
      gestures = {},
      listeners = (0, _d3Dispatch.dispatch)("start", "drag", "end"),
      active = 0,
      mousedownx,
      mousedowny,
      mousemoving,
      touchending,
      clickDistance2 = 0;

  function drag(selection) {
    selection.on("mousedown.drag", mousedowned).filter(touchable).on("touchstart.drag", touchstarted).on("touchmove.drag", touchmoved).on("touchend.drag touchcancel.drag", touchended).style("touch-action", "none").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }

  function mousedowned() {
    if (touchending || !filter.apply(this, arguments)) return;
    var gesture = beforestart("mouse", container.apply(this, arguments), _d3Selection.mouse, this, arguments);
    if (!gesture) return;
    (0, _d3Selection.select)(_d3Selection.event.view).on("mousemove.drag", mousemoved, true).on("mouseup.drag", mouseupped, true);
    (0, _nodrag.default)(_d3Selection.event.view);
    (0, _noevent.nopropagation)();
    mousemoving = false;
    mousedownx = _d3Selection.event.clientX;
    mousedowny = _d3Selection.event.clientY;
    gesture("start");
  }

  function mousemoved() {
    (0, _noevent.default)();

    if (!mousemoving) {
      var dx = _d3Selection.event.clientX - mousedownx,
          dy = _d3Selection.event.clientY - mousedowny;
      mousemoving = dx * dx + dy * dy > clickDistance2;
    }

    gestures.mouse("drag");
  }

  function mouseupped() {
    (0, _d3Selection.select)(_d3Selection.event.view).on("mousemove.drag mouseup.drag", null);
    (0, _nodrag.yesdrag)(_d3Selection.event.view, mousemoving);
    (0, _noevent.default)();
    gestures.mouse("end");
  }

  function touchstarted() {
    if (!filter.apply(this, arguments)) return;
    var touches = _d3Selection.event.changedTouches,
        c = container.apply(this, arguments),
        n = touches.length,
        i,
        gesture;

    for (i = 0; i < n; ++i) {
      if (gesture = beforestart(touches[i].identifier, c, _d3Selection.touch, this, arguments)) {
        (0, _noevent.nopropagation)();
        gesture("start");
      }
    }
  }

  function touchmoved() {
    var touches = _d3Selection.event.changedTouches,
        n = touches.length,
        i,
        gesture;

    for (i = 0; i < n; ++i) {
      if (gesture = gestures[touches[i].identifier]) {
        (0, _noevent.default)();
        gesture("drag");
      }
    }
  }

  function touchended() {
    var touches = _d3Selection.event.changedTouches,
        n = touches.length,
        i,
        gesture;
    if (touchending) clearTimeout(touchending);
    touchending = setTimeout(function () {
      touchending = null;
    }, 500); // Ghost clicks are delayed!

    for (i = 0; i < n; ++i) {
      if (gesture = gestures[touches[i].identifier]) {
        (0, _noevent.nopropagation)();
        gesture("end");
      }
    }
  }

  function beforestart(id, container, point, that, args) {
    var p = point(container, id),
        s,
        dx,
        dy,
        sublisteners = listeners.copy();
    if (!(0, _d3Selection.customEvent)(new _event.default(drag, "beforestart", s, id, active, p[0], p[1], 0, 0, sublisteners), function () {
      if ((_d3Selection.event.subject = s = subject.apply(that, args)) == null) return false;
      dx = s.x - p[0] || 0;
      dy = s.y - p[1] || 0;
      return true;
    })) return;
    return function gesture(type) {
      var p0 = p,
          n;

      switch (type) {
        case "start":
          gestures[id] = gesture, n = active++;
          break;

        case "end":
          delete gestures[id], --active;
        // nobreak

        case "drag":
          p = point(container, id), n = active;
          break;
      }

      (0, _d3Selection.customEvent)(new _event.default(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);
    };
  }

  drag.filter = function (_) {
    return arguments.length ? (filter = typeof _ === "function" ? _ : (0, _constant.default)(!!_), drag) : filter;
  };

  drag.container = function (_) {
    return arguments.length ? (container = typeof _ === "function" ? _ : (0, _constant.default)(_), drag) : container;
  };

  drag.subject = function (_) {
    return arguments.length ? (subject = typeof _ === "function" ? _ : (0, _constant.default)(_), drag) : subject;
  };

  drag.touchable = function (_) {
    return arguments.length ? (touchable = typeof _ === "function" ? _ : (0, _constant.default)(!!_), drag) : touchable;
  };

  drag.on = function () {
    var value = listeners.on.apply(listeners, arguments);
    return value === listeners ? drag : value;
  };

  drag.clickDistance = function (_) {
    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);
  };

  return drag;
}
},{"d3-dispatch":"D3zY","d3-selection":"ysDv","./nodrag.js":"m07T","./noevent.js":"BxLv","./constant.js":"aCvo","./event.js":"qb7E"}],"kkdU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "drag", {
  enumerable: true,
  get: function () {
    return _drag.default;
  }
});
Object.defineProperty(exports, "dragDisable", {
  enumerable: true,
  get: function () {
    return _nodrag.default;
  }
});
Object.defineProperty(exports, "dragEnable", {
  enumerable: true,
  get: function () {
    return _nodrag.yesdrag;
  }
});

var _drag = _interopRequireDefault(require("./drag.js"));

var _nodrag = _interopRequireWildcard(require("./nodrag.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./drag.js":"NgLN","./nodrag.js":"m07T"}],"fV2I":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.extend = extend;

function _default(constructor, factory, prototype) {
  constructor.prototype = factory.prototype = prototype;
  prototype.constructor = constructor;
}

function extend(parent, definition) {
  var prototype = Object.create(parent.prototype);

  for (var key in definition) prototype[key] = definition[key];

  return prototype;
}
},{}],"LIaf":[function(require,module,exports) {

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Color = Color;
exports.default = color;
exports.rgbConvert = rgbConvert;
exports.rgb = rgb;
exports.Rgb = Rgb;
exports.hslConvert = hslConvert;
exports.hsl = hsl;
exports.brighter = exports.darker = void 0;

var _define = _interopRequireWildcard(require("./define.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function Color() {}

var darker = 0.7;
exports.darker = darker;
var brighter = 1 / darker;
exports.brighter = brighter;
var reI = "\\s*([+-]?\\d+)\\s*",
    reN = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",
    reP = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",
    reHex = /^#([0-9a-f]{3,8})$/,
    reRgbInteger = new RegExp("^rgb\\(" + [reI, reI, reI] + "\\)$"),
    reRgbPercent = new RegExp("^rgb\\(" + [reP, reP, reP] + "\\)$"),
    reRgbaInteger = new RegExp("^rgba\\(" + [reI, reI, reI, reN] + "\\)$"),
    reRgbaPercent = new RegExp("^rgba\\(" + [reP, reP, reP, reN] + "\\)$"),
    reHslPercent = new RegExp("^hsl\\(" + [reN, reP, reP] + "\\)$"),
    reHslaPercent = new RegExp("^hsla\\(" + [reN, reP, reP, reN] + "\\)$");
var named = {
  aliceblue: 0xf0f8ff,
  antiquewhite: 0xfaebd7,
  aqua: 0x00ffff,
  aquamarine: 0x7fffd4,
  azure: 0xf0ffff,
  beige: 0xf5f5dc,
  bisque: 0xffe4c4,
  black: 0x000000,
  blanchedalmond: 0xffebcd,
  blue: 0x0000ff,
  blueviolet: 0x8a2be2,
  brown: 0xa52a2a,
  burlywood: 0xdeb887,
  cadetblue: 0x5f9ea0,
  chartreuse: 0x7fff00,
  chocolate: 0xd2691e,
  coral: 0xff7f50,
  cornflowerblue: 0x6495ed,
  cornsilk: 0xfff8dc,
  crimson: 0xdc143c,
  cyan: 0x00ffff,
  darkblue: 0x00008b,
  darkcyan: 0x008b8b,
  darkgoldenrod: 0xb8860b,
  darkgray: 0xa9a9a9,
  darkgreen: 0x006400,
  darkgrey: 0xa9a9a9,
  darkkhaki: 0xbdb76b,
  darkmagenta: 0x8b008b,
  darkolivegreen: 0x556b2f,
  darkorange: 0xff8c00,
  darkorchid: 0x9932cc,
  darkred: 0x8b0000,
  darksalmon: 0xe9967a,
  darkseagreen: 0x8fbc8f,
  darkslateblue: 0x483d8b,
  darkslategray: 0x2f4f4f,
  darkslategrey: 0x2f4f4f,
  darkturquoise: 0x00ced1,
  darkviolet: 0x9400d3,
  deeppink: 0xff1493,
  deepskyblue: 0x00bfff,
  dimgray: 0x696969,
  dimgrey: 0x696969,
  dodgerblue: 0x1e90ff,
  firebrick: 0xb22222,
  floralwhite: 0xfffaf0,
  forestgreen: 0x228b22,
  fuchsia: 0xff00ff,
  gainsboro: 0xdcdcdc,
  ghostwhite: 0xf8f8ff,
  gold: 0xffd700,
  goldenrod: 0xdaa520,
  gray: 0x808080,
  green: 0x008000,
  greenyellow: 0xadff2f,
  grey: 0x808080,
  honeydew: 0xf0fff0,
  hotpink: 0xff69b4,
  indianred: 0xcd5c5c,
  indigo: 0x4b0082,
  ivory: 0xfffff0,
  khaki: 0xf0e68c,
  lavender: 0xe6e6fa,
  lavenderblush: 0xfff0f5,
  lawngreen: 0x7cfc00,
  lemonchiffon: 0xfffacd,
  lightblue: 0xadd8e6,
  lightcoral: 0xf08080,
  lightcyan: 0xe0ffff,
  lightgoldenrodyellow: 0xfafad2,
  lightgray: 0xd3d3d3,
  lightgreen: 0x90ee90,
  lightgrey: 0xd3d3d3,
  lightpink: 0xffb6c1,
  lightsalmon: 0xffa07a,
  lightseagreen: 0x20b2aa,
  lightskyblue: 0x87cefa,
  lightslategray: 0x778899,
  lightslategrey: 0x778899,
  lightsteelblue: 0xb0c4de,
  lightyellow: 0xffffe0,
  lime: 0x00ff00,
  limegreen: 0x32cd32,
  linen: 0xfaf0e6,
  magenta: 0xff00ff,
  maroon: 0x800000,
  mediumaquamarine: 0x66cdaa,
  mediumblue: 0x0000cd,
  mediumorchid: 0xba55d3,
  mediumpurple: 0x9370db,
  mediumseagreen: 0x3cb371,
  mediumslateblue: 0x7b68ee,
  mediumspringgreen: 0x00fa9a,
  mediumturquoise: 0x48d1cc,
  mediumvioletred: 0xc71585,
  midnightblue: 0x191970,
  mintcream: 0xf5fffa,
  mistyrose: 0xffe4e1,
  moccasin: 0xffe4b5,
  navajowhite: 0xffdead,
  navy: 0x000080,
  oldlace: 0xfdf5e6,
  olive: 0x808000,
  olivedrab: 0x6b8e23,
  orange: 0xffa500,
  orangered: 0xff4500,
  orchid: 0xda70d6,
  palegoldenrod: 0xeee8aa,
  palegreen: 0x98fb98,
  paleturquoise: 0xafeeee,
  palevioletred: 0xdb7093,
  papayawhip: 0xffefd5,
  peachpuff: 0xffdab9,
  peru: 0xcd853f,
  pink: 0xffc0cb,
  plum: 0xdda0dd,
  powderblue: 0xb0e0e6,
  purple: 0x800080,
  rebeccapurple: 0x663399,
  red: 0xff0000,
  rosybrown: 0xbc8f8f,
  royalblue: 0x4169e1,
  saddlebrown: 0x8b4513,
  salmon: 0xfa8072,
  sandybrown: 0xf4a460,
  seagreen: 0x2e8b57,
  seashell: 0xfff5ee,
  sienna: 0xa0522d,
  silver: 0xc0c0c0,
  skyblue: 0x87ceeb,
  slateblue: 0x6a5acd,
  slategray: 0x708090,
  slategrey: 0x708090,
  snow: 0xfffafa,
  springgreen: 0x00ff7f,
  steelblue: 0x4682b4,
  tan: 0xd2b48c,
  teal: 0x008080,
  thistle: 0xd8bfd8,
  tomato: 0xff6347,
  turquoise: 0x40e0d0,
  violet: 0xee82ee,
  wheat: 0xf5deb3,
  white: 0xffffff,
  whitesmoke: 0xf5f5f5,
  yellow: 0xffff00,
  yellowgreen: 0x9acd32
};
(0, _define.default)(Color, color, {
  copy: function (channels) {
    return Object.assign(new this.constructor(), this, channels);
  },
  displayable: function () {
    return this.rgb().displayable();
  },
  hex: color_formatHex,
  // Deprecated! Use color.formatHex.
  formatHex: color_formatHex,
  formatHsl: color_formatHsl,
  formatRgb: color_formatRgb,
  toString: color_formatRgb
});

function color_formatHex() {
  return this.rgb().formatHex();
}

function color_formatHsl() {
  return hslConvert(this).formatHsl();
}

function color_formatRgb() {
  return this.rgb().formatRgb();
}

function color(format) {
  var m, l;
  format = (format + "").trim().toLowerCase();
  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000
  : l === 3 ? new Rgb(m >> 8 & 0xf | m >> 4 & 0xf0, m >> 4 & 0xf | m & 0xf0, (m & 0xf) << 4 | m & 0xf, 1) // #f00
  : l === 8 ? new Rgb(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000
  : l === 4 ? new Rgb(m >> 12 & 0xf | m >> 8 & 0xf0, m >> 8 & 0xf | m >> 4 & 0xf0, m >> 4 & 0xf | m & 0xf0, ((m & 0xf) << 4 | m & 0xf) / 0xff) // #f000
  : null // invalid hex
  ) : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)
  : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)
  : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)
  : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)
  : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)
  : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)
  : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins
  : format === "transparent" ? new Rgb(NaN, NaN, NaN, 0) : null;
}

function rgbn(n) {
  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);
}

function rgba(r, g, b, a) {
  if (a <= 0) r = g = b = NaN;
  return new Rgb(r, g, b, a);
}

function rgbConvert(o) {
  if (!(o instanceof Color)) o = color(o);
  if (!o) return new Rgb();
  o = o.rgb();
  return new Rgb(o.r, o.g, o.b, o.opacity);
}

function rgb(r, g, b, opacity) {
  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);
}

function Rgb(r, g, b, opacity) {
  this.r = +r;
  this.g = +g;
  this.b = +b;
  this.opacity = +opacity;
}

(0, _define.default)(Rgb, rgb, (0, _define.extend)(Color, {
  brighter: function (k) {
    k = k == null ? brighter : Math.pow(brighter, k);
    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
  },
  darker: function (k) {
    k = k == null ? darker : Math.pow(darker, k);
    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
  },
  rgb: function () {
    return this;
  },
  displayable: function () {
    return -0.5 <= this.r && this.r < 255.5 && -0.5 <= this.g && this.g < 255.5 && -0.5 <= this.b && this.b < 255.5 && 0 <= this.opacity && this.opacity <= 1;
  },
  hex: rgb_formatHex,
  // Deprecated! Use color.formatHex.
  formatHex: rgb_formatHex,
  formatRgb: rgb_formatRgb,
  toString: rgb_formatRgb
}));

function rgb_formatHex() {
  return "#" + hex(this.r) + hex(this.g) + hex(this.b);
}

function rgb_formatRgb() {
  var a = this.opacity;
  a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
  return (a === 1 ? "rgb(" : "rgba(") + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.b) || 0)) + (a === 1 ? ")" : ", " + a + ")");
}

function hex(value) {
  value = Math.max(0, Math.min(255, Math.round(value) || 0));
  return (value < 16 ? "0" : "") + value.toString(16);
}

function hsla(h, s, l, a) {
  if (a <= 0) h = s = l = NaN;else if (l <= 0 || l >= 1) h = s = NaN;else if (s <= 0) h = NaN;
  return new Hsl(h, s, l, a);
}

function hslConvert(o) {
  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof Color)) o = color(o);
  if (!o) return new Hsl();
  if (o instanceof Hsl) return o;
  o = o.rgb();
  var r = o.r / 255,
      g = o.g / 255,
      b = o.b / 255,
      min = Math.min(r, g, b),
      max = Math.max(r, g, b),
      h = NaN,
      s = max - min,
      l = (max + min) / 2;

  if (s) {
    if (r === max) h = (g - b) / s + (g < b) * 6;else if (g === max) h = (b - r) / s + 2;else h = (r - g) / s + 4;
    s /= l < 0.5 ? max + min : 2 - max - min;
    h *= 60;
  } else {
    s = l > 0 && l < 1 ? 0 : h;
  }

  return new Hsl(h, s, l, o.opacity);
}

function hsl(h, s, l, opacity) {
  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);
}

function Hsl(h, s, l, opacity) {
  this.h = +h;
  this.s = +s;
  this.l = +l;
  this.opacity = +opacity;
}

(0, _define.default)(Hsl, hsl, (0, _define.extend)(Color, {
  brighter: function (k) {
    k = k == null ? brighter : Math.pow(brighter, k);
    return new Hsl(this.h, this.s, this.l * k, this.opacity);
  },
  darker: function (k) {
    k = k == null ? darker : Math.pow(darker, k);
    return new Hsl(this.h, this.s, this.l * k, this.opacity);
  },
  rgb: function () {
    var h = this.h % 360 + (this.h < 0) * 360,
        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,
        l = this.l,
        m2 = l + (l < 0.5 ? l : 1 - l) * s,
        m1 = 2 * l - m2;
    return new Rgb(hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2), hsl2rgb(h, m1, m2), hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2), this.opacity);
  },
  displayable: function () {
    return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1;
  },
  formatHsl: function () {
    var a = this.opacity;
    a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
    return (a === 1 ? "hsl(" : "hsla(") + (this.h || 0) + ", " + (this.s || 0) * 100 + "%, " + (this.l || 0) * 100 + "%" + (a === 1 ? ")" : ", " + a + ")");
  }
}));
/* From FvD 13.37, CSS Color Module Level 3 */

function hsl2rgb(h, m1, m2) {
  return (h < 60 ? m1 + (m2 - m1) * h / 60 : h < 180 ? m2 : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60 : m1) * 255;
}
},{"./define.js":"fV2I"}],"XzID":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rad2deg = exports.deg2rad = void 0;
var deg2rad = Math.PI / 180;
exports.deg2rad = deg2rad;
var rad2deg = 180 / Math.PI;
exports.rad2deg = rad2deg;
},{}],"f7Av":[function(require,module,exports) {

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.gray = gray;
exports.default = lab;
exports.Lab = Lab;
exports.lch = lch;
exports.hcl = hcl;
exports.Hcl = Hcl;

var _define = _interopRequireWildcard(require("./define.js"));

var _color = require("./color.js");

var _math = require("./math.js");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// https://observablehq.com/@mbostock/lab-and-rgb
var K = 18,
    Xn = 0.96422,
    Yn = 1,
    Zn = 0.82521,
    t0 = 4 / 29,
    t1 = 6 / 29,
    t2 = 3 * t1 * t1,
    t3 = t1 * t1 * t1;

function labConvert(o) {
  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);
  if (o instanceof Hcl) return hcl2lab(o);
  if (!(o instanceof _color.Rgb)) o = (0, _color.rgbConvert)(o);
  var r = rgb2lrgb(o.r),
      g = rgb2lrgb(o.g),
      b = rgb2lrgb(o.b),
      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn),
      x,
      z;
  if (r === g && g === b) x = z = y;else {
    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);
    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);
  }
  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);
}

function gray(l, opacity) {
  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);
}

function lab(l, a, b, opacity) {
  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);
}

function Lab(l, a, b, opacity) {
  this.l = +l;
  this.a = +a;
  this.b = +b;
  this.opacity = +opacity;
}

(0, _define.default)(Lab, lab, (0, _define.extend)(_color.Color, {
  brighter: function (k) {
    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);
  },
  darker: function (k) {
    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);
  },
  rgb: function () {
    var y = (this.l + 16) / 116,
        x = isNaN(this.a) ? y : y + this.a / 500,
        z = isNaN(this.b) ? y : y - this.b / 200;
    x = Xn * lab2xyz(x);
    y = Yn * lab2xyz(y);
    z = Zn * lab2xyz(z);
    return new _color.Rgb(lrgb2rgb(3.1338561 * x - 1.6168667 * y - 0.4906146 * z), lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z), lrgb2rgb(0.0719453 * x - 0.2289914 * y + 1.4052427 * z), this.opacity);
  }
}));

function xyz2lab(t) {
  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;
}

function lab2xyz(t) {
  return t > t1 ? t * t * t : t2 * (t - t0);
}

function lrgb2rgb(x) {
  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);
}

function rgb2lrgb(x) {
  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);
}

function hclConvert(o) {
  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);
  if (!(o instanceof Lab)) o = labConvert(o);
  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);

  var h = Math.atan2(o.b, o.a) * _math.rad2deg;

  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);
}

function lch(l, c, h, opacity) {
  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
}

function hcl(h, c, l, opacity) {
  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
}

function Hcl(h, c, l, opacity) {
  this.h = +h;
  this.c = +c;
  this.l = +l;
  this.opacity = +opacity;
}

function hcl2lab(o) {
  if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);
  var h = o.h * _math.deg2rad;
  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);
}

(0, _define.default)(Hcl, hcl, (0, _define.extend)(_color.Color, {
  brighter: function (k) {
    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);
  },
  darker: function (k) {
    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);
  },
  rgb: function () {
    return hcl2lab(this).rgb();
  }
}));
},{"./define.js":"fV2I","./color.js":"LIaf","./math.js":"XzID"}],"CMX9":[function(require,module,exports) {

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = cubehelix;
exports.Cubehelix = Cubehelix;

var _define = _interopRequireWildcard(require("./define.js"));

var _color = require("./color.js");

var _math = require("./math.js");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var A = -0.14861,
    B = +1.78277,
    C = -0.29227,
    D = -0.90649,
    E = +1.97294,
    ED = E * D,
    EB = E * B,
    BC_DA = B * C - D * A;

function cubehelixConvert(o) {
  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof _color.Rgb)) o = (0, _color.rgbConvert)(o);
  var r = o.r / 255,
      g = o.g / 255,
      b = o.b / 255,
      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),
      bl = b - l,
      k = (E * (g - l) - C * bl) / D,
      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)),
      // NaN if l=0 or l=1
  h = s ? Math.atan2(k, bl) * _math.rad2deg - 120 : NaN;
  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);
}

function cubehelix(h, s, l, opacity) {
  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);
}

function Cubehelix(h, s, l, opacity) {
  this.h = +h;
  this.s = +s;
  this.l = +l;
  this.opacity = +opacity;
}

(0, _define.default)(Cubehelix, cubehelix, (0, _define.extend)(_color.Color, {
  brighter: function (k) {
    k = k == null ? _color.brighter : Math.pow(_color.brighter, k);
    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
  },
  darker: function (k) {
    k = k == null ? _color.darker : Math.pow(_color.darker, k);
    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
  },
  rgb: function () {
    var h = isNaN(this.h) ? 0 : (this.h + 120) * _math.deg2rad,
        l = +this.l,
        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),
        cosh = Math.cos(h),
        sinh = Math.sin(h);
    return new _color.Rgb(255 * (l + a * (A * cosh + B * sinh)), 255 * (l + a * (C * cosh + D * sinh)), 255 * (l + a * (E * cosh)), this.opacity);
  }
}));
},{"./define.js":"fV2I","./color.js":"LIaf","./math.js":"XzID"}],"Peej":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "color", {
  enumerable: true,
  get: function () {
    return _color.default;
  }
});
Object.defineProperty(exports, "rgb", {
  enumerable: true,
  get: function () {
    return _color.rgb;
  }
});
Object.defineProperty(exports, "hsl", {
  enumerable: true,
  get: function () {
    return _color.hsl;
  }
});
Object.defineProperty(exports, "lab", {
  enumerable: true,
  get: function () {
    return _lab.default;
  }
});
Object.defineProperty(exports, "hcl", {
  enumerable: true,
  get: function () {
    return _lab.hcl;
  }
});
Object.defineProperty(exports, "lch", {
  enumerable: true,
  get: function () {
    return _lab.lch;
  }
});
Object.defineProperty(exports, "gray", {
  enumerable: true,
  get: function () {
    return _lab.gray;
  }
});
Object.defineProperty(exports, "cubehelix", {
  enumerable: true,
  get: function () {
    return _cubehelix.default;
  }
});

var _color = _interopRequireWildcard(require("./color.js"));

var _lab = _interopRequireWildcard(require("./lab.js"));

var _cubehelix = _interopRequireDefault(require("./cubehelix.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"./color.js":"LIaf","./lab.js":"f7Av","./cubehelix.js":"CMX9"}],"ElXH":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.basis = basis;
exports.default = _default;

function basis(t1, v0, v1, v2, v3) {
  var t2 = t1 * t1,
      t3 = t2 * t1;
  return ((1 - 3 * t1 + 3 * t2 - t3) * v0 + (4 - 6 * t2 + 3 * t3) * v1 + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2 + t3 * v3) / 6;
}

function _default(values) {
  var n = values.length - 1;
  return function (t) {
    var i = t <= 0 ? t = 0 : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),
        v1 = values[i],
        v2 = values[i + 1],
        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,
        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;
    return basis((t - i / n) * n, v0, v1, v2, v3);
  };
}
},{}],"hnXz":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _basis = require("./basis.js");

function _default(values) {
  var n = values.length;
  return function (t) {
    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),
        v0 = values[(i + n - 1) % n],
        v1 = values[i % n],
        v2 = values[(i + 1) % n],
        v3 = values[(i + 2) % n];
    return (0, _basis.basis)((t - i / n) * n, v0, v1, v2, v3);
  };
}
},{"./basis.js":"ElXH"}],"RhzI":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hue = hue;
exports.gamma = gamma;
exports.default = nogamma;

var _constant = _interopRequireDefault(require("./constant.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function linear(a, d) {
  return function (t) {
    return a + t * d;
  };
}

function exponential(a, b, y) {
  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function (t) {
    return Math.pow(a + t * b, y);
  };
}

function hue(a, b) {
  var d = b - a;
  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : (0, _constant.default)(isNaN(a) ? b : a);
}

function gamma(y) {
  return (y = +y) === 1 ? nogamma : function (a, b) {
    return b - a ? exponential(a, b, y) : (0, _constant.default)(isNaN(a) ? b : a);
  };
}

function nogamma(a, b) {
  var d = b - a;
  return d ? linear(a, d) : (0, _constant.default)(isNaN(a) ? b : a);
}
},{"./constant.js":"aCvo"}],"rvVK":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rgbBasisClosed = exports.rgbBasis = exports.default = void 0;

var _d3Color = require("d3-color");

var _basis = _interopRequireDefault(require("./basis.js"));

var _basisClosed = _interopRequireDefault(require("./basisClosed.js"));

var _color = _interopRequireWildcard(require("./color.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function rgbGamma(y) {
  var color = (0, _color.gamma)(y);

  function rgb(start, end) {
    var r = color((start = (0, _d3Color.rgb)(start)).r, (end = (0, _d3Color.rgb)(end)).r),
        g = color(start.g, end.g),
        b = color(start.b, end.b),
        opacity = (0, _color.default)(start.opacity, end.opacity);
    return function (t) {
      start.r = r(t);
      start.g = g(t);
      start.b = b(t);
      start.opacity = opacity(t);
      return start + "";
    };
  }

  rgb.gamma = rgbGamma;
  return rgb;
}(1);

exports.default = _default;

function rgbSpline(spline) {
  return function (colors) {
    var n = colors.length,
        r = new Array(n),
        g = new Array(n),
        b = new Array(n),
        i,
        color;

    for (i = 0; i < n; ++i) {
      color = (0, _d3Color.rgb)(colors[i]);
      r[i] = color.r || 0;
      g[i] = color.g || 0;
      b[i] = color.b || 0;
    }

    r = spline(r);
    g = spline(g);
    b = spline(b);
    color.opacity = 1;
    return function (t) {
      color.r = r(t);
      color.g = g(t);
      color.b = b(t);
      return color + "";
    };
  };
}

var rgbBasis = rgbSpline(_basis.default);
exports.rgbBasis = rgbBasis;
var rgbBasisClosed = rgbSpline(_basisClosed.default);
exports.rgbBasisClosed = rgbBasisClosed;
},{"d3-color":"Peej","./basis.js":"ElXH","./basisClosed.js":"hnXz","./color.js":"RhzI"}],"BOJ5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.isNumberArray = isNumberArray;

function _default(a, b) {
  if (!b) b = [];
  var n = a ? Math.min(b.length, a.length) : 0,
      c = b.slice(),
      i;
  return function (t) {
    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;

    return c;
  };
}

function isNumberArray(x) {
  return ArrayBuffer.isView(x) && !(x instanceof DataView);
}
},{}],"TYZM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.genericArray = genericArray;

var _value = _interopRequireDefault(require("./value.js"));

var _numberArray = _interopRequireWildcard(require("./numberArray.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(a, b) {
  return ((0, _numberArray.isNumberArray)(b) ? _numberArray.default : genericArray)(a, b);
}

function genericArray(a, b) {
  var nb = b ? b.length : 0,
      na = a ? Math.min(nb, a.length) : 0,
      x = new Array(na),
      c = new Array(nb),
      i;

  for (i = 0; i < na; ++i) x[i] = (0, _value.default)(a[i], b[i]);

  for (; i < nb; ++i) c[i] = b[i];

  return function (t) {
    for (i = 0; i < na; ++i) c[i] = x[i](t);

    return c;
  };
}
},{"./value.js":"gzcD","./numberArray.js":"BOJ5"}],"jEDF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  var d = new Date();
  return a = +a, b = +b, function (t) {
    return d.setTime(a * (1 - t) + b * t), d;
  };
}
},{}],"YNf8":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  return a = +a, b = +b, function (t) {
    return a * (1 - t) + b * t;
  };
}
},{}],"iJdZ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _value = _interopRequireDefault(require("./value.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(a, b) {
  var i = {},
      c = {},
      k;
  if (a === null || typeof a !== "object") a = {};
  if (b === null || typeof b !== "object") b = {};

  for (k in b) {
    if (k in a) {
      i[k] = (0, _value.default)(a[k], b[k]);
    } else {
      c[k] = b[k];
    }
  }

  return function (t) {
    for (k in i) c[k] = i[k](t);

    return c;
  };
}
},{"./value.js":"gzcD"}],"nK0E":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _number = _interopRequireDefault(require("./number.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,
    reB = new RegExp(reA.source, "g");

function zero(b) {
  return function () {
    return b;
  };
}

function one(b) {
  return function (t) {
    return b(t) + "";
  };
}

function _default(a, b) {
  var bi = reA.lastIndex = reB.lastIndex = 0,
      // scan index for next number in b
  am,
      // current match in a
  bm,
      // current match in b
  bs,
      // string preceding current number in b, if any
  i = -1,
      // index in s
  s = [],
      // string constants and placeholders
  q = []; // number interpolators
  // Coerce inputs to strings.

  a = a + "", b = b + ""; // Interpolate pairs of numbers in a & b.

  while ((am = reA.exec(a)) && (bm = reB.exec(b))) {
    if ((bs = bm.index) > bi) {
      // a string precedes the next number in b
      bs = b.slice(bi, bs);
      if (s[i]) s[i] += bs; // coalesce with previous string
      else s[++i] = bs;
    }

    if ((am = am[0]) === (bm = bm[0])) {
      // numbers in a & b match
      if (s[i]) s[i] += bm; // coalesce with previous string
      else s[++i] = bm;
    } else {
      // interpolate non-matching numbers
      s[++i] = null;
      q.push({
        i: i,
        x: (0, _number.default)(am, bm)
      });
    }

    bi = reB.lastIndex;
  } // Add remains of b.


  if (bi < b.length) {
    bs = b.slice(bi);
    if (s[i]) s[i] += bs; // coalesce with previous string
    else s[++i] = bs;
  } // Special optimization for only a single match.
  // Otherwise, interpolate each of the numbers and rejoin the string.


  return s.length < 2 ? q[0] ? one(q[0].x) : zero(b) : (b = q.length, function (t) {
    for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);

    return s.join("");
  });
}
},{"./number.js":"YNf8"}],"gzcD":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Color = require("d3-color");

var _rgb = _interopRequireDefault(require("./rgb.js"));

var _array = require("./array.js");

var _date = _interopRequireDefault(require("./date.js"));

var _number = _interopRequireDefault(require("./number.js"));

var _object = _interopRequireDefault(require("./object.js"));

var _string = _interopRequireDefault(require("./string.js"));

var _constant = _interopRequireDefault(require("./constant.js"));

var _numberArray = _interopRequireWildcard(require("./numberArray.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(a, b) {
  var t = typeof b,
      c;
  return b == null || t === "boolean" ? (0, _constant.default)(b) : (t === "number" ? _number.default : t === "string" ? (c = (0, _d3Color.color)(b)) ? (b = c, _rgb.default) : _string.default : b instanceof _d3Color.color ? _rgb.default : b instanceof Date ? _date.default : (0, _numberArray.isNumberArray)(b) ? _numberArray.default : Array.isArray(b) ? _array.genericArray : typeof b.valueOf !== "function" && typeof b.toString !== "function" || isNaN(b) ? _object.default : _number.default)(a, b);
}
},{"d3-color":"Peej","./rgb.js":"rvVK","./array.js":"TYZM","./date.js":"jEDF","./number.js":"YNf8","./object.js":"iJdZ","./string.js":"nK0E","./constant.js":"aCvo","./numberArray.js":"BOJ5"}],"B1w8":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(range) {
  var n = range.length;
  return function (t) {
    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];
  };
}
},{}],"ZrPS":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _color = require("./color.js");

function _default(a, b) {
  var i = (0, _color.hue)(+a, +b);
  return function (t) {
    var x = i(t);
    return x - 360 * Math.floor(x / 360);
  };
}
},{"./color.js":"RhzI"}],"nXvs":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  return a = +a, b = +b, function (t) {
    return Math.round(a * (1 - t) + b * t);
  };
}
},{}],"UXwK":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.identity = void 0;
var degrees = 180 / Math.PI;
var identity = {
  translateX: 0,
  translateY: 0,
  rotate: 0,
  skewX: 0,
  scaleX: 1,
  scaleY: 1
};
exports.identity = identity;

function _default(a, b, c, d, e, f) {
  var scaleX, scaleY, skewX;
  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;
  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;
  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;
  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;
  return {
    translateX: e,
    translateY: f,
    rotate: Math.atan2(b, a) * degrees,
    skewX: Math.atan(skewX) * degrees,
    scaleX: scaleX,
    scaleY: scaleY
  };
}
},{}],"LVjk":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.parseCss = parseCss;
exports.parseSvg = parseSvg;

var _decompose = _interopRequireWildcard(require("./decompose.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var cssNode, cssRoot, cssView, svgNode;

function parseCss(value) {
  if (value === "none") return _decompose.identity;
  if (!cssNode) cssNode = document.createElement("DIV"), cssRoot = document.documentElement, cssView = document.defaultView;
  cssNode.style.transform = value;
  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue("transform");
  cssRoot.removeChild(cssNode);
  value = value.slice(7, -1).split(",");
  return (0, _decompose.default)(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);
}

function parseSvg(value) {
  if (value == null) return _decompose.identity;
  if (!svgNode) svgNode = document.createElementNS("http://www.w3.org/2000/svg", "g");
  svgNode.setAttribute("transform", value);
  if (!(value = svgNode.transform.baseVal.consolidate())) return _decompose.identity;
  value = value.matrix;
  return (0, _decompose.default)(value.a, value.b, value.c, value.d, value.e, value.f);
}
},{"./decompose.js":"UXwK"}],"v4Xl":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.interpolateTransformSvg = exports.interpolateTransformCss = void 0;

var _number = _interopRequireDefault(require("../number.js"));

var _parse = require("./parse.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function interpolateTransform(parse, pxComma, pxParen, degParen) {
  function pop(s) {
    return s.length ? s.pop() + " " : "";
  }

  function translate(xa, ya, xb, yb, s, q) {
    if (xa !== xb || ya !== yb) {
      var i = s.push("translate(", null, pxComma, null, pxParen);
      q.push({
        i: i - 4,
        x: (0, _number.default)(xa, xb)
      }, {
        i: i - 2,
        x: (0, _number.default)(ya, yb)
      });
    } else if (xb || yb) {
      s.push("translate(" + xb + pxComma + yb + pxParen);
    }
  }

  function rotate(a, b, s, q) {
    if (a !== b) {
      if (a - b > 180) b += 360;else if (b - a > 180) a += 360; // shortest path

      q.push({
        i: s.push(pop(s) + "rotate(", null, degParen) - 2,
        x: (0, _number.default)(a, b)
      });
    } else if (b) {
      s.push(pop(s) + "rotate(" + b + degParen);
    }
  }

  function skewX(a, b, s, q) {
    if (a !== b) {
      q.push({
        i: s.push(pop(s) + "skewX(", null, degParen) - 2,
        x: (0, _number.default)(a, b)
      });
    } else if (b) {
      s.push(pop(s) + "skewX(" + b + degParen);
    }
  }

  function scale(xa, ya, xb, yb, s, q) {
    if (xa !== xb || ya !== yb) {
      var i = s.push(pop(s) + "scale(", null, ",", null, ")");
      q.push({
        i: i - 4,
        x: (0, _number.default)(xa, xb)
      }, {
        i: i - 2,
        x: (0, _number.default)(ya, yb)
      });
    } else if (xb !== 1 || yb !== 1) {
      s.push(pop(s) + "scale(" + xb + "," + yb + ")");
    }
  }

  return function (a, b) {
    var s = [],
        // string constants and placeholders
    q = []; // number interpolators

    a = parse(a), b = parse(b);
    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);
    rotate(a.rotate, b.rotate, s, q);
    skewX(a.skewX, b.skewX, s, q);
    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);
    a = b = null; // gc

    return function (t) {
      var i = -1,
          n = q.length,
          o;

      while (++i < n) s[(o = q[i]).i] = o.x(t);

      return s.join("");
    };
  };
}

var interpolateTransformCss = interpolateTransform(_parse.parseCss, "px, ", "px)", "deg)");
exports.interpolateTransformCss = interpolateTransformCss;
var interpolateTransformSvg = interpolateTransform(_parse.parseSvg, ", ", ")", ")");
exports.interpolateTransformSvg = interpolateTransformSvg;
},{"../number.js":"YNf8","./parse.js":"LVjk"}],"jU1v":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
var rho = Math.SQRT2,
    rho2 = 2,
    rho4 = 4,
    epsilon2 = 1e-12;

function cosh(x) {
  return ((x = Math.exp(x)) + 1 / x) / 2;
}

function sinh(x) {
  return ((x = Math.exp(x)) - 1 / x) / 2;
}

function tanh(x) {
  return ((x = Math.exp(2 * x)) - 1) / (x + 1);
} // p0 = [ux0, uy0, w0]
// p1 = [ux1, uy1, w1]


function _default(p0, p1) {
  var ux0 = p0[0],
      uy0 = p0[1],
      w0 = p0[2],
      ux1 = p1[0],
      uy1 = p1[1],
      w1 = p1[2],
      dx = ux1 - ux0,
      dy = uy1 - uy0,
      d2 = dx * dx + dy * dy,
      i,
      S; // Special case for u0 ≅ u1.

  if (d2 < epsilon2) {
    S = Math.log(w1 / w0) / rho;

    i = function (t) {
      return [ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(rho * t * S)];
    };
  } // General case.
  else {
      var d1 = Math.sqrt(d2),
          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),
          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),
          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),
          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);
      S = (r1 - r0) / rho;

      i = function (t) {
        var s = t * S,
            coshr0 = cosh(r0),
            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));
        return [ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / cosh(rho * s + r0)];
      };
    }

  i.duration = S * 1000;
  return i;
}
},{}],"LdeI":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hslLong = exports.default = void 0;

var _d3Color = require("d3-color");

var _color = _interopRequireWildcard(require("./color.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function hsl(hue) {
  return function (start, end) {
    var h = hue((start = (0, _d3Color.hsl)(start)).h, (end = (0, _d3Color.hsl)(end)).h),
        s = (0, _color.default)(start.s, end.s),
        l = (0, _color.default)(start.l, end.l),
        opacity = (0, _color.default)(start.opacity, end.opacity);
    return function (t) {
      start.h = h(t);
      start.s = s(t);
      start.l = l(t);
      start.opacity = opacity(t);
      return start + "";
    };
  };
}

var _default = hsl(_color.hue);

exports.default = _default;
var hslLong = hsl(_color.default);
exports.hslLong = hslLong;
},{"d3-color":"Peej","./color.js":"RhzI"}],"rghB":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = lab;

var _d3Color = require("d3-color");

var _color = _interopRequireDefault(require("./color.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function lab(start, end) {
  var l = (0, _color.default)((start = (0, _d3Color.lab)(start)).l, (end = (0, _d3Color.lab)(end)).l),
      a = (0, _color.default)(start.a, end.a),
      b = (0, _color.default)(start.b, end.b),
      opacity = (0, _color.default)(start.opacity, end.opacity);
  return function (t) {
    start.l = l(t);
    start.a = a(t);
    start.b = b(t);
    start.opacity = opacity(t);
    return start + "";
  };
}
},{"d3-color":"Peej","./color.js":"RhzI"}],"dxPN":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hclLong = exports.default = void 0;

var _d3Color = require("d3-color");

var _color = _interopRequireWildcard(require("./color.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function hcl(hue) {
  return function (start, end) {
    var h = hue((start = (0, _d3Color.hcl)(start)).h, (end = (0, _d3Color.hcl)(end)).h),
        c = (0, _color.default)(start.c, end.c),
        l = (0, _color.default)(start.l, end.l),
        opacity = (0, _color.default)(start.opacity, end.opacity);
    return function (t) {
      start.h = h(t);
      start.c = c(t);
      start.l = l(t);
      start.opacity = opacity(t);
      return start + "";
    };
  };
}

var _default = hcl(_color.hue);

exports.default = _default;
var hclLong = hcl(_color.default);
exports.hclLong = hclLong;
},{"d3-color":"Peej","./color.js":"RhzI"}],"X3VV":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cubehelixLong = exports.default = void 0;

var _d3Color = require("d3-color");

var _color = _interopRequireWildcard(require("./color.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function cubehelix(hue) {
  return function cubehelixGamma(y) {
    y = +y;

    function cubehelix(start, end) {
      var h = hue((start = (0, _d3Color.cubehelix)(start)).h, (end = (0, _d3Color.cubehelix)(end)).h),
          s = (0, _color.default)(start.s, end.s),
          l = (0, _color.default)(start.l, end.l),
          opacity = (0, _color.default)(start.opacity, end.opacity);
      return function (t) {
        start.h = h(t);
        start.s = s(t);
        start.l = l(Math.pow(t, y));
        start.opacity = opacity(t);
        return start + "";
      };
    }

    cubehelix.gamma = cubehelixGamma;
    return cubehelix;
  }(1);
}

var _default = cubehelix(_color.hue);

exports.default = _default;
var cubehelixLong = cubehelix(_color.default);
exports.cubehelixLong = cubehelixLong;
},{"d3-color":"Peej","./color.js":"RhzI"}],"xtkP":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = piecewise;

function piecewise(interpolate, values) {
  var i = 0,
      n = values.length - 1,
      v = values[0],
      I = new Array(n < 0 ? 0 : n);

  while (i < n) I[i] = interpolate(v, v = values[++i]);

  return function (t) {
    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));
    return I[i](t - i);
  };
}
},{}],"Oe1t":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(interpolator, n) {
  var samples = new Array(n);

  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));

  return samples;
}
},{}],"k9aH":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "interpolate", {
  enumerable: true,
  get: function () {
    return _value.default;
  }
});
Object.defineProperty(exports, "interpolateArray", {
  enumerable: true,
  get: function () {
    return _array.default;
  }
});
Object.defineProperty(exports, "interpolateBasis", {
  enumerable: true,
  get: function () {
    return _basis.default;
  }
});
Object.defineProperty(exports, "interpolateBasisClosed", {
  enumerable: true,
  get: function () {
    return _basisClosed.default;
  }
});
Object.defineProperty(exports, "interpolateDate", {
  enumerable: true,
  get: function () {
    return _date.default;
  }
});
Object.defineProperty(exports, "interpolateDiscrete", {
  enumerable: true,
  get: function () {
    return _discrete.default;
  }
});
Object.defineProperty(exports, "interpolateHue", {
  enumerable: true,
  get: function () {
    return _hue.default;
  }
});
Object.defineProperty(exports, "interpolateNumber", {
  enumerable: true,
  get: function () {
    return _number.default;
  }
});
Object.defineProperty(exports, "interpolateNumberArray", {
  enumerable: true,
  get: function () {
    return _numberArray.default;
  }
});
Object.defineProperty(exports, "interpolateObject", {
  enumerable: true,
  get: function () {
    return _object.default;
  }
});
Object.defineProperty(exports, "interpolateRound", {
  enumerable: true,
  get: function () {
    return _round.default;
  }
});
Object.defineProperty(exports, "interpolateString", {
  enumerable: true,
  get: function () {
    return _string.default;
  }
});
Object.defineProperty(exports, "interpolateTransformCss", {
  enumerable: true,
  get: function () {
    return _index.interpolateTransformCss;
  }
});
Object.defineProperty(exports, "interpolateTransformSvg", {
  enumerable: true,
  get: function () {
    return _index.interpolateTransformSvg;
  }
});
Object.defineProperty(exports, "interpolateZoom", {
  enumerable: true,
  get: function () {
    return _zoom.default;
  }
});
Object.defineProperty(exports, "interpolateRgb", {
  enumerable: true,
  get: function () {
    return _rgb.default;
  }
});
Object.defineProperty(exports, "interpolateRgbBasis", {
  enumerable: true,
  get: function () {
    return _rgb.rgbBasis;
  }
});
Object.defineProperty(exports, "interpolateRgbBasisClosed", {
  enumerable: true,
  get: function () {
    return _rgb.rgbBasisClosed;
  }
});
Object.defineProperty(exports, "interpolateHsl", {
  enumerable: true,
  get: function () {
    return _hsl.default;
  }
});
Object.defineProperty(exports, "interpolateHslLong", {
  enumerable: true,
  get: function () {
    return _hsl.hslLong;
  }
});
Object.defineProperty(exports, "interpolateLab", {
  enumerable: true,
  get: function () {
    return _lab.default;
  }
});
Object.defineProperty(exports, "interpolateHcl", {
  enumerable: true,
  get: function () {
    return _hcl.default;
  }
});
Object.defineProperty(exports, "interpolateHclLong", {
  enumerable: true,
  get: function () {
    return _hcl.hclLong;
  }
});
Object.defineProperty(exports, "interpolateCubehelix", {
  enumerable: true,
  get: function () {
    return _cubehelix.default;
  }
});
Object.defineProperty(exports, "interpolateCubehelixLong", {
  enumerable: true,
  get: function () {
    return _cubehelix.cubehelixLong;
  }
});
Object.defineProperty(exports, "piecewise", {
  enumerable: true,
  get: function () {
    return _piecewise.default;
  }
});
Object.defineProperty(exports, "quantize", {
  enumerable: true,
  get: function () {
    return _quantize.default;
  }
});

var _value = _interopRequireDefault(require("./value.js"));

var _array = _interopRequireDefault(require("./array.js"));

var _basis = _interopRequireDefault(require("./basis.js"));

var _basisClosed = _interopRequireDefault(require("./basisClosed.js"));

var _date = _interopRequireDefault(require("./date.js"));

var _discrete = _interopRequireDefault(require("./discrete.js"));

var _hue = _interopRequireDefault(require("./hue.js"));

var _number = _interopRequireDefault(require("./number.js"));

var _numberArray = _interopRequireDefault(require("./numberArray.js"));

var _object = _interopRequireDefault(require("./object.js"));

var _round = _interopRequireDefault(require("./round.js"));

var _string = _interopRequireDefault(require("./string.js"));

var _index = require("./transform/index.js");

var _zoom = _interopRequireDefault(require("./zoom.js"));

var _rgb = _interopRequireWildcard(require("./rgb.js"));

var _hsl = _interopRequireWildcard(require("./hsl.js"));

var _lab = _interopRequireDefault(require("./lab.js"));

var _hcl = _interopRequireWildcard(require("./hcl.js"));

var _cubehelix = _interopRequireWildcard(require("./cubehelix.js"));

var _piecewise = _interopRequireDefault(require("./piecewise.js"));

var _quantize = _interopRequireDefault(require("./quantize.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./value.js":"gzcD","./array.js":"TYZM","./basis.js":"ElXH","./basisClosed.js":"hnXz","./date.js":"jEDF","./discrete.js":"B1w8","./hue.js":"ZrPS","./number.js":"YNf8","./numberArray.js":"BOJ5","./object.js":"iJdZ","./round.js":"nXvs","./string.js":"nK0E","./transform/index.js":"v4Xl","./zoom.js":"jU1v","./rgb.js":"rvVK","./hsl.js":"LdeI","./lab.js":"rghB","./hcl.js":"dxPN","./cubehelix.js":"X3VV","./piecewise.js":"xtkP","./quantize.js":"Oe1t"}],"ea66":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.now = now;
exports.Timer = Timer;
exports.timer = timer;
exports.timerFlush = timerFlush;
var frame = 0,
    // is an animation frame pending?
timeout = 0,
    // is a timeout pending?
interval = 0,
    // are any timers active?
pokeDelay = 1000,
    // how frequently we check for clock skew
taskHead,
    taskTail,
    clockLast = 0,
    clockNow = 0,
    clockSkew = 0,
    clock = typeof performance === "object" && performance.now ? performance : Date,
    setFrame = typeof window === "object" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function (f) {
  setTimeout(f, 17);
};

function now() {
  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);
}

function clearNow() {
  clockNow = 0;
}

function Timer() {
  this._call = this._time = this._next = null;
}

Timer.prototype = timer.prototype = {
  constructor: Timer,
  restart: function (callback, delay, time) {
    if (typeof callback !== "function") throw new TypeError("callback is not a function");
    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);

    if (!this._next && taskTail !== this) {
      if (taskTail) taskTail._next = this;else taskHead = this;
      taskTail = this;
    }

    this._call = callback;
    this._time = time;
    sleep();
  },
  stop: function () {
    if (this._call) {
      this._call = null;
      this._time = Infinity;
      sleep();
    }
  }
};

function timer(callback, delay, time) {
  var t = new Timer();
  t.restart(callback, delay, time);
  return t;
}

function timerFlush() {
  now(); // Get the current time, if not already set.

  ++frame; // Pretend we’ve set an alarm, if we haven’t already.

  var t = taskHead,
      e;

  while (t) {
    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);
    t = t._next;
  }

  --frame;
}

function wake() {
  clockNow = (clockLast = clock.now()) + clockSkew;
  frame = timeout = 0;

  try {
    timerFlush();
  } finally {
    frame = 0;
    nap();
    clockNow = 0;
  }
}

function poke() {
  var now = clock.now(),
      delay = now - clockLast;
  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;
}

function nap() {
  var t0,
      t1 = taskHead,
      t2,
      time = Infinity;

  while (t1) {
    if (t1._call) {
      if (time > t1._time) time = t1._time;
      t0 = t1, t1 = t1._next;
    } else {
      t2 = t1._next, t1._next = null;
      t1 = t0 ? t0._next = t2 : taskHead = t2;
    }
  }

  taskTail = t0;
  sleep(time);
}

function sleep(time) {
  if (frame) return; // Soonest alarm already set, or will be.

  if (timeout) timeout = clearTimeout(timeout);
  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.

  if (delay > 24) {
    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);
    if (interval) interval = clearInterval(interval);
  } else {
    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);
    frame = 1, setFrame(wake);
  }
}
},{}],"jIZm":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _timer = require("./timer.js");

function _default(callback, delay, time) {
  var t = new _timer.Timer();
  delay = delay == null ? 0 : +delay;
  t.restart(function (elapsed) {
    t.stop();
    callback(elapsed + delay);
  }, delay, time);
  return t;
}
},{"./timer.js":"ea66"}],"QZ3s":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _timer = require("./timer.js");

function _default(callback, delay, time) {
  var t = new _timer.Timer(),
      total = delay;
  if (delay == null) return t.restart(callback, delay, time), t;
  delay = +delay, time = time == null ? (0, _timer.now)() : +time;
  t.restart(function tick(elapsed) {
    elapsed += total;
    t.restart(tick, total += delay, time);
    callback(elapsed);
  }, delay, time);
  return t;
}
},{"./timer.js":"ea66"}],"rdzS":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "now", {
  enumerable: true,
  get: function () {
    return _timer.now;
  }
});
Object.defineProperty(exports, "timer", {
  enumerable: true,
  get: function () {
    return _timer.timer;
  }
});
Object.defineProperty(exports, "timerFlush", {
  enumerable: true,
  get: function () {
    return _timer.timerFlush;
  }
});
Object.defineProperty(exports, "timeout", {
  enumerable: true,
  get: function () {
    return _timeout.default;
  }
});
Object.defineProperty(exports, "interval", {
  enumerable: true,
  get: function () {
    return _interval.default;
  }
});

var _timer = require("./timer.js");

var _timeout = _interopRequireDefault(require("./timeout.js"));

var _interval = _interopRequireDefault(require("./interval.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./timer.js":"ea66","./timeout.js":"jIZm","./interval.js":"QZ3s"}],"nqGJ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.init = init;
exports.set = set;
exports.get = get;
exports.ENDED = exports.ENDING = exports.RUNNING = exports.STARTED = exports.STARTING = exports.SCHEDULED = exports.CREATED = void 0;

var _d3Dispatch = require("d3-dispatch");

var _d3Timer = require("d3-timer");

var emptyOn = (0, _d3Dispatch.dispatch)("start", "end", "cancel", "interrupt");
var emptyTween = [];
var CREATED = 0;
exports.CREATED = CREATED;
var SCHEDULED = 1;
exports.SCHEDULED = SCHEDULED;
var STARTING = 2;
exports.STARTING = STARTING;
var STARTED = 3;
exports.STARTED = STARTED;
var RUNNING = 4;
exports.RUNNING = RUNNING;
var ENDING = 5;
exports.ENDING = ENDING;
var ENDED = 6;
exports.ENDED = ENDED;

function _default(node, name, id, index, group, timing) {
  var schedules = node.__transition;
  if (!schedules) node.__transition = {};else if (id in schedules) return;
  create(node, id, {
    name: name,
    index: index,
    // For context during callback.
    group: group,
    // For context during callback.
    on: emptyOn,
    tween: emptyTween,
    time: timing.time,
    delay: timing.delay,
    duration: timing.duration,
    ease: timing.ease,
    timer: null,
    state: CREATED
  });
}

function init(node, id) {
  var schedule = get(node, id);
  if (schedule.state > CREATED) throw new Error("too late; already scheduled");
  return schedule;
}

function set(node, id) {
  var schedule = get(node, id);
  if (schedule.state > STARTED) throw new Error("too late; already running");
  return schedule;
}

function get(node, id) {
  var schedule = node.__transition;
  if (!schedule || !(schedule = schedule[id])) throw new Error("transition not found");
  return schedule;
}

function create(node, id, self) {
  var schedules = node.__transition,
      tween; // Initialize the self timer when the transition is created.
  // Note the actual delay is not known until the first callback!

  schedules[id] = self;
  self.timer = (0, _d3Timer.timer)(schedule, 0, self.time);

  function schedule(elapsed) {
    self.state = SCHEDULED;
    self.timer.restart(start, self.delay, self.time); // If the elapsed delay is less than our first sleep, start immediately.

    if (self.delay <= elapsed) start(elapsed - self.delay);
  }

  function start(elapsed) {
    var i, j, n, o; // If the state is not SCHEDULED, then we previously errored on start.

    if (self.state !== SCHEDULED) return stop();

    for (i in schedules) {
      o = schedules[i];
      if (o.name !== self.name) continue; // While this element already has a starting transition during this frame,
      // defer starting an interrupting transition until that transition has a
      // chance to tick (and possibly end); see d3/d3-transition#54!

      if (o.state === STARTED) return (0, _d3Timer.timeout)(start); // Interrupt the active transition, if any.

      if (o.state === RUNNING) {
        o.state = ENDED;
        o.timer.stop();
        o.on.call("interrupt", node, node.__data__, o.index, o.group);
        delete schedules[i];
      } // Cancel any pre-empted transitions.
      else if (+i < id) {
          o.state = ENDED;
          o.timer.stop();
          o.on.call("cancel", node, node.__data__, o.index, o.group);
          delete schedules[i];
        }
    } // Defer the first tick to end of the current frame; see d3/d3#1576.
    // Note the transition may be canceled after start and before the first tick!
    // Note this must be scheduled before the start event; see d3/d3-transition#16!
    // Assuming this is successful, subsequent callbacks go straight to tick.


    (0, _d3Timer.timeout)(function () {
      if (self.state === STARTED) {
        self.state = RUNNING;
        self.timer.restart(tick, self.delay, self.time);
        tick(elapsed);
      }
    }); // Dispatch the start event.
    // Note this must be done before the tween are initialized.

    self.state = STARTING;
    self.on.call("start", node, node.__data__, self.index, self.group);
    if (self.state !== STARTING) return; // interrupted

    self.state = STARTED; // Initialize the tween, deleting null tween.

    tween = new Array(n = self.tween.length);

    for (i = 0, j = -1; i < n; ++i) {
      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {
        tween[++j] = o;
      }
    }

    tween.length = j + 1;
  }

  function tick(elapsed) {
    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),
        i = -1,
        n = tween.length;

    while (++i < n) {
      tween[i].call(node, t);
    } // Dispatch the end event.


    if (self.state === ENDING) {
      self.on.call("end", node, node.__data__, self.index, self.group);
      stop();
    }
  }

  function stop() {
    self.state = ENDED;
    self.timer.stop();
    delete schedules[id];

    for (var i in schedules) return; // eslint-disable-line no-unused-vars


    delete node.__transition;
  }
}
},{"d3-dispatch":"D3zY","d3-timer":"rdzS"}],"fDNN":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _schedule = require("./transition/schedule.js");

function _default(node, name) {
  var schedules = node.__transition,
      schedule,
      active,
      empty = true,
      i;
  if (!schedules) return;
  name = name == null ? null : name + "";

  for (i in schedules) {
    if ((schedule = schedules[i]).name !== name) {
      empty = false;
      continue;
    }

    active = schedule.state > _schedule.STARTING && schedule.state < _schedule.ENDING;
    schedule.state = _schedule.ENDED;
    schedule.timer.stop();
    schedule.on.call(active ? "interrupt" : "cancel", node, node.__data__, schedule.index, schedule.group);
    delete schedules[i];
  }

  if (empty) delete node.__transition;
}
},{"./transition/schedule.js":"nqGJ"}],"cQLj":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _interrupt = _interopRequireDefault(require("../interrupt.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(name) {
  return this.each(function () {
    (0, _interrupt.default)(this, name);
  });
}
},{"../interrupt.js":"fDNN"}],"jGA0":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.tweenValue = tweenValue;

var _schedule = require("./schedule.js");

function tweenRemove(id, name) {
  var tween0, tween1;
  return function () {
    var schedule = (0, _schedule.set)(this, id),
        tween = schedule.tween; // If this node shared tween with the previous node,
    // just assign the updated shared tween and we’re done!
    // Otherwise, copy-on-write.

    if (tween !== tween0) {
      tween1 = tween0 = tween;

      for (var i = 0, n = tween1.length; i < n; ++i) {
        if (tween1[i].name === name) {
          tween1 = tween1.slice();
          tween1.splice(i, 1);
          break;
        }
      }
    }

    schedule.tween = tween1;
  };
}

function tweenFunction(id, name, value) {
  var tween0, tween1;
  if (typeof value !== "function") throw new Error();
  return function () {
    var schedule = (0, _schedule.set)(this, id),
        tween = schedule.tween; // If this node shared tween with the previous node,
    // just assign the updated shared tween and we’re done!
    // Otherwise, copy-on-write.

    if (tween !== tween0) {
      tween1 = (tween0 = tween).slice();

      for (var t = {
        name: name,
        value: value
      }, i = 0, n = tween1.length; i < n; ++i) {
        if (tween1[i].name === name) {
          tween1[i] = t;
          break;
        }
      }

      if (i === n) tween1.push(t);
    }

    schedule.tween = tween1;
  };
}

function _default(name, value) {
  var id = this._id;
  name += "";

  if (arguments.length < 2) {
    var tween = (0, _schedule.get)(this.node(), id).tween;

    for (var i = 0, n = tween.length, t; i < n; ++i) {
      if ((t = tween[i]).name === name) {
        return t.value;
      }
    }

    return null;
  }

  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));
}

function tweenValue(transition, name, value) {
  var id = transition._id;
  transition.each(function () {
    var schedule = (0, _schedule.set)(this, id);
    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);
  });
  return function (node) {
    return (0, _schedule.get)(node, id).value[name];
  };
}
},{"./schedule.js":"nqGJ"}],"EwAl":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Color = require("d3-color");

var _d3Interpolate = require("d3-interpolate");

function _default(a, b) {
  var c;
  return (typeof b === "number" ? _d3Interpolate.interpolateNumber : b instanceof _d3Color.color ? _d3Interpolate.interpolateRgb : (c = (0, _d3Color.color)(b)) ? (b = c, _d3Interpolate.interpolateRgb) : _d3Interpolate.interpolateString)(a, b);
}
},{"d3-color":"Peej","d3-interpolate":"k9aH"}],"Edhf":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Interpolate = require("d3-interpolate");

var _d3Selection = require("d3-selection");

var _tween = require("./tween.js");

var _interpolate = _interopRequireDefault(require("./interpolate.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function attrRemove(name) {
  return function () {
    this.removeAttribute(name);
  };
}

function attrRemoveNS(fullname) {
  return function () {
    this.removeAttributeNS(fullname.space, fullname.local);
  };
}

function attrConstant(name, interpolate, value1) {
  var string00,
      string1 = value1 + "",
      interpolate0;
  return function () {
    var string0 = this.getAttribute(name);
    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);
  };
}

function attrConstantNS(fullname, interpolate, value1) {
  var string00,
      string1 = value1 + "",
      interpolate0;
  return function () {
    var string0 = this.getAttributeNS(fullname.space, fullname.local);
    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);
  };
}

function attrFunction(name, interpolate, value) {
  var string00, string10, interpolate0;
  return function () {
    var string0,
        value1 = value(this),
        string1;
    if (value1 == null) return void this.removeAttribute(name);
    string0 = this.getAttribute(name);
    string1 = value1 + "";
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
  };
}

function attrFunctionNS(fullname, interpolate, value) {
  var string00, string10, interpolate0;
  return function () {
    var string0,
        value1 = value(this),
        string1;
    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);
    string0 = this.getAttributeNS(fullname.space, fullname.local);
    string1 = value1 + "";
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
  };
}

function _default(name, value) {
  var fullname = (0, _d3Selection.namespace)(name),
      i = fullname === "transform" ? _d3Interpolate.interpolateTransformSvg : _interpolate.default;
  return this.attrTween(name, typeof value === "function" ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, (0, _tween.tweenValue)(this, "attr." + name, value)) : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname) : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));
}
},{"d3-interpolate":"k9aH","d3-selection":"ysDv","./tween.js":"jGA0","./interpolate.js":"EwAl"}],"bknt":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Selection = require("d3-selection");

function attrInterpolate(name, i) {
  return function (t) {
    this.setAttribute(name, i.call(this, t));
  };
}

function attrInterpolateNS(fullname, i) {
  return function (t) {
    this.setAttributeNS(fullname.space, fullname.local, i.call(this, t));
  };
}

function attrTweenNS(fullname, value) {
  var t0, i0;

  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);
    return t0;
  }

  tween._value = value;
  return tween;
}

function attrTween(name, value) {
  var t0, i0;

  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);
    return t0;
  }

  tween._value = value;
  return tween;
}

function _default(name, value) {
  var key = "attr." + name;
  if (arguments.length < 2) return (key = this.tween(key)) && key._value;
  if (value == null) return this.tween(key, null);
  if (typeof value !== "function") throw new Error();
  var fullname = (0, _d3Selection.namespace)(name);
  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));
}
},{"d3-selection":"ysDv"}],"ln8e":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _schedule = require("./schedule.js");

function delayFunction(id, value) {
  return function () {
    (0, _schedule.init)(this, id).delay = +value.apply(this, arguments);
  };
}

function delayConstant(id, value) {
  return value = +value, function () {
    (0, _schedule.init)(this, id).delay = value;
  };
}

function _default(value) {
  var id = this._id;
  return arguments.length ? this.each((typeof value === "function" ? delayFunction : delayConstant)(id, value)) : (0, _schedule.get)(this.node(), id).delay;
}
},{"./schedule.js":"nqGJ"}],"WWpH":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _schedule = require("./schedule.js");

function durationFunction(id, value) {
  return function () {
    (0, _schedule.set)(this, id).duration = +value.apply(this, arguments);
  };
}

function durationConstant(id, value) {
  return value = +value, function () {
    (0, _schedule.set)(this, id).duration = value;
  };
}

function _default(value) {
  var id = this._id;
  return arguments.length ? this.each((typeof value === "function" ? durationFunction : durationConstant)(id, value)) : (0, _schedule.get)(this.node(), id).duration;
}
},{"./schedule.js":"nqGJ"}],"AcgK":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _schedule = require("./schedule.js");

function easeConstant(id, value) {
  if (typeof value !== "function") throw new Error();
  return function () {
    (0, _schedule.set)(this, id).ease = value;
  };
}

function _default(value) {
  var id = this._id;
  return arguments.length ? this.each(easeConstant(id, value)) : (0, _schedule.get)(this.node(), id).ease;
}
},{"./schedule.js":"nqGJ"}],"MnwJ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Selection = require("d3-selection");

var _index = require("./index.js");

function _default(match) {
  if (typeof match !== "function") match = (0, _d3Selection.matcher)(match);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
        subgroup.push(node);
      }
    }
  }

  return new _index.Transition(subgroups, this._parents, this._name, this._id);
}
},{"d3-selection":"ysDv","./index.js":"OWOq"}],"cfNr":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index.js");

function _default(transition) {
  if (transition._id !== this._id) throw new Error();

  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group0[i] || group1[i]) {
        merge[i] = node;
      }
    }
  }

  for (; j < m0; ++j) {
    merges[j] = groups0[j];
  }

  return new _index.Transition(merges, this._parents, this._name, this._id);
}
},{"./index.js":"OWOq"}],"ELQ0":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _schedule = require("./schedule.js");

function start(name) {
  return (name + "").trim().split(/^|\s+/).every(function (t) {
    var i = t.indexOf(".");
    if (i >= 0) t = t.slice(0, i);
    return !t || t === "start";
  });
}

function onFunction(id, name, listener) {
  var on0,
      on1,
      sit = start(name) ? _schedule.init : _schedule.set;
  return function () {
    var schedule = sit(this, id),
        on = schedule.on; // If this node shared a dispatch with the previous node,
    // just assign the updated shared dispatch and we’re done!
    // Otherwise, copy-on-write.

    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);
    schedule.on = on1;
  };
}

function _default(name, listener) {
  var id = this._id;
  return arguments.length < 2 ? (0, _schedule.get)(this.node(), id).on.on(name) : this.each(onFunction(id, name, listener));
}
},{"./schedule.js":"nqGJ"}],"mXFz":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function removeFunction(id) {
  return function () {
    var parent = this.parentNode;

    for (var i in this.__transition) if (+i !== id) return;

    if (parent) parent.removeChild(this);
  };
}

function _default() {
  return this.on("end.remove", removeFunction(this._id));
}
},{}],"P4XU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Selection = require("d3-selection");

var _index = require("./index.js");

var _schedule = _interopRequireWildcard(require("./schedule.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _default(select) {
  var name = this._name,
      id = this._id;
  if (typeof select !== "function") select = (0, _d3Selection.selector)(select);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
        if ("__data__" in node) subnode.__data__ = node.__data__;
        subgroup[i] = subnode;
        (0, _schedule.default)(subgroup[i], name, id, i, subgroup, (0, _schedule.get)(node, id));
      }
    }
  }

  return new _index.Transition(subgroups, this._parents, name, id);
}
},{"d3-selection":"ysDv","./index.js":"OWOq","./schedule.js":"nqGJ"}],"BH5v":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Selection = require("d3-selection");

var _index = require("./index.js");

var _schedule = _interopRequireWildcard(require("./schedule.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _default(select) {
  var name = this._name,
      id = this._id;
  if (typeof select !== "function") select = (0, _d3Selection.selectorAll)(select);

  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        for (var children = select.call(node, node.__data__, i, group), child, inherit = (0, _schedule.get)(node, id), k = 0, l = children.length; k < l; ++k) {
          if (child = children[k]) {
            (0, _schedule.default)(child, name, id, k, children, inherit);
          }
        }

        subgroups.push(children);
        parents.push(node);
      }
    }
  }

  return new _index.Transition(subgroups, parents, name, id);
}
},{"d3-selection":"ysDv","./index.js":"OWOq","./schedule.js":"nqGJ"}],"kIVv":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Selection = require("d3-selection");

var Selection = _d3Selection.selection.prototype.constructor;

function _default() {
  return new Selection(this._groups, this._parents);
}
},{"d3-selection":"ysDv"}],"xTYE":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Interpolate = require("d3-interpolate");

var _d3Selection = require("d3-selection");

var _schedule = require("./schedule.js");

var _tween = require("./tween.js");

var _interpolate = _interopRequireDefault(require("./interpolate.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function styleNull(name, interpolate) {
  var string00, string10, interpolate0;
  return function () {
    var string0 = (0, _d3Selection.style)(this, name),
        string1 = (this.style.removeProperty(name), (0, _d3Selection.style)(this, name));
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : interpolate0 = interpolate(string00 = string0, string10 = string1);
  };
}

function styleRemove(name) {
  return function () {
    this.style.removeProperty(name);
  };
}

function styleConstant(name, interpolate, value1) {
  var string00,
      string1 = value1 + "",
      interpolate0;
  return function () {
    var string0 = (0, _d3Selection.style)(this, name);
    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);
  };
}

function styleFunction(name, interpolate, value) {
  var string00, string10, interpolate0;
  return function () {
    var string0 = (0, _d3Selection.style)(this, name),
        value1 = value(this),
        string1 = value1 + "";
    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), (0, _d3Selection.style)(this, name));
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
  };
}

function styleMaybeRemove(id, name) {
  var on0,
      on1,
      listener0,
      key = "style." + name,
      event = "end." + key,
      remove;
  return function () {
    var schedule = (0, _schedule.set)(this, id),
        on = schedule.on,
        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined; // If this node shared a dispatch with the previous node,
    // just assign the updated shared dispatch and we’re done!
    // Otherwise, copy-on-write.

    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);
    schedule.on = on1;
  };
}

function _default(name, value, priority) {
  var i = (name += "") === "transform" ? _d3Interpolate.interpolateTransformCss : _interpolate.default;
  return value == null ? this.styleTween(name, styleNull(name, i)).on("end.style." + name, styleRemove(name)) : typeof value === "function" ? this.styleTween(name, styleFunction(name, i, (0, _tween.tweenValue)(this, "style." + name, value))).each(styleMaybeRemove(this._id, name)) : this.styleTween(name, styleConstant(name, i, value), priority).on("end.style." + name, null);
}
},{"d3-interpolate":"k9aH","d3-selection":"ysDv","./schedule.js":"nqGJ","./tween.js":"jGA0","./interpolate.js":"EwAl"}],"PSnC":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function styleInterpolate(name, i, priority) {
  return function (t) {
    this.style.setProperty(name, i.call(this, t), priority);
  };
}

function styleTween(name, value, priority) {
  var t, i0;

  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);
    return t;
  }

  tween._value = value;
  return tween;
}

function _default(name, value, priority) {
  var key = "style." + (name += "");
  if (arguments.length < 2) return (key = this.tween(key)) && key._value;
  if (value == null) return this.tween(key, null);
  if (typeof value !== "function") throw new Error();
  return this.tween(key, styleTween(name, value, priority == null ? "" : priority));
}
},{}],"JpCG":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _tween = require("./tween.js");

function textConstant(value) {
  return function () {
    this.textContent = value;
  };
}

function textFunction(value) {
  return function () {
    var value1 = value(this);
    this.textContent = value1 == null ? "" : value1;
  };
}

function _default(value) {
  return this.tween("text", typeof value === "function" ? textFunction((0, _tween.tweenValue)(this, "text", value)) : textConstant(value == null ? "" : value + ""));
}
},{"./tween.js":"jGA0"}],"cW7v":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function textInterpolate(i) {
  return function (t) {
    this.textContent = i.call(this, t);
  };
}

function textTween(value) {
  var t0, i0;

  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t0 = (i0 = i) && textInterpolate(i);
    return t0;
  }

  tween._value = value;
  return tween;
}

function _default(value) {
  var key = "text";
  if (arguments.length < 1) return (key = this.tween(key)) && key._value;
  if (value == null) return this.tween(key, null);
  if (typeof value !== "function") throw new Error();
  return this.tween(key, textTween(value));
}
},{}],"IPhv":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index.js");

var _schedule = _interopRequireWildcard(require("./schedule.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _default() {
  var name = this._name,
      id0 = this._id,
      id1 = (0, _index.newId)();

  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        var inherit = (0, _schedule.get)(node, id0);
        (0, _schedule.default)(node, name, id1, i, group, {
          time: inherit.time + inherit.delay + inherit.duration,
          delay: 0,
          duration: inherit.duration,
          ease: inherit.ease
        });
      }
    }
  }

  return new _index.Transition(groups, this._parents, name, id1);
}
},{"./index.js":"OWOq","./schedule.js":"nqGJ"}],"Q4LY":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _schedule = require("./schedule.js");

function _default() {
  var on0,
      on1,
      that = this,
      id = that._id,
      size = that.size();
  return new Promise(function (resolve, reject) {
    var cancel = {
      value: reject
    },
        end = {
      value: function () {
        if (--size === 0) resolve();
      }
    };
    that.each(function () {
      var schedule = (0, _schedule.set)(this, id),
          on = schedule.on; // If this node shared a dispatch with the previous node,
      // just assign the updated shared dispatch and we’re done!
      // Otherwise, copy-on-write.

      if (on !== on0) {
        on1 = (on0 = on).copy();

        on1._.cancel.push(cancel);

        on1._.interrupt.push(cancel);

        on1._.end.push(end);
      }

      schedule.on = on1;
    });
  });
}
},{"./schedule.js":"nqGJ"}],"OWOq":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Transition = Transition;
exports.default = transition;
exports.newId = newId;

var _d3Selection = require("d3-selection");

var _attr = _interopRequireDefault(require("./attr.js"));

var _attrTween = _interopRequireDefault(require("./attrTween.js"));

var _delay = _interopRequireDefault(require("./delay.js"));

var _duration = _interopRequireDefault(require("./duration.js"));

var _ease = _interopRequireDefault(require("./ease.js"));

var _filter = _interopRequireDefault(require("./filter.js"));

var _merge = _interopRequireDefault(require("./merge.js"));

var _on = _interopRequireDefault(require("./on.js"));

var _remove = _interopRequireDefault(require("./remove.js"));

var _select = _interopRequireDefault(require("./select.js"));

var _selectAll = _interopRequireDefault(require("./selectAll.js"));

var _selection = _interopRequireDefault(require("./selection.js"));

var _style = _interopRequireDefault(require("./style.js"));

var _styleTween = _interopRequireDefault(require("./styleTween.js"));

var _text = _interopRequireDefault(require("./text.js"));

var _textTween = _interopRequireDefault(require("./textTween.js"));

var _transition = _interopRequireDefault(require("./transition.js"));

var _tween = _interopRequireDefault(require("./tween.js"));

var _end = _interopRequireDefault(require("./end.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var id = 0;

function Transition(groups, parents, name, id) {
  this._groups = groups;
  this._parents = parents;
  this._name = name;
  this._id = id;
}

function transition(name) {
  return (0, _d3Selection.selection)().transition(name);
}

function newId() {
  return ++id;
}

var selection_prototype = _d3Selection.selection.prototype;
Transition.prototype = transition.prototype = {
  constructor: Transition,
  select: _select.default,
  selectAll: _selectAll.default,
  filter: _filter.default,
  merge: _merge.default,
  selection: _selection.default,
  transition: _transition.default,
  call: selection_prototype.call,
  nodes: selection_prototype.nodes,
  node: selection_prototype.node,
  size: selection_prototype.size,
  empty: selection_prototype.empty,
  each: selection_prototype.each,
  on: _on.default,
  attr: _attr.default,
  attrTween: _attrTween.default,
  style: _style.default,
  styleTween: _styleTween.default,
  text: _text.default,
  textTween: _textTween.default,
  remove: _remove.default,
  tween: _tween.default,
  delay: _delay.default,
  duration: _duration.default,
  ease: _ease.default,
  end: _end.default
};
},{"d3-selection":"ysDv","./attr.js":"Edhf","./attrTween.js":"bknt","./delay.js":"ln8e","./duration.js":"WWpH","./ease.js":"AcgK","./filter.js":"MnwJ","./merge.js":"cfNr","./on.js":"ELQ0","./remove.js":"mXFz","./select.js":"P4XU","./selectAll.js":"BH5v","./selection.js":"kIVv","./style.js":"xTYE","./styleTween.js":"PSnC","./text.js":"JpCG","./textTween.js":"cW7v","./transition.js":"IPhv","./tween.js":"jGA0","./end.js":"Q4LY"}],"VacQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.linear = linear;

function linear(t) {
  return +t;
}
},{}],"EZNz":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.quadIn = quadIn;
exports.quadOut = quadOut;
exports.quadInOut = quadInOut;

function quadIn(t) {
  return t * t;
}

function quadOut(t) {
  return t * (2 - t);
}

function quadInOut(t) {
  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;
}
},{}],"ropQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cubicIn = cubicIn;
exports.cubicOut = cubicOut;
exports.cubicInOut = cubicInOut;

function cubicIn(t) {
  return t * t * t;
}

function cubicOut(t) {
  return --t * t * t + 1;
}

function cubicInOut(t) {
  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;
}
},{}],"rJoA":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.polyInOut = exports.polyOut = exports.polyIn = void 0;
var exponent = 3;

var polyIn = function custom(e) {
  e = +e;

  function polyIn(t) {
    return Math.pow(t, e);
  }

  polyIn.exponent = custom;
  return polyIn;
}(exponent);

exports.polyIn = polyIn;

var polyOut = function custom(e) {
  e = +e;

  function polyOut(t) {
    return 1 - Math.pow(1 - t, e);
  }

  polyOut.exponent = custom;
  return polyOut;
}(exponent);

exports.polyOut = polyOut;

var polyInOut = function custom(e) {
  e = +e;

  function polyInOut(t) {
    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;
  }

  polyInOut.exponent = custom;
  return polyInOut;
}(exponent);

exports.polyInOut = polyInOut;
},{}],"XXPs":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sinIn = sinIn;
exports.sinOut = sinOut;
exports.sinInOut = sinInOut;
var pi = Math.PI,
    halfPi = pi / 2;

function sinIn(t) {
  return 1 - Math.cos(t * halfPi);
}

function sinOut(t) {
  return Math.sin(t * halfPi);
}

function sinInOut(t) {
  return (1 - Math.cos(pi * t)) / 2;
}
},{}],"PTZz":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.expIn = expIn;
exports.expOut = expOut;
exports.expInOut = expInOut;

function expIn(t) {
  return Math.pow(2, 10 * t - 10);
}

function expOut(t) {
  return 1 - Math.pow(2, -10 * t);
}

function expInOut(t) {
  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;
}
},{}],"qwy6":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.circleIn = circleIn;
exports.circleOut = circleOut;
exports.circleInOut = circleInOut;

function circleIn(t) {
  return 1 - Math.sqrt(1 - t * t);
}

function circleOut(t) {
  return Math.sqrt(1 - --t * t);
}

function circleInOut(t) {
  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;
}
},{}],"rEBC":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bounceIn = bounceIn;
exports.bounceOut = bounceOut;
exports.bounceInOut = bounceInOut;
var b1 = 4 / 11,
    b2 = 6 / 11,
    b3 = 8 / 11,
    b4 = 3 / 4,
    b5 = 9 / 11,
    b6 = 10 / 11,
    b7 = 15 / 16,
    b8 = 21 / 22,
    b9 = 63 / 64,
    b0 = 1 / b1 / b1;

function bounceIn(t) {
  return 1 - bounceOut(1 - t);
}

function bounceOut(t) {
  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;
}

function bounceInOut(t) {
  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;
}
},{}],"G5Mi":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.backInOut = exports.backOut = exports.backIn = void 0;
var overshoot = 1.70158;

var backIn = function custom(s) {
  s = +s;

  function backIn(t) {
    return t * t * ((s + 1) * t - s);
  }

  backIn.overshoot = custom;
  return backIn;
}(overshoot);

exports.backIn = backIn;

var backOut = function custom(s) {
  s = +s;

  function backOut(t) {
    return --t * t * ((s + 1) * t + s) + 1;
  }

  backOut.overshoot = custom;
  return backOut;
}(overshoot);

exports.backOut = backOut;

var backInOut = function custom(s) {
  s = +s;

  function backInOut(t) {
    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;
  }

  backInOut.overshoot = custom;
  return backInOut;
}(overshoot);

exports.backInOut = backInOut;
},{}],"TN0k":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.elasticInOut = exports.elasticOut = exports.elasticIn = void 0;
var tau = 2 * Math.PI,
    amplitude = 1,
    period = 0.3;

var elasticIn = function custom(a, p) {
  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);

  function elasticIn(t) {
    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);
  }

  elasticIn.amplitude = function (a) {
    return custom(a, p * tau);
  };

  elasticIn.period = function (p) {
    return custom(a, p);
  };

  return elasticIn;
}(amplitude, period);

exports.elasticIn = elasticIn;

var elasticOut = function custom(a, p) {
  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);

  function elasticOut(t) {
    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);
  }

  elasticOut.amplitude = function (a) {
    return custom(a, p * tau);
  };

  elasticOut.period = function (p) {
    return custom(a, p);
  };

  return elasticOut;
}(amplitude, period);

exports.elasticOut = elasticOut;

var elasticInOut = function custom(a, p) {
  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);

  function elasticInOut(t) {
    return ((t = t * 2 - 1) < 0 ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p) : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;
  }

  elasticInOut.amplitude = function (a) {
    return custom(a, p * tau);
  };

  elasticInOut.period = function (p) {
    return custom(a, p);
  };

  return elasticInOut;
}(amplitude, period);

exports.elasticInOut = elasticInOut;
},{}],"pJ11":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "easeLinear", {
  enumerable: true,
  get: function () {
    return _linear.linear;
  }
});
Object.defineProperty(exports, "easeQuad", {
  enumerable: true,
  get: function () {
    return _quad.quadInOut;
  }
});
Object.defineProperty(exports, "easeQuadIn", {
  enumerable: true,
  get: function () {
    return _quad.quadIn;
  }
});
Object.defineProperty(exports, "easeQuadOut", {
  enumerable: true,
  get: function () {
    return _quad.quadOut;
  }
});
Object.defineProperty(exports, "easeQuadInOut", {
  enumerable: true,
  get: function () {
    return _quad.quadInOut;
  }
});
Object.defineProperty(exports, "easeCubic", {
  enumerable: true,
  get: function () {
    return _cubic.cubicInOut;
  }
});
Object.defineProperty(exports, "easeCubicIn", {
  enumerable: true,
  get: function () {
    return _cubic.cubicIn;
  }
});
Object.defineProperty(exports, "easeCubicOut", {
  enumerable: true,
  get: function () {
    return _cubic.cubicOut;
  }
});
Object.defineProperty(exports, "easeCubicInOut", {
  enumerable: true,
  get: function () {
    return _cubic.cubicInOut;
  }
});
Object.defineProperty(exports, "easePoly", {
  enumerable: true,
  get: function () {
    return _poly.polyInOut;
  }
});
Object.defineProperty(exports, "easePolyIn", {
  enumerable: true,
  get: function () {
    return _poly.polyIn;
  }
});
Object.defineProperty(exports, "easePolyOut", {
  enumerable: true,
  get: function () {
    return _poly.polyOut;
  }
});
Object.defineProperty(exports, "easePolyInOut", {
  enumerable: true,
  get: function () {
    return _poly.polyInOut;
  }
});
Object.defineProperty(exports, "easeSin", {
  enumerable: true,
  get: function () {
    return _sin.sinInOut;
  }
});
Object.defineProperty(exports, "easeSinIn", {
  enumerable: true,
  get: function () {
    return _sin.sinIn;
  }
});
Object.defineProperty(exports, "easeSinOut", {
  enumerable: true,
  get: function () {
    return _sin.sinOut;
  }
});
Object.defineProperty(exports, "easeSinInOut", {
  enumerable: true,
  get: function () {
    return _sin.sinInOut;
  }
});
Object.defineProperty(exports, "easeExp", {
  enumerable: true,
  get: function () {
    return _exp.expInOut;
  }
});
Object.defineProperty(exports, "easeExpIn", {
  enumerable: true,
  get: function () {
    return _exp.expIn;
  }
});
Object.defineProperty(exports, "easeExpOut", {
  enumerable: true,
  get: function () {
    return _exp.expOut;
  }
});
Object.defineProperty(exports, "easeExpInOut", {
  enumerable: true,
  get: function () {
    return _exp.expInOut;
  }
});
Object.defineProperty(exports, "easeCircle", {
  enumerable: true,
  get: function () {
    return _circle.circleInOut;
  }
});
Object.defineProperty(exports, "easeCircleIn", {
  enumerable: true,
  get: function () {
    return _circle.circleIn;
  }
});
Object.defineProperty(exports, "easeCircleOut", {
  enumerable: true,
  get: function () {
    return _circle.circleOut;
  }
});
Object.defineProperty(exports, "easeCircleInOut", {
  enumerable: true,
  get: function () {
    return _circle.circleInOut;
  }
});
Object.defineProperty(exports, "easeBounce", {
  enumerable: true,
  get: function () {
    return _bounce.bounceOut;
  }
});
Object.defineProperty(exports, "easeBounceIn", {
  enumerable: true,
  get: function () {
    return _bounce.bounceIn;
  }
});
Object.defineProperty(exports, "easeBounceOut", {
  enumerable: true,
  get: function () {
    return _bounce.bounceOut;
  }
});
Object.defineProperty(exports, "easeBounceInOut", {
  enumerable: true,
  get: function () {
    return _bounce.bounceInOut;
  }
});
Object.defineProperty(exports, "easeBack", {
  enumerable: true,
  get: function () {
    return _back.backInOut;
  }
});
Object.defineProperty(exports, "easeBackIn", {
  enumerable: true,
  get: function () {
    return _back.backIn;
  }
});
Object.defineProperty(exports, "easeBackOut", {
  enumerable: true,
  get: function () {
    return _back.backOut;
  }
});
Object.defineProperty(exports, "easeBackInOut", {
  enumerable: true,
  get: function () {
    return _back.backInOut;
  }
});
Object.defineProperty(exports, "easeElastic", {
  enumerable: true,
  get: function () {
    return _elastic.elasticOut;
  }
});
Object.defineProperty(exports, "easeElasticIn", {
  enumerable: true,
  get: function () {
    return _elastic.elasticIn;
  }
});
Object.defineProperty(exports, "easeElasticOut", {
  enumerable: true,
  get: function () {
    return _elastic.elasticOut;
  }
});
Object.defineProperty(exports, "easeElasticInOut", {
  enumerable: true,
  get: function () {
    return _elastic.elasticInOut;
  }
});

var _linear = require("./linear.js");

var _quad = require("./quad.js");

var _cubic = require("./cubic.js");

var _poly = require("./poly.js");

var _sin = require("./sin.js");

var _exp = require("./exp.js");

var _circle = require("./circle.js");

var _bounce = require("./bounce.js");

var _back = require("./back.js");

var _elastic = require("./elastic.js");
},{"./linear.js":"VacQ","./quad.js":"EZNz","./cubic.js":"ropQ","./poly.js":"rJoA","./sin.js":"XXPs","./exp.js":"PTZz","./circle.js":"qwy6","./bounce.js":"rEBC","./back.js":"G5Mi","./elastic.js":"TN0k"}],"VKWr":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("../transition/index.js");

var _schedule = _interopRequireDefault(require("../transition/schedule.js"));

var _d3Ease = require("d3-ease");

var _d3Timer = require("d3-timer");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultTiming = {
  time: null,
  // Set on use.
  delay: 0,
  duration: 250,
  ease: _d3Ease.easeCubicInOut
};

function inherit(node, id) {
  var timing;

  while (!(timing = node.__transition) || !(timing = timing[id])) {
    if (!(node = node.parentNode)) {
      return defaultTiming.time = (0, _d3Timer.now)(), defaultTiming;
    }
  }

  return timing;
}

function _default(name) {
  var id, timing;

  if (name instanceof _index.Transition) {
    id = name._id, name = name._name;
  } else {
    id = (0, _index.newId)(), (timing = defaultTiming).time = (0, _d3Timer.now)(), name = name == null ? null : name + "";
  }

  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        (0, _schedule.default)(node, name, id, i, group, timing || inherit(node, id));
      }
    }
  }

  return new _index.Transition(groups, this._parents, name, id);
}
},{"../transition/index.js":"OWOq","../transition/schedule.js":"nqGJ","d3-ease":"pJ11","d3-timer":"rdzS"}],"vGqA":[function(require,module,exports) {
"use strict";

var _d3Selection = require("d3-selection");

var _interrupt = _interopRequireDefault(require("./interrupt.js"));

var _transition = _interopRequireDefault(require("./transition.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_d3Selection.selection.prototype.interrupt = _interrupt.default;
_d3Selection.selection.prototype.transition = _transition.default;
},{"d3-selection":"ysDv","./interrupt.js":"cQLj","./transition.js":"VKWr"}],"UWV3":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./transition/index.js");

var _schedule = require("./transition/schedule.js");

var root = [null];

function _default(node, name) {
  var schedules = node.__transition,
      schedule,
      i;

  if (schedules) {
    name = name == null ? null : name + "";

    for (i in schedules) {
      if ((schedule = schedules[i]).state > _schedule.SCHEDULED && schedule.name === name) {
        return new _index.Transition([[node]], root, name, +i);
      }
    }
  }

  return null;
}
},{"./transition/index.js":"OWOq","./transition/schedule.js":"nqGJ"}],"UqVV":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "transition", {
  enumerable: true,
  get: function () {
    return _index2.default;
  }
});
Object.defineProperty(exports, "active", {
  enumerable: true,
  get: function () {
    return _active.default;
  }
});
Object.defineProperty(exports, "interrupt", {
  enumerable: true,
  get: function () {
    return _interrupt.default;
  }
});

require("./selection/index.js");

var _index2 = _interopRequireDefault(require("./transition/index.js"));

var _active = _interopRequireDefault(require("./active.js"));

var _interrupt = _interopRequireDefault(require("./interrupt.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./selection/index.js":"vGqA","./transition/index.js":"OWOq","./active.js":"UWV3","./interrupt.js":"fDNN"}],"Bo4j":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(target, type, selection) {
  this.target = target;
  this.type = type;
  this.selection = selection;
}
},{}],"qu2I":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.brushSelection = brushSelection;
exports.brushX = brushX;
exports.brushY = brushY;
exports.default = _default;

var _d3Dispatch = require("d3-dispatch");

var _d3Drag = require("d3-drag");

var _d3Interpolate = require("d3-interpolate");

var _d3Selection = require("d3-selection");

var _d3Transition = require("d3-transition");

var _constant = _interopRequireDefault(require("./constant.js"));

var _event = _interopRequireDefault(require("./event.js"));

var _noevent = _interopRequireWildcard(require("./noevent.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MODE_DRAG = {
  name: "drag"
},
    MODE_SPACE = {
  name: "space"
},
    MODE_HANDLE = {
  name: "handle"
},
    MODE_CENTER = {
  name: "center"
};

function number1(e) {
  return [+e[0], +e[1]];
}

function number2(e) {
  return [number1(e[0]), number1(e[1])];
}

function toucher(identifier) {
  return function (target) {
    return (0, _d3Selection.touch)(target, _d3Selection.event.touches, identifier);
  };
}

var X = {
  name: "x",
  handles: ["w", "e"].map(type),
  input: function (x, e) {
    return x == null ? null : [[+x[0], e[0][1]], [+x[1], e[1][1]]];
  },
  output: function (xy) {
    return xy && [xy[0][0], xy[1][0]];
  }
};
var Y = {
  name: "y",
  handles: ["n", "s"].map(type),
  input: function (y, e) {
    return y == null ? null : [[e[0][0], +y[0]], [e[1][0], +y[1]]];
  },
  output: function (xy) {
    return xy && [xy[0][1], xy[1][1]];
  }
};
var XY = {
  name: "xy",
  handles: ["n", "w", "e", "s", "nw", "ne", "sw", "se"].map(type),
  input: function (xy) {
    return xy == null ? null : number2(xy);
  },
  output: function (xy) {
    return xy;
  }
};
var cursors = {
  overlay: "crosshair",
  selection: "move",
  n: "ns-resize",
  e: "ew-resize",
  s: "ns-resize",
  w: "ew-resize",
  nw: "nwse-resize",
  ne: "nesw-resize",
  se: "nwse-resize",
  sw: "nesw-resize"
};
var flipX = {
  e: "w",
  w: "e",
  nw: "ne",
  ne: "nw",
  se: "sw",
  sw: "se"
};
var flipY = {
  n: "s",
  s: "n",
  nw: "sw",
  ne: "se",
  se: "ne",
  sw: "nw"
};
var signsX = {
  overlay: +1,
  selection: +1,
  n: null,
  e: +1,
  s: null,
  w: -1,
  nw: -1,
  ne: +1,
  se: +1,
  sw: -1
};
var signsY = {
  overlay: +1,
  selection: +1,
  n: -1,
  e: null,
  s: +1,
  w: null,
  nw: -1,
  ne: -1,
  se: +1,
  sw: +1
};

function type(t) {
  return {
    type: t
  };
} // Ignore right-click, since that should open the context menu.


function defaultFilter() {
  return !_d3Selection.event.ctrlKey && !_d3Selection.event.button;
}

function defaultExtent() {
  var svg = this.ownerSVGElement || this;

  if (svg.hasAttribute("viewBox")) {
    svg = svg.viewBox.baseVal;
    return [[svg.x, svg.y], [svg.x + svg.width, svg.y + svg.height]];
  }

  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];
}

function defaultTouchable() {
  return navigator.maxTouchPoints || "ontouchstart" in this;
} // Like d3.local, but with the name “__brush” rather than auto-generated.


function local(node) {
  while (!node.__brush) if (!(node = node.parentNode)) return;

  return node.__brush;
}

function empty(extent) {
  return extent[0][0] === extent[1][0] || extent[0][1] === extent[1][1];
}

function brushSelection(node) {
  var state = node.__brush;
  return state ? state.dim.output(state.selection) : null;
}

function brushX() {
  return brush(X);
}

function brushY() {
  return brush(Y);
}

function _default() {
  return brush(XY);
}

function brush(dim) {
  var extent = defaultExtent,
      filter = defaultFilter,
      touchable = defaultTouchable,
      keys = true,
      listeners = (0, _d3Dispatch.dispatch)("start", "brush", "end"),
      handleSize = 6,
      touchending;

  function brush(group) {
    var overlay = group.property("__brush", initialize).selectAll(".overlay").data([type("overlay")]);
    overlay.enter().append("rect").attr("class", "overlay").attr("pointer-events", "all").attr("cursor", cursors.overlay).merge(overlay).each(function () {
      var extent = local(this).extent;
      (0, _d3Selection.select)(this).attr("x", extent[0][0]).attr("y", extent[0][1]).attr("width", extent[1][0] - extent[0][0]).attr("height", extent[1][1] - extent[0][1]);
    });
    group.selectAll(".selection").data([type("selection")]).enter().append("rect").attr("class", "selection").attr("cursor", cursors.selection).attr("fill", "#777").attr("fill-opacity", 0.3).attr("stroke", "#fff").attr("shape-rendering", "crispEdges");
    var handle = group.selectAll(".handle").data(dim.handles, function (d) {
      return d.type;
    });
    handle.exit().remove();
    handle.enter().append("rect").attr("class", function (d) {
      return "handle handle--" + d.type;
    }).attr("cursor", function (d) {
      return cursors[d.type];
    });
    group.each(redraw).attr("fill", "none").attr("pointer-events", "all").on("mousedown.brush", started).filter(touchable).on("touchstart.brush", started).on("touchmove.brush", touchmoved).on("touchend.brush touchcancel.brush", touchended).style("touch-action", "none").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }

  brush.move = function (group, selection) {
    if (group.selection) {
      group.on("start.brush", function () {
        emitter(this, arguments).beforestart().start();
      }).on("interrupt.brush end.brush", function () {
        emitter(this, arguments).end();
      }).tween("brush", function () {
        var that = this,
            state = that.__brush,
            emit = emitter(that, arguments),
            selection0 = state.selection,
            selection1 = dim.input(typeof selection === "function" ? selection.apply(this, arguments) : selection, state.extent),
            i = (0, _d3Interpolate.interpolate)(selection0, selection1);

        function tween(t) {
          state.selection = t === 1 && selection1 === null ? null : i(t);
          redraw.call(that);
          emit.brush();
        }

        return selection0 !== null && selection1 !== null ? tween : tween(1);
      });
    } else {
      group.each(function () {
        var that = this,
            args = arguments,
            state = that.__brush,
            selection1 = dim.input(typeof selection === "function" ? selection.apply(that, args) : selection, state.extent),
            emit = emitter(that, args).beforestart();
        (0, _d3Transition.interrupt)(that);
        state.selection = selection1 === null ? null : selection1;
        redraw.call(that);
        emit.start().brush().end();
      });
    }
  };

  brush.clear = function (group) {
    brush.move(group, null);
  };

  function redraw() {
    var group = (0, _d3Selection.select)(this),
        selection = local(this).selection;

    if (selection) {
      group.selectAll(".selection").style("display", null).attr("x", selection[0][0]).attr("y", selection[0][1]).attr("width", selection[1][0] - selection[0][0]).attr("height", selection[1][1] - selection[0][1]);
      group.selectAll(".handle").style("display", null).attr("x", function (d) {
        return d.type[d.type.length - 1] === "e" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2;
      }).attr("y", function (d) {
        return d.type[0] === "s" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2;
      }).attr("width", function (d) {
        return d.type === "n" || d.type === "s" ? selection[1][0] - selection[0][0] + handleSize : handleSize;
      }).attr("height", function (d) {
        return d.type === "e" || d.type === "w" ? selection[1][1] - selection[0][1] + handleSize : handleSize;
      });
    } else {
      group.selectAll(".selection,.handle").style("display", "none").attr("x", null).attr("y", null).attr("width", null).attr("height", null);
    }
  }

  function emitter(that, args, clean) {
    return !clean && that.__brush.emitter || new Emitter(that, args);
  }

  function Emitter(that, args) {
    this.that = that;
    this.args = args;
    this.state = that.__brush;
    this.active = 0;
  }

  Emitter.prototype = {
    beforestart: function () {
      if (++this.active === 1) this.state.emitter = this, this.starting = true;
      return this;
    },
    start: function () {
      if (this.starting) this.starting = false, this.emit("start");else this.emit("brush");
      return this;
    },
    brush: function () {
      this.emit("brush");
      return this;
    },
    end: function () {
      if (--this.active === 0) delete this.state.emitter, this.emit("end");
      return this;
    },
    emit: function (type) {
      (0, _d3Selection.customEvent)(new _event.default(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);
    }
  };

  function started() {
    if (touchending && !_d3Selection.event.touches) return;
    if (!filter.apply(this, arguments)) return;
    var that = this,
        type = _d3Selection.event.target.__data__.type,
        mode = (keys && _d3Selection.event.metaKey ? type = "overlay" : type) === "selection" ? MODE_DRAG : keys && _d3Selection.event.altKey ? MODE_CENTER : MODE_HANDLE,
        signX = dim === Y ? null : signsX[type],
        signY = dim === X ? null : signsY[type],
        state = local(that),
        extent = state.extent,
        selection = state.selection,
        W = extent[0][0],
        w0,
        w1,
        N = extent[0][1],
        n0,
        n1,
        E = extent[1][0],
        e0,
        e1,
        S = extent[1][1],
        s0,
        s1,
        dx = 0,
        dy = 0,
        moving,
        shifting = signX && signY && keys && _d3Selection.event.shiftKey,
        lockX,
        lockY,
        pointer = _d3Selection.event.touches ? toucher(_d3Selection.event.changedTouches[0].identifier) : _d3Selection.mouse,
        point0 = pointer(that),
        point = point0,
        emit = emitter(that, arguments, true).beforestart();

    if (type === "overlay") {
      if (selection) moving = true;
      state.selection = selection = [[w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]], [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]];
    } else {
      w0 = selection[0][0];
      n0 = selection[0][1];
      e0 = selection[1][0];
      s0 = selection[1][1];
    }

    w1 = w0;
    n1 = n0;
    e1 = e0;
    s1 = s0;
    var group = (0, _d3Selection.select)(that).attr("pointer-events", "none");
    var overlay = group.selectAll(".overlay").attr("cursor", cursors[type]);

    if (_d3Selection.event.touches) {
      emit.moved = moved;
      emit.ended = ended;
    } else {
      var view = (0, _d3Selection.select)(_d3Selection.event.view).on("mousemove.brush", moved, true).on("mouseup.brush", ended, true);
      if (keys) view.on("keydown.brush", keydowned, true).on("keyup.brush", keyupped, true);
      (0, _d3Drag.dragDisable)(_d3Selection.event.view);
    }

    (0, _noevent.nopropagation)();
    (0, _d3Transition.interrupt)(that);
    redraw.call(that);
    emit.start();

    function moved() {
      var point1 = pointer(that);

      if (shifting && !lockX && !lockY) {
        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;else lockX = true;
      }

      point = point1;
      moving = true;
      (0, _noevent.default)();
      move();
    }

    function move() {
      var t;
      dx = point[0] - point0[0];
      dy = point[1] - point0[1];

      switch (mode) {
        case MODE_SPACE:
        case MODE_DRAG:
          {
            if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;
            if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;
            break;
          }

        case MODE_HANDLE:
          {
            if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;
            if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;
            break;
          }

        case MODE_CENTER:
          {
            if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));
            if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));
            break;
          }
      }

      if (e1 < w1) {
        signX *= -1;
        t = w0, w0 = e0, e0 = t;
        t = w1, w1 = e1, e1 = t;
        if (type in flipX) overlay.attr("cursor", cursors[type = flipX[type]]);
      }

      if (s1 < n1) {
        signY *= -1;
        t = n0, n0 = s0, s0 = t;
        t = n1, n1 = s1, s1 = t;
        if (type in flipY) overlay.attr("cursor", cursors[type = flipY[type]]);
      }

      if (state.selection) selection = state.selection; // May be set by brush.move!

      if (lockX) w1 = selection[0][0], e1 = selection[1][0];
      if (lockY) n1 = selection[0][1], s1 = selection[1][1];

      if (selection[0][0] !== w1 || selection[0][1] !== n1 || selection[1][0] !== e1 || selection[1][1] !== s1) {
        state.selection = [[w1, n1], [e1, s1]];
        redraw.call(that);
        emit.brush();
      }
    }

    function ended() {
      (0, _noevent.nopropagation)();

      if (_d3Selection.event.touches) {
        if (_d3Selection.event.touches.length) return;
        if (touchending) clearTimeout(touchending);
        touchending = setTimeout(function () {
          touchending = null;
        }, 500); // Ghost clicks are delayed!
      } else {
        (0, _d3Drag.dragEnable)(_d3Selection.event.view, moving);
        view.on("keydown.brush keyup.brush mousemove.brush mouseup.brush", null);
      }

      group.attr("pointer-events", "all");
      overlay.attr("cursor", cursors.overlay);
      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!

      if (empty(selection)) state.selection = null, redraw.call(that);
      emit.end();
    }

    function keydowned() {
      switch (_d3Selection.event.keyCode) {
        case 16:
          {
            // SHIFT
            shifting = signX && signY;
            break;
          }

        case 18:
          {
            // ALT
            if (mode === MODE_HANDLE) {
              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;
              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;
              mode = MODE_CENTER;
              move();
            }

            break;
          }

        case 32:
          {
            // SPACE; takes priority over ALT
            if (mode === MODE_HANDLE || mode === MODE_CENTER) {
              if (signX < 0) e0 = e1 - dx;else if (signX > 0) w0 = w1 - dx;
              if (signY < 0) s0 = s1 - dy;else if (signY > 0) n0 = n1 - dy;
              mode = MODE_SPACE;
              overlay.attr("cursor", cursors.selection);
              move();
            }

            break;
          }

        default:
          return;
      }

      (0, _noevent.default)();
    }

    function keyupped() {
      switch (_d3Selection.event.keyCode) {
        case 16:
          {
            // SHIFT
            if (shifting) {
              lockX = lockY = shifting = false;
              move();
            }

            break;
          }

        case 18:
          {
            // ALT
            if (mode === MODE_CENTER) {
              if (signX < 0) e0 = e1;else if (signX > 0) w0 = w1;
              if (signY < 0) s0 = s1;else if (signY > 0) n0 = n1;
              mode = MODE_HANDLE;
              move();
            }

            break;
          }

        case 32:
          {
            // SPACE
            if (mode === MODE_SPACE) {
              if (_d3Selection.event.altKey) {
                if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;
                if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;
                mode = MODE_CENTER;
              } else {
                if (signX < 0) e0 = e1;else if (signX > 0) w0 = w1;
                if (signY < 0) s0 = s1;else if (signY > 0) n0 = n1;
                mode = MODE_HANDLE;
              }

              overlay.attr("cursor", cursors[type]);
              move();
            }

            break;
          }

        default:
          return;
      }

      (0, _noevent.default)();
    }
  }

  function touchmoved() {
    emitter(this, arguments).moved();
  }

  function touchended() {
    emitter(this, arguments).ended();
  }

  function initialize() {
    var state = this.__brush || {
      selection: null
    };
    state.extent = number2(extent.apply(this, arguments));
    state.dim = dim;
    return state;
  }

  brush.extent = function (_) {
    return arguments.length ? (extent = typeof _ === "function" ? _ : (0, _constant.default)(number2(_)), brush) : extent;
  };

  brush.filter = function (_) {
    return arguments.length ? (filter = typeof _ === "function" ? _ : (0, _constant.default)(!!_), brush) : filter;
  };

  brush.touchable = function (_) {
    return arguments.length ? (touchable = typeof _ === "function" ? _ : (0, _constant.default)(!!_), brush) : touchable;
  };

  brush.handleSize = function (_) {
    return arguments.length ? (handleSize = +_, brush) : handleSize;
  };

  brush.keyModifiers = function (_) {
    return arguments.length ? (keys = !!_, brush) : keys;
  };

  brush.on = function () {
    var value = listeners.on.apply(listeners, arguments);
    return value === listeners ? brush : value;
  };

  return brush;
}
},{"d3-dispatch":"D3zY","d3-drag":"kkdU","d3-interpolate":"k9aH","d3-selection":"ysDv","d3-transition":"UqVV","./constant.js":"aCvo","./event.js":"Bo4j","./noevent.js":"BxLv"}],"tkh5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "brush", {
  enumerable: true,
  get: function () {
    return _brush.default;
  }
});
Object.defineProperty(exports, "brushX", {
  enumerable: true,
  get: function () {
    return _brush.brushX;
  }
});
Object.defineProperty(exports, "brushY", {
  enumerable: true,
  get: function () {
    return _brush.brushY;
  }
});
Object.defineProperty(exports, "brushSelection", {
  enumerable: true,
  get: function () {
    return _brush.brushSelection;
  }
});

var _brush = _interopRequireWildcard(require("./brush.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"./brush.js":"qu2I"}],"nrzw":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.max = exports.tau = exports.halfPi = exports.pi = exports.sin = exports.cos = void 0;
var cos = Math.cos;
exports.cos = cos;
var sin = Math.sin;
exports.sin = sin;
var pi = Math.PI;
exports.pi = pi;
var halfPi = pi / 2;
exports.halfPi = halfPi;
var tau = pi * 2;
exports.tau = tau;
var max = Math.max;
exports.max = max;
},{}],"TnSC":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Array = require("d3-array");

var _math = require("./math");

function compareValue(compare) {
  return function (a, b) {
    return compare(a.source.value + a.target.value, b.source.value + b.target.value);
  };
}

function _default() {
  var padAngle = 0,
      sortGroups = null,
      sortSubgroups = null,
      sortChords = null;

  function chord(matrix) {
    var n = matrix.length,
        groupSums = [],
        groupIndex = (0, _d3Array.range)(n),
        subgroupIndex = [],
        chords = [],
        groups = chords.groups = new Array(n),
        subgroups = new Array(n * n),
        k,
        x,
        x0,
        dx,
        i,
        j; // Compute the sum.

    k = 0, i = -1;

    while (++i < n) {
      x = 0, j = -1;

      while (++j < n) {
        x += matrix[i][j];
      }

      groupSums.push(x);
      subgroupIndex.push((0, _d3Array.range)(n));
      k += x;
    } // Sort groups…


    if (sortGroups) groupIndex.sort(function (a, b) {
      return sortGroups(groupSums[a], groupSums[b]);
    }); // Sort subgroups…

    if (sortSubgroups) subgroupIndex.forEach(function (d, i) {
      d.sort(function (a, b) {
        return sortSubgroups(matrix[i][a], matrix[i][b]);
      });
    }); // Convert the sum to scaling factor for [0, 2pi].
    // TODO Allow start and end angle to be specified?
    // TODO Allow padding to be specified as percentage?

    k = (0, _math.max)(0, _math.tau - padAngle * n) / k;
    dx = k ? padAngle : _math.tau / n; // Compute the start and end angle for each group and subgroup.
    // Note: Opera has a bug reordering object literal properties!

    x = 0, i = -1;

    while (++i < n) {
      x0 = x, j = -1;

      while (++j < n) {
        var di = groupIndex[i],
            dj = subgroupIndex[di][j],
            v = matrix[di][dj],
            a0 = x,
            a1 = x += v * k;
        subgroups[dj * n + di] = {
          index: di,
          subindex: dj,
          startAngle: a0,
          endAngle: a1,
          value: v
        };
      }

      groups[di] = {
        index: di,
        startAngle: x0,
        endAngle: x,
        value: groupSums[di]
      };
      x += dx;
    } // Generate chords for each (non-empty) subgroup-subgroup link.


    i = -1;

    while (++i < n) {
      j = i - 1;

      while (++j < n) {
        var source = subgroups[j * n + i],
            target = subgroups[i * n + j];

        if (source.value || target.value) {
          chords.push(source.value < target.value ? {
            source: target,
            target: source
          } : {
            source: source,
            target: target
          });
        }
      }
    }

    return sortChords ? chords.sort(sortChords) : chords;
  }

  chord.padAngle = function (_) {
    return arguments.length ? (padAngle = (0, _math.max)(0, _), chord) : padAngle;
  };

  chord.sortGroups = function (_) {
    return arguments.length ? (sortGroups = _, chord) : sortGroups;
  };

  chord.sortSubgroups = function (_) {
    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;
  };

  chord.sortChords = function (_) {
    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;
  };

  return chord;
}
},{"d3-array":"K0bd","./math":"nrzw"}],"hMob":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var pi = Math.PI,
    tau = 2 * pi,
    epsilon = 1e-6,
    tauEpsilon = tau - epsilon;

function Path() {
  this._x0 = this._y0 = // start of current subpath
  this._x1 = this._y1 = null; // end of current subpath

  this._ = "";
}

function path() {
  return new Path();
}

Path.prototype = path.prototype = {
  constructor: Path,
  moveTo: function (x, y) {
    this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y);
  },
  closePath: function () {
    if (this._x1 !== null) {
      this._x1 = this._x0, this._y1 = this._y0;
      this._ += "Z";
    }
  },
  lineTo: function (x, y) {
    this._ += "L" + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  quadraticCurveTo: function (x1, y1, x, y) {
    this._ += "Q" + +x1 + "," + +y1 + "," + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  bezierCurveTo: function (x1, y1, x2, y2, x, y) {
    this._ += "C" + +x1 + "," + +y1 + "," + +x2 + "," + +y2 + "," + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  arcTo: function (x1, y1, x2, y2, r) {
    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;
    var x0 = this._x1,
        y0 = this._y1,
        x21 = x2 - x1,
        y21 = y2 - y1,
        x01 = x0 - x1,
        y01 = y0 - y1,
        l01_2 = x01 * x01 + y01 * y01; // Is the radius negative? Error.

    if (r < 0) throw new Error("negative radius: " + r); // Is this path empty? Move to (x1,y1).

    if (this._x1 === null) {
      this._ += "M" + (this._x1 = x1) + "," + (this._y1 = y1);
    } // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.
    else if (!(l01_2 > epsilon)) ; // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?
      // Equivalently, is (x1,y1) coincident with (x2,y2)?
      // Or, is the radius zero? Line to (x1,y1).
      else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {
          this._ += "L" + (this._x1 = x1) + "," + (this._y1 = y1);
        } // Otherwise, draw an arc!
        else {
            var x20 = x2 - x0,
                y20 = y2 - y0,
                l21_2 = x21 * x21 + y21 * y21,
                l20_2 = x20 * x20 + y20 * y20,
                l21 = Math.sqrt(l21_2),
                l01 = Math.sqrt(l01_2),
                l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),
                t01 = l / l01,
                t21 = l / l21; // If the start tangent is not coincident with (x0,y0), line to.

            if (Math.abs(t01 - 1) > epsilon) {
              this._ += "L" + (x1 + t01 * x01) + "," + (y1 + t01 * y01);
            }

            this._ += "A" + r + "," + r + ",0,0," + +(y01 * x20 > x01 * y20) + "," + (this._x1 = x1 + t21 * x21) + "," + (this._y1 = y1 + t21 * y21);
          }
  },
  arc: function (x, y, r, a0, a1, ccw) {
    x = +x, y = +y, r = +r, ccw = !!ccw;
    var dx = r * Math.cos(a0),
        dy = r * Math.sin(a0),
        x0 = x + dx,
        y0 = y + dy,
        cw = 1 ^ ccw,
        da = ccw ? a0 - a1 : a1 - a0; // Is the radius negative? Error.

    if (r < 0) throw new Error("negative radius: " + r); // Is this path empty? Move to (x0,y0).

    if (this._x1 === null) {
      this._ += "M" + x0 + "," + y0;
    } // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).
    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {
        this._ += "L" + x0 + "," + y0;
      } // Is this arc empty? We’re done.


    if (!r) return; // Does the angle go the wrong way? Flip the direction.

    if (da < 0) da = da % tau + tau; // Is this a complete circle? Draw two arcs to complete the circle.

    if (da > tauEpsilon) {
      this._ += "A" + r + "," + r + ",0,1," + cw + "," + (x - dx) + "," + (y - dy) + "A" + r + "," + r + ",0,1," + cw + "," + (this._x1 = x0) + "," + (this._y1 = y0);
    } // Is this arc non-empty? Draw an arc!
    else if (da > epsilon) {
        this._ += "A" + r + "," + r + ",0," + +(da >= pi) + "," + cw + "," + (this._x1 = x + r * Math.cos(a1)) + "," + (this._y1 = y + r * Math.sin(a1));
      }
  },
  rect: function (x, y, w, h) {
    this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y) + "h" + +w + "v" + +h + "h" + -w + "Z";
  },
  toString: function () {
    return this._;
  }
};
var _default = path;
exports.default = _default;
},{}],"OTyq":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "path", {
  enumerable: true,
  get: function () {
    return _path.default;
  }
});

var _path = _interopRequireDefault(require("./path.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./path.js":"hMob"}],"stmI":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _array = require("./array");

var _constant = _interopRequireDefault(require("./constant"));

var _math = require("./math");

var _d3Path = require("d3-path");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function defaultSource(d) {
  return d.source;
}

function defaultTarget(d) {
  return d.target;
}

function defaultRadius(d) {
  return d.radius;
}

function defaultStartAngle(d) {
  return d.startAngle;
}

function defaultEndAngle(d) {
  return d.endAngle;
}

function _default() {
  var source = defaultSource,
      target = defaultTarget,
      radius = defaultRadius,
      startAngle = defaultStartAngle,
      endAngle = defaultEndAngle,
      context = null;

  function ribbon() {
    var buffer,
        argv = _array.slice.call(arguments),
        s = source.apply(this, argv),
        t = target.apply(this, argv),
        sr = +radius.apply(this, (argv[0] = s, argv)),
        sa0 = startAngle.apply(this, argv) - _math.halfPi,
        sa1 = endAngle.apply(this, argv) - _math.halfPi,
        sx0 = sr * (0, _math.cos)(sa0),
        sy0 = sr * (0, _math.sin)(sa0),
        tr = +radius.apply(this, (argv[0] = t, argv)),
        ta0 = startAngle.apply(this, argv) - _math.halfPi,
        ta1 = endAngle.apply(this, argv) - _math.halfPi;

    if (!context) context = buffer = (0, _d3Path.path)();
    context.moveTo(sx0, sy0);
    context.arc(0, 0, sr, sa0, sa1);

    if (sa0 !== ta0 || sa1 !== ta1) {
      // TODO sr !== tr?
      context.quadraticCurveTo(0, 0, tr * (0, _math.cos)(ta0), tr * (0, _math.sin)(ta0));
      context.arc(0, 0, tr, ta0, ta1);
    }

    context.quadraticCurveTo(0, 0, sx0, sy0);
    context.closePath();
    if (buffer) return context = null, buffer + "" || null;
  }

  ribbon.radius = function (_) {
    return arguments.length ? (radius = typeof _ === "function" ? _ : (0, _constant.default)(+_), ribbon) : radius;
  };

  ribbon.startAngle = function (_) {
    return arguments.length ? (startAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), ribbon) : startAngle;
  };

  ribbon.endAngle = function (_) {
    return arguments.length ? (endAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), ribbon) : endAngle;
  };

  ribbon.source = function (_) {
    return arguments.length ? (source = _, ribbon) : source;
  };

  ribbon.target = function (_) {
    return arguments.length ? (target = _, ribbon) : target;
  };

  ribbon.context = function (_) {
    return arguments.length ? (context = _ == null ? null : _, ribbon) : context;
  };

  return ribbon;
}
},{"./array":"KXlw","./constant":"aCvo","./math":"nrzw","d3-path":"OTyq"}],"Iy8J":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "chord", {
  enumerable: true,
  get: function () {
    return _chord.default;
  }
});
Object.defineProperty(exports, "ribbon", {
  enumerable: true,
  get: function () {
    return _ribbon.default;
  }
});

var _chord = _interopRequireDefault(require("./chord"));

var _ribbon = _interopRequireDefault(require("./ribbon"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./chord":"TnSC","./ribbon":"stmI"}],"lDuF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.prefix = void 0;
var prefix = "$";
exports.prefix = prefix;

function Map() {}

Map.prototype = map.prototype = {
  constructor: Map,
  has: function (key) {
    return prefix + key in this;
  },
  get: function (key) {
    return this[prefix + key];
  },
  set: function (key, value) {
    this[prefix + key] = value;
    return this;
  },
  remove: function (key) {
    var property = prefix + key;
    return property in this && delete this[property];
  },
  clear: function () {
    for (var property in this) if (property[0] === prefix) delete this[property];
  },
  keys: function () {
    var keys = [];

    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));

    return keys;
  },
  values: function () {
    var values = [];

    for (var property in this) if (property[0] === prefix) values.push(this[property]);

    return values;
  },
  entries: function () {
    var entries = [];

    for (var property in this) if (property[0] === prefix) entries.push({
      key: property.slice(1),
      value: this[property]
    });

    return entries;
  },
  size: function () {
    var size = 0;

    for (var property in this) if (property[0] === prefix) ++size;

    return size;
  },
  empty: function () {
    for (var property in this) if (property[0] === prefix) return false;

    return true;
  },
  each: function (f) {
    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);
  }
};

function map(object, f) {
  var map = new Map(); // Copy constructor.

  if (object instanceof Map) object.each(function (value, key) {
    map.set(key, value);
  }); // Index array by numeric index or specified key function.
  else if (Array.isArray(object)) {
      var i = -1,
          n = object.length,
          o;
      if (f == null) while (++i < n) map.set(i, object[i]);else while (++i < n) map.set(f(o = object[i], i, object), o);
    } // Convert object to map.
    else if (object) for (var key in object) map.set(key, object[key]);
  return map;
}

var _default = map;
exports.default = _default;
},{}],"kDkA":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _map = _interopRequireDefault(require("./map"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var keys = [],
      sortKeys = [],
      sortValues,
      rollup,
      nest;

  function apply(array, depth, createResult, setResult) {
    if (depth >= keys.length) {
      if (sortValues != null) array.sort(sortValues);
      return rollup != null ? rollup(array) : array;
    }

    var i = -1,
        n = array.length,
        key = keys[depth++],
        keyValue,
        value,
        valuesByKey = (0, _map.default)(),
        values,
        result = createResult();

    while (++i < n) {
      if (values = valuesByKey.get(keyValue = key(value = array[i]) + "")) {
        values.push(value);
      } else {
        valuesByKey.set(keyValue, [value]);
      }
    }

    valuesByKey.each(function (values, key) {
      setResult(result, key, apply(values, depth, createResult, setResult));
    });
    return result;
  }

  function entries(map, depth) {
    if (++depth > keys.length) return map;
    var array,
        sortKey = sortKeys[depth - 1];
    if (rollup != null && depth >= keys.length) array = map.entries();else array = [], map.each(function (v, k) {
      array.push({
        key: k,
        values: entries(v, depth)
      });
    });
    return sortKey != null ? array.sort(function (a, b) {
      return sortKey(a.key, b.key);
    }) : array;
  }

  return nest = {
    object: function (array) {
      return apply(array, 0, createObject, setObject);
    },
    map: function (array) {
      return apply(array, 0, createMap, setMap);
    },
    entries: function (array) {
      return entries(apply(array, 0, createMap, setMap), 0);
    },
    key: function (d) {
      keys.push(d);
      return nest;
    },
    sortKeys: function (order) {
      sortKeys[keys.length - 1] = order;
      return nest;
    },
    sortValues: function (order) {
      sortValues = order;
      return nest;
    },
    rollup: function (f) {
      rollup = f;
      return nest;
    }
  };
}

function createObject() {
  return {};
}

function setObject(object, key, value) {
  object[key] = value;
}

function createMap() {
  return (0, _map.default)();
}

function setMap(map, key, value) {
  map.set(key, value);
}
},{"./map":"lDuF"}],"vFPv":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _map = _interopRequireWildcard(require("./map"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function Set() {}

var proto = _map.default.prototype;
Set.prototype = set.prototype = {
  constructor: Set,
  has: proto.has,
  add: function (value) {
    value += "";
    this[_map.prefix + value] = value;
    return this;
  },
  remove: proto.remove,
  clear: proto.clear,
  values: proto.keys,
  size: proto.size,
  empty: proto.empty,
  each: proto.each
};

function set(object, f) {
  var set = new Set(); // Copy constructor.

  if (object instanceof Set) object.each(function (value) {
    set.add(value);
  }); // Otherwise, assume it’s an array.
  else if (object) {
      var i = -1,
          n = object.length;
      if (f == null) while (++i < n) set.add(object[i]);else while (++i < n) set.add(f(object[i], i, object));
    }
  return set;
}

var _default = set;
exports.default = _default;
},{"./map":"lDuF"}],"DTc5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(map) {
  var keys = [];

  for (var key in map) keys.push(key);

  return keys;
}
},{}],"KaQc":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(map) {
  var values = [];

  for (var key in map) values.push(map[key]);

  return values;
}
},{}],"wnH6":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(map) {
  var entries = [];

  for (var key in map) entries.push({
    key: key,
    value: map[key]
  });

  return entries;
}
},{}],"S3hn":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "nest", {
  enumerable: true,
  get: function () {
    return _nest.default;
  }
});
Object.defineProperty(exports, "set", {
  enumerable: true,
  get: function () {
    return _set.default;
  }
});
Object.defineProperty(exports, "map", {
  enumerable: true,
  get: function () {
    return _map.default;
  }
});
Object.defineProperty(exports, "keys", {
  enumerable: true,
  get: function () {
    return _keys.default;
  }
});
Object.defineProperty(exports, "values", {
  enumerable: true,
  get: function () {
    return _values.default;
  }
});
Object.defineProperty(exports, "entries", {
  enumerable: true,
  get: function () {
    return _entries.default;
  }
});

var _nest = _interopRequireDefault(require("./nest"));

var _set = _interopRequireDefault(require("./set"));

var _map = _interopRequireDefault(require("./map"));

var _keys = _interopRequireDefault(require("./keys"));

var _values = _interopRequireDefault(require("./values"));

var _entries = _interopRequireDefault(require("./entries"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./nest":"kDkA","./set":"vFPv","./map":"lDuF","./keys":"DTc5","./values":"KaQc","./entries":"wnH6"}],"TvZ5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.slice = void 0;
var array = Array.prototype;
var slice = array.slice;
exports.slice = slice;
},{}],"T6bn":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  return a - b;
}
},{}],"TIuo":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(ring) {
  var i = 0,
      n = ring.length,
      area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];

  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];

  return area;
}
},{}],"MoCi":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(ring, hole) {
  var i = -1,
      n = hole.length,
      c;

  while (++i < n) if (c = ringContains(ring, hole[i])) return c;

  return 0;
}

function ringContains(ring, point) {
  var x = point[0],
      y = point[1],
      contains = -1;

  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {
    var pi = ring[i],
        xi = pi[0],
        yi = pi[1],
        pj = ring[j],
        xj = pj[0],
        yj = pj[1];
    if (segmentContains(pi, pj, point)) return 0;
    if (yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi) contains = -contains;
  }

  return contains;
}

function segmentContains(a, b, c) {
  var i;
  return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);
}

function collinear(a, b, c) {
  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);
}

function within(p, q, r) {
  return p <= q && q <= r || r <= q && q <= p;
}
},{}],"zOhu":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {}
},{}],"DT0k":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Array = require("d3-array");

var _array = require("./array");

var _ascending = _interopRequireDefault(require("./ascending"));

var _area = _interopRequireDefault(require("./area"));

var _constant = _interopRequireDefault(require("./constant"));

var _contains = _interopRequireDefault(require("./contains"));

var _noop = _interopRequireDefault(require("./noop"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var cases = [[], [[[1.0, 1.5], [0.5, 1.0]]], [[[1.5, 1.0], [1.0, 1.5]]], [[[1.5, 1.0], [0.5, 1.0]]], [[[1.0, 0.5], [1.5, 1.0]]], [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]], [[[1.0, 0.5], [1.0, 1.5]]], [[[1.0, 0.5], [0.5, 1.0]]], [[[0.5, 1.0], [1.0, 0.5]]], [[[1.0, 1.5], [1.0, 0.5]]], [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]], [[[1.5, 1.0], [1.0, 0.5]]], [[[0.5, 1.0], [1.5, 1.0]]], [[[1.0, 1.5], [1.5, 1.0]]], [[[0.5, 1.0], [1.0, 1.5]]], []];

function _default() {
  var dx = 1,
      dy = 1,
      threshold = _d3Array.thresholdSturges,
      smooth = smoothLinear;

  function contours(values) {
    var tz = threshold(values); // Convert number of thresholds into uniform thresholds.

    if (!Array.isArray(tz)) {
      var domain = (0, _d3Array.extent)(values),
          start = domain[0],
          stop = domain[1];
      tz = (0, _d3Array.tickStep)(start, stop, tz);
      tz = (0, _d3Array.range)(Math.floor(start / tz) * tz, Math.floor(stop / tz) * tz, tz);
    } else {
      tz = tz.slice().sort(_ascending.default);
    }

    return tz.map(function (value) {
      return contour(values, value);
    });
  } // Accumulate, smooth contour rings, assign holes to exterior rings.
  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js


  function contour(values, value) {
    var polygons = [],
        holes = [];
    isorings(values, value, function (ring) {
      smooth(ring, values, value);
      if ((0, _area.default)(ring) > 0) polygons.push([ring]);else holes.push(ring);
    });
    holes.forEach(function (hole) {
      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {
        if ((0, _contains.default)((polygon = polygons[i])[0], hole) !== -1) {
          polygon.push(hole);
          return;
        }
      }
    });
    return {
      type: "MultiPolygon",
      value: value,
      coordinates: polygons
    };
  } // Marching squares with isolines stitched into rings.
  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js


  function isorings(values, value, callback) {
    var fragmentByStart = new Array(),
        fragmentByEnd = new Array(),
        x,
        y,
        t0,
        t1,
        t2,
        t3; // Special case for the first row (y = -1, t2 = t3 = 0).

    x = y = -1;
    t1 = values[0] >= value;
    cases[t1 << 1].forEach(stitch);

    while (++x < dx - 1) {
      t0 = t1, t1 = values[x + 1] >= value;
      cases[t0 | t1 << 1].forEach(stitch);
    }

    cases[t1 << 0].forEach(stitch); // General case for the intermediate rows.

    while (++y < dy - 1) {
      x = -1;
      t1 = values[y * dx + dx] >= value;
      t2 = values[y * dx] >= value;
      cases[t1 << 1 | t2 << 2].forEach(stitch);

      while (++x < dx - 1) {
        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;
        t3 = t2, t2 = values[y * dx + x + 1] >= value;
        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);
      }

      cases[t1 | t2 << 3].forEach(stitch);
    } // Special case for the last row (y = dy - 1, t0 = t1 = 0).


    x = -1;
    t2 = values[y * dx] >= value;
    cases[t2 << 2].forEach(stitch);

    while (++x < dx - 1) {
      t3 = t2, t2 = values[y * dx + x + 1] >= value;
      cases[t2 << 2 | t3 << 3].forEach(stitch);
    }

    cases[t2 << 3].forEach(stitch);

    function stitch(line) {
      var start = [line[0][0] + x, line[0][1] + y],
          end = [line[1][0] + x, line[1][1] + y],
          startIndex = index(start),
          endIndex = index(end),
          f,
          g;

      if (f = fragmentByEnd[startIndex]) {
        if (g = fragmentByStart[endIndex]) {
          delete fragmentByEnd[f.end];
          delete fragmentByStart[g.start];

          if (f === g) {
            f.ring.push(end);
            callback(f.ring);
          } else {
            fragmentByStart[f.start] = fragmentByEnd[g.end] = {
              start: f.start,
              end: g.end,
              ring: f.ring.concat(g.ring)
            };
          }
        } else {
          delete fragmentByEnd[f.end];
          f.ring.push(end);
          fragmentByEnd[f.end = endIndex] = f;
        }
      } else if (f = fragmentByStart[endIndex]) {
        if (g = fragmentByEnd[startIndex]) {
          delete fragmentByStart[f.start];
          delete fragmentByEnd[g.end];

          if (f === g) {
            f.ring.push(end);
            callback(f.ring);
          } else {
            fragmentByStart[g.start] = fragmentByEnd[f.end] = {
              start: g.start,
              end: f.end,
              ring: g.ring.concat(f.ring)
            };
          }
        } else {
          delete fragmentByStart[f.start];
          f.ring.unshift(start);
          fragmentByStart[f.start = startIndex] = f;
        }
      } else {
        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {
          start: startIndex,
          end: endIndex,
          ring: [start, end]
        };
      }
    }
  }

  function index(point) {
    return point[0] * 2 + point[1] * (dx + 1) * 4;
  }

  function smoothLinear(ring, values, value) {
    ring.forEach(function (point) {
      var x = point[0],
          y = point[1],
          xt = x | 0,
          yt = y | 0,
          v0,
          v1 = values[yt * dx + xt];

      if (x > 0 && x < dx && xt === x) {
        v0 = values[yt * dx + xt - 1];
        point[0] = x + (value - v0) / (v1 - v0) - 0.5;
      }

      if (y > 0 && y < dy && yt === y) {
        v0 = values[(yt - 1) * dx + xt];
        point[1] = y + (value - v0) / (v1 - v0) - 0.5;
      }
    });
  }

  contours.contour = contour;

  contours.size = function (_) {
    if (!arguments.length) return [dx, dy];

    var _0 = Math.ceil(_[0]),
        _1 = Math.ceil(_[1]);

    if (!(_0 > 0) || !(_1 > 0)) throw new Error("invalid size");
    return dx = _0, dy = _1, contours;
  };

  contours.thresholds = function (_) {
    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? (0, _constant.default)(_array.slice.call(_)) : (0, _constant.default)(_), contours) : threshold;
  };

  contours.smooth = function (_) {
    return arguments.length ? (smooth = _ ? smoothLinear : _noop.default, contours) : smooth === smoothLinear;
  };

  return contours;
}
},{"d3-array":"K0bd","./array":"TvZ5","./ascending":"T6bn","./area":"TIuo","./constant":"aCvo","./contains":"MoCi","./noop":"zOhu"}],"DGMp":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.blurX = blurX;
exports.blurY = blurY;

// TODO Optimize edge cases.
// TODO Optimize index calculation.
// TODO Optimize arguments.
function blurX(source, target, r) {
  var n = source.width,
      m = source.height,
      w = (r << 1) + 1;

  for (var j = 0; j < m; ++j) {
    for (var i = 0, sr = 0; i < n + r; ++i) {
      if (i < n) {
        sr += source.data[i + j * n];
      }

      if (i >= r) {
        if (i >= w) {
          sr -= source.data[i - w + j * n];
        }

        target.data[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);
      }
    }
  }
} // TODO Optimize edge cases.
// TODO Optimize index calculation.
// TODO Optimize arguments.


function blurY(source, target, r) {
  var n = source.width,
      m = source.height,
      w = (r << 1) + 1;

  for (var i = 0; i < n; ++i) {
    for (var j = 0, sr = 0; j < m + r; ++j) {
      if (j < m) {
        sr += source.data[i + j * n];
      }

      if (j >= r) {
        if (j >= w) {
          sr -= source.data[i + (j - w) * n];
        }

        target.data[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);
      }
    }
  }
}
},{}],"NV0r":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Array = require("d3-array");

var _array = require("./array");

var _blur = require("./blur");

var _constant = _interopRequireDefault(require("./constant"));

var _contours = _interopRequireDefault(require("./contours"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function defaultX(d) {
  return d[0];
}

function defaultY(d) {
  return d[1];
}

function defaultWeight() {
  return 1;
}

function _default() {
  var x = defaultX,
      y = defaultY,
      weight = defaultWeight,
      dx = 960,
      dy = 500,
      r = 20,
      // blur radius
  k = 2,
      // log2(grid cell size)
  o = r * 3,
      // grid offset, to pad for blur
  n = dx + o * 2 >> k,
      // grid width
  m = dy + o * 2 >> k,
      // grid height
  threshold = (0, _constant.default)(20);

  function density(data) {
    var values0 = new Float32Array(n * m),
        values1 = new Float32Array(n * m);
    data.forEach(function (d, i, data) {
      var xi = +x(d, i, data) + o >> k,
          yi = +y(d, i, data) + o >> k,
          wi = +weight(d, i, data);

      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {
        values0[xi + yi * n] += wi;
      }
    }); // TODO Optimize.

    (0, _blur.blurX)({
      width: n,
      height: m,
      data: values0
    }, {
      width: n,
      height: m,
      data: values1
    }, r >> k);
    (0, _blur.blurY)({
      width: n,
      height: m,
      data: values1
    }, {
      width: n,
      height: m,
      data: values0
    }, r >> k);
    (0, _blur.blurX)({
      width: n,
      height: m,
      data: values0
    }, {
      width: n,
      height: m,
      data: values1
    }, r >> k);
    (0, _blur.blurY)({
      width: n,
      height: m,
      data: values1
    }, {
      width: n,
      height: m,
      data: values0
    }, r >> k);
    (0, _blur.blurX)({
      width: n,
      height: m,
      data: values0
    }, {
      width: n,
      height: m,
      data: values1
    }, r >> k);
    (0, _blur.blurY)({
      width: n,
      height: m,
      data: values1
    }, {
      width: n,
      height: m,
      data: values0
    }, r >> k);
    var tz = threshold(values0); // Convert number of thresholds into uniform thresholds.

    if (!Array.isArray(tz)) {
      var stop = (0, _d3Array.max)(values0);
      tz = (0, _d3Array.tickStep)(0, stop, tz);
      tz = (0, _d3Array.range)(0, Math.floor(stop / tz) * tz, tz);
      tz.shift();
    }

    return (0, _contours.default)().thresholds(tz).size([n, m])(values0).map(transform);
  }

  function transform(geometry) {
    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.

    geometry.coordinates.forEach(transformPolygon);
    return geometry;
  }

  function transformPolygon(coordinates) {
    coordinates.forEach(transformRing);
  }

  function transformRing(coordinates) {
    coordinates.forEach(transformPoint);
  } // TODO Optimize.


  function transformPoint(coordinates) {
    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;
    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;
  }

  function resize() {
    o = r * 3;
    n = dx + o * 2 >> k;
    m = dy + o * 2 >> k;
    return density;
  }

  density.x = function (_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : (0, _constant.default)(+_), density) : x;
  };

  density.y = function (_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : (0, _constant.default)(+_), density) : y;
  };

  density.weight = function (_) {
    return arguments.length ? (weight = typeof _ === "function" ? _ : (0, _constant.default)(+_), density) : weight;
  };

  density.size = function (_) {
    if (!arguments.length) return [dx, dy];

    var _0 = Math.ceil(_[0]),
        _1 = Math.ceil(_[1]);

    if (!(_0 >= 0) && !(_0 >= 0)) throw new Error("invalid size");
    return dx = _0, dy = _1, resize();
  };

  density.cellSize = function (_) {
    if (!arguments.length) return 1 << k;
    if (!((_ = +_) >= 1)) throw new Error("invalid cell size");
    return k = Math.floor(Math.log(_) / Math.LN2), resize();
  };

  density.thresholds = function (_) {
    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? (0, _constant.default)(_array.slice.call(_)) : (0, _constant.default)(_), density) : threshold;
  };

  density.bandwidth = function (_) {
    if (!arguments.length) return Math.sqrt(r * (r + 1));
    if (!((_ = +_) >= 0)) throw new Error("invalid bandwidth");
    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();
  };

  return density;
}
},{"d3-array":"K0bd","./array":"TvZ5","./blur":"DGMp","./constant":"aCvo","./contours":"DT0k"}],"SiBy":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "contours", {
  enumerable: true,
  get: function () {
    return _contours.default;
  }
});
Object.defineProperty(exports, "contourDensity", {
  enumerable: true,
  get: function () {
    return _density.default;
  }
});

var _contours = _interopRequireDefault(require("./contours"));

var _density = _interopRequireDefault(require("./density"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./contours":"DT0k","./density":"NV0r"}],"uRW4":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
var EOL = {},
    EOF = {},
    QUOTE = 34,
    NEWLINE = 10,
    RETURN = 13;

function objectConverter(columns) {
  return new Function("d", "return {" + columns.map(function (name, i) {
    return JSON.stringify(name) + ": d[" + i + "] || \"\"";
  }).join(",") + "}");
}

function customConverter(columns, f) {
  var object = objectConverter(columns);
  return function (row, i) {
    return f(object(row), i, columns);
  };
} // Compute unique columns in order of discovery.


function inferColumns(rows) {
  var columnSet = Object.create(null),
      columns = [];
  rows.forEach(function (row) {
    for (var column in row) {
      if (!(column in columnSet)) {
        columns.push(columnSet[column] = column);
      }
    }
  });
  return columns;
}

function pad(value, width) {
  var s = value + "",
      length = s.length;
  return length < width ? new Array(width - length + 1).join(0) + s : s;
}

function formatYear(year) {
  return year < 0 ? "-" + pad(-year, 6) : year > 9999 ? "+" + pad(year, 6) : pad(year, 4);
}

function formatDate(date) {
  var hours = date.getUTCHours(),
      minutes = date.getUTCMinutes(),
      seconds = date.getUTCSeconds(),
      milliseconds = date.getUTCMilliseconds();
  return isNaN(date) ? "Invalid Date" : formatYear(date.getUTCFullYear(), 4) + "-" + pad(date.getUTCMonth() + 1, 2) + "-" + pad(date.getUTCDate(), 2) + (milliseconds ? "T" + pad(hours, 2) + ":" + pad(minutes, 2) + ":" + pad(seconds, 2) + "." + pad(milliseconds, 3) + "Z" : seconds ? "T" + pad(hours, 2) + ":" + pad(minutes, 2) + ":" + pad(seconds, 2) + "Z" : minutes || hours ? "T" + pad(hours, 2) + ":" + pad(minutes, 2) + "Z" : "");
}

function _default(delimiter) {
  var reFormat = new RegExp("[\"" + delimiter + "\n\r]"),
      DELIMITER = delimiter.charCodeAt(0);

  function parse(text, f) {
    var convert,
        columns,
        rows = parseRows(text, function (row, i) {
      if (convert) return convert(row, i - 1);
      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);
    });
    rows.columns = columns || [];
    return rows;
  }

  function parseRows(text, f) {
    var rows = [],
        // output rows
    N = text.length,
        I = 0,
        // current character index
    n = 0,
        // current line number
    t,
        // current token
    eof = N <= 0,
        // current token followed by EOF?
    eol = false; // current token followed by EOL?
    // Strip the trailing newline.

    if (text.charCodeAt(N - 1) === NEWLINE) --N;
    if (text.charCodeAt(N - 1) === RETURN) --N;

    function token() {
      if (eof) return EOF;
      if (eol) return eol = false, EOL; // Unescape quotes.

      var i,
          j = I,
          c;

      if (text.charCodeAt(j) === QUOTE) {
        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);

        if ((i = I) >= N) eof = true;else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;else if (c === RETURN) {
          eol = true;
          if (text.charCodeAt(I) === NEWLINE) ++I;
        }
        return text.slice(j + 1, i - 1).replace(/""/g, "\"");
      } // Find next delimiter or newline.


      while (I < N) {
        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;else if (c === RETURN) {
          eol = true;
          if (text.charCodeAt(I) === NEWLINE) ++I;
        } else if (c !== DELIMITER) continue;
        return text.slice(j, i);
      } // Return last token before EOF.


      return eof = true, text.slice(j, N);
    }

    while ((t = token()) !== EOF) {
      var row = [];

      while (t !== EOL && t !== EOF) row.push(t), t = token();

      if (f && (row = f(row, n++)) == null) continue;
      rows.push(row);
    }

    return rows;
  }

  function preformatBody(rows, columns) {
    return rows.map(function (row) {
      return columns.map(function (column) {
        return formatValue(row[column]);
      }).join(delimiter);
    });
  }

  function format(rows, columns) {
    if (columns == null) columns = inferColumns(rows);
    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join("\n");
  }

  function formatBody(rows, columns) {
    if (columns == null) columns = inferColumns(rows);
    return preformatBody(rows, columns).join("\n");
  }

  function formatRows(rows) {
    return rows.map(formatRow).join("\n");
  }

  function formatRow(row) {
    return row.map(formatValue).join(delimiter);
  }

  function formatValue(value) {
    return value == null ? "" : value instanceof Date ? formatDate(value) : reFormat.test(value += "") ? "\"" + value.replace(/"/g, "\"\"") + "\"" : value;
  }

  return {
    parse: parse,
    parseRows: parseRows,
    format: format,
    formatBody: formatBody,
    formatRows: formatRows,
    formatRow: formatRow,
    formatValue: formatValue
  };
}
},{}],"yGbu":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.csvFormatValue = exports.csvFormatRow = exports.csvFormatRows = exports.csvFormatBody = exports.csvFormat = exports.csvParseRows = exports.csvParse = void 0;

var _dsv = _interopRequireDefault(require("./dsv.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var csv = (0, _dsv.default)(",");
var csvParse = csv.parse;
exports.csvParse = csvParse;
var csvParseRows = csv.parseRows;
exports.csvParseRows = csvParseRows;
var csvFormat = csv.format;
exports.csvFormat = csvFormat;
var csvFormatBody = csv.formatBody;
exports.csvFormatBody = csvFormatBody;
var csvFormatRows = csv.formatRows;
exports.csvFormatRows = csvFormatRows;
var csvFormatRow = csv.formatRow;
exports.csvFormatRow = csvFormatRow;
var csvFormatValue = csv.formatValue;
exports.csvFormatValue = csvFormatValue;
},{"./dsv.js":"uRW4"}],"Rica":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tsvFormatValue = exports.tsvFormatRow = exports.tsvFormatRows = exports.tsvFormatBody = exports.tsvFormat = exports.tsvParseRows = exports.tsvParse = void 0;

var _dsv = _interopRequireDefault(require("./dsv.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var tsv = (0, _dsv.default)("\t");
var tsvParse = tsv.parse;
exports.tsvParse = tsvParse;
var tsvParseRows = tsv.parseRows;
exports.tsvParseRows = tsvParseRows;
var tsvFormat = tsv.format;
exports.tsvFormat = tsvFormat;
var tsvFormatBody = tsv.formatBody;
exports.tsvFormatBody = tsvFormatBody;
var tsvFormatRows = tsv.formatRows;
exports.tsvFormatRows = tsvFormatRows;
var tsvFormatRow = tsv.formatRow;
exports.tsvFormatRow = tsvFormatRow;
var tsvFormatValue = tsv.formatValue;
exports.tsvFormatValue = tsvFormatValue;
},{"./dsv.js":"uRW4"}],"hdSA":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = autoType;

function autoType(object) {
  for (var key in object) {
    var value = object[key].trim(),
        number,
        m;
    if (!value) value = null;else if (value === "true") value = true;else if (value === "false") value = false;else if (value === "NaN") value = NaN;else if (!isNaN(number = +value)) value = number;else if (m = value.match(/^([-+]\d{2})?\d{4}(-\d{2}(-\d{2})?)?(T\d{2}:\d{2}(:\d{2}(\.\d{3})?)?(Z|[-+]\d{2}:\d{2})?)?$/)) {
      if (fixtz && !!m[4] && !m[7]) value = value.replace(/-/g, "/").replace(/T/, " ");
      value = new Date(value);
    } else continue;
    object[key] = value;
  }

  return object;
} // https://github.com/d3/d3-dsv/issues/45


var fixtz = new Date("2019-01-01T00:00").getHours() || new Date("2019-07-01T00:00").getHours();
},{}],"EC2w":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "dsvFormat", {
  enumerable: true,
  get: function () {
    return _dsv.default;
  }
});
Object.defineProperty(exports, "csvParse", {
  enumerable: true,
  get: function () {
    return _csv.csvParse;
  }
});
Object.defineProperty(exports, "csvParseRows", {
  enumerable: true,
  get: function () {
    return _csv.csvParseRows;
  }
});
Object.defineProperty(exports, "csvFormat", {
  enumerable: true,
  get: function () {
    return _csv.csvFormat;
  }
});
Object.defineProperty(exports, "csvFormatBody", {
  enumerable: true,
  get: function () {
    return _csv.csvFormatBody;
  }
});
Object.defineProperty(exports, "csvFormatRows", {
  enumerable: true,
  get: function () {
    return _csv.csvFormatRows;
  }
});
Object.defineProperty(exports, "csvFormatRow", {
  enumerable: true,
  get: function () {
    return _csv.csvFormatRow;
  }
});
Object.defineProperty(exports, "csvFormatValue", {
  enumerable: true,
  get: function () {
    return _csv.csvFormatValue;
  }
});
Object.defineProperty(exports, "tsvParse", {
  enumerable: true,
  get: function () {
    return _tsv.tsvParse;
  }
});
Object.defineProperty(exports, "tsvParseRows", {
  enumerable: true,
  get: function () {
    return _tsv.tsvParseRows;
  }
});
Object.defineProperty(exports, "tsvFormat", {
  enumerable: true,
  get: function () {
    return _tsv.tsvFormat;
  }
});
Object.defineProperty(exports, "tsvFormatBody", {
  enumerable: true,
  get: function () {
    return _tsv.tsvFormatBody;
  }
});
Object.defineProperty(exports, "tsvFormatRows", {
  enumerable: true,
  get: function () {
    return _tsv.tsvFormatRows;
  }
});
Object.defineProperty(exports, "tsvFormatRow", {
  enumerable: true,
  get: function () {
    return _tsv.tsvFormatRow;
  }
});
Object.defineProperty(exports, "tsvFormatValue", {
  enumerable: true,
  get: function () {
    return _tsv.tsvFormatValue;
  }
});
Object.defineProperty(exports, "autoType", {
  enumerable: true,
  get: function () {
    return _autoType.default;
  }
});

var _dsv = _interopRequireDefault(require("./dsv.js"));

var _csv = require("./csv.js");

var _tsv = require("./tsv.js");

var _autoType = _interopRequireDefault(require("./autoType.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./dsv.js":"uRW4","./csv.js":"yGbu","./tsv.js":"Rica","./autoType.js":"hdSA"}],"qUE6":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function responseBlob(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  return response.blob();
}

function _default(input, init) {
  return fetch(input, init).then(responseBlob);
}
},{}],"G9Fv":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function responseArrayBuffer(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  return response.arrayBuffer();
}

function _default(input, init) {
  return fetch(input, init).then(responseArrayBuffer);
}
},{}],"bNd6":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function responseText(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  return response.text();
}

function _default(input, init) {
  return fetch(input, init).then(responseText);
}
},{}],"Ul8d":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = dsv;
exports.tsv = exports.csv = void 0;

var _d3Dsv = require("d3-dsv");

var _text = _interopRequireDefault(require("./text"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function dsvParse(parse) {
  return function (input, init, row) {
    if (arguments.length === 2 && typeof init === "function") row = init, init = undefined;
    return (0, _text.default)(input, init).then(function (response) {
      return parse(response, row);
    });
  };
}

function dsv(delimiter, input, init, row) {
  if (arguments.length === 3 && typeof init === "function") row = init, init = undefined;
  var format = (0, _d3Dsv.dsvFormat)(delimiter);
  return (0, _text.default)(input, init).then(function (response) {
    return format.parse(response, row);
  });
}

var csv = dsvParse(_d3Dsv.csvParse);
exports.csv = csv;
var tsv = dsvParse(_d3Dsv.tsvParse);
exports.tsv = tsv;
},{"d3-dsv":"EC2w","./text":"bNd6"}],"cIzq":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(input, init) {
  return new Promise(function (resolve, reject) {
    var image = new Image();

    for (var key in init) image[key] = init[key];

    image.onerror = reject;

    image.onload = function () {
      resolve(image);
    };

    image.src = input;
  });
}
},{}],"VDYt":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function responseJson(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  return response.json();
}

function _default(input, init) {
  return fetch(input, init).then(responseJson);
}
},{}],"NUeg":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.svg = exports.html = exports.default = void 0;

var _text = _interopRequireDefault(require("./text"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function parser(type) {
  return function (input, init) {
    return (0, _text.default)(input, init).then(function (text) {
      return new DOMParser().parseFromString(text, type);
    });
  };
}

var _default = parser("application/xml");

exports.default = _default;
var html = parser("text/html");
exports.html = html;
var svg = parser("image/svg+xml");
exports.svg = svg;
},{"./text":"bNd6"}],"grWT":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "blob", {
  enumerable: true,
  get: function () {
    return _blob.default;
  }
});
Object.defineProperty(exports, "buffer", {
  enumerable: true,
  get: function () {
    return _buffer.default;
  }
});
Object.defineProperty(exports, "dsv", {
  enumerable: true,
  get: function () {
    return _dsv.default;
  }
});
Object.defineProperty(exports, "csv", {
  enumerable: true,
  get: function () {
    return _dsv.csv;
  }
});
Object.defineProperty(exports, "tsv", {
  enumerable: true,
  get: function () {
    return _dsv.tsv;
  }
});
Object.defineProperty(exports, "image", {
  enumerable: true,
  get: function () {
    return _image.default;
  }
});
Object.defineProperty(exports, "json", {
  enumerable: true,
  get: function () {
    return _json.default;
  }
});
Object.defineProperty(exports, "text", {
  enumerable: true,
  get: function () {
    return _text.default;
  }
});
Object.defineProperty(exports, "xml", {
  enumerable: true,
  get: function () {
    return _xml.default;
  }
});
Object.defineProperty(exports, "html", {
  enumerable: true,
  get: function () {
    return _xml.html;
  }
});
Object.defineProperty(exports, "svg", {
  enumerable: true,
  get: function () {
    return _xml.svg;
  }
});

var _blob = _interopRequireDefault(require("./blob"));

var _buffer = _interopRequireDefault(require("./buffer"));

var _dsv = _interopRequireWildcard(require("./dsv"));

var _image = _interopRequireDefault(require("./image"));

var _json = _interopRequireDefault(require("./json"));

var _text = _interopRequireDefault(require("./text"));

var _xml = _interopRequireWildcard(require("./xml"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./blob":"qUE6","./buffer":"G9Fv","./dsv":"Ul8d","./image":"cIzq","./json":"VDYt","./text":"bNd6","./xml":"NUeg"}],"i73m":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x, y) {
  var nodes;
  if (x == null) x = 0;
  if (y == null) y = 0;

  function force() {
    var i,
        n = nodes.length,
        node,
        sx = 0,
        sy = 0;

    for (i = 0; i < n; ++i) {
      node = nodes[i], sx += node.x, sy += node.y;
    }

    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {
      node = nodes[i], node.x -= sx, node.y -= sy;
    }
  }

  force.initialize = function (_) {
    nodes = _;
  };

  force.x = function (_) {
    return arguments.length ? (x = +_, force) : x;
  };

  force.y = function (_) {
    return arguments.length ? (y = +_, force) : y;
  };

  return force;
}
},{}],"Efbf":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  return (Math.random() - 0.5) * 1e-6;
}
},{}],"ALzt":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.addAll = addAll;

function _default(d) {
  var x = +this._x.call(null, d),
      y = +this._y.call(null, d);
  return add(this.cover(x, y), x, y, d);
}

function add(tree, x, y, d) {
  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points

  var parent,
      node = tree._root,
      leaf = {
    data: d
  },
      x0 = tree._x0,
      y0 = tree._y0,
      x1 = tree._x1,
      y1 = tree._y1,
      xm,
      ym,
      xp,
      yp,
      right,
      bottom,
      i,
      j; // If the tree is empty, initialize the root as a leaf.

  if (!node) return tree._root = leaf, tree; // Find the existing leaf for the new point, or add it.

  while (node.length) {
    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;
    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;
    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;
  } // Is the new point is exactly coincident with the existing point?


  xp = +tree._x.call(null, node.data);
  yp = +tree._y.call(null, node.data);
  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree; // Otherwise, split the leaf node until the old and new point are separated.

  do {
    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);
    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;
    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;
  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | xp >= xm));

  return parent[j] = node, parent[i] = leaf, tree;
}

function addAll(data) {
  var d,
      i,
      n = data.length,
      x,
      y,
      xz = new Array(n),
      yz = new Array(n),
      x0 = Infinity,
      y0 = Infinity,
      x1 = -Infinity,
      y1 = -Infinity; // Compute the points and their extent.

  for (i = 0; i < n; ++i) {
    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;
    xz[i] = x;
    yz[i] = y;
    if (x < x0) x0 = x;
    if (x > x1) x1 = x;
    if (y < y0) y0 = y;
    if (y > y1) y1 = y;
  } // If there were no (valid) points, abort.


  if (x0 > x1 || y0 > y1) return this; // Expand the tree to cover the new points.

  this.cover(x0, y0).cover(x1, y1); // Add the new points.

  for (i = 0; i < n; ++i) {
    add(this, xz[i], yz[i], data[i]);
  }

  return this;
}
},{}],"YvH0":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x, y) {
  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points

  var x0 = this._x0,
      y0 = this._y0,
      x1 = this._x1,
      y1 = this._y1; // If the quadtree has no extent, initialize them.
  // Integer extent are necessary so that if we later double the extent,
  // the existing quadrant boundaries don’t change due to floating point error!

  if (isNaN(x0)) {
    x1 = (x0 = Math.floor(x)) + 1;
    y1 = (y0 = Math.floor(y)) + 1;
  } // Otherwise, double repeatedly to cover.
  else {
      var z = x1 - x0,
          node = this._root,
          parent,
          i;

      while (x0 > x || x >= x1 || y0 > y || y >= y1) {
        i = (y < y0) << 1 | x < x0;
        parent = new Array(4), parent[i] = node, node = parent, z *= 2;

        switch (i) {
          case 0:
            x1 = x0 + z, y1 = y0 + z;
            break;

          case 1:
            x0 = x1 - z, y1 = y0 + z;
            break;

          case 2:
            x1 = x0 + z, y0 = y1 - z;
            break;

          case 3:
            x0 = x1 - z, y0 = y1 - z;
            break;
        }
      }

      if (this._root && this._root.length) this._root = node;
    }

  this._x0 = x0;
  this._y0 = y0;
  this._x1 = x1;
  this._y1 = y1;
  return this;
}
},{}],"uVl3":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var data = [];
  this.visit(function (node) {
    if (!node.length) do data.push(node.data); while (node = node.next);
  });
  return data;
}
},{}],"wciv":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(_) {
  return arguments.length ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1]) : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];
}
},{}],"HTh0":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(node, x0, y0, x1, y1) {
  this.node = node;
  this.x0 = x0;
  this.y0 = y0;
  this.x1 = x1;
  this.y1 = y1;
}
},{}],"NXzM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _quad = _interopRequireDefault(require("./quad.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(x, y, radius) {
  var data,
      x0 = this._x0,
      y0 = this._y0,
      x1,
      y1,
      x2,
      y2,
      x3 = this._x1,
      y3 = this._y1,
      quads = [],
      node = this._root,
      q,
      i;
  if (node) quads.push(new _quad.default(node, x0, y0, x3, y3));
  if (radius == null) radius = Infinity;else {
    x0 = x - radius, y0 = y - radius;
    x3 = x + radius, y3 = y + radius;
    radius *= radius;
  }

  while (q = quads.pop()) {
    // Stop searching if this quadrant can’t contain a closer node.
    if (!(node = q.node) || (x1 = q.x0) > x3 || (y1 = q.y0) > y3 || (x2 = q.x1) < x0 || (y2 = q.y1) < y0) continue; // Bisect the current quadrant.

    if (node.length) {
      var xm = (x1 + x2) / 2,
          ym = (y1 + y2) / 2;
      quads.push(new _quad.default(node[3], xm, ym, x2, y2), new _quad.default(node[2], x1, ym, xm, y2), new _quad.default(node[1], xm, y1, x2, ym), new _quad.default(node[0], x1, y1, xm, ym)); // Visit the closest quadrant first.

      if (i = (y >= ym) << 1 | x >= xm) {
        q = quads[quads.length - 1];
        quads[quads.length - 1] = quads[quads.length - 1 - i];
        quads[quads.length - 1 - i] = q;
      }
    } // Visit this point. (Visiting coincident points isn’t necessary!)
    else {
        var dx = x - +this._x.call(null, node.data),
            dy = y - +this._y.call(null, node.data),
            d2 = dx * dx + dy * dy;

        if (d2 < radius) {
          var d = Math.sqrt(radius = d2);
          x0 = x - d, y0 = y - d;
          x3 = x + d, y3 = y + d;
          data = node.data;
        }
      }
  }

  return data;
}
},{"./quad.js":"HTh0"}],"qMQE":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.removeAll = removeAll;

function _default(d) {
  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points

  var parent,
      node = this._root,
      retainer,
      previous,
      next,
      x0 = this._x0,
      y0 = this._y0,
      x1 = this._x1,
      y1 = this._y1,
      x,
      y,
      xm,
      ym,
      right,
      bottom,
      i,
      j; // If the tree is empty, initialize the root as a leaf.

  if (!node) return this; // Find the leaf node for the point.
  // While descending, also retain the deepest parent with a non-removed sibling.

  if (node.length) while (true) {
    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;
    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;
    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;
    if (!node.length) break;
    if (parent[i + 1 & 3] || parent[i + 2 & 3] || parent[i + 3 & 3]) retainer = parent, j = i;
  } // Find the point to remove.

  while (node.data !== d) if (!(previous = node, node = node.next)) return this;

  if (next = node.next) delete node.next; // If there are multiple coincident points, remove just the point.

  if (previous) return next ? previous.next = next : delete previous.next, this; // If this is the root point, remove it.

  if (!parent) return this._root = next, this; // Remove this leaf.

  next ? parent[i] = next : delete parent[i]; // If the parent now contains exactly one leaf, collapse superfluous parents.

  if ((node = parent[0] || parent[1] || parent[2] || parent[3]) && node === (parent[3] || parent[2] || parent[1] || parent[0]) && !node.length) {
    if (retainer) retainer[j] = node;else this._root = node;
  }

  return this;
}

function removeAll(data) {
  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);

  return this;
}
},{}],"f6UW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  return this._root;
}
},{}],"hpwG":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var size = 0;
  this.visit(function (node) {
    if (!node.length) do ++size; while (node = node.next);
  });
  return size;
}
},{}],"NlIW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _quad = _interopRequireDefault(require("./quad.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(callback) {
  var quads = [],
      q,
      node = this._root,
      child,
      x0,
      y0,
      x1,
      y1;
  if (node) quads.push(new _quad.default(node, this._x0, this._y0, this._x1, this._y1));

  while (q = quads.pop()) {
    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {
      var xm = (x0 + x1) / 2,
          ym = (y0 + y1) / 2;
      if (child = node[3]) quads.push(new _quad.default(child, xm, ym, x1, y1));
      if (child = node[2]) quads.push(new _quad.default(child, x0, ym, xm, y1));
      if (child = node[1]) quads.push(new _quad.default(child, xm, y0, x1, ym));
      if (child = node[0]) quads.push(new _quad.default(child, x0, y0, xm, ym));
    }
  }

  return this;
}
},{"./quad.js":"HTh0"}],"mFQa":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _quad = _interopRequireDefault(require("./quad.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(callback) {
  var quads = [],
      next = [],
      q;
  if (this._root) quads.push(new _quad.default(this._root, this._x0, this._y0, this._x1, this._y1));

  while (q = quads.pop()) {
    var node = q.node;

    if (node.length) {
      var child,
          x0 = q.x0,
          y0 = q.y0,
          x1 = q.x1,
          y1 = q.y1,
          xm = (x0 + x1) / 2,
          ym = (y0 + y1) / 2;
      if (child = node[0]) quads.push(new _quad.default(child, x0, y0, xm, ym));
      if (child = node[1]) quads.push(new _quad.default(child, xm, y0, x1, ym));
      if (child = node[2]) quads.push(new _quad.default(child, x0, ym, xm, y1));
      if (child = node[3]) quads.push(new _quad.default(child, xm, ym, x1, y1));
    }

    next.push(q);
  }

  while (q = next.pop()) {
    callback(q.node, q.x0, q.y0, q.x1, q.y1);
  }

  return this;
}
},{"./quad.js":"HTh0"}],"zEre":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defaultX = defaultX;
exports.default = _default;

function defaultX(d) {
  return d[0];
}

function _default(_) {
  return arguments.length ? (this._x = _, this) : this._x;
}
},{}],"C58w":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defaultY = defaultY;
exports.default = _default;

function defaultY(d) {
  return d[1];
}

function _default(_) {
  return arguments.length ? (this._y = _, this) : this._y;
}
},{}],"e6a1":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = quadtree;

var _add = _interopRequireWildcard(require("./add.js"));

var _cover = _interopRequireDefault(require("./cover.js"));

var _data = _interopRequireDefault(require("./data.js"));

var _extent = _interopRequireDefault(require("./extent.js"));

var _find = _interopRequireDefault(require("./find.js"));

var _remove = _interopRequireWildcard(require("./remove.js"));

var _root = _interopRequireDefault(require("./root.js"));

var _size = _interopRequireDefault(require("./size.js"));

var _visit = _interopRequireDefault(require("./visit.js"));

var _visitAfter = _interopRequireDefault(require("./visitAfter.js"));

var _x = _interopRequireWildcard(require("./x.js"));

var _y = _interopRequireWildcard(require("./y.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function quadtree(nodes, x, y) {
  var tree = new Quadtree(x == null ? _x.defaultX : x, y == null ? _y.defaultY : y, NaN, NaN, NaN, NaN);
  return nodes == null ? tree : tree.addAll(nodes);
}

function Quadtree(x, y, x0, y0, x1, y1) {
  this._x = x;
  this._y = y;
  this._x0 = x0;
  this._y0 = y0;
  this._x1 = x1;
  this._y1 = y1;
  this._root = undefined;
}

function leaf_copy(leaf) {
  var copy = {
    data: leaf.data
  },
      next = copy;

  while (leaf = leaf.next) next = next.next = {
    data: leaf.data
  };

  return copy;
}

var treeProto = quadtree.prototype = Quadtree.prototype;

treeProto.copy = function () {
  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),
      node = this._root,
      nodes,
      child;
  if (!node) return copy;
  if (!node.length) return copy._root = leaf_copy(node), copy;
  nodes = [{
    source: node,
    target: copy._root = new Array(4)
  }];

  while (node = nodes.pop()) {
    for (var i = 0; i < 4; ++i) {
      if (child = node.source[i]) {
        if (child.length) nodes.push({
          source: child,
          target: node.target[i] = new Array(4)
        });else node.target[i] = leaf_copy(child);
      }
    }
  }

  return copy;
};

treeProto.add = _add.default;
treeProto.addAll = _add.addAll;
treeProto.cover = _cover.default;
treeProto.data = _data.default;
treeProto.extent = _extent.default;
treeProto.find = _find.default;
treeProto.remove = _remove.default;
treeProto.removeAll = _remove.removeAll;
treeProto.root = _root.default;
treeProto.size = _size.default;
treeProto.visit = _visit.default;
treeProto.visitAfter = _visitAfter.default;
treeProto.x = _x.default;
treeProto.y = _y.default;
},{"./add.js":"ALzt","./cover.js":"YvH0","./data.js":"uVl3","./extent.js":"wciv","./find.js":"NXzM","./remove.js":"qMQE","./root.js":"f6UW","./size.js":"hpwG","./visit.js":"NlIW","./visitAfter.js":"mFQa","./x.js":"zEre","./y.js":"C58w"}],"lUbg":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "quadtree", {
  enumerable: true,
  get: function () {
    return _quadtree.default;
  }
});

var _quadtree = _interopRequireDefault(require("./quadtree.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./quadtree.js":"e6a1"}],"vmaP":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant"));

var _jiggle = _interopRequireDefault(require("./jiggle"));

var _d3Quadtree = require("d3-quadtree");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function x(d) {
  return d.x + d.vx;
}

function y(d) {
  return d.y + d.vy;
}

function _default(radius) {
  var nodes,
      radii,
      strength = 1,
      iterations = 1;
  if (typeof radius !== "function") radius = (0, _constant.default)(radius == null ? 1 : +radius);

  function force() {
    var i,
        n = nodes.length,
        tree,
        node,
        xi,
        yi,
        ri,
        ri2;

    for (var k = 0; k < iterations; ++k) {
      tree = (0, _d3Quadtree.quadtree)(nodes, x, y).visitAfter(prepare);

      for (i = 0; i < n; ++i) {
        node = nodes[i];
        ri = radii[node.index], ri2 = ri * ri;
        xi = node.x + node.vx;
        yi = node.y + node.vy;
        tree.visit(apply);
      }
    }

    function apply(quad, x0, y0, x1, y1) {
      var data = quad.data,
          rj = quad.r,
          r = ri + rj;

      if (data) {
        if (data.index > node.index) {
          var x = xi - data.x - data.vx,
              y = yi - data.y - data.vy,
              l = x * x + y * y;

          if (l < r * r) {
            if (x === 0) x = (0, _jiggle.default)(), l += x * x;
            if (y === 0) y = (0, _jiggle.default)(), l += y * y;
            l = (r - (l = Math.sqrt(l))) / l * strength;
            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));
            node.vy += (y *= l) * r;
            data.vx -= x * (r = 1 - r);
            data.vy -= y * r;
          }
        }

        return;
      }

      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;
    }
  }

  function prepare(quad) {
    if (quad.data) return quad.r = radii[quad.data.index];

    for (var i = quad.r = 0; i < 4; ++i) {
      if (quad[i] && quad[i].r > quad.r) {
        quad.r = quad[i].r;
      }
    }
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length,
        node;
    radii = new Array(n);

    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);
  }

  force.initialize = function (_) {
    nodes = _;
    initialize();
  };

  force.iterations = function (_) {
    return arguments.length ? (iterations = +_, force) : iterations;
  };

  force.strength = function (_) {
    return arguments.length ? (strength = +_, force) : strength;
  };

  force.radius = function (_) {
    return arguments.length ? (radius = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : radius;
  };

  return force;
}
},{"./constant":"aCvo","./jiggle":"Efbf","d3-quadtree":"lUbg"}],"zZLJ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant"));

var _jiggle = _interopRequireDefault(require("./jiggle"));

var _d3Collection = require("d3-collection");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function index(d) {
  return d.index;
}

function find(nodeById, nodeId) {
  var node = nodeById.get(nodeId);
  if (!node) throw new Error("missing: " + nodeId);
  return node;
}

function _default(links) {
  var id = index,
      strength = defaultStrength,
      strengths,
      distance = (0, _constant.default)(30),
      distances,
      nodes,
      count,
      bias,
      iterations = 1;
  if (links == null) links = [];

  function defaultStrength(link) {
    return 1 / Math.min(count[link.source.index], count[link.target.index]);
  }

  function force(alpha) {
    for (var k = 0, n = links.length; k < iterations; ++k) {
      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {
        link = links[i], source = link.source, target = link.target;
        x = target.x + target.vx - source.x - source.vx || (0, _jiggle.default)();
        y = target.y + target.vy - source.y - source.vy || (0, _jiggle.default)();
        l = Math.sqrt(x * x + y * y);
        l = (l - distances[i]) / l * alpha * strengths[i];
        x *= l, y *= l;
        target.vx -= x * (b = bias[i]);
        target.vy -= y * b;
        source.vx += x * (b = 1 - b);
        source.vy += y * b;
      }
    }
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length,
        m = links.length,
        nodeById = (0, _d3Collection.map)(nodes, id),
        link;

    for (i = 0, count = new Array(n); i < m; ++i) {
      link = links[i], link.index = i;
      if (typeof link.source !== "object") link.source = find(nodeById, link.source);
      if (typeof link.target !== "object") link.target = find(nodeById, link.target);
      count[link.source.index] = (count[link.source.index] || 0) + 1;
      count[link.target.index] = (count[link.target.index] || 0) + 1;
    }

    for (i = 0, bias = new Array(m); i < m; ++i) {
      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);
    }

    strengths = new Array(m), initializeStrength();
    distances = new Array(m), initializeDistance();
  }

  function initializeStrength() {
    if (!nodes) return;

    for (var i = 0, n = links.length; i < n; ++i) {
      strengths[i] = +strength(links[i], i, links);
    }
  }

  function initializeDistance() {
    if (!nodes) return;

    for (var i = 0, n = links.length; i < n; ++i) {
      distances[i] = +distance(links[i], i, links);
    }
  }

  force.initialize = function (_) {
    nodes = _;
    initialize();
  };

  force.links = function (_) {
    return arguments.length ? (links = _, initialize(), force) : links;
  };

  force.id = function (_) {
    return arguments.length ? (id = _, force) : id;
  };

  force.iterations = function (_) {
    return arguments.length ? (iterations = +_, force) : iterations;
  };

  force.strength = function (_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : (0, _constant.default)(+_), initializeStrength(), force) : strength;
  };

  force.distance = function (_) {
    return arguments.length ? (distance = typeof _ === "function" ? _ : (0, _constant.default)(+_), initializeDistance(), force) : distance;
  };

  return force;
}
},{"./constant":"aCvo","./jiggle":"Efbf","d3-collection":"S3hn"}],"Jr7D":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.x = x;
exports.y = y;
exports.default = _default;

var _d3Dispatch = require("d3-dispatch");

var _d3Collection = require("d3-collection");

var _d3Timer = require("d3-timer");

function x(d) {
  return d.x;
}

function y(d) {
  return d.y;
}

var initialRadius = 10,
    initialAngle = Math.PI * (3 - Math.sqrt(5));

function _default(nodes) {
  var simulation,
      alpha = 1,
      alphaMin = 0.001,
      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),
      alphaTarget = 0,
      velocityDecay = 0.6,
      forces = (0, _d3Collection.map)(),
      stepper = (0, _d3Timer.timer)(step),
      event = (0, _d3Dispatch.dispatch)("tick", "end");
  if (nodes == null) nodes = [];

  function step() {
    tick();
    event.call("tick", simulation);

    if (alpha < alphaMin) {
      stepper.stop();
      event.call("end", simulation);
    }
  }

  function tick(iterations) {
    var i,
        n = nodes.length,
        node;
    if (iterations === undefined) iterations = 1;

    for (var k = 0; k < iterations; ++k) {
      alpha += (alphaTarget - alpha) * alphaDecay;
      forces.each(function (force) {
        force(alpha);
      });

      for (i = 0; i < n; ++i) {
        node = nodes[i];
        if (node.fx == null) node.x += node.vx *= velocityDecay;else node.x = node.fx, node.vx = 0;
        if (node.fy == null) node.y += node.vy *= velocityDecay;else node.y = node.fy, node.vy = 0;
      }
    }

    return simulation;
  }

  function initializeNodes() {
    for (var i = 0, n = nodes.length, node; i < n; ++i) {
      node = nodes[i], node.index = i;
      if (node.fx != null) node.x = node.fx;
      if (node.fy != null) node.y = node.fy;

      if (isNaN(node.x) || isNaN(node.y)) {
        var radius = initialRadius * Math.sqrt(i),
            angle = i * initialAngle;
        node.x = radius * Math.cos(angle);
        node.y = radius * Math.sin(angle);
      }

      if (isNaN(node.vx) || isNaN(node.vy)) {
        node.vx = node.vy = 0;
      }
    }
  }

  function initializeForce(force) {
    if (force.initialize) force.initialize(nodes);
    return force;
  }

  initializeNodes();
  return simulation = {
    tick: tick,
    restart: function () {
      return stepper.restart(step), simulation;
    },
    stop: function () {
      return stepper.stop(), simulation;
    },
    nodes: function (_) {
      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;
    },
    alpha: function (_) {
      return arguments.length ? (alpha = +_, simulation) : alpha;
    },
    alphaMin: function (_) {
      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;
    },
    alphaDecay: function (_) {
      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;
    },
    alphaTarget: function (_) {
      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;
    },
    velocityDecay: function (_) {
      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;
    },
    force: function (name, _) {
      return arguments.length > 1 ? (_ == null ? forces.remove(name) : forces.set(name, initializeForce(_)), simulation) : forces.get(name);
    },
    find: function (x, y, radius) {
      var i = 0,
          n = nodes.length,
          dx,
          dy,
          d2,
          node,
          closest;
      if (radius == null) radius = Infinity;else radius *= radius;

      for (i = 0; i < n; ++i) {
        node = nodes[i];
        dx = x - node.x;
        dy = y - node.y;
        d2 = dx * dx + dy * dy;
        if (d2 < radius) closest = node, radius = d2;
      }

      return closest;
    },
    on: function (name, _) {
      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);
    }
  };
}
},{"d3-dispatch":"D3zY","d3-collection":"S3hn","d3-timer":"rdzS"}],"i5c4":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant"));

var _jiggle = _interopRequireDefault(require("./jiggle"));

var _d3Quadtree = require("d3-quadtree");

var _simulation = require("./simulation");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var nodes,
      node,
      alpha,
      strength = (0, _constant.default)(-30),
      strengths,
      distanceMin2 = 1,
      distanceMax2 = Infinity,
      theta2 = 0.81;

  function force(_) {
    var i,
        n = nodes.length,
        tree = (0, _d3Quadtree.quadtree)(nodes, _simulation.x, _simulation.y).visitAfter(accumulate);

    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length,
        node;
    strengths = new Array(n);

    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);
  }

  function accumulate(quad) {
    var strength = 0,
        q,
        c,
        weight = 0,
        x,
        y,
        i; // For internal nodes, accumulate forces from child quadrants.

    if (quad.length) {
      for (x = y = i = 0; i < 4; ++i) {
        if ((q = quad[i]) && (c = Math.abs(q.value))) {
          strength += q.value, weight += c, x += c * q.x, y += c * q.y;
        }
      }

      quad.x = x / weight;
      quad.y = y / weight;
    } // For leaf nodes, accumulate forces from coincident quadrants.
    else {
        q = quad;
        q.x = q.data.x;
        q.y = q.data.y;

        do strength += strengths[q.data.index]; while (q = q.next);
      }

    quad.value = strength;
  }

  function apply(quad, x1, _, x2) {
    if (!quad.value) return true;
    var x = quad.x - node.x,
        y = quad.y - node.y,
        w = x2 - x1,
        l = x * x + y * y; // Apply the Barnes-Hut approximation if possible.
    // Limit forces for very close nodes; randomize direction if coincident.

    if (w * w / theta2 < l) {
      if (l < distanceMax2) {
        if (x === 0) x = (0, _jiggle.default)(), l += x * x;
        if (y === 0) y = (0, _jiggle.default)(), l += y * y;
        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);
        node.vx += x * quad.value * alpha / l;
        node.vy += y * quad.value * alpha / l;
      }

      return true;
    } // Otherwise, process points directly.
    else if (quad.length || l >= distanceMax2) return; // Limit forces for very close nodes; randomize direction if coincident.


    if (quad.data !== node || quad.next) {
      if (x === 0) x = (0, _jiggle.default)(), l += x * x;
      if (y === 0) y = (0, _jiggle.default)(), l += y * y;
      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);
    }

    do if (quad.data !== node) {
      w = strengths[quad.data.index] * alpha / l;
      node.vx += x * w;
      node.vy += y * w;
    } while (quad = quad.next);
  }

  force.initialize = function (_) {
    nodes = _;
    initialize();
  };

  force.strength = function (_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : strength;
  };

  force.distanceMin = function (_) {
    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);
  };

  force.distanceMax = function (_) {
    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);
  };

  force.theta = function (_) {
    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);
  };

  return force;
}
},{"./constant":"aCvo","./jiggle":"Efbf","d3-quadtree":"lUbg","./simulation":"Jr7D"}],"UAq1":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(radius, x, y) {
  var nodes,
      strength = (0, _constant.default)(0.1),
      strengths,
      radiuses;
  if (typeof radius !== "function") radius = (0, _constant.default)(+radius);
  if (x == null) x = 0;
  if (y == null) y = 0;

  function force(alpha) {
    for (var i = 0, n = nodes.length; i < n; ++i) {
      var node = nodes[i],
          dx = node.x - x || 1e-6,
          dy = node.y - y || 1e-6,
          r = Math.sqrt(dx * dx + dy * dy),
          k = (radiuses[i] - r) * strengths[i] * alpha / r;
      node.vx += dx * k;
      node.vy += dy * k;
    }
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length;
    strengths = new Array(n);
    radiuses = new Array(n);

    for (i = 0; i < n; ++i) {
      radiuses[i] = +radius(nodes[i], i, nodes);
      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);
    }
  }

  force.initialize = function (_) {
    nodes = _, initialize();
  };

  force.strength = function (_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : strength;
  };

  force.radius = function (_) {
    return arguments.length ? (radius = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : radius;
  };

  force.x = function (_) {
    return arguments.length ? (x = +_, force) : x;
  };

  force.y = function (_) {
    return arguments.length ? (y = +_, force) : y;
  };

  return force;
}
},{"./constant":"aCvo"}],"ossL":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(x) {
  var strength = (0, _constant.default)(0.1),
      nodes,
      strengths,
      xz;
  if (typeof x !== "function") x = (0, _constant.default)(x == null ? 0 : +x);

  function force(alpha) {
    for (var i = 0, n = nodes.length, node; i < n; ++i) {
      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;
    }
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length;
    strengths = new Array(n);
    xz = new Array(n);

    for (i = 0; i < n; ++i) {
      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);
    }
  }

  force.initialize = function (_) {
    nodes = _;
    initialize();
  };

  force.strength = function (_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : strength;
  };

  force.x = function (_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : x;
  };

  return force;
}
},{"./constant":"aCvo"}],"GLsE":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(y) {
  var strength = (0, _constant.default)(0.1),
      nodes,
      strengths,
      yz;
  if (typeof y !== "function") y = (0, _constant.default)(y == null ? 0 : +y);

  function force(alpha) {
    for (var i = 0, n = nodes.length, node; i < n; ++i) {
      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;
    }
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length;
    strengths = new Array(n);
    yz = new Array(n);

    for (i = 0; i < n; ++i) {
      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);
    }
  }

  force.initialize = function (_) {
    nodes = _;
    initialize();
  };

  force.strength = function (_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : strength;
  };

  force.y = function (_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : y;
  };

  return force;
}
},{"./constant":"aCvo"}],"oYRE":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "forceCenter", {
  enumerable: true,
  get: function () {
    return _center.default;
  }
});
Object.defineProperty(exports, "forceCollide", {
  enumerable: true,
  get: function () {
    return _collide.default;
  }
});
Object.defineProperty(exports, "forceLink", {
  enumerable: true,
  get: function () {
    return _link.default;
  }
});
Object.defineProperty(exports, "forceManyBody", {
  enumerable: true,
  get: function () {
    return _manyBody.default;
  }
});
Object.defineProperty(exports, "forceRadial", {
  enumerable: true,
  get: function () {
    return _radial.default;
  }
});
Object.defineProperty(exports, "forceSimulation", {
  enumerable: true,
  get: function () {
    return _simulation.default;
  }
});
Object.defineProperty(exports, "forceX", {
  enumerable: true,
  get: function () {
    return _x.default;
  }
});
Object.defineProperty(exports, "forceY", {
  enumerable: true,
  get: function () {
    return _y.default;
  }
});

var _center = _interopRequireDefault(require("./center"));

var _collide = _interopRequireDefault(require("./collide"));

var _link = _interopRequireDefault(require("./link"));

var _manyBody = _interopRequireDefault(require("./manyBody"));

var _radial = _interopRequireDefault(require("./radial"));

var _simulation = _interopRequireDefault(require("./simulation"));

var _x = _interopRequireDefault(require("./x"));

var _y = _interopRequireDefault(require("./y"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./center":"i73m","./collide":"vmaP","./link":"zZLJ","./manyBody":"i5c4","./radial":"UAq1","./simulation":"Jr7D","./x":"ossL","./y":"GLsE"}],"GAUC":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

// Computes the decimal coefficient and exponent of the specified number x with
// significant digits p, where x is positive and p is in [1, 21] or undefined.
// For example, formatDecimal(1.23) returns ["123", 0].
function _default(x, p) {
  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf("e")) < 0) return null; // NaN, ±Infinity

  var i,
      coefficient = x.slice(0, i); // The string returned by toExponential either has the form \d\.\d+e[-+]\d+
  // (e.g., 1.2e+3) or the form \de[-+]\d+ (e.g., 1e+3).

  return [coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient, +x.slice(i + 1)];
}
},{}],"tXBB":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _formatDecimal = _interopRequireDefault(require("./formatDecimal.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(x) {
  return x = (0, _formatDecimal.default)(Math.abs(x)), x ? x[1] : NaN;
}
},{"./formatDecimal.js":"GAUC"}],"rbAM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(grouping, thousands) {
  return function (value, width) {
    var i = value.length,
        t = [],
        j = 0,
        g = grouping[0],
        length = 0;

    while (i > 0 && g > 0) {
      if (length + g + 1 > width) g = Math.max(1, width - length);
      t.push(value.substring(i -= g, i + g));
      if ((length += g + 1) > width) break;
      g = grouping[j = (j + 1) % grouping.length];
    }

    return t.reverse().join(thousands);
  };
}
},{}],"hTcF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(numerals) {
  return function (value) {
    return value.replace(/[0-9]/g, function (i) {
      return numerals[+i];
    });
  };
}
},{}],"aibL":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = formatSpecifier;
exports.FormatSpecifier = FormatSpecifier;
// [[fill]align][sign][symbol][0][width][,][.precision][~][type]
var re = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;

function formatSpecifier(specifier) {
  if (!(match = re.exec(specifier))) throw new Error("invalid format: " + specifier);
  var match;
  return new FormatSpecifier({
    fill: match[1],
    align: match[2],
    sign: match[3],
    symbol: match[4],
    zero: match[5],
    width: match[6],
    comma: match[7],
    precision: match[8] && match[8].slice(1),
    trim: match[9],
    type: match[10]
  });
}

formatSpecifier.prototype = FormatSpecifier.prototype; // instanceof

function FormatSpecifier(specifier) {
  this.fill = specifier.fill === undefined ? " " : specifier.fill + "";
  this.align = specifier.align === undefined ? ">" : specifier.align + "";
  this.sign = specifier.sign === undefined ? "-" : specifier.sign + "";
  this.symbol = specifier.symbol === undefined ? "" : specifier.symbol + "";
  this.zero = !!specifier.zero;
  this.width = specifier.width === undefined ? undefined : +specifier.width;
  this.comma = !!specifier.comma;
  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;
  this.trim = !!specifier.trim;
  this.type = specifier.type === undefined ? "" : specifier.type + "";
}

FormatSpecifier.prototype.toString = function () {
  return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (this.width === undefined ? "" : Math.max(1, this.width | 0)) + (this.comma ? "," : "") + (this.precision === undefined ? "" : "." + Math.max(0, this.precision | 0)) + (this.trim ? "~" : "") + this.type;
};
},{}],"SUnU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.
function _default(s) {
  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {
    switch (s[i]) {
      case ".":
        i0 = i1 = i;
        break;

      case "0":
        if (i0 === 0) i0 = i;
        i1 = i;
        break;

      default:
        if (!+s[i]) break out;
        if (i0 > 0) i0 = 0;
        break;
    }
  }

  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;
}
},{}],"fBpa":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.prefixExponent = void 0;

var _formatDecimal = _interopRequireDefault(require("./formatDecimal.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var prefixExponent;
exports.prefixExponent = prefixExponent;

function _default(x, p) {
  var d = (0, _formatDecimal.default)(x, p);
  if (!d) return x + "";
  var coefficient = d[0],
      exponent = d[1],
      i = exponent - (exports.prefixExponent = prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,
      n = coefficient.length;
  return i === n ? coefficient : i > n ? coefficient + new Array(i - n + 1).join("0") : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i) : "0." + new Array(1 - i).join("0") + (0, _formatDecimal.default)(x, Math.max(0, p + i - 1))[0]; // less than 1y!
}
},{"./formatDecimal.js":"GAUC"}],"UDrw":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _formatDecimal = _interopRequireDefault(require("./formatDecimal.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(x, p) {
  var d = (0, _formatDecimal.default)(x, p);
  if (!d) return x + "";
  var coefficient = d[0],
      exponent = d[1];
  return exponent < 0 ? "0." + new Array(-exponent).join("0") + coefficient : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1) : coefficient + new Array(exponent - coefficient.length + 2).join("0");
}
},{"./formatDecimal.js":"GAUC"}],"Wavi":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _formatPrefixAuto = _interopRequireDefault(require("./formatPrefixAuto.js"));

var _formatRounded = _interopRequireDefault(require("./formatRounded.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = {
  "%": function (x, p) {
    return (x * 100).toFixed(p);
  },
  "b": function (x) {
    return Math.round(x).toString(2);
  },
  "c": function (x) {
    return x + "";
  },
  "d": function (x) {
    return Math.round(x).toString(10);
  },
  "e": function (x, p) {
    return x.toExponential(p);
  },
  "f": function (x, p) {
    return x.toFixed(p);
  },
  "g": function (x, p) {
    return x.toPrecision(p);
  },
  "o": function (x) {
    return Math.round(x).toString(8);
  },
  "p": function (x, p) {
    return (0, _formatRounded.default)(x * 100, p);
  },
  "r": _formatRounded.default,
  "s": _formatPrefixAuto.default,
  "X": function (x) {
    return Math.round(x).toString(16).toUpperCase();
  },
  "x": function (x) {
    return Math.round(x).toString(16);
  }
};
exports.default = _default;
},{"./formatPrefixAuto.js":"fBpa","./formatRounded.js":"UDrw"}],"IVmM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _exponent = _interopRequireDefault(require("./exponent.js"));

var _formatGroup = _interopRequireDefault(require("./formatGroup.js"));

var _formatNumerals = _interopRequireDefault(require("./formatNumerals.js"));

var _formatSpecifier = _interopRequireDefault(require("./formatSpecifier.js"));

var _formatTrim = _interopRequireDefault(require("./formatTrim.js"));

var _formatTypes = _interopRequireDefault(require("./formatTypes.js"));

var _formatPrefixAuto = require("./formatPrefixAuto.js");

var _identity = _interopRequireDefault(require("./identity.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var map = Array.prototype.map,
    prefixes = ["y", "z", "a", "f", "p", "n", "µ", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"];

function _default(locale) {
  var group = locale.grouping === undefined || locale.thousands === undefined ? _identity.default : (0, _formatGroup.default)(map.call(locale.grouping, Number), locale.thousands + ""),
      currencyPrefix = locale.currency === undefined ? "" : locale.currency[0] + "",
      currencySuffix = locale.currency === undefined ? "" : locale.currency[1] + "",
      decimal = locale.decimal === undefined ? "." : locale.decimal + "",
      numerals = locale.numerals === undefined ? _identity.default : (0, _formatNumerals.default)(map.call(locale.numerals, String)),
      percent = locale.percent === undefined ? "%" : locale.percent + "",
      minus = locale.minus === undefined ? "-" : locale.minus + "",
      nan = locale.nan === undefined ? "NaN" : locale.nan + "";

  function newFormat(specifier) {
    specifier = (0, _formatSpecifier.default)(specifier);
    var fill = specifier.fill,
        align = specifier.align,
        sign = specifier.sign,
        symbol = specifier.symbol,
        zero = specifier.zero,
        width = specifier.width,
        comma = specifier.comma,
        precision = specifier.precision,
        trim = specifier.trim,
        type = specifier.type; // The "n" type is an alias for ",g".

    if (type === "n") comma = true, type = "g"; // The "" type, and any invalid type, is an alias for ".12~g".
    else if (!_formatTypes.default[type]) precision === undefined && (precision = 12), trim = true, type = "g"; // If zero fill is specified, padding goes after sign and before digits.

    if (zero || fill === "0" && align === "=") zero = true, fill = "0", align = "="; // Compute the prefix and suffix.
    // For SI-prefix, the suffix is lazily computed.

    var prefix = symbol === "$" ? currencyPrefix : symbol === "#" && /[boxX]/.test(type) ? "0" + type.toLowerCase() : "",
        suffix = symbol === "$" ? currencySuffix : /[%p]/.test(type) ? percent : ""; // What format function should we use?
    // Is this an integer type?
    // Can this type generate exponential notation?

    var formatType = _formatTypes.default[type],
        maybeSuffix = /[defgprs%]/.test(type); // Set the default precision if not specified,
    // or clamp the specified precision to the supported range.
    // For significant precision, it must be in [1, 21].
    // For fixed precision, it must be in [0, 20].

    precision = precision === undefined ? 6 : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));

    function format(value) {
      var valuePrefix = prefix,
          valueSuffix = suffix,
          i,
          n,
          c;

      if (type === "c") {
        valueSuffix = formatType(value) + valueSuffix;
        value = "";
      } else {
        value = +value; // Perform the initial formatting.

        var valueNegative = value < 0;
        value = isNaN(value) ? nan : formatType(Math.abs(value), precision); // Trim insignificant zeros.

        if (trim) value = (0, _formatTrim.default)(value); // If a negative value rounds to zero during formatting, treat as positive.

        if (valueNegative && +value === 0) valueNegative = false; // Compute the prefix and suffix.

        valuePrefix = (valueNegative ? sign === "(" ? sign : minus : sign === "-" || sign === "(" ? "" : sign) + valuePrefix;
        valueSuffix = (type === "s" ? prefixes[8 + _formatPrefixAuto.prefixExponent / 3] : "") + valueSuffix + (valueNegative && sign === "(" ? ")" : ""); // Break the formatted value into the integer “value” part that can be
        // grouped, and fractional or exponential “suffix” part that is not.

        if (maybeSuffix) {
          i = -1, n = value.length;

          while (++i < n) {
            if (c = value.charCodeAt(i), 48 > c || c > 57) {
              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;
              value = value.slice(0, i);
              break;
            }
          }
        }
      } // If the fill character is not "0", grouping is applied before padding.


      if (comma && !zero) value = group(value, Infinity); // Compute the padding.

      var length = valuePrefix.length + value.length + valueSuffix.length,
          padding = length < width ? new Array(width - length + 1).join(fill) : ""; // If the fill character is "0", grouping is applied after padding.

      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = ""; // Reconstruct the final output based on the desired alignment.

      switch (align) {
        case "<":
          value = valuePrefix + value + valueSuffix + padding;
          break;

        case "=":
          value = valuePrefix + padding + value + valueSuffix;
          break;

        case "^":
          value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);
          break;

        default:
          value = padding + valuePrefix + value + valueSuffix;
          break;
      }

      return numerals(value);
    }

    format.toString = function () {
      return specifier + "";
    };

    return format;
  }

  function formatPrefix(specifier, value) {
    var f = newFormat((specifier = (0, _formatSpecifier.default)(specifier), specifier.type = "f", specifier)),
        e = Math.max(-8, Math.min(8, Math.floor((0, _exponent.default)(value) / 3))) * 3,
        k = Math.pow(10, -e),
        prefix = prefixes[8 + e / 3];
    return function (value) {
      return f(k * value) + prefix;
    };
  }

  return {
    format: newFormat,
    formatPrefix: formatPrefix
  };
}
},{"./exponent.js":"tXBB","./formatGroup.js":"rbAM","./formatNumerals.js":"hTcF","./formatSpecifier.js":"aibL","./formatTrim.js":"SUnU","./formatTypes.js":"Wavi","./formatPrefixAuto.js":"fBpa","./identity.js":"NNW9"}],"KaMm":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = defaultLocale;
exports.formatPrefix = exports.format = void 0;

var _locale = _interopRequireDefault(require("./locale.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var locale;
var format;
exports.format = format;
var formatPrefix;
exports.formatPrefix = formatPrefix;
defaultLocale({
  decimal: ".",
  thousands: ",",
  grouping: [3],
  currency: ["$", ""],
  minus: "-"
});

function defaultLocale(definition) {
  locale = (0, _locale.default)(definition);
  exports.format = format = locale.format;
  exports.formatPrefix = formatPrefix = locale.formatPrefix;
  return locale;
}
},{"./locale.js":"IVmM"}],"EyKk":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _exponent = _interopRequireDefault(require("./exponent.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(step) {
  return Math.max(0, -(0, _exponent.default)(Math.abs(step)));
}
},{"./exponent.js":"tXBB"}],"VPkn":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _exponent = _interopRequireDefault(require("./exponent.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(step, value) {
  return Math.max(0, Math.max(-8, Math.min(8, Math.floor((0, _exponent.default)(value) / 3))) * 3 - (0, _exponent.default)(Math.abs(step)));
}
},{"./exponent.js":"tXBB"}],"DMyZ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _exponent = _interopRequireDefault(require("./exponent.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(step, max) {
  step = Math.abs(step), max = Math.abs(max) - step;
  return Math.max(0, (0, _exponent.default)(max) - (0, _exponent.default)(step)) + 1;
}
},{"./exponent.js":"tXBB"}],"VuZR":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "formatDefaultLocale", {
  enumerable: true,
  get: function () {
    return _defaultLocale.default;
  }
});
Object.defineProperty(exports, "format", {
  enumerable: true,
  get: function () {
    return _defaultLocale.format;
  }
});
Object.defineProperty(exports, "formatPrefix", {
  enumerable: true,
  get: function () {
    return _defaultLocale.formatPrefix;
  }
});
Object.defineProperty(exports, "formatLocale", {
  enumerable: true,
  get: function () {
    return _locale.default;
  }
});
Object.defineProperty(exports, "formatSpecifier", {
  enumerable: true,
  get: function () {
    return _formatSpecifier.default;
  }
});
Object.defineProperty(exports, "FormatSpecifier", {
  enumerable: true,
  get: function () {
    return _formatSpecifier.FormatSpecifier;
  }
});
Object.defineProperty(exports, "precisionFixed", {
  enumerable: true,
  get: function () {
    return _precisionFixed.default;
  }
});
Object.defineProperty(exports, "precisionPrefix", {
  enumerable: true,
  get: function () {
    return _precisionPrefix.default;
  }
});
Object.defineProperty(exports, "precisionRound", {
  enumerable: true,
  get: function () {
    return _precisionRound.default;
  }
});

var _defaultLocale = _interopRequireWildcard(require("./defaultLocale.js"));

var _locale = _interopRequireDefault(require("./locale.js"));

var _formatSpecifier = _interopRequireWildcard(require("./formatSpecifier.js"));

var _precisionFixed = _interopRequireDefault(require("./precisionFixed.js"));

var _precisionPrefix = _interopRequireDefault(require("./precisionPrefix.js"));

var _precisionRound = _interopRequireDefault(require("./precisionRound.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"./defaultLocale.js":"KaMm","./locale.js":"IVmM","./formatSpecifier.js":"aibL","./precisionFixed.js":"EyKk","./precisionPrefix.js":"VPkn","./precisionRound.js":"DMyZ"}],"fG8A":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

// Adds floating point numbers with twice the normal precision.
// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and
// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)
// 305–363 (1997).
// Code adapted from GeographicLib by Charles F. F. Karney,
// http://geographiclib.sourceforge.net/
function _default() {
  return new Adder();
}

function Adder() {
  this.reset();
}

Adder.prototype = {
  constructor: Adder,
  reset: function () {
    this.s = // rounded value
    this.t = 0; // exact error
  },
  add: function (y) {
    add(temp, y, this.t);
    add(this, temp.s, this.s);
    if (this.s) this.t += temp.t;else this.s = temp.t;
  },
  valueOf: function () {
    return this.s;
  }
};
var temp = new Adder();

function add(adder, a, b) {
  var x = adder.s = a + b,
      bv = x - a,
      av = x - bv;
  adder.t = a - av + (b - bv);
}
},{}],"JQgf":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.acos = acos;
exports.asin = asin;
exports.haversin = haversin;
exports.tan = exports.sqrt = exports.sign = exports.sin = exports.pow = exports.log = exports.floor = exports.exp = exports.ceil = exports.cos = exports.atan2 = exports.atan = exports.abs = exports.radians = exports.degrees = exports.tau = exports.quarterPi = exports.halfPi = exports.pi = exports.epsilon2 = exports.epsilon = void 0;
var epsilon = 1e-6;
exports.epsilon = epsilon;
var epsilon2 = 1e-12;
exports.epsilon2 = epsilon2;
var pi = Math.PI;
exports.pi = pi;
var halfPi = pi / 2;
exports.halfPi = halfPi;
var quarterPi = pi / 4;
exports.quarterPi = quarterPi;
var tau = pi * 2;
exports.tau = tau;
var degrees = 180 / pi;
exports.degrees = degrees;
var radians = pi / 180;
exports.radians = radians;
var abs = Math.abs;
exports.abs = abs;
var atan = Math.atan;
exports.atan = atan;
var atan2 = Math.atan2;
exports.atan2 = atan2;
var cos = Math.cos;
exports.cos = cos;
var ceil = Math.ceil;
exports.ceil = ceil;
var exp = Math.exp;
exports.exp = exp;
var floor = Math.floor;
exports.floor = floor;
var log = Math.log;
exports.log = log;
var pow = Math.pow;
exports.pow = pow;
var sin = Math.sin;
exports.sin = sin;

var sign = Math.sign || function (x) {
  return x > 0 ? 1 : x < 0 ? -1 : 0;
};

exports.sign = sign;
var sqrt = Math.sqrt;
exports.sqrt = sqrt;
var tan = Math.tan;
exports.tan = tan;

function acos(x) {
  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);
}

function asin(x) {
  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);
}

function haversin(x) {
  return (x = sin(x / 2)) * x;
}
},{}],"DUih":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = noop;

function noop() {}
},{}],"XQuq":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function streamGeometry(geometry, stream) {
  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {
    streamGeometryType[geometry.type](geometry, stream);
  }
}

var streamObjectType = {
  Feature: function (object, stream) {
    streamGeometry(object.geometry, stream);
  },
  FeatureCollection: function (object, stream) {
    var features = object.features,
        i = -1,
        n = features.length;

    while (++i < n) streamGeometry(features[i].geometry, stream);
  }
};
var streamGeometryType = {
  Sphere: function (object, stream) {
    stream.sphere();
  },
  Point: function (object, stream) {
    object = object.coordinates;
    stream.point(object[0], object[1], object[2]);
  },
  MultiPoint: function (object, stream) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);
  },
  LineString: function (object, stream) {
    streamLine(object.coordinates, stream, 0);
  },
  MultiLineString: function (object, stream) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) streamLine(coordinates[i], stream, 0);
  },
  Polygon: function (object, stream) {
    streamPolygon(object.coordinates, stream);
  },
  MultiPolygon: function (object, stream) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) streamPolygon(coordinates[i], stream);
  },
  GeometryCollection: function (object, stream) {
    var geometries = object.geometries,
        i = -1,
        n = geometries.length;

    while (++i < n) streamGeometry(geometries[i], stream);
  }
};

function streamLine(coordinates, stream, closed) {
  var i = -1,
      n = coordinates.length - closed,
      coordinate;
  stream.lineStart();

  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);

  stream.lineEnd();
}

function streamPolygon(coordinates, stream) {
  var i = -1,
      n = coordinates.length;
  stream.polygonStart();

  while (++i < n) streamLine(coordinates[i], stream, 1);

  stream.polygonEnd();
}

function _default(object, stream) {
  if (object && streamObjectType.hasOwnProperty(object.type)) {
    streamObjectType[object.type](object, stream);
  } else {
    streamGeometry(object, stream);
  }
}
},{}],"rKta":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.areaStream = exports.areaRingSum = void 0;

var _adder = _interopRequireDefault(require("./adder.js"));

var _math = require("./math.js");

var _noop = _interopRequireDefault(require("./noop.js"));

var _stream = _interopRequireDefault(require("./stream.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var areaRingSum = (0, _adder.default)();
exports.areaRingSum = areaRingSum;
var areaSum = (0, _adder.default)(),
    lambda00,
    phi00,
    lambda0,
    cosPhi0,
    sinPhi0;
var areaStream = {
  point: _noop.default,
  lineStart: _noop.default,
  lineEnd: _noop.default,
  polygonStart: function () {
    areaRingSum.reset();
    areaStream.lineStart = areaRingStart;
    areaStream.lineEnd = areaRingEnd;
  },
  polygonEnd: function () {
    var areaRing = +areaRingSum;
    areaSum.add(areaRing < 0 ? _math.tau + areaRing : areaRing);
    this.lineStart = this.lineEnd = this.point = _noop.default;
  },
  sphere: function () {
    areaSum.add(_math.tau);
  }
};
exports.areaStream = areaStream;

function areaRingStart() {
  areaStream.point = areaPointFirst;
}

function areaRingEnd() {
  areaPoint(lambda00, phi00);
}

function areaPointFirst(lambda, phi) {
  areaStream.point = areaPoint;
  lambda00 = lambda, phi00 = phi;
  lambda *= _math.radians, phi *= _math.radians;
  lambda0 = lambda, cosPhi0 = (0, _math.cos)(phi = phi / 2 + _math.quarterPi), sinPhi0 = (0, _math.sin)(phi);
}

function areaPoint(lambda, phi) {
  lambda *= _math.radians, phi *= _math.radians;
  phi = phi / 2 + _math.quarterPi; // half the angular distance from south pole
  // Spherical excess E for a spherical triangle with vertices: south pole,
  // previous point, current point.  Uses a formula derived from Cagnoli’s
  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).

  var dLambda = lambda - lambda0,
      sdLambda = dLambda >= 0 ? 1 : -1,
      adLambda = sdLambda * dLambda,
      cosPhi = (0, _math.cos)(phi),
      sinPhi = (0, _math.sin)(phi),
      k = sinPhi0 * sinPhi,
      u = cosPhi0 * cosPhi + k * (0, _math.cos)(adLambda),
      v = k * sdLambda * (0, _math.sin)(adLambda);
  areaRingSum.add((0, _math.atan2)(v, u)); // Advance the previous points.

  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;
}

function _default(object) {
  areaSum.reset();
  (0, _stream.default)(object, areaStream);
  return areaSum * 2;
}
},{"./adder.js":"fG8A","./math.js":"JQgf","./noop.js":"DUih","./stream.js":"XQuq"}],"V83Q":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.spherical = spherical;
exports.cartesian = cartesian;
exports.cartesianDot = cartesianDot;
exports.cartesianCross = cartesianCross;
exports.cartesianAddInPlace = cartesianAddInPlace;
exports.cartesianScale = cartesianScale;
exports.cartesianNormalizeInPlace = cartesianNormalizeInPlace;

var _math = require("./math.js");

function spherical(cartesian) {
  return [(0, _math.atan2)(cartesian[1], cartesian[0]), (0, _math.asin)(cartesian[2])];
}

function cartesian(spherical) {
  var lambda = spherical[0],
      phi = spherical[1],
      cosPhi = (0, _math.cos)(phi);
  return [cosPhi * (0, _math.cos)(lambda), cosPhi * (0, _math.sin)(lambda), (0, _math.sin)(phi)];
}

function cartesianDot(a, b) {
  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
}

function cartesianCross(a, b) {
  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];
} // TODO return a


function cartesianAddInPlace(a, b) {
  a[0] += b[0], a[1] += b[1], a[2] += b[2];
}

function cartesianScale(vector, k) {
  return [vector[0] * k, vector[1] * k, vector[2] * k];
} // TODO return d


function cartesianNormalizeInPlace(d) {
  var l = (0, _math.sqrt)(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);
  d[0] /= l, d[1] /= l, d[2] /= l;
}
},{"./math.js":"JQgf"}],"rw3L":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _adder = _interopRequireDefault(require("./adder.js"));

var _area = require("./area.js");

var _cartesian = require("./cartesian.js");

var _math = require("./math.js");

var _stream = _interopRequireDefault(require("./stream.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var lambda0,
    phi0,
    lambda1,
    phi1,
    // bounds
lambda2,
    // previous lambda-coordinate
lambda00,
    phi00,
    // first point
p0,
    // previous 3D point
deltaSum = (0, _adder.default)(),
    ranges,
    range;
var boundsStream = {
  point: boundsPoint,
  lineStart: boundsLineStart,
  lineEnd: boundsLineEnd,
  polygonStart: function () {
    boundsStream.point = boundsRingPoint;
    boundsStream.lineStart = boundsRingStart;
    boundsStream.lineEnd = boundsRingEnd;
    deltaSum.reset();

    _area.areaStream.polygonStart();
  },
  polygonEnd: function () {
    _area.areaStream.polygonEnd();

    boundsStream.point = boundsPoint;
    boundsStream.lineStart = boundsLineStart;
    boundsStream.lineEnd = boundsLineEnd;
    if (_area.areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);else if (deltaSum > _math.epsilon) phi1 = 90;else if (deltaSum < -_math.epsilon) phi0 = -90;
    range[0] = lambda0, range[1] = lambda1;
  },
  sphere: function () {
    lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);
  }
};

function boundsPoint(lambda, phi) {
  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);
  if (phi < phi0) phi0 = phi;
  if (phi > phi1) phi1 = phi;
}

function linePoint(lambda, phi) {
  var p = (0, _cartesian.cartesian)([lambda * _math.radians, phi * _math.radians]);

  if (p0) {
    var normal = (0, _cartesian.cartesianCross)(p0, p),
        equatorial = [normal[1], -normal[0], 0],
        inflection = (0, _cartesian.cartesianCross)(equatorial, normal);
    (0, _cartesian.cartesianNormalizeInPlace)(inflection);
    inflection = (0, _cartesian.spherical)(inflection);
    var delta = lambda - lambda2,
        sign = delta > 0 ? 1 : -1,
        lambdai = inflection[0] * _math.degrees * sign,
        phii,
        antimeridian = (0, _math.abs)(delta) > 180;

    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {
      phii = inflection[1] * _math.degrees;
      if (phii > phi1) phi1 = phii;
    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {
      phii = -inflection[1] * _math.degrees;
      if (phii < phi0) phi0 = phii;
    } else {
      if (phi < phi0) phi0 = phi;
      if (phi > phi1) phi1 = phi;
    }

    if (antimeridian) {
      if (lambda < lambda2) {
        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;
      } else {
        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;
      }
    } else {
      if (lambda1 >= lambda0) {
        if (lambda < lambda0) lambda0 = lambda;
        if (lambda > lambda1) lambda1 = lambda;
      } else {
        if (lambda > lambda2) {
          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;
        } else {
          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;
        }
      }
    }
  } else {
    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);
  }

  if (phi < phi0) phi0 = phi;
  if (phi > phi1) phi1 = phi;
  p0 = p, lambda2 = lambda;
}

function boundsLineStart() {
  boundsStream.point = linePoint;
}

function boundsLineEnd() {
  range[0] = lambda0, range[1] = lambda1;
  boundsStream.point = boundsPoint;
  p0 = null;
}

function boundsRingPoint(lambda, phi) {
  if (p0) {
    var delta = lambda - lambda2;
    deltaSum.add((0, _math.abs)(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);
  } else {
    lambda00 = lambda, phi00 = phi;
  }

  _area.areaStream.point(lambda, phi);

  linePoint(lambda, phi);
}

function boundsRingStart() {
  _area.areaStream.lineStart();
}

function boundsRingEnd() {
  boundsRingPoint(lambda00, phi00);

  _area.areaStream.lineEnd();

  if ((0, _math.abs)(deltaSum) > _math.epsilon) lambda0 = -(lambda1 = 180);
  range[0] = lambda0, range[1] = lambda1;
  p0 = null;
} // Finds the left-right distance between two longitudes.
// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want
// the distance between ±180° to be 360°.


function angle(lambda0, lambda1) {
  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;
}

function rangeCompare(a, b) {
  return a[0] - b[0];
}

function rangeContains(range, x) {
  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;
}

function _default(feature) {
  var i, n, a, b, merged, deltaMax, delta;
  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);
  ranges = [];
  (0, _stream.default)(feature, boundsStream); // First, sort ranges by their minimum longitudes.

  if (n = ranges.length) {
    ranges.sort(rangeCompare); // Then, merge any ranges that overlap.

    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {
      b = ranges[i];

      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {
        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];
        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];
      } else {
        merged.push(a = b);
      }
    } // Finally, find the largest gap between the merged ranges.
    // The final bounding box will be the inverse of this gap.


    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {
      b = merged[i];
      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];
    }
  }

  ranges = range = null;
  return lambda0 === Infinity || phi0 === Infinity ? [[NaN, NaN], [NaN, NaN]] : [[lambda0, phi0], [lambda1, phi1]];
}
},{"./adder.js":"fG8A","./area.js":"rKta","./cartesian.js":"V83Q","./math.js":"JQgf","./stream.js":"XQuq"}],"GCsQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _math = require("./math.js");

var _noop = _interopRequireDefault(require("./noop.js"));

var _stream = _interopRequireDefault(require("./stream.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var W0, W1, X0, Y0, Z0, X1, Y1, Z1, X2, Y2, Z2, lambda00, phi00, // first point
x0, y0, z0; // previous point

var centroidStream = {
  sphere: _noop.default,
  point: centroidPoint,
  lineStart: centroidLineStart,
  lineEnd: centroidLineEnd,
  polygonStart: function () {
    centroidStream.lineStart = centroidRingStart;
    centroidStream.lineEnd = centroidRingEnd;
  },
  polygonEnd: function () {
    centroidStream.lineStart = centroidLineStart;
    centroidStream.lineEnd = centroidLineEnd;
  }
}; // Arithmetic mean of Cartesian vectors.

function centroidPoint(lambda, phi) {
  lambda *= _math.radians, phi *= _math.radians;
  var cosPhi = (0, _math.cos)(phi);
  centroidPointCartesian(cosPhi * (0, _math.cos)(lambda), cosPhi * (0, _math.sin)(lambda), (0, _math.sin)(phi));
}

function centroidPointCartesian(x, y, z) {
  ++W0;
  X0 += (x - X0) / W0;
  Y0 += (y - Y0) / W0;
  Z0 += (z - Z0) / W0;
}

function centroidLineStart() {
  centroidStream.point = centroidLinePointFirst;
}

function centroidLinePointFirst(lambda, phi) {
  lambda *= _math.radians, phi *= _math.radians;
  var cosPhi = (0, _math.cos)(phi);
  x0 = cosPhi * (0, _math.cos)(lambda);
  y0 = cosPhi * (0, _math.sin)(lambda);
  z0 = (0, _math.sin)(phi);
  centroidStream.point = centroidLinePoint;
  centroidPointCartesian(x0, y0, z0);
}

function centroidLinePoint(lambda, phi) {
  lambda *= _math.radians, phi *= _math.radians;
  var cosPhi = (0, _math.cos)(phi),
      x = cosPhi * (0, _math.cos)(lambda),
      y = cosPhi * (0, _math.sin)(lambda),
      z = (0, _math.sin)(phi),
      w = (0, _math.atan2)((0, _math.sqrt)((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);
  W1 += w;
  X1 += w * (x0 + (x0 = x));
  Y1 += w * (y0 + (y0 = y));
  Z1 += w * (z0 + (z0 = z));
  centroidPointCartesian(x0, y0, z0);
}

function centroidLineEnd() {
  centroidStream.point = centroidPoint;
} // See J. E. Brock, The Inertia Tensor for a Spherical Triangle,
// J. Applied Mechanics 42, 239 (1975).


function centroidRingStart() {
  centroidStream.point = centroidRingPointFirst;
}

function centroidRingEnd() {
  centroidRingPoint(lambda00, phi00);
  centroidStream.point = centroidPoint;
}

function centroidRingPointFirst(lambda, phi) {
  lambda00 = lambda, phi00 = phi;
  lambda *= _math.radians, phi *= _math.radians;
  centroidStream.point = centroidRingPoint;
  var cosPhi = (0, _math.cos)(phi);
  x0 = cosPhi * (0, _math.cos)(lambda);
  y0 = cosPhi * (0, _math.sin)(lambda);
  z0 = (0, _math.sin)(phi);
  centroidPointCartesian(x0, y0, z0);
}

function centroidRingPoint(lambda, phi) {
  lambda *= _math.radians, phi *= _math.radians;
  var cosPhi = (0, _math.cos)(phi),
      x = cosPhi * (0, _math.cos)(lambda),
      y = cosPhi * (0, _math.sin)(lambda),
      z = (0, _math.sin)(phi),
      cx = y0 * z - z0 * y,
      cy = z0 * x - x0 * z,
      cz = x0 * y - y0 * x,
      m = (0, _math.sqrt)(cx * cx + cy * cy + cz * cz),
      w = (0, _math.asin)(m),
      // line weight = angle
  v = m && -w / m; // area weight multiplier

  X2 += v * cx;
  Y2 += v * cy;
  Z2 += v * cz;
  W1 += w;
  X1 += w * (x0 + (x0 = x));
  Y1 += w * (y0 + (y0 = y));
  Z1 += w * (z0 + (z0 = z));
  centroidPointCartesian(x0, y0, z0);
}

function _default(object) {
  W0 = W1 = X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;
  (0, _stream.default)(object, centroidStream);
  var x = X2,
      y = Y2,
      z = Z2,
      m = x * x + y * y + z * z; // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.

  if (m < _math.epsilon2) {
    x = X1, y = Y1, z = Z1; // If the feature has zero length, fall back to arithmetic mean of point vectors.

    if (W1 < _math.epsilon) x = X0, y = Y0, z = Z0;
    m = x * x + y * y + z * z; // If the feature still has an undefined ccentroid, then return.

    if (m < _math.epsilon2) return [NaN, NaN];
  }

  return [(0, _math.atan2)(y, x) * _math.degrees, (0, _math.asin)(z / (0, _math.sqrt)(m)) * _math.degrees];
}
},{"./math.js":"JQgf","./noop.js":"DUih","./stream.js":"XQuq"}],"tY9i":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  function compose(x, y) {
    return x = a(x, y), b(x[0], x[1]);
  }

  if (a.invert && b.invert) compose.invert = function (x, y) {
    return x = b.invert(x, y), x && a.invert(x[0], x[1]);
  };
  return compose;
}
},{}],"LqUY":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rotateRadians = rotateRadians;
exports.default = _default;

var _compose = _interopRequireDefault(require("./compose.js"));

var _math = require("./math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function rotationIdentity(lambda, phi) {
  return [(0, _math.abs)(lambda) > _math.pi ? lambda + Math.round(-lambda / _math.tau) * _math.tau : lambda, phi];
}

rotationIdentity.invert = rotationIdentity;

function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {
  return (deltaLambda %= _math.tau) ? deltaPhi || deltaGamma ? (0, _compose.default)(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma)) : rotationLambda(deltaLambda) : deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma) : rotationIdentity;
}

function forwardRotationLambda(deltaLambda) {
  return function (lambda, phi) {
    return lambda += deltaLambda, [lambda > _math.pi ? lambda - _math.tau : lambda < -_math.pi ? lambda + _math.tau : lambda, phi];
  };
}

function rotationLambda(deltaLambda) {
  var rotation = forwardRotationLambda(deltaLambda);
  rotation.invert = forwardRotationLambda(-deltaLambda);
  return rotation;
}

function rotationPhiGamma(deltaPhi, deltaGamma) {
  var cosDeltaPhi = (0, _math.cos)(deltaPhi),
      sinDeltaPhi = (0, _math.sin)(deltaPhi),
      cosDeltaGamma = (0, _math.cos)(deltaGamma),
      sinDeltaGamma = (0, _math.sin)(deltaGamma);

  function rotation(lambda, phi) {
    var cosPhi = (0, _math.cos)(phi),
        x = (0, _math.cos)(lambda) * cosPhi,
        y = (0, _math.sin)(lambda) * cosPhi,
        z = (0, _math.sin)(phi),
        k = z * cosDeltaPhi + x * sinDeltaPhi;
    return [(0, _math.atan2)(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi), (0, _math.asin)(k * cosDeltaGamma + y * sinDeltaGamma)];
  }

  rotation.invert = function (lambda, phi) {
    var cosPhi = (0, _math.cos)(phi),
        x = (0, _math.cos)(lambda) * cosPhi,
        y = (0, _math.sin)(lambda) * cosPhi,
        z = (0, _math.sin)(phi),
        k = z * cosDeltaGamma - y * sinDeltaGamma;
    return [(0, _math.atan2)(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi), (0, _math.asin)(k * cosDeltaPhi - x * sinDeltaPhi)];
  };

  return rotation;
}

function _default(rotate) {
  rotate = rotateRadians(rotate[0] * _math.radians, rotate[1] * _math.radians, rotate.length > 2 ? rotate[2] * _math.radians : 0);

  function forward(coordinates) {
    coordinates = rotate(coordinates[0] * _math.radians, coordinates[1] * _math.radians);
    return coordinates[0] *= _math.degrees, coordinates[1] *= _math.degrees, coordinates;
  }

  forward.invert = function (coordinates) {
    coordinates = rotate.invert(coordinates[0] * _math.radians, coordinates[1] * _math.radians);
    return coordinates[0] *= _math.degrees, coordinates[1] *= _math.degrees, coordinates;
  };

  return forward;
}
},{"./compose.js":"tY9i","./math.js":"JQgf"}],"KcOR":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.circleStream = circleStream;
exports.default = _default;

var _cartesian = require("./cartesian.js");

var _constant = _interopRequireDefault(require("./constant.js"));

var _math = require("./math.js");

var _rotation = require("./rotation.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Generates a circle centered at [0°, 0°], with a given radius and precision.
function circleStream(stream, radius, delta, direction, t0, t1) {
  if (!delta) return;
  var cosRadius = (0, _math.cos)(radius),
      sinRadius = (0, _math.sin)(radius),
      step = direction * delta;

  if (t0 == null) {
    t0 = radius + direction * _math.tau;
    t1 = radius - step / 2;
  } else {
    t0 = circleRadius(cosRadius, t0);
    t1 = circleRadius(cosRadius, t1);
    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * _math.tau;
  }

  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {
    point = (0, _cartesian.spherical)([cosRadius, -sinRadius * (0, _math.cos)(t), -sinRadius * (0, _math.sin)(t)]);
    stream.point(point[0], point[1]);
  }
} // Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].


function circleRadius(cosRadius, point) {
  point = (0, _cartesian.cartesian)(point), point[0] -= cosRadius;
  (0, _cartesian.cartesianNormalizeInPlace)(point);
  var radius = (0, _math.acos)(-point[1]);
  return ((-point[2] < 0 ? -radius : radius) + _math.tau - _math.epsilon) % _math.tau;
}

function _default() {
  var center = (0, _constant.default)([0, 0]),
      radius = (0, _constant.default)(90),
      precision = (0, _constant.default)(6),
      ring,
      rotate,
      stream = {
    point: point
  };

  function point(x, y) {
    ring.push(x = rotate(x, y));
    x[0] *= _math.degrees, x[1] *= _math.degrees;
  }

  function circle() {
    var c = center.apply(this, arguments),
        r = radius.apply(this, arguments) * _math.radians,
        p = precision.apply(this, arguments) * _math.radians;

    ring = [];
    rotate = (0, _rotation.rotateRadians)(-c[0] * _math.radians, -c[1] * _math.radians, 0).invert;
    circleStream(stream, r, p, 1);
    c = {
      type: "Polygon",
      coordinates: [ring]
    };
    ring = rotate = null;
    return c;
  }

  circle.center = function (_) {
    return arguments.length ? (center = typeof _ === "function" ? _ : (0, _constant.default)([+_[0], +_[1]]), circle) : center;
  };

  circle.radius = function (_) {
    return arguments.length ? (radius = typeof _ === "function" ? _ : (0, _constant.default)(+_), circle) : radius;
  };

  circle.precision = function (_) {
    return arguments.length ? (precision = typeof _ === "function" ? _ : (0, _constant.default)(+_), circle) : precision;
  };

  return circle;
}
},{"./cartesian.js":"V83Q","./constant.js":"aCvo","./math.js":"JQgf","./rotation.js":"LqUY"}],"jFd0":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _noop = _interopRequireDefault(require("../noop.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var lines = [],
      line;
  return {
    point: function (x, y) {
      line.push([x, y]);
    },
    lineStart: function () {
      lines.push(line = []);
    },
    lineEnd: _noop.default,
    rejoin: function () {
      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));
    },
    result: function () {
      var result = lines;
      lines = [];
      line = null;
      return result;
    }
  };
}
},{"../noop.js":"DUih"}],"yH90":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _math = require("./math.js");

function _default(a, b) {
  return (0, _math.abs)(a[0] - b[0]) < _math.epsilon && (0, _math.abs)(a[1] - b[1]) < _math.epsilon;
}
},{"./math.js":"JQgf"}],"Nr15":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _pointEqual = _interopRequireDefault(require("../pointEqual.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function Intersection(point, points, other, entry) {
  this.x = point;
  this.z = points;
  this.o = other; // another intersection

  this.e = entry; // is an entry?

  this.v = false; // visited

  this.n = this.p = null; // next & previous
} // A generalized polygon clipping algorithm: given a polygon that has been cut
// into its visible line segments, and rejoins the segments by interpolating
// along the clip edge.


function _default(segments, compareIntersection, startInside, interpolate, stream) {
  var subject = [],
      clip = [],
      i,
      n;
  segments.forEach(function (segment) {
    if ((n = segment.length - 1) <= 0) return;
    var n,
        p0 = segment[0],
        p1 = segment[n],
        x; // If the first and last points of a segment are coincident, then treat as a
    // closed ring. TODO if all rings are closed, then the winding order of the
    // exterior ring should be checked.

    if ((0, _pointEqual.default)(p0, p1)) {
      stream.lineStart();

      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);

      stream.lineEnd();
      return;
    }

    subject.push(x = new Intersection(p0, segment, null, true));
    clip.push(x.o = new Intersection(p0, null, x, false));
    subject.push(x = new Intersection(p1, segment, null, false));
    clip.push(x.o = new Intersection(p1, null, x, true));
  });
  if (!subject.length) return;
  clip.sort(compareIntersection);
  link(subject);
  link(clip);

  for (i = 0, n = clip.length; i < n; ++i) {
    clip[i].e = startInside = !startInside;
  }

  var start = subject[0],
      points,
      point;

  while (1) {
    // Find first unvisited intersection.
    var current = start,
        isSubject = true;

    while (current.v) if ((current = current.n) === start) return;

    points = current.z;
    stream.lineStart();

    do {
      current.v = current.o.v = true;

      if (current.e) {
        if (isSubject) {
          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);
        } else {
          interpolate(current.x, current.n.x, 1, stream);
        }

        current = current.n;
      } else {
        if (isSubject) {
          points = current.p.z;

          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);
        } else {
          interpolate(current.x, current.p.x, -1, stream);
        }

        current = current.p;
      }

      current = current.o;
      points = current.z;
      isSubject = !isSubject;
    } while (!current.v);

    stream.lineEnd();
  }
}

function link(array) {
  if (!(n = array.length)) return;
  var n,
      i = 0,
      a = array[0],
      b;

  while (++i < n) {
    a.n = b = array[i];
    b.p = a;
    a = b;
  }

  a.n = b = array[0];
  b.p = a;
}
},{"../pointEqual.js":"yH90"}],"GrwB":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _adder = _interopRequireDefault(require("./adder.js"));

var _cartesian = require("./cartesian.js");

var _math = require("./math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var sum = (0, _adder.default)();

function longitude(point) {
  if ((0, _math.abs)(point[0]) <= _math.pi) return point[0];else return (0, _math.sign)(point[0]) * (((0, _math.abs)(point[0]) + _math.pi) % _math.tau - _math.pi);
}

function _default(polygon, point) {
  var lambda = longitude(point),
      phi = point[1],
      sinPhi = (0, _math.sin)(phi),
      normal = [(0, _math.sin)(lambda), -(0, _math.cos)(lambda), 0],
      angle = 0,
      winding = 0;
  sum.reset();
  if (sinPhi === 1) phi = _math.halfPi + _math.epsilon;else if (sinPhi === -1) phi = -_math.halfPi - _math.epsilon;

  for (var i = 0, n = polygon.length; i < n; ++i) {
    if (!(m = (ring = polygon[i]).length)) continue;
    var ring,
        m,
        point0 = ring[m - 1],
        lambda0 = longitude(point0),
        phi0 = point0[1] / 2 + _math.quarterPi,
        sinPhi0 = (0, _math.sin)(phi0),
        cosPhi0 = (0, _math.cos)(phi0);

    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {
      var point1 = ring[j],
          lambda1 = longitude(point1),
          phi1 = point1[1] / 2 + _math.quarterPi,
          sinPhi1 = (0, _math.sin)(phi1),
          cosPhi1 = (0, _math.cos)(phi1),
          delta = lambda1 - lambda0,
          sign = delta >= 0 ? 1 : -1,
          absDelta = sign * delta,
          antimeridian = absDelta > _math.pi,
          k = sinPhi0 * sinPhi1;
      sum.add((0, _math.atan2)(k * sign * (0, _math.sin)(absDelta), cosPhi0 * cosPhi1 + k * (0, _math.cos)(absDelta)));
      angle += antimeridian ? delta + sign * _math.tau : delta; // Are the longitudes either side of the point’s meridian (lambda),
      // and are the latitudes smaller than the parallel (phi)?

      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {
        var arc = (0, _cartesian.cartesianCross)((0, _cartesian.cartesian)(point0), (0, _cartesian.cartesian)(point1));
        (0, _cartesian.cartesianNormalizeInPlace)(arc);
        var intersection = (0, _cartesian.cartesianCross)(normal, arc);
        (0, _cartesian.cartesianNormalizeInPlace)(intersection);
        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * (0, _math.asin)(intersection[2]);

        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {
          winding += antimeridian ^ delta >= 0 ? 1 : -1;
        }
      }
    }
  } // First, determine whether the South pole is inside or outside:
  //
  // It is inside if:
  // * the polygon winds around it in a clockwise direction.
  // * the polygon does not (cumulatively) wind around it, but has a negative
  //   (counter-clockwise) area.
  //
  // Second, count the (signed) number of times a segment crosses a lambda
  // from the point to the South pole.  If it is zero, then the point is the
  // same side as the South pole.


  return (angle < -_math.epsilon || angle < _math.epsilon && sum < -_math.epsilon) ^ winding & 1;
}
},{"./adder.js":"fG8A","./cartesian.js":"V83Q","./math.js":"JQgf"}],"J6h6":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _buffer = _interopRequireDefault(require("./buffer.js"));

var _rejoin = _interopRequireDefault(require("./rejoin.js"));

var _math = require("../math.js");

var _polygonContains = _interopRequireDefault(require("../polygonContains.js"));

var _d3Array = require("d3-array");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(pointVisible, clipLine, interpolate, start) {
  return function (sink) {
    var line = clipLine(sink),
        ringBuffer = (0, _buffer.default)(),
        ringSink = clipLine(ringBuffer),
        polygonStarted = false,
        polygon,
        segments,
        ring;
    var clip = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: function () {
        clip.point = pointRing;
        clip.lineStart = ringStart;
        clip.lineEnd = ringEnd;
        segments = [];
        polygon = [];
      },
      polygonEnd: function () {
        clip.point = point;
        clip.lineStart = lineStart;
        clip.lineEnd = lineEnd;
        segments = (0, _d3Array.merge)(segments);
        var startInside = (0, _polygonContains.default)(polygon, start);

        if (segments.length) {
          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
          (0, _rejoin.default)(segments, compareIntersection, startInside, interpolate, sink);
        } else if (startInside) {
          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
          sink.lineStart();
          interpolate(null, null, 1, sink);
          sink.lineEnd();
        }

        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;
        segments = polygon = null;
      },
      sphere: function () {
        sink.polygonStart();
        sink.lineStart();
        interpolate(null, null, 1, sink);
        sink.lineEnd();
        sink.polygonEnd();
      }
    };

    function point(lambda, phi) {
      if (pointVisible(lambda, phi)) sink.point(lambda, phi);
    }

    function pointLine(lambda, phi) {
      line.point(lambda, phi);
    }

    function lineStart() {
      clip.point = pointLine;
      line.lineStart();
    }

    function lineEnd() {
      clip.point = point;
      line.lineEnd();
    }

    function pointRing(lambda, phi) {
      ring.push([lambda, phi]);
      ringSink.point(lambda, phi);
    }

    function ringStart() {
      ringSink.lineStart();
      ring = [];
    }

    function ringEnd() {
      pointRing(ring[0][0], ring[0][1]);
      ringSink.lineEnd();
      var clean = ringSink.clean(),
          ringSegments = ringBuffer.result(),
          i,
          n = ringSegments.length,
          m,
          segment,
          point;
      ring.pop();
      polygon.push(ring);
      ring = null;
      if (!n) return; // No intersections.

      if (clean & 1) {
        segment = ringSegments[0];

        if ((m = segment.length - 1) > 0) {
          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
          sink.lineStart();

          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);

          sink.lineEnd();
        }

        return;
      } // Rejoin connected segments.
      // TODO reuse ringBuffer.rejoin()?


      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));
      segments.push(ringSegments.filter(validSegment));
    }

    return clip;
  };
}

function validSegment(segment) {
  return segment.length > 1;
} // Intersections are sorted along the clip edge. For both antimeridian cutting
// and circle clipping, the same comparison is used.


function compareIntersection(a, b) {
  return ((a = a.x)[0] < 0 ? a[1] - _math.halfPi - _math.epsilon : _math.halfPi - a[1]) - ((b = b.x)[0] < 0 ? b[1] - _math.halfPi - _math.epsilon : _math.halfPi - b[1]);
}
},{"./buffer.js":"jFd0","./rejoin.js":"Nr15","../math.js":"JQgf","../polygonContains.js":"GrwB","d3-array":"K0bd"}],"Gots":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _index = _interopRequireDefault(require("./index.js"));

var _math = require("../math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _index.default)(function () {
  return true;
}, clipAntimeridianLine, clipAntimeridianInterpolate, [-_math.pi, -_math.halfPi]); // Takes a line and cuts into visible segments. Return values: 0 - there were
// intersections or the line was empty; 1 - no intersections; 2 - there were
// intersections, and the first and last segments should be rejoined.


exports.default = _default;

function clipAntimeridianLine(stream) {
  var lambda0 = NaN,
      phi0 = NaN,
      sign0 = NaN,
      clean; // no intersections

  return {
    lineStart: function () {
      stream.lineStart();
      clean = 1;
    },
    point: function (lambda1, phi1) {
      var sign1 = lambda1 > 0 ? _math.pi : -_math.pi,
          delta = (0, _math.abs)(lambda1 - lambda0);

      if ((0, _math.abs)(delta - _math.pi) < _math.epsilon) {
        // line crosses a pole
        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? _math.halfPi : -_math.halfPi);
        stream.point(sign0, phi0);
        stream.lineEnd();
        stream.lineStart();
        stream.point(sign1, phi0);
        stream.point(lambda1, phi0);
        clean = 0;
      } else if (sign0 !== sign1 && delta >= _math.pi) {
        // line crosses antimeridian
        if ((0, _math.abs)(lambda0 - sign0) < _math.epsilon) lambda0 -= sign0 * _math.epsilon; // handle degeneracies

        if ((0, _math.abs)(lambda1 - sign1) < _math.epsilon) lambda1 -= sign1 * _math.epsilon;
        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);
        stream.point(sign0, phi0);
        stream.lineEnd();
        stream.lineStart();
        stream.point(sign1, phi0);
        clean = 0;
      }

      stream.point(lambda0 = lambda1, phi0 = phi1);
      sign0 = sign1;
    },
    lineEnd: function () {
      stream.lineEnd();
      lambda0 = phi0 = NaN;
    },
    clean: function () {
      return 2 - clean; // if intersections, rejoin first and last segments
    }
  };
}

function clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {
  var cosPhi0,
      cosPhi1,
      sinLambda0Lambda1 = (0, _math.sin)(lambda0 - lambda1);
  return (0, _math.abs)(sinLambda0Lambda1) > _math.epsilon ? (0, _math.atan)(((0, _math.sin)(phi0) * (cosPhi1 = (0, _math.cos)(phi1)) * (0, _math.sin)(lambda1) - (0, _math.sin)(phi1) * (cosPhi0 = (0, _math.cos)(phi0)) * (0, _math.sin)(lambda0)) / (cosPhi0 * cosPhi1 * sinLambda0Lambda1)) : (phi0 + phi1) / 2;
}

function clipAntimeridianInterpolate(from, to, direction, stream) {
  var phi;

  if (from == null) {
    phi = direction * _math.halfPi;
    stream.point(-_math.pi, phi);
    stream.point(0, phi);
    stream.point(_math.pi, phi);
    stream.point(_math.pi, 0);
    stream.point(_math.pi, -phi);
    stream.point(0, -phi);
    stream.point(-_math.pi, -phi);
    stream.point(-_math.pi, 0);
    stream.point(-_math.pi, phi);
  } else if ((0, _math.abs)(from[0] - to[0]) > _math.epsilon) {
    var lambda = from[0] < to[0] ? _math.pi : -_math.pi;
    phi = direction * lambda / 2;
    stream.point(-lambda, phi);
    stream.point(0, phi);
    stream.point(lambda, phi);
  } else {
    stream.point(to[0], to[1]);
  }
}
},{"./index.js":"J6h6","../math.js":"JQgf"}],"lcCJ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _cartesian = require("../cartesian.js");

var _circle = require("../circle.js");

var _math = require("../math.js");

var _pointEqual = _interopRequireDefault(require("../pointEqual.js"));

var _index = _interopRequireDefault(require("./index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(radius) {
  var cr = (0, _math.cos)(radius),
      delta = 6 * _math.radians,
      smallRadius = cr > 0,
      notHemisphere = (0, _math.abs)(cr) > _math.epsilon; // TODO optimise for this common case


  function interpolate(from, to, direction, stream) {
    (0, _circle.circleStream)(stream, radius, delta, direction, from, to);
  }

  function visible(lambda, phi) {
    return (0, _math.cos)(lambda) * (0, _math.cos)(phi) > cr;
  } // Takes a line and cuts into visible segments. Return values used for polygon
  // clipping: 0 - there were intersections or the line was empty; 1 - no
  // intersections 2 - there were intersections, and the first and last segments
  // should be rejoined.


  function clipLine(stream) {
    var point0, // previous point
    c0, // code for previous point
    v0, // visibility of previous point
    v00, // visibility of first point
    clean; // no intersections

    return {
      lineStart: function () {
        v00 = v0 = false;
        clean = 1;
      },
      point: function (lambda, phi) {
        var point1 = [lambda, phi],
            point2,
            v = visible(lambda, phi),
            c = smallRadius ? v ? 0 : code(lambda, phi) : v ? code(lambda + (lambda < 0 ? _math.pi : -_math.pi), phi) : 0;
        if (!point0 && (v00 = v0 = v)) stream.lineStart(); // Handle degeneracies.
        // TODO ignore if not clipping polygons.

        if (v !== v0) {
          point2 = intersect(point0, point1);

          if (!point2 || (0, _pointEqual.default)(point0, point2) || (0, _pointEqual.default)(point1, point2)) {
            point1[0] += _math.epsilon;
            point1[1] += _math.epsilon;
            v = visible(point1[0], point1[1]);
          }
        }

        if (v !== v0) {
          clean = 0;

          if (v) {
            // outside going in
            stream.lineStart();
            point2 = intersect(point1, point0);
            stream.point(point2[0], point2[1]);
          } else {
            // inside going out
            point2 = intersect(point0, point1);
            stream.point(point2[0], point2[1]);
            stream.lineEnd();
          }

          point0 = point2;
        } else if (notHemisphere && point0 && smallRadius ^ v) {
          var t; // If the codes for two points are different, or are both zero,
          // and there this segment intersects with the small circle.

          if (!(c & c0) && (t = intersect(point1, point0, true))) {
            clean = 0;

            if (smallRadius) {
              stream.lineStart();
              stream.point(t[0][0], t[0][1]);
              stream.point(t[1][0], t[1][1]);
              stream.lineEnd();
            } else {
              stream.point(t[1][0], t[1][1]);
              stream.lineEnd();
              stream.lineStart();
              stream.point(t[0][0], t[0][1]);
            }
          }
        }

        if (v && (!point0 || !(0, _pointEqual.default)(point0, point1))) {
          stream.point(point1[0], point1[1]);
        }

        point0 = point1, v0 = v, c0 = c;
      },
      lineEnd: function () {
        if (v0) stream.lineEnd();
        point0 = null;
      },
      // Rejoin first and last segments if there were intersections and the first
      // and last points were visible.
      clean: function () {
        return clean | (v00 && v0) << 1;
      }
    };
  } // Intersects the great circle between a and b with the clip circle.


  function intersect(a, b, two) {
    var pa = (0, _cartesian.cartesian)(a),
        pb = (0, _cartesian.cartesian)(b); // We have two planes, n1.p = d1 and n2.p = d2.
    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).

    var n1 = [1, 0, 0],
        // normal
    n2 = (0, _cartesian.cartesianCross)(pa, pb),
        n2n2 = (0, _cartesian.cartesianDot)(n2, n2),
        n1n2 = n2[0],
        // cartesianDot(n1, n2),
    determinant = n2n2 - n1n2 * n1n2; // Two polar points.

    if (!determinant) return !two && a;
    var c1 = cr * n2n2 / determinant,
        c2 = -cr * n1n2 / determinant,
        n1xn2 = (0, _cartesian.cartesianCross)(n1, n2),
        A = (0, _cartesian.cartesianScale)(n1, c1),
        B = (0, _cartesian.cartesianScale)(n2, c2);
    (0, _cartesian.cartesianAddInPlace)(A, B); // Solve |p(t)|^2 = 1.

    var u = n1xn2,
        w = (0, _cartesian.cartesianDot)(A, u),
        uu = (0, _cartesian.cartesianDot)(u, u),
        t2 = w * w - uu * ((0, _cartesian.cartesianDot)(A, A) - 1);
    if (t2 < 0) return;
    var t = (0, _math.sqrt)(t2),
        q = (0, _cartesian.cartesianScale)(u, (-w - t) / uu);
    (0, _cartesian.cartesianAddInPlace)(q, A);
    q = (0, _cartesian.spherical)(q);
    if (!two) return q; // Two intersection points.

    var lambda0 = a[0],
        lambda1 = b[0],
        phi0 = a[1],
        phi1 = b[1],
        z;
    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;

    var delta = lambda1 - lambda0,
        polar = (0, _math.abs)(delta - _math.pi) < _math.epsilon,
        meridian = polar || delta < _math.epsilon;

    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z; // Check that the first point is between a and b.

    if (meridian ? polar ? phi0 + phi1 > 0 ^ q[1] < ((0, _math.abs)(q[0] - lambda0) < _math.epsilon ? phi0 : phi1) : phi0 <= q[1] && q[1] <= phi1 : delta > _math.pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {
      var q1 = (0, _cartesian.cartesianScale)(u, (-w + t) / uu);
      (0, _cartesian.cartesianAddInPlace)(q1, A);
      return [q, (0, _cartesian.spherical)(q1)];
    }
  } // Generates a 4-bit vector representing the location of a point relative to
  // the small circle's bounding box.


  function code(lambda, phi) {
    var r = smallRadius ? radius : _math.pi - radius,
        code = 0;
    if (lambda < -r) code |= 1; // left
    else if (lambda > r) code |= 2; // right

    if (phi < -r) code |= 4; // below
    else if (phi > r) code |= 8; // above

    return code;
  }

  return (0, _index.default)(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-_math.pi, radius - _math.pi]);
}
},{"../cartesian.js":"V83Q","../circle.js":"KcOR","../math.js":"JQgf","../pointEqual.js":"yH90","./index.js":"J6h6"}],"w1ni":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b, x0, y0, x1, y1) {
  var ax = a[0],
      ay = a[1],
      bx = b[0],
      by = b[1],
      t0 = 0,
      t1 = 1,
      dx = bx - ax,
      dy = by - ay,
      r;
  r = x0 - ax;
  if (!dx && r > 0) return;
  r /= dx;

  if (dx < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dx > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = x1 - ax;
  if (!dx && r < 0) return;
  r /= dx;

  if (dx < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dx > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  r = y0 - ay;
  if (!dy && r > 0) return;
  r /= dy;

  if (dy < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dy > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = y1 - ay;
  if (!dy && r < 0) return;
  r /= dy;

  if (dy < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dy > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;
  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;
  return true;
}
},{}],"jRQA":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = clipRectangle;

var _math = require("../math.js");

var _buffer = _interopRequireDefault(require("./buffer.js"));

var _line = _interopRequireDefault(require("./line.js"));

var _rejoin = _interopRequireDefault(require("./rejoin.js"));

var _d3Array = require("d3-array");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var clipMax = 1e9,
    clipMin = -clipMax; // TODO Use d3-polygon’s polygonContains here for the ring check?
// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?

function clipRectangle(x0, y0, x1, y1) {
  function visible(x, y) {
    return x0 <= x && x <= x1 && y0 <= y && y <= y1;
  }

  function interpolate(from, to, direction, stream) {
    var a = 0,
        a1 = 0;

    if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoint(from, to) < 0 ^ direction > 0) {
      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0); while ((a = (a + direction + 4) % 4) !== a1);
    } else {
      stream.point(to[0], to[1]);
    }
  }

  function corner(p, direction) {
    return (0, _math.abs)(p[0] - x0) < _math.epsilon ? direction > 0 ? 0 : 3 : (0, _math.abs)(p[0] - x1) < _math.epsilon ? direction > 0 ? 2 : 1 : (0, _math.abs)(p[1] - y0) < _math.epsilon ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon
  }

  function compareIntersection(a, b) {
    return comparePoint(a.x, b.x);
  }

  function comparePoint(a, b) {
    var ca = corner(a, 1),
        cb = corner(b, 1);
    return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];
  }

  return function (stream) {
    var activeStream = stream,
        bufferStream = (0, _buffer.default)(),
        segments,
        polygon,
        ring,
        x__,
        y__,
        v__,
        // first point
    x_,
        y_,
        v_,
        // previous point
    first,
        clean;
    var clipStream = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: polygonStart,
      polygonEnd: polygonEnd
    };

    function point(x, y) {
      if (visible(x, y)) activeStream.point(x, y);
    }

    function polygonInside() {
      var winding = 0;

      for (var i = 0, n = polygon.length; i < n; ++i) {
        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {
          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];

          if (a1 <= y1) {
            if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding;
          } else {
            if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding;
          }
        }
      }

      return winding;
    } // Buffer geometry within a polygon and then clip it en masse.


    function polygonStart() {
      activeStream = bufferStream, segments = [], polygon = [], clean = true;
    }

    function polygonEnd() {
      var startInside = polygonInside(),
          cleanInside = clean && startInside,
          visible = (segments = (0, _d3Array.merge)(segments)).length;

      if (cleanInside || visible) {
        stream.polygonStart();

        if (cleanInside) {
          stream.lineStart();
          interpolate(null, null, 1, stream);
          stream.lineEnd();
        }

        if (visible) {
          (0, _rejoin.default)(segments, compareIntersection, startInside, interpolate, stream);
        }

        stream.polygonEnd();
      }

      activeStream = stream, segments = polygon = ring = null;
    }

    function lineStart() {
      clipStream.point = linePoint;
      if (polygon) polygon.push(ring = []);
      first = true;
      v_ = false;
      x_ = y_ = NaN;
    } // TODO rather than special-case polygons, simply handle them separately.
    // Ideally, coincident intersection points should be jittered to avoid
    // clipping issues.


    function lineEnd() {
      if (segments) {
        linePoint(x__, y__);
        if (v__ && v_) bufferStream.rejoin();
        segments.push(bufferStream.result());
      }

      clipStream.point = point;
      if (v_) activeStream.lineEnd();
    }

    function linePoint(x, y) {
      var v = visible(x, y);
      if (polygon) ring.push([x, y]);

      if (first) {
        x__ = x, y__ = y, v__ = v;
        first = false;

        if (v) {
          activeStream.lineStart();
          activeStream.point(x, y);
        }
      } else {
        if (v && v_) activeStream.point(x, y);else {
          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],
              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];

          if ((0, _line.default)(a, b, x0, y0, x1, y1)) {
            if (!v_) {
              activeStream.lineStart();
              activeStream.point(a[0], a[1]);
            }

            activeStream.point(b[0], b[1]);
            if (!v) activeStream.lineEnd();
            clean = false;
          } else if (v) {
            activeStream.lineStart();
            activeStream.point(x, y);
            clean = false;
          }
        }
      }

      x_ = x, y_ = y, v_ = v;
    }

    return clipStream;
  };
}
},{"../math.js":"JQgf","./buffer.js":"jFd0","./line.js":"w1ni","./rejoin.js":"Nr15","d3-array":"K0bd"}],"EodF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _rectangle = _interopRequireDefault(require("./rectangle.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var x0 = 0,
      y0 = 0,
      x1 = 960,
      y1 = 500,
      cache,
      cacheStream,
      clip;
  return clip = {
    stream: function (stream) {
      return cache && cacheStream === stream ? cache : cache = (0, _rectangle.default)(x0, y0, x1, y1)(cacheStream = stream);
    },
    extent: function (_) {
      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];
    }
  };
}
},{"./rectangle.js":"jRQA"}],"bXUe":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _adder = _interopRequireDefault(require("./adder.js"));

var _math = require("./math.js");

var _noop = _interopRequireDefault(require("./noop.js"));

var _stream = _interopRequireDefault(require("./stream.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var lengthSum = (0, _adder.default)(),
    lambda0,
    sinPhi0,
    cosPhi0;
var lengthStream = {
  sphere: _noop.default,
  point: _noop.default,
  lineStart: lengthLineStart,
  lineEnd: _noop.default,
  polygonStart: _noop.default,
  polygonEnd: _noop.default
};

function lengthLineStart() {
  lengthStream.point = lengthPointFirst;
  lengthStream.lineEnd = lengthLineEnd;
}

function lengthLineEnd() {
  lengthStream.point = lengthStream.lineEnd = _noop.default;
}

function lengthPointFirst(lambda, phi) {
  lambda *= _math.radians, phi *= _math.radians;
  lambda0 = lambda, sinPhi0 = (0, _math.sin)(phi), cosPhi0 = (0, _math.cos)(phi);
  lengthStream.point = lengthPoint;
}

function lengthPoint(lambda, phi) {
  lambda *= _math.radians, phi *= _math.radians;
  var sinPhi = (0, _math.sin)(phi),
      cosPhi = (0, _math.cos)(phi),
      delta = (0, _math.abs)(lambda - lambda0),
      cosDelta = (0, _math.cos)(delta),
      sinDelta = (0, _math.sin)(delta),
      x = cosPhi * sinDelta,
      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,
      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;
  lengthSum.add((0, _math.atan2)((0, _math.sqrt)(x * x + y * y), z));
  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;
}

function _default(object) {
  lengthSum.reset();
  (0, _stream.default)(object, lengthStream);
  return +lengthSum;
}
},{"./adder.js":"fG8A","./math.js":"JQgf","./noop.js":"DUih","./stream.js":"XQuq"}],"hTgK":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _length = _interopRequireDefault(require("./length.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var coordinates = [null, null],
    object = {
  type: "LineString",
  coordinates: coordinates
};

function _default(a, b) {
  coordinates[0] = a;
  coordinates[1] = b;
  return (0, _length.default)(object);
}
},{"./length.js":"bXUe"}],"tRhb":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _polygonContains = _interopRequireDefault(require("./polygonContains.js"));

var _distance = _interopRequireDefault(require("./distance.js"));

var _math = require("./math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var containsObjectType = {
  Feature: function (object, point) {
    return containsGeometry(object.geometry, point);
  },
  FeatureCollection: function (object, point) {
    var features = object.features,
        i = -1,
        n = features.length;

    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;

    return false;
  }
};
var containsGeometryType = {
  Sphere: function () {
    return true;
  },
  Point: function (object, point) {
    return containsPoint(object.coordinates, point);
  },
  MultiPoint: function (object, point) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) if (containsPoint(coordinates[i], point)) return true;

    return false;
  },
  LineString: function (object, point) {
    return containsLine(object.coordinates, point);
  },
  MultiLineString: function (object, point) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) if (containsLine(coordinates[i], point)) return true;

    return false;
  },
  Polygon: function (object, point) {
    return containsPolygon(object.coordinates, point);
  },
  MultiPolygon: function (object, point) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;

    return false;
  },
  GeometryCollection: function (object, point) {
    var geometries = object.geometries,
        i = -1,
        n = geometries.length;

    while (++i < n) if (containsGeometry(geometries[i], point)) return true;

    return false;
  }
};

function containsGeometry(geometry, point) {
  return geometry && containsGeometryType.hasOwnProperty(geometry.type) ? containsGeometryType[geometry.type](geometry, point) : false;
}

function containsPoint(coordinates, point) {
  return (0, _distance.default)(coordinates, point) === 0;
}

function containsLine(coordinates, point) {
  var ao, bo, ab;

  for (var i = 0, n = coordinates.length; i < n; i++) {
    bo = (0, _distance.default)(coordinates[i], point);
    if (bo === 0) return true;

    if (i > 0) {
      ab = (0, _distance.default)(coordinates[i], coordinates[i - 1]);
      if (ab > 0 && ao <= ab && bo <= ab && (ao + bo - ab) * (1 - Math.pow((ao - bo) / ab, 2)) < _math.epsilon2 * ab) return true;
    }

    ao = bo;
  }

  return false;
}

function containsPolygon(coordinates, point) {
  return !!(0, _polygonContains.default)(coordinates.map(ringRadians), pointRadians(point));
}

function ringRadians(ring) {
  return ring = ring.map(pointRadians), ring.pop(), ring;
}

function pointRadians(point) {
  return [point[0] * _math.radians, point[1] * _math.radians];
}

function _default(object, point) {
  return (object && containsObjectType.hasOwnProperty(object.type) ? containsObjectType[object.type] : containsGeometry)(object, point);
}
},{"./polygonContains.js":"GrwB","./distance.js":"hTgK","./math.js":"JQgf"}],"IdZ0":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = graticule;
exports.graticule10 = graticule10;

var _d3Array = require("d3-array");

var _math = require("./math.js");

function graticuleX(y0, y1, dy) {
  var y = (0, _d3Array.range)(y0, y1 - _math.epsilon, dy).concat(y1);
  return function (x) {
    return y.map(function (y) {
      return [x, y];
    });
  };
}

function graticuleY(x0, x1, dx) {
  var x = (0, _d3Array.range)(x0, x1 - _math.epsilon, dx).concat(x1);
  return function (y) {
    return x.map(function (x) {
      return [x, y];
    });
  };
}

function graticule() {
  var x1,
      x0,
      X1,
      X0,
      y1,
      y0,
      Y1,
      Y0,
      dx = 10,
      dy = dx,
      DX = 90,
      DY = 360,
      x,
      y,
      X,
      Y,
      precision = 2.5;

  function graticule() {
    return {
      type: "MultiLineString",
      coordinates: lines()
    };
  }

  function lines() {
    return (0, _d3Array.range)((0, _math.ceil)(X0 / DX) * DX, X1, DX).map(X).concat((0, _d3Array.range)((0, _math.ceil)(Y0 / DY) * DY, Y1, DY).map(Y)).concat((0, _d3Array.range)((0, _math.ceil)(x0 / dx) * dx, x1, dx).filter(function (x) {
      return (0, _math.abs)(x % DX) > _math.epsilon;
    }).map(x)).concat((0, _d3Array.range)((0, _math.ceil)(y0 / dy) * dy, y1, dy).filter(function (y) {
      return (0, _math.abs)(y % DY) > _math.epsilon;
    }).map(y));
  }

  graticule.lines = function () {
    return lines().map(function (coordinates) {
      return {
        type: "LineString",
        coordinates: coordinates
      };
    });
  };

  graticule.outline = function () {
    return {
      type: "Polygon",
      coordinates: [X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1))]
    };
  };

  graticule.extent = function (_) {
    if (!arguments.length) return graticule.extentMinor();
    return graticule.extentMajor(_).extentMinor(_);
  };

  graticule.extentMajor = function (_) {
    if (!arguments.length) return [[X0, Y0], [X1, Y1]];
    X0 = +_[0][0], X1 = +_[1][0];
    Y0 = +_[0][1], Y1 = +_[1][1];
    if (X0 > X1) _ = X0, X0 = X1, X1 = _;
    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;
    return graticule.precision(precision);
  };

  graticule.extentMinor = function (_) {
    if (!arguments.length) return [[x0, y0], [x1, y1]];
    x0 = +_[0][0], x1 = +_[1][0];
    y0 = +_[0][1], y1 = +_[1][1];
    if (x0 > x1) _ = x0, x0 = x1, x1 = _;
    if (y0 > y1) _ = y0, y0 = y1, y1 = _;
    return graticule.precision(precision);
  };

  graticule.step = function (_) {
    if (!arguments.length) return graticule.stepMinor();
    return graticule.stepMajor(_).stepMinor(_);
  };

  graticule.stepMajor = function (_) {
    if (!arguments.length) return [DX, DY];
    DX = +_[0], DY = +_[1];
    return graticule;
  };

  graticule.stepMinor = function (_) {
    if (!arguments.length) return [dx, dy];
    dx = +_[0], dy = +_[1];
    return graticule;
  };

  graticule.precision = function (_) {
    if (!arguments.length) return precision;
    precision = +_;
    x = graticuleX(y0, y1, 90);
    y = graticuleY(x0, x1, precision);
    X = graticuleX(Y0, Y1, 90);
    Y = graticuleY(X0, X1, precision);
    return graticule;
  };

  return graticule.extentMajor([[-180, -90 + _math.epsilon], [180, 90 - _math.epsilon]]).extentMinor([[-180, -80 - _math.epsilon], [180, 80 + _math.epsilon]]);
}

function graticule10() {
  return graticule()();
}
},{"d3-array":"K0bd","./math.js":"JQgf"}],"uuLr":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _math = require("./math.js");

function _default(a, b) {
  var x0 = a[0] * _math.radians,
      y0 = a[1] * _math.radians,
      x1 = b[0] * _math.radians,
      y1 = b[1] * _math.radians,
      cy0 = (0, _math.cos)(y0),
      sy0 = (0, _math.sin)(y0),
      cy1 = (0, _math.cos)(y1),
      sy1 = (0, _math.sin)(y1),
      kx0 = cy0 * (0, _math.cos)(x0),
      ky0 = cy0 * (0, _math.sin)(x0),
      kx1 = cy1 * (0, _math.cos)(x1),
      ky1 = cy1 * (0, _math.sin)(x1),
      d = 2 * (0, _math.asin)((0, _math.sqrt)((0, _math.haversin)(y1 - y0) + cy0 * cy1 * (0, _math.haversin)(x1 - x0))),
      k = (0, _math.sin)(d);
  var interpolate = d ? function (t) {
    var B = (0, _math.sin)(t *= d) / k,
        A = (0, _math.sin)(d - t) / k,
        x = A * kx0 + B * kx1,
        y = A * ky0 + B * ky1,
        z = A * sy0 + B * sy1;
    return [(0, _math.atan2)(y, x) * _math.degrees, (0, _math.atan2)(z, (0, _math.sqrt)(x * x + y * y)) * _math.degrees];
  } : function () {
    return [x0 * _math.degrees, y0 * _math.degrees];
  };
  interpolate.distance = d;
  return interpolate;
}
},{"./math.js":"JQgf"}],"ueEe":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _adder = _interopRequireDefault(require("../adder.js"));

var _math = require("../math.js");

var _noop = _interopRequireDefault(require("../noop.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var areaSum = (0, _adder.default)(),
    areaRingSum = (0, _adder.default)(),
    x00,
    y00,
    x0,
    y0;
var areaStream = {
  point: _noop.default,
  lineStart: _noop.default,
  lineEnd: _noop.default,
  polygonStart: function () {
    areaStream.lineStart = areaRingStart;
    areaStream.lineEnd = areaRingEnd;
  },
  polygonEnd: function () {
    areaStream.lineStart = areaStream.lineEnd = areaStream.point = _noop.default;
    areaSum.add((0, _math.abs)(areaRingSum));
    areaRingSum.reset();
  },
  result: function () {
    var area = areaSum / 2;
    areaSum.reset();
    return area;
  }
};

function areaRingStart() {
  areaStream.point = areaPointFirst;
}

function areaPointFirst(x, y) {
  areaStream.point = areaPoint;
  x00 = x0 = x, y00 = y0 = y;
}

function areaPoint(x, y) {
  areaRingSum.add(y0 * x - x0 * y);
  x0 = x, y0 = y;
}

function areaRingEnd() {
  areaPoint(x00, y00);
}

var _default = areaStream;
exports.default = _default;
},{"../adder.js":"fG8A","../math.js":"JQgf","../noop.js":"DUih"}],"tL3W":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _noop = _interopRequireDefault(require("../noop.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var x0 = Infinity,
    y0 = x0,
    x1 = -x0,
    y1 = x1;
var boundsStream = {
  point: boundsPoint,
  lineStart: _noop.default,
  lineEnd: _noop.default,
  polygonStart: _noop.default,
  polygonEnd: _noop.default,
  result: function () {
    var bounds = [[x0, y0], [x1, y1]];
    x1 = y1 = -(y0 = x0 = Infinity);
    return bounds;
  }
};

function boundsPoint(x, y) {
  if (x < x0) x0 = x;
  if (x > x1) x1 = x;
  if (y < y0) y0 = y;
  if (y > y1) y1 = y;
}

var _default = boundsStream;
exports.default = _default;
},{"../noop.js":"DUih"}],"PA8j":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _math = require("../math.js");

// TODO Enforce positive area for exterior, negative area for interior?
var X0 = 0,
    Y0 = 0,
    Z0 = 0,
    X1 = 0,
    Y1 = 0,
    Z1 = 0,
    X2 = 0,
    Y2 = 0,
    Z2 = 0,
    x00,
    y00,
    x0,
    y0;
var centroidStream = {
  point: centroidPoint,
  lineStart: centroidLineStart,
  lineEnd: centroidLineEnd,
  polygonStart: function () {
    centroidStream.lineStart = centroidRingStart;
    centroidStream.lineEnd = centroidRingEnd;
  },
  polygonEnd: function () {
    centroidStream.point = centroidPoint;
    centroidStream.lineStart = centroidLineStart;
    centroidStream.lineEnd = centroidLineEnd;
  },
  result: function () {
    var centroid = Z2 ? [X2 / Z2, Y2 / Z2] : Z1 ? [X1 / Z1, Y1 / Z1] : Z0 ? [X0 / Z0, Y0 / Z0] : [NaN, NaN];
    X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;
    return centroid;
  }
};

function centroidPoint(x, y) {
  X0 += x;
  Y0 += y;
  ++Z0;
}

function centroidLineStart() {
  centroidStream.point = centroidPointFirstLine;
}

function centroidPointFirstLine(x, y) {
  centroidStream.point = centroidPointLine;
  centroidPoint(x0 = x, y0 = y);
}

function centroidPointLine(x, y) {
  var dx = x - x0,
      dy = y - y0,
      z = (0, _math.sqrt)(dx * dx + dy * dy);
  X1 += z * (x0 + x) / 2;
  Y1 += z * (y0 + y) / 2;
  Z1 += z;
  centroidPoint(x0 = x, y0 = y);
}

function centroidLineEnd() {
  centroidStream.point = centroidPoint;
}

function centroidRingStart() {
  centroidStream.point = centroidPointFirstRing;
}

function centroidRingEnd() {
  centroidPointRing(x00, y00);
}

function centroidPointFirstRing(x, y) {
  centroidStream.point = centroidPointRing;
  centroidPoint(x00 = x0 = x, y00 = y0 = y);
}

function centroidPointRing(x, y) {
  var dx = x - x0,
      dy = y - y0,
      z = (0, _math.sqrt)(dx * dx + dy * dy);
  X1 += z * (x0 + x) / 2;
  Y1 += z * (y0 + y) / 2;
  Z1 += z;
  z = y0 * x - x0 * y;
  X2 += z * (x0 + x);
  Y2 += z * (y0 + y);
  Z2 += z * 3;
  centroidPoint(x0 = x, y0 = y);
}

var _default = centroidStream;
exports.default = _default;
},{"../math.js":"JQgf"}],"r69t":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = PathContext;

var _math = require("../math.js");

var _noop = _interopRequireDefault(require("../noop.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function PathContext(context) {
  this._context = context;
}

PathContext.prototype = {
  _radius: 4.5,
  pointRadius: function (_) {
    return this._radius = _, this;
  },
  polygonStart: function () {
    this._line = 0;
  },
  polygonEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._point = 0;
  },
  lineEnd: function () {
    if (this._line === 0) this._context.closePath();
    this._point = NaN;
  },
  point: function (x, y) {
    switch (this._point) {
      case 0:
        {
          this._context.moveTo(x, y);

          this._point = 1;
          break;
        }

      case 1:
        {
          this._context.lineTo(x, y);

          break;
        }

      default:
        {
          this._context.moveTo(x + this._radius, y);

          this._context.arc(x, y, this._radius, 0, _math.tau);

          break;
        }
    }
  },
  result: _noop.default
};
},{"../math.js":"JQgf","../noop.js":"DUih"}],"SjQK":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _adder = _interopRequireDefault(require("../adder.js"));

var _math = require("../math.js");

var _noop = _interopRequireDefault(require("../noop.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var lengthSum = (0, _adder.default)(),
    lengthRing,
    x00,
    y00,
    x0,
    y0;
var lengthStream = {
  point: _noop.default,
  lineStart: function () {
    lengthStream.point = lengthPointFirst;
  },
  lineEnd: function () {
    if (lengthRing) lengthPoint(x00, y00);
    lengthStream.point = _noop.default;
  },
  polygonStart: function () {
    lengthRing = true;
  },
  polygonEnd: function () {
    lengthRing = null;
  },
  result: function () {
    var length = +lengthSum;
    lengthSum.reset();
    return length;
  }
};

function lengthPointFirst(x, y) {
  lengthStream.point = lengthPoint;
  x00 = x0 = x, y00 = y0 = y;
}

function lengthPoint(x, y) {
  x0 -= x, y0 -= y;
  lengthSum.add((0, _math.sqrt)(x0 * x0 + y0 * y0));
  x0 = x, y0 = y;
}

var _default = lengthStream;
exports.default = _default;
},{"../adder.js":"fG8A","../math.js":"JQgf","../noop.js":"DUih"}],"cxj1":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = PathString;

function PathString() {
  this._string = [];
}

PathString.prototype = {
  _radius: 4.5,
  _circle: circle(4.5),
  pointRadius: function (_) {
    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;
    return this;
  },
  polygonStart: function () {
    this._line = 0;
  },
  polygonEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._point = 0;
  },
  lineEnd: function () {
    if (this._line === 0) this._string.push("Z");
    this._point = NaN;
  },
  point: function (x, y) {
    switch (this._point) {
      case 0:
        {
          this._string.push("M", x, ",", y);

          this._point = 1;
          break;
        }

      case 1:
        {
          this._string.push("L", x, ",", y);

          break;
        }

      default:
        {
          if (this._circle == null) this._circle = circle(this._radius);

          this._string.push("M", x, ",", y, this._circle);

          break;
        }
    }
  },
  result: function () {
    if (this._string.length) {
      var result = this._string.join("");

      this._string = [];
      return result;
    } else {
      return null;
    }
  }
};

function circle(radius) {
  return "m0," + radius + "a" + radius + "," + radius + " 0 1,1 0," + -2 * radius + "a" + radius + "," + radius + " 0 1,1 0," + 2 * radius + "z";
}
},{}],"JRMk":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _identity = _interopRequireDefault(require("../identity.js"));

var _stream = _interopRequireDefault(require("../stream.js"));

var _area = _interopRequireDefault(require("./area.js"));

var _bounds = _interopRequireDefault(require("./bounds.js"));

var _centroid = _interopRequireDefault(require("./centroid.js"));

var _context = _interopRequireDefault(require("./context.js"));

var _measure = _interopRequireDefault(require("./measure.js"));

var _string = _interopRequireDefault(require("./string.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(projection, context) {
  var pointRadius = 4.5,
      projectionStream,
      contextStream;

  function path(object) {
    if (object) {
      if (typeof pointRadius === "function") contextStream.pointRadius(+pointRadius.apply(this, arguments));
      (0, _stream.default)(object, projectionStream(contextStream));
    }

    return contextStream.result();
  }

  path.area = function (object) {
    (0, _stream.default)(object, projectionStream(_area.default));
    return _area.default.result();
  };

  path.measure = function (object) {
    (0, _stream.default)(object, projectionStream(_measure.default));
    return _measure.default.result();
  };

  path.bounds = function (object) {
    (0, _stream.default)(object, projectionStream(_bounds.default));
    return _bounds.default.result();
  };

  path.centroid = function (object) {
    (0, _stream.default)(object, projectionStream(_centroid.default));
    return _centroid.default.result();
  };

  path.projection = function (_) {
    return arguments.length ? (projectionStream = _ == null ? (projection = null, _identity.default) : (projection = _).stream, path) : projection;
  };

  path.context = function (_) {
    if (!arguments.length) return context;
    contextStream = _ == null ? (context = null, new _string.default()) : new _context.default(context = _);
    if (typeof pointRadius !== "function") contextStream.pointRadius(pointRadius);
    return path;
  };

  path.pointRadius = function (_) {
    if (!arguments.length) return pointRadius;
    pointRadius = typeof _ === "function" ? _ : (contextStream.pointRadius(+_), +_);
    return path;
  };

  return path.projection(projection).context(context);
}
},{"../identity.js":"NNW9","../stream.js":"XQuq","./area.js":"ueEe","./bounds.js":"tL3W","./centroid.js":"PA8j","./context.js":"r69t","./measure.js":"SjQK","./string.js":"cxj1"}],"pfKH":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.transformer = transformer;

function _default(methods) {
  return {
    stream: transformer(methods)
  };
}

function transformer(methods) {
  return function (stream) {
    var s = new TransformStream();

    for (var key in methods) s[key] = methods[key];

    s.stream = stream;
    return s;
  };
}

function TransformStream() {}

TransformStream.prototype = {
  constructor: TransformStream,
  point: function (x, y) {
    this.stream.point(x, y);
  },
  sphere: function () {
    this.stream.sphere();
  },
  lineStart: function () {
    this.stream.lineStart();
  },
  lineEnd: function () {
    this.stream.lineEnd();
  },
  polygonStart: function () {
    this.stream.polygonStart();
  },
  polygonEnd: function () {
    this.stream.polygonEnd();
  }
};
},{}],"Ycma":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fitExtent = fitExtent;
exports.fitSize = fitSize;
exports.fitWidth = fitWidth;
exports.fitHeight = fitHeight;

var _stream = _interopRequireDefault(require("../stream.js"));

var _bounds = _interopRequireDefault(require("../path/bounds.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function fit(projection, fitBounds, object) {
  var clip = projection.clipExtent && projection.clipExtent();
  projection.scale(150).translate([0, 0]);
  if (clip != null) projection.clipExtent(null);
  (0, _stream.default)(object, projection.stream(_bounds.default));
  fitBounds(_bounds.default.result());
  if (clip != null) projection.clipExtent(clip);
  return projection;
}

function fitExtent(projection, extent, object) {
  return fit(projection, function (b) {
    var w = extent[1][0] - extent[0][0],
        h = extent[1][1] - extent[0][1],
        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),
        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,
        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;
    projection.scale(150 * k).translate([x, y]);
  }, object);
}

function fitSize(projection, size, object) {
  return fitExtent(projection, [[0, 0], size], object);
}

function fitWidth(projection, width, object) {
  return fit(projection, function (b) {
    var w = +width,
        k = w / (b[1][0] - b[0][0]),
        x = (w - k * (b[1][0] + b[0][0])) / 2,
        y = -k * b[0][1];
    projection.scale(150 * k).translate([x, y]);
  }, object);
}

function fitHeight(projection, height, object) {
  return fit(projection, function (b) {
    var h = +height,
        k = h / (b[1][1] - b[0][1]),
        x = -k * b[0][0],
        y = (h - k * (b[1][1] + b[0][1])) / 2;
    projection.scale(150 * k).translate([x, y]);
  }, object);
}
},{"../stream.js":"XQuq","../path/bounds.js":"tL3W"}],"nAh8":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _cartesian = require("../cartesian.js");

var _math = require("../math.js");

var _transform = require("../transform.js");

var maxDepth = 16,
    // maximum depth of subdivision
cosMinDistance = (0, _math.cos)(30 * _math.radians); // cos(minimum angular distance)

function _default(project, delta2) {
  return +delta2 ? resample(project, delta2) : resampleNone(project);
}

function resampleNone(project) {
  return (0, _transform.transformer)({
    point: function (x, y) {
      x = project(x, y);
      this.stream.point(x[0], x[1]);
    }
  });
}

function resample(project, delta2) {
  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {
    var dx = x1 - x0,
        dy = y1 - y0,
        d2 = dx * dx + dy * dy;

    if (d2 > 4 * delta2 && depth--) {
      var a = a0 + a1,
          b = b0 + b1,
          c = c0 + c1,
          m = (0, _math.sqrt)(a * a + b * b + c * c),
          phi2 = (0, _math.asin)(c /= m),
          lambda2 = (0, _math.abs)((0, _math.abs)(c) - 1) < _math.epsilon || (0, _math.abs)(lambda0 - lambda1) < _math.epsilon ? (lambda0 + lambda1) / 2 : (0, _math.atan2)(b, a),
          p = project(lambda2, phi2),
          x2 = p[0],
          y2 = p[1],
          dx2 = x2 - x0,
          dy2 = y2 - y0,
          dz = dy * dx2 - dx * dy2;

      if (dz * dz / d2 > delta2 // perpendicular projected distance
      || (0, _math.abs)((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end
      || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {
        // angular distance
        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);
        stream.point(x2, y2);
        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);
      }
    }
  }

  return function (stream) {
    var lambda00, x00, y00, a00, b00, c00, // first point
    lambda0, x0, y0, a0, b0, c0; // previous point

    var resampleStream = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: function () {
        stream.polygonStart();
        resampleStream.lineStart = ringStart;
      },
      polygonEnd: function () {
        stream.polygonEnd();
        resampleStream.lineStart = lineStart;
      }
    };

    function point(x, y) {
      x = project(x, y);
      stream.point(x[0], x[1]);
    }

    function lineStart() {
      x0 = NaN;
      resampleStream.point = linePoint;
      stream.lineStart();
    }

    function linePoint(lambda, phi) {
      var c = (0, _cartesian.cartesian)([lambda, phi]),
          p = project(lambda, phi);
      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);
      stream.point(x0, y0);
    }

    function lineEnd() {
      resampleStream.point = point;
      stream.lineEnd();
    }

    function ringStart() {
      lineStart();
      resampleStream.point = ringPoint;
      resampleStream.lineEnd = ringEnd;
    }

    function ringPoint(lambda, phi) {
      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;
      resampleStream.point = linePoint;
    }

    function ringEnd() {
      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);
      resampleStream.lineEnd = lineEnd;
      lineEnd();
    }

    return resampleStream;
  };
}
},{"../cartesian.js":"V83Q","../math.js":"JQgf","../transform.js":"pfKH"}],"Ktpb":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = projection;
exports.projectionMutator = projectionMutator;

var _antimeridian = _interopRequireDefault(require("../clip/antimeridian.js"));

var _circle = _interopRequireDefault(require("../clip/circle.js"));

var _rectangle = _interopRequireDefault(require("../clip/rectangle.js"));

var _compose = _interopRequireDefault(require("../compose.js"));

var _identity = _interopRequireDefault(require("../identity.js"));

var _math = require("../math.js");

var _rotation = require("../rotation.js");

var _transform = require("../transform.js");

var _fit = require("./fit.js");

var _resample = _interopRequireDefault(require("./resample.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var transformRadians = (0, _transform.transformer)({
  point: function (x, y) {
    this.stream.point(x * _math.radians, y * _math.radians);
  }
});

function transformRotate(rotate) {
  return (0, _transform.transformer)({
    point: function (x, y) {
      var r = rotate(x, y);
      return this.stream.point(r[0], r[1]);
    }
  });
}

function scaleTranslate(k, dx, dy) {
  function transform(x, y) {
    return [dx + k * x, dy - k * y];
  }

  transform.invert = function (x, y) {
    return [(x - dx) / k, (dy - y) / k];
  };

  return transform;
}

function scaleTranslateRotate(k, dx, dy, alpha) {
  var cosAlpha = (0, _math.cos)(alpha),
      sinAlpha = (0, _math.sin)(alpha),
      a = cosAlpha * k,
      b = sinAlpha * k,
      ai = cosAlpha / k,
      bi = sinAlpha / k,
      ci = (sinAlpha * dy - cosAlpha * dx) / k,
      fi = (sinAlpha * dx + cosAlpha * dy) / k;

  function transform(x, y) {
    return [a * x - b * y + dx, dy - b * x - a * y];
  }

  transform.invert = function (x, y) {
    return [ai * x - bi * y + ci, fi - bi * x - ai * y];
  };

  return transform;
}

function projection(project) {
  return projectionMutator(function () {
    return project;
  })();
}

function projectionMutator(projectAt) {
  var project,
      k = 150,
      // scale
  x = 480,
      y = 250,
      // translate
  lambda = 0,
      phi = 0,
      // center
  deltaLambda = 0,
      deltaPhi = 0,
      deltaGamma = 0,
      rotate,
      // pre-rotate
  alpha = 0,
      // post-rotate
  theta = null,
      preclip = _antimeridian.default,
      // pre-clip angle
  x0 = null,
      y0,
      x1,
      y1,
      postclip = _identity.default,
      // post-clip extent
  delta2 = 0.5,
      // precision
  projectResample,
      projectTransform,
      projectRotateTransform,
      cache,
      cacheStream;

  function projection(point) {
    return projectRotateTransform(point[0] * _math.radians, point[1] * _math.radians);
  }

  function invert(point) {
    point = projectRotateTransform.invert(point[0], point[1]);
    return point && [point[0] * _math.degrees, point[1] * _math.degrees];
  }

  projection.stream = function (stream) {
    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));
  };

  projection.preclip = function (_) {
    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;
  };

  projection.postclip = function (_) {
    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;
  };

  projection.clipAngle = function (_) {
    return arguments.length ? (preclip = +_ ? (0, _circle.default)(theta = _ * _math.radians) : (theta = null, _antimeridian.default), reset()) : theta * _math.degrees;
  };

  projection.clipExtent = function (_) {
    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, _identity.default) : (0, _rectangle.default)(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];
  };

  projection.scale = function (_) {
    return arguments.length ? (k = +_, recenter()) : k;
  };

  projection.translate = function (_) {
    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];
  };

  projection.center = function (_) {
    return arguments.length ? (lambda = _[0] % 360 * _math.radians, phi = _[1] % 360 * _math.radians, recenter()) : [lambda * _math.degrees, phi * _math.degrees];
  };

  projection.rotate = function (_) {
    return arguments.length ? (deltaLambda = _[0] % 360 * _math.radians, deltaPhi = _[1] % 360 * _math.radians, deltaGamma = _.length > 2 ? _[2] % 360 * _math.radians : 0, recenter()) : [deltaLambda * _math.degrees, deltaPhi * _math.degrees, deltaGamma * _math.degrees];
  };

  projection.angle = function (_) {
    return arguments.length ? (alpha = _ % 360 * _math.radians, recenter()) : alpha * _math.degrees;
  };

  projection.precision = function (_) {
    return arguments.length ? (projectResample = (0, _resample.default)(projectTransform, delta2 = _ * _), reset()) : (0, _math.sqrt)(delta2);
  };

  projection.fitExtent = function (extent, object) {
    return (0, _fit.fitExtent)(projection, extent, object);
  };

  projection.fitSize = function (size, object) {
    return (0, _fit.fitSize)(projection, size, object);
  };

  projection.fitWidth = function (width, object) {
    return (0, _fit.fitWidth)(projection, width, object);
  };

  projection.fitHeight = function (height, object) {
    return (0, _fit.fitHeight)(projection, height, object);
  };

  function recenter() {
    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),
        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);
    rotate = (0, _rotation.rotateRadians)(deltaLambda, deltaPhi, deltaGamma);
    projectTransform = (0, _compose.default)(project, transform);
    projectRotateTransform = (0, _compose.default)(rotate, projectTransform);
    projectResample = (0, _resample.default)(projectTransform, delta2);
    return reset();
  }

  function reset() {
    cache = cacheStream = null;
    return projection;
  }

  return function () {
    project = projectAt.apply(this, arguments);
    projection.invert = project.invert && invert;
    return recenter();
  };
}
},{"../clip/antimeridian.js":"Gots","../clip/circle.js":"lcCJ","../clip/rectangle.js":"jRQA","../compose.js":"tY9i","../identity.js":"NNW9","../math.js":"JQgf","../rotation.js":"LqUY","../transform.js":"pfKH","./fit.js":"Ycma","./resample.js":"nAh8"}],"Q2ed":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.conicProjection = conicProjection;

var _math = require("../math.js");

var _index = require("./index.js");

function conicProjection(projectAt) {
  var phi0 = 0,
      phi1 = _math.pi / 3,
      m = (0, _index.projectionMutator)(projectAt),
      p = m(phi0, phi1);

  p.parallels = function (_) {
    return arguments.length ? m(phi0 = _[0] * _math.radians, phi1 = _[1] * _math.radians) : [phi0 * _math.degrees, phi1 * _math.degrees];
  };

  return p;
}
},{"../math.js":"JQgf","./index.js":"Ktpb"}],"JFau":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cylindricalEqualAreaRaw = cylindricalEqualAreaRaw;

var _math = require("../math.js");

function cylindricalEqualAreaRaw(phi0) {
  var cosPhi0 = (0, _math.cos)(phi0);

  function forward(lambda, phi) {
    return [lambda * cosPhi0, (0, _math.sin)(phi) / cosPhi0];
  }

  forward.invert = function (x, y) {
    return [x / cosPhi0, (0, _math.asin)(y * cosPhi0)];
  };

  return forward;
}
},{"../math.js":"JQgf"}],"TNCf":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.conicEqualAreaRaw = conicEqualAreaRaw;
exports.default = _default;

var _math = require("../math.js");

var _conic = require("./conic.js");

var _cylindricalEqualArea = require("./cylindricalEqualArea.js");

function conicEqualAreaRaw(y0, y1) {
  var sy0 = (0, _math.sin)(y0),
      n = (sy0 + (0, _math.sin)(y1)) / 2; // Are the parallels symmetrical around the Equator?

  if ((0, _math.abs)(n) < _math.epsilon) return (0, _cylindricalEqualArea.cylindricalEqualAreaRaw)(y0);
  var c = 1 + sy0 * (2 * n - sy0),
      r0 = (0, _math.sqrt)(c) / n;

  function project(x, y) {
    var r = (0, _math.sqrt)(c - 2 * n * (0, _math.sin)(y)) / n;
    return [r * (0, _math.sin)(x *= n), r0 - r * (0, _math.cos)(x)];
  }

  project.invert = function (x, y) {
    var r0y = r0 - y;
    return [(0, _math.atan2)(x, (0, _math.abs)(r0y)) / n * (0, _math.sign)(r0y), (0, _math.asin)((c - (x * x + r0y * r0y) * n * n) / (2 * n))];
  };

  return project;
}

function _default() {
  return (0, _conic.conicProjection)(conicEqualAreaRaw).scale(155.424).center([0, 33.6442]);
}
},{"../math.js":"JQgf","./conic.js":"Q2ed","./cylindricalEqualArea.js":"JFau"}],"cpQd":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _conicEqualArea = _interopRequireDefault(require("./conicEqualArea.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  return (0, _conicEqualArea.default)().parallels([29.5, 45.5]).scale(1070).translate([480, 250]).rotate([96, 0]).center([-0.6, 38.7]);
}
},{"./conicEqualArea.js":"TNCf"}],"RPZI":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _math = require("../math.js");

var _albers = _interopRequireDefault(require("./albers.js"));

var _conicEqualArea = _interopRequireDefault(require("./conicEqualArea.js"));

var _fit = require("./fit.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// The projections must have mutually exclusive clip regions on the sphere,
// as this will avoid emitting interleaving lines and polygons.
function multiplex(streams) {
  var n = streams.length;
  return {
    point: function (x, y) {
      var i = -1;

      while (++i < n) streams[i].point(x, y);
    },
    sphere: function () {
      var i = -1;

      while (++i < n) streams[i].sphere();
    },
    lineStart: function () {
      var i = -1;

      while (++i < n) streams[i].lineStart();
    },
    lineEnd: function () {
      var i = -1;

      while (++i < n) streams[i].lineEnd();
    },
    polygonStart: function () {
      var i = -1;

      while (++i < n) streams[i].polygonStart();
    },
    polygonEnd: function () {
      var i = -1;

      while (++i < n) streams[i].polygonEnd();
    }
  };
} // A composite projection for the United States, configured by default for
// 960×500. The projection also works quite well at 960×600 if you change the
// scale to 1285 and adjust the translate accordingly. The set of standard
// parallels for each region comes from USGS, which is published here:
// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers


function _default() {
  var cache,
      cacheStream,
      lower48 = (0, _albers.default)(),
      lower48Point,
      alaska = (0, _conicEqualArea.default)().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]),
      alaskaPoint,
      // EPSG:3338
  hawaii = (0, _conicEqualArea.default)().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]),
      hawaiiPoint,
      // ESRI:102007
  point,
      pointStream = {
    point: function (x, y) {
      point = [x, y];
    }
  };

  function albersUsa(coordinates) {
    var x = coordinates[0],
        y = coordinates[1];
    return point = null, (lower48Point.point(x, y), point) || (alaskaPoint.point(x, y), point) || (hawaiiPoint.point(x, y), point);
  }

  albersUsa.invert = function (coordinates) {
    var k = lower48.scale(),
        t = lower48.translate(),
        x = (coordinates[0] - t[0]) / k,
        y = (coordinates[1] - t[1]) / k;
    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii : lower48).invert(coordinates);
  };

  albersUsa.stream = function (stream) {
    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);
  };

  albersUsa.precision = function (_) {
    if (!arguments.length) return lower48.precision();
    lower48.precision(_), alaska.precision(_), hawaii.precision(_);
    return reset();
  };

  albersUsa.scale = function (_) {
    if (!arguments.length) return lower48.scale();
    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);
    return albersUsa.translate(lower48.translate());
  };

  albersUsa.translate = function (_) {
    if (!arguments.length) return lower48.translate();
    var k = lower48.scale(),
        x = +_[0],
        y = +_[1];
    lower48Point = lower48.translate(_).clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]]).stream(pointStream);
    alaskaPoint = alaska.translate([x - 0.307 * k, y + 0.201 * k]).clipExtent([[x - 0.425 * k + _math.epsilon, y + 0.120 * k + _math.epsilon], [x - 0.214 * k - _math.epsilon, y + 0.234 * k - _math.epsilon]]).stream(pointStream);
    hawaiiPoint = hawaii.translate([x - 0.205 * k, y + 0.212 * k]).clipExtent([[x - 0.214 * k + _math.epsilon, y + 0.166 * k + _math.epsilon], [x - 0.115 * k - _math.epsilon, y + 0.234 * k - _math.epsilon]]).stream(pointStream);
    return reset();
  };

  albersUsa.fitExtent = function (extent, object) {
    return (0, _fit.fitExtent)(albersUsa, extent, object);
  };

  albersUsa.fitSize = function (size, object) {
    return (0, _fit.fitSize)(albersUsa, size, object);
  };

  albersUsa.fitWidth = function (width, object) {
    return (0, _fit.fitWidth)(albersUsa, width, object);
  };

  albersUsa.fitHeight = function (height, object) {
    return (0, _fit.fitHeight)(albersUsa, height, object);
  };

  function reset() {
    cache = cacheStream = null;
    return albersUsa;
  }

  return albersUsa.scale(1070);
}
},{"../math.js":"JQgf","./albers.js":"cpQd","./conicEqualArea.js":"TNCf","./fit.js":"Ycma"}],"WksQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.azimuthalRaw = azimuthalRaw;
exports.azimuthalInvert = azimuthalInvert;

var _math = require("../math.js");

function azimuthalRaw(scale) {
  return function (x, y) {
    var cx = (0, _math.cos)(x),
        cy = (0, _math.cos)(y),
        k = scale(cx * cy);
    return [k * cy * (0, _math.sin)(x), k * (0, _math.sin)(y)];
  };
}

function azimuthalInvert(angle) {
  return function (x, y) {
    var z = (0, _math.sqrt)(x * x + y * y),
        c = angle(z),
        sc = (0, _math.sin)(c),
        cc = (0, _math.cos)(c);
    return [(0, _math.atan2)(x * sc, z * cc), (0, _math.asin)(z && y * sc / z)];
  };
}
},{"../math.js":"JQgf"}],"OyGo":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.azimuthalEqualAreaRaw = void 0;

var _math = require("../math.js");

var _azimuthal = require("./azimuthal.js");

var _index = _interopRequireDefault(require("./index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var azimuthalEqualAreaRaw = (0, _azimuthal.azimuthalRaw)(function (cxcy) {
  return (0, _math.sqrt)(2 / (1 + cxcy));
});
exports.azimuthalEqualAreaRaw = azimuthalEqualAreaRaw;
azimuthalEqualAreaRaw.invert = (0, _azimuthal.azimuthalInvert)(function (z) {
  return 2 * (0, _math.asin)(z / 2);
});

function _default() {
  return (0, _index.default)(azimuthalEqualAreaRaw).scale(124.75).clipAngle(180 - 1e-3);
}
},{"../math.js":"JQgf","./azimuthal.js":"WksQ","./index.js":"Ktpb"}],"mwct":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.azimuthalEquidistantRaw = void 0;

var _math = require("../math.js");

var _azimuthal = require("./azimuthal.js");

var _index = _interopRequireDefault(require("./index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var azimuthalEquidistantRaw = (0, _azimuthal.azimuthalRaw)(function (c) {
  return (c = (0, _math.acos)(c)) && c / (0, _math.sin)(c);
});
exports.azimuthalEquidistantRaw = azimuthalEquidistantRaw;
azimuthalEquidistantRaw.invert = (0, _azimuthal.azimuthalInvert)(function (z) {
  return z;
});

function _default() {
  return (0, _index.default)(azimuthalEquidistantRaw).scale(79.4188).clipAngle(180 - 1e-3);
}
},{"../math.js":"JQgf","./azimuthal.js":"WksQ","./index.js":"Ktpb"}],"n0Ot":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mercatorRaw = mercatorRaw;
exports.default = _default;
exports.mercatorProjection = mercatorProjection;

var _math = require("../math.js");

var _rotation = _interopRequireDefault(require("../rotation.js"));

var _index = _interopRequireDefault(require("./index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function mercatorRaw(lambda, phi) {
  return [lambda, (0, _math.log)((0, _math.tan)((_math.halfPi + phi) / 2))];
}

mercatorRaw.invert = function (x, y) {
  return [x, 2 * (0, _math.atan)((0, _math.exp)(y)) - _math.halfPi];
};

function _default() {
  return mercatorProjection(mercatorRaw).scale(961 / _math.tau);
}

function mercatorProjection(project) {
  var m = (0, _index.default)(project),
      center = m.center,
      scale = m.scale,
      translate = m.translate,
      clipExtent = m.clipExtent,
      x0 = null,
      y0,
      x1,
      y1; // clip extent

  m.scale = function (_) {
    return arguments.length ? (scale(_), reclip()) : scale();
  };

  m.translate = function (_) {
    return arguments.length ? (translate(_), reclip()) : translate();
  };

  m.center = function (_) {
    return arguments.length ? (center(_), reclip()) : center();
  };

  m.clipExtent = function (_) {
    return arguments.length ? (_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];
  };

  function reclip() {
    var k = _math.pi * scale(),
        t = m((0, _rotation.default)(m.rotate()).invert([0, 0]));
    return clipExtent(x0 == null ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]] : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);
  }

  return reclip();
}
},{"../math.js":"JQgf","../rotation.js":"LqUY","./index.js":"Ktpb"}],"kVD1":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.conicConformalRaw = conicConformalRaw;
exports.default = _default;

var _math = require("../math.js");

var _conic = require("./conic.js");

var _mercator = require("./mercator.js");

function tany(y) {
  return (0, _math.tan)((_math.halfPi + y) / 2);
}

function conicConformalRaw(y0, y1) {
  var cy0 = (0, _math.cos)(y0),
      n = y0 === y1 ? (0, _math.sin)(y0) : (0, _math.log)(cy0 / (0, _math.cos)(y1)) / (0, _math.log)(tany(y1) / tany(y0)),
      f = cy0 * (0, _math.pow)(tany(y0), n) / n;
  if (!n) return _mercator.mercatorRaw;

  function project(x, y) {
    if (f > 0) {
      if (y < -_math.halfPi + _math.epsilon) y = -_math.halfPi + _math.epsilon;
    } else {
      if (y > _math.halfPi - _math.epsilon) y = _math.halfPi - _math.epsilon;
    }

    var r = f / (0, _math.pow)(tany(y), n);
    return [r * (0, _math.sin)(n * x), f - r * (0, _math.cos)(n * x)];
  }

  project.invert = function (x, y) {
    var fy = f - y,
        r = (0, _math.sign)(n) * (0, _math.sqrt)(x * x + fy * fy);
    return [(0, _math.atan2)(x, (0, _math.abs)(fy)) / n * (0, _math.sign)(fy), 2 * (0, _math.atan)((0, _math.pow)(f / r, 1 / n)) - _math.halfPi];
  };

  return project;
}

function _default() {
  return (0, _conic.conicProjection)(conicConformalRaw).scale(109.5).parallels([30, 30]);
}
},{"../math.js":"JQgf","./conic.js":"Q2ed","./mercator.js":"n0Ot"}],"RMXQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.equirectangularRaw = equirectangularRaw;
exports.default = _default;

var _index = _interopRequireDefault(require("./index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function equirectangularRaw(lambda, phi) {
  return [lambda, phi];
}

equirectangularRaw.invert = equirectangularRaw;

function _default() {
  return (0, _index.default)(equirectangularRaw).scale(152.63);
}
},{"./index.js":"Ktpb"}],"TJ85":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.conicEquidistantRaw = conicEquidistantRaw;
exports.default = _default;

var _math = require("../math.js");

var _conic = require("./conic.js");

var _equirectangular = require("./equirectangular.js");

function conicEquidistantRaw(y0, y1) {
  var cy0 = (0, _math.cos)(y0),
      n = y0 === y1 ? (0, _math.sin)(y0) : (cy0 - (0, _math.cos)(y1)) / (y1 - y0),
      g = cy0 / n + y0;
  if ((0, _math.abs)(n) < _math.epsilon) return _equirectangular.equirectangularRaw;

  function project(x, y) {
    var gy = g - y,
        nx = n * x;
    return [gy * (0, _math.sin)(nx), g - gy * (0, _math.cos)(nx)];
  }

  project.invert = function (x, y) {
    var gy = g - y;
    return [(0, _math.atan2)(x, (0, _math.abs)(gy)) / n * (0, _math.sign)(gy), g - (0, _math.sign)(n) * (0, _math.sqrt)(x * x + gy * gy)];
  };

  return project;
}

function _default() {
  return (0, _conic.conicProjection)(conicEquidistantRaw).scale(131.154).center([0, 13.9389]);
}
},{"../math.js":"JQgf","./conic.js":"Q2ed","./equirectangular.js":"RMXQ"}],"qrWJ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.equalEarthRaw = equalEarthRaw;
exports.default = _default;

var _index = _interopRequireDefault(require("./index.js"));

var _math = require("../math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var A1 = 1.340264,
    A2 = -0.081106,
    A3 = 0.000893,
    A4 = 0.003796,
    M = (0, _math.sqrt)(3) / 2,
    iterations = 12;

function equalEarthRaw(lambda, phi) {
  var l = (0, _math.asin)(M * (0, _math.sin)(phi)),
      l2 = l * l,
      l6 = l2 * l2 * l2;
  return [lambda * (0, _math.cos)(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))), l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))];
}

equalEarthRaw.invert = function (x, y) {
  var l = y,
      l2 = l * l,
      l6 = l2 * l2 * l2;

  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {
    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;
    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);
    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;
    if ((0, _math.abs)(delta) < _math.epsilon2) break;
  }

  return [M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / (0, _math.cos)(l), (0, _math.asin)((0, _math.sin)(l) / M)];
};

function _default() {
  return (0, _index.default)(equalEarthRaw).scale(177.158);
}
},{"./index.js":"Ktpb","../math.js":"JQgf"}],"KVOo":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.gnomonicRaw = gnomonicRaw;
exports.default = _default;

var _math = require("../math.js");

var _azimuthal = require("./azimuthal.js");

var _index = _interopRequireDefault(require("./index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function gnomonicRaw(x, y) {
  var cy = (0, _math.cos)(y),
      k = (0, _math.cos)(x) * cy;
  return [cy * (0, _math.sin)(x) / k, (0, _math.sin)(y) / k];
}

gnomonicRaw.invert = (0, _azimuthal.azimuthalInvert)(_math.atan);

function _default() {
  return (0, _index.default)(gnomonicRaw).scale(144.049).clipAngle(60);
}
},{"../math.js":"JQgf","./azimuthal.js":"WksQ","./index.js":"Ktpb"}],"XK0T":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _rectangle = _interopRequireDefault(require("../clip/rectangle.js"));

var _identity = _interopRequireDefault(require("../identity.js"));

var _transform = require("../transform.js");

var _fit = require("./fit.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function scaleTranslate(kx, ky, tx, ty) {
  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? _identity.default : (0, _transform.transformer)({
    point: function (x, y) {
      this.stream.point(x * kx + tx, y * ky + ty);
    }
  });
}

function _default() {
  var k = 1,
      tx = 0,
      ty = 0,
      sx = 1,
      sy = 1,
      transform = _identity.default,
      // scale, translate and reflect
  x0 = null,
      y0,
      x1,
      y1,
      // clip extent
  postclip = _identity.default,
      cache,
      cacheStream,
      projection;

  function reset() {
    cache = cacheStream = null;
    return projection;
  }

  return projection = {
    stream: function (stream) {
      return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));
    },
    postclip: function (_) {
      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;
    },
    clipExtent: function (_) {
      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, _identity.default) : (0, _rectangle.default)(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];
    },
    scale: function (_) {
      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;
    },
    translate: function (_) {
      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];
    },
    reflectX: function (_) {
      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;
    },
    reflectY: function (_) {
      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;
    },
    fitExtent: function (extent, object) {
      return (0, _fit.fitExtent)(projection, extent, object);
    },
    fitSize: function (size, object) {
      return (0, _fit.fitSize)(projection, size, object);
    },
    fitWidth: function (width, object) {
      return (0, _fit.fitWidth)(projection, width, object);
    },
    fitHeight: function (height, object) {
      return (0, _fit.fitHeight)(projection, height, object);
    }
  };
}
},{"../clip/rectangle.js":"jRQA","../identity.js":"NNW9","../transform.js":"pfKH","./fit.js":"Ycma"}],"Y5z7":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.naturalEarth1Raw = naturalEarth1Raw;
exports.default = _default;

var _index = _interopRequireDefault(require("./index.js"));

var _math = require("../math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function naturalEarth1Raw(lambda, phi) {
  var phi2 = phi * phi,
      phi4 = phi2 * phi2;
  return [lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))), phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))];
}

naturalEarth1Raw.invert = function (x, y) {
  var phi = y,
      i = 25,
      delta;

  do {
    var phi2 = phi * phi,
        phi4 = phi2 * phi2;
    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) / (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));
  } while ((0, _math.abs)(delta) > _math.epsilon && --i > 0);

  return [x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))), phi];
};

function _default() {
  return (0, _index.default)(naturalEarth1Raw).scale(175.295);
}
},{"./index.js":"Ktpb","../math.js":"JQgf"}],"UMbg":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.orthographicRaw = orthographicRaw;
exports.default = _default;

var _math = require("../math.js");

var _azimuthal = require("./azimuthal.js");

var _index = _interopRequireDefault(require("./index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function orthographicRaw(x, y) {
  return [(0, _math.cos)(y) * (0, _math.sin)(x), (0, _math.sin)(y)];
}

orthographicRaw.invert = (0, _azimuthal.azimuthalInvert)(_math.asin);

function _default() {
  return (0, _index.default)(orthographicRaw).scale(249.5).clipAngle(90 + _math.epsilon);
}
},{"../math.js":"JQgf","./azimuthal.js":"WksQ","./index.js":"Ktpb"}],"vfE9":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.stereographicRaw = stereographicRaw;
exports.default = _default;

var _math = require("../math.js");

var _azimuthal = require("./azimuthal.js");

var _index = _interopRequireDefault(require("./index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function stereographicRaw(x, y) {
  var cy = (0, _math.cos)(y),
      k = 1 + (0, _math.cos)(x) * cy;
  return [cy * (0, _math.sin)(x) / k, (0, _math.sin)(y) / k];
}

stereographicRaw.invert = (0, _azimuthal.azimuthalInvert)(function (z) {
  return 2 * (0, _math.atan)(z);
});

function _default() {
  return (0, _index.default)(stereographicRaw).scale(250).clipAngle(142);
}
},{"../math.js":"JQgf","./azimuthal.js":"WksQ","./index.js":"Ktpb"}],"o0eF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.transverseMercatorRaw = transverseMercatorRaw;
exports.default = _default;

var _math = require("../math.js");

var _mercator = require("./mercator.js");

function transverseMercatorRaw(lambda, phi) {
  return [(0, _math.log)((0, _math.tan)((_math.halfPi + phi) / 2)), -lambda];
}

transverseMercatorRaw.invert = function (x, y) {
  return [-y, 2 * (0, _math.atan)((0, _math.exp)(x)) - _math.halfPi];
};

function _default() {
  var m = (0, _mercator.mercatorProjection)(transverseMercatorRaw),
      center = m.center,
      rotate = m.rotate;

  m.center = function (_) {
    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);
  };

  m.rotate = function (_) {
    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);
  };

  return rotate([0, 0, 90]).scale(159.155);
}
},{"../math.js":"JQgf","./mercator.js":"n0Ot"}],"Ah6W":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "geoArea", {
  enumerable: true,
  get: function () {
    return _area.default;
  }
});
Object.defineProperty(exports, "geoBounds", {
  enumerable: true,
  get: function () {
    return _bounds.default;
  }
});
Object.defineProperty(exports, "geoCentroid", {
  enumerable: true,
  get: function () {
    return _centroid.default;
  }
});
Object.defineProperty(exports, "geoCircle", {
  enumerable: true,
  get: function () {
    return _circle.default;
  }
});
Object.defineProperty(exports, "geoClipAntimeridian", {
  enumerable: true,
  get: function () {
    return _antimeridian.default;
  }
});
Object.defineProperty(exports, "geoClipCircle", {
  enumerable: true,
  get: function () {
    return _circle2.default;
  }
});
Object.defineProperty(exports, "geoClipExtent", {
  enumerable: true,
  get: function () {
    return _extent.default;
  }
});
Object.defineProperty(exports, "geoClipRectangle", {
  enumerable: true,
  get: function () {
    return _rectangle.default;
  }
});
Object.defineProperty(exports, "geoContains", {
  enumerable: true,
  get: function () {
    return _contains.default;
  }
});
Object.defineProperty(exports, "geoDistance", {
  enumerable: true,
  get: function () {
    return _distance.default;
  }
});
Object.defineProperty(exports, "geoGraticule", {
  enumerable: true,
  get: function () {
    return _graticule.default;
  }
});
Object.defineProperty(exports, "geoGraticule10", {
  enumerable: true,
  get: function () {
    return _graticule.graticule10;
  }
});
Object.defineProperty(exports, "geoInterpolate", {
  enumerable: true,
  get: function () {
    return _interpolate.default;
  }
});
Object.defineProperty(exports, "geoLength", {
  enumerable: true,
  get: function () {
    return _length.default;
  }
});
Object.defineProperty(exports, "geoPath", {
  enumerable: true,
  get: function () {
    return _index.default;
  }
});
Object.defineProperty(exports, "geoAlbers", {
  enumerable: true,
  get: function () {
    return _albers.default;
  }
});
Object.defineProperty(exports, "geoAlbersUsa", {
  enumerable: true,
  get: function () {
    return _albersUsa.default;
  }
});
Object.defineProperty(exports, "geoAzimuthalEqualArea", {
  enumerable: true,
  get: function () {
    return _azimuthalEqualArea.default;
  }
});
Object.defineProperty(exports, "geoAzimuthalEqualAreaRaw", {
  enumerable: true,
  get: function () {
    return _azimuthalEqualArea.azimuthalEqualAreaRaw;
  }
});
Object.defineProperty(exports, "geoAzimuthalEquidistant", {
  enumerable: true,
  get: function () {
    return _azimuthalEquidistant.default;
  }
});
Object.defineProperty(exports, "geoAzimuthalEquidistantRaw", {
  enumerable: true,
  get: function () {
    return _azimuthalEquidistant.azimuthalEquidistantRaw;
  }
});
Object.defineProperty(exports, "geoConicConformal", {
  enumerable: true,
  get: function () {
    return _conicConformal.default;
  }
});
Object.defineProperty(exports, "geoConicConformalRaw", {
  enumerable: true,
  get: function () {
    return _conicConformal.conicConformalRaw;
  }
});
Object.defineProperty(exports, "geoConicEqualArea", {
  enumerable: true,
  get: function () {
    return _conicEqualArea.default;
  }
});
Object.defineProperty(exports, "geoConicEqualAreaRaw", {
  enumerable: true,
  get: function () {
    return _conicEqualArea.conicEqualAreaRaw;
  }
});
Object.defineProperty(exports, "geoConicEquidistant", {
  enumerable: true,
  get: function () {
    return _conicEquidistant.default;
  }
});
Object.defineProperty(exports, "geoConicEquidistantRaw", {
  enumerable: true,
  get: function () {
    return _conicEquidistant.conicEquidistantRaw;
  }
});
Object.defineProperty(exports, "geoEqualEarth", {
  enumerable: true,
  get: function () {
    return _equalEarth.default;
  }
});
Object.defineProperty(exports, "geoEqualEarthRaw", {
  enumerable: true,
  get: function () {
    return _equalEarth.equalEarthRaw;
  }
});
Object.defineProperty(exports, "geoEquirectangular", {
  enumerable: true,
  get: function () {
    return _equirectangular.default;
  }
});
Object.defineProperty(exports, "geoEquirectangularRaw", {
  enumerable: true,
  get: function () {
    return _equirectangular.equirectangularRaw;
  }
});
Object.defineProperty(exports, "geoGnomonic", {
  enumerable: true,
  get: function () {
    return _gnomonic.default;
  }
});
Object.defineProperty(exports, "geoGnomonicRaw", {
  enumerable: true,
  get: function () {
    return _gnomonic.gnomonicRaw;
  }
});
Object.defineProperty(exports, "geoIdentity", {
  enumerable: true,
  get: function () {
    return _identity.default;
  }
});
Object.defineProperty(exports, "geoProjection", {
  enumerable: true,
  get: function () {
    return _index2.default;
  }
});
Object.defineProperty(exports, "geoProjectionMutator", {
  enumerable: true,
  get: function () {
    return _index2.projectionMutator;
  }
});
Object.defineProperty(exports, "geoMercator", {
  enumerable: true,
  get: function () {
    return _mercator.default;
  }
});
Object.defineProperty(exports, "geoMercatorRaw", {
  enumerable: true,
  get: function () {
    return _mercator.mercatorRaw;
  }
});
Object.defineProperty(exports, "geoNaturalEarth1", {
  enumerable: true,
  get: function () {
    return _naturalEarth.default;
  }
});
Object.defineProperty(exports, "geoNaturalEarth1Raw", {
  enumerable: true,
  get: function () {
    return _naturalEarth.naturalEarth1Raw;
  }
});
Object.defineProperty(exports, "geoOrthographic", {
  enumerable: true,
  get: function () {
    return _orthographic.default;
  }
});
Object.defineProperty(exports, "geoOrthographicRaw", {
  enumerable: true,
  get: function () {
    return _orthographic.orthographicRaw;
  }
});
Object.defineProperty(exports, "geoStereographic", {
  enumerable: true,
  get: function () {
    return _stereographic.default;
  }
});
Object.defineProperty(exports, "geoStereographicRaw", {
  enumerable: true,
  get: function () {
    return _stereographic.stereographicRaw;
  }
});
Object.defineProperty(exports, "geoTransverseMercator", {
  enumerable: true,
  get: function () {
    return _transverseMercator.default;
  }
});
Object.defineProperty(exports, "geoTransverseMercatorRaw", {
  enumerable: true,
  get: function () {
    return _transverseMercator.transverseMercatorRaw;
  }
});
Object.defineProperty(exports, "geoRotation", {
  enumerable: true,
  get: function () {
    return _rotation.default;
  }
});
Object.defineProperty(exports, "geoStream", {
  enumerable: true,
  get: function () {
    return _stream.default;
  }
});
Object.defineProperty(exports, "geoTransform", {
  enumerable: true,
  get: function () {
    return _transform.default;
  }
});

var _area = _interopRequireDefault(require("./area.js"));

var _bounds = _interopRequireDefault(require("./bounds.js"));

var _centroid = _interopRequireDefault(require("./centroid.js"));

var _circle = _interopRequireDefault(require("./circle.js"));

var _antimeridian = _interopRequireDefault(require("./clip/antimeridian.js"));

var _circle2 = _interopRequireDefault(require("./clip/circle.js"));

var _extent = _interopRequireDefault(require("./clip/extent.js"));

var _rectangle = _interopRequireDefault(require("./clip/rectangle.js"));

var _contains = _interopRequireDefault(require("./contains.js"));

var _distance = _interopRequireDefault(require("./distance.js"));

var _graticule = _interopRequireWildcard(require("./graticule.js"));

var _interpolate = _interopRequireDefault(require("./interpolate.js"));

var _length = _interopRequireDefault(require("./length.js"));

var _index = _interopRequireDefault(require("./path/index.js"));

var _albers = _interopRequireDefault(require("./projection/albers.js"));

var _albersUsa = _interopRequireDefault(require("./projection/albersUsa.js"));

var _azimuthalEqualArea = _interopRequireWildcard(require("./projection/azimuthalEqualArea.js"));

var _azimuthalEquidistant = _interopRequireWildcard(require("./projection/azimuthalEquidistant.js"));

var _conicConformal = _interopRequireWildcard(require("./projection/conicConformal.js"));

var _conicEqualArea = _interopRequireWildcard(require("./projection/conicEqualArea.js"));

var _conicEquidistant = _interopRequireWildcard(require("./projection/conicEquidistant.js"));

var _equalEarth = _interopRequireWildcard(require("./projection/equalEarth.js"));

var _equirectangular = _interopRequireWildcard(require("./projection/equirectangular.js"));

var _gnomonic = _interopRequireWildcard(require("./projection/gnomonic.js"));

var _identity = _interopRequireDefault(require("./projection/identity.js"));

var _index2 = _interopRequireWildcard(require("./projection/index.js"));

var _mercator = _interopRequireWildcard(require("./projection/mercator.js"));

var _naturalEarth = _interopRequireWildcard(require("./projection/naturalEarth1.js"));

var _orthographic = _interopRequireWildcard(require("./projection/orthographic.js"));

var _stereographic = _interopRequireWildcard(require("./projection/stereographic.js"));

var _transverseMercator = _interopRequireWildcard(require("./projection/transverseMercator.js"));

var _rotation = _interopRequireDefault(require("./rotation.js"));

var _stream = _interopRequireDefault(require("./stream.js"));

var _transform = _interopRequireDefault(require("./transform.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./area.js":"rKta","./bounds.js":"rw3L","./centroid.js":"GCsQ","./circle.js":"KcOR","./clip/antimeridian.js":"Gots","./clip/circle.js":"lcCJ","./clip/extent.js":"EodF","./clip/rectangle.js":"jRQA","./contains.js":"tRhb","./distance.js":"hTgK","./graticule.js":"IdZ0","./interpolate.js":"uuLr","./length.js":"bXUe","./path/index.js":"JRMk","./projection/albers.js":"cpQd","./projection/albersUsa.js":"RPZI","./projection/azimuthalEqualArea.js":"OyGo","./projection/azimuthalEquidistant.js":"mwct","./projection/conicConformal.js":"kVD1","./projection/conicEqualArea.js":"TNCf","./projection/conicEquidistant.js":"TJ85","./projection/equalEarth.js":"qrWJ","./projection/equirectangular.js":"RMXQ","./projection/gnomonic.js":"KVOo","./projection/identity.js":"XK0T","./projection/index.js":"Ktpb","./projection/mercator.js":"n0Ot","./projection/naturalEarth1.js":"Y5z7","./projection/orthographic.js":"UMbg","./projection/stereographic.js":"vfE9","./projection/transverseMercator.js":"o0eF","./rotation.js":"LqUY","./stream.js":"XQuq","./transform.js":"pfKH"}],"JRxK":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function defaultSeparation(a, b) {
  return a.parent === b.parent ? 1 : 2;
}

function meanX(children) {
  return children.reduce(meanXReduce, 0) / children.length;
}

function meanXReduce(x, c) {
  return x + c.x;
}

function maxY(children) {
  return 1 + children.reduce(maxYReduce, 0);
}

function maxYReduce(y, c) {
  return Math.max(y, c.y);
}

function leafLeft(node) {
  var children;

  while (children = node.children) node = children[0];

  return node;
}

function leafRight(node) {
  var children;

  while (children = node.children) node = children[children.length - 1];

  return node;
}

function _default() {
  var separation = defaultSeparation,
      dx = 1,
      dy = 1,
      nodeSize = false;

  function cluster(root) {
    var previousNode,
        x = 0; // First walk, computing the initial x & y values.

    root.eachAfter(function (node) {
      var children = node.children;

      if (children) {
        node.x = meanX(children);
        node.y = maxY(children);
      } else {
        node.x = previousNode ? x += separation(node, previousNode) : 0;
        node.y = 0;
        previousNode = node;
      }
    });
    var left = leafLeft(root),
        right = leafRight(root),
        x0 = left.x - separation(left, right) / 2,
        x1 = right.x + separation(right, left) / 2; // Second walk, normalizing x & y to the desired size.

    return root.eachAfter(nodeSize ? function (node) {
      node.x = (node.x - root.x) * dx;
      node.y = (root.y - node.y) * dy;
    } : function (node) {
      node.x = (node.x - x0) / (x1 - x0) * dx;
      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;
    });
  }

  cluster.separation = function (x) {
    return arguments.length ? (separation = x, cluster) : separation;
  };

  cluster.size = function (x) {
    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : nodeSize ? null : [dx, dy];
  };

  cluster.nodeSize = function (x) {
    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : nodeSize ? [dx, dy] : null;
  };

  return cluster;
}
},{}],"FbP8":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function count(node) {
  var sum = 0,
      children = node.children,
      i = children && children.length;
  if (!i) sum = 1;else while (--i >= 0) sum += children[i].value;
  node.value = sum;
}

function _default() {
  return this.eachAfter(count);
}
},{}],"aoO7":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(callback) {
  var node = this,
      current,
      next = [node],
      children,
      i,
      n;

  do {
    current = next.reverse(), next = [];

    while (node = current.pop()) {
      callback(node), children = node.children;
      if (children) for (i = 0, n = children.length; i < n; ++i) {
        next.push(children[i]);
      }
    }
  } while (next.length);

  return this;
}
},{}],"vU7q":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(callback) {
  var node = this,
      nodes = [node],
      children,
      i;

  while (node = nodes.pop()) {
    callback(node), children = node.children;
    if (children) for (i = children.length - 1; i >= 0; --i) {
      nodes.push(children[i]);
    }
  }

  return this;
}
},{}],"bidz":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(callback) {
  var node = this,
      nodes = [node],
      next = [],
      children,
      i,
      n;

  while (node = nodes.pop()) {
    next.push(node), children = node.children;
    if (children) for (i = 0, n = children.length; i < n; ++i) {
      nodes.push(children[i]);
    }
  }

  while (node = next.pop()) {
    callback(node);
  }

  return this;
}
},{}],"tYQG":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(value) {
  return this.eachAfter(function (node) {
    var sum = +value(node.data) || 0,
        children = node.children,
        i = children && children.length;

    while (--i >= 0) sum += children[i].value;

    node.value = sum;
  });
}
},{}],"l55u":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(compare) {
  return this.eachBefore(function (node) {
    if (node.children) {
      node.children.sort(compare);
    }
  });
}
},{}],"Rfs8":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(end) {
  var start = this,
      ancestor = leastCommonAncestor(start, end),
      nodes = [start];

  while (start !== ancestor) {
    start = start.parent;
    nodes.push(start);
  }

  var k = nodes.length;

  while (end !== ancestor) {
    nodes.splice(k, 0, end);
    end = end.parent;
  }

  return nodes;
}

function leastCommonAncestor(a, b) {
  if (a === b) return a;
  var aNodes = a.ancestors(),
      bNodes = b.ancestors(),
      c = null;
  a = aNodes.pop();
  b = bNodes.pop();

  while (a === b) {
    c = a;
    a = aNodes.pop();
    b = bNodes.pop();
  }

  return c;
}
},{}],"iENO":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var node = this,
      nodes = [node];

  while (node = node.parent) {
    nodes.push(node);
  }

  return nodes;
}
},{}],"b4YN":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var nodes = [];
  this.each(function (node) {
    nodes.push(node);
  });
  return nodes;
}
},{}],"A1Sr":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var leaves = [];
  this.eachBefore(function (node) {
    if (!node.children) {
      leaves.push(node);
    }
  });
  return leaves;
}
},{}],"NfF5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var root = this,
      links = [];
  root.each(function (node) {
    if (node !== root) {
      // Don’t include the root’s parent, if any.
      links.push({
        source: node.parent,
        target: node
      });
    }
  });
  return links;
}
},{}],"xn1B":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = hierarchy;
exports.computeHeight = computeHeight;
exports.Node = Node;

var _count = _interopRequireDefault(require("./count.js"));

var _each = _interopRequireDefault(require("./each.js"));

var _eachBefore = _interopRequireDefault(require("./eachBefore.js"));

var _eachAfter = _interopRequireDefault(require("./eachAfter.js"));

var _sum = _interopRequireDefault(require("./sum.js"));

var _sort = _interopRequireDefault(require("./sort.js"));

var _path = _interopRequireDefault(require("./path.js"));

var _ancestors = _interopRequireDefault(require("./ancestors.js"));

var _descendants = _interopRequireDefault(require("./descendants.js"));

var _leaves = _interopRequireDefault(require("./leaves.js"));

var _links = _interopRequireDefault(require("./links.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function hierarchy(data, children) {
  var root = new Node(data),
      valued = +data.value && (root.value = data.value),
      node,
      nodes = [root],
      child,
      childs,
      i,
      n;
  if (children == null) children = defaultChildren;

  while (node = nodes.pop()) {
    if (valued) node.value = +node.data.value;

    if ((childs = children(node.data)) && (n = childs.length)) {
      node.children = new Array(n);

      for (i = n - 1; i >= 0; --i) {
        nodes.push(child = node.children[i] = new Node(childs[i]));
        child.parent = node;
        child.depth = node.depth + 1;
      }
    }
  }

  return root.eachBefore(computeHeight);
}

function node_copy() {
  return hierarchy(this).eachBefore(copyData);
}

function defaultChildren(d) {
  return d.children;
}

function copyData(node) {
  node.data = node.data.data;
}

function computeHeight(node) {
  var height = 0;

  do node.height = height; while ((node = node.parent) && node.height < ++height);
}

function Node(data) {
  this.data = data;
  this.depth = this.height = 0;
  this.parent = null;
}

Node.prototype = hierarchy.prototype = {
  constructor: Node,
  count: _count.default,
  each: _each.default,
  eachAfter: _eachAfter.default,
  eachBefore: _eachBefore.default,
  sum: _sum.default,
  sort: _sort.default,
  path: _path.default,
  ancestors: _ancestors.default,
  descendants: _descendants.default,
  leaves: _leaves.default,
  links: _links.default,
  copy: node_copy
};
},{"./count.js":"FbP8","./each.js":"aoO7","./eachBefore.js":"vU7q","./eachAfter.js":"bidz","./sum.js":"tYQG","./sort.js":"l55u","./path.js":"Rfs8","./ancestors.js":"iENO","./descendants.js":"b4YN","./leaves.js":"A1Sr","./links.js":"NfF5"}],"aDgv":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.shuffle = shuffle;
exports.slice = void 0;
var slice = Array.prototype.slice;
exports.slice = slice;

function shuffle(array) {
  var m = array.length,
      t,
      i;

  while (m) {
    i = Math.random() * m-- | 0;
    t = array[m];
    array[m] = array[i];
    array[i] = t;
  }

  return array;
}
},{}],"H7R8":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _array = require("../array.js");

function _default(circles) {
  var i = 0,
      n = (circles = (0, _array.shuffle)(_array.slice.call(circles))).length,
      B = [],
      p,
      e;

  while (i < n) {
    p = circles[i];
    if (e && enclosesWeak(e, p)) ++i;else e = encloseBasis(B = extendBasis(B, p)), i = 0;
  }

  return e;
}

function extendBasis(B, p) {
  var i, j;
  if (enclosesWeakAll(p, B)) return [p]; // If we get here then B must have at least one element.

  for (i = 0; i < B.length; ++i) {
    if (enclosesNot(p, B[i]) && enclosesWeakAll(encloseBasis2(B[i], p), B)) {
      return [B[i], p];
    }
  } // If we get here then B must have at least two elements.


  for (i = 0; i < B.length - 1; ++i) {
    for (j = i + 1; j < B.length; ++j) {
      if (enclosesNot(encloseBasis2(B[i], B[j]), p) && enclosesNot(encloseBasis2(B[i], p), B[j]) && enclosesNot(encloseBasis2(B[j], p), B[i]) && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {
        return [B[i], B[j], p];
      }
    }
  } // If we get here then something is very wrong.


  throw new Error();
}

function enclosesNot(a, b) {
  var dr = a.r - b.r,
      dx = b.x - a.x,
      dy = b.y - a.y;
  return dr < 0 || dr * dr < dx * dx + dy * dy;
}

function enclosesWeak(a, b) {
  var dr = a.r - b.r + 1e-6,
      dx = b.x - a.x,
      dy = b.y - a.y;
  return dr > 0 && dr * dr > dx * dx + dy * dy;
}

function enclosesWeakAll(a, B) {
  for (var i = 0; i < B.length; ++i) {
    if (!enclosesWeak(a, B[i])) {
      return false;
    }
  }

  return true;
}

function encloseBasis(B) {
  switch (B.length) {
    case 1:
      return encloseBasis1(B[0]);

    case 2:
      return encloseBasis2(B[0], B[1]);

    case 3:
      return encloseBasis3(B[0], B[1], B[2]);
  }
}

function encloseBasis1(a) {
  return {
    x: a.x,
    y: a.y,
    r: a.r
  };
}

function encloseBasis2(a, b) {
  var x1 = a.x,
      y1 = a.y,
      r1 = a.r,
      x2 = b.x,
      y2 = b.y,
      r2 = b.r,
      x21 = x2 - x1,
      y21 = y2 - y1,
      r21 = r2 - r1,
      l = Math.sqrt(x21 * x21 + y21 * y21);
  return {
    x: (x1 + x2 + x21 / l * r21) / 2,
    y: (y1 + y2 + y21 / l * r21) / 2,
    r: (l + r1 + r2) / 2
  };
}

function encloseBasis3(a, b, c) {
  var x1 = a.x,
      y1 = a.y,
      r1 = a.r,
      x2 = b.x,
      y2 = b.y,
      r2 = b.r,
      x3 = c.x,
      y3 = c.y,
      r3 = c.r,
      a2 = x1 - x2,
      a3 = x1 - x3,
      b2 = y1 - y2,
      b3 = y1 - y3,
      c2 = r2 - r1,
      c3 = r3 - r1,
      d1 = x1 * x1 + y1 * y1 - r1 * r1,
      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,
      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,
      ab = a3 * b2 - a2 * b3,
      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,
      xb = (b3 * c2 - b2 * c3) / ab,
      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,
      yb = (a2 * c3 - a3 * c2) / ab,
      A = xb * xb + yb * yb - 1,
      B = 2 * (r1 + xa * xb + ya * yb),
      C = xa * xa + ya * ya - r1 * r1,
      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);
  return {
    x: x1 + xa + xb * r,
    y: y1 + ya + yb * r,
    r: r
  };
}
},{"../array.js":"aDgv"}],"ObEg":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.packEnclose = packEnclose;
exports.default = _default;

var _enclose = _interopRequireDefault(require("./enclose.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function place(b, a, c) {
  var dx = b.x - a.x,
      x,
      a2,
      dy = b.y - a.y,
      y,
      b2,
      d2 = dx * dx + dy * dy;

  if (d2) {
    a2 = a.r + c.r, a2 *= a2;
    b2 = b.r + c.r, b2 *= b2;

    if (a2 > b2) {
      x = (d2 + b2 - a2) / (2 * d2);
      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));
      c.x = b.x - x * dx - y * dy;
      c.y = b.y - x * dy + y * dx;
    } else {
      x = (d2 + a2 - b2) / (2 * d2);
      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));
      c.x = a.x + x * dx - y * dy;
      c.y = a.y + x * dy + y * dx;
    }
  } else {
    c.x = a.x + c.r;
    c.y = a.y;
  }
}

function intersects(a, b) {
  var dr = a.r + b.r - 1e-6,
      dx = b.x - a.x,
      dy = b.y - a.y;
  return dr > 0 && dr * dr > dx * dx + dy * dy;
}

function score(node) {
  var a = node._,
      b = node.next._,
      ab = a.r + b.r,
      dx = (a.x * b.r + b.x * a.r) / ab,
      dy = (a.y * b.r + b.y * a.r) / ab;
  return dx * dx + dy * dy;
}

function Node(circle) {
  this._ = circle;
  this.next = null;
  this.previous = null;
}

function packEnclose(circles) {
  if (!(n = circles.length)) return 0;
  var a, b, c, n, aa, ca, i, j, k, sj, sk; // Place the first circle.

  a = circles[0], a.x = 0, a.y = 0;
  if (!(n > 1)) return a.r; // Place the second circle.

  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;
  if (!(n > 2)) return a.r + b.r; // Place the third circle.

  place(b, a, c = circles[2]); // Initialize the front-chain using the first three circles a, b and c.

  a = new Node(a), b = new Node(b), c = new Node(c);
  a.next = c.previous = b;
  b.next = a.previous = c;
  c.next = b.previous = a; // Attempt to place each remaining circle…

  pack: for (i = 3; i < n; ++i) {
    place(a._, b._, c = circles[i]), c = new Node(c); // Find the closest intersecting circle on the front-chain, if any.
    // “Closeness” is determined by linear distance along the front-chain.
    // “Ahead” or “behind” is likewise determined by linear distance.

    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;

    do {
      if (sj <= sk) {
        if (intersects(j._, c._)) {
          b = j, a.next = b, b.previous = a, --i;
          continue pack;
        }

        sj += j._.r, j = j.next;
      } else {
        if (intersects(k._, c._)) {
          a = k, a.next = b, b.previous = a, --i;
          continue pack;
        }

        sk += k._.r, k = k.previous;
      }
    } while (j !== k.next); // Success! Insert the new circle c between a and b.


    c.previous = a, c.next = b, a.next = b.previous = b = c; // Compute the new closest circle pair to the centroid.

    aa = score(a);

    while ((c = c.next) !== b) {
      if ((ca = score(c)) < aa) {
        a = c, aa = ca;
      }
    }

    b = a.next;
  } // Compute the enclosing circle of the front chain.


  a = [b._], c = b;

  while ((c = c.next) !== b) a.push(c._);

  c = (0, _enclose.default)(a); // Translate the circles to put the enclosing circle around the origin.

  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;

  return c.r;
}

function _default(circles) {
  packEnclose(circles);
  return circles;
}
},{"./enclose.js":"H7R8"}],"kxuB":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.optional = optional;
exports.required = required;

function optional(f) {
  return f == null ? null : required(f);
}

function required(f) {
  if (typeof f !== "function") throw new Error();
  return f;
}
},{}],"JuqG":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.constantZero = constantZero;
exports.default = _default;

function constantZero() {
  return 0;
}

function _default(x) {
  return function () {
    return x;
  };
}
},{}],"fIYd":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _siblings = require("./siblings.js");

var _accessors = require("../accessors.js");

var _constant = _interopRequireWildcard(require("../constant.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function defaultRadius(d) {
  return Math.sqrt(d.value);
}

function _default() {
  var radius = null,
      dx = 1,
      dy = 1,
      padding = _constant.constantZero;

  function pack(root) {
    root.x = dx / 2, root.y = dy / 2;

    if (radius) {
      root.eachBefore(radiusLeaf(radius)).eachAfter(packChildren(padding, 0.5)).eachBefore(translateChild(1));
    } else {
      root.eachBefore(radiusLeaf(defaultRadius)).eachAfter(packChildren(_constant.constantZero, 1)).eachAfter(packChildren(padding, root.r / Math.min(dx, dy))).eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));
    }

    return root;
  }

  pack.radius = function (x) {
    return arguments.length ? (radius = (0, _accessors.optional)(x), pack) : radius;
  };

  pack.size = function (x) {
    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];
  };

  pack.padding = function (x) {
    return arguments.length ? (padding = typeof x === "function" ? x : (0, _constant.default)(+x), pack) : padding;
  };

  return pack;
}

function radiusLeaf(radius) {
  return function (node) {
    if (!node.children) {
      node.r = Math.max(0, +radius(node) || 0);
    }
  };
}

function packChildren(padding, k) {
  return function (node) {
    if (children = node.children) {
      var children,
          i,
          n = children.length,
          r = padding(node) * k || 0,
          e;
      if (r) for (i = 0; i < n; ++i) children[i].r += r;
      e = (0, _siblings.packEnclose)(children);
      if (r) for (i = 0; i < n; ++i) children[i].r -= r;
      node.r = e + r;
    }
  };
}

function translateChild(k) {
  return function (node) {
    var parent = node.parent;
    node.r *= k;

    if (parent) {
      node.x = parent.x + k * node.x;
      node.y = parent.y + k * node.y;
    }
  };
}
},{"./siblings.js":"ObEg","../accessors.js":"kxuB","../constant.js":"JuqG"}],"kcDz":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(node) {
  node.x0 = Math.round(node.x0);
  node.y0 = Math.round(node.y0);
  node.x1 = Math.round(node.x1);
  node.y1 = Math.round(node.y1);
}
},{}],"Z1AK":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(parent, x0, y0, x1, y1) {
  var nodes = parent.children,
      node,
      i = -1,
      n = nodes.length,
      k = parent.value && (x1 - x0) / parent.value;

  while (++i < n) {
    node = nodes[i], node.y0 = y0, node.y1 = y1;
    node.x0 = x0, node.x1 = x0 += node.value * k;
  }
}
},{}],"ekbw":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _round = _interopRequireDefault(require("./treemap/round.js"));

var _dice = _interopRequireDefault(require("./treemap/dice.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var dx = 1,
      dy = 1,
      padding = 0,
      round = false;

  function partition(root) {
    var n = root.height + 1;
    root.x0 = root.y0 = padding;
    root.x1 = dx;
    root.y1 = dy / n;
    root.eachBefore(positionNode(dy, n));
    if (round) root.eachBefore(_round.default);
    return root;
  }

  function positionNode(dy, n) {
    return function (node) {
      if (node.children) {
        (0, _dice.default)(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);
      }

      var x0 = node.x0,
          y0 = node.y0,
          x1 = node.x1 - padding,
          y1 = node.y1 - padding;
      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
      node.x0 = x0;
      node.y0 = y0;
      node.x1 = x1;
      node.y1 = y1;
    };
  }

  partition.round = function (x) {
    return arguments.length ? (round = !!x, partition) : round;
  };

  partition.size = function (x) {
    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];
  };

  partition.padding = function (x) {
    return arguments.length ? (padding = +x, partition) : padding;
  };

  return partition;
}
},{"./treemap/round.js":"kcDz","./treemap/dice.js":"Z1AK"}],"fM3r":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _accessors = require("./accessors.js");

var _index = require("./hierarchy/index.js");

var keyPrefix = "$",
    // Protect against keys like “__proto__”.
preroot = {
  depth: -1
},
    ambiguous = {};

function defaultId(d) {
  return d.id;
}

function defaultParentId(d) {
  return d.parentId;
}

function _default() {
  var id = defaultId,
      parentId = defaultParentId;

  function stratify(data) {
    var d,
        i,
        n = data.length,
        root,
        parent,
        node,
        nodes = new Array(n),
        nodeId,
        nodeKey,
        nodeByKey = {};

    for (i = 0; i < n; ++i) {
      d = data[i], node = nodes[i] = new _index.Node(d);

      if ((nodeId = id(d, i, data)) != null && (nodeId += "")) {
        nodeKey = keyPrefix + (node.id = nodeId);
        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;
      }
    }

    for (i = 0; i < n; ++i) {
      node = nodes[i], nodeId = parentId(data[i], i, data);

      if (nodeId == null || !(nodeId += "")) {
        if (root) throw new Error("multiple roots");
        root = node;
      } else {
        parent = nodeByKey[keyPrefix + nodeId];
        if (!parent) throw new Error("missing: " + nodeId);
        if (parent === ambiguous) throw new Error("ambiguous: " + nodeId);
        if (parent.children) parent.children.push(node);else parent.children = [node];
        node.parent = parent;
      }
    }

    if (!root) throw new Error("no root");
    root.parent = preroot;
    root.eachBefore(function (node) {
      node.depth = node.parent.depth + 1;
      --n;
    }).eachBefore(_index.computeHeight);
    root.parent = null;
    if (n > 0) throw new Error("cycle");
    return root;
  }

  stratify.id = function (x) {
    return arguments.length ? (id = (0, _accessors.required)(x), stratify) : id;
  };

  stratify.parentId = function (x) {
    return arguments.length ? (parentId = (0, _accessors.required)(x), stratify) : parentId;
  };

  return stratify;
}
},{"./accessors.js":"kxuB","./hierarchy/index.js":"xn1B"}],"xQqP":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./hierarchy/index.js");

function defaultSeparation(a, b) {
  return a.parent === b.parent ? 1 : 2;
} // function radialSeparation(a, b) {
//   return (a.parent === b.parent ? 1 : 2) / a.depth;
// }
// This function is used to traverse the left contour of a subtree (or
// subforest). It returns the successor of v on this contour. This successor is
// either given by the leftmost child of v or by the thread of v. The function
// returns null if and only if v is on the highest level of its subtree.


function nextLeft(v) {
  var children = v.children;
  return children ? children[0] : v.t;
} // This function works analogously to nextLeft.


function nextRight(v) {
  var children = v.children;
  return children ? children[children.length - 1] : v.t;
} // Shifts the current subtree rooted at w+. This is done by increasing
// prelim(w+) and mod(w+) by shift.


function moveSubtree(wm, wp, shift) {
  var change = shift / (wp.i - wm.i);
  wp.c -= change;
  wp.s += shift;
  wm.c += change;
  wp.z += shift;
  wp.m += shift;
} // All other shifts, applied to the smaller subtrees between w- and w+, are
// performed by this function. To prepare the shifts, we have to adjust
// change(w+), shift(w+), and change(w-).


function executeShifts(v) {
  var shift = 0,
      change = 0,
      children = v.children,
      i = children.length,
      w;

  while (--i >= 0) {
    w = children[i];
    w.z += shift;
    w.m += shift;
    shift += w.s + (change += w.c);
  }
} // If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,
// returns the specified (default) ancestor.


function nextAncestor(vim, v, ancestor) {
  return vim.a.parent === v.parent ? vim.a : ancestor;
}

function TreeNode(node, i) {
  this._ = node;
  this.parent = null;
  this.children = null;
  this.A = null; // default ancestor

  this.a = this; // ancestor

  this.z = 0; // prelim

  this.m = 0; // mod

  this.c = 0; // change

  this.s = 0; // shift

  this.t = null; // thread

  this.i = i; // number
}

TreeNode.prototype = Object.create(_index.Node.prototype);

function treeRoot(root) {
  var tree = new TreeNode(root, 0),
      node,
      nodes = [tree],
      child,
      children,
      i,
      n;

  while (node = nodes.pop()) {
    if (children = node._.children) {
      node.children = new Array(n = children.length);

      for (i = n - 1; i >= 0; --i) {
        nodes.push(child = node.children[i] = new TreeNode(children[i], i));
        child.parent = node;
      }
    }
  }

  (tree.parent = new TreeNode(null, 0)).children = [tree];
  return tree;
} // Node-link tree diagram using the Reingold-Tilford "tidy" algorithm


function _default() {
  var separation = defaultSeparation,
      dx = 1,
      dy = 1,
      nodeSize = null;

  function tree(root) {
    var t = treeRoot(root); // Compute the layout using Buchheim et al.’s algorithm.

    t.eachAfter(firstWalk), t.parent.m = -t.z;
    t.eachBefore(secondWalk); // If a fixed node size is specified, scale x and y.

    if (nodeSize) root.eachBefore(sizeNode); // If a fixed tree size is specified, scale x and y based on the extent.
    // Compute the left-most, right-most, and depth-most nodes for extents.
    else {
        var left = root,
            right = root,
            bottom = root;
        root.eachBefore(function (node) {
          if (node.x < left.x) left = node;
          if (node.x > right.x) right = node;
          if (node.depth > bottom.depth) bottom = node;
        });
        var s = left === right ? 1 : separation(left, right) / 2,
            tx = s - left.x,
            kx = dx / (right.x + s + tx),
            ky = dy / (bottom.depth || 1);
        root.eachBefore(function (node) {
          node.x = (node.x + tx) * kx;
          node.y = node.depth * ky;
        });
      }
    return root;
  } // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is
  // applied recursively to the children of v, as well as the function
  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the
  // node v is placed to the midpoint of its outermost children.


  function firstWalk(v) {
    var children = v.children,
        siblings = v.parent.children,
        w = v.i ? siblings[v.i - 1] : null;

    if (children) {
      executeShifts(v);
      var midpoint = (children[0].z + children[children.length - 1].z) / 2;

      if (w) {
        v.z = w.z + separation(v._, w._);
        v.m = v.z - midpoint;
      } else {
        v.z = midpoint;
      }
    } else if (w) {
      v.z = w.z + separation(v._, w._);
    }

    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);
  } // Computes all real x-coordinates by summing up the modifiers recursively.


  function secondWalk(v) {
    v._.x = v.z + v.parent.m;
    v.m += v.parent.m;
  } // The core of the algorithm. Here, a new subtree is combined with the
  // previous subtrees. Threads are used to traverse the inside and outside
  // contours of the left and right subtree up to the highest common level. The
  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the
  // superscript o means outside and i means inside, the subscript - means left
  // subtree and + means right subtree. For summing up the modifiers along the
  // contour, we use respective variables si+, si-, so-, and so+. Whenever two
  // nodes of the inside contours conflict, we compute the left one of the
  // greatest uncommon ancestors using the function ANCESTOR and call MOVE
  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.
  // Finally, we add a new thread (if necessary).


  function apportion(v, w, ancestor) {
    if (w) {
      var vip = v,
          vop = v,
          vim = w,
          vom = vip.parent.children[0],
          sip = vip.m,
          sop = vop.m,
          sim = vim.m,
          som = vom.m,
          shift;

      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {
        vom = nextLeft(vom);
        vop = nextRight(vop);
        vop.a = v;
        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);

        if (shift > 0) {
          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);
          sip += shift;
          sop += shift;
        }

        sim += vim.m;
        sip += vip.m;
        som += vom.m;
        sop += vop.m;
      }

      if (vim && !nextRight(vop)) {
        vop.t = vim;
        vop.m += sim - sop;
      }

      if (vip && !nextLeft(vom)) {
        vom.t = vip;
        vom.m += sip - som;
        ancestor = v;
      }
    }

    return ancestor;
  }

  function sizeNode(node) {
    node.x *= dx;
    node.y = node.depth * dy;
  }

  tree.separation = function (x) {
    return arguments.length ? (separation = x, tree) : separation;
  };

  tree.size = function (x) {
    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : nodeSize ? null : [dx, dy];
  };

  tree.nodeSize = function (x) {
    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : nodeSize ? [dx, dy] : null;
  };

  return tree;
}
},{"./hierarchy/index.js":"xn1B"}],"XP76":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(parent, x0, y0, x1, y1) {
  var nodes = parent.children,
      node,
      i = -1,
      n = nodes.length,
      k = parent.value && (y1 - y0) / parent.value;

  while (++i < n) {
    node = nodes[i], node.x0 = x0, node.x1 = x1;
    node.y0 = y0, node.y1 = y0 += node.value * k;
  }
}
},{}],"sjir":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.squarifyRatio = squarifyRatio;
exports.default = exports.phi = void 0;

var _dice = _interopRequireDefault(require("./dice.js"));

var _slice = _interopRequireDefault(require("./slice.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var phi = (1 + Math.sqrt(5)) / 2;
exports.phi = phi;

function squarifyRatio(ratio, parent, x0, y0, x1, y1) {
  var rows = [],
      nodes = parent.children,
      row,
      nodeValue,
      i0 = 0,
      i1 = 0,
      n = nodes.length,
      dx,
      dy,
      value = parent.value,
      sumValue,
      minValue,
      maxValue,
      newRatio,
      minRatio,
      alpha,
      beta;

  while (i0 < n) {
    dx = x1 - x0, dy = y1 - y0; // Find the next non-empty node.

    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);

    minValue = maxValue = sumValue;
    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);
    beta = sumValue * sumValue * alpha;
    minRatio = Math.max(maxValue / beta, beta / minValue); // Keep adding nodes while the aspect ratio maintains or improves.

    for (; i1 < n; ++i1) {
      sumValue += nodeValue = nodes[i1].value;
      if (nodeValue < minValue) minValue = nodeValue;
      if (nodeValue > maxValue) maxValue = nodeValue;
      beta = sumValue * sumValue * alpha;
      newRatio = Math.max(maxValue / beta, beta / minValue);

      if (newRatio > minRatio) {
        sumValue -= nodeValue;
        break;
      }

      minRatio = newRatio;
    } // Position and record the row orientation.


    rows.push(row = {
      value: sumValue,
      dice: dx < dy,
      children: nodes.slice(i0, i1)
    });
    if (row.dice) (0, _dice.default)(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);else (0, _slice.default)(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);
    value -= sumValue, i0 = i1;
  }

  return rows;
}

var _default = function custom(ratio) {
  function squarify(parent, x0, y0, x1, y1) {
    squarifyRatio(ratio, parent, x0, y0, x1, y1);
  }

  squarify.ratio = function (x) {
    return custom((x = +x) > 1 ? x : 1);
  };

  return squarify;
}(phi);

exports.default = _default;
},{"./dice.js":"Z1AK","./slice.js":"XP76"}],"dRX5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _round = _interopRequireDefault(require("./round.js"));

var _squarify = _interopRequireDefault(require("./squarify.js"));

var _accessors = require("../accessors.js");

var _constant = _interopRequireWildcard(require("../constant.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var tile = _squarify.default,
      round = false,
      dx = 1,
      dy = 1,
      paddingStack = [0],
      paddingInner = _constant.constantZero,
      paddingTop = _constant.constantZero,
      paddingRight = _constant.constantZero,
      paddingBottom = _constant.constantZero,
      paddingLeft = _constant.constantZero;

  function treemap(root) {
    root.x0 = root.y0 = 0;
    root.x1 = dx;
    root.y1 = dy;
    root.eachBefore(positionNode);
    paddingStack = [0];
    if (round) root.eachBefore(_round.default);
    return root;
  }

  function positionNode(node) {
    var p = paddingStack[node.depth],
        x0 = node.x0 + p,
        y0 = node.y0 + p,
        x1 = node.x1 - p,
        y1 = node.y1 - p;
    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
    node.x0 = x0;
    node.y0 = y0;
    node.x1 = x1;
    node.y1 = y1;

    if (node.children) {
      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;
      x0 += paddingLeft(node) - p;
      y0 += paddingTop(node) - p;
      x1 -= paddingRight(node) - p;
      y1 -= paddingBottom(node) - p;
      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
      tile(node, x0, y0, x1, y1);
    }
  }

  treemap.round = function (x) {
    return arguments.length ? (round = !!x, treemap) : round;
  };

  treemap.size = function (x) {
    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];
  };

  treemap.tile = function (x) {
    return arguments.length ? (tile = (0, _accessors.required)(x), treemap) : tile;
  };

  treemap.padding = function (x) {
    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();
  };

  treemap.paddingInner = function (x) {
    return arguments.length ? (paddingInner = typeof x === "function" ? x : (0, _constant.default)(+x), treemap) : paddingInner;
  };

  treemap.paddingOuter = function (x) {
    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();
  };

  treemap.paddingTop = function (x) {
    return arguments.length ? (paddingTop = typeof x === "function" ? x : (0, _constant.default)(+x), treemap) : paddingTop;
  };

  treemap.paddingRight = function (x) {
    return arguments.length ? (paddingRight = typeof x === "function" ? x : (0, _constant.default)(+x), treemap) : paddingRight;
  };

  treemap.paddingBottom = function (x) {
    return arguments.length ? (paddingBottom = typeof x === "function" ? x : (0, _constant.default)(+x), treemap) : paddingBottom;
  };

  treemap.paddingLeft = function (x) {
    return arguments.length ? (paddingLeft = typeof x === "function" ? x : (0, _constant.default)(+x), treemap) : paddingLeft;
  };

  return treemap;
}
},{"./round.js":"kcDz","./squarify.js":"sjir","../accessors.js":"kxuB","../constant.js":"JuqG"}],"dNVH":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(parent, x0, y0, x1, y1) {
  var nodes = parent.children,
      i,
      n = nodes.length,
      sum,
      sums = new Array(n + 1);

  for (sums[0] = sum = i = 0; i < n; ++i) {
    sums[i + 1] = sum += nodes[i].value;
  }

  partition(0, n, parent.value, x0, y0, x1, y1);

  function partition(i, j, value, x0, y0, x1, y1) {
    if (i >= j - 1) {
      var node = nodes[i];
      node.x0 = x0, node.y0 = y0;
      node.x1 = x1, node.y1 = y1;
      return;
    }

    var valueOffset = sums[i],
        valueTarget = value / 2 + valueOffset,
        k = i + 1,
        hi = j - 1;

    while (k < hi) {
      var mid = k + hi >>> 1;
      if (sums[mid] < valueTarget) k = mid + 1;else hi = mid;
    }

    if (valueTarget - sums[k - 1] < sums[k] - valueTarget && i + 1 < k) --k;
    var valueLeft = sums[k] - valueOffset,
        valueRight = value - valueLeft;

    if (x1 - x0 > y1 - y0) {
      var xk = (x0 * valueRight + x1 * valueLeft) / value;
      partition(i, k, valueLeft, x0, y0, xk, y1);
      partition(k, j, valueRight, xk, y0, x1, y1);
    } else {
      var yk = (y0 * valueRight + y1 * valueLeft) / value;
      partition(i, k, valueLeft, x0, y0, x1, yk);
      partition(k, j, valueRight, x0, yk, x1, y1);
    }
  }
}
},{}],"rOuR":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _dice = _interopRequireDefault(require("./dice.js"));

var _slice = _interopRequireDefault(require("./slice.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(parent, x0, y0, x1, y1) {
  (parent.depth & 1 ? _slice.default : _dice.default)(parent, x0, y0, x1, y1);
}
},{"./dice.js":"Z1AK","./slice.js":"XP76"}],"XhZ5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _dice = _interopRequireDefault(require("./dice.js"));

var _slice = _interopRequireDefault(require("./slice.js"));

var _squarify = require("./squarify.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function custom(ratio) {
  function resquarify(parent, x0, y0, x1, y1) {
    if ((rows = parent._squarify) && rows.ratio === ratio) {
      var rows,
          row,
          nodes,
          i,
          j = -1,
          n,
          m = rows.length,
          value = parent.value;

      while (++j < m) {
        row = rows[j], nodes = row.children;

        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;

        if (row.dice) (0, _dice.default)(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);else (0, _slice.default)(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);
        value -= row.value;
      }
    } else {
      parent._squarify = rows = (0, _squarify.squarifyRatio)(ratio, parent, x0, y0, x1, y1);
      rows.ratio = ratio;
    }
  }

  resquarify.ratio = function (x) {
    return custom((x = +x) > 1 ? x : 1);
  };

  return resquarify;
}(_squarify.phi);

exports.default = _default;
},{"./dice.js":"Z1AK","./slice.js":"XP76","./squarify.js":"sjir"}],"Kps6":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "cluster", {
  enumerable: true,
  get: function () {
    return _cluster.default;
  }
});
Object.defineProperty(exports, "hierarchy", {
  enumerable: true,
  get: function () {
    return _index.default;
  }
});
Object.defineProperty(exports, "pack", {
  enumerable: true,
  get: function () {
    return _index2.default;
  }
});
Object.defineProperty(exports, "packSiblings", {
  enumerable: true,
  get: function () {
    return _siblings.default;
  }
});
Object.defineProperty(exports, "packEnclose", {
  enumerable: true,
  get: function () {
    return _enclose.default;
  }
});
Object.defineProperty(exports, "partition", {
  enumerable: true,
  get: function () {
    return _partition.default;
  }
});
Object.defineProperty(exports, "stratify", {
  enumerable: true,
  get: function () {
    return _stratify.default;
  }
});
Object.defineProperty(exports, "tree", {
  enumerable: true,
  get: function () {
    return _tree.default;
  }
});
Object.defineProperty(exports, "treemap", {
  enumerable: true,
  get: function () {
    return _index3.default;
  }
});
Object.defineProperty(exports, "treemapBinary", {
  enumerable: true,
  get: function () {
    return _binary.default;
  }
});
Object.defineProperty(exports, "treemapDice", {
  enumerable: true,
  get: function () {
    return _dice.default;
  }
});
Object.defineProperty(exports, "treemapSlice", {
  enumerable: true,
  get: function () {
    return _slice.default;
  }
});
Object.defineProperty(exports, "treemapSliceDice", {
  enumerable: true,
  get: function () {
    return _sliceDice.default;
  }
});
Object.defineProperty(exports, "treemapSquarify", {
  enumerable: true,
  get: function () {
    return _squarify.default;
  }
});
Object.defineProperty(exports, "treemapResquarify", {
  enumerable: true,
  get: function () {
    return _resquarify.default;
  }
});

var _cluster = _interopRequireDefault(require("./cluster.js"));

var _index = _interopRequireDefault(require("./hierarchy/index.js"));

var _index2 = _interopRequireDefault(require("./pack/index.js"));

var _siblings = _interopRequireDefault(require("./pack/siblings.js"));

var _enclose = _interopRequireDefault(require("./pack/enclose.js"));

var _partition = _interopRequireDefault(require("./partition.js"));

var _stratify = _interopRequireDefault(require("./stratify.js"));

var _tree = _interopRequireDefault(require("./tree.js"));

var _index3 = _interopRequireDefault(require("./treemap/index.js"));

var _binary = _interopRequireDefault(require("./treemap/binary.js"));

var _dice = _interopRequireDefault(require("./treemap/dice.js"));

var _slice = _interopRequireDefault(require("./treemap/slice.js"));

var _sliceDice = _interopRequireDefault(require("./treemap/sliceDice.js"));

var _squarify = _interopRequireDefault(require("./treemap/squarify.js"));

var _resquarify = _interopRequireDefault(require("./treemap/resquarify.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./cluster.js":"JRxK","./hierarchy/index.js":"xn1B","./pack/index.js":"fIYd","./pack/siblings.js":"ObEg","./pack/enclose.js":"H7R8","./partition.js":"ekbw","./stratify.js":"fM3r","./tree.js":"xQqP","./treemap/index.js":"dRX5","./treemap/binary.js":"dNVH","./treemap/dice.js":"Z1AK","./treemap/slice.js":"XP76","./treemap/sliceDice.js":"rOuR","./treemap/squarify.js":"sjir","./treemap/resquarify.js":"XhZ5"}],"lAFu":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(polygon) {
  var i = -1,
      n = polygon.length,
      a,
      b = polygon[n - 1],
      area = 0;

  while (++i < n) {
    a = b;
    b = polygon[i];
    area += a[1] * b[0] - a[0] * b[1];
  }

  return area / 2;
}
},{}],"CP3F":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(polygon) {
  var i = -1,
      n = polygon.length,
      x = 0,
      y = 0,
      a,
      b = polygon[n - 1],
      c,
      k = 0;

  while (++i < n) {
    a = b;
    b = polygon[i];
    k += c = a[0] * b[1] - b[0] * a[1];
    x += (a[0] + b[0]) * c;
    y += (a[1] + b[1]) * c;
  }

  return k *= 3, [x / k, y / k];
}
},{}],"zVqT":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of
// the 3D cross product in a quadrant I Cartesian coordinate system (+x is
// right, +y is up). Returns a positive value if ABC is counter-clockwise,
// negative if clockwise, and zero if the points are collinear.
function _default(a, b, c) {
  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);
}
},{}],"Q16x":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _cross = _interopRequireDefault(require("./cross.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function lexicographicOrder(a, b) {
  return a[0] - b[0] || a[1] - b[1];
} // Computes the upper convex hull per the monotone chain algorithm.
// Assumes points.length >= 3, is sorted by x, unique in y.
// Returns an array of indices into points in left-to-right order.


function computeUpperHullIndexes(points) {
  var n = points.length,
      indexes = [0, 1],
      size = 2;

  for (var i = 2; i < n; ++i) {
    while (size > 1 && (0, _cross.default)(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;

    indexes[size++] = i;
  }

  return indexes.slice(0, size); // remove popped points
}

function _default(points) {
  if ((n = points.length) < 3) return null;
  var i,
      n,
      sortedPoints = new Array(n),
      flippedPoints = new Array(n);

  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];

  sortedPoints.sort(lexicographicOrder);

  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];

  var upperIndexes = computeUpperHullIndexes(sortedPoints),
      lowerIndexes = computeUpperHullIndexes(flippedPoints); // Construct the hull polygon, removing possible duplicate endpoints.

  var skipLeft = lowerIndexes[0] === upperIndexes[0],
      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],
      hull = []; // Add upper hull in right-to-l order.
  // Then add lower hull in left-to-right order.

  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);

  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);

  return hull;
}
},{"./cross.js":"zVqT"}],"tuiT":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(polygon, point) {
  var n = polygon.length,
      p = polygon[n - 1],
      x = point[0],
      y = point[1],
      x0 = p[0],
      y0 = p[1],
      x1,
      y1,
      inside = false;

  for (var i = 0; i < n; ++i) {
    p = polygon[i], x1 = p[0], y1 = p[1];
    if (y1 > y !== y0 > y && x < (x0 - x1) * (y - y1) / (y0 - y1) + x1) inside = !inside;
    x0 = x1, y0 = y1;
  }

  return inside;
}
},{}],"AReD":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(polygon) {
  var i = -1,
      n = polygon.length,
      b = polygon[n - 1],
      xa,
      ya,
      xb = b[0],
      yb = b[1],
      perimeter = 0;

  while (++i < n) {
    xa = xb;
    ya = yb;
    b = polygon[i];
    xb = b[0];
    yb = b[1];
    xa -= xb;
    ya -= yb;
    perimeter += Math.sqrt(xa * xa + ya * ya);
  }

  return perimeter;
}
},{}],"H15P":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "polygonArea", {
  enumerable: true,
  get: function () {
    return _area.default;
  }
});
Object.defineProperty(exports, "polygonCentroid", {
  enumerable: true,
  get: function () {
    return _centroid.default;
  }
});
Object.defineProperty(exports, "polygonHull", {
  enumerable: true,
  get: function () {
    return _hull.default;
  }
});
Object.defineProperty(exports, "polygonContains", {
  enumerable: true,
  get: function () {
    return _contains.default;
  }
});
Object.defineProperty(exports, "polygonLength", {
  enumerable: true,
  get: function () {
    return _length.default;
  }
});

var _area = _interopRequireDefault(require("./area.js"));

var _centroid = _interopRequireDefault(require("./centroid.js"));

var _hull = _interopRequireDefault(require("./hull.js"));

var _contains = _interopRequireDefault(require("./contains.js"));

var _length = _interopRequireDefault(require("./length.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./area.js":"lAFu","./centroid.js":"CP3F","./hull.js":"Q16x","./contains.js":"tuiT","./length.js":"AReD"}],"m3Qw":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  return Math.random();
}
},{}],"j5my":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomUniform(source) {
  function randomUniform(min, max) {
    min = min == null ? 0 : +min;
    max = max == null ? 1 : +max;
    if (arguments.length === 1) max = min, min = 0;else max -= min;
    return function () {
      return source() * max + min;
    };
  }

  randomUniform.source = sourceRandomUniform;
  return randomUniform;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource":"m3Qw"}],"rHsL":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomNormal(source) {
  function randomNormal(mu, sigma) {
    var x, r;
    mu = mu == null ? 0 : +mu;
    sigma = sigma == null ? 1 : +sigma;
    return function () {
      var y; // If available, use the second previously-generated uniform random.

      if (x != null) y = x, x = null; // Otherwise, generate a new x and y.
      else do {
          x = source() * 2 - 1;
          y = source() * 2 - 1;
          r = x * x + y * y;
        } while (!r || r > 1);
      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);
    };
  }

  randomNormal.source = sourceRandomNormal;
  return randomNormal;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource":"m3Qw"}],"egwl":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource"));

var _normal = _interopRequireDefault(require("./normal"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomLogNormal(source) {
  function randomLogNormal() {
    var randomNormal = _normal.default.source(source).apply(this, arguments);

    return function () {
      return Math.exp(randomNormal());
    };
  }

  randomLogNormal.source = sourceRandomLogNormal;
  return randomLogNormal;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource":"m3Qw","./normal":"rHsL"}],"xpLv":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomIrwinHall(source) {
  function randomIrwinHall(n) {
    return function () {
      for (var sum = 0, i = 0; i < n; ++i) sum += source();

      return sum;
    };
  }

  randomIrwinHall.source = sourceRandomIrwinHall;
  return randomIrwinHall;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource":"m3Qw"}],"th5P":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource"));

var _irwinHall = _interopRequireDefault(require("./irwinHall"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomBates(source) {
  function randomBates(n) {
    var randomIrwinHall = _irwinHall.default.source(source)(n);

    return function () {
      return randomIrwinHall() / n;
    };
  }

  randomBates.source = sourceRandomBates;
  return randomBates;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource":"m3Qw","./irwinHall":"xpLv"}],"r4q1":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomExponential(source) {
  function randomExponential(lambda) {
    return function () {
      return -Math.log(1 - source()) / lambda;
    };
  }

  randomExponential.source = sourceRandomExponential;
  return randomExponential;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource":"m3Qw"}],"Gz2j":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "randomUniform", {
  enumerable: true,
  get: function () {
    return _uniform.default;
  }
});
Object.defineProperty(exports, "randomNormal", {
  enumerable: true,
  get: function () {
    return _normal.default;
  }
});
Object.defineProperty(exports, "randomLogNormal", {
  enumerable: true,
  get: function () {
    return _logNormal.default;
  }
});
Object.defineProperty(exports, "randomBates", {
  enumerable: true,
  get: function () {
    return _bates.default;
  }
});
Object.defineProperty(exports, "randomIrwinHall", {
  enumerable: true,
  get: function () {
    return _irwinHall.default;
  }
});
Object.defineProperty(exports, "randomExponential", {
  enumerable: true,
  get: function () {
    return _exponential.default;
  }
});

var _uniform = _interopRequireDefault(require("./uniform"));

var _normal = _interopRequireDefault(require("./normal"));

var _logNormal = _interopRequireDefault(require("./logNormal"));

var _bates = _interopRequireDefault(require("./bates"));

var _irwinHall = _interopRequireDefault(require("./irwinHall"));

var _exponential = _interopRequireDefault(require("./exponential"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./uniform":"j5my","./normal":"rHsL","./logNormal":"egwl","./bates":"th5P","./irwinHall":"xpLv","./exponential":"r4q1"}],"buZa":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initRange = initRange;
exports.initInterpolator = initInterpolator;

function initRange(domain, range) {
  switch (arguments.length) {
    case 0:
      break;

    case 1:
      this.range(domain);
      break;

    default:
      this.range(range).domain(domain);
      break;
  }

  return this;
}

function initInterpolator(domain, interpolator) {
  switch (arguments.length) {
    case 0:
      break;

    case 1:
      this.interpolator(domain);
      break;

    default:
      this.interpolator(interpolator).domain(domain);
      break;
  }

  return this;
}
},{}],"qoMs":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.slice = exports.map = void 0;
var array = Array.prototype;
var map = array.map;
exports.map = map;
var slice = array.slice;
exports.slice = slice;
},{}],"GjLX":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ordinal;
exports.implicit = void 0;

var _d3Collection = require("d3-collection");

var _array = require("./array");

var _init = require("./init");

var implicit = {
  name: "implicit"
};
exports.implicit = implicit;

function ordinal() {
  var index = (0, _d3Collection.map)(),
      domain = [],
      range = [],
      unknown = implicit;

  function scale(d) {
    var key = d + "",
        i = index.get(key);

    if (!i) {
      if (unknown !== implicit) return unknown;
      index.set(key, i = domain.push(d));
    }

    return range[(i - 1) % range.length];
  }

  scale.domain = function (_) {
    if (!arguments.length) return domain.slice();
    domain = [], index = (0, _d3Collection.map)();
    var i = -1,
        n = _.length,
        d,
        key;

    while (++i < n) if (!index.has(key = (d = _[i]) + "")) index.set(key, domain.push(d));

    return scale;
  };

  scale.range = function (_) {
    return arguments.length ? (range = _array.slice.call(_), scale) : range.slice();
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function () {
    return ordinal(domain, range).unknown(unknown);
  };

  _init.initRange.apply(scale, arguments);

  return scale;
}
},{"d3-collection":"S3hn","./array":"qoMs","./init":"buZa"}],"BAgl":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = band;
exports.point = point;

var _d3Array = require("d3-array");

var _init = require("./init");

var _ordinal = _interopRequireDefault(require("./ordinal"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function band() {
  var scale = (0, _ordinal.default)().unknown(undefined),
      domain = scale.domain,
      ordinalRange = scale.range,
      range = [0, 1],
      step,
      bandwidth,
      round = false,
      paddingInner = 0,
      paddingOuter = 0,
      align = 0.5;
  delete scale.unknown;

  function rescale() {
    var n = domain().length,
        reverse = range[1] < range[0],
        start = range[reverse - 0],
        stop = range[1 - reverse];
    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);
    if (round) step = Math.floor(step);
    start += (stop - start - step * (n - paddingInner)) * align;
    bandwidth = step * (1 - paddingInner);
    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);
    var values = (0, _d3Array.range)(n).map(function (i) {
      return start + step * i;
    });
    return ordinalRange(reverse ? values.reverse() : values);
  }

  scale.domain = function (_) {
    return arguments.length ? (domain(_), rescale()) : domain();
  };

  scale.range = function (_) {
    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();
  };

  scale.rangeRound = function (_) {
    return range = [+_[0], +_[1]], round = true, rescale();
  };

  scale.bandwidth = function () {
    return bandwidth;
  };

  scale.step = function () {
    return step;
  };

  scale.round = function (_) {
    return arguments.length ? (round = !!_, rescale()) : round;
  };

  scale.padding = function (_) {
    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;
  };

  scale.paddingInner = function (_) {
    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;
  };

  scale.paddingOuter = function (_) {
    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;
  };

  scale.align = function (_) {
    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;
  };

  scale.copy = function () {
    return band(domain(), range).round(round).paddingInner(paddingInner).paddingOuter(paddingOuter).align(align);
  };

  return _init.initRange.apply(rescale(), arguments);
}

function pointish(scale) {
  var copy = scale.copy;
  scale.padding = scale.paddingOuter;
  delete scale.paddingInner;
  delete scale.paddingOuter;

  scale.copy = function () {
    return pointish(copy());
  };

  return scale;
}

function point() {
  return pointish(band.apply(null, arguments).paddingInner(1));
}
},{"d3-array":"K0bd","./init":"buZa","./ordinal":"GjLX"}],"FNaI":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return +x;
}
},{}],"CjJ5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.identity = identity;
exports.copy = copy;
exports.transformer = transformer;
exports.default = continuous;

var _d3Array = require("d3-array");

var _d3Interpolate = require("d3-interpolate");

var _array = require("./array");

var _constant = _interopRequireDefault(require("./constant"));

var _number = _interopRequireDefault(require("./number"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var unit = [0, 1];

function identity(x) {
  return x;
}

function normalize(a, b) {
  return (b -= a = +a) ? function (x) {
    return (x - a) / b;
  } : (0, _constant.default)(isNaN(b) ? NaN : 0.5);
}

function clamper(domain) {
  var a = domain[0],
      b = domain[domain.length - 1],
      t;
  if (a > b) t = a, a = b, b = t;
  return function (x) {
    return Math.max(a, Math.min(b, x));
  };
} // normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].
// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].


function bimap(domain, range, interpolate) {
  var d0 = domain[0],
      d1 = domain[1],
      r0 = range[0],
      r1 = range[1];
  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);
  return function (x) {
    return r0(d0(x));
  };
}

function polymap(domain, range, interpolate) {
  var j = Math.min(domain.length, range.length) - 1,
      d = new Array(j),
      r = new Array(j),
      i = -1; // Reverse descending domains.

  if (domain[j] < domain[0]) {
    domain = domain.slice().reverse();
    range = range.slice().reverse();
  }

  while (++i < j) {
    d[i] = normalize(domain[i], domain[i + 1]);
    r[i] = interpolate(range[i], range[i + 1]);
  }

  return function (x) {
    var i = (0, _d3Array.bisect)(domain, x, 1, j) - 1;
    return r[i](d[i](x));
  };
}

function copy(source, target) {
  return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp()).unknown(source.unknown());
}

function transformer() {
  var domain = unit,
      range = unit,
      interpolate = _d3Interpolate.interpolate,
      transform,
      untransform,
      unknown,
      clamp = identity,
      piecewise,
      output,
      input;

  function rescale() {
    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;
    output = input = null;
    return scale;
  }

  function scale(x) {
    return isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));
  }

  scale.invert = function (y) {
    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), _d3Interpolate.interpolateNumber)))(y)));
  };

  scale.domain = function (_) {
    return arguments.length ? (domain = _array.map.call(_, _number.default), clamp === identity || (clamp = clamper(domain)), rescale()) : domain.slice();
  };

  scale.range = function (_) {
    return arguments.length ? (range = _array.slice.call(_), rescale()) : range.slice();
  };

  scale.rangeRound = function (_) {
    return range = _array.slice.call(_), interpolate = _d3Interpolate.interpolateRound, rescale();
  };

  scale.clamp = function (_) {
    return arguments.length ? (clamp = _ ? clamper(domain) : identity, scale) : clamp !== identity;
  };

  scale.interpolate = function (_) {
    return arguments.length ? (interpolate = _, rescale()) : interpolate;
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  return function (t, u) {
    transform = t, untransform = u;
    return rescale();
  };
}

function continuous(transform, untransform) {
  return transformer()(transform, untransform);
}
},{"d3-array":"K0bd","d3-interpolate":"k9aH","./array":"qoMs","./constant":"aCvo","./number":"FNaI"}],"qjRa":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Array = require("d3-array");

var _d3Format = require("d3-format");

function _default(start, stop, count, specifier) {
  var step = (0, _d3Array.tickStep)(start, stop, count),
      precision;
  specifier = (0, _d3Format.formatSpecifier)(specifier == null ? ",f" : specifier);

  switch (specifier.type) {
    case "s":
      {
        var value = Math.max(Math.abs(start), Math.abs(stop));
        if (specifier.precision == null && !isNaN(precision = (0, _d3Format.precisionPrefix)(step, value))) specifier.precision = precision;
        return (0, _d3Format.formatPrefix)(specifier, value);
      }

    case "":
    case "e":
    case "g":
    case "p":
    case "r":
      {
        if (specifier.precision == null && !isNaN(precision = (0, _d3Format.precisionRound)(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === "e");
        break;
      }

    case "f":
    case "%":
      {
        if (specifier.precision == null && !isNaN(precision = (0, _d3Format.precisionFixed)(step))) specifier.precision = precision - (specifier.type === "%") * 2;
        break;
      }
  }

  return (0, _d3Format.format)(specifier);
}
},{"d3-array":"K0bd","d3-format":"VuZR"}],"LIJk":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.linearish = linearish;
exports.default = linear;

var _d3Array = require("d3-array");

var _continuous = _interopRequireWildcard(require("./continuous"));

var _init = require("./init");

var _tickFormat = _interopRequireDefault(require("./tickFormat"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function linearish(scale) {
  var domain = scale.domain;

  scale.ticks = function (count) {
    var d = domain();
    return (0, _d3Array.ticks)(d[0], d[d.length - 1], count == null ? 10 : count);
  };

  scale.tickFormat = function (count, specifier) {
    var d = domain();
    return (0, _tickFormat.default)(d[0], d[d.length - 1], count == null ? 10 : count, specifier);
  };

  scale.nice = function (count) {
    if (count == null) count = 10;
    var d = domain(),
        i0 = 0,
        i1 = d.length - 1,
        start = d[i0],
        stop = d[i1],
        step;

    if (stop < start) {
      step = start, start = stop, stop = step;
      step = i0, i0 = i1, i1 = step;
    }

    step = (0, _d3Array.tickIncrement)(start, stop, count);

    if (step > 0) {
      start = Math.floor(start / step) * step;
      stop = Math.ceil(stop / step) * step;
      step = (0, _d3Array.tickIncrement)(start, stop, count);
    } else if (step < 0) {
      start = Math.ceil(start * step) / step;
      stop = Math.floor(stop * step) / step;
      step = (0, _d3Array.tickIncrement)(start, stop, count);
    }

    if (step > 0) {
      d[i0] = Math.floor(start / step) * step;
      d[i1] = Math.ceil(stop / step) * step;
      domain(d);
    } else if (step < 0) {
      d[i0] = Math.ceil(start * step) / step;
      d[i1] = Math.floor(stop * step) / step;
      domain(d);
    }

    return scale;
  };

  return scale;
}

function linear() {
  var scale = (0, _continuous.default)(_continuous.identity, _continuous.identity);

  scale.copy = function () {
    return (0, _continuous.copy)(scale, linear());
  };

  _init.initRange.apply(scale, arguments);

  return linearish(scale);
}
},{"d3-array":"K0bd","./continuous":"CjJ5","./init":"buZa","./tickFormat":"qjRa"}],"FKHe":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = identity;

var _array = require("./array");

var _linear = require("./linear");

var _number = _interopRequireDefault(require("./number"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function identity(domain) {
  var unknown;

  function scale(x) {
    return isNaN(x = +x) ? unknown : x;
  }

  scale.invert = scale;

  scale.domain = scale.range = function (_) {
    return arguments.length ? (domain = _array.map.call(_, _number.default), scale) : domain.slice();
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function () {
    return identity(domain).unknown(unknown);
  };

  domain = arguments.length ? _array.map.call(domain, _number.default) : [0, 1];
  return (0, _linear.linearish)(scale);
}
},{"./array":"qoMs","./linear":"LIJk","./number":"FNaI"}],"eMTM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(domain, interval) {
  domain = domain.slice();
  var i0 = 0,
      i1 = domain.length - 1,
      x0 = domain[i0],
      x1 = domain[i1],
      t;

  if (x1 < x0) {
    t = i0, i0 = i1, i1 = t;
    t = x0, x0 = x1, x1 = t;
  }

  domain[i0] = interval.floor(x0);
  domain[i1] = interval.ceil(x1);
  return domain;
}
},{}],"ea59":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.loggish = loggish;
exports.default = log;

var _d3Array = require("d3-array");

var _d3Format = require("d3-format");

var _nice = _interopRequireDefault(require("./nice"));

var _continuous = require("./continuous");

var _init = require("./init");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function transformLog(x) {
  return Math.log(x);
}

function transformExp(x) {
  return Math.exp(x);
}

function transformLogn(x) {
  return -Math.log(-x);
}

function transformExpn(x) {
  return -Math.exp(-x);
}

function pow10(x) {
  return isFinite(x) ? +("1e" + x) : x < 0 ? 0 : x;
}

function powp(base) {
  return base === 10 ? pow10 : base === Math.E ? Math.exp : function (x) {
    return Math.pow(base, x);
  };
}

function logp(base) {
  return base === Math.E ? Math.log : base === 10 && Math.log10 || base === 2 && Math.log2 || (base = Math.log(base), function (x) {
    return Math.log(x) / base;
  });
}

function reflect(f) {
  return function (x) {
    return -f(-x);
  };
}

function loggish(transform) {
  var scale = transform(transformLog, transformExp),
      domain = scale.domain,
      base = 10,
      logs,
      pows;

  function rescale() {
    logs = logp(base), pows = powp(base);

    if (domain()[0] < 0) {
      logs = reflect(logs), pows = reflect(pows);
      transform(transformLogn, transformExpn);
    } else {
      transform(transformLog, transformExp);
    }

    return scale;
  }

  scale.base = function (_) {
    return arguments.length ? (base = +_, rescale()) : base;
  };

  scale.domain = function (_) {
    return arguments.length ? (domain(_), rescale()) : domain();
  };

  scale.ticks = function (count) {
    var d = domain(),
        u = d[0],
        v = d[d.length - 1],
        r;
    if (r = v < u) i = u, u = v, v = i;
    var i = logs(u),
        j = logs(v),
        p,
        k,
        t,
        n = count == null ? 10 : +count,
        z = [];

    if (!(base % 1) && j - i < n) {
      i = Math.round(i) - 1, j = Math.round(j) + 1;
      if (u > 0) for (; i < j; ++i) {
        for (k = 1, p = pows(i); k < base; ++k) {
          t = p * k;
          if (t < u) continue;
          if (t > v) break;
          z.push(t);
        }
      } else for (; i < j; ++i) {
        for (k = base - 1, p = pows(i); k >= 1; --k) {
          t = p * k;
          if (t < u) continue;
          if (t > v) break;
          z.push(t);
        }
      }
    } else {
      z = (0, _d3Array.ticks)(i, j, Math.min(j - i, n)).map(pows);
    }

    return r ? z.reverse() : z;
  };

  scale.tickFormat = function (count, specifier) {
    if (specifier == null) specifier = base === 10 ? ".0e" : ",";
    if (typeof specifier !== "function") specifier = (0, _d3Format.format)(specifier);
    if (count === Infinity) return specifier;
    if (count == null) count = 10;
    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?

    return function (d) {
      var i = d / pows(Math.round(logs(d)));
      if (i * base < base - 0.5) i *= base;
      return i <= k ? specifier(d) : "";
    };
  };

  scale.nice = function () {
    return domain((0, _nice.default)(domain(), {
      floor: function (x) {
        return pows(Math.floor(logs(x)));
      },
      ceil: function (x) {
        return pows(Math.ceil(logs(x)));
      }
    }));
  };

  return scale;
}

function log() {
  var scale = loggish((0, _continuous.transformer)()).domain([1, 10]);

  scale.copy = function () {
    return (0, _continuous.copy)(scale, log()).base(scale.base());
  };

  _init.initRange.apply(scale, arguments);

  return scale;
}
},{"d3-array":"K0bd","d3-format":"VuZR","./nice":"eMTM","./continuous":"CjJ5","./init":"buZa"}],"nanU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.symlogish = symlogish;
exports.default = symlog;

var _linear = require("./linear");

var _continuous = require("./continuous");

var _init = require("./init");

function transformSymlog(c) {
  return function (x) {
    return Math.sign(x) * Math.log1p(Math.abs(x / c));
  };
}

function transformSymexp(c) {
  return function (x) {
    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;
  };
}

function symlogish(transform) {
  var c = 1,
      scale = transform(transformSymlog(c), transformSymexp(c));

  scale.constant = function (_) {
    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;
  };

  return (0, _linear.linearish)(scale);
}

function symlog() {
  var scale = symlogish((0, _continuous.transformer)());

  scale.copy = function () {
    return (0, _continuous.copy)(scale, symlog()).constant(scale.constant());
  };

  return _init.initRange.apply(scale, arguments);
}
},{"./linear":"LIJk","./continuous":"CjJ5","./init":"buZa"}],"xeRN":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.powish = powish;
exports.default = pow;
exports.sqrt = sqrt;

var _linear = require("./linear");

var _continuous = require("./continuous");

var _init = require("./init");

function transformPow(exponent) {
  return function (x) {
    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);
  };
}

function transformSqrt(x) {
  return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);
}

function transformSquare(x) {
  return x < 0 ? -x * x : x * x;
}

function powish(transform) {
  var scale = transform(_continuous.identity, _continuous.identity),
      exponent = 1;

  function rescale() {
    return exponent === 1 ? transform(_continuous.identity, _continuous.identity) : exponent === 0.5 ? transform(transformSqrt, transformSquare) : transform(transformPow(exponent), transformPow(1 / exponent));
  }

  scale.exponent = function (_) {
    return arguments.length ? (exponent = +_, rescale()) : exponent;
  };

  return (0, _linear.linearish)(scale);
}

function pow() {
  var scale = powish((0, _continuous.transformer)());

  scale.copy = function () {
    return (0, _continuous.copy)(scale, pow()).exponent(scale.exponent());
  };

  _init.initRange.apply(scale, arguments);

  return scale;
}

function sqrt() {
  return pow.apply(null, arguments).exponent(0.5);
}
},{"./linear":"LIJk","./continuous":"CjJ5","./init":"buZa"}],"AGCd":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = quantile;

var _d3Array = require("d3-array");

var _array = require("./array");

var _init = require("./init");

function quantile() {
  var domain = [],
      range = [],
      thresholds = [],
      unknown;

  function rescale() {
    var i = 0,
        n = Math.max(1, range.length);
    thresholds = new Array(n - 1);

    while (++i < n) thresholds[i - 1] = (0, _d3Array.quantile)(domain, i / n);

    return scale;
  }

  function scale(x) {
    return isNaN(x = +x) ? unknown : range[(0, _d3Array.bisect)(thresholds, x)];
  }

  scale.invertExtent = function (y) {
    var i = range.indexOf(y);
    return i < 0 ? [NaN, NaN] : [i > 0 ? thresholds[i - 1] : domain[0], i < thresholds.length ? thresholds[i] : domain[domain.length - 1]];
  };

  scale.domain = function (_) {
    if (!arguments.length) return domain.slice();
    domain = [];

    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);

    domain.sort(_d3Array.ascending);
    return rescale();
  };

  scale.range = function (_) {
    return arguments.length ? (range = _array.slice.call(_), rescale()) : range.slice();
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.quantiles = function () {
    return thresholds.slice();
  };

  scale.copy = function () {
    return quantile().domain(domain).range(range).unknown(unknown);
  };

  return _init.initRange.apply(scale, arguments);
}
},{"d3-array":"K0bd","./array":"qoMs","./init":"buZa"}],"d6Xk":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = quantize;

var _d3Array = require("d3-array");

var _array = require("./array");

var _linear = require("./linear");

var _init = require("./init");

function quantize() {
  var x0 = 0,
      x1 = 1,
      n = 1,
      domain = [0.5],
      range = [0, 1],
      unknown;

  function scale(x) {
    return x <= x ? range[(0, _d3Array.bisect)(domain, x, 0, n)] : unknown;
  }

  function rescale() {
    var i = -1;
    domain = new Array(n);

    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);

    return scale;
  }

  scale.domain = function (_) {
    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];
  };

  scale.range = function (_) {
    return arguments.length ? (n = (range = _array.slice.call(_)).length - 1, rescale()) : range.slice();
  };

  scale.invertExtent = function (y) {
    var i = range.indexOf(y);
    return i < 0 ? [NaN, NaN] : i < 1 ? [x0, domain[0]] : i >= n ? [domain[n - 1], x1] : [domain[i - 1], domain[i]];
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : scale;
  };

  scale.thresholds = function () {
    return domain.slice();
  };

  scale.copy = function () {
    return quantize().domain([x0, x1]).range(range).unknown(unknown);
  };

  return _init.initRange.apply((0, _linear.linearish)(scale), arguments);
}
},{"d3-array":"K0bd","./array":"qoMs","./linear":"LIJk","./init":"buZa"}],"I63C":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = threshold;

var _d3Array = require("d3-array");

var _array = require("./array");

var _init = require("./init");

function threshold() {
  var domain = [0.5],
      range = [0, 1],
      unknown,
      n = 1;

  function scale(x) {
    return x <= x ? range[(0, _d3Array.bisect)(domain, x, 0, n)] : unknown;
  }

  scale.domain = function (_) {
    return arguments.length ? (domain = _array.slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();
  };

  scale.range = function (_) {
    return arguments.length ? (range = _array.slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();
  };

  scale.invertExtent = function (y) {
    var i = range.indexOf(y);
    return [domain[i - 1], domain[i]];
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function () {
    return threshold().domain(domain).range(range).unknown(unknown);
  };

  return _init.initRange.apply(scale, arguments);
}
},{"d3-array":"K0bd","./array":"qoMs","./init":"buZa"}],"QFUQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = newInterval;
var t0 = new Date(),
    t1 = new Date();

function newInterval(floori, offseti, count, field) {
  function interval(date) {
    return floori(date = arguments.length === 0 ? new Date() : new Date(+date)), date;
  }

  interval.floor = function (date) {
    return floori(date = new Date(+date)), date;
  };

  interval.ceil = function (date) {
    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;
  };

  interval.round = function (date) {
    var d0 = interval(date),
        d1 = interval.ceil(date);
    return date - d0 < d1 - date ? d0 : d1;
  };

  interval.offset = function (date, step) {
    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;
  };

  interval.range = function (start, stop, step) {
    var range = [],
        previous;
    start = interval.ceil(start);
    step = step == null ? 1 : Math.floor(step);
    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date

    do range.push(previous = new Date(+start)), offseti(start, step), floori(start); while (previous < start && start < stop);

    return range;
  };

  interval.filter = function (test) {
    return newInterval(function (date) {
      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);
    }, function (date, step) {
      if (date >= date) {
        if (step < 0) while (++step <= 0) {
          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty

        } else while (--step >= 0) {
          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty

        }
      }
    });
  };

  if (count) {
    interval.count = function (start, end) {
      t0.setTime(+start), t1.setTime(+end);
      floori(t0), floori(t1);
      return Math.floor(count(t0, t1));
    };

    interval.every = function (step) {
      step = Math.floor(step);
      return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? function (d) {
        return field(d) % step === 0;
      } : function (d) {
        return interval.count(0, d) % step === 0;
      });
    };
  }

  return interval;
}
},{}],"WVmH":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.milliseconds = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var millisecond = (0, _interval.default)(function () {// noop
}, function (date, step) {
  date.setTime(+date + step);
}, function (start, end) {
  return end - start;
}); // An optimized implementation for this simple case.

millisecond.every = function (k) {
  k = Math.floor(k);
  if (!isFinite(k) || !(k > 0)) return null;
  if (!(k > 1)) return millisecond;
  return (0, _interval.default)(function (date) {
    date.setTime(Math.floor(date / k) * k);
  }, function (date, step) {
    date.setTime(+date + step * k);
  }, function (start, end) {
    return (end - start) / k;
  });
};

var _default = millisecond;
exports.default = _default;
var milliseconds = millisecond.range;
exports.milliseconds = milliseconds;
},{"./interval.js":"QFUQ"}],"Vnta":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.durationWeek = exports.durationDay = exports.durationHour = exports.durationMinute = exports.durationSecond = void 0;
var durationSecond = 1e3;
exports.durationSecond = durationSecond;
var durationMinute = 6e4;
exports.durationMinute = durationMinute;
var durationHour = 36e5;
exports.durationHour = durationHour;
var durationDay = 864e5;
exports.durationDay = durationDay;
var durationWeek = 6048e5;
exports.durationWeek = durationWeek;
},{}],"AYLw":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.seconds = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var second = (0, _interval.default)(function (date) {
  date.setTime(date - date.getMilliseconds());
}, function (date, step) {
  date.setTime(+date + step * _duration.durationSecond);
}, function (start, end) {
  return (end - start) / _duration.durationSecond;
}, function (date) {
  return date.getUTCSeconds();
});
var _default = second;
exports.default = _default;
var seconds = second.range;
exports.seconds = seconds;
},{"./interval.js":"QFUQ","./duration.js":"Vnta"}],"etD9":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.minutes = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var minute = (0, _interval.default)(function (date) {
  date.setTime(date - date.getMilliseconds() - date.getSeconds() * _duration.durationSecond);
}, function (date, step) {
  date.setTime(+date + step * _duration.durationMinute);
}, function (start, end) {
  return (end - start) / _duration.durationMinute;
}, function (date) {
  return date.getMinutes();
});
var _default = minute;
exports.default = _default;
var minutes = minute.range;
exports.minutes = minutes;
},{"./interval.js":"QFUQ","./duration.js":"Vnta"}],"py4n":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hours = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var hour = (0, _interval.default)(function (date) {
  date.setTime(date - date.getMilliseconds() - date.getSeconds() * _duration.durationSecond - date.getMinutes() * _duration.durationMinute);
}, function (date, step) {
  date.setTime(+date + step * _duration.durationHour);
}, function (start, end) {
  return (end - start) / _duration.durationHour;
}, function (date) {
  return date.getHours();
});
var _default = hour;
exports.default = _default;
var hours = hour.range;
exports.hours = hours;
},{"./interval.js":"QFUQ","./duration.js":"Vnta"}],"LWrz":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.days = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var day = (0, _interval.default)(function (date) {
  date.setHours(0, 0, 0, 0);
}, function (date, step) {
  date.setDate(date.getDate() + step);
}, function (start, end) {
  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * _duration.durationMinute) / _duration.durationDay;
}, function (date) {
  return date.getDate() - 1;
});
var _default = day;
exports.default = _default;
var days = day.range;
exports.days = days;
},{"./interval.js":"QFUQ","./duration.js":"Vnta"}],"Dweu":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.saturdays = exports.fridays = exports.thursdays = exports.wednesdays = exports.tuesdays = exports.mondays = exports.sundays = exports.saturday = exports.friday = exports.thursday = exports.wednesday = exports.tuesday = exports.monday = exports.sunday = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function weekday(i) {
  return (0, _interval.default)(function (date) {
    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);
    date.setHours(0, 0, 0, 0);
  }, function (date, step) {
    date.setDate(date.getDate() + step * 7);
  }, function (start, end) {
    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * _duration.durationMinute) / _duration.durationWeek;
  });
}

var sunday = weekday(0);
exports.sunday = sunday;
var monday = weekday(1);
exports.monday = monday;
var tuesday = weekday(2);
exports.tuesday = tuesday;
var wednesday = weekday(3);
exports.wednesday = wednesday;
var thursday = weekday(4);
exports.thursday = thursday;
var friday = weekday(5);
exports.friday = friday;
var saturday = weekday(6);
exports.saturday = saturday;
var sundays = sunday.range;
exports.sundays = sundays;
var mondays = monday.range;
exports.mondays = mondays;
var tuesdays = tuesday.range;
exports.tuesdays = tuesdays;
var wednesdays = wednesday.range;
exports.wednesdays = wednesdays;
var thursdays = thursday.range;
exports.thursdays = thursdays;
var fridays = friday.range;
exports.fridays = fridays;
var saturdays = saturday.range;
exports.saturdays = saturdays;
},{"./interval.js":"QFUQ","./duration.js":"Vnta"}],"gOAO":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.months = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var month = (0, _interval.default)(function (date) {
  date.setDate(1);
  date.setHours(0, 0, 0, 0);
}, function (date, step) {
  date.setMonth(date.getMonth() + step);
}, function (start, end) {
  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;
}, function (date) {
  return date.getMonth();
});
var _default = month;
exports.default = _default;
var months = month.range;
exports.months = months;
},{"./interval.js":"QFUQ"}],"kReM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.years = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var year = (0, _interval.default)(function (date) {
  date.setMonth(0, 1);
  date.setHours(0, 0, 0, 0);
}, function (date, step) {
  date.setFullYear(date.getFullYear() + step);
}, function (start, end) {
  return end.getFullYear() - start.getFullYear();
}, function (date) {
  return date.getFullYear();
}); // An optimized implementation for this simple case.

year.every = function (k) {
  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : (0, _interval.default)(function (date) {
    date.setFullYear(Math.floor(date.getFullYear() / k) * k);
    date.setMonth(0, 1);
    date.setHours(0, 0, 0, 0);
  }, function (date, step) {
    date.setFullYear(date.getFullYear() + step * k);
  });
};

var _default = year;
exports.default = _default;
var years = year.range;
exports.years = years;
},{"./interval.js":"QFUQ"}],"O6lW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.utcMinutes = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var utcMinute = (0, _interval.default)(function (date) {
  date.setUTCSeconds(0, 0);
}, function (date, step) {
  date.setTime(+date + step * _duration.durationMinute);
}, function (start, end) {
  return (end - start) / _duration.durationMinute;
}, function (date) {
  return date.getUTCMinutes();
});
var _default = utcMinute;
exports.default = _default;
var utcMinutes = utcMinute.range;
exports.utcMinutes = utcMinutes;
},{"./interval.js":"QFUQ","./duration.js":"Vnta"}],"qnVA":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.utcHours = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var utcHour = (0, _interval.default)(function (date) {
  date.setUTCMinutes(0, 0, 0);
}, function (date, step) {
  date.setTime(+date + step * _duration.durationHour);
}, function (start, end) {
  return (end - start) / _duration.durationHour;
}, function (date) {
  return date.getUTCHours();
});
var _default = utcHour;
exports.default = _default;
var utcHours = utcHour.range;
exports.utcHours = utcHours;
},{"./interval.js":"QFUQ","./duration.js":"Vnta"}],"HXiV":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.utcDays = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var utcDay = (0, _interval.default)(function (date) {
  date.setUTCHours(0, 0, 0, 0);
}, function (date, step) {
  date.setUTCDate(date.getUTCDate() + step);
}, function (start, end) {
  return (end - start) / _duration.durationDay;
}, function (date) {
  return date.getUTCDate() - 1;
});
var _default = utcDay;
exports.default = _default;
var utcDays = utcDay.range;
exports.utcDays = utcDays;
},{"./interval.js":"QFUQ","./duration.js":"Vnta"}],"CRXo":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.utcSaturdays = exports.utcFridays = exports.utcThursdays = exports.utcWednesdays = exports.utcTuesdays = exports.utcMondays = exports.utcSundays = exports.utcSaturday = exports.utcFriday = exports.utcThursday = exports.utcWednesday = exports.utcTuesday = exports.utcMonday = exports.utcSunday = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function utcWeekday(i) {
  return (0, _interval.default)(function (date) {
    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);
    date.setUTCHours(0, 0, 0, 0);
  }, function (date, step) {
    date.setUTCDate(date.getUTCDate() + step * 7);
  }, function (start, end) {
    return (end - start) / _duration.durationWeek;
  });
}

var utcSunday = utcWeekday(0);
exports.utcSunday = utcSunday;
var utcMonday = utcWeekday(1);
exports.utcMonday = utcMonday;
var utcTuesday = utcWeekday(2);
exports.utcTuesday = utcTuesday;
var utcWednesday = utcWeekday(3);
exports.utcWednesday = utcWednesday;
var utcThursday = utcWeekday(4);
exports.utcThursday = utcThursday;
var utcFriday = utcWeekday(5);
exports.utcFriday = utcFriday;
var utcSaturday = utcWeekday(6);
exports.utcSaturday = utcSaturday;
var utcSundays = utcSunday.range;
exports.utcSundays = utcSundays;
var utcMondays = utcMonday.range;
exports.utcMondays = utcMondays;
var utcTuesdays = utcTuesday.range;
exports.utcTuesdays = utcTuesdays;
var utcWednesdays = utcWednesday.range;
exports.utcWednesdays = utcWednesdays;
var utcThursdays = utcThursday.range;
exports.utcThursdays = utcThursdays;
var utcFridays = utcFriday.range;
exports.utcFridays = utcFridays;
var utcSaturdays = utcSaturday.range;
exports.utcSaturdays = utcSaturdays;
},{"./interval.js":"QFUQ","./duration.js":"Vnta"}],"EphR":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.utcMonths = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var utcMonth = (0, _interval.default)(function (date) {
  date.setUTCDate(1);
  date.setUTCHours(0, 0, 0, 0);
}, function (date, step) {
  date.setUTCMonth(date.getUTCMonth() + step);
}, function (start, end) {
  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;
}, function (date) {
  return date.getUTCMonth();
});
var _default = utcMonth;
exports.default = _default;
var utcMonths = utcMonth.range;
exports.utcMonths = utcMonths;
},{"./interval.js":"QFUQ"}],"Abfv":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.utcYears = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var utcYear = (0, _interval.default)(function (date) {
  date.setUTCMonth(0, 1);
  date.setUTCHours(0, 0, 0, 0);
}, function (date, step) {
  date.setUTCFullYear(date.getUTCFullYear() + step);
}, function (start, end) {
  return end.getUTCFullYear() - start.getUTCFullYear();
}, function (date) {
  return date.getUTCFullYear();
}); // An optimized implementation for this simple case.

utcYear.every = function (k) {
  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : (0, _interval.default)(function (date) {
    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);
    date.setUTCMonth(0, 1);
    date.setUTCHours(0, 0, 0, 0);
  }, function (date, step) {
    date.setUTCFullYear(date.getUTCFullYear() + step * k);
  });
};

var _default = utcYear;
exports.default = _default;
var utcYears = utcYear.range;
exports.utcYears = utcYears;
},{"./interval.js":"QFUQ"}],"hQYG":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "timeInterval", {
  enumerable: true,
  get: function () {
    return _interval.default;
  }
});
Object.defineProperty(exports, "timeMillisecond", {
  enumerable: true,
  get: function () {
    return _millisecond.default;
  }
});
Object.defineProperty(exports, "timeMilliseconds", {
  enumerable: true,
  get: function () {
    return _millisecond.milliseconds;
  }
});
Object.defineProperty(exports, "utcMillisecond", {
  enumerable: true,
  get: function () {
    return _millisecond.default;
  }
});
Object.defineProperty(exports, "utcMilliseconds", {
  enumerable: true,
  get: function () {
    return _millisecond.milliseconds;
  }
});
Object.defineProperty(exports, "timeSecond", {
  enumerable: true,
  get: function () {
    return _second.default;
  }
});
Object.defineProperty(exports, "timeSeconds", {
  enumerable: true,
  get: function () {
    return _second.seconds;
  }
});
Object.defineProperty(exports, "utcSecond", {
  enumerable: true,
  get: function () {
    return _second.default;
  }
});
Object.defineProperty(exports, "utcSeconds", {
  enumerable: true,
  get: function () {
    return _second.seconds;
  }
});
Object.defineProperty(exports, "timeMinute", {
  enumerable: true,
  get: function () {
    return _minute.default;
  }
});
Object.defineProperty(exports, "timeMinutes", {
  enumerable: true,
  get: function () {
    return _minute.minutes;
  }
});
Object.defineProperty(exports, "timeHour", {
  enumerable: true,
  get: function () {
    return _hour.default;
  }
});
Object.defineProperty(exports, "timeHours", {
  enumerable: true,
  get: function () {
    return _hour.hours;
  }
});
Object.defineProperty(exports, "timeDay", {
  enumerable: true,
  get: function () {
    return _day.default;
  }
});
Object.defineProperty(exports, "timeDays", {
  enumerable: true,
  get: function () {
    return _day.days;
  }
});
Object.defineProperty(exports, "timeWeek", {
  enumerable: true,
  get: function () {
    return _week.sunday;
  }
});
Object.defineProperty(exports, "timeWeeks", {
  enumerable: true,
  get: function () {
    return _week.sundays;
  }
});
Object.defineProperty(exports, "timeSunday", {
  enumerable: true,
  get: function () {
    return _week.sunday;
  }
});
Object.defineProperty(exports, "timeSundays", {
  enumerable: true,
  get: function () {
    return _week.sundays;
  }
});
Object.defineProperty(exports, "timeMonday", {
  enumerable: true,
  get: function () {
    return _week.monday;
  }
});
Object.defineProperty(exports, "timeMondays", {
  enumerable: true,
  get: function () {
    return _week.mondays;
  }
});
Object.defineProperty(exports, "timeTuesday", {
  enumerable: true,
  get: function () {
    return _week.tuesday;
  }
});
Object.defineProperty(exports, "timeTuesdays", {
  enumerable: true,
  get: function () {
    return _week.tuesdays;
  }
});
Object.defineProperty(exports, "timeWednesday", {
  enumerable: true,
  get: function () {
    return _week.wednesday;
  }
});
Object.defineProperty(exports, "timeWednesdays", {
  enumerable: true,
  get: function () {
    return _week.wednesdays;
  }
});
Object.defineProperty(exports, "timeThursday", {
  enumerable: true,
  get: function () {
    return _week.thursday;
  }
});
Object.defineProperty(exports, "timeThursdays", {
  enumerable: true,
  get: function () {
    return _week.thursdays;
  }
});
Object.defineProperty(exports, "timeFriday", {
  enumerable: true,
  get: function () {
    return _week.friday;
  }
});
Object.defineProperty(exports, "timeFridays", {
  enumerable: true,
  get: function () {
    return _week.fridays;
  }
});
Object.defineProperty(exports, "timeSaturday", {
  enumerable: true,
  get: function () {
    return _week.saturday;
  }
});
Object.defineProperty(exports, "timeSaturdays", {
  enumerable: true,
  get: function () {
    return _week.saturdays;
  }
});
Object.defineProperty(exports, "timeMonth", {
  enumerable: true,
  get: function () {
    return _month.default;
  }
});
Object.defineProperty(exports, "timeMonths", {
  enumerable: true,
  get: function () {
    return _month.months;
  }
});
Object.defineProperty(exports, "timeYear", {
  enumerable: true,
  get: function () {
    return _year.default;
  }
});
Object.defineProperty(exports, "timeYears", {
  enumerable: true,
  get: function () {
    return _year.years;
  }
});
Object.defineProperty(exports, "utcMinute", {
  enumerable: true,
  get: function () {
    return _utcMinute.default;
  }
});
Object.defineProperty(exports, "utcMinutes", {
  enumerable: true,
  get: function () {
    return _utcMinute.utcMinutes;
  }
});
Object.defineProperty(exports, "utcHour", {
  enumerable: true,
  get: function () {
    return _utcHour.default;
  }
});
Object.defineProperty(exports, "utcHours", {
  enumerable: true,
  get: function () {
    return _utcHour.utcHours;
  }
});
Object.defineProperty(exports, "utcDay", {
  enumerable: true,
  get: function () {
    return _utcDay.default;
  }
});
Object.defineProperty(exports, "utcDays", {
  enumerable: true,
  get: function () {
    return _utcDay.utcDays;
  }
});
Object.defineProperty(exports, "utcWeek", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcSunday;
  }
});
Object.defineProperty(exports, "utcWeeks", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcSundays;
  }
});
Object.defineProperty(exports, "utcSunday", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcSunday;
  }
});
Object.defineProperty(exports, "utcSundays", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcSundays;
  }
});
Object.defineProperty(exports, "utcMonday", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcMonday;
  }
});
Object.defineProperty(exports, "utcMondays", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcMondays;
  }
});
Object.defineProperty(exports, "utcTuesday", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcTuesday;
  }
});
Object.defineProperty(exports, "utcTuesdays", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcTuesdays;
  }
});
Object.defineProperty(exports, "utcWednesday", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcWednesday;
  }
});
Object.defineProperty(exports, "utcWednesdays", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcWednesdays;
  }
});
Object.defineProperty(exports, "utcThursday", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcThursday;
  }
});
Object.defineProperty(exports, "utcThursdays", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcThursdays;
  }
});
Object.defineProperty(exports, "utcFriday", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcFriday;
  }
});
Object.defineProperty(exports, "utcFridays", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcFridays;
  }
});
Object.defineProperty(exports, "utcSaturday", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcSaturday;
  }
});
Object.defineProperty(exports, "utcSaturdays", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcSaturdays;
  }
});
Object.defineProperty(exports, "utcMonth", {
  enumerable: true,
  get: function () {
    return _utcMonth.default;
  }
});
Object.defineProperty(exports, "utcMonths", {
  enumerable: true,
  get: function () {
    return _utcMonth.utcMonths;
  }
});
Object.defineProperty(exports, "utcYear", {
  enumerable: true,
  get: function () {
    return _utcYear.default;
  }
});
Object.defineProperty(exports, "utcYears", {
  enumerable: true,
  get: function () {
    return _utcYear.utcYears;
  }
});

var _interval = _interopRequireDefault(require("./interval.js"));

var _millisecond = _interopRequireWildcard(require("./millisecond.js"));

var _second = _interopRequireWildcard(require("./second.js"));

var _minute = _interopRequireWildcard(require("./minute.js"));

var _hour = _interopRequireWildcard(require("./hour.js"));

var _day = _interopRequireWildcard(require("./day.js"));

var _week = require("./week.js");

var _month = _interopRequireWildcard(require("./month.js"));

var _year = _interopRequireWildcard(require("./year.js"));

var _utcMinute = _interopRequireWildcard(require("./utcMinute.js"));

var _utcHour = _interopRequireWildcard(require("./utcHour.js"));

var _utcDay = _interopRequireWildcard(require("./utcDay.js"));

var _utcWeek = require("./utcWeek.js");

var _utcMonth = _interopRequireWildcard(require("./utcMonth.js"));

var _utcYear = _interopRequireWildcard(require("./utcYear.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./interval.js":"QFUQ","./millisecond.js":"WVmH","./second.js":"AYLw","./minute.js":"etD9","./hour.js":"py4n","./day.js":"LWrz","./week.js":"Dweu","./month.js":"gOAO","./year.js":"kReM","./utcMinute.js":"O6lW","./utcHour.js":"qnVA","./utcDay.js":"HXiV","./utcWeek.js":"CRXo","./utcMonth.js":"EphR","./utcYear.js":"Abfv"}],"UbHU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = formatLocale;

var _d3Time = require("d3-time");

function localDate(d) {
  if (0 <= d.y && d.y < 100) {
    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);
    date.setFullYear(d.y);
    return date;
  }

  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);
}

function utcDate(d) {
  if (0 <= d.y && d.y < 100) {
    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));
    date.setUTCFullYear(d.y);
    return date;
  }

  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));
}

function newDate(y, m, d) {
  return {
    y: y,
    m: m,
    d: d,
    H: 0,
    M: 0,
    S: 0,
    L: 0
  };
}

function formatLocale(locale) {
  var locale_dateTime = locale.dateTime,
      locale_date = locale.date,
      locale_time = locale.time,
      locale_periods = locale.periods,
      locale_weekdays = locale.days,
      locale_shortWeekdays = locale.shortDays,
      locale_months = locale.months,
      locale_shortMonths = locale.shortMonths;
  var periodRe = formatRe(locale_periods),
      periodLookup = formatLookup(locale_periods),
      weekdayRe = formatRe(locale_weekdays),
      weekdayLookup = formatLookup(locale_weekdays),
      shortWeekdayRe = formatRe(locale_shortWeekdays),
      shortWeekdayLookup = formatLookup(locale_shortWeekdays),
      monthRe = formatRe(locale_months),
      monthLookup = formatLookup(locale_months),
      shortMonthRe = formatRe(locale_shortMonths),
      shortMonthLookup = formatLookup(locale_shortMonths);
  var formats = {
    "a": formatShortWeekday,
    "A": formatWeekday,
    "b": formatShortMonth,
    "B": formatMonth,
    "c": null,
    "d": formatDayOfMonth,
    "e": formatDayOfMonth,
    "f": formatMicroseconds,
    "H": formatHour24,
    "I": formatHour12,
    "j": formatDayOfYear,
    "L": formatMilliseconds,
    "m": formatMonthNumber,
    "M": formatMinutes,
    "p": formatPeriod,
    "q": formatQuarter,
    "Q": formatUnixTimestamp,
    "s": formatUnixTimestampSeconds,
    "S": formatSeconds,
    "u": formatWeekdayNumberMonday,
    "U": formatWeekNumberSunday,
    "V": formatWeekNumberISO,
    "w": formatWeekdayNumberSunday,
    "W": formatWeekNumberMonday,
    "x": null,
    "X": null,
    "y": formatYear,
    "Y": formatFullYear,
    "Z": formatZone,
    "%": formatLiteralPercent
  };
  var utcFormats = {
    "a": formatUTCShortWeekday,
    "A": formatUTCWeekday,
    "b": formatUTCShortMonth,
    "B": formatUTCMonth,
    "c": null,
    "d": formatUTCDayOfMonth,
    "e": formatUTCDayOfMonth,
    "f": formatUTCMicroseconds,
    "H": formatUTCHour24,
    "I": formatUTCHour12,
    "j": formatUTCDayOfYear,
    "L": formatUTCMilliseconds,
    "m": formatUTCMonthNumber,
    "M": formatUTCMinutes,
    "p": formatUTCPeriod,
    "q": formatUTCQuarter,
    "Q": formatUnixTimestamp,
    "s": formatUnixTimestampSeconds,
    "S": formatUTCSeconds,
    "u": formatUTCWeekdayNumberMonday,
    "U": formatUTCWeekNumberSunday,
    "V": formatUTCWeekNumberISO,
    "w": formatUTCWeekdayNumberSunday,
    "W": formatUTCWeekNumberMonday,
    "x": null,
    "X": null,
    "y": formatUTCYear,
    "Y": formatUTCFullYear,
    "Z": formatUTCZone,
    "%": formatLiteralPercent
  };
  var parses = {
    "a": parseShortWeekday,
    "A": parseWeekday,
    "b": parseShortMonth,
    "B": parseMonth,
    "c": parseLocaleDateTime,
    "d": parseDayOfMonth,
    "e": parseDayOfMonth,
    "f": parseMicroseconds,
    "H": parseHour24,
    "I": parseHour24,
    "j": parseDayOfYear,
    "L": parseMilliseconds,
    "m": parseMonthNumber,
    "M": parseMinutes,
    "p": parsePeriod,
    "q": parseQuarter,
    "Q": parseUnixTimestamp,
    "s": parseUnixTimestampSeconds,
    "S": parseSeconds,
    "u": parseWeekdayNumberMonday,
    "U": parseWeekNumberSunday,
    "V": parseWeekNumberISO,
    "w": parseWeekdayNumberSunday,
    "W": parseWeekNumberMonday,
    "x": parseLocaleDate,
    "X": parseLocaleTime,
    "y": parseYear,
    "Y": parseFullYear,
    "Z": parseZone,
    "%": parseLiteralPercent
  }; // These recursive directive definitions must be deferred.

  formats.x = newFormat(locale_date, formats);
  formats.X = newFormat(locale_time, formats);
  formats.c = newFormat(locale_dateTime, formats);
  utcFormats.x = newFormat(locale_date, utcFormats);
  utcFormats.X = newFormat(locale_time, utcFormats);
  utcFormats.c = newFormat(locale_dateTime, utcFormats);

  function newFormat(specifier, formats) {
    return function (date) {
      var string = [],
          i = -1,
          j = 0,
          n = specifier.length,
          c,
          pad,
          format;
      if (!(date instanceof Date)) date = new Date(+date);

      while (++i < n) {
        if (specifier.charCodeAt(i) === 37) {
          string.push(specifier.slice(j, i));
          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);else pad = c === "e" ? " " : "0";
          if (format = formats[c]) c = format(date, pad);
          string.push(c);
          j = i + 1;
        }
      }

      string.push(specifier.slice(j, i));
      return string.join("");
    };
  }

  function newParse(specifier, Z) {
    return function (string) {
      var d = newDate(1900, undefined, 1),
          i = parseSpecifier(d, specifier, string += "", 0),
          week,
          day;
      if (i != string.length) return null; // If a UNIX timestamp is specified, return it.

      if ("Q" in d) return new Date(d.Q);
      if ("s" in d) return new Date(d.s * 1000 + ("L" in d ? d.L : 0)); // If this is utcParse, never use the local timezone.

      if (Z && !("Z" in d)) d.Z = 0; // The am-pm flag is 0 for AM, and 1 for PM.

      if ("p" in d) d.H = d.H % 12 + d.p * 12; // If the month was not specified, inherit from the quarter.

      if (d.m === undefined) d.m = "q" in d ? d.q : 0; // Convert day-of-week and week-of-year to day-of-year.

      if ("V" in d) {
        if (d.V < 1 || d.V > 53) return null;
        if (!("w" in d)) d.w = 1;

        if ("Z" in d) {
          week = utcDate(newDate(d.y, 0, 1)), day = week.getUTCDay();
          week = day > 4 || day === 0 ? _d3Time.utcMonday.ceil(week) : (0, _d3Time.utcMonday)(week);
          week = _d3Time.utcDay.offset(week, (d.V - 1) * 7);
          d.y = week.getUTCFullYear();
          d.m = week.getUTCMonth();
          d.d = week.getUTCDate() + (d.w + 6) % 7;
        } else {
          week = localDate(newDate(d.y, 0, 1)), day = week.getDay();
          week = day > 4 || day === 0 ? _d3Time.timeMonday.ceil(week) : (0, _d3Time.timeMonday)(week);
          week = _d3Time.timeDay.offset(week, (d.V - 1) * 7);
          d.y = week.getFullYear();
          d.m = week.getMonth();
          d.d = week.getDate() + (d.w + 6) % 7;
        }
      } else if ("W" in d || "U" in d) {
        if (!("w" in d)) d.w = "u" in d ? d.u % 7 : "W" in d ? 1 : 0;
        day = "Z" in d ? utcDate(newDate(d.y, 0, 1)).getUTCDay() : localDate(newDate(d.y, 0, 1)).getDay();
        d.m = 0;
        d.d = "W" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;
      } // If a time zone is specified, all fields are interpreted as UTC and then
      // offset according to the specified time zone.


      if ("Z" in d) {
        d.H += d.Z / 100 | 0;
        d.M += d.Z % 100;
        return utcDate(d);
      } // Otherwise, all fields are in local time.


      return localDate(d);
    };
  }

  function parseSpecifier(d, specifier, string, j) {
    var i = 0,
        n = specifier.length,
        m = string.length,
        c,
        parse;

    while (i < n) {
      if (j >= m) return -1;
      c = specifier.charCodeAt(i++);

      if (c === 37) {
        c = specifier.charAt(i++);
        parse = parses[c in pads ? specifier.charAt(i++) : c];
        if (!parse || (j = parse(d, string, j)) < 0) return -1;
      } else if (c != string.charCodeAt(j++)) {
        return -1;
      }
    }

    return j;
  }

  function parsePeriod(d, string, i) {
    var n = periodRe.exec(string.slice(i));
    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;
  }

  function parseShortWeekday(d, string, i) {
    var n = shortWeekdayRe.exec(string.slice(i));
    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;
  }

  function parseWeekday(d, string, i) {
    var n = weekdayRe.exec(string.slice(i));
    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;
  }

  function parseShortMonth(d, string, i) {
    var n = shortMonthRe.exec(string.slice(i));
    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;
  }

  function parseMonth(d, string, i) {
    var n = monthRe.exec(string.slice(i));
    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;
  }

  function parseLocaleDateTime(d, string, i) {
    return parseSpecifier(d, locale_dateTime, string, i);
  }

  function parseLocaleDate(d, string, i) {
    return parseSpecifier(d, locale_date, string, i);
  }

  function parseLocaleTime(d, string, i) {
    return parseSpecifier(d, locale_time, string, i);
  }

  function formatShortWeekday(d) {
    return locale_shortWeekdays[d.getDay()];
  }

  function formatWeekday(d) {
    return locale_weekdays[d.getDay()];
  }

  function formatShortMonth(d) {
    return locale_shortMonths[d.getMonth()];
  }

  function formatMonth(d) {
    return locale_months[d.getMonth()];
  }

  function formatPeriod(d) {
    return locale_periods[+(d.getHours() >= 12)];
  }

  function formatQuarter(d) {
    return 1 + ~~(d.getMonth() / 3);
  }

  function formatUTCShortWeekday(d) {
    return locale_shortWeekdays[d.getUTCDay()];
  }

  function formatUTCWeekday(d) {
    return locale_weekdays[d.getUTCDay()];
  }

  function formatUTCShortMonth(d) {
    return locale_shortMonths[d.getUTCMonth()];
  }

  function formatUTCMonth(d) {
    return locale_months[d.getUTCMonth()];
  }

  function formatUTCPeriod(d) {
    return locale_periods[+(d.getUTCHours() >= 12)];
  }

  function formatUTCQuarter(d) {
    return 1 + ~~(d.getUTCMonth() / 3);
  }

  return {
    format: function (specifier) {
      var f = newFormat(specifier += "", formats);

      f.toString = function () {
        return specifier;
      };

      return f;
    },
    parse: function (specifier) {
      var p = newParse(specifier += "", false);

      p.toString = function () {
        return specifier;
      };

      return p;
    },
    utcFormat: function (specifier) {
      var f = newFormat(specifier += "", utcFormats);

      f.toString = function () {
        return specifier;
      };

      return f;
    },
    utcParse: function (specifier) {
      var p = newParse(specifier += "", true);

      p.toString = function () {
        return specifier;
      };

      return p;
    }
  };
}

var pads = {
  "-": "",
  "_": " ",
  "0": "0"
},
    numberRe = /^\s*\d+/,
    // note: ignores next directive
percentRe = /^%/,
    requoteRe = /[\\^$*+?|[\]().{}]/g;

function pad(value, fill, width) {
  var sign = value < 0 ? "-" : "",
      string = (sign ? -value : value) + "",
      length = string.length;
  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
}

function requote(s) {
  return s.replace(requoteRe, "\\$&");
}

function formatRe(names) {
  return new RegExp("^(?:" + names.map(requote).join("|") + ")", "i");
}

function formatLookup(names) {
  var map = {},
      i = -1,
      n = names.length;

  while (++i < n) map[names[i].toLowerCase()] = i;

  return map;
}

function parseWeekdayNumberSunday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.w = +n[0], i + n[0].length) : -1;
}

function parseWeekdayNumberMonday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.u = +n[0], i + n[0].length) : -1;
}

function parseWeekNumberSunday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.U = +n[0], i + n[0].length) : -1;
}

function parseWeekNumberISO(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.V = +n[0], i + n[0].length) : -1;
}

function parseWeekNumberMonday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.W = +n[0], i + n[0].length) : -1;
}

function parseFullYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 4));
  return n ? (d.y = +n[0], i + n[0].length) : -1;
}

function parseYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;
}

function parseZone(d, string, i) {
  var n = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(string.slice(i, i + 6));
  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || "00")), i + n[0].length) : -1;
}

function parseQuarter(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.q = n[0] * 3 - 3, i + n[0].length) : -1;
}

function parseMonthNumber(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;
}

function parseDayOfMonth(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.d = +n[0], i + n[0].length) : -1;
}

function parseDayOfYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 3));
  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;
}

function parseHour24(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.H = +n[0], i + n[0].length) : -1;
}

function parseMinutes(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.M = +n[0], i + n[0].length) : -1;
}

function parseSeconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.S = +n[0], i + n[0].length) : -1;
}

function parseMilliseconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 3));
  return n ? (d.L = +n[0], i + n[0].length) : -1;
}

function parseMicroseconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 6));
  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;
}

function parseLiteralPercent(d, string, i) {
  var n = percentRe.exec(string.slice(i, i + 1));
  return n ? i + n[0].length : -1;
}

function parseUnixTimestamp(d, string, i) {
  var n = numberRe.exec(string.slice(i));
  return n ? (d.Q = +n[0], i + n[0].length) : -1;
}

function parseUnixTimestampSeconds(d, string, i) {
  var n = numberRe.exec(string.slice(i));
  return n ? (d.s = +n[0], i + n[0].length) : -1;
}

function formatDayOfMonth(d, p) {
  return pad(d.getDate(), p, 2);
}

function formatHour24(d, p) {
  return pad(d.getHours(), p, 2);
}

function formatHour12(d, p) {
  return pad(d.getHours() % 12 || 12, p, 2);
}

function formatDayOfYear(d, p) {
  return pad(1 + _d3Time.timeDay.count((0, _d3Time.timeYear)(d), d), p, 3);
}

function formatMilliseconds(d, p) {
  return pad(d.getMilliseconds(), p, 3);
}

function formatMicroseconds(d, p) {
  return formatMilliseconds(d, p) + "000";
}

function formatMonthNumber(d, p) {
  return pad(d.getMonth() + 1, p, 2);
}

function formatMinutes(d, p) {
  return pad(d.getMinutes(), p, 2);
}

function formatSeconds(d, p) {
  return pad(d.getSeconds(), p, 2);
}

function formatWeekdayNumberMonday(d) {
  var day = d.getDay();
  return day === 0 ? 7 : day;
}

function formatWeekNumberSunday(d, p) {
  return pad(_d3Time.timeSunday.count((0, _d3Time.timeYear)(d) - 1, d), p, 2);
}

function formatWeekNumberISO(d, p) {
  var day = d.getDay();
  d = day >= 4 || day === 0 ? (0, _d3Time.timeThursday)(d) : _d3Time.timeThursday.ceil(d);
  return pad(_d3Time.timeThursday.count((0, _d3Time.timeYear)(d), d) + ((0, _d3Time.timeYear)(d).getDay() === 4), p, 2);
}

function formatWeekdayNumberSunday(d) {
  return d.getDay();
}

function formatWeekNumberMonday(d, p) {
  return pad(_d3Time.timeMonday.count((0, _d3Time.timeYear)(d) - 1, d), p, 2);
}

function formatYear(d, p) {
  return pad(d.getFullYear() % 100, p, 2);
}

function formatFullYear(d, p) {
  return pad(d.getFullYear() % 10000, p, 4);
}

function formatZone(d) {
  var z = d.getTimezoneOffset();
  return (z > 0 ? "-" : (z *= -1, "+")) + pad(z / 60 | 0, "0", 2) + pad(z % 60, "0", 2);
}

function formatUTCDayOfMonth(d, p) {
  return pad(d.getUTCDate(), p, 2);
}

function formatUTCHour24(d, p) {
  return pad(d.getUTCHours(), p, 2);
}

function formatUTCHour12(d, p) {
  return pad(d.getUTCHours() % 12 || 12, p, 2);
}

function formatUTCDayOfYear(d, p) {
  return pad(1 + _d3Time.utcDay.count((0, _d3Time.utcYear)(d), d), p, 3);
}

function formatUTCMilliseconds(d, p) {
  return pad(d.getUTCMilliseconds(), p, 3);
}

function formatUTCMicroseconds(d, p) {
  return formatUTCMilliseconds(d, p) + "000";
}

function formatUTCMonthNumber(d, p) {
  return pad(d.getUTCMonth() + 1, p, 2);
}

function formatUTCMinutes(d, p) {
  return pad(d.getUTCMinutes(), p, 2);
}

function formatUTCSeconds(d, p) {
  return pad(d.getUTCSeconds(), p, 2);
}

function formatUTCWeekdayNumberMonday(d) {
  var dow = d.getUTCDay();
  return dow === 0 ? 7 : dow;
}

function formatUTCWeekNumberSunday(d, p) {
  return pad(_d3Time.utcSunday.count((0, _d3Time.utcYear)(d) - 1, d), p, 2);
}

function formatUTCWeekNumberISO(d, p) {
  var day = d.getUTCDay();
  d = day >= 4 || day === 0 ? (0, _d3Time.utcThursday)(d) : _d3Time.utcThursday.ceil(d);
  return pad(_d3Time.utcThursday.count((0, _d3Time.utcYear)(d), d) + ((0, _d3Time.utcYear)(d).getUTCDay() === 4), p, 2);
}

function formatUTCWeekdayNumberSunday(d) {
  return d.getUTCDay();
}

function formatUTCWeekNumberMonday(d, p) {
  return pad(_d3Time.utcMonday.count((0, _d3Time.utcYear)(d) - 1, d), p, 2);
}

function formatUTCYear(d, p) {
  return pad(d.getUTCFullYear() % 100, p, 2);
}

function formatUTCFullYear(d, p) {
  return pad(d.getUTCFullYear() % 10000, p, 4);
}

function formatUTCZone() {
  return "+0000";
}

function formatLiteralPercent() {
  return "%";
}

function formatUnixTimestamp(d) {
  return +d;
}

function formatUnixTimestampSeconds(d) {
  return Math.floor(+d / 1000);
}
},{"d3-time":"hQYG"}],"csjH":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = defaultLocale;
exports.utcParse = exports.utcFormat = exports.timeParse = exports.timeFormat = void 0;

var _locale = _interopRequireDefault(require("./locale.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var locale;
var timeFormat;
exports.timeFormat = timeFormat;
var timeParse;
exports.timeParse = timeParse;
var utcFormat;
exports.utcFormat = utcFormat;
var utcParse;
exports.utcParse = utcParse;
defaultLocale({
  dateTime: "%x, %X",
  date: "%-m/%-d/%Y",
  time: "%-I:%M:%S %p",
  periods: ["AM", "PM"],
  days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
  shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
  months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
  shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
});

function defaultLocale(definition) {
  locale = (0, _locale.default)(definition);
  exports.timeFormat = timeFormat = locale.format;
  exports.timeParse = timeParse = locale.parse;
  exports.utcFormat = utcFormat = locale.utcFormat;
  exports.utcParse = utcParse = locale.utcParse;
  return locale;
}
},{"./locale.js":"UbHU"}],"PKKZ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.isoSpecifier = void 0;

var _defaultLocale = require("./defaultLocale.js");

var isoSpecifier = "%Y-%m-%dT%H:%M:%S.%LZ";
exports.isoSpecifier = isoSpecifier;

function formatIsoNative(date) {
  return date.toISOString();
}

var formatIso = Date.prototype.toISOString ? formatIsoNative : (0, _defaultLocale.utcFormat)(isoSpecifier);
var _default = formatIso;
exports.default = _default;
},{"./defaultLocale.js":"csjH"}],"d4jk":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _isoFormat = require("./isoFormat.js");

var _defaultLocale = require("./defaultLocale.js");

function parseIsoNative(string) {
  var date = new Date(string);
  return isNaN(date) ? null : date;
}

var parseIso = +new Date("2000-01-01T00:00:00.000Z") ? parseIsoNative : (0, _defaultLocale.utcParse)(_isoFormat.isoSpecifier);
var _default = parseIso;
exports.default = _default;
},{"./isoFormat.js":"PKKZ","./defaultLocale.js":"csjH"}],"UYpZ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "timeFormatDefaultLocale", {
  enumerable: true,
  get: function () {
    return _defaultLocale.default;
  }
});
Object.defineProperty(exports, "timeFormat", {
  enumerable: true,
  get: function () {
    return _defaultLocale.timeFormat;
  }
});
Object.defineProperty(exports, "timeParse", {
  enumerable: true,
  get: function () {
    return _defaultLocale.timeParse;
  }
});
Object.defineProperty(exports, "utcFormat", {
  enumerable: true,
  get: function () {
    return _defaultLocale.utcFormat;
  }
});
Object.defineProperty(exports, "utcParse", {
  enumerable: true,
  get: function () {
    return _defaultLocale.utcParse;
  }
});
Object.defineProperty(exports, "timeFormatLocale", {
  enumerable: true,
  get: function () {
    return _locale.default;
  }
});
Object.defineProperty(exports, "isoFormat", {
  enumerable: true,
  get: function () {
    return _isoFormat.default;
  }
});
Object.defineProperty(exports, "isoParse", {
  enumerable: true,
  get: function () {
    return _isoParse.default;
  }
});

var _defaultLocale = _interopRequireWildcard(require("./defaultLocale.js"));

var _locale = _interopRequireDefault(require("./locale.js"));

var _isoFormat = _interopRequireDefault(require("./isoFormat.js"));

var _isoParse = _interopRequireDefault(require("./isoParse.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"./defaultLocale.js":"csjH","./locale.js":"UbHU","./isoFormat.js":"PKKZ","./isoParse.js":"d4jk"}],"kVXt":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.calendar = calendar;
exports.default = _default;

var _d3Array = require("d3-array");

var _d3Time = require("d3-time");

var _d3TimeFormat = require("d3-time-format");

var _array = require("./array");

var _continuous = _interopRequireWildcard(require("./continuous"));

var _init = require("./init");

var _nice = _interopRequireDefault(require("./nice"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var durationSecond = 1000,
    durationMinute = durationSecond * 60,
    durationHour = durationMinute * 60,
    durationDay = durationHour * 24,
    durationWeek = durationDay * 7,
    durationMonth = durationDay * 30,
    durationYear = durationDay * 365;

function date(t) {
  return new Date(t);
}

function number(t) {
  return t instanceof Date ? +t : +new Date(+t);
}

function calendar(year, month, week, day, hour, minute, second, millisecond, format) {
  var scale = (0, _continuous.default)(_continuous.identity, _continuous.identity),
      invert = scale.invert,
      domain = scale.domain;
  var formatMillisecond = format(".%L"),
      formatSecond = format(":%S"),
      formatMinute = format("%I:%M"),
      formatHour = format("%I %p"),
      formatDay = format("%a %d"),
      formatWeek = format("%b %d"),
      formatMonth = format("%B"),
      formatYear = format("%Y");
  var tickIntervals = [[second, 1, durationSecond], [second, 5, 5 * durationSecond], [second, 15, 15 * durationSecond], [second, 30, 30 * durationSecond], [minute, 1, durationMinute], [minute, 5, 5 * durationMinute], [minute, 15, 15 * durationMinute], [minute, 30, 30 * durationMinute], [hour, 1, durationHour], [hour, 3, 3 * durationHour], [hour, 6, 6 * durationHour], [hour, 12, 12 * durationHour], [day, 1, durationDay], [day, 2, 2 * durationDay], [week, 1, durationWeek], [month, 1, durationMonth], [month, 3, 3 * durationMonth], [year, 1, durationYear]];

  function tickFormat(date) {
    return (second(date) < date ? formatMillisecond : minute(date) < date ? formatSecond : hour(date) < date ? formatMinute : day(date) < date ? formatHour : month(date) < date ? week(date) < date ? formatDay : formatWeek : year(date) < date ? formatMonth : formatYear)(date);
  }

  function tickInterval(interval, start, stop, step) {
    if (interval == null) interval = 10; // If a desired tick count is specified, pick a reasonable tick interval
    // based on the extent of the domain and a rough estimate of tick size.
    // Otherwise, assume interval is already a time interval and use it.

    if (typeof interval === "number") {
      var target = Math.abs(stop - start) / interval,
          i = (0, _d3Array.bisector)(function (i) {
        return i[2];
      }).right(tickIntervals, target);

      if (i === tickIntervals.length) {
        step = (0, _d3Array.tickStep)(start / durationYear, stop / durationYear, interval);
        interval = year;
      } else if (i) {
        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];
        step = i[1];
        interval = i[0];
      } else {
        step = Math.max((0, _d3Array.tickStep)(start, stop, interval), 1);
        interval = millisecond;
      }
    }

    return step == null ? interval : interval.every(step);
  }

  scale.invert = function (y) {
    return new Date(invert(y));
  };

  scale.domain = function (_) {
    return arguments.length ? domain(_array.map.call(_, number)) : domain().map(date);
  };

  scale.ticks = function (interval, step) {
    var d = domain(),
        t0 = d[0],
        t1 = d[d.length - 1],
        r = t1 < t0,
        t;
    if (r) t = t0, t0 = t1, t1 = t;
    t = tickInterval(interval, t0, t1, step);
    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop

    return r ? t.reverse() : t;
  };

  scale.tickFormat = function (count, specifier) {
    return specifier == null ? tickFormat : format(specifier);
  };

  scale.nice = function (interval, step) {
    var d = domain();
    return (interval = tickInterval(interval, d[0], d[d.length - 1], step)) ? domain((0, _nice.default)(d, interval)) : scale;
  };

  scale.copy = function () {
    return (0, _continuous.copy)(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));
  };

  return scale;
}

function _default() {
  return _init.initRange.apply(calendar(_d3Time.timeYear, _d3Time.timeMonth, _d3Time.timeWeek, _d3Time.timeDay, _d3Time.timeHour, _d3Time.timeMinute, _d3Time.timeSecond, _d3Time.timeMillisecond, _d3TimeFormat.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);
}
},{"d3-array":"K0bd","d3-time":"hQYG","d3-time-format":"UYpZ","./array":"qoMs","./continuous":"CjJ5","./init":"buZa","./nice":"eMTM"}],"WrbA":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _time = require("./time");

var _d3TimeFormat = require("d3-time-format");

var _d3Time = require("d3-time");

var _init = require("./init");

function _default() {
  return _init.initRange.apply((0, _time.calendar)(_d3Time.utcYear, _d3Time.utcMonth, _d3Time.utcWeek, _d3Time.utcDay, _d3Time.utcHour, _d3Time.utcMinute, _d3Time.utcSecond, _d3Time.utcMillisecond, _d3TimeFormat.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]), arguments);
}
},{"./time":"kVXt","d3-time-format":"UYpZ","d3-time":"hQYG","./init":"buZa"}],"J7VY":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.copy = copy;
exports.default = sequential;
exports.sequentialLog = sequentialLog;
exports.sequentialSymlog = sequentialSymlog;
exports.sequentialPow = sequentialPow;
exports.sequentialSqrt = sequentialSqrt;

var _continuous = require("./continuous");

var _init = require("./init");

var _linear = require("./linear");

var _log = require("./log");

var _symlog = require("./symlog");

var _pow = require("./pow");

function transformer() {
  var x0 = 0,
      x1 = 1,
      t0,
      t1,
      k10,
      transform,
      interpolator = _continuous.identity,
      clamp = false,
      unknown;

  function scale(x) {
    return isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));
  }

  scale.domain = function (_) {
    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];
  };

  scale.clamp = function (_) {
    return arguments.length ? (clamp = !!_, scale) : clamp;
  };

  scale.interpolator = function (_) {
    return arguments.length ? (interpolator = _, scale) : interpolator;
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  return function (t) {
    transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);
    return scale;
  };
}

function copy(source, target) {
  return target.domain(source.domain()).interpolator(source.interpolator()).clamp(source.clamp()).unknown(source.unknown());
}

function sequential() {
  var scale = (0, _linear.linearish)(transformer()(_continuous.identity));

  scale.copy = function () {
    return copy(scale, sequential());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function sequentialLog() {
  var scale = (0, _log.loggish)(transformer()).domain([1, 10]);

  scale.copy = function () {
    return copy(scale, sequentialLog()).base(scale.base());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function sequentialSymlog() {
  var scale = (0, _symlog.symlogish)(transformer());

  scale.copy = function () {
    return copy(scale, sequentialSymlog()).constant(scale.constant());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function sequentialPow() {
  var scale = (0, _pow.powish)(transformer());

  scale.copy = function () {
    return copy(scale, sequentialPow()).exponent(scale.exponent());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function sequentialSqrt() {
  return sequentialPow.apply(null, arguments).exponent(0.5);
}
},{"./continuous":"CjJ5","./init":"buZa","./linear":"LIJk","./log":"ea59","./symlog":"nanU","./pow":"xeRN"}],"XYTZ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = sequentialQuantile;

var _d3Array = require("d3-array");

var _continuous = require("./continuous");

var _init = require("./init");

function sequentialQuantile() {
  var domain = [],
      interpolator = _continuous.identity;

  function scale(x) {
    if (!isNaN(x = +x)) return interpolator(((0, _d3Array.bisect)(domain, x) - 1) / (domain.length - 1));
  }

  scale.domain = function (_) {
    if (!arguments.length) return domain.slice();
    domain = [];

    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);

    domain.sort(_d3Array.ascending);
    return scale;
  };

  scale.interpolator = function (_) {
    return arguments.length ? (interpolator = _, scale) : interpolator;
  };

  scale.copy = function () {
    return sequentialQuantile(interpolator).domain(domain);
  };

  return _init.initInterpolator.apply(scale, arguments);
}
},{"d3-array":"K0bd","./continuous":"CjJ5","./init":"buZa"}],"CLse":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = diverging;
exports.divergingLog = divergingLog;
exports.divergingSymlog = divergingSymlog;
exports.divergingPow = divergingPow;
exports.divergingSqrt = divergingSqrt;

var _continuous = require("./continuous");

var _init = require("./init");

var _linear = require("./linear");

var _log = require("./log");

var _sequential = require("./sequential");

var _symlog = require("./symlog");

var _pow = require("./pow");

function transformer() {
  var x0 = 0,
      x1 = 0.5,
      x2 = 1,
      t0,
      t1,
      t2,
      k10,
      k21,
      interpolator = _continuous.identity,
      transform,
      clamp = false,
      unknown;

  function scale(x) {
    return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (x < t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));
  }

  scale.domain = function (_) {
    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), t2 = transform(x2 = +_[2]), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), scale) : [x0, x1, x2];
  };

  scale.clamp = function (_) {
    return arguments.length ? (clamp = !!_, scale) : clamp;
  };

  scale.interpolator = function (_) {
    return arguments.length ? (interpolator = _, scale) : interpolator;
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  return function (t) {
    transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1);
    return scale;
  };
}

function diverging() {
  var scale = (0, _linear.linearish)(transformer()(_continuous.identity));

  scale.copy = function () {
    return (0, _sequential.copy)(scale, diverging());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function divergingLog() {
  var scale = (0, _log.loggish)(transformer()).domain([0.1, 1, 10]);

  scale.copy = function () {
    return (0, _sequential.copy)(scale, divergingLog()).base(scale.base());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function divergingSymlog() {
  var scale = (0, _symlog.symlogish)(transformer());

  scale.copy = function () {
    return (0, _sequential.copy)(scale, divergingSymlog()).constant(scale.constant());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function divergingPow() {
  var scale = (0, _pow.powish)(transformer());

  scale.copy = function () {
    return (0, _sequential.copy)(scale, divergingPow()).exponent(scale.exponent());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function divergingSqrt() {
  return divergingPow.apply(null, arguments).exponent(0.5);
}
},{"./continuous":"CjJ5","./init":"buZa","./linear":"LIJk","./log":"ea59","./sequential":"J7VY","./symlog":"nanU","./pow":"xeRN"}],"zL2z":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "scaleBand", {
  enumerable: true,
  get: function () {
    return _band.default;
  }
});
Object.defineProperty(exports, "scalePoint", {
  enumerable: true,
  get: function () {
    return _band.point;
  }
});
Object.defineProperty(exports, "scaleIdentity", {
  enumerable: true,
  get: function () {
    return _identity.default;
  }
});
Object.defineProperty(exports, "scaleLinear", {
  enumerable: true,
  get: function () {
    return _linear.default;
  }
});
Object.defineProperty(exports, "scaleLog", {
  enumerable: true,
  get: function () {
    return _log.default;
  }
});
Object.defineProperty(exports, "scaleSymlog", {
  enumerable: true,
  get: function () {
    return _symlog.default;
  }
});
Object.defineProperty(exports, "scaleOrdinal", {
  enumerable: true,
  get: function () {
    return _ordinal.default;
  }
});
Object.defineProperty(exports, "scaleImplicit", {
  enumerable: true,
  get: function () {
    return _ordinal.implicit;
  }
});
Object.defineProperty(exports, "scalePow", {
  enumerable: true,
  get: function () {
    return _pow.default;
  }
});
Object.defineProperty(exports, "scaleSqrt", {
  enumerable: true,
  get: function () {
    return _pow.sqrt;
  }
});
Object.defineProperty(exports, "scaleQuantile", {
  enumerable: true,
  get: function () {
    return _quantile.default;
  }
});
Object.defineProperty(exports, "scaleQuantize", {
  enumerable: true,
  get: function () {
    return _quantize.default;
  }
});
Object.defineProperty(exports, "scaleThreshold", {
  enumerable: true,
  get: function () {
    return _threshold.default;
  }
});
Object.defineProperty(exports, "scaleTime", {
  enumerable: true,
  get: function () {
    return _time.default;
  }
});
Object.defineProperty(exports, "scaleUtc", {
  enumerable: true,
  get: function () {
    return _utcTime.default;
  }
});
Object.defineProperty(exports, "scaleSequential", {
  enumerable: true,
  get: function () {
    return _sequential.default;
  }
});
Object.defineProperty(exports, "scaleSequentialLog", {
  enumerable: true,
  get: function () {
    return _sequential.sequentialLog;
  }
});
Object.defineProperty(exports, "scaleSequentialPow", {
  enumerable: true,
  get: function () {
    return _sequential.sequentialPow;
  }
});
Object.defineProperty(exports, "scaleSequentialSqrt", {
  enumerable: true,
  get: function () {
    return _sequential.sequentialSqrt;
  }
});
Object.defineProperty(exports, "scaleSequentialSymlog", {
  enumerable: true,
  get: function () {
    return _sequential.sequentialSymlog;
  }
});
Object.defineProperty(exports, "scaleSequentialQuantile", {
  enumerable: true,
  get: function () {
    return _sequentialQuantile.default;
  }
});
Object.defineProperty(exports, "scaleDiverging", {
  enumerable: true,
  get: function () {
    return _diverging.default;
  }
});
Object.defineProperty(exports, "scaleDivergingLog", {
  enumerable: true,
  get: function () {
    return _diverging.divergingLog;
  }
});
Object.defineProperty(exports, "scaleDivergingPow", {
  enumerable: true,
  get: function () {
    return _diverging.divergingPow;
  }
});
Object.defineProperty(exports, "scaleDivergingSqrt", {
  enumerable: true,
  get: function () {
    return _diverging.divergingSqrt;
  }
});
Object.defineProperty(exports, "scaleDivergingSymlog", {
  enumerable: true,
  get: function () {
    return _diverging.divergingSymlog;
  }
});
Object.defineProperty(exports, "tickFormat", {
  enumerable: true,
  get: function () {
    return _tickFormat.default;
  }
});

var _band = _interopRequireWildcard(require("./band"));

var _identity = _interopRequireDefault(require("./identity"));

var _linear = _interopRequireDefault(require("./linear"));

var _log = _interopRequireDefault(require("./log"));

var _symlog = _interopRequireDefault(require("./symlog"));

var _ordinal = _interopRequireWildcard(require("./ordinal"));

var _pow = _interopRequireWildcard(require("./pow"));

var _quantile = _interopRequireDefault(require("./quantile"));

var _quantize = _interopRequireDefault(require("./quantize"));

var _threshold = _interopRequireDefault(require("./threshold"));

var _time = _interopRequireDefault(require("./time"));

var _utcTime = _interopRequireDefault(require("./utcTime"));

var _sequential = _interopRequireWildcard(require("./sequential"));

var _sequentialQuantile = _interopRequireDefault(require("./sequentialQuantile"));

var _diverging = _interopRequireWildcard(require("./diverging"));

var _tickFormat = _interopRequireDefault(require("./tickFormat"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"./band":"BAgl","./identity":"FKHe","./linear":"LIJk","./log":"ea59","./symlog":"nanU","./ordinal":"GjLX","./pow":"xeRN","./quantile":"AGCd","./quantize":"d6Xk","./threshold":"I63C","./time":"kVXt","./utcTime":"WrbA","./sequential":"J7VY","./sequentialQuantile":"XYTZ","./diverging":"CLse","./tickFormat":"qjRa"}],"xz73":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(specifier) {
  var n = specifier.length / 6 | 0,
      colors = new Array(n),
      i = 0;

  while (i < n) colors[i] = "#" + specifier.slice(i * 6, ++i * 6);

  return colors;
}
},{}],"dTYe":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf");

exports.default = _default;
},{"../colors.js":"xz73"}],"o8vx":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666");

exports.default = _default;
},{"../colors.js":"xz73"}],"regV":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666");

exports.default = _default;
},{"../colors.js":"xz73"}],"E9sC":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928");

exports.default = _default;
},{"../colors.js":"xz73"}],"RCRU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2");

exports.default = _default;
},{"../colors.js":"xz73"}],"QfGF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc");

exports.default = _default;
},{"../colors.js":"xz73"}],"IldB":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999");

exports.default = _default;
},{"../colors.js":"xz73"}],"KR9o":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3");

exports.default = _default;
},{"../colors.js":"xz73"}],"XNXw":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f");

exports.default = _default;
},{"../colors.js":"xz73"}],"FyyB":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab");

exports.default = _default;
},{"../colors.js":"xz73"}],"MNyl":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Interpolate = require("d3-interpolate");

function _default(scheme) {
  return (0, _d3Interpolate.interpolateRgbBasis)(scheme[scheme.length - 1]);
}
},{"d3-interpolate":"k9aH"}],"ArEB":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("d8b365f5f5f55ab4ac", "a6611adfc27d80cdc1018571", "a6611adfc27df5f5f580cdc1018571", "8c510ad8b365f6e8c3c7eae55ab4ac01665e", "8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e", "8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e", "8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e", "5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30", "5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"kzYK":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("af8dc3f7f7f77fbf7b", "7b3294c2a5cfa6dba0008837", "7b3294c2a5cff7f7f7a6dba0008837", "762a83af8dc3e7d4e8d9f0d37fbf7b1b7837", "762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837", "762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837", "762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837", "40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b", "40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"PI8x":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("e9a3c9f7f7f7a1d76a", "d01c8bf1b6dab8e1864dac26", "d01c8bf1b6daf7f7f7b8e1864dac26", "c51b7de9a3c9fde0efe6f5d0a1d76a4d9221", "c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221", "c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221", "c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221", "8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419", "8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"h8TC":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("998ec3f7f7f7f1a340", "5e3c99b2abd2fdb863e66101", "5e3c99b2abd2f7f7f7fdb863e66101", "542788998ec3d8daebfee0b6f1a340b35806", "542788998ec3d8daebf7f7f7fee0b6f1a340b35806", "5427888073acb2abd2d8daebfee0b6fdb863e08214b35806", "5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806", "2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08", "2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"i3rG":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("ef8a62f7f7f767a9cf", "ca0020f4a58292c5de0571b0", "ca0020f4a582f7f7f792c5de0571b0", "b2182bef8a62fddbc7d1e5f067a9cf2166ac", "b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac", "b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac", "b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac", "67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061", "67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"WaJg":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("ef8a62ffffff999999", "ca0020f4a582bababa404040", "ca0020f4a582ffffffbababa404040", "b2182bef8a62fddbc7e0e0e09999994d4d4d", "b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d", "b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d", "b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d", "67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a", "67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"JvsS":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fc8d59ffffbf91bfdb", "d7191cfdae61abd9e92c7bb6", "d7191cfdae61ffffbfabd9e92c7bb6", "d73027fc8d59fee090e0f3f891bfdb4575b4", "d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4", "d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4", "d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4", "a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695", "a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"K9lw":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fc8d59ffffbf91cf60", "d7191cfdae61a6d96a1a9641", "d7191cfdae61ffffbfa6d96a1a9641", "d73027fc8d59fee08bd9ef8b91cf601a9850", "d73027fc8d59fee08bffffbfd9ef8b91cf601a9850", "d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850", "d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850", "a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837", "a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"rXym":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fc8d59ffffbf99d594", "d7191cfdae61abdda42b83ba", "d7191cfdae61ffffbfabdda42b83ba", "d53e4ffc8d59fee08be6f59899d5943288bd", "d53e4ffc8d59fee08bffffbfe6f59899d5943288bd", "d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd", "d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd", "9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2", "9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"KGBO":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("e5f5f999d8c92ca25f", "edf8fbb2e2e266c2a4238b45", "edf8fbb2e2e266c2a42ca25f006d2c", "edf8fbccece699d8c966c2a42ca25f006d2c", "edf8fbccece699d8c966c2a441ae76238b45005824", "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824", "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"lAoh":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("e0ecf49ebcda8856a7", "edf8fbb3cde38c96c688419d", "edf8fbb3cde38c96c68856a7810f7c", "edf8fbbfd3e69ebcda8c96c68856a7810f7c", "edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b", "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b", "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"ZoIf":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("e0f3dba8ddb543a2ca", "f0f9e8bae4bc7bccc42b8cbe", "f0f9e8bae4bc7bccc443a2ca0868ac", "f0f9e8ccebc5a8ddb57bccc443a2ca0868ac", "f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e", "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e", "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"SiOD":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fee8c8fdbb84e34a33", "fef0d9fdcc8afc8d59d7301f", "fef0d9fdcc8afc8d59e34a33b30000", "fef0d9fdd49efdbb84fc8d59e34a33b30000", "fef0d9fdd49efdbb84fc8d59ef6548d7301f990000", "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000", "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"vp6S":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("ece2f0a6bddb1c9099", "f6eff7bdc9e167a9cf02818a", "f6eff7bdc9e167a9cf1c9099016c59", "f6eff7d0d1e6a6bddb67a9cf1c9099016c59", "f6eff7d0d1e6a6bddb67a9cf3690c002818a016450", "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450", "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"Wfss":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("ece7f2a6bddb2b8cbe", "f1eef6bdc9e174a9cf0570b0", "f1eef6bdc9e174a9cf2b8cbe045a8d", "f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d", "f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b", "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b", "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"NZPG":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("e7e1efc994c7dd1c77", "f1eef6d7b5d8df65b0ce1256", "f1eef6d7b5d8df65b0dd1c77980043", "f1eef6d4b9dac994c7df65b0dd1c77980043", "f1eef6d4b9dac994c7df65b0e7298ace125691003f", "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f", "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"fzkB":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fde0ddfa9fb5c51b8a", "feebe2fbb4b9f768a1ae017e", "feebe2fbb4b9f768a1c51b8a7a0177", "feebe2fcc5c0fa9fb5f768a1c51b8a7a0177", "feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177", "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177", "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"fL1Z":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("edf8b17fcdbb2c7fb8", "ffffcca1dab441b6c4225ea8", "ffffcca1dab441b6c42c7fb8253494", "ffffccc7e9b47fcdbb41b6c42c7fb8253494", "ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84", "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84", "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"xEGO":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("f7fcb9addd8e31a354", "ffffccc2e69978c679238443", "ffffccc2e69978c67931a354006837", "ffffccd9f0a3addd8e78c67931a354006837", "ffffccd9f0a3addd8e78c67941ab5d238443005a32", "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32", "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"BmdO":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fff7bcfec44fd95f0e", "ffffd4fed98efe9929cc4c02", "ffffd4fed98efe9929d95f0e993404", "ffffd4fee391fec44ffe9929d95f0e993404", "ffffd4fee391fec44ffe9929ec7014cc4c028c2d04", "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04", "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"SHo5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("ffeda0feb24cf03b20", "ffffb2fecc5cfd8d3ce31a1c", "ffffb2fecc5cfd8d3cf03b20bd0026", "ffffb2fed976feb24cfd8d3cf03b20bd0026", "ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026", "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026", "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"jpg6":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("deebf79ecae13182bd", "eff3ffbdd7e76baed62171b5", "eff3ffbdd7e76baed63182bd08519c", "eff3ffc6dbef9ecae16baed63182bd08519c", "eff3ffc6dbef9ecae16baed64292c62171b5084594", "f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594", "f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"rjqF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("e5f5e0a1d99b31a354", "edf8e9bae4b374c476238b45", "edf8e9bae4b374c47631a354006d2c", "edf8e9c7e9c0a1d99b74c47631a354006d2c", "edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32", "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32", "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"x8Iu":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("f0f0f0bdbdbd636363", "f7f7f7cccccc969696525252", "f7f7f7cccccc969696636363252525", "f7f7f7d9d9d9bdbdbd969696636363252525", "f7f7f7d9d9d9bdbdbd969696737373525252252525", "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525", "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"MJdW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("efedf5bcbddc756bb1", "f2f0f7cbc9e29e9ac86a51a3", "f2f0f7cbc9e29e9ac8756bb154278f", "f2f0f7dadaebbcbddc9e9ac8756bb154278f", "f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486", "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486", "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"DiEh":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fee0d2fc9272de2d26", "fee5d9fcae91fb6a4acb181d", "fee5d9fcae91fb6a4ade2d26a50f15", "fee5d9fcbba1fc9272fb6a4ade2d26a50f15", "fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d", "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d", "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"O9hI":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fee6cefdae6be6550d", "feeddefdbe85fd8d3cd94701", "feeddefdbe85fd8d3ce6550da63603", "feeddefdd0a2fdae6bfd8d3ce6550da63603", "feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04", "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04", "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"SaPT":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(t) {
  t = Math.max(0, Math.min(1, t));
  return "rgb(" + Math.max(0, Math.min(255, Math.round(-4.54 - t * (35.34 - t * (2381.73 - t * (6402.7 - t * (7024.72 - t * 2710.57))))))) + ", " + Math.max(0, Math.min(255, Math.round(32.49 + t * (170.73 + t * (52.82 - t * (131.46 - t * (176.58 - t * 67.37))))))) + ", " + Math.max(0, Math.min(255, Math.round(81.24 + t * (442.36 - t * (2482.43 - t * (6167.24 - t * (6614.94 - t * 2475.67))))))) + ")";
}
},{}],"cI87":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _d3Color = require("d3-color");

var _d3Interpolate = require("d3-interpolate");

var _default = (0, _d3Interpolate.interpolateCubehelixLong)((0, _d3Color.cubehelix)(300, 0.5, 0.0), (0, _d3Color.cubehelix)(-240, 0.5, 1.0));

exports.default = _default;
},{"d3-color":"Peej","d3-interpolate":"k9aH"}],"BkJF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.cool = exports.warm = void 0;

var _d3Color = require("d3-color");

var _d3Interpolate = require("d3-interpolate");

var warm = (0, _d3Interpolate.interpolateCubehelixLong)((0, _d3Color.cubehelix)(-100, 0.75, 0.35), (0, _d3Color.cubehelix)(80, 1.50, 0.8));
exports.warm = warm;
var cool = (0, _d3Interpolate.interpolateCubehelixLong)((0, _d3Color.cubehelix)(260, 0.75, 0.35), (0, _d3Color.cubehelix)(80, 1.50, 0.8));
exports.cool = cool;
var c = (0, _d3Color.cubehelix)();

function _default(t) {
  if (t < 0 || t > 1) t -= Math.floor(t);
  var ts = Math.abs(t - 0.5);
  c.h = 360 * t - 100;
  c.s = 1.5 - 1.5 * ts;
  c.l = 0.8 - 0.9 * ts;
  return c + "";
}
},{"d3-color":"Peej","d3-interpolate":"k9aH"}],"ZXMu":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Color = require("d3-color");

var c = (0, _d3Color.rgb)(),
    pi_1_3 = Math.PI / 3,
    pi_2_3 = Math.PI * 2 / 3;

function _default(t) {
  var x;
  t = (0.5 - t) * Math.PI;
  c.r = 255 * (x = Math.sin(t)) * x;
  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;
  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;
  return c + "";
}
},{"d3-color":"Peej"}],"PX18":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(t) {
  t = Math.max(0, Math.min(1, t));
  return "rgb(" + Math.max(0, Math.min(255, Math.round(34.61 + t * (1172.33 - t * (10793.56 - t * (33300.12 - t * (38394.49 - t * 14825.05))))))) + ", " + Math.max(0, Math.min(255, Math.round(23.31 + t * (557.33 + t * (1225.33 - t * (3574.96 - t * (1073.77 + t * 707.56))))))) + ", " + Math.max(0, Math.min(255, Math.round(27.2 + t * (3211.1 - t * (15327.97 - t * (27814 - t * (22569.18 - t * 6838.66))))))) + ")";
}
},{}],"SfG7":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.plasma = exports.inferno = exports.magma = exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ramp(range) {
  var n = range.length;
  return function (t) {
    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];
  };
}

var _default = ramp((0, _colors.default)("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725"));

exports.default = _default;
var magma = ramp((0, _colors.default)("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf"));
exports.magma = magma;
var inferno = ramp((0, _colors.default)("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4"));
exports.inferno = inferno;
var plasma = ramp((0, _colors.default)("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));
exports.plasma = plasma;
},{"../colors.js":"xz73"}],"ado2":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "schemeCategory10", {
  enumerable: true,
  get: function () {
    return _category.default;
  }
});
Object.defineProperty(exports, "schemeAccent", {
  enumerable: true,
  get: function () {
    return _Accent.default;
  }
});
Object.defineProperty(exports, "schemeDark2", {
  enumerable: true,
  get: function () {
    return _Dark.default;
  }
});
Object.defineProperty(exports, "schemePaired", {
  enumerable: true,
  get: function () {
    return _Paired.default;
  }
});
Object.defineProperty(exports, "schemePastel1", {
  enumerable: true,
  get: function () {
    return _Pastel.default;
  }
});
Object.defineProperty(exports, "schemePastel2", {
  enumerable: true,
  get: function () {
    return _Pastel2.default;
  }
});
Object.defineProperty(exports, "schemeSet1", {
  enumerable: true,
  get: function () {
    return _Set.default;
  }
});
Object.defineProperty(exports, "schemeSet2", {
  enumerable: true,
  get: function () {
    return _Set2.default;
  }
});
Object.defineProperty(exports, "schemeSet3", {
  enumerable: true,
  get: function () {
    return _Set3.default;
  }
});
Object.defineProperty(exports, "schemeTableau10", {
  enumerable: true,
  get: function () {
    return _Tableau.default;
  }
});
Object.defineProperty(exports, "interpolateBrBG", {
  enumerable: true,
  get: function () {
    return _BrBG.default;
  }
});
Object.defineProperty(exports, "schemeBrBG", {
  enumerable: true,
  get: function () {
    return _BrBG.scheme;
  }
});
Object.defineProperty(exports, "interpolatePRGn", {
  enumerable: true,
  get: function () {
    return _PRGn.default;
  }
});
Object.defineProperty(exports, "schemePRGn", {
  enumerable: true,
  get: function () {
    return _PRGn.scheme;
  }
});
Object.defineProperty(exports, "interpolatePiYG", {
  enumerable: true,
  get: function () {
    return _PiYG.default;
  }
});
Object.defineProperty(exports, "schemePiYG", {
  enumerable: true,
  get: function () {
    return _PiYG.scheme;
  }
});
Object.defineProperty(exports, "interpolatePuOr", {
  enumerable: true,
  get: function () {
    return _PuOr.default;
  }
});
Object.defineProperty(exports, "schemePuOr", {
  enumerable: true,
  get: function () {
    return _PuOr.scheme;
  }
});
Object.defineProperty(exports, "interpolateRdBu", {
  enumerable: true,
  get: function () {
    return _RdBu.default;
  }
});
Object.defineProperty(exports, "schemeRdBu", {
  enumerable: true,
  get: function () {
    return _RdBu.scheme;
  }
});
Object.defineProperty(exports, "interpolateRdGy", {
  enumerable: true,
  get: function () {
    return _RdGy.default;
  }
});
Object.defineProperty(exports, "schemeRdGy", {
  enumerable: true,
  get: function () {
    return _RdGy.scheme;
  }
});
Object.defineProperty(exports, "interpolateRdYlBu", {
  enumerable: true,
  get: function () {
    return _RdYlBu.default;
  }
});
Object.defineProperty(exports, "schemeRdYlBu", {
  enumerable: true,
  get: function () {
    return _RdYlBu.scheme;
  }
});
Object.defineProperty(exports, "interpolateRdYlGn", {
  enumerable: true,
  get: function () {
    return _RdYlGn.default;
  }
});
Object.defineProperty(exports, "schemeRdYlGn", {
  enumerable: true,
  get: function () {
    return _RdYlGn.scheme;
  }
});
Object.defineProperty(exports, "interpolateSpectral", {
  enumerable: true,
  get: function () {
    return _Spectral.default;
  }
});
Object.defineProperty(exports, "schemeSpectral", {
  enumerable: true,
  get: function () {
    return _Spectral.scheme;
  }
});
Object.defineProperty(exports, "interpolateBuGn", {
  enumerable: true,
  get: function () {
    return _BuGn.default;
  }
});
Object.defineProperty(exports, "schemeBuGn", {
  enumerable: true,
  get: function () {
    return _BuGn.scheme;
  }
});
Object.defineProperty(exports, "interpolateBuPu", {
  enumerable: true,
  get: function () {
    return _BuPu.default;
  }
});
Object.defineProperty(exports, "schemeBuPu", {
  enumerable: true,
  get: function () {
    return _BuPu.scheme;
  }
});
Object.defineProperty(exports, "interpolateGnBu", {
  enumerable: true,
  get: function () {
    return _GnBu.default;
  }
});
Object.defineProperty(exports, "schemeGnBu", {
  enumerable: true,
  get: function () {
    return _GnBu.scheme;
  }
});
Object.defineProperty(exports, "interpolateOrRd", {
  enumerable: true,
  get: function () {
    return _OrRd.default;
  }
});
Object.defineProperty(exports, "schemeOrRd", {
  enumerable: true,
  get: function () {
    return _OrRd.scheme;
  }
});
Object.defineProperty(exports, "interpolatePuBuGn", {
  enumerable: true,
  get: function () {
    return _PuBuGn.default;
  }
});
Object.defineProperty(exports, "schemePuBuGn", {
  enumerable: true,
  get: function () {
    return _PuBuGn.scheme;
  }
});
Object.defineProperty(exports, "interpolatePuBu", {
  enumerable: true,
  get: function () {
    return _PuBu.default;
  }
});
Object.defineProperty(exports, "schemePuBu", {
  enumerable: true,
  get: function () {
    return _PuBu.scheme;
  }
});
Object.defineProperty(exports, "interpolatePuRd", {
  enumerable: true,
  get: function () {
    return _PuRd.default;
  }
});
Object.defineProperty(exports, "schemePuRd", {
  enumerable: true,
  get: function () {
    return _PuRd.scheme;
  }
});
Object.defineProperty(exports, "interpolateRdPu", {
  enumerable: true,
  get: function () {
    return _RdPu.default;
  }
});
Object.defineProperty(exports, "schemeRdPu", {
  enumerable: true,
  get: function () {
    return _RdPu.scheme;
  }
});
Object.defineProperty(exports, "interpolateYlGnBu", {
  enumerable: true,
  get: function () {
    return _YlGnBu.default;
  }
});
Object.defineProperty(exports, "schemeYlGnBu", {
  enumerable: true,
  get: function () {
    return _YlGnBu.scheme;
  }
});
Object.defineProperty(exports, "interpolateYlGn", {
  enumerable: true,
  get: function () {
    return _YlGn.default;
  }
});
Object.defineProperty(exports, "schemeYlGn", {
  enumerable: true,
  get: function () {
    return _YlGn.scheme;
  }
});
Object.defineProperty(exports, "interpolateYlOrBr", {
  enumerable: true,
  get: function () {
    return _YlOrBr.default;
  }
});
Object.defineProperty(exports, "schemeYlOrBr", {
  enumerable: true,
  get: function () {
    return _YlOrBr.scheme;
  }
});
Object.defineProperty(exports, "interpolateYlOrRd", {
  enumerable: true,
  get: function () {
    return _YlOrRd.default;
  }
});
Object.defineProperty(exports, "schemeYlOrRd", {
  enumerable: true,
  get: function () {
    return _YlOrRd.scheme;
  }
});
Object.defineProperty(exports, "interpolateBlues", {
  enumerable: true,
  get: function () {
    return _Blues.default;
  }
});
Object.defineProperty(exports, "schemeBlues", {
  enumerable: true,
  get: function () {
    return _Blues.scheme;
  }
});
Object.defineProperty(exports, "interpolateGreens", {
  enumerable: true,
  get: function () {
    return _Greens.default;
  }
});
Object.defineProperty(exports, "schemeGreens", {
  enumerable: true,
  get: function () {
    return _Greens.scheme;
  }
});
Object.defineProperty(exports, "interpolateGreys", {
  enumerable: true,
  get: function () {
    return _Greys.default;
  }
});
Object.defineProperty(exports, "schemeGreys", {
  enumerable: true,
  get: function () {
    return _Greys.scheme;
  }
});
Object.defineProperty(exports, "interpolatePurples", {
  enumerable: true,
  get: function () {
    return _Purples.default;
  }
});
Object.defineProperty(exports, "schemePurples", {
  enumerable: true,
  get: function () {
    return _Purples.scheme;
  }
});
Object.defineProperty(exports, "interpolateReds", {
  enumerable: true,
  get: function () {
    return _Reds.default;
  }
});
Object.defineProperty(exports, "schemeReds", {
  enumerable: true,
  get: function () {
    return _Reds.scheme;
  }
});
Object.defineProperty(exports, "interpolateOranges", {
  enumerable: true,
  get: function () {
    return _Oranges.default;
  }
});
Object.defineProperty(exports, "schemeOranges", {
  enumerable: true,
  get: function () {
    return _Oranges.scheme;
  }
});
Object.defineProperty(exports, "interpolateCividis", {
  enumerable: true,
  get: function () {
    return _cividis.default;
  }
});
Object.defineProperty(exports, "interpolateCubehelixDefault", {
  enumerable: true,
  get: function () {
    return _cubehelix.default;
  }
});
Object.defineProperty(exports, "interpolateRainbow", {
  enumerable: true,
  get: function () {
    return _rainbow.default;
  }
});
Object.defineProperty(exports, "interpolateWarm", {
  enumerable: true,
  get: function () {
    return _rainbow.warm;
  }
});
Object.defineProperty(exports, "interpolateCool", {
  enumerable: true,
  get: function () {
    return _rainbow.cool;
  }
});
Object.defineProperty(exports, "interpolateSinebow", {
  enumerable: true,
  get: function () {
    return _sinebow.default;
  }
});
Object.defineProperty(exports, "interpolateTurbo", {
  enumerable: true,
  get: function () {
    return _turbo.default;
  }
});
Object.defineProperty(exports, "interpolateViridis", {
  enumerable: true,
  get: function () {
    return _viridis.default;
  }
});
Object.defineProperty(exports, "interpolateMagma", {
  enumerable: true,
  get: function () {
    return _viridis.magma;
  }
});
Object.defineProperty(exports, "interpolateInferno", {
  enumerable: true,
  get: function () {
    return _viridis.inferno;
  }
});
Object.defineProperty(exports, "interpolatePlasma", {
  enumerable: true,
  get: function () {
    return _viridis.plasma;
  }
});

var _category = _interopRequireDefault(require("./categorical/category10.js"));

var _Accent = _interopRequireDefault(require("./categorical/Accent.js"));

var _Dark = _interopRequireDefault(require("./categorical/Dark2.js"));

var _Paired = _interopRequireDefault(require("./categorical/Paired.js"));

var _Pastel = _interopRequireDefault(require("./categorical/Pastel1.js"));

var _Pastel2 = _interopRequireDefault(require("./categorical/Pastel2.js"));

var _Set = _interopRequireDefault(require("./categorical/Set1.js"));

var _Set2 = _interopRequireDefault(require("./categorical/Set2.js"));

var _Set3 = _interopRequireDefault(require("./categorical/Set3.js"));

var _Tableau = _interopRequireDefault(require("./categorical/Tableau10.js"));

var _BrBG = _interopRequireWildcard(require("./diverging/BrBG.js"));

var _PRGn = _interopRequireWildcard(require("./diverging/PRGn.js"));

var _PiYG = _interopRequireWildcard(require("./diverging/PiYG.js"));

var _PuOr = _interopRequireWildcard(require("./diverging/PuOr.js"));

var _RdBu = _interopRequireWildcard(require("./diverging/RdBu.js"));

var _RdGy = _interopRequireWildcard(require("./diverging/RdGy.js"));

var _RdYlBu = _interopRequireWildcard(require("./diverging/RdYlBu.js"));

var _RdYlGn = _interopRequireWildcard(require("./diverging/RdYlGn.js"));

var _Spectral = _interopRequireWildcard(require("./diverging/Spectral.js"));

var _BuGn = _interopRequireWildcard(require("./sequential-multi/BuGn.js"));

var _BuPu = _interopRequireWildcard(require("./sequential-multi/BuPu.js"));

var _GnBu = _interopRequireWildcard(require("./sequential-multi/GnBu.js"));

var _OrRd = _interopRequireWildcard(require("./sequential-multi/OrRd.js"));

var _PuBuGn = _interopRequireWildcard(require("./sequential-multi/PuBuGn.js"));

var _PuBu = _interopRequireWildcard(require("./sequential-multi/PuBu.js"));

var _PuRd = _interopRequireWildcard(require("./sequential-multi/PuRd.js"));

var _RdPu = _interopRequireWildcard(require("./sequential-multi/RdPu.js"));

var _YlGnBu = _interopRequireWildcard(require("./sequential-multi/YlGnBu.js"));

var _YlGn = _interopRequireWildcard(require("./sequential-multi/YlGn.js"));

var _YlOrBr = _interopRequireWildcard(require("./sequential-multi/YlOrBr.js"));

var _YlOrRd = _interopRequireWildcard(require("./sequential-multi/YlOrRd.js"));

var _Blues = _interopRequireWildcard(require("./sequential-single/Blues.js"));

var _Greens = _interopRequireWildcard(require("./sequential-single/Greens.js"));

var _Greys = _interopRequireWildcard(require("./sequential-single/Greys.js"));

var _Purples = _interopRequireWildcard(require("./sequential-single/Purples.js"));

var _Reds = _interopRequireWildcard(require("./sequential-single/Reds.js"));

var _Oranges = _interopRequireWildcard(require("./sequential-single/Oranges.js"));

var _cividis = _interopRequireDefault(require("./sequential-multi/cividis.js"));

var _cubehelix = _interopRequireDefault(require("./sequential-multi/cubehelix.js"));

var _rainbow = _interopRequireWildcard(require("./sequential-multi/rainbow.js"));

var _sinebow = _interopRequireDefault(require("./sequential-multi/sinebow.js"));

var _turbo = _interopRequireDefault(require("./sequential-multi/turbo.js"));

var _viridis = _interopRequireWildcard(require("./sequential-multi/viridis.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./categorical/category10.js":"dTYe","./categorical/Accent.js":"o8vx","./categorical/Dark2.js":"regV","./categorical/Paired.js":"E9sC","./categorical/Pastel1.js":"RCRU","./categorical/Pastel2.js":"QfGF","./categorical/Set1.js":"IldB","./categorical/Set2.js":"KR9o","./categorical/Set3.js":"XNXw","./categorical/Tableau10.js":"FyyB","./diverging/BrBG.js":"ArEB","./diverging/PRGn.js":"kzYK","./diverging/PiYG.js":"PI8x","./diverging/PuOr.js":"h8TC","./diverging/RdBu.js":"i3rG","./diverging/RdGy.js":"WaJg","./diverging/RdYlBu.js":"JvsS","./diverging/RdYlGn.js":"K9lw","./diverging/Spectral.js":"rXym","./sequential-multi/BuGn.js":"KGBO","./sequential-multi/BuPu.js":"lAoh","./sequential-multi/GnBu.js":"ZoIf","./sequential-multi/OrRd.js":"SiOD","./sequential-multi/PuBuGn.js":"vp6S","./sequential-multi/PuBu.js":"Wfss","./sequential-multi/PuRd.js":"NZPG","./sequential-multi/RdPu.js":"fzkB","./sequential-multi/YlGnBu.js":"fL1Z","./sequential-multi/YlGn.js":"xEGO","./sequential-multi/YlOrBr.js":"BmdO","./sequential-multi/YlOrRd.js":"SHo5","./sequential-single/Blues.js":"jpg6","./sequential-single/Greens.js":"rjqF","./sequential-single/Greys.js":"x8Iu","./sequential-single/Purples.js":"MJdW","./sequential-single/Reds.js":"DiEh","./sequential-single/Oranges.js":"O9hI","./sequential-multi/cividis.js":"SaPT","./sequential-multi/cubehelix.js":"cI87","./sequential-multi/rainbow.js":"BkJF","./sequential-multi/sinebow.js":"ZXMu","./sequential-multi/turbo.js":"PX18","./sequential-multi/viridis.js":"SfG7"}],"ezXE":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return function constant() {
    return x;
  };
}
},{}],"kIKs":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.acos = acos;
exports.asin = asin;
exports.tau = exports.halfPi = exports.pi = exports.epsilon = exports.sqrt = exports.sin = exports.min = exports.max = exports.cos = exports.atan2 = exports.abs = void 0;
var abs = Math.abs;
exports.abs = abs;
var atan2 = Math.atan2;
exports.atan2 = atan2;
var cos = Math.cos;
exports.cos = cos;
var max = Math.max;
exports.max = max;
var min = Math.min;
exports.min = min;
var sin = Math.sin;
exports.sin = sin;
var sqrt = Math.sqrt;
exports.sqrt = sqrt;
var epsilon = 1e-12;
exports.epsilon = epsilon;
var pi = Math.PI;
exports.pi = pi;
var halfPi = pi / 2;
exports.halfPi = halfPi;
var tau = 2 * pi;
exports.tau = tau;

function acos(x) {
  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);
}

function asin(x) {
  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);
}
},{}],"BL7I":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Path = require("d3-path");

var _constant = _interopRequireDefault(require("./constant.js"));

var _math = require("./math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function arcInnerRadius(d) {
  return d.innerRadius;
}

function arcOuterRadius(d) {
  return d.outerRadius;
}

function arcStartAngle(d) {
  return d.startAngle;
}

function arcEndAngle(d) {
  return d.endAngle;
}

function arcPadAngle(d) {
  return d && d.padAngle; // Note: optional!
}

function intersect(x0, y0, x1, y1, x2, y2, x3, y3) {
  var x10 = x1 - x0,
      y10 = y1 - y0,
      x32 = x3 - x2,
      y32 = y3 - y2,
      t = y32 * x10 - x32 * y10;
  if (t * t < _math.epsilon) return;
  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;
  return [x0 + t * x10, y0 + t * y10];
} // Compute perpendicular offset line of length rc.
// http://mathworld.wolfram.com/Circle-LineIntersection.html


function cornerTangents(x0, y0, x1, y1, r1, rc, cw) {
  var x01 = x0 - x1,
      y01 = y0 - y1,
      lo = (cw ? rc : -rc) / (0, _math.sqrt)(x01 * x01 + y01 * y01),
      ox = lo * y01,
      oy = -lo * x01,
      x11 = x0 + ox,
      y11 = y0 + oy,
      x10 = x1 + ox,
      y10 = y1 + oy,
      x00 = (x11 + x10) / 2,
      y00 = (y11 + y10) / 2,
      dx = x10 - x11,
      dy = y10 - y11,
      d2 = dx * dx + dy * dy,
      r = r1 - rc,
      D = x11 * y10 - x10 * y11,
      d = (dy < 0 ? -1 : 1) * (0, _math.sqrt)((0, _math.max)(0, r * r * d2 - D * D)),
      cx0 = (D * dy - dx * d) / d2,
      cy0 = (-D * dx - dy * d) / d2,
      cx1 = (D * dy + dx * d) / d2,
      cy1 = (-D * dx + dy * d) / d2,
      dx0 = cx0 - x00,
      dy0 = cy0 - y00,
      dx1 = cx1 - x00,
      dy1 = cy1 - y00; // Pick the closer of the two intersection points.
  // TODO Is there a faster way to determine which intersection to use?

  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;
  return {
    cx: cx0,
    cy: cy0,
    x01: -ox,
    y01: -oy,
    x11: cx0 * (r1 / r - 1),
    y11: cy0 * (r1 / r - 1)
  };
}

function _default() {
  var innerRadius = arcInnerRadius,
      outerRadius = arcOuterRadius,
      cornerRadius = (0, _constant.default)(0),
      padRadius = null,
      startAngle = arcStartAngle,
      endAngle = arcEndAngle,
      padAngle = arcPadAngle,
      context = null;

  function arc() {
    var buffer,
        r,
        r0 = +innerRadius.apply(this, arguments),
        r1 = +outerRadius.apply(this, arguments),
        a0 = startAngle.apply(this, arguments) - _math.halfPi,
        a1 = endAngle.apply(this, arguments) - _math.halfPi,
        da = (0, _math.abs)(a1 - a0),
        cw = a1 > a0;

    if (!context) context = buffer = (0, _d3Path.path)(); // Ensure that the outer radius is always larger than the inner radius.

    if (r1 < r0) r = r1, r1 = r0, r0 = r; // Is it a point?

    if (!(r1 > _math.epsilon)) context.moveTo(0, 0); // Or is it a circle or annulus?
    else if (da > _math.tau - _math.epsilon) {
        context.moveTo(r1 * (0, _math.cos)(a0), r1 * (0, _math.sin)(a0));
        context.arc(0, 0, r1, a0, a1, !cw);

        if (r0 > _math.epsilon) {
          context.moveTo(r0 * (0, _math.cos)(a1), r0 * (0, _math.sin)(a1));
          context.arc(0, 0, r0, a1, a0, cw);
        }
      } // Or is it a circular or annular sector?
      else {
          var a01 = a0,
              a11 = a1,
              a00 = a0,
              a10 = a1,
              da0 = da,
              da1 = da,
              ap = padAngle.apply(this, arguments) / 2,
              rp = ap > _math.epsilon && (padRadius ? +padRadius.apply(this, arguments) : (0, _math.sqrt)(r0 * r0 + r1 * r1)),
              rc = (0, _math.min)((0, _math.abs)(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),
              rc0 = rc,
              rc1 = rc,
              t0,
              t1; // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.

          if (rp > _math.epsilon) {
            var p0 = (0, _math.asin)(rp / r0 * (0, _math.sin)(ap)),
                p1 = (0, _math.asin)(rp / r1 * (0, _math.sin)(ap));
            if ((da0 -= p0 * 2) > _math.epsilon) p0 *= cw ? 1 : -1, a00 += p0, a10 -= p0;else da0 = 0, a00 = a10 = (a0 + a1) / 2;
            if ((da1 -= p1 * 2) > _math.epsilon) p1 *= cw ? 1 : -1, a01 += p1, a11 -= p1;else da1 = 0, a01 = a11 = (a0 + a1) / 2;
          }

          var x01 = r1 * (0, _math.cos)(a01),
              y01 = r1 * (0, _math.sin)(a01),
              x10 = r0 * (0, _math.cos)(a10),
              y10 = r0 * (0, _math.sin)(a10); // Apply rounded corners?

          if (rc > _math.epsilon) {
            var x11 = r1 * (0, _math.cos)(a11),
                y11 = r1 * (0, _math.sin)(a11),
                x00 = r0 * (0, _math.cos)(a00),
                y00 = r0 * (0, _math.sin)(a00),
                oc; // Restrict the corner radius according to the sector angle.

            if (da < _math.pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {
              var ax = x01 - oc[0],
                  ay = y01 - oc[1],
                  bx = x11 - oc[0],
                  by = y11 - oc[1],
                  kc = 1 / (0, _math.sin)((0, _math.acos)((ax * bx + ay * by) / ((0, _math.sqrt)(ax * ax + ay * ay) * (0, _math.sqrt)(bx * bx + by * by))) / 2),
                  lc = (0, _math.sqrt)(oc[0] * oc[0] + oc[1] * oc[1]);
              rc0 = (0, _math.min)(rc, (r0 - lc) / (kc - 1));
              rc1 = (0, _math.min)(rc, (r1 - lc) / (kc + 1));
            }
          } // Is the sector collapsed to a line?


          if (!(da1 > _math.epsilon)) context.moveTo(x01, y01); // Does the sector’s outer ring have rounded corners?
          else if (rc1 > _math.epsilon) {
              t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);
              t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);
              context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01); // Have the corners merged?

              if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, (0, _math.atan2)(t0.y01, t0.x01), (0, _math.atan2)(t1.y01, t1.x01), !cw); // Otherwise, draw the two corners and the ring.
              else {
                  context.arc(t0.cx, t0.cy, rc1, (0, _math.atan2)(t0.y01, t0.x01), (0, _math.atan2)(t0.y11, t0.x11), !cw);
                  context.arc(0, 0, r1, (0, _math.atan2)(t0.cy + t0.y11, t0.cx + t0.x11), (0, _math.atan2)(t1.cy + t1.y11, t1.cx + t1.x11), !cw);
                  context.arc(t1.cx, t1.cy, rc1, (0, _math.atan2)(t1.y11, t1.x11), (0, _math.atan2)(t1.y01, t1.x01), !cw);
                }
            } // Or is the outer ring just a circular arc?
            else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw); // Is there no inner ring, and it’s a circular sector?
          // Or perhaps it’s an annular sector collapsed due to padding?

          if (!(r0 > _math.epsilon) || !(da0 > _math.epsilon)) context.lineTo(x10, y10); // Does the sector’s inner ring (or point) have rounded corners?
          else if (rc0 > _math.epsilon) {
              t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);
              t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);
              context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01); // Have the corners merged?

              if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, (0, _math.atan2)(t0.y01, t0.x01), (0, _math.atan2)(t1.y01, t1.x01), !cw); // Otherwise, draw the two corners and the ring.
              else {
                  context.arc(t0.cx, t0.cy, rc0, (0, _math.atan2)(t0.y01, t0.x01), (0, _math.atan2)(t0.y11, t0.x11), !cw);
                  context.arc(0, 0, r0, (0, _math.atan2)(t0.cy + t0.y11, t0.cx + t0.x11), (0, _math.atan2)(t1.cy + t1.y11, t1.cx + t1.x11), cw);
                  context.arc(t1.cx, t1.cy, rc0, (0, _math.atan2)(t1.y11, t1.x11), (0, _math.atan2)(t1.y01, t1.x01), !cw);
                }
            } // Or is the inner ring just a circular arc?
            else context.arc(0, 0, r0, a10, a00, cw);
        }
    context.closePath();
    if (buffer) return context = null, buffer + "" || null;
  }

  arc.centroid = function () {
    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,
        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - _math.pi / 2;
    return [(0, _math.cos)(a) * r, (0, _math.sin)(a) * r];
  };

  arc.innerRadius = function (_) {
    return arguments.length ? (innerRadius = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : innerRadius;
  };

  arc.outerRadius = function (_) {
    return arguments.length ? (outerRadius = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : outerRadius;
  };

  arc.cornerRadius = function (_) {
    return arguments.length ? (cornerRadius = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : cornerRadius;
  };

  arc.padRadius = function (_) {
    return arguments.length ? (padRadius = _ == null ? null : typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : padRadius;
  };

  arc.startAngle = function (_) {
    return arguments.length ? (startAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : startAngle;
  };

  arc.endAngle = function (_) {
    return arguments.length ? (endAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : endAngle;
  };

  arc.padAngle = function (_) {
    return arguments.length ? (padAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : padAngle;
  };

  arc.context = function (_) {
    return arguments.length ? (context = _ == null ? null : _, arc) : context;
  };

  return arc;
}
},{"d3-path":"OTyq","./constant.js":"ezXE","./math.js":"kIKs"}],"L3Qx":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function Linear(context) {
  this._context = context;
}

Linear.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._point = 0;
  },
  lineEnd: function () {
    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
      // proceed

      default:
        this._context.lineTo(x, y);

        break;
    }
  }
};

function _default(context) {
  return new Linear(context);
}
},{}],"LnI9":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.x = x;
exports.y = y;

function x(p) {
  return p[0];
}

function y(p) {
  return p[1];
}
},{}],"KhHE":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Path = require("d3-path");

var _constant = _interopRequireDefault(require("./constant.js"));

var _linear = _interopRequireDefault(require("./curve/linear.js"));

var _point = require("./point.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var x = _point.x,
      y = _point.y,
      defined = (0, _constant.default)(true),
      context = null,
      curve = _linear.default,
      output = null;

  function line(data) {
    var i,
        n = data.length,
        d,
        defined0 = false,
        buffer;
    if (context == null) output = curve(buffer = (0, _d3Path.path)());

    for (i = 0; i <= n; ++i) {
      if (!(i < n && defined(d = data[i], i, data)) === defined0) {
        if (defined0 = !defined0) output.lineStart();else output.lineEnd();
      }

      if (defined0) output.point(+x(d, i, data), +y(d, i, data));
    }

    if (buffer) return output = null, buffer + "" || null;
  }

  line.x = function (_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : (0, _constant.default)(+_), line) : x;
  };

  line.y = function (_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : (0, _constant.default)(+_), line) : y;
  };

  line.defined = function (_) {
    return arguments.length ? (defined = typeof _ === "function" ? _ : (0, _constant.default)(!!_), line) : defined;
  };

  line.curve = function (_) {
    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;
  };

  line.context = function (_) {
    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;
  };

  return line;
}
},{"d3-path":"OTyq","./constant.js":"ezXE","./curve/linear.js":"L3Qx","./point.js":"LnI9"}],"IYvJ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Path = require("d3-path");

var _constant = _interopRequireDefault(require("./constant.js"));

var _linear = _interopRequireDefault(require("./curve/linear.js"));

var _line = _interopRequireDefault(require("./line.js"));

var _point = require("./point.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var x0 = _point.x,
      x1 = null,
      y0 = (0, _constant.default)(0),
      y1 = _point.y,
      defined = (0, _constant.default)(true),
      context = null,
      curve = _linear.default,
      output = null;

  function area(data) {
    var i,
        j,
        k,
        n = data.length,
        d,
        defined0 = false,
        buffer,
        x0z = new Array(n),
        y0z = new Array(n);
    if (context == null) output = curve(buffer = (0, _d3Path.path)());

    for (i = 0; i <= n; ++i) {
      if (!(i < n && defined(d = data[i], i, data)) === defined0) {
        if (defined0 = !defined0) {
          j = i;
          output.areaStart();
          output.lineStart();
        } else {
          output.lineEnd();
          output.lineStart();

          for (k = i - 1; k >= j; --k) {
            output.point(x0z[k], y0z[k]);
          }

          output.lineEnd();
          output.areaEnd();
        }
      }

      if (defined0) {
        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);
        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);
      }
    }

    if (buffer) return output = null, buffer + "" || null;
  }

  function arealine() {
    return (0, _line.default)().defined(defined).curve(curve).context(context);
  }

  area.x = function (_) {
    return arguments.length ? (x0 = typeof _ === "function" ? _ : (0, _constant.default)(+_), x1 = null, area) : x0;
  };

  area.x0 = function (_) {
    return arguments.length ? (x0 = typeof _ === "function" ? _ : (0, _constant.default)(+_), area) : x0;
  };

  area.x1 = function (_) {
    return arguments.length ? (x1 = _ == null ? null : typeof _ === "function" ? _ : (0, _constant.default)(+_), area) : x1;
  };

  area.y = function (_) {
    return arguments.length ? (y0 = typeof _ === "function" ? _ : (0, _constant.default)(+_), y1 = null, area) : y0;
  };

  area.y0 = function (_) {
    return arguments.length ? (y0 = typeof _ === "function" ? _ : (0, _constant.default)(+_), area) : y0;
  };

  area.y1 = function (_) {
    return arguments.length ? (y1 = _ == null ? null : typeof _ === "function" ? _ : (0, _constant.default)(+_), area) : y1;
  };

  area.lineX0 = area.lineY0 = function () {
    return arealine().x(x0).y(y0);
  };

  area.lineY1 = function () {
    return arealine().x(x0).y(y1);
  };

  area.lineX1 = function () {
    return arealine().x(x1).y(y0);
  };

  area.defined = function (_) {
    return arguments.length ? (defined = typeof _ === "function" ? _ : (0, _constant.default)(!!_), area) : defined;
  };

  area.curve = function (_) {
    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;
  };

  area.context = function (_) {
    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;
  };

  return area;
}
},{"d3-path":"OTyq","./constant.js":"ezXE","./curve/linear.js":"L3Qx","./line.js":"KhHE","./point.js":"LnI9"}],"idkR":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(d) {
  return d;
}
},{}],"bAZU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant.js"));

var _descending = _interopRequireDefault(require("./descending.js"));

var _identity = _interopRequireDefault(require("./identity.js"));

var _math = require("./math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var value = _identity.default,
      sortValues = _descending.default,
      sort = null,
      startAngle = (0, _constant.default)(0),
      endAngle = (0, _constant.default)(_math.tau),
      padAngle = (0, _constant.default)(0);

  function pie(data) {
    var i,
        n = data.length,
        j,
        k,
        sum = 0,
        index = new Array(n),
        arcs = new Array(n),
        a0 = +startAngle.apply(this, arguments),
        da = Math.min(_math.tau, Math.max(-_math.tau, endAngle.apply(this, arguments) - a0)),
        a1,
        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),
        pa = p * (da < 0 ? -1 : 1),
        v;

    for (i = 0; i < n; ++i) {
      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {
        sum += v;
      }
    } // Optionally sort the arcs by previously-computed values or by data.


    if (sortValues != null) index.sort(function (i, j) {
      return sortValues(arcs[i], arcs[j]);
    });else if (sort != null) index.sort(function (i, j) {
      return sort(data[i], data[j]);
    }); // Compute the arcs! They are stored in the original data's order.

    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {
      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {
        data: data[j],
        index: i,
        value: v,
        startAngle: a0,
        endAngle: a1,
        padAngle: p
      };
    }

    return arcs;
  }

  pie.value = function (_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : (0, _constant.default)(+_), pie) : value;
  };

  pie.sortValues = function (_) {
    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;
  };

  pie.sort = function (_) {
    return arguments.length ? (sort = _, sortValues = null, pie) : sort;
  };

  pie.startAngle = function (_) {
    return arguments.length ? (startAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), pie) : startAngle;
  };

  pie.endAngle = function (_) {
    return arguments.length ? (endAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), pie) : endAngle;
  };

  pie.padAngle = function (_) {
    return arguments.length ? (padAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), pie) : padAngle;
  };

  return pie;
}
},{"./constant.js":"ezXE","./descending.js":"fBAz","./identity.js":"idkR","./math.js":"kIKs"}],"LARK":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = curveRadial;
exports.curveRadialLinear = void 0;

var _linear = _interopRequireDefault(require("./linear.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var curveRadialLinear = curveRadial(_linear.default);
exports.curveRadialLinear = curveRadialLinear;

function Radial(curve) {
  this._curve = curve;
}

Radial.prototype = {
  areaStart: function () {
    this._curve.areaStart();
  },
  areaEnd: function () {
    this._curve.areaEnd();
  },
  lineStart: function () {
    this._curve.lineStart();
  },
  lineEnd: function () {
    this._curve.lineEnd();
  },
  point: function (a, r) {
    this._curve.point(r * Math.sin(a), r * -Math.cos(a));
  }
};

function curveRadial(curve) {
  function radial(context) {
    return new Radial(curve(context));
  }

  radial._curve = curve;
  return radial;
}
},{"./linear.js":"L3Qx"}],"faWF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.lineRadial = lineRadial;
exports.default = _default;

var _radial = _interopRequireWildcard(require("./curve/radial.js"));

var _line = _interopRequireDefault(require("./line.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function lineRadial(l) {
  var c = l.curve;
  l.angle = l.x, delete l.x;
  l.radius = l.y, delete l.y;

  l.curve = function (_) {
    return arguments.length ? c((0, _radial.default)(_)) : c()._curve;
  };

  return l;
}

function _default() {
  return lineRadial((0, _line.default)().curve(_radial.curveRadialLinear));
}
},{"./curve/radial.js":"LARK","./line.js":"KhHE"}],"T5gn":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _radial = _interopRequireWildcard(require("./curve/radial.js"));

var _area = _interopRequireDefault(require("./area.js"));

var _lineRadial = require("./lineRadial.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _default() {
  var a = (0, _area.default)().curve(_radial.curveRadialLinear),
      c = a.curve,
      x0 = a.lineX0,
      x1 = a.lineX1,
      y0 = a.lineY0,
      y1 = a.lineY1;
  a.angle = a.x, delete a.x;
  a.startAngle = a.x0, delete a.x0;
  a.endAngle = a.x1, delete a.x1;
  a.radius = a.y, delete a.y;
  a.innerRadius = a.y0, delete a.y0;
  a.outerRadius = a.y1, delete a.y1;
  a.lineStartAngle = function () {
    return (0, _lineRadial.lineRadial)(x0());
  }, delete a.lineX0;
  a.lineEndAngle = function () {
    return (0, _lineRadial.lineRadial)(x1());
  }, delete a.lineX1;
  a.lineInnerRadius = function () {
    return (0, _lineRadial.lineRadial)(y0());
  }, delete a.lineY0;
  a.lineOuterRadius = function () {
    return (0, _lineRadial.lineRadial)(y1());
  }, delete a.lineY1;

  a.curve = function (_) {
    return arguments.length ? c((0, _radial.default)(_)) : c()._curve;
  };

  return a;
}
},{"./curve/radial.js":"LARK","./area.js":"IYvJ","./lineRadial.js":"faWF"}],"vzjT":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x, y) {
  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];
}
},{}],"npGN":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.linkHorizontal = linkHorizontal;
exports.linkVertical = linkVertical;
exports.linkRadial = linkRadial;

var _d3Path = require("d3-path");

var _array = require("../array.js");

var _constant = _interopRequireDefault(require("../constant.js"));

var _point = require("../point.js");

var _pointRadial = _interopRequireDefault(require("../pointRadial.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function linkSource(d) {
  return d.source;
}

function linkTarget(d) {
  return d.target;
}

function link(curve) {
  var source = linkSource,
      target = linkTarget,
      x = _point.x,
      y = _point.y,
      context = null;

  function link() {
    var buffer,
        argv = _array.slice.call(arguments),
        s = source.apply(this, argv),
        t = target.apply(this, argv);

    if (!context) context = buffer = (0, _d3Path.path)();
    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));
    if (buffer) return context = null, buffer + "" || null;
  }

  link.source = function (_) {
    return arguments.length ? (source = _, link) : source;
  };

  link.target = function (_) {
    return arguments.length ? (target = _, link) : target;
  };

  link.x = function (_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : (0, _constant.default)(+_), link) : x;
  };

  link.y = function (_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : (0, _constant.default)(+_), link) : y;
  };

  link.context = function (_) {
    return arguments.length ? (context = _ == null ? null : _, link) : context;
  };

  return link;
}

function curveHorizontal(context, x0, y0, x1, y1) {
  context.moveTo(x0, y0);
  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);
}

function curveVertical(context, x0, y0, x1, y1) {
  context.moveTo(x0, y0);
  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);
}

function curveRadial(context, x0, y0, x1, y1) {
  var p0 = (0, _pointRadial.default)(x0, y0),
      p1 = (0, _pointRadial.default)(x0, y0 = (y0 + y1) / 2),
      p2 = (0, _pointRadial.default)(x1, y0),
      p3 = (0, _pointRadial.default)(x1, y1);
  context.moveTo(p0[0], p0[1]);
  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);
}

function linkHorizontal() {
  return link(curveHorizontal);
}

function linkVertical() {
  return link(curveVertical);
}

function linkRadial() {
  var l = link(curveRadial);
  l.angle = l.x, delete l.x;
  l.radius = l.y, delete l.y;
  return l;
}
},{"d3-path":"OTyq","../array.js":"KXlw","../constant.js":"ezXE","../point.js":"LnI9","../pointRadial.js":"vzjT"}],"zjv7":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _math = require("../math.js");

var _default = {
  draw: function (context, size) {
    var r = Math.sqrt(size / _math.pi);
    context.moveTo(r, 0);
    context.arc(0, 0, r, 0, _math.tau);
  }
};
exports.default = _default;
},{"../math.js":"kIKs"}],"PTh9":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _default = {
  draw: function (context, size) {
    var r = Math.sqrt(size / 5) / 2;
    context.moveTo(-3 * r, -r);
    context.lineTo(-r, -r);
    context.lineTo(-r, -3 * r);
    context.lineTo(r, -3 * r);
    context.lineTo(r, -r);
    context.lineTo(3 * r, -r);
    context.lineTo(3 * r, r);
    context.lineTo(r, r);
    context.lineTo(r, 3 * r);
    context.lineTo(-r, 3 * r);
    context.lineTo(-r, r);
    context.lineTo(-3 * r, r);
    context.closePath();
  }
};
exports.default = _default;
},{}],"fuDX":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var tan30 = Math.sqrt(1 / 3),
    tan30_2 = tan30 * 2;
var _default = {
  draw: function (context, size) {
    var y = Math.sqrt(size / tan30_2),
        x = y * tan30;
    context.moveTo(0, -y);
    context.lineTo(x, 0);
    context.lineTo(0, y);
    context.lineTo(-x, 0);
    context.closePath();
  }
};
exports.default = _default;
},{}],"L5Ql":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _math = require("../math.js");

var ka = 0.89081309152928522810,
    kr = Math.sin(_math.pi / 10) / Math.sin(7 * _math.pi / 10),
    kx = Math.sin(_math.tau / 10) * kr,
    ky = -Math.cos(_math.tau / 10) * kr;
var _default = {
  draw: function (context, size) {
    var r = Math.sqrt(size * ka),
        x = kx * r,
        y = ky * r;
    context.moveTo(0, -r);
    context.lineTo(x, y);

    for (var i = 1; i < 5; ++i) {
      var a = _math.tau * i / 5,
          c = Math.cos(a),
          s = Math.sin(a);
      context.lineTo(s * r, -c * r);
      context.lineTo(c * x - s * y, s * x + c * y);
    }

    context.closePath();
  }
};
exports.default = _default;
},{"../math.js":"kIKs"}],"bj9s":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _default = {
  draw: function (context, size) {
    var w = Math.sqrt(size),
        x = -w / 2;
    context.rect(x, x, w, w);
  }
};
exports.default = _default;
},{}],"owZx":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var sqrt3 = Math.sqrt(3);
var _default = {
  draw: function (context, size) {
    var y = -Math.sqrt(size / (sqrt3 * 3));
    context.moveTo(0, y * 2);
    context.lineTo(-sqrt3 * y, -y);
    context.lineTo(sqrt3 * y, -y);
    context.closePath();
  }
};
exports.default = _default;
},{}],"UZQY":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var c = -0.5,
    s = Math.sqrt(3) / 2,
    k = 1 / Math.sqrt(12),
    a = (k / 2 + 1) * 3;
var _default = {
  draw: function (context, size) {
    var r = Math.sqrt(size / a),
        x0 = r / 2,
        y0 = r * k,
        x1 = x0,
        y1 = r * k + r,
        x2 = -x1,
        y2 = y1;
    context.moveTo(x0, y0);
    context.lineTo(x1, y1);
    context.lineTo(x2, y2);
    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);
    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);
    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);
    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);
    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);
    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);
    context.closePath();
  }
};
exports.default = _default;
},{}],"bBhM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.symbols = void 0;

var _d3Path = require("d3-path");

var _circle = _interopRequireDefault(require("./symbol/circle.js"));

var _cross = _interopRequireDefault(require("./symbol/cross.js"));

var _diamond = _interopRequireDefault(require("./symbol/diamond.js"));

var _star = _interopRequireDefault(require("./symbol/star.js"));

var _square = _interopRequireDefault(require("./symbol/square.js"));

var _triangle = _interopRequireDefault(require("./symbol/triangle.js"));

var _wye = _interopRequireDefault(require("./symbol/wye.js"));

var _constant = _interopRequireDefault(require("./constant.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var symbols = [_circle.default, _cross.default, _diamond.default, _square.default, _star.default, _triangle.default, _wye.default];
exports.symbols = symbols;

function _default() {
  var type = (0, _constant.default)(_circle.default),
      size = (0, _constant.default)(64),
      context = null;

  function symbol() {
    var buffer;
    if (!context) context = buffer = (0, _d3Path.path)();
    type.apply(this, arguments).draw(context, +size.apply(this, arguments));
    if (buffer) return context = null, buffer + "" || null;
  }

  symbol.type = function (_) {
    return arguments.length ? (type = typeof _ === "function" ? _ : (0, _constant.default)(_), symbol) : type;
  };

  symbol.size = function (_) {
    return arguments.length ? (size = typeof _ === "function" ? _ : (0, _constant.default)(+_), symbol) : size;
  };

  symbol.context = function (_) {
    return arguments.length ? (context = _ == null ? null : _, symbol) : context;
  };

  return symbol;
}
},{"d3-path":"OTyq","./symbol/circle.js":"zjv7","./symbol/cross.js":"PTh9","./symbol/diamond.js":"fuDX","./symbol/star.js":"L5Ql","./symbol/square.js":"bj9s","./symbol/triangle.js":"owZx","./symbol/wye.js":"UZQY","./constant.js":"ezXE"}],"cx05":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.point = point;
exports.Basis = Basis;
exports.default = _default;

function point(that, x, y) {
  that._context.bezierCurveTo((2 * that._x0 + that._x1) / 3, (2 * that._y0 + that._y1) / 3, (that._x0 + 2 * that._x1) / 3, (that._y0 + 2 * that._y1) / 3, (that._x0 + 4 * that._x1 + x) / 6, (that._y0 + 4 * that._y1 + y) / 6);
}

function Basis(context) {
  this._context = context;
}

Basis.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x0 = this._x1 = this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    switch (this._point) {
      case 3:
        point(this, this._x1, this._y1);
      // proceed

      case 2:
        this._context.lineTo(this._x1, this._y1);

        break;
    }

    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;

        this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6);

      // proceed

      default:
        point(this, x, y);
        break;
    }

    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
  }
};

function _default(context) {
  return new Basis(context);
}
},{}],"FS5M":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _noop = _interopRequireDefault(require("../noop.js"));

var _basis = require("./basis.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function BasisClosed(context) {
  this._context = context;
}

BasisClosed.prototype = {
  areaStart: _noop.default,
  areaEnd: _noop.default,
  lineStart: function () {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    switch (this._point) {
      case 1:
        {
          this._context.moveTo(this._x2, this._y2);

          this._context.closePath();

          break;
        }

      case 2:
        {
          this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);

          this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);

          this._context.closePath();

          break;
        }

      case 3:
        {
          this.point(this._x2, this._y2);
          this.point(this._x3, this._y3);
          this.point(this._x4, this._y4);
          break;
        }
    }
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._x2 = x, this._y2 = y;
        break;

      case 1:
        this._point = 2;
        this._x3 = x, this._y3 = y;
        break;

      case 2:
        this._point = 3;
        this._x4 = x, this._y4 = y;

        this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6);

        break;

      default:
        (0, _basis.point)(this, x, y);
        break;
    }

    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
  }
};

function _default(context) {
  return new BasisClosed(context);
}
},{"../noop.js":"zOhu","./basis.js":"cx05"}],"feGb":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _basis = require("./basis.js");

function BasisOpen(context) {
  this._context = context;
}

BasisOpen.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x0 = this._x1 = this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;
        var x0 = (this._x0 + 4 * this._x1 + x) / 6,
            y0 = (this._y0 + 4 * this._y1 + y) / 6;
        this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0);
        break;

      case 3:
        this._point = 4;
      // proceed

      default:
        (0, _basis.point)(this, x, y);
        break;
    }

    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
  }
};

function _default(context) {
  return new BasisOpen(context);
}
},{"./basis.js":"cx05"}],"iAgm":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _basis = require("./basis.js");

function Bundle(context, beta) {
  this._basis = new _basis.Basis(context);
  this._beta = beta;
}

Bundle.prototype = {
  lineStart: function () {
    this._x = [];
    this._y = [];

    this._basis.lineStart();
  },
  lineEnd: function () {
    var x = this._x,
        y = this._y,
        j = x.length - 1;

    if (j > 0) {
      var x0 = x[0],
          y0 = y[0],
          dx = x[j] - x0,
          dy = y[j] - y0,
          i = -1,
          t;

      while (++i <= j) {
        t = i / j;

        this._basis.point(this._beta * x[i] + (1 - this._beta) * (x0 + t * dx), this._beta * y[i] + (1 - this._beta) * (y0 + t * dy));
      }
    }

    this._x = this._y = null;

    this._basis.lineEnd();
  },
  point: function (x, y) {
    this._x.push(+x);

    this._y.push(+y);
  }
};

var _default = function custom(beta) {
  function bundle(context) {
    return beta === 1 ? new _basis.Basis(context) : new Bundle(context, beta);
  }

  bundle.beta = function (beta) {
    return custom(+beta);
  };

  return bundle;
}(0.85);

exports.default = _default;
},{"./basis.js":"cx05"}],"DORS":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.point = point;
exports.Cardinal = Cardinal;
exports.default = void 0;

function point(that, x, y) {
  that._context.bezierCurveTo(that._x1 + that._k * (that._x2 - that._x0), that._y1 + that._k * (that._y2 - that._y0), that._x2 + that._k * (that._x1 - x), that._y2 + that._k * (that._y1 - y), that._x2, that._y2);
}

function Cardinal(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}

Cardinal.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x2, this._y2);

        break;

      case 3:
        point(this, this._x1, this._y1);
        break;
    }

    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
        this._x1 = x, this._y1 = y;
        break;

      case 2:
        this._point = 3;
      // proceed

      default:
        point(this, x, y);
        break;
    }

    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

var _default = function custom(tension) {
  function cardinal(context) {
    return new Cardinal(context, tension);
  }

  cardinal.tension = function (tension) {
    return custom(+tension);
  };

  return cardinal;
}(0);

exports.default = _default;
},{}],"FUQi":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CardinalClosed = CardinalClosed;
exports.default = void 0;

var _noop = _interopRequireDefault(require("../noop.js"));

var _cardinal = require("./cardinal.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function CardinalClosed(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}

CardinalClosed.prototype = {
  areaStart: _noop.default,
  areaEnd: _noop.default,
  lineStart: function () {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    switch (this._point) {
      case 1:
        {
          this._context.moveTo(this._x3, this._y3);

          this._context.closePath();

          break;
        }

      case 2:
        {
          this._context.lineTo(this._x3, this._y3);

          this._context.closePath();

          break;
        }

      case 3:
        {
          this.point(this._x3, this._y3);
          this.point(this._x4, this._y4);
          this.point(this._x5, this._y5);
          break;
        }
    }
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._x3 = x, this._y3 = y;
        break;

      case 1:
        this._point = 2;

        this._context.moveTo(this._x4 = x, this._y4 = y);

        break;

      case 2:
        this._point = 3;
        this._x5 = x, this._y5 = y;
        break;

      default:
        (0, _cardinal.point)(this, x, y);
        break;
    }

    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

var _default = function custom(tension) {
  function cardinal(context) {
    return new CardinalClosed(context, tension);
  }

  cardinal.tension = function (tension) {
    return custom(+tension);
  };

  return cardinal;
}(0);

exports.default = _default;
},{"../noop.js":"zOhu","./cardinal.js":"DORS"}],"iWbK":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CardinalOpen = CardinalOpen;
exports.default = void 0;

var _cardinal = require("./cardinal.js");

function CardinalOpen(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}

CardinalOpen.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;
        this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
        break;

      case 3:
        this._point = 4;
      // proceed

      default:
        (0, _cardinal.point)(this, x, y);
        break;
    }

    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

var _default = function custom(tension) {
  function cardinal(context) {
    return new CardinalOpen(context, tension);
  }

  cardinal.tension = function (tension) {
    return custom(+tension);
  };

  return cardinal;
}(0);

exports.default = _default;
},{"./cardinal.js":"DORS"}],"oFi9":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.point = point;
exports.default = void 0;

var _math = require("../math.js");

var _cardinal = require("./cardinal.js");

function point(that, x, y) {
  var x1 = that._x1,
      y1 = that._y1,
      x2 = that._x2,
      y2 = that._y2;

  if (that._l01_a > _math.epsilon) {
    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,
        n = 3 * that._l01_a * (that._l01_a + that._l12_a);
    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;
    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;
  }

  if (that._l23_a > _math.epsilon) {
    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,
        m = 3 * that._l23_a * (that._l23_a + that._l12_a);
    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;
    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;
  }

  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);
}

function CatmullRom(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}

CatmullRom.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function () {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x2, this._y2);

        break;

      case 3:
        this.point(this._x2, this._y2);
        break;
    }

    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    if (this._point) {
      var x23 = this._x2 - x,
          y23 = this._y2 - y;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;
      // proceed

      default:
        point(this, x, y);
        break;
    }

    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

var _default = function custom(alpha) {
  function catmullRom(context) {
    return alpha ? new CatmullRom(context, alpha) : new _cardinal.Cardinal(context, 0);
  }

  catmullRom.alpha = function (alpha) {
    return custom(+alpha);
  };

  return catmullRom;
}(0.5);

exports.default = _default;
},{"../math.js":"kIKs","./cardinal.js":"DORS"}],"AW0P":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _cardinalClosed = require("./cardinalClosed.js");

var _noop = _interopRequireDefault(require("../noop.js"));

var _catmullRom = require("./catmullRom.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function CatmullRomClosed(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}

CatmullRomClosed.prototype = {
  areaStart: _noop.default,
  areaEnd: _noop.default,
  lineStart: function () {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function () {
    switch (this._point) {
      case 1:
        {
          this._context.moveTo(this._x3, this._y3);

          this._context.closePath();

          break;
        }

      case 2:
        {
          this._context.lineTo(this._x3, this._y3);

          this._context.closePath();

          break;
        }

      case 3:
        {
          this.point(this._x3, this._y3);
          this.point(this._x4, this._y4);
          this.point(this._x5, this._y5);
          break;
        }
    }
  },
  point: function (x, y) {
    x = +x, y = +y;

    if (this._point) {
      var x23 = this._x2 - x,
          y23 = this._y2 - y;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }

    switch (this._point) {
      case 0:
        this._point = 1;
        this._x3 = x, this._y3 = y;
        break;

      case 1:
        this._point = 2;

        this._context.moveTo(this._x4 = x, this._y4 = y);

        break;

      case 2:
        this._point = 3;
        this._x5 = x, this._y5 = y;
        break;

      default:
        (0, _catmullRom.point)(this, x, y);
        break;
    }

    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

var _default = function custom(alpha) {
  function catmullRom(context) {
    return alpha ? new CatmullRomClosed(context, alpha) : new _cardinalClosed.CardinalClosed(context, 0);
  }

  catmullRom.alpha = function (alpha) {
    return custom(+alpha);
  };

  return catmullRom;
}(0.5);

exports.default = _default;
},{"./cardinalClosed.js":"FUQi","../noop.js":"zOhu","./catmullRom.js":"oFi9"}],"PGVM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _cardinalOpen = require("./cardinalOpen.js");

var _catmullRom = require("./catmullRom.js");

function CatmullRomOpen(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}

CatmullRomOpen.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function () {
    if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    if (this._point) {
      var x23 = this._x2 - x,
          y23 = this._y2 - y;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }

    switch (this._point) {
      case 0:
        this._point = 1;
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;
        this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
        break;

      case 3:
        this._point = 4;
      // proceed

      default:
        (0, _catmullRom.point)(this, x, y);
        break;
    }

    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

var _default = function custom(alpha) {
  function catmullRom(context) {
    return alpha ? new CatmullRomOpen(context, alpha) : new _cardinalOpen.CardinalOpen(context, 0);
  }

  catmullRom.alpha = function (alpha) {
    return custom(+alpha);
  };

  return catmullRom;
}(0.5);

exports.default = _default;
},{"./cardinalOpen.js":"iWbK","./catmullRom.js":"oFi9"}],"c2vC":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _noop = _interopRequireDefault(require("../noop.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function LinearClosed(context) {
  this._context = context;
}

LinearClosed.prototype = {
  areaStart: _noop.default,
  areaEnd: _noop.default,
  lineStart: function () {
    this._point = 0;
  },
  lineEnd: function () {
    if (this._point) this._context.closePath();
  },
  point: function (x, y) {
    x = +x, y = +y;
    if (this._point) this._context.lineTo(x, y);else this._point = 1, this._context.moveTo(x, y);
  }
};

function _default(context) {
  return new LinearClosed(context);
}
},{"../noop.js":"zOhu"}],"DNx2":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.monotoneX = monotoneX;
exports.monotoneY = monotoneY;

function sign(x) {
  return x < 0 ? -1 : 1;
} // Calculate the slopes of the tangents (Hermite-type interpolation) based on
// the following paper: Steffen, M. 1990. A Simple Method for Monotonic
// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.
// NOV(II), P. 443, 1990.


function slope3(that, x2, y2) {
  var h0 = that._x1 - that._x0,
      h1 = x2 - that._x1,
      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),
      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),
      p = (s0 * h1 + s1 * h0) / (h0 + h1);
  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;
} // Calculate a one-sided slope.


function slope2(that, t) {
  var h = that._x1 - that._x0;
  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;
} // According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations
// "you can express cubic Hermite interpolation in terms of cubic Bézier curves
// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1".


function point(that, t0, t1) {
  var x0 = that._x0,
      y0 = that._y0,
      x1 = that._x1,
      y1 = that._y1,
      dx = (x1 - x0) / 3;

  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);
}

function MonotoneX(context) {
  this._context = context;
}

MonotoneX.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x1, this._y1);

        break;

      case 3:
        point(this, this._t0, slope2(this, this._t0));
        break;
    }

    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    var t1 = NaN;
    x = +x, y = +y;
    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;
        point(this, slope2(this, t1 = slope3(this, x, y)), t1);
        break;

      default:
        point(this, this._t0, t1 = slope3(this, x, y));
        break;
    }

    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
    this._t0 = t1;
  }
};

function MonotoneY(context) {
  this._context = new ReflectContext(context);
}

(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function (x, y) {
  MonotoneX.prototype.point.call(this, y, x);
};

function ReflectContext(context) {
  this._context = context;
}

ReflectContext.prototype = {
  moveTo: function (x, y) {
    this._context.moveTo(y, x);
  },
  closePath: function () {
    this._context.closePath();
  },
  lineTo: function (x, y) {
    this._context.lineTo(y, x);
  },
  bezierCurveTo: function (x1, y1, x2, y2, x, y) {
    this._context.bezierCurveTo(y1, x1, y2, x2, y, x);
  }
};

function monotoneX(context) {
  return new MonotoneX(context);
}

function monotoneY(context) {
  return new MonotoneY(context);
}
},{}],"qyH2":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function Natural(context) {
  this._context = context;
}

Natural.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x = [];
    this._y = [];
  },
  lineEnd: function () {
    var x = this._x,
        y = this._y,
        n = x.length;

    if (n) {
      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);

      if (n === 2) {
        this._context.lineTo(x[1], y[1]);
      } else {
        var px = controlPoints(x),
            py = controlPoints(y);

        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {
          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);
        }
      }
    }

    if (this._line || this._line !== 0 && n === 1) this._context.closePath();
    this._line = 1 - this._line;
    this._x = this._y = null;
  },
  point: function (x, y) {
    this._x.push(+x);

    this._y.push(+y);
  }
}; // See https://www.particleincell.com/2012/bezier-splines/ for derivation.

function controlPoints(x) {
  var i,
      n = x.length - 1,
      m,
      a = new Array(n),
      b = new Array(n),
      r = new Array(n);
  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];

  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];

  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];

  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];

  a[n - 1] = r[n - 1] / b[n - 1];

  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];

  b[n - 1] = (x[n] + a[n - 1]) / 2;

  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];

  return [a, b];
}

function _default(context) {
  return new Natural(context);
}
},{}],"SIad":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.stepBefore = stepBefore;
exports.stepAfter = stepAfter;

function Step(context, t) {
  this._context = context;
  this._t = t;
}

Step.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x = this._y = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);
    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
      // proceed

      default:
        {
          if (this._t <= 0) {
            this._context.lineTo(this._x, y);

            this._context.lineTo(x, y);
          } else {
            var x1 = this._x * (1 - this._t) + x * this._t;

            this._context.lineTo(x1, this._y);

            this._context.lineTo(x1, y);
          }

          break;
        }
    }

    this._x = x, this._y = y;
  }
};

function _default(context) {
  return new Step(context, 0.5);
}

function stepBefore(context) {
  return new Step(context, 0);
}

function stepAfter(context) {
  return new Step(context, 1);
}
},{}],"jW6Y":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(series, order) {
  if (!((n = series.length) > 1)) return;

  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {
    s0 = s1, s1 = series[order[i]];

    for (j = 0; j < m; ++j) {
      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];
    }
  }
}
},{}],"NTwk":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(series) {
  var n = series.length,
      o = new Array(n);

  while (--n >= 0) o[n] = n;

  return o;
}
},{}],"k9Ur":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _array = require("./array.js");

var _constant = _interopRequireDefault(require("./constant.js"));

var _none = _interopRequireDefault(require("./offset/none.js"));

var _none2 = _interopRequireDefault(require("./order/none.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function stackValue(d, key) {
  return d[key];
}

function _default() {
  var keys = (0, _constant.default)([]),
      order = _none2.default,
      offset = _none.default,
      value = stackValue;

  function stack(data) {
    var kz = keys.apply(this, arguments),
        i,
        m = data.length,
        n = kz.length,
        sz = new Array(n),
        oz;

    for (i = 0; i < n; ++i) {
      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {
        si[j] = sij = [0, +value(data[j], ki, j, data)];
        sij.data = data[j];
      }

      si.key = ki;
    }

    for (i = 0, oz = order(sz); i < n; ++i) {
      sz[oz[i]].index = i;
    }

    offset(sz, oz);
    return sz;
  }

  stack.keys = function (_) {
    return arguments.length ? (keys = typeof _ === "function" ? _ : (0, _constant.default)(_array.slice.call(_)), stack) : keys;
  };

  stack.value = function (_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : (0, _constant.default)(+_), stack) : value;
  };

  stack.order = function (_) {
    return arguments.length ? (order = _ == null ? _none2.default : typeof _ === "function" ? _ : (0, _constant.default)(_array.slice.call(_)), stack) : order;
  };

  stack.offset = function (_) {
    return arguments.length ? (offset = _ == null ? _none.default : _, stack) : offset;
  };

  return stack;
}
},{"./array.js":"KXlw","./constant.js":"ezXE","./offset/none.js":"jW6Y","./order/none.js":"NTwk"}],"WOsM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _none = _interopRequireDefault(require("./none.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series, order) {
  if (!((n = series.length) > 0)) return;

  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {
    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;

    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;
  }

  (0, _none.default)(series, order);
}
},{"./none.js":"jW6Y"}],"PS7K":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(series, order) {
  if (!((n = series.length) > 0)) return;

  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {
    for (yp = yn = 0, i = 0; i < n; ++i) {
      if ((dy = (d = series[order[i]][j])[1] - d[0]) > 0) {
        d[0] = yp, d[1] = yp += dy;
      } else if (dy < 0) {
        d[1] = yn, d[0] = yn += dy;
      } else {
        d[0] = 0, d[1] = dy;
      }
    }
  }
}
},{}],"UGaf":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _none = _interopRequireDefault(require("./none.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series, order) {
  if (!((n = series.length) > 0)) return;

  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {
    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;

    s0[j][1] += s0[j][0] = -y / 2;
  }

  (0, _none.default)(series, order);
}
},{"./none.js":"jW6Y"}],"zv8R":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _none = _interopRequireDefault(require("./none.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series, order) {
  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;

  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {
    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {
      var si = series[order[i]],
          sij0 = si[j][1] || 0,
          sij1 = si[j - 1][1] || 0,
          s3 = (sij0 - sij1) / 2;

      for (var k = 0; k < i; ++k) {
        var sk = series[order[k]],
            skj0 = sk[j][1] || 0,
            skj1 = sk[j - 1][1] || 0;
        s3 += skj0 - skj1;
      }

      s1 += sij0, s2 += s3 * sij0;
    }

    s0[j - 1][1] += s0[j - 1][0] = y;
    if (s1) y -= s2 / s1;
  }

  s0[j - 1][1] += s0[j - 1][0] = y;
  (0, _none.default)(series, order);
}
},{"./none.js":"jW6Y"}],"Uz9Z":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _none = _interopRequireDefault(require("./none.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series) {
  var peaks = series.map(peak);
  return (0, _none.default)(series).sort(function (a, b) {
    return peaks[a] - peaks[b];
  });
}

function peak(series) {
  var i = -1,
      j = 0,
      n = series.length,
      vi,
      vj = -Infinity;

  while (++i < n) if ((vi = +series[i][1]) > vj) vj = vi, j = i;

  return j;
}
},{"./none.js":"NTwk"}],"Z1jP":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.sum = sum;

var _none = _interopRequireDefault(require("./none.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series) {
  var sums = series.map(sum);
  return (0, _none.default)(series).sort(function (a, b) {
    return sums[a] - sums[b];
  });
}

function sum(series) {
  var s = 0,
      i = -1,
      n = series.length,
      v;

  while (++i < n) if (v = +series[i][1]) s += v;

  return s;
}
},{"./none.js":"NTwk"}],"oyxb":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _ascending = _interopRequireDefault(require("./ascending.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series) {
  return (0, _ascending.default)(series).reverse();
}
},{"./ascending.js":"Z1jP"}],"cmz2":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _appearance = _interopRequireDefault(require("./appearance.js"));

var _ascending = require("./ascending.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series) {
  var n = series.length,
      i,
      j,
      sums = series.map(_ascending.sum),
      order = (0, _appearance.default)(series),
      top = 0,
      bottom = 0,
      tops = [],
      bottoms = [];

  for (i = 0; i < n; ++i) {
    j = order[i];

    if (top < bottom) {
      top += sums[j];
      tops.push(j);
    } else {
      bottom += sums[j];
      bottoms.push(j);
    }
  }

  return bottoms.reverse().concat(tops);
}
},{"./appearance.js":"Uz9Z","./ascending.js":"Z1jP"}],"MoW7":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _none = _interopRequireDefault(require("./none.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series) {
  return (0, _none.default)(series).reverse();
}
},{"./none.js":"NTwk"}],"maww":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "arc", {
  enumerable: true,
  get: function () {
    return _arc.default;
  }
});
Object.defineProperty(exports, "area", {
  enumerable: true,
  get: function () {
    return _area.default;
  }
});
Object.defineProperty(exports, "line", {
  enumerable: true,
  get: function () {
    return _line.default;
  }
});
Object.defineProperty(exports, "pie", {
  enumerable: true,
  get: function () {
    return _pie.default;
  }
});
Object.defineProperty(exports, "areaRadial", {
  enumerable: true,
  get: function () {
    return _areaRadial.default;
  }
});
Object.defineProperty(exports, "radialArea", {
  enumerable: true,
  get: function () {
    return _areaRadial.default;
  }
});
Object.defineProperty(exports, "lineRadial", {
  enumerable: true,
  get: function () {
    return _lineRadial.default;
  }
});
Object.defineProperty(exports, "radialLine", {
  enumerable: true,
  get: function () {
    return _lineRadial.default;
  }
});
Object.defineProperty(exports, "pointRadial", {
  enumerable: true,
  get: function () {
    return _pointRadial.default;
  }
});
Object.defineProperty(exports, "linkHorizontal", {
  enumerable: true,
  get: function () {
    return _index.linkHorizontal;
  }
});
Object.defineProperty(exports, "linkVertical", {
  enumerable: true,
  get: function () {
    return _index.linkVertical;
  }
});
Object.defineProperty(exports, "linkRadial", {
  enumerable: true,
  get: function () {
    return _index.linkRadial;
  }
});
Object.defineProperty(exports, "symbol", {
  enumerable: true,
  get: function () {
    return _symbol.default;
  }
});
Object.defineProperty(exports, "symbols", {
  enumerable: true,
  get: function () {
    return _symbol.symbols;
  }
});
Object.defineProperty(exports, "symbolCircle", {
  enumerable: true,
  get: function () {
    return _circle.default;
  }
});
Object.defineProperty(exports, "symbolCross", {
  enumerable: true,
  get: function () {
    return _cross.default;
  }
});
Object.defineProperty(exports, "symbolDiamond", {
  enumerable: true,
  get: function () {
    return _diamond.default;
  }
});
Object.defineProperty(exports, "symbolSquare", {
  enumerable: true,
  get: function () {
    return _square.default;
  }
});
Object.defineProperty(exports, "symbolStar", {
  enumerable: true,
  get: function () {
    return _star.default;
  }
});
Object.defineProperty(exports, "symbolTriangle", {
  enumerable: true,
  get: function () {
    return _triangle.default;
  }
});
Object.defineProperty(exports, "symbolWye", {
  enumerable: true,
  get: function () {
    return _wye.default;
  }
});
Object.defineProperty(exports, "curveBasisClosed", {
  enumerable: true,
  get: function () {
    return _basisClosed.default;
  }
});
Object.defineProperty(exports, "curveBasisOpen", {
  enumerable: true,
  get: function () {
    return _basisOpen.default;
  }
});
Object.defineProperty(exports, "curveBasis", {
  enumerable: true,
  get: function () {
    return _basis.default;
  }
});
Object.defineProperty(exports, "curveBundle", {
  enumerable: true,
  get: function () {
    return _bundle.default;
  }
});
Object.defineProperty(exports, "curveCardinalClosed", {
  enumerable: true,
  get: function () {
    return _cardinalClosed.default;
  }
});
Object.defineProperty(exports, "curveCardinalOpen", {
  enumerable: true,
  get: function () {
    return _cardinalOpen.default;
  }
});
Object.defineProperty(exports, "curveCardinal", {
  enumerable: true,
  get: function () {
    return _cardinal.default;
  }
});
Object.defineProperty(exports, "curveCatmullRomClosed", {
  enumerable: true,
  get: function () {
    return _catmullRomClosed.default;
  }
});
Object.defineProperty(exports, "curveCatmullRomOpen", {
  enumerable: true,
  get: function () {
    return _catmullRomOpen.default;
  }
});
Object.defineProperty(exports, "curveCatmullRom", {
  enumerable: true,
  get: function () {
    return _catmullRom.default;
  }
});
Object.defineProperty(exports, "curveLinearClosed", {
  enumerable: true,
  get: function () {
    return _linearClosed.default;
  }
});
Object.defineProperty(exports, "curveLinear", {
  enumerable: true,
  get: function () {
    return _linear.default;
  }
});
Object.defineProperty(exports, "curveMonotoneX", {
  enumerable: true,
  get: function () {
    return _monotone.monotoneX;
  }
});
Object.defineProperty(exports, "curveMonotoneY", {
  enumerable: true,
  get: function () {
    return _monotone.monotoneY;
  }
});
Object.defineProperty(exports, "curveNatural", {
  enumerable: true,
  get: function () {
    return _natural.default;
  }
});
Object.defineProperty(exports, "curveStep", {
  enumerable: true,
  get: function () {
    return _step.default;
  }
});
Object.defineProperty(exports, "curveStepAfter", {
  enumerable: true,
  get: function () {
    return _step.stepAfter;
  }
});
Object.defineProperty(exports, "curveStepBefore", {
  enumerable: true,
  get: function () {
    return _step.stepBefore;
  }
});
Object.defineProperty(exports, "stack", {
  enumerable: true,
  get: function () {
    return _stack.default;
  }
});
Object.defineProperty(exports, "stackOffsetExpand", {
  enumerable: true,
  get: function () {
    return _expand.default;
  }
});
Object.defineProperty(exports, "stackOffsetDiverging", {
  enumerable: true,
  get: function () {
    return _diverging.default;
  }
});
Object.defineProperty(exports, "stackOffsetNone", {
  enumerable: true,
  get: function () {
    return _none.default;
  }
});
Object.defineProperty(exports, "stackOffsetSilhouette", {
  enumerable: true,
  get: function () {
    return _silhouette.default;
  }
});
Object.defineProperty(exports, "stackOffsetWiggle", {
  enumerable: true,
  get: function () {
    return _wiggle.default;
  }
});
Object.defineProperty(exports, "stackOrderAppearance", {
  enumerable: true,
  get: function () {
    return _appearance.default;
  }
});
Object.defineProperty(exports, "stackOrderAscending", {
  enumerable: true,
  get: function () {
    return _ascending.default;
  }
});
Object.defineProperty(exports, "stackOrderDescending", {
  enumerable: true,
  get: function () {
    return _descending.default;
  }
});
Object.defineProperty(exports, "stackOrderInsideOut", {
  enumerable: true,
  get: function () {
    return _insideOut.default;
  }
});
Object.defineProperty(exports, "stackOrderNone", {
  enumerable: true,
  get: function () {
    return _none2.default;
  }
});
Object.defineProperty(exports, "stackOrderReverse", {
  enumerable: true,
  get: function () {
    return _reverse.default;
  }
});

var _arc = _interopRequireDefault(require("./arc.js"));

var _area = _interopRequireDefault(require("./area.js"));

var _line = _interopRequireDefault(require("./line.js"));

var _pie = _interopRequireDefault(require("./pie.js"));

var _areaRadial = _interopRequireDefault(require("./areaRadial.js"));

var _lineRadial = _interopRequireDefault(require("./lineRadial.js"));

var _pointRadial = _interopRequireDefault(require("./pointRadial.js"));

var _index = require("./link/index.js");

var _symbol = _interopRequireWildcard(require("./symbol.js"));

var _circle = _interopRequireDefault(require("./symbol/circle.js"));

var _cross = _interopRequireDefault(require("./symbol/cross.js"));

var _diamond = _interopRequireDefault(require("./symbol/diamond.js"));

var _square = _interopRequireDefault(require("./symbol/square.js"));

var _star = _interopRequireDefault(require("./symbol/star.js"));

var _triangle = _interopRequireDefault(require("./symbol/triangle.js"));

var _wye = _interopRequireDefault(require("./symbol/wye.js"));

var _basisClosed = _interopRequireDefault(require("./curve/basisClosed.js"));

var _basisOpen = _interopRequireDefault(require("./curve/basisOpen.js"));

var _basis = _interopRequireDefault(require("./curve/basis.js"));

var _bundle = _interopRequireDefault(require("./curve/bundle.js"));

var _cardinalClosed = _interopRequireDefault(require("./curve/cardinalClosed.js"));

var _cardinalOpen = _interopRequireDefault(require("./curve/cardinalOpen.js"));

var _cardinal = _interopRequireDefault(require("./curve/cardinal.js"));

var _catmullRomClosed = _interopRequireDefault(require("./curve/catmullRomClosed.js"));

var _catmullRomOpen = _interopRequireDefault(require("./curve/catmullRomOpen.js"));

var _catmullRom = _interopRequireDefault(require("./curve/catmullRom.js"));

var _linearClosed = _interopRequireDefault(require("./curve/linearClosed.js"));

var _linear = _interopRequireDefault(require("./curve/linear.js"));

var _monotone = require("./curve/monotone.js");

var _natural = _interopRequireDefault(require("./curve/natural.js"));

var _step = _interopRequireWildcard(require("./curve/step.js"));

var _stack = _interopRequireDefault(require("./stack.js"));

var _expand = _interopRequireDefault(require("./offset/expand.js"));

var _diverging = _interopRequireDefault(require("./offset/diverging.js"));

var _none = _interopRequireDefault(require("./offset/none.js"));

var _silhouette = _interopRequireDefault(require("./offset/silhouette.js"));

var _wiggle = _interopRequireDefault(require("./offset/wiggle.js"));

var _appearance = _interopRequireDefault(require("./order/appearance.js"));

var _ascending = _interopRequireDefault(require("./order/ascending.js"));

var _descending = _interopRequireDefault(require("./order/descending.js"));

var _insideOut = _interopRequireDefault(require("./order/insideOut.js"));

var _none2 = _interopRequireDefault(require("./order/none.js"));

var _reverse = _interopRequireDefault(require("./order/reverse.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./arc.js":"BL7I","./area.js":"IYvJ","./line.js":"KhHE","./pie.js":"bAZU","./areaRadial.js":"T5gn","./lineRadial.js":"faWF","./pointRadial.js":"vzjT","./link/index.js":"npGN","./symbol.js":"bBhM","./symbol/circle.js":"zjv7","./symbol/cross.js":"PTh9","./symbol/diamond.js":"fuDX","./symbol/square.js":"bj9s","./symbol/star.js":"L5Ql","./symbol/triangle.js":"owZx","./symbol/wye.js":"UZQY","./curve/basisClosed.js":"FS5M","./curve/basisOpen.js":"feGb","./curve/basis.js":"cx05","./curve/bundle.js":"iAgm","./curve/cardinalClosed.js":"FUQi","./curve/cardinalOpen.js":"iWbK","./curve/cardinal.js":"DORS","./curve/catmullRomClosed.js":"AW0P","./curve/catmullRomOpen.js":"PGVM","./curve/catmullRom.js":"oFi9","./curve/linearClosed.js":"c2vC","./curve/linear.js":"L3Qx","./curve/monotone.js":"DNx2","./curve/natural.js":"qyH2","./curve/step.js":"SIad","./stack.js":"k9Ur","./offset/expand.js":"WOsM","./offset/diverging.js":"PS7K","./offset/none.js":"jW6Y","./offset/silhouette.js":"UGaf","./offset/wiggle.js":"zv8R","./order/appearance.js":"Uz9Z","./order/ascending.js":"Z1jP","./order/descending.js":"oyxb","./order/insideOut.js":"cmz2","./order/none.js":"NTwk","./order/reverse.js":"MoW7"}],"Xind":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.x = x;
exports.y = y;

function x(d) {
  return d[0];
}

function y(d) {
  return d[1];
}
},{}],"getm":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RedBlackNode = RedBlackNode;
exports.default = void 0;

function RedBlackTree() {
  this._ = null; // root node
}

function RedBlackNode(node) {
  node.U = // parent node
  node.C = // color - true for red, false for black
  node.L = // left node
  node.R = // right node
  node.P = // previous node
  node.N = null; // next node
}

RedBlackTree.prototype = {
  constructor: RedBlackTree,
  insert: function (after, node) {
    var parent, grandpa, uncle;

    if (after) {
      node.P = after;
      node.N = after.N;
      if (after.N) after.N.P = node;
      after.N = node;

      if (after.R) {
        after = after.R;

        while (after.L) after = after.L;

        after.L = node;
      } else {
        after.R = node;
      }

      parent = after;
    } else if (this._) {
      after = RedBlackFirst(this._);
      node.P = null;
      node.N = after;
      after.P = after.L = node;
      parent = after;
    } else {
      node.P = node.N = null;
      this._ = node;
      parent = null;
    }

    node.L = node.R = null;
    node.U = parent;
    node.C = true;
    after = node;

    while (parent && parent.C) {
      grandpa = parent.U;

      if (parent === grandpa.L) {
        uncle = grandpa.R;

        if (uncle && uncle.C) {
          parent.C = uncle.C = false;
          grandpa.C = true;
          after = grandpa;
        } else {
          if (after === parent.R) {
            RedBlackRotateLeft(this, parent);
            after = parent;
            parent = after.U;
          }

          parent.C = false;
          grandpa.C = true;
          RedBlackRotateRight(this, grandpa);
        }
      } else {
        uncle = grandpa.L;

        if (uncle && uncle.C) {
          parent.C = uncle.C = false;
          grandpa.C = true;
          after = grandpa;
        } else {
          if (after === parent.L) {
            RedBlackRotateRight(this, parent);
            after = parent;
            parent = after.U;
          }

          parent.C = false;
          grandpa.C = true;
          RedBlackRotateLeft(this, grandpa);
        }
      }

      parent = after.U;
    }

    this._.C = false;
  },
  remove: function (node) {
    if (node.N) node.N.P = node.P;
    if (node.P) node.P.N = node.N;
    node.N = node.P = null;
    var parent = node.U,
        sibling,
        left = node.L,
        right = node.R,
        next,
        red;
    if (!left) next = right;else if (!right) next = left;else next = RedBlackFirst(right);

    if (parent) {
      if (parent.L === node) parent.L = next;else parent.R = next;
    } else {
      this._ = next;
    }

    if (left && right) {
      red = next.C;
      next.C = node.C;
      next.L = left;
      left.U = next;

      if (next !== right) {
        parent = next.U;
        next.U = node.U;
        node = next.R;
        parent.L = node;
        next.R = right;
        right.U = next;
      } else {
        next.U = parent;
        parent = next;
        node = next.R;
      }
    } else {
      red = node.C;
      node = next;
    }

    if (node) node.U = parent;
    if (red) return;

    if (node && node.C) {
      node.C = false;
      return;
    }

    do {
      if (node === this._) break;

      if (node === parent.L) {
        sibling = parent.R;

        if (sibling.C) {
          sibling.C = false;
          parent.C = true;
          RedBlackRotateLeft(this, parent);
          sibling = parent.R;
        }

        if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
          if (!sibling.R || !sibling.R.C) {
            sibling.L.C = false;
            sibling.C = true;
            RedBlackRotateRight(this, sibling);
            sibling = parent.R;
          }

          sibling.C = parent.C;
          parent.C = sibling.R.C = false;
          RedBlackRotateLeft(this, parent);
          node = this._;
          break;
        }
      } else {
        sibling = parent.L;

        if (sibling.C) {
          sibling.C = false;
          parent.C = true;
          RedBlackRotateRight(this, parent);
          sibling = parent.L;
        }

        if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
          if (!sibling.L || !sibling.L.C) {
            sibling.R.C = false;
            sibling.C = true;
            RedBlackRotateLeft(this, sibling);
            sibling = parent.L;
          }

          sibling.C = parent.C;
          parent.C = sibling.L.C = false;
          RedBlackRotateRight(this, parent);
          node = this._;
          break;
        }
      }

      sibling.C = true;
      node = parent;
      parent = parent.U;
    } while (!node.C);

    if (node) node.C = false;
  }
};

function RedBlackRotateLeft(tree, node) {
  var p = node,
      q = node.R,
      parent = p.U;

  if (parent) {
    if (parent.L === p) parent.L = q;else parent.R = q;
  } else {
    tree._ = q;
  }

  q.U = parent;
  p.U = q;
  p.R = q.L;
  if (p.R) p.R.U = p;
  q.L = p;
}

function RedBlackRotateRight(tree, node) {
  var p = node,
      q = node.L,
      parent = p.U;

  if (parent) {
    if (parent.L === p) parent.L = q;else parent.R = q;
  } else {
    tree._ = q;
  }

  q.U = parent;
  p.U = q;
  p.L = q.R;
  if (p.L) p.L.U = p;
  q.R = p;
}

function RedBlackFirst(node) {
  while (node.L) node = node.L;

  return node;
}

var _default = RedBlackTree;
exports.default = _default;
},{}],"R6Hk":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createEdge = createEdge;
exports.createBorderEdge = createBorderEdge;
exports.setEdgeEnd = setEdgeEnd;
exports.clipEdges = clipEdges;

var _Diagram = require("./Diagram");

function createEdge(left, right, v0, v1) {
  var edge = [null, null],
      index = _Diagram.edges.push(edge) - 1;
  edge.left = left;
  edge.right = right;
  if (v0) setEdgeEnd(edge, left, right, v0);
  if (v1) setEdgeEnd(edge, right, left, v1);

  _Diagram.cells[left.index].halfedges.push(index);

  _Diagram.cells[right.index].halfedges.push(index);

  return edge;
}

function createBorderEdge(left, v0, v1) {
  var edge = [v0, v1];
  edge.left = left;
  return edge;
}

function setEdgeEnd(edge, left, right, vertex) {
  if (!edge[0] && !edge[1]) {
    edge[0] = vertex;
    edge.left = left;
    edge.right = right;
  } else if (edge.left === right) {
    edge[1] = vertex;
  } else {
    edge[0] = vertex;
  }
} // Liang–Barsky line clipping.


function clipEdge(edge, x0, y0, x1, y1) {
  var a = edge[0],
      b = edge[1],
      ax = a[0],
      ay = a[1],
      bx = b[0],
      by = b[1],
      t0 = 0,
      t1 = 1,
      dx = bx - ax,
      dy = by - ay,
      r;
  r = x0 - ax;
  if (!dx && r > 0) return;
  r /= dx;

  if (dx < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dx > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = x1 - ax;
  if (!dx && r < 0) return;
  r /= dx;

  if (dx < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dx > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  r = y0 - ay;
  if (!dy && r > 0) return;
  r /= dy;

  if (dy < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dy > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = y1 - ay;
  if (!dy && r < 0) return;
  r /= dy;

  if (dy < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dy > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?

  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];
  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];
  return true;
}

function connectEdge(edge, x0, y0, x1, y1) {
  var v1 = edge[1];
  if (v1) return true;
  var v0 = edge[0],
      left = edge.left,
      right = edge.right,
      lx = left[0],
      ly = left[1],
      rx = right[0],
      ry = right[1],
      fx = (lx + rx) / 2,
      fy = (ly + ry) / 2,
      fm,
      fb;

  if (ry === ly) {
    if (fx < x0 || fx >= x1) return;

    if (lx > rx) {
      if (!v0) v0 = [fx, y0];else if (v0[1] >= y1) return;
      v1 = [fx, y1];
    } else {
      if (!v0) v0 = [fx, y1];else if (v0[1] < y0) return;
      v1 = [fx, y0];
    }
  } else {
    fm = (lx - rx) / (ry - ly);
    fb = fy - fm * fx;

    if (fm < -1 || fm > 1) {
      if (lx > rx) {
        if (!v0) v0 = [(y0 - fb) / fm, y0];else if (v0[1] >= y1) return;
        v1 = [(y1 - fb) / fm, y1];
      } else {
        if (!v0) v0 = [(y1 - fb) / fm, y1];else if (v0[1] < y0) return;
        v1 = [(y0 - fb) / fm, y0];
      }
    } else {
      if (ly < ry) {
        if (!v0) v0 = [x0, fm * x0 + fb];else if (v0[0] >= x1) return;
        v1 = [x1, fm * x1 + fb];
      } else {
        if (!v0) v0 = [x1, fm * x1 + fb];else if (v0[0] < x0) return;
        v1 = [x0, fm * x0 + fb];
      }
    }
  }

  edge[0] = v0;
  edge[1] = v1;
  return true;
}

function clipEdges(x0, y0, x1, y1) {
  var i = _Diagram.edges.length,
      edge;

  while (i--) {
    if (!connectEdge(edge = _Diagram.edges[i], x0, y0, x1, y1) || !clipEdge(edge, x0, y0, x1, y1) || !(Math.abs(edge[0][0] - edge[1][0]) > _Diagram.epsilon || Math.abs(edge[0][1] - edge[1][1]) > _Diagram.epsilon)) {
      delete _Diagram.edges[i];
    }
  }
}
},{"./Diagram":"ZmLv"}],"bFev":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createCell = createCell;
exports.cellHalfedgeStart = cellHalfedgeStart;
exports.cellHalfedgeEnd = cellHalfedgeEnd;
exports.sortCellHalfedges = sortCellHalfedges;
exports.clipCells = clipCells;

var _Edge = require("./Edge");

var _Diagram = require("./Diagram");

function createCell(site) {
  return _Diagram.cells[site.index] = {
    site: site,
    halfedges: []
  };
}

function cellHalfedgeAngle(cell, edge) {
  var site = cell.site,
      va = edge.left,
      vb = edge.right;
  if (site === vb) vb = va, va = site;
  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);
  if (site === va) va = edge[1], vb = edge[0];else va = edge[0], vb = edge[1];
  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);
}

function cellHalfedgeStart(cell, edge) {
  return edge[+(edge.left !== cell.site)];
}

function cellHalfedgeEnd(cell, edge) {
  return edge[+(edge.left === cell.site)];
}

function sortCellHalfedges() {
  for (var i = 0, n = _Diagram.cells.length, cell, halfedges, j, m; i < n; ++i) {
    if ((cell = _Diagram.cells[i]) && (m = (halfedges = cell.halfedges).length)) {
      var index = new Array(m),
          array = new Array(m);

      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, _Diagram.edges[halfedges[j]]);

      index.sort(function (i, j) {
        return array[j] - array[i];
      });

      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];

      for (j = 0; j < m; ++j) halfedges[j] = array[j];
    }
  }
}

function clipCells(x0, y0, x1, y1) {
  var nCells = _Diagram.cells.length,
      iCell,
      cell,
      site,
      iHalfedge,
      halfedges,
      nHalfedges,
      start,
      startX,
      startY,
      end,
      endX,
      endY,
      cover = true;

  for (iCell = 0; iCell < nCells; ++iCell) {
    if (cell = _Diagram.cells[iCell]) {
      site = cell.site;
      halfedges = cell.halfedges;
      iHalfedge = halfedges.length; // Remove any dangling clipped edges.

      while (iHalfedge--) {
        if (!_Diagram.edges[halfedges[iHalfedge]]) {
          halfedges.splice(iHalfedge, 1);
        }
      } // Insert any border edges as necessary.


      iHalfedge = 0, nHalfedges = halfedges.length;

      while (iHalfedge < nHalfedges) {
        end = cellHalfedgeEnd(cell, _Diagram.edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];
        start = cellHalfedgeStart(cell, _Diagram.edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];

        if (Math.abs(endX - startX) > _Diagram.epsilon || Math.abs(endY - startY) > _Diagram.epsilon) {
          halfedges.splice(iHalfedge, 0, _Diagram.edges.push((0, _Edge.createBorderEdge)(site, end, Math.abs(endX - x0) < _Diagram.epsilon && y1 - endY > _Diagram.epsilon ? [x0, Math.abs(startX - x0) < _Diagram.epsilon ? startY : y1] : Math.abs(endY - y1) < _Diagram.epsilon && x1 - endX > _Diagram.epsilon ? [Math.abs(startY - y1) < _Diagram.epsilon ? startX : x1, y1] : Math.abs(endX - x1) < _Diagram.epsilon && endY - y0 > _Diagram.epsilon ? [x1, Math.abs(startX - x1) < _Diagram.epsilon ? startY : y0] : Math.abs(endY - y0) < _Diagram.epsilon && endX - x0 > _Diagram.epsilon ? [Math.abs(startY - y0) < _Diagram.epsilon ? startX : x0, y0] : null)) - 1);
          ++nHalfedges;
        }
      }

      if (nHalfedges) cover = false;
    }
  } // If there weren’t any edges, have the closest site cover the extent.
  // It doesn’t matter which corner of the extent we measure!


  if (cover) {
    var dx,
        dy,
        d2,
        dc = Infinity;

    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {
      if (cell = _Diagram.cells[iCell]) {
        site = cell.site;
        dx = site[0] - x0;
        dy = site[1] - y0;
        d2 = dx * dx + dy * dy;
        if (d2 < dc) dc = d2, cover = cell;
      }
    }

    if (cover) {
      var v00 = [x0, y0],
          v01 = [x0, y1],
          v11 = [x1, y1],
          v10 = [x1, y0];
      cover.halfedges.push(_Diagram.edges.push((0, _Edge.createBorderEdge)(site = cover.site, v00, v01)) - 1, _Diagram.edges.push((0, _Edge.createBorderEdge)(site, v01, v11)) - 1, _Diagram.edges.push((0, _Edge.createBorderEdge)(site, v11, v10)) - 1, _Diagram.edges.push((0, _Edge.createBorderEdge)(site, v10, v00)) - 1);
    }
  } // Lastly delete any cells with no edges; these were entirely clipped.


  for (iCell = 0; iCell < nCells; ++iCell) {
    if (cell = _Diagram.cells[iCell]) {
      if (!cell.halfedges.length) {
        delete _Diagram.cells[iCell];
      }
    }
  }
}
},{"./Edge":"R6Hk","./Diagram":"ZmLv"}],"Nay5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.attachCircle = attachCircle;
exports.detachCircle = detachCircle;
exports.firstCircle = void 0;

var _RedBlackTree = require("./RedBlackTree");

var _Diagram = require("./Diagram");

var circlePool = [];
var firstCircle;
exports.firstCircle = firstCircle;

function Circle() {
  (0, _RedBlackTree.RedBlackNode)(this);
  this.x = this.y = this.arc = this.site = this.cy = null;
}

function attachCircle(arc) {
  var lArc = arc.P,
      rArc = arc.N;
  if (!lArc || !rArc) return;
  var lSite = lArc.site,
      cSite = arc.site,
      rSite = rArc.site;
  if (lSite === rSite) return;
  var bx = cSite[0],
      by = cSite[1],
      ax = lSite[0] - bx,
      ay = lSite[1] - by,
      cx = rSite[0] - bx,
      cy = rSite[1] - by;
  var d = 2 * (ax * cy - ay * cx);
  if (d >= -_Diagram.epsilon2) return;
  var ha = ax * ax + ay * ay,
      hc = cx * cx + cy * cy,
      x = (cy * ha - ay * hc) / d,
      y = (ax * hc - cx * ha) / d;
  var circle = circlePool.pop() || new Circle();
  circle.arc = arc;
  circle.site = cSite;
  circle.x = x + bx;
  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom

  arc.circle = circle;
  var before = null,
      node = _Diagram.circles._;

  while (node) {
    if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {
      if (node.L) node = node.L;else {
        before = node.P;
        break;
      }
    } else {
      if (node.R) node = node.R;else {
        before = node;
        break;
      }
    }
  }

  _Diagram.circles.insert(before, circle);

  if (!before) exports.firstCircle = firstCircle = circle;
}

function detachCircle(arc) {
  var circle = arc.circle;

  if (circle) {
    if (!circle.P) exports.firstCircle = firstCircle = circle.N;

    _Diagram.circles.remove(circle);

    circlePool.push(circle);
    (0, _RedBlackTree.RedBlackNode)(circle);
    arc.circle = null;
  }
}
},{"./RedBlackTree":"getm","./Diagram":"ZmLv"}],"YRKg":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.removeBeach = removeBeach;
exports.addBeach = addBeach;

var _RedBlackTree = require("./RedBlackTree");

var _Cell = require("./Cell");

var _Circle = require("./Circle");

var _Edge = require("./Edge");

var _Diagram = require("./Diagram");

var beachPool = [];

function Beach() {
  (0, _RedBlackTree.RedBlackNode)(this);
  this.edge = this.site = this.circle = null;
}

function createBeach(site) {
  var beach = beachPool.pop() || new Beach();
  beach.site = site;
  return beach;
}

function detachBeach(beach) {
  (0, _Circle.detachCircle)(beach);

  _Diagram.beaches.remove(beach);

  beachPool.push(beach);
  (0, _RedBlackTree.RedBlackNode)(beach);
}

function removeBeach(beach) {
  var circle = beach.circle,
      x = circle.x,
      y = circle.cy,
      vertex = [x, y],
      previous = beach.P,
      next = beach.N,
      disappearing = [beach];
  detachBeach(beach);
  var lArc = previous;

  while (lArc.circle && Math.abs(x - lArc.circle.x) < _Diagram.epsilon && Math.abs(y - lArc.circle.cy) < _Diagram.epsilon) {
    previous = lArc.P;
    disappearing.unshift(lArc);
    detachBeach(lArc);
    lArc = previous;
  }

  disappearing.unshift(lArc);
  (0, _Circle.detachCircle)(lArc);
  var rArc = next;

  while (rArc.circle && Math.abs(x - rArc.circle.x) < _Diagram.epsilon && Math.abs(y - rArc.circle.cy) < _Diagram.epsilon) {
    next = rArc.N;
    disappearing.push(rArc);
    detachBeach(rArc);
    rArc = next;
  }

  disappearing.push(rArc);
  (0, _Circle.detachCircle)(rArc);
  var nArcs = disappearing.length,
      iArc;

  for (iArc = 1; iArc < nArcs; ++iArc) {
    rArc = disappearing[iArc];
    lArc = disappearing[iArc - 1];
    (0, _Edge.setEdgeEnd)(rArc.edge, lArc.site, rArc.site, vertex);
  }

  lArc = disappearing[0];
  rArc = disappearing[nArcs - 1];
  rArc.edge = (0, _Edge.createEdge)(lArc.site, rArc.site, null, vertex);
  (0, _Circle.attachCircle)(lArc);
  (0, _Circle.attachCircle)(rArc);
}

function addBeach(site) {
  var x = site[0],
      directrix = site[1],
      lArc,
      rArc,
      dxl,
      dxr,
      node = _Diagram.beaches._;

  while (node) {
    dxl = leftBreakPoint(node, directrix) - x;
    if (dxl > _Diagram.epsilon) node = node.L;else {
      dxr = x - rightBreakPoint(node, directrix);

      if (dxr > _Diagram.epsilon) {
        if (!node.R) {
          lArc = node;
          break;
        }

        node = node.R;
      } else {
        if (dxl > -_Diagram.epsilon) {
          lArc = node.P;
          rArc = node;
        } else if (dxr > -_Diagram.epsilon) {
          lArc = node;
          rArc = node.N;
        } else {
          lArc = rArc = node;
        }

        break;
      }
    }
  }

  (0, _Cell.createCell)(site);
  var newArc = createBeach(site);

  _Diagram.beaches.insert(lArc, newArc);

  if (!lArc && !rArc) return;

  if (lArc === rArc) {
    (0, _Circle.detachCircle)(lArc);
    rArc = createBeach(lArc.site);

    _Diagram.beaches.insert(newArc, rArc);

    newArc.edge = rArc.edge = (0, _Edge.createEdge)(lArc.site, newArc.site);
    (0, _Circle.attachCircle)(lArc);
    (0, _Circle.attachCircle)(rArc);
    return;
  }

  if (!rArc) {
    // && lArc
    newArc.edge = (0, _Edge.createEdge)(lArc.site, newArc.site);
    return;
  } // else lArc !== rArc


  (0, _Circle.detachCircle)(lArc);
  (0, _Circle.detachCircle)(rArc);
  var lSite = lArc.site,
      ax = lSite[0],
      ay = lSite[1],
      bx = site[0] - ax,
      by = site[1] - ay,
      rSite = rArc.site,
      cx = rSite[0] - ax,
      cy = rSite[1] - ay,
      d = 2 * (bx * cy - by * cx),
      hb = bx * bx + by * by,
      hc = cx * cx + cy * cy,
      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];
  (0, _Edge.setEdgeEnd)(rArc.edge, lSite, rSite, vertex);
  newArc.edge = (0, _Edge.createEdge)(lSite, site, null, vertex);
  rArc.edge = (0, _Edge.createEdge)(site, rSite, null, vertex);
  (0, _Circle.attachCircle)(lArc);
  (0, _Circle.attachCircle)(rArc);
}

function leftBreakPoint(arc, directrix) {
  var site = arc.site,
      rfocx = site[0],
      rfocy = site[1],
      pby2 = rfocy - directrix;
  if (!pby2) return rfocx;
  var lArc = arc.P;
  if (!lArc) return -Infinity;
  site = lArc.site;
  var lfocx = site[0],
      lfocy = site[1],
      plby2 = lfocy - directrix;
  if (!plby2) return lfocx;
  var hl = lfocx - rfocx,
      aby2 = 1 / pby2 - 1 / plby2,
      b = hl / plby2;
  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;
  return (rfocx + lfocx) / 2;
}

function rightBreakPoint(arc, directrix) {
  var rArc = arc.N;
  if (rArc) return leftBreakPoint(rArc, directrix);
  var site = arc.site;
  return site[1] === directrix ? site[0] : Infinity;
}
},{"./RedBlackTree":"getm","./Cell":"bFev","./Circle":"Nay5","./Edge":"R6Hk","./Diagram":"ZmLv"}],"ZmLv":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Diagram;
exports.edges = exports.circles = exports.cells = exports.beaches = exports.epsilon2 = exports.epsilon = void 0;

var _Beach = require("./Beach");

var _Cell = require("./Cell");

var _Circle = require("./Circle");

var _Edge = require("./Edge");

var _RedBlackTree = _interopRequireDefault(require("./RedBlackTree"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var epsilon = 1e-6;
exports.epsilon = epsilon;
var epsilon2 = 1e-12;
exports.epsilon2 = epsilon2;
var beaches;
exports.beaches = beaches;
var cells;
exports.cells = cells;
var circles;
exports.circles = circles;
var edges;
exports.edges = edges;

function triangleArea(a, b, c) {
  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);
}

function lexicographic(a, b) {
  return b[1] - a[1] || b[0] - a[0];
}

function Diagram(sites, extent) {
  var site = sites.sort(lexicographic).pop(),
      x,
      y,
      circle;
  exports.edges = edges = [];
  exports.cells = cells = new Array(sites.length);
  exports.beaches = beaches = new _RedBlackTree.default();
  exports.circles = circles = new _RedBlackTree.default();

  while (true) {
    circle = _Circle.firstCircle;

    if (site && (!circle || site[1] < circle.y || site[1] === circle.y && site[0] < circle.x)) {
      if (site[0] !== x || site[1] !== y) {
        (0, _Beach.addBeach)(site);
        x = site[0], y = site[1];
      }

      site = sites.pop();
    } else if (circle) {
      (0, _Beach.removeBeach)(circle.arc);
    } else {
      break;
    }
  }

  (0, _Cell.sortCellHalfedges)();

  if (extent) {
    var x0 = +extent[0][0],
        y0 = +extent[0][1],
        x1 = +extent[1][0],
        y1 = +extent[1][1];
    (0, _Edge.clipEdges)(x0, y0, x1, y1);
    (0, _Cell.clipCells)(x0, y0, x1, y1);
  }

  this.edges = edges;
  this.cells = cells;
  exports.beaches = beaches = exports.circles = circles = exports.edges = edges = exports.cells = cells = null;
}

Diagram.prototype = {
  constructor: Diagram,
  polygons: function () {
    var edges = this.edges;
    return this.cells.map(function (cell) {
      var polygon = cell.halfedges.map(function (i) {
        return (0, _Cell.cellHalfedgeStart)(cell, edges[i]);
      });
      polygon.data = cell.site.data;
      return polygon;
    });
  },
  triangles: function () {
    var triangles = [],
        edges = this.edges;
    this.cells.forEach(function (cell, i) {
      if (!(m = (halfedges = cell.halfedges).length)) return;
      var site = cell.site,
          halfedges,
          j = -1,
          m,
          s0,
          e1 = edges[halfedges[m - 1]],
          s1 = e1.left === site ? e1.right : e1.left;

      while (++j < m) {
        s0 = s1;
        e1 = edges[halfedges[j]];
        s1 = e1.left === site ? e1.right : e1.left;

        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {
          triangles.push([site.data, s0.data, s1.data]);
        }
      }
    });
    return triangles;
  },
  links: function () {
    return this.edges.filter(function (edge) {
      return edge.right;
    }).map(function (edge) {
      return {
        source: edge.left.data,
        target: edge.right.data
      };
    });
  },
  find: function (x, y, radius) {
    var that = this,
        i0,
        i1 = that._found || 0,
        n = that.cells.length,
        cell; // Use the previously-found cell, or start with an arbitrary one.

    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;

    var dx = x - cell.site[0],
        dy = y - cell.site[1],
        d2 = dx * dx + dy * dy; // Traverse the half-edges to find a closer cell, if any.

    do {
      cell = that.cells[i0 = i1], i1 = null;
      cell.halfedges.forEach(function (e) {
        var edge = that.edges[e],
            v = edge.left;
        if ((v === cell.site || !v) && !(v = edge.right)) return;
        var vx = x - v[0],
            vy = y - v[1],
            v2 = vx * vx + vy * vy;
        if (v2 < d2) d2 = v2, i1 = v.index;
      });
    } while (i1 !== null);

    that._found = i0;
    return radius == null || d2 <= radius * radius ? cell.site : null;
  }
};
},{"./Beach":"YRKg","./Cell":"bFev","./Circle":"Nay5","./Edge":"R6Hk","./RedBlackTree":"getm"}],"huq3":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant"));

var _point = require("./point");

var _Diagram = _interopRequireWildcard(require("./Diagram"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var x = _point.x,
      y = _point.y,
      extent = null;

  function voronoi(data) {
    return new _Diagram.default(data.map(function (d, i) {
      var s = [Math.round(x(d, i, data) / _Diagram.epsilon) * _Diagram.epsilon, Math.round(y(d, i, data) / _Diagram.epsilon) * _Diagram.epsilon];
      s.index = i;
      s.data = d;
      return s;
    }), extent);
  }

  voronoi.polygons = function (data) {
    return voronoi(data).polygons();
  };

  voronoi.links = function (data) {
    return voronoi(data).links();
  };

  voronoi.triangles = function (data) {
    return voronoi(data).triangles();
  };

  voronoi.x = function (_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : (0, _constant.default)(+_), voronoi) : x;
  };

  voronoi.y = function (_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : (0, _constant.default)(+_), voronoi) : y;
  };

  voronoi.extent = function (_) {
    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];
  };

  voronoi.size = function (_) {
    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];
  };

  return voronoi;
}
},{"./constant":"aCvo","./point":"Xind","./Diagram":"ZmLv"}],"rLIC":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "voronoi", {
  enumerable: true,
  get: function () {
    return _voronoi.default;
  }
});

var _voronoi = _interopRequireDefault(require("./voronoi"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./voronoi":"huq3"}],"UMU7":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ZoomEvent;

function ZoomEvent(target, type, transform) {
  this.target = target;
  this.type = type;
  this.transform = transform;
}
},{}],"OLQI":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Transform = Transform;
exports.default = transform;
exports.identity = void 0;

function Transform(k, x, y) {
  this.k = k;
  this.x = x;
  this.y = y;
}

Transform.prototype = {
  constructor: Transform,
  scale: function (k) {
    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);
  },
  translate: function (x, y) {
    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);
  },
  apply: function (point) {
    return [point[0] * this.k + this.x, point[1] * this.k + this.y];
  },
  applyX: function (x) {
    return x * this.k + this.x;
  },
  applyY: function (y) {
    return y * this.k + this.y;
  },
  invert: function (location) {
    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];
  },
  invertX: function (x) {
    return (x - this.x) / this.k;
  },
  invertY: function (y) {
    return (y - this.y) / this.k;
  },
  rescaleX: function (x) {
    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));
  },
  rescaleY: function (y) {
    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));
  },
  toString: function () {
    return "translate(" + this.x + "," + this.y + ") scale(" + this.k + ")";
  }
};
var identity = new Transform(1, 0, 0);
exports.identity = identity;
transform.prototype = Transform.prototype;

function transform(node) {
  while (!node.__zoom) if (!(node = node.parentNode)) return identity;

  return node.__zoom;
}
},{}],"LZWf":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Dispatch = require("d3-dispatch");

var _d3Drag = require("d3-drag");

var _d3Interpolate = require("d3-interpolate");

var _d3Selection = require("d3-selection");

var _d3Transition = require("d3-transition");

var _constant = _interopRequireDefault(require("./constant.js"));

var _event = _interopRequireDefault(require("./event.js"));

var _transform = require("./transform.js");

var _noevent = _interopRequireWildcard(require("./noevent.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Ignore right-click, since that should open the context menu.
function defaultFilter() {
  return !_d3Selection.event.ctrlKey && !_d3Selection.event.button;
}

function defaultExtent() {
  var e = this;

  if (e instanceof SVGElement) {
    e = e.ownerSVGElement || e;

    if (e.hasAttribute("viewBox")) {
      e = e.viewBox.baseVal;
      return [[e.x, e.y], [e.x + e.width, e.y + e.height]];
    }

    return [[0, 0], [e.width.baseVal.value, e.height.baseVal.value]];
  }

  return [[0, 0], [e.clientWidth, e.clientHeight]];
}

function defaultTransform() {
  return this.__zoom || _transform.identity;
}

function defaultWheelDelta() {
  return -_d3Selection.event.deltaY * (_d3Selection.event.deltaMode === 1 ? 0.05 : _d3Selection.event.deltaMode ? 1 : 0.002);
}

function defaultTouchable() {
  return navigator.maxTouchPoints || "ontouchstart" in this;
}

function defaultConstrain(transform, extent, translateExtent) {
  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],
      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],
      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],
      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];
  return transform.translate(dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1), dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1));
}

function _default() {
  var filter = defaultFilter,
      extent = defaultExtent,
      constrain = defaultConstrain,
      wheelDelta = defaultWheelDelta,
      touchable = defaultTouchable,
      scaleExtent = [0, Infinity],
      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],
      duration = 250,
      interpolate = _d3Interpolate.interpolateZoom,
      listeners = (0, _d3Dispatch.dispatch)("start", "zoom", "end"),
      touchstarting,
      touchending,
      touchDelay = 500,
      wheelDelay = 150,
      clickDistance2 = 0;

  function zoom(selection) {
    selection.property("__zoom", defaultTransform).on("wheel.zoom", wheeled).on("mousedown.zoom", mousedowned).on("dblclick.zoom", dblclicked).filter(touchable).on("touchstart.zoom", touchstarted).on("touchmove.zoom", touchmoved).on("touchend.zoom touchcancel.zoom", touchended).style("touch-action", "none").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }

  zoom.transform = function (collection, transform, point) {
    var selection = collection.selection ? collection.selection() : collection;
    selection.property("__zoom", defaultTransform);

    if (collection !== selection) {
      schedule(collection, transform, point);
    } else {
      selection.interrupt().each(function () {
        gesture(this, arguments).start().zoom(null, typeof transform === "function" ? transform.apply(this, arguments) : transform).end();
      });
    }
  };

  zoom.scaleBy = function (selection, k, p) {
    zoom.scaleTo(selection, function () {
      var k0 = this.__zoom.k,
          k1 = typeof k === "function" ? k.apply(this, arguments) : k;
      return k0 * k1;
    }, p);
  };

  zoom.scaleTo = function (selection, k, p) {
    zoom.transform(selection, function () {
      var e = extent.apply(this, arguments),
          t0 = this.__zoom,
          p0 = p == null ? centroid(e) : typeof p === "function" ? p.apply(this, arguments) : p,
          p1 = t0.invert(p0),
          k1 = typeof k === "function" ? k.apply(this, arguments) : k;
      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);
    }, p);
  };

  zoom.translateBy = function (selection, x, y) {
    zoom.transform(selection, function () {
      return constrain(this.__zoom.translate(typeof x === "function" ? x.apply(this, arguments) : x, typeof y === "function" ? y.apply(this, arguments) : y), extent.apply(this, arguments), translateExtent);
    });
  };

  zoom.translateTo = function (selection, x, y, p) {
    zoom.transform(selection, function () {
      var e = extent.apply(this, arguments),
          t = this.__zoom,
          p0 = p == null ? centroid(e) : typeof p === "function" ? p.apply(this, arguments) : p;
      return constrain(_transform.identity.translate(p0[0], p0[1]).scale(t.k).translate(typeof x === "function" ? -x.apply(this, arguments) : -x, typeof y === "function" ? -y.apply(this, arguments) : -y), e, translateExtent);
    }, p);
  };

  function scale(transform, k) {
    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));
    return k === transform.k ? transform : new _transform.Transform(k, transform.x, transform.y);
  }

  function translate(transform, p0, p1) {
    var x = p0[0] - p1[0] * transform.k,
        y = p0[1] - p1[1] * transform.k;
    return x === transform.x && y === transform.y ? transform : new _transform.Transform(transform.k, x, y);
  }

  function centroid(extent) {
    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];
  }

  function schedule(transition, transform, point) {
    transition.on("start.zoom", function () {
      gesture(this, arguments).start();
    }).on("interrupt.zoom end.zoom", function () {
      gesture(this, arguments).end();
    }).tween("zoom", function () {
      var that = this,
          args = arguments,
          g = gesture(that, args),
          e = extent.apply(that, args),
          p = point == null ? centroid(e) : typeof point === "function" ? point.apply(that, args) : point,
          w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),
          a = that.__zoom,
          b = typeof transform === "function" ? transform.apply(that, args) : transform,
          i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));
      return function (t) {
        if (t === 1) t = b; // Avoid rounding error on end.
        else {
            var l = i(t),
                k = w / l[2];
            t = new _transform.Transform(k, p[0] - l[0] * k, p[1] - l[1] * k);
          }
        g.zoom(null, t);
      };
    });
  }

  function gesture(that, args, clean) {
    return !clean && that.__zooming || new Gesture(that, args);
  }

  function Gesture(that, args) {
    this.that = that;
    this.args = args;
    this.active = 0;
    this.extent = extent.apply(that, args);
    this.taps = 0;
  }

  Gesture.prototype = {
    start: function () {
      if (++this.active === 1) {
        this.that.__zooming = this;
        this.emit("start");
      }

      return this;
    },
    zoom: function (key, transform) {
      if (this.mouse && key !== "mouse") this.mouse[1] = transform.invert(this.mouse[0]);
      if (this.touch0 && key !== "touch") this.touch0[1] = transform.invert(this.touch0[0]);
      if (this.touch1 && key !== "touch") this.touch1[1] = transform.invert(this.touch1[0]);
      this.that.__zoom = transform;
      this.emit("zoom");
      return this;
    },
    end: function () {
      if (--this.active === 0) {
        delete this.that.__zooming;
        this.emit("end");
      }

      return this;
    },
    emit: function (type) {
      (0, _d3Selection.customEvent)(new _event.default(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);
    }
  };

  function wheeled() {
    if (!filter.apply(this, arguments)) return;
    var g = gesture(this, arguments),
        t = this.__zoom,
        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),
        p = (0, _d3Selection.mouse)(this); // If the mouse is in the same location as before, reuse it.
    // If there were recent wheel events, reset the wheel idle timeout.

    if (g.wheel) {
      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {
        g.mouse[1] = t.invert(g.mouse[0] = p);
      }

      clearTimeout(g.wheel);
    } // If this wheel event won’t trigger a transform change, ignore it.
    else if (t.k === k) return; // Otherwise, capture the mouse point and location at the start.
      else {
          g.mouse = [p, t.invert(p)];
          (0, _d3Transition.interrupt)(this);
          g.start();
        }

    (0, _noevent.default)();
    g.wheel = setTimeout(wheelidled, wheelDelay);
    g.zoom("mouse", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));

    function wheelidled() {
      g.wheel = null;
      g.end();
    }
  }

  function mousedowned() {
    if (touchending || !filter.apply(this, arguments)) return;
    var g = gesture(this, arguments, true),
        v = (0, _d3Selection.select)(_d3Selection.event.view).on("mousemove.zoom", mousemoved, true).on("mouseup.zoom", mouseupped, true),
        p = (0, _d3Selection.mouse)(this),
        x0 = _d3Selection.event.clientX,
        y0 = _d3Selection.event.clientY;
    (0, _d3Drag.dragDisable)(_d3Selection.event.view);
    (0, _noevent.nopropagation)();
    g.mouse = [p, this.__zoom.invert(p)];
    (0, _d3Transition.interrupt)(this);
    g.start();

    function mousemoved() {
      (0, _noevent.default)();

      if (!g.moved) {
        var dx = _d3Selection.event.clientX - x0,
            dy = _d3Selection.event.clientY - y0;
        g.moved = dx * dx + dy * dy > clickDistance2;
      }

      g.zoom("mouse", constrain(translate(g.that.__zoom, g.mouse[0] = (0, _d3Selection.mouse)(g.that), g.mouse[1]), g.extent, translateExtent));
    }

    function mouseupped() {
      v.on("mousemove.zoom mouseup.zoom", null);
      (0, _d3Drag.dragEnable)(_d3Selection.event.view, g.moved);
      (0, _noevent.default)();
      g.end();
    }
  }

  function dblclicked() {
    if (!filter.apply(this, arguments)) return;
    var t0 = this.__zoom,
        p0 = (0, _d3Selection.mouse)(this),
        p1 = t0.invert(p0),
        k1 = t0.k * (_d3Selection.event.shiftKey ? 0.5 : 2),
        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);
    (0, _noevent.default)();
    if (duration > 0) (0, _d3Selection.select)(this).transition().duration(duration).call(schedule, t1, p0);else (0, _d3Selection.select)(this).call(zoom.transform, t1);
  }

  function touchstarted() {
    if (!filter.apply(this, arguments)) return;
    var touches = _d3Selection.event.touches,
        n = touches.length,
        g = gesture(this, arguments, _d3Selection.event.changedTouches.length === n),
        started,
        i,
        t,
        p;
    (0, _noevent.nopropagation)();

    for (i = 0; i < n; ++i) {
      t = touches[i], p = (0, _d3Selection.touch)(this, touches, t.identifier);
      p = [p, this.__zoom.invert(p), t.identifier];
      if (!g.touch0) g.touch0 = p, started = true, g.taps = 1 + !!touchstarting;else if (!g.touch1 && g.touch0[2] !== p[2]) g.touch1 = p, g.taps = 0;
    }

    if (touchstarting) touchstarting = clearTimeout(touchstarting);

    if (started) {
      if (g.taps < 2) touchstarting = setTimeout(function () {
        touchstarting = null;
      }, touchDelay);
      (0, _d3Transition.interrupt)(this);
      g.start();
    }
  }

  function touchmoved() {
    if (!this.__zooming) return;
    var g = gesture(this, arguments),
        touches = _d3Selection.event.changedTouches,
        n = touches.length,
        i,
        t,
        p,
        l;
    (0, _noevent.default)();
    if (touchstarting) touchstarting = clearTimeout(touchstarting);
    g.taps = 0;

    for (i = 0; i < n; ++i) {
      t = touches[i], p = (0, _d3Selection.touch)(this, touches, t.identifier);
      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;
    }

    t = g.that.__zoom;

    if (g.touch1) {
      var p0 = g.touch0[0],
          l0 = g.touch0[1],
          p1 = g.touch1[0],
          l1 = g.touch1[1],
          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,
          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;
      t = scale(t, Math.sqrt(dp / dl));
      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];
      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];
    } else if (g.touch0) p = g.touch0[0], l = g.touch0[1];else return;

    g.zoom("touch", constrain(translate(t, p, l), g.extent, translateExtent));
  }

  function touchended() {
    if (!this.__zooming) return;
    var g = gesture(this, arguments),
        touches = _d3Selection.event.changedTouches,
        n = touches.length,
        i,
        t;
    (0, _noevent.nopropagation)();
    if (touchending) clearTimeout(touchending);
    touchending = setTimeout(function () {
      touchending = null;
    }, touchDelay);

    for (i = 0; i < n; ++i) {
      t = touches[i];
      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;
    }

    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;
    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);else {
      g.end(); // If this was a dbltap, reroute to the (optional) dblclick.zoom handler.

      if (g.taps === 2) {
        var p = (0, _d3Selection.select)(this).on("dblclick.zoom");
        if (p) p.apply(this, arguments);
      }
    }
  }

  zoom.wheelDelta = function (_) {
    return arguments.length ? (wheelDelta = typeof _ === "function" ? _ : (0, _constant.default)(+_), zoom) : wheelDelta;
  };

  zoom.filter = function (_) {
    return arguments.length ? (filter = typeof _ === "function" ? _ : (0, _constant.default)(!!_), zoom) : filter;
  };

  zoom.touchable = function (_) {
    return arguments.length ? (touchable = typeof _ === "function" ? _ : (0, _constant.default)(!!_), zoom) : touchable;
  };

  zoom.extent = function (_) {
    return arguments.length ? (extent = typeof _ === "function" ? _ : (0, _constant.default)([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;
  };

  zoom.scaleExtent = function (_) {
    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];
  };

  zoom.translateExtent = function (_) {
    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];
  };

  zoom.constrain = function (_) {
    return arguments.length ? (constrain = _, zoom) : constrain;
  };

  zoom.duration = function (_) {
    return arguments.length ? (duration = +_, zoom) : duration;
  };

  zoom.interpolate = function (_) {
    return arguments.length ? (interpolate = _, zoom) : interpolate;
  };

  zoom.on = function () {
    var value = listeners.on.apply(listeners, arguments);
    return value === listeners ? zoom : value;
  };

  zoom.clickDistance = function (_) {
    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);
  };

  return zoom;
}
},{"d3-dispatch":"D3zY","d3-drag":"kkdU","d3-interpolate":"k9aH","d3-selection":"ysDv","d3-transition":"UqVV","./constant.js":"aCvo","./event.js":"UMU7","./transform.js":"OLQI","./noevent.js":"BxLv"}],"MHdZ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "zoom", {
  enumerable: true,
  get: function () {
    return _zoom.default;
  }
});
Object.defineProperty(exports, "zoomTransform", {
  enumerable: true,
  get: function () {
    return _transform.default;
  }
});
Object.defineProperty(exports, "zoomIdentity", {
  enumerable: true,
  get: function () {
    return _transform.identity;
  }
});

var _zoom = _interopRequireDefault(require("./zoom.js"));

var _transform = _interopRequireWildcard(require("./transform.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./zoom.js":"LZWf","./transform.js":"OLQI"}],"UzF0":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  version: true
};
Object.defineProperty(exports, "version", {
  enumerable: true,
  get: function () {
    return _package.version;
  }
});

var _package = require("./dist/package.js");

var _d3Array = require("d3-array");

Object.keys(_d3Array).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Array[key];
    }
  });
});

var _d3Axis = require("d3-axis");

Object.keys(_d3Axis).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Axis[key];
    }
  });
});

var _d3Brush = require("d3-brush");

Object.keys(_d3Brush).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Brush[key];
    }
  });
});

var _d3Chord = require("d3-chord");

Object.keys(_d3Chord).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Chord[key];
    }
  });
});

var _d3Collection = require("d3-collection");

Object.keys(_d3Collection).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Collection[key];
    }
  });
});

var _d3Color = require("d3-color");

Object.keys(_d3Color).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Color[key];
    }
  });
});

var _d3Contour = require("d3-contour");

Object.keys(_d3Contour).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Contour[key];
    }
  });
});

var _d3Dispatch = require("d3-dispatch");

Object.keys(_d3Dispatch).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Dispatch[key];
    }
  });
});

var _d3Drag = require("d3-drag");

Object.keys(_d3Drag).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Drag[key];
    }
  });
});

var _d3Dsv = require("d3-dsv");

Object.keys(_d3Dsv).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Dsv[key];
    }
  });
});

var _d3Ease = require("d3-ease");

Object.keys(_d3Ease).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Ease[key];
    }
  });
});

var _d3Fetch = require("d3-fetch");

Object.keys(_d3Fetch).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Fetch[key];
    }
  });
});

var _d3Force = require("d3-force");

Object.keys(_d3Force).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Force[key];
    }
  });
});

var _d3Format = require("d3-format");

Object.keys(_d3Format).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Format[key];
    }
  });
});

var _d3Geo = require("d3-geo");

Object.keys(_d3Geo).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Geo[key];
    }
  });
});

var _d3Hierarchy = require("d3-hierarchy");

Object.keys(_d3Hierarchy).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Hierarchy[key];
    }
  });
});

var _d3Interpolate = require("d3-interpolate");

Object.keys(_d3Interpolate).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Interpolate[key];
    }
  });
});

var _d3Path = require("d3-path");

Object.keys(_d3Path).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Path[key];
    }
  });
});

var _d3Polygon = require("d3-polygon");

Object.keys(_d3Polygon).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Polygon[key];
    }
  });
});

var _d3Quadtree = require("d3-quadtree");

Object.keys(_d3Quadtree).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Quadtree[key];
    }
  });
});

var _d3Random = require("d3-random");

Object.keys(_d3Random).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Random[key];
    }
  });
});

var _d3Scale = require("d3-scale");

Object.keys(_d3Scale).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Scale[key];
    }
  });
});

var _d3ScaleChromatic = require("d3-scale-chromatic");

Object.keys(_d3ScaleChromatic).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3ScaleChromatic[key];
    }
  });
});

var _d3Selection = require("d3-selection");

Object.keys(_d3Selection).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Selection[key];
    }
  });
});

var _d3Shape = require("d3-shape");

Object.keys(_d3Shape).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Shape[key];
    }
  });
});

var _d3Time = require("d3-time");

Object.keys(_d3Time).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Time[key];
    }
  });
});

var _d3TimeFormat = require("d3-time-format");

Object.keys(_d3TimeFormat).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3TimeFormat[key];
    }
  });
});

var _d3Timer = require("d3-timer");

Object.keys(_d3Timer).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Timer[key];
    }
  });
});

var _d3Transition = require("d3-transition");

Object.keys(_d3Transition).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Transition[key];
    }
  });
});

var _d3Voronoi = require("d3-voronoi");

Object.keys(_d3Voronoi).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Voronoi[key];
    }
  });
});

var _d3Zoom = require("d3-zoom");

Object.keys(_d3Zoom).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Zoom[key];
    }
  });
});
},{"./dist/package.js":"pT13","d3-array":"K0bd","d3-axis":"mp0m","d3-brush":"tkh5","d3-chord":"Iy8J","d3-collection":"S3hn","d3-color":"Peej","d3-contour":"SiBy","d3-dispatch":"D3zY","d3-drag":"kkdU","d3-dsv":"EC2w","d3-ease":"pJ11","d3-fetch":"grWT","d3-force":"oYRE","d3-format":"VuZR","d3-geo":"Ah6W","d3-hierarchy":"Kps6","d3-interpolate":"k9aH","d3-path":"OTyq","d3-polygon":"H15P","d3-quadtree":"lUbg","d3-random":"Gz2j","d3-scale":"zL2z","d3-scale-chromatic":"ado2","d3-selection":"ysDv","d3-shape":"maww","d3-time":"hQYG","d3-time-format":"UYpZ","d3-timer":"rdzS","d3-transition":"UqVV","d3-voronoi":"rLIC","d3-zoom":"MHdZ"}],"UYxz":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sliderHorizontal = sliderHorizontal;
exports.sliderVertical = sliderVertical;
exports.sliderTop = sliderTop;
exports.sliderRight = sliderRight;
exports.sliderBottom = sliderBottom;
exports.sliderLeft = sliderLeft;

var _d3Array = require("d3-array");

var _d3Axis = require("d3-axis");

var _d3Dispatch = require("d3-dispatch");

var _d3Drag = require("d3-drag");

var _d3Ease = require("d3-ease");

var _d3Scale = require("d3-scale");

var _d3Selection = require("d3-selection");

require("d3-transition");

var UPDATE_DURATION = 200;
var SLIDER_END_PADDING = 8;
var KEYBOARD_NUMBER_STEPS = 100;
var top = 1;
var right = 2;
var bottom = 3;
var left = 4;

function translateX(x) {
  return 'translate(' + x + ',0)';
}

function translateY(y) {
  return 'translate(0,' + y + ')';
}

function slider(orientation, scale) {
  scale = typeof scale !== 'undefined' ? scale : null;
  var value = [0];
  var defaultValue = [0];
  var domain = [0, 10];
  var width = 100;
  var height = 100;
  var displayValue = true;
  var handle = 'M-5.5,-5.5v10l6,5.5l6,-5.5v-10z';
  var step = null;
  var tickValues = null;
  var marks = null;
  var tickFormat = null;
  var ticks = null;
  var displayFormat = null;
  var fill = null;
  var listeners = (0, _d3Dispatch.dispatch)('onchange', 'start', 'end', 'drag');
  var selection = null;
  var identityClamped = null;
  var handleIndex = null;
  var k = orientation === top || orientation === left ? -1 : 1;
  var x = orientation === left || orientation === right ? 'y' : 'x';
  var y = orientation === left || orientation === right ? 'x' : 'y';
  var transformAlong = orientation === top || orientation === bottom ? translateX : translateY;
  var transformAcross = orientation === top || orientation === bottom ? translateY : translateX;
  var axisFunction = null;

  switch (orientation) {
    case top:
      axisFunction = _d3Axis.axisTop;
      break;

    case right:
      axisFunction = _d3Axis.axisRight;
      break;

    case bottom:
      axisFunction = _d3Axis.axisBottom;
      break;

    case left:
      axisFunction = _d3Axis.axisLeft;
      break;
  }

  var handleSelection = null;
  var fillSelection = null;
  var textSelection = null;

  if (scale) {
    domain = [(0, _d3Array.min)(scale.domain()), (0, _d3Array.max)(scale.domain())];

    if (orientation === top || orientation === bottom) {
      width = (0, _d3Array.max)(scale.range()) - (0, _d3Array.min)(scale.range());
    } else {
      height = (0, _d3Array.max)(scale.range()) - (0, _d3Array.min)(scale.range());
    }

    scale = scale.clamp(true);
  }

  function slider(context) {
    selection = context.selection ? context.selection() : context;

    if (scale) {
      scale = scale.range([(0, _d3Array.min)(scale.range()), (0, _d3Array.min)(scale.range()) + (orientation === top || orientation === bottom ? width : height)]);
    } else {
      scale = domain[0] instanceof Date ? (0, _d3Scale.scaleTime)() : (0, _d3Scale.scaleLinear)();
      scale = scale.domain(domain).range(orientation === top || orientation === bottom ? [0, width] : [height, 0]).clamp(true);
    }

    identityClamped = (0, _d3Scale.scaleLinear)().range(scale.range()).domain(scale.range()).clamp(true); // Ensure value is valid

    value = value.map(function (d) {
      return (0, _d3Scale.scaleLinear)().range(domain).domain(domain).clamp(true)(d);
    });
    tickFormat = tickFormat || scale.tickFormat();
    displayFormat = displayFormat || tickFormat || scale.tickFormat();
    var axis = selection.selectAll('.axis').data([null]);
    axis.enter().append('g').attr('transform', transformAcross(k * 7)).attr('class', 'axis');
    var sliderSelection = selection.selectAll('.slider').data([null]);
    var sliderEnter = sliderSelection.enter().append('g').attr('class', 'slider').attr('cursor', orientation === top || orientation === bottom ? 'ew-resize' : 'ns-resize').call((0, _d3Drag.drag)().on('start', dragstarted).on('drag', dragged).on('end', dragended));
    sliderEnter.append('line').attr('class', 'track').attr(x + '1', scale.range()[0] - k * SLIDER_END_PADDING).attr('stroke', '#bbb').attr('stroke-width', 6).attr('stroke-linecap', 'round');
    sliderEnter.append('line').attr('class', 'track-inset').attr(x + '1', scale.range()[0] - k * SLIDER_END_PADDING).attr('stroke', '#eee').attr('stroke-width', 4).attr('stroke-linecap', 'round');

    if (fill) {
      sliderEnter.append('line').attr('class', 'track-fill').attr(x + '1', value.length === 1 ? scale.range()[0] - k * SLIDER_END_PADDING : scale(value[0])).attr('stroke', fill).attr('stroke-width', 4).attr('stroke-linecap', 'round');
    }

    sliderEnter.append('line').attr('class', 'track-overlay').attr(x + '1', scale.range()[0] - k * SLIDER_END_PADDING).attr('stroke', 'transparent').attr('stroke-width', 40).attr('stroke-linecap', 'round').merge(sliderSelection.select('.track-overlay'));
    handleSelection = sliderEnter.selectAll('.parameter-value').data(value);
    var handleEnter = handleSelection.enter().append('g').attr('class', 'parameter-value').attr('transform', function (d) {
      return transformAlong(scale(d));
    }).attr('font-family', 'sans-serif').attr('text-anchor', orientation === right ? 'start' : orientation === left ? 'end' : 'middle');
    handleEnter.append('path').attr('transform', 'rotate(' + (orientation + 1) * 90 + ')').attr('d', handle).attr('class', 'handle').attr('aria-label', 'handle').attr('aria-valuemax', domain[1]).attr('aria-valuemin', domain[0]).attr('aria-valuenow', value).attr('aria-orientation', orientation === left || orientation === right ? 'vertical' : 'horizontal').attr('focusable', 'true').attr('tabindex', 0).attr('fill', 'white').attr('stroke', '#777').on('keydown', function (d, i) {
      var change = step || (domain[1] - domain[0]) / KEYBOARD_NUMBER_STEPS; // TODO: Don't need to loop over value because we know which element needs to change

      function newValue(adjustedValue) {
        return value.map(function (d, j) {
          if (value.length === 2) {
            return j === i ? i === 0 ? Math.min(adjustedValue, alignedValue(value[1])) : Math.max(adjustedValue, alignedValue(value[0])) : d;
          } else {
            return j === i ? adjustedValue : d;
          }
        });
      }

      switch (_d3Selection.event.key) {
        case 'ArrowLeft':
        case 'ArrowDown':
          slider.value(newValue(+value[i] - change));

          _d3Selection.event.preventDefault();

          break;

        case 'PageDown':
          slider.value(newValue(+value[i] - 2 * change));

          _d3Selection.event.preventDefault();

          break;

        case 'ArrowRight':
        case 'ArrowUp':
          slider.value(newValue(+value[i] + change));

          _d3Selection.event.preventDefault();

          break;

        case 'PageUp':
          slider.value(newValue(+value[i] + 2 * change));

          _d3Selection.event.preventDefault();

          break;

        case 'Home':
          slider.value(newValue(domain[0]));

          _d3Selection.event.preventDefault();

          break;

        case 'End':
          slider.value(newValue(domain[1]));

          _d3Selection.event.preventDefault();

          break;
      }
    });

    if (displayValue && value.length === 1) {
      handleEnter.append('text').attr('font-size', 10) // TODO: Remove coupling to font-size in d3-axis
      .attr(y, k * 27).attr('dy', orientation === top ? '0em' : orientation === bottom ? '.71em' : '.32em').text(tickFormat(value[0]));
    }

    context.select('.track').attr(x + '2', scale.range()[1] + k * SLIDER_END_PADDING);
    context.select('.track-inset').attr(x + '2', scale.range()[1] + k * SLIDER_END_PADDING);

    if (fill) {
      context.select('.track-fill').attr(x + '2', value.length === 1 ? scale(value[0]) : scale(value[1]));
    }

    context.select('.track-overlay').attr(x + '2', scale.range()[1] + k * SLIDER_END_PADDING);
    context.select('.axis').call(axisFunction(scale).tickFormat(tickFormat).ticks(ticks).tickValues(tickValues)); // https://bl.ocks.org/mbostock/4323929

    selection.select('.axis').select('.domain').remove();
    context.select('.axis').attr('transform', transformAcross(k * 7));
    context.selectAll('.axis text').attr('fill', '#aaa').attr(y, k * 20).attr('dy', orientation === top ? '0em' : orientation === bottom ? '.71em' : '.32em').attr('text-anchor', orientation === right ? 'start' : orientation === left ? 'end' : 'middle');
    context.selectAll('.axis line').attr('stroke', '#aaa');
    context.selectAll('.parameter-value').attr('transform', function (d) {
      return transformAlong(scale(d));
    });
    fadeTickText();

    function computeDragNewValue(pos) {
      var adjustedValue = alignedValue(scale.invert(pos));
      return value.map(function (d, i) {
        if (value.length === 2) {
          return i === handleIndex ? handleIndex === 0 ? Math.min(adjustedValue, alignedValue(value[1])) : Math.max(adjustedValue, alignedValue(value[0])) : d;
        } else {
          return i === handleIndex ? adjustedValue : d;
        }
      });
    }

    function dragstarted() {
      (0, _d3Selection.select)(this).classed('active', true);
      var pos = identityClamped(orientation === bottom || orientation === top ? _d3Selection.event.x : _d3Selection.event.y); // Handle cases where both handles are at the same end of the slider

      if (value[0] === domain[0] && value[1] === domain[0]) {
        handleIndex = 1;
      } else if (value[0] === domain[1] && value[1] === domain[1]) {
        handleIndex = 0;
      } else {
        handleIndex = (0, _d3Array.scan)(value.map(function (d) {
          return Math.abs(d - alignedValue(scale.invert(pos)));
        }));
      }

      var newValue = value.map(function (d, i) {
        return i === handleIndex ? alignedValue(scale.invert(pos)) : d;
      });
      updateHandle(newValue);
      listeners.call('start', sliderSelection, newValue.length === 1 ? newValue[0] : newValue);
      updateValue(newValue, true);
    }

    function dragged() {
      var pos = identityClamped(orientation === bottom || orientation === top ? _d3Selection.event.x : _d3Selection.event.y);
      var newValue = computeDragNewValue(pos);
      updateHandle(newValue);
      listeners.call('drag', sliderSelection, newValue.length === 1 ? newValue[0] : newValue);
      updateValue(newValue, true);
    }

    function dragended() {
      (0, _d3Selection.select)(this).classed('active', false);
      var pos = identityClamped(orientation === bottom || orientation === top ? _d3Selection.event.x : _d3Selection.event.y);
      var newValue = computeDragNewValue(pos);
      updateHandle(newValue);
      listeners.call('end', sliderSelection, newValue.length === 1 ? newValue[0] : newValue);
      updateValue(newValue, true);
      handleIndex = null;
    }

    textSelection = selection.select('.parameter-value text');
    fillSelection = selection.select('.track-fill');
  }

  function fadeTickText() {
    if (selection) {
      if (displayValue && value.length === 1) {
        var distances = [];
        selection.selectAll('.axis .tick').each(function (d) {
          distances.push(Math.abs(d - value[0]));
        });
        var index = (0, _d3Array.scan)(distances);
        selection.selectAll('.axis .tick text').attr('opacity', function (d, i) {
          return i === index ? 0 : 1;
        });
      }
    }
  }

  function alignedValue(newValue) {
    if (step) {
      var valueModStep = (newValue - domain[0]) % step;
      var alignValue = newValue - valueModStep;

      if (valueModStep * 2 > step) {
        alignValue += step;
      }

      return newValue instanceof Date ? new Date(alignValue) : alignValue;
    }

    if (marks) {
      var index = (0, _d3Array.scan)(marks.map(function (d) {
        return Math.abs(newValue - d);
      }));
      return marks[index];
    }

    return newValue;
  }

  function updateValue(newValue, notifyListener) {
    if (value[0] !== newValue[0] || value.length > 1 && value[1] !== newValue[1]) {
      value = newValue;

      if (notifyListener) {
        listeners.call('onchange', slider, newValue.length === 1 ? newValue[0] : newValue);
      }

      fadeTickText();
    }
  }

  function updateHandle(newValue, animate) {
    if (selection) {
      animate = typeof animate !== 'undefined' ? animate : false;

      if (animate) {
        selection.selectAll('.parameter-value').data(newValue).transition().ease(_d3Ease.easeQuadOut).duration(UPDATE_DURATION).attr('transform', function (d) {
          return transformAlong(scale(d));
        }).select('.handle').attr('aria-valuenow', function (d) {
          return d;
        });

        if (fill) {
          fillSelection.transition().ease(_d3Ease.easeQuadOut).duration(UPDATE_DURATION).attr(x + '1', value.length === 1 ? scale.range()[0] - k * SLIDER_END_PADDING : scale(newValue[0])).attr(x + '2', value.length === 1 ? scale(newValue[0]) : scale(newValue[1]));
        }
      } else {
        selection.selectAll('.parameter-value').data(newValue).attr('transform', function (d) {
          return transformAlong(scale(d));
        }).select('.handle').attr('aria-valuenow', function (d) {
          return d;
        });

        if (fill) {
          fillSelection.attr(x + '1', value.length === 1 ? scale.range()[0] - k * SLIDER_END_PADDING : scale(newValue[0])).attr(x + '2', value.length === 1 ? scale(newValue[0]) : scale(newValue[1]));
        }
      }

      if (displayValue) {
        textSelection.text(displayFormat(newValue[0]));
      }
    }
  }

  slider.min = function (_) {
    if (!arguments.length) return domain[0];
    domain[0] = _;
    return slider;
  };

  slider.max = function (_) {
    if (!arguments.length) return domain[1];
    domain[1] = _;
    return slider;
  };

  slider.domain = function (_) {
    if (!arguments.length) return domain;
    domain = _;
    return slider;
  };

  slider.width = function (_) {
    if (!arguments.length) return width;
    width = _;
    return slider;
  };

  slider.height = function (_) {
    if (!arguments.length) return height;
    height = _;
    return slider;
  };

  slider.tickFormat = function (_) {
    if (!arguments.length) return tickFormat;
    tickFormat = _;
    return slider;
  };

  slider.displayFormat = function (_) {
    if (!arguments.length) return displayFormat;
    displayFormat = _;
    return slider;
  };

  slider.ticks = function (_) {
    if (!arguments.length) return ticks;
    ticks = _;
    return slider;
  };

  slider.value = function (_) {
    if (!arguments.length) {
      if (value.length === 1) {
        return value[0];
      }

      return value;
    }

    var toArray = Array.isArray(_) ? _ : [_];
    toArray.sort(function (a, b) {
      return a - b;
    });
    var pos = toArray.map(scale).map(identityClamped);
    var newValue = pos.map(scale.invert).map(alignedValue);
    updateHandle(newValue, true);
    updateValue(newValue, true);
    return slider;
  };

  slider.silentValue = function (_) {
    if (!arguments.length) {
      if (value.length === 1) {
        return value[0];
      }

      return value;
    }

    var toArray = Array.isArray(_) ? _ : [_];
    toArray.sort(function (a, b) {
      return a - b;
    });
    var pos = toArray.map(scale).map(identityClamped);
    var newValue = pos.map(scale.invert).map(alignedValue);
    updateHandle(newValue, false);
    updateValue(newValue, false);
    return slider;
  };

  slider.default = function (_) {
    if (!arguments.length) {
      if (defaultValue.length === 1) {
        return defaultValue[0];
      }

      return defaultValue;
    }

    var toArray = Array.isArray(_) ? _ : [_];
    toArray.sort(function (a, b) {
      return a - b;
    });
    defaultValue = toArray;
    value = toArray;
    return slider;
  };

  slider.step = function (_) {
    if (!arguments.length) return step;
    step = _;
    return slider;
  };

  slider.tickValues = function (_) {
    if (!arguments.length) return tickValues;
    tickValues = _;
    return slider;
  };

  slider.marks = function (_) {
    if (!arguments.length) return marks;
    marks = _;
    return slider;
  };

  slider.handle = function (_) {
    if (!arguments.length) return handle;
    handle = _;
    return slider;
  };

  slider.displayValue = function (_) {
    if (!arguments.length) return displayValue;
    displayValue = _;
    return slider;
  };

  slider.fill = function (_) {
    if (!arguments.length) return fill;
    fill = _;
    return slider;
  };

  slider.on = function () {
    var value = listeners.on.apply(listeners, arguments);
    return value === listeners ? slider : value;
  };

  return slider;
}

function sliderHorizontal(scale) {
  return slider(bottom, scale);
}

function sliderVertical(scale) {
  return slider(left, scale);
}

function sliderTop(scale) {
  return slider(top, scale);
}

function sliderRight(scale) {
  return slider(right, scale);
}

function sliderBottom(scale) {
  return slider(bottom, scale);
}

function sliderLeft(scale) {
  return slider(left, scale);
}
},{"d3-array":"K0bd","d3-axis":"mp0m","d3-dispatch":"D3zY","d3-drag":"kkdU","d3-ease":"pJ11","d3-scale":"zL2z","d3-selection":"ysDv","d3-transition":"UqVV"}],"Sf04":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "sliderHorizontal", {
  enumerable: true,
  get: function () {
    return _slider.sliderHorizontal;
  }
});
Object.defineProperty(exports, "sliderVertical", {
  enumerable: true,
  get: function () {
    return _slider.sliderVertical;
  }
});
Object.defineProperty(exports, "sliderTop", {
  enumerable: true,
  get: function () {
    return _slider.sliderTop;
  }
});
Object.defineProperty(exports, "sliderRight", {
  enumerable: true,
  get: function () {
    return _slider.sliderRight;
  }
});
Object.defineProperty(exports, "sliderBottom", {
  enumerable: true,
  get: function () {
    return _slider.sliderBottom;
  }
});
Object.defineProperty(exports, "sliderLeft", {
  enumerable: true,
  get: function () {
    return _slider.sliderLeft;
  }
});

var _slider = require("./src/slider.js");
},{"./src/slider.js":"UYxz"}],"ZfVJ":[function(require,module,exports) {
module.exports = {
  "type": "FeatureCollection",
  "features": [{
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.766708, 40.614911], [-73.768253, 40.614878], [-73.773977, 40.616004], [-73.773631, 40.616327], [-73.768735, 40.620901], [-73.767459, 40.620511], [-73.766978, 40.616919], [-73.766708, 40.614911]]]]
    },
    "properties": {
      "neighbourhood": "Bayswater",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.848597, 40.87167], [-73.845823, 40.870239], [-73.854559, 40.859954], [-73.854665, 40.859586], [-73.856389, 40.857594], [-73.868882, 40.857223], [-73.868318, 40.857862], [-73.869554, 40.857784], [-73.871025, 40.85731], [-73.870481, 40.865414], [-73.870555, 40.869703], [-73.867216, 40.86969], [-73.85745, 40.869533], [-73.85555, 40.871813], [-73.853598, 40.873288], [-73.848597, 40.87167]]]]
    },
    "properties": {
      "neighbourhood": "Allerton",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.782822, 40.843919], [-73.782572, 40.843295], [-73.782607, 40.843286], [-73.782785, 40.843755], [-73.783092, 40.843685], [-73.782874, 40.843124], [-73.782901, 40.843118], [-73.783133, 40.843697], [-73.782807, 40.843779], [-73.782842, 40.843895], [-73.782842, 40.843895], [-73.782869, 40.843891], [-73.782942, 40.843792], [-73.782983, 40.843767], [-73.783475, 40.843655], [-73.783192, 40.842868], [-73.783045, 40.842896], [-73.783245, 40.843472], [-73.78321, 40.843479], [-73.783009, 40.842902], [-73.782911, 40.842922], [-73.782895, 40.84287], [-73.783139, 40.842822], [-73.783117, 40.842771], [-73.782917, 40.842806], [-73.782899, 40.842775], [-73.783124, 40.842736], [-73.783017, 40.842605], [-73.782888, 40.842495], [-73.782733, 40.842522], [-73.782816, 40.842765], [-73.782779, 40.842771], [-73.782707, 40.842532], [-73.782299, 40.842606], [-73.782445, 40.843042], [-73.782408, 40.843048], [-73.782267, 40.842612], [-73.7818, 40.842696], [-73.78197, 40.84322], [-73.781933, 40.843228], [-73.781772, 40.842702], [-73.781247, 40.842797], [-73.781428, 40.843371], [-73.781389, 40.843377], [-73.781216, 40.842805], [-73.780674, 40.842907], [-73.78086, 40.843501], [-73.780829, 40.843507], [-73.780644, 40.84291], [-73.780296, 40.842973], [-73.780293, 40.843778], [-73.780228, 40.843778], [-73.780227, 40.842883], [-73.780292, 40.842882], [-73.780292, 40.842953], [-73.782865, 40.842478], [-73.782716, 40.842447], [-73.782308, 40.842519], [-73.782296, 40.842488], [-73.782435, 40.842466], [-73.782411, 40.84245], [-73.780597, 40.842787], [-73.780585, 40.842754], [-73.782369, 40.842428], [-73.78234, 40.842341], [-73.78216, 40.842371], [-73.782152, 40.842355], [-73.782331, 40.842322], [-73.782311, 40.842224], [-73.782217, 40.842241], [-73.782221, 40.842266], [-73.78216, 40.842278], [-73.782156, 40.842259], [-73.781629, 40.842354], [-73.781621, 40.842329], [-73.782246, 40.842213], [-73.78225, 40.842221], [-73.782306, 40.842211], [-73.782321, 40.842172], [-73.782332, 40.842096], [-73.782372, 40.842067], [-73.782371, 40.842005], [-73.782333, 40.841923], [-73.782293, 40.84193], [-73.782312, 40.841981], [-73.782277, 40.841988], [-73.782267, 40.84195], [-73.781454, 40.842172], [-73.78144, 40.842142], [-73.782324, 40.841898], [-73.782268, 40.841786], [-73.782075, 40.841832], [-73.782081, 40.841841], [-73.782065, 40.841845], [-73.782062, 40.841837], [-73.782038, 40.841842], [-73.782034, 40.841837], [-73.782263, 40.841778], [-73.78224, 40.841736], [-73.782016, 40.841793], [-73.782013, 40.841786], [-73.782037, 40.841778], [-73.782035, 40.841771], [-73.782052, 40.841767], [-73.782054, 40.841773], [-73.782236, 40.841728], [-73.782215, 40.841704], [-73.782166, 40.841689], [-73.782072, 40.841693], [-73.781883, 40.841734], [-73.781866, 40.841687], [-73.781407, 40.841772], [-73.781418, 40.841806], [-73.781367, 40.841813], [-73.781352, 40.841785], [-73.781299, 40.841794], [-73.781321, 40.841858], [-73.781275, 40.841871], [-73.781339, 40.841996], [-73.781308, 40.842003], [-73.781249, 40.841878], [-73.781133, 40.841911], [-73.781198, 40.842042], [-73.781171, 40.842048], [-73.7811, 40.84192], [-73.780979, 40.841953], [-73.781054, 40.842083], [-73.781024, 40.842093], [-73.780955, 40.84196], [-73.780846, 40.841989], [-73.780925, 40.842123], [-73.780887, 40.842134], [-73.780814, 40.841999], [-73.780696, 40.842032], [-73.780765, 40.84218], [-73.780721, 40.842192], [-73.780655, 40.842042], [-73.780531, 40.842081], [-73.780592, 40.842206], [-73.780563, 40.842215], [-73.780504, 40.842089], [-73.78044, 40.842109], [-73.780456, 40.842151], [-73.780395, 40.842165], [-73.78037, 40.842108], [-73.780348, 40.842109], [-73.780426, 40.842494], [-73.780299, 40.842512], [-73.780196, 40.842046], [-73.780332, 40.842032], [-73.780345, 40.842096], [-73.780378, 40.842094], [-73.780377, 40.842083], [-73.781261, 40.84184], [-73.781238, 40.841768], [-73.78185, 40.841654], [-73.781839, 40.841535], [-73.781839, 40.84147], [-73.781839, 40.841396], [-73.781823, 40.841337], [-73.781805, 40.841283], [-73.781762, 40.841216], [-73.781718, 40.84119], [-73.781685, 40.841167], [-73.781661, 40.841124], [-73.780842, 40.841276], [-73.780929, 40.841545], [-73.780892, 40.841553], [-73.780798, 40.841256], [-73.781649, 40.841098], [-73.781614, 40.841007], [-73.781396, 40.841048], [-73.781391, 40.841037], [-73.781611, 40.840996], [-73.781597, 40.840949], [-73.781379, 40.840987], [-73.781375, 40.840979], [-73.781594, 40.84094], [-73.781568, 40.840835], [-73.781543, 40.840785], [-73.781513, 40.840773], [-73.781481, 40.840764], [-73.781448, 40.840754], [-73.781427, 40.840736], [-73.781418, 40.840715], [-73.78142, 40.840695], [-73.781442, 40.840677], [-73.781466, 40.84066], [-73.781477, 40.840644], [-73.781486, 40.840621], [-73.781486, 40.840601], [-73.781477, 40.84057], [-73.781462, 40.840551], [-73.781453, 40.840527], [-73.781453, 40.840505], [-73.781464, 40.840486], [-73.781513, 40.840451], [-73.781543, 40.840423], [-73.781543, 40.840387], [-73.781534, 40.840344], [-73.781515, 40.840288], [-73.781492, 40.840206], [-73.781254, 40.840255], [-73.781249, 40.840244], [-73.781489, 40.840197], [-73.781466, 40.840175], [-73.781454, 40.840136], [-73.781363, 40.83973], [-73.781184, 40.839762], [-73.781179, 40.839746], [-73.781359, 40.839712], [-73.781341, 40.839479], [-73.78114, 40.839505], [-73.781139, 40.839494], [-73.78134, 40.83947], [-73.781325, 40.839292], [-73.781568, 40.838537], [-73.781722, 40.838224], [-73.782004, 40.838016], [-73.781885, 40.83765], [-73.782381, 40.837324], [-73.782728, 40.837488], [-73.782815, 40.837422], [-73.782906, 40.83732], [-73.782887, 40.837165], [-73.782797, 40.836921], [-73.782704, 40.836843], [-73.782681, 40.836484], [-73.782823, 40.836338], [-73.783029, 40.836346], [-73.783382, 40.836909], [-73.783664, 40.836812], [-73.784102, 40.836726], [-73.784218, 40.836755], [-73.784313, 40.836813], [-73.784485, 40.837024], [-73.784915, 40.836842], [-73.784885, 40.836792], [-73.784981, 40.836746], [-73.785082, 40.836882], [-73.784984, 40.83693], [-73.784943, 40.836875], [-73.784503, 40.837058], [-73.78485, 40.83747], [-73.785126, 40.837446], [-73.78564, 40.837064], [-73.785831, 40.83721], [-73.785794, 40.837233], [-73.785653, 40.837132], [-73.785166, 40.837471], [-73.785277, 40.837757], [-73.785578, 40.837927], [-73.785499, 40.83848], [-73.785548, 40.838726], [-73.78553, 40.838798], [-73.785735, 40.839234], [-73.78593, 40.839429], [-73.786146, 40.839587], [-73.786273, 40.839588], [-73.786526, 40.839723], [-73.7869, 40.839715], [-73.787304, 40.839675], [-73.78733, 40.839703], [-73.787408, 40.839678], [-73.787414, 40.839687], [-73.787336, 40.83971], [-73.787389, 40.839766], [-73.787492, 40.83999], [-73.787491, 40.840049], [-73.78745, 40.840072], [-73.787639, 40.840532], [-73.787357, 40.840591], [-73.787492, 40.840842], [-73.787717, 40.840804], [-73.787713, 40.840781], [-73.787919, 40.840743], [-73.787925, 40.840755], [-73.788181, 40.840711], [-73.788164, 40.840662], [-73.788139, 40.840664], [-73.788094, 40.840502], [-73.788159, 40.840491], [-73.788211, 40.840653], [-73.788188, 40.840659], [-73.788206, 40.840702], [-73.78824, 40.840701], [-73.788255, 40.840746], [-73.787966, 40.840799], [-73.787958, 40.840785], [-73.787775, 40.840817], [-73.787785, 40.840843], [-73.787524, 40.84088], [-73.787579, 40.840933], [-73.787787, 40.840892], [-73.787864, 40.841082], [-73.787606, 40.841142], [-73.787612, 40.841198], [-73.787801, 40.84144], [-73.787845, 40.841471], [-73.787897, 40.84148], [-73.787952, 40.841479], [-73.788044, 40.841462], [-73.788122, 40.841462], [-73.788197, 40.841478], [-73.788239, 40.841504], [-73.788252, 40.841529], [-73.788366, 40.841505], [-73.788371, 40.841521], [-73.788261, 40.841542], [-73.78826, 40.841566], [-73.78826, 40.841586], [-73.788253, 40.841621], [-73.788234, 40.841659], [-73.788204, 40.841689], [-73.78816, 40.841715], [-73.788119, 40.841732], [-73.788053, 40.841764], [-73.78802, 40.841784], [-73.788048, 40.841851], [-73.788294, 40.841785], [-73.788302, 40.841804], [-73.788056, 40.841867], [-73.788232, 40.842196], [-73.788385, 40.842382], [-73.788439, 40.842402], [-73.78851, 40.842391], [-73.78852, 40.842412], [-73.788839, 40.84235], [-73.788843, 40.842363], [-73.788528, 40.842426], [-73.788716, 40.842657], [-73.788764, 40.84266], [-73.788791, 40.842722], [-73.788762, 40.842752], [-73.788843, 40.843], [-73.788891, 40.84307], [-73.789058, 40.843235], [-73.789617, 40.843113], [-73.789658, 40.843231], [-73.789786, 40.843208], [-73.789779, 40.843175], [-73.789835, 40.843166], [-73.789855, 40.843232], [-73.789924, 40.843224], [-73.789917, 40.84318], [-73.789929, 40.843177], [-73.78992, 40.843142], [-73.789906, 40.843143], [-73.789882, 40.84305], [-73.789931, 40.843042], [-73.789958, 40.843139], [-73.789944, 40.84314], [-73.78995, 40.843175], [-73.789966, 40.843173], [-73.79, 40.843308], [-73.789952, 40.843313], [-73.789932, 40.843241], [-73.789862, 40.843251], [-73.78989, 40.843381], [-73.789735, 40.843413], [-73.789746, 40.843448], [-73.789899, 40.843417], [-73.789906, 40.843442], [-73.789756, 40.84347], [-73.789804, 40.843587], [-73.789337, 40.843681], [-73.789319, 40.843749], [-73.78933, 40.843794], [-73.78936, 40.843843], [-73.789421, 40.843837], [-73.789464, 40.843946], [-73.789347, 40.843975], [-73.78934, 40.843985], [-73.789347, 40.844011], [-73.789472, 40.844293], [-73.789597, 40.844502], [-73.789929, 40.844924], [-73.79002, 40.844928], [-73.790199, 40.845188], [-73.790496, 40.845493], [-73.790666, 40.845742], [-73.790852, 40.845699], [-73.790989, 40.845653], [-73.791019, 40.845697], [-73.790698, 40.845786], [-73.790961, 40.84623], [-73.790908, 40.846252], [-73.790973, 40.846357], [-73.791064, 40.846346], [-73.791491, 40.846251], [-73.791499, 40.846277], [-73.791128, 40.846358], [-73.791145, 40.846417], [-73.791125, 40.846427], [-73.791181, 40.846556], [-73.791312, 40.846538], [-73.791329, 40.846563], [-73.791414, 40.846548], [-73.791431, 40.846576], [-73.791325, 40.846609], [-73.791381, 40.846706], [-73.79142, 40.846701], [-73.79148, 40.846802], [-73.791793, 40.846732], [-73.791804, 40.846768], [-73.791367, 40.846888], [-73.791384, 40.84695], [-73.791486, 40.846959], [-73.79144, 40.847306], [-73.791698, 40.847253], [-73.791694, 40.847236], [-73.791772, 40.847228], [-73.79192, 40.847229], [-73.79192, 40.847258], [-73.791746, 40.847266], [-73.791716, 40.847273], [-73.791716, 40.847296], [-73.79143, 40.84736], [-73.791417, 40.84748], [-73.791517, 40.84746], [-73.791541, 40.847538], [-73.791267, 40.847602], [-73.791279, 40.847663], [-73.79133, 40.848058], [-73.791607, 40.848027], [-73.791618, 40.848053], [-73.791336, 40.848086], [-73.791363, 40.848232], [-73.79131, 40.8484], [-73.791231, 40.848501], [-73.791245, 40.848552], [-73.79106, 40.848725], [-73.791112, 40.848808], [-73.791097, 40.848816], [-73.791044, 40.848741], [-73.791018, 40.848812], [-73.79092, 40.848867], [-73.791014, 40.848985], [-73.790981, 40.849], [-73.790887, 40.848887], [-73.790247, 40.849179], [-73.789757, 40.849531], [-73.789858, 40.849973], [-73.790161, 40.849923], [-73.790156, 40.849908], [-73.790226, 40.849895], [-73.790226, 40.849909], [-73.79065, 40.849844], [-73.790648, 40.849833], [-73.790926, 40.849782], [-73.790913, 40.849747], [-73.790948, 40.849739], [-73.790989, 40.849828], [-73.790676, 40.849889], [-73.790661, 40.849864], [-73.790441, 40.849892], [-73.790445, 40.849908], [-73.790367, 40.849921], [-73.790363, 40.849906], [-73.790235, 40.849923], [-73.790241, 40.849938], [-73.790171, 40.849952], [-73.790167, 40.849939], [-73.789866, 40.849989], [-73.790018, 40.850316], [-73.790168, 40.850292], [-73.790201, 40.850267], [-73.790207, 40.850286], [-73.790246, 40.850279], [-73.790238, 40.850236], [-73.790281, 40.850221], [-73.790258, 40.850159], [-73.790358, 40.850142], [-73.790405, 40.850273], [-73.790142, 40.850325], [-73.790155, 40.850361], [-73.79022, 40.850348], [-73.790227, 40.850368], [-73.790055, 40.850398], [-73.790053, 40.850383], [-73.790124, 40.850368], [-73.790116, 40.850333], [-73.790024, 40.850348], [-73.790039, 40.850451], [-73.789919, 40.850612], [-73.791017, 40.850408], [-73.791024, 40.850432], [-73.78993, 40.850626], [-73.790032, 40.850769], [-73.790071, 40.850932], [-73.790248, 40.850904], [-73.79025, 40.850913], [-73.790074, 40.85094], [-73.790086, 40.850984], [-73.790265, 40.850953], [-73.790268, 40.850961], [-73.790091, 40.850995], [-73.790124, 40.85119], [-73.789514, 40.851301], [-73.789563, 40.851487], [-73.789661, 40.851477], [-73.789663, 40.851489], [-73.789785, 40.851462], [-73.789777, 40.851437], [-73.789711, 40.851449], [-73.789702, 40.851419], [-73.789684, 40.851419], [-73.789666, 40.851339], [-73.789768, 40.851324], [-73.789779, 40.851349], [-73.789795, 40.851345], [-73.789809, 40.851392], [-73.789795, 40.851395], [-73.789811, 40.851452], [-73.790058, 40.851415], [-73.790018, 40.851259], [-73.79005, 40.851258], [-73.79009, 40.851407], [-73.790345, 40.851367], [-73.790303, 40.851227], [-73.790337, 40.85122], [-73.790379, 40.851359], [-73.790825, 40.85129], [-73.790785, 40.851154], [-73.790818, 40.851149], [-73.790818, 40.851149], [-73.790858, 40.851283], [-73.790987, 40.851264], [-73.790991, 40.851289], [-73.790866, 40.851308], [-73.79089, 40.851404], [-73.79086, 40.851409], [-73.790833, 40.851314], [-73.790385, 40.851386], [-73.790411, 40.851488], [-73.790388, 40.851493], [-73.790355, 40.851391], [-73.790094, 40.851432], [-73.790116, 40.851509], [-73.790073, 40.851517], [-73.790052, 40.85144], [-73.789665, 40.8515], [-73.789726, 40.851693], [-73.790148, 40.851607], [-73.790173, 40.851663], [-73.790892, 40.851547], [-73.790916, 40.851639], [-73.790196, 40.851753], [-73.790216, 40.85184], [-73.790248, 40.851833], [-73.790233, 40.851756], [-73.790455, 40.851723], [-73.790464, 40.851767], [-73.790384, 40.85178], [-73.790387, 40.851799], [-73.790266, 40.851815], [-73.790267, 40.851828], [-73.790295, 40.851828], [-73.790307, 40.851897], [-73.790279, 40.851899], [-73.790299, 40.851969], [-73.790256, 40.851976], [-73.790084, 40.852035], [-73.790155, 40.852251], [-73.790243, 40.852231], [-73.790161, 40.85204], [-73.790195, 40.852031], [-73.790274, 40.852223], [-73.790532, 40.852163], [-73.790452, 40.85199], [-73.790507, 40.851978], [-73.790575, 40.852153], [-73.790806, 40.8521], [-73.790743, 40.851926], [-73.79058, 40.851978], [-73.790561, 40.851944], [-73.790795, 40.851861], [-73.790819, 40.851897], [-73.790794, 40.851914], [-73.790854, 40.852089], [-73.790997, 40.852053], [-73.790987, 40.852035], [-73.791112, 40.852006], [-73.791066, 40.851868], [-73.791021, 40.851879], [-73.791011, 40.851861], [-73.791174, 40.851817], [-73.791183, 40.851836], [-73.791103, 40.851856], [-73.791167, 40.852016], [-73.791188, 40.852016], [-73.791463, 40.851945], [-73.791396, 40.851784], [-73.791329, 40.8518], [-73.79132, 40.85178], [-73.791517, 40.85173], [-73.791523, 40.85175], [-73.791427, 40.851776], [-73.791496, 40.851934], [-73.79177, 40.851871], [-73.791728, 40.851765], [-73.792272, 40.851611], [-73.792262, 40.851587], [-73.792484, 40.851524], [-73.792495, 40.851551], [-73.792291, 40.851608], [-73.792299, 40.851624], [-73.791768, 40.851774], [-73.791802, 40.851862], [-73.792049, 40.851803], [-73.792057, 40.851826], [-73.790164, 40.852272], [-73.79017, 40.852281], [-73.791138, 40.852056], [-73.791206, 40.852198], [-73.791335, 40.852166], [-73.791342, 40.852183], [-73.791213, 40.852215], [-73.791227, 40.852258], [-73.791362, 40.852226], [-73.791365, 40.852233], [-73.791231, 40.852265], [-73.791237, 40.85228], [-73.793183, 40.851809], [-73.793089, 40.851584], [-73.793118, 40.851578], [-73.79322, 40.851828], [-73.793153, 40.851844], [-73.793253, 40.851916], [-73.793238, 40.851931], [-73.793144, 40.85187], [-73.793129, 40.851848], [-73.791246, 40.852305], [-73.791381, 40.852602], [-73.79341, 40.85211], [-73.793384, 40.852033], [-73.79341, 40.852022], [-73.793508, 40.852264], [-73.793479, 40.852273], [-73.793424, 40.852136], [-73.791391, 40.852628], [-73.791446, 40.852772], [-73.790421, 40.853023], [-73.790499, 40.853189], [-73.790771, 40.853119], [-73.790792, 40.853163], [-73.791006, 40.853118], [-73.79099, 40.853036], [-73.791008, 40.853029], [-73.79103, 40.853112], [-73.791454, 40.853011], [-73.79139, 40.852836], [-73.791437, 40.852823], [-73.791503, 40.853005], [-73.791702, 40.852958], [-73.791631, 40.852785], [-73.791656, 40.852777], [-73.79173, 40.852954], [-73.791963, 40.852895], [-73.791894, 40.852721], [-73.791917, 40.852711], [-73.791989, 40.852888], [-73.792224, 40.852832], [-73.792153, 40.852657], [-73.792176, 40.85265], [-73.792252, 40.852823], [-73.792487, 40.85277], [-73.792417, 40.852593], [-73.792437, 40.852586], [-73.79251, 40.852762], [-73.792831, 40.85268], [-73.792765, 40.852508], [-73.792815, 40.852495], [-73.792901, 40.852695], [-73.792839, 40.852708], [-73.790808, 40.853199], [-73.790862, 40.85332], [-73.791114, 40.853264], [-73.791266, 40.853707], [-73.792524, 40.85341], [-73.792386, 40.853062], [-73.792409, 40.853053], [-73.792556, 40.853401], [-73.792979, 40.853303], [-73.792847, 40.852953], [-73.792876, 40.852944], [-73.79304, 40.853371], [-73.793014, 40.853378], [-73.792999, 40.853329], [-73.791274, 40.853732], [-73.79129, 40.853845], [-73.791057, 40.853918], [-73.791284, 40.853861], [-73.79129, 40.853879], [-73.792458, 40.853601], [-73.792488, 40.853672], [-73.792462, 40.85368], [-73.792441, 40.85363], [-73.79107, 40.853945], [-73.791083, 40.853963], [-73.791385, 40.853895], [-73.791584, 40.853891], [-73.791718, 40.853917], [-73.791786, 40.853994], [-73.791818, 40.853989], [-73.791817, 40.85398], [-73.792514, 40.853896], [-73.792506, 40.853854], [-73.792537, 40.853849], [-73.792568, 40.854016], [-73.79253, 40.854019], [-73.792517, 40.853922], [-73.791826, 40.854001], [-73.791821, 40.853997], [-73.791794, 40.854005], [-73.791918, 40.854222], [-73.791338, 40.854439], [-73.791293, 40.854584], [-73.791519, 40.854891], [-73.791868, 40.855417], [-73.792077, 40.855645], [-73.792503, 40.855789], [-73.792488, 40.855947], [-73.792307, 40.856072], [-73.792116, 40.856013], [-73.792017, 40.856177], [-73.792571, 40.856206], [-73.792569, 40.85623], [-73.792638, 40.856236], [-73.792645, 40.856201], [-73.792705, 40.856192], [-73.792688, 40.856335], [-73.793115, 40.856372], [-73.793119, 40.856348], [-73.793157, 40.856351], [-73.793147, 40.856468], [-73.793108, 40.856465], [-73.793115, 40.856405], [-73.792618, 40.856358], [-73.792633, 40.85625], [-73.792568, 40.856245], [-73.792568, 40.856256], [-73.792011, 40.856225], [-73.791987, 40.856366], [-73.791937, 40.856405], [-73.79207, 40.856415], [-73.792059, 40.856441], [-73.792097, 40.85645], [-73.792088, 40.856478], [-73.79207, 40.856476], [-73.792058, 40.856513], [-73.792017, 40.856508], [-73.792009, 40.85654], [-73.791908, 40.856524], [-73.791902, 40.856547], [-73.793051, 40.856726], [-73.793069, 40.85668], [-73.793095, 40.856686], [-73.793057, 40.856816], [-73.793031, 40.856814], [-73.793048, 40.856752], [-73.791894, 40.856569], [-73.791859, 40.856666], [-73.791842, 40.856661], [-73.791828, 40.856668], [-73.791962, 40.856717], [-73.791956, 40.856725], [-73.791823, 40.856676], [-73.791793, 40.85672], [-73.791899, 40.856758], [-73.79193, 40.856769], [-73.791922, 40.856779], [-73.791785, 40.856731], [-73.791707, 40.856852], [-73.79186, 40.856793], [-73.791882, 40.856824], [-73.791836, 40.856843], [-73.791833, 40.856833], [-73.791735, 40.856866], [-73.791821, 40.8569], [-73.791872, 40.856984], [-73.792203, 40.857146], [-73.792228, 40.857115], [-73.792215, 40.857107], [-73.792375, 40.856906], [-73.792428, 40.856929], [-73.792267, 40.857133], [-73.792245, 40.857123], [-73.792222, 40.857152], [-73.792827, 40.857436], [-73.792954, 40.856992], [-73.793013, 40.857003], [-73.792884, 40.857479], [-73.792811, 40.857464], [-73.79186, 40.857004], [-73.791854, 40.857014], [-73.792683, 40.85742], [-73.792609, 40.857508], [-73.792577, 40.857488], [-73.792636, 40.857422], [-73.792113, 40.857167], [-73.791895, 40.857437], [-73.792465, 40.857715], [-73.792542, 40.857625], [-73.79257, 40.85764], [-73.792395, 40.857846], [-73.792374, 40.857829], [-73.792443, 40.857737], [-73.791743, 40.857394], [-73.791758, 40.857374], [-73.791873, 40.857427], [-73.792093, 40.857158], [-73.791843, 40.857029], [-73.791604, 40.857375], [-73.791294, 40.857263], [-73.790942, 40.857553], [-73.791233, 40.857687], [-73.791245, 40.857674], [-73.791316, 40.857705], [-73.791306, 40.857723], [-73.791637, 40.857883], [-73.791756, 40.857761], [-73.791785, 40.857775], [-73.791437, 40.858155], [-73.791409, 40.858142], [-73.791619, 40.857901], [-73.791293, 40.857737], [-73.791279, 40.85775], [-73.791212, 40.857715], [-73.791222, 40.857701], [-73.790932, 40.857568], [-73.790791, 40.85775], [-73.790442, 40.857917], [-73.790236, 40.858154], [-73.790061, 40.85846], [-73.790125, 40.858522], [-73.790136, 40.858517], [-73.79016, 40.858542], [-73.790146, 40.858553], [-73.790201, 40.858602], [-73.790187, 40.85861], [-73.790134, 40.858562], [-73.790121, 40.85857], [-73.790091, 40.858539], [-73.790099, 40.858532], [-73.790046, 40.858475], [-73.789922, 40.858532], [-73.789722, 40.858562], [-73.789343, 40.858561], [-73.788984, 40.858471], [-73.788912, 40.858196], [-73.788879, 40.857913], [-73.788826, 40.857807], [-73.788796, 40.857712], [-73.788794, 40.857593], [-73.788783, 40.857444], [-73.788784, 40.857421], [-73.788265, 40.857507], [-73.788262, 40.857499], [-73.788176, 40.857513], [-73.788182, 40.857534], [-73.788043, 40.85756], [-73.788028, 40.857515], [-73.788166, 40.857488], [-73.788172, 40.857502], [-73.788256, 40.857491], [-73.788254, 40.857484], [-73.788779, 40.857401], [-73.788764, 40.857321], [-73.788732, 40.857218], [-73.788721, 40.857173], [-73.788705, 40.857107], [-73.78871, 40.857047], [-73.788719, 40.856991], [-73.788751, 40.856954], [-73.788762, 40.856913], [-73.788793, 40.856856], [-73.788806, 40.856798], [-73.788796, 40.85675], [-73.788779, 40.856709], [-73.788807, 40.85667], [-73.788839, 40.856641], [-73.788888, 40.856604], [-73.788897, 40.856573], [-73.788883, 40.856528], [-73.788856, 40.85647], [-73.788818, 40.856402], [-73.78877, 40.856349], [-73.788759, 40.856316], [-73.788725, 40.856305], [-73.788653, 40.856303], [-73.788623, 40.856282], [-73.788604, 40.856247], [-73.788582, 40.856163], [-73.788537, 40.856159], [-73.78851, 40.856099], [-73.788521, 40.856074], [-73.788467, 40.855909], [-73.788474, 40.855873], [-73.788438, 40.855775], [-73.788408, 40.855777], [-73.788359, 40.855626], [-73.788426, 40.85533], [-73.788415, 40.855188], [-73.788554, 40.855149], [-73.788537, 40.855102], [-73.788497, 40.855054], [-73.788448, 40.85506], [-73.788432, 40.855037], [-73.788359, 40.855049], [-73.78834, 40.855031], [-73.788321, 40.854928], [-73.788308, 40.854845], [-73.788294, 40.854823], [-73.788294, 40.854804], [-73.788354, 40.854769], [-73.788425, 40.854726], [-73.788428, 40.854675], [-73.788417, 40.854619], [-73.788417, 40.854574], [-73.788458, 40.854485], [-73.788483, 40.854448], [-73.788477, 40.854401], [-73.788431, 40.854343], [-73.78841, 40.854308], [-73.788347, 40.854154], [-73.787868, 40.854273], [-73.787872, 40.854285], [-73.787651, 40.85434], [-73.787647, 40.854332], [-73.787557, 40.854361], [-73.787563, 40.854376], [-73.787363, 40.85442], [-73.787348, 40.854386], [-73.787549, 40.854343], [-73.787554, 40.85435], [-73.787644, 40.854324], [-73.787639, 40.854317], [-73.788345, 40.854132], [-73.788324, 40.854103], [-73.788199, 40.854128], [-73.788168, 40.854086], [-73.787779, 40.854173], [-73.78769, 40.854188], [-73.787658, 40.854191], [-73.787628, 40.854181], [-73.787563, 40.854181], [-73.787431, 40.854198], [-73.787315, 40.854212], [-73.787266, 40.854208], [-73.787224, 40.854193], [-73.787197, 40.854176], [-73.787173, 40.854149], [-73.787145, 40.854099], [-73.787125, 40.854044], [-73.786913, 40.854084], [-73.786907, 40.854064], [-73.787133, 40.854024], [-73.787155, 40.85398], [-73.787208, 40.853954], [-73.787293, 40.853927], [-73.787928, 40.853738], [-73.788005, 40.853665], [-73.788014, 40.853569], [-73.787963, 40.853475], [-73.787605, 40.853115], [-73.787165, 40.852757], [-73.787127, 40.85278], [-73.787122, 40.852774], [-73.787076, 40.8528], [-73.787061, 40.852782], [-73.78711, 40.85276], [-73.787104, 40.852753], [-73.787137, 40.852734], [-73.786938, 40.852579], [-73.786782, 40.852556], [-73.78676, 40.852531], [-73.786769, 40.852455], [-73.786594, 40.852308], [-73.786376, 40.852112], [-73.785882, 40.851789], [-73.785664, 40.851796], [-73.785453, 40.851664], [-73.785402, 40.851646], [-73.785292, 40.851621], [-73.785219, 40.851625], [-73.785101, 40.851653], [-73.785035, 40.851684], [-73.784956, 40.851724], [-73.784899, 40.851734], [-73.784807, 40.851753], [-73.784683, 40.851749], [-73.784335, 40.851776], [-73.784275, 40.851792], [-73.784278, 40.851799], [-73.784132, 40.851833], [-73.784123, 40.851809], [-73.784264, 40.851774], [-73.784267, 40.85178], [-73.784314, 40.851768], [-73.784026, 40.85161], [-73.783979, 40.851533], [-73.783871, 40.851559], [-73.783861, 40.851533], [-73.783972, 40.851508], [-73.783961, 40.851487], [-73.783578, 40.85157], [-73.783562, 40.851565], [-73.783543, 40.851538], [-73.78348, 40.85156], [-73.783475, 40.851557], [-73.78341, 40.851579], [-73.783382, 40.851587], [-73.783376, 40.851577], [-73.783534, 40.851521], [-73.783445, 40.851401], [-73.783496, 40.851369], [-73.783602, 40.85132], [-73.783795, 40.851254], [-73.783988, 40.851188], [-73.784143, 40.851147], [-73.784352, 40.851098], [-73.78448, 40.851072], [-73.784601, 40.851096], [-73.784519, 40.850893], [-73.784448, 40.850905], [-73.784434, 40.850862], [-73.784505, 40.850854], [-73.784474, 40.850791], [-73.784455, 40.850773], [-73.784421, 40.850762], [-73.784392, 40.850762], [-73.784337, 40.850771], [-73.784313, 40.850774], [-73.78427, 40.850766], [-73.784226, 40.85074], [-73.784163, 40.850697], [-73.78408, 40.850631], [-73.784041, 40.850645], [-73.784047, 40.850654], [-73.784021, 40.850664], [-73.784017, 40.850656], [-73.783852, 40.850711], [-73.783841, 40.850693], [-73.783954, 40.850655], [-73.783959, 40.850663], [-73.784011, 40.850647], [-73.784003, 40.850636], [-73.784031, 40.850627], [-73.784035, 40.850635], [-73.784066, 40.850625], [-73.784017, 40.850584], [-73.784004, 40.850505], [-73.784013, 40.850475], [-73.784042, 40.850445], [-73.784126, 40.850387], [-73.784201, 40.85033], [-73.784239, 40.850287], [-73.784258, 40.850253], [-73.784253, 40.850221], [-73.784212, 40.850127], [-73.784205, 40.850094], [-73.7842, 40.850061], [-73.784153, 40.850001], [-73.784097, 40.849951], [-73.784074, 40.849902], [-73.783578, 40.849266], [-73.783535, 40.849221], [-73.7835, 40.849196], [-73.783454, 40.849184], [-73.783394, 40.84919], [-73.783337, 40.8492], [-73.783291, 40.849214], [-73.783236, 40.849222], [-73.783179, 40.849222], [-73.783147, 40.849212], [-73.783117, 40.849183], [-73.783035, 40.849072], [-73.78245, 40.849341], [-73.782218, 40.849167], [-73.782095, 40.849247], [-73.78207, 40.849226], [-73.782193, 40.849143], [-73.782158, 40.849116], [-73.782034, 40.849194], [-73.78202, 40.849188], [-73.781963, 40.849216], [-73.781974, 40.849229], [-73.781792, 40.84932], [-73.781783, 40.849309], [-73.781743, 40.84933], [-73.781755, 40.849341], [-73.781575, 40.849431], [-73.781544, 40.8494], [-73.781719, 40.849306], [-73.781731, 40.849316], [-73.781769, 40.849295], [-73.781762, 40.849287], [-73.781939, 40.849195], [-73.78195, 40.849205], [-73.782011, 40.84918], [-73.782141, 40.849101], [-73.781938, 40.848934], [-73.781848, 40.848948], [-73.781829, 40.848959], [-73.781696, 40.848848], [-73.781616, 40.848896], [-73.781607, 40.848886], [-73.781686, 40.848838], [-73.781614, 40.848772], [-73.78153, 40.848858], [-73.781506, 40.848843], [-73.781595, 40.848753], [-73.781574, 40.848732], [-73.78154, 40.848726], [-73.781456, 40.848813], [-73.781432, 40.8488], [-73.781508, 40.848719], [-73.781493, 40.848715], [-73.781494, 40.84858], [-73.782036, 40.848438], [-73.782002, 40.848344], [-73.782022, 40.84834], [-73.782062, 40.848449], [-73.781789, 40.848527], [-73.781797, 40.848547], [-73.78207, 40.848469], [-73.782077, 40.848422], [-73.782096, 40.848398], [-73.782559, 40.848277], [-73.782619, 40.84824], [-73.782619, 40.84821], [-73.782675, 40.84814], [-73.781895, 40.848327], [-73.781762, 40.848352], [-73.781554, 40.848401], [-73.781526, 40.848343], [-73.781381, 40.848377], [-73.781392, 40.848422], [-73.781337, 40.848433], [-73.781123, 40.848499], [-73.781108, 40.84852], [-73.781088, 40.84852], [-73.781076, 40.848506], [-73.781076, 40.848491], [-73.781094, 40.84848], [-73.781302, 40.848425], [-73.781318, 40.848416], [-73.781318, 40.848394], [-73.781066, 40.848454], [-73.781019, 40.848463], [-73.780992, 40.848463], [-73.780978, 40.848458], [-73.780984, 40.848438], [-73.781011, 40.848418], [-73.78109, 40.848397], [-73.781141, 40.848383], [-73.781306, 40.848348], [-73.781302, 40.848324], [-73.781146, 40.848316], [-73.781125, 40.848324], [-73.781101, 40.848321], [-73.781099, 40.848312], [-73.781107, 40.848295], [-73.781127, 40.848295], [-73.781154, 40.848298], [-73.781154, 40.848287], [-73.781294, 40.848303], [-73.781351, 40.848291], [-73.781371, 40.848332], [-73.781726, 40.848234], [-73.781832, 40.848247], [-73.782637, 40.848073], [-73.782504, 40.847913], [-73.781584, 40.848037], [-73.781484, 40.847882], [-73.781503, 40.847682], [-73.781429, 40.847456], [-73.781522, 40.847313], [-73.781844, 40.847136], [-73.781825, 40.847066], [-73.782053, 40.846991], [-73.782095, 40.846913], [-73.782215, 40.846861], [-73.782164, 40.846636], [-73.781125, 40.846829], [-73.781136, 40.846852], [-73.781068, 40.846866], [-73.781058, 40.846846], [-73.780637, 40.846923], [-73.780677, 40.847061], [-73.780462, 40.8471], [-73.780403, 40.846931], [-73.78106, 40.846803], [-73.781152, 40.846246], [-73.78119, 40.846253], [-73.781107, 40.846747], [-73.781647, 40.846646], [-73.781689, 40.846635], [-73.781718, 40.846408], [-73.781743, 40.846412], [-73.781715, 40.846657], [-73.781099, 40.846772], [-73.781093, 40.846798], [-73.782157, 40.846608], [-73.782142, 40.846578], [-73.782328, 40.846549], [-73.782292, 40.846458], [-73.782513, 40.846409], [-73.782357, 40.845982], [-73.782579, 40.845936], [-73.78252, 40.845758], [-73.782496, 40.845662], [-73.783094, 40.845518], [-73.783146, 40.84531], [-73.783111, 40.845308], [-73.783075, 40.84551], [-73.782575, 40.845602], [-73.782578, 40.845613], [-73.782538, 40.84562], [-73.782542, 40.845637], [-73.782421, 40.845661], [-73.782425, 40.845676], [-73.78182, 40.845782], [-73.781816, 40.845765], [-73.782381, 40.845666], [-73.782377, 40.84565], [-73.782507, 40.845624], [-73.782501, 40.845598], [-73.783051, 40.845497], [-73.783082, 40.845333], [-73.783059, 40.845328], [-73.783095, 40.845169], [-73.78306, 40.845086], [-73.781907, 40.845356], [-73.78184, 40.845488], [-73.781815, 40.845481], [-73.781887, 40.845334], [-73.783075, 40.845056], [-73.783133, 40.845182], [-73.783108, 40.84529], [-73.783152, 40.845296], [-73.783222, 40.845063], [-73.783097, 40.844992], [-73.782976, 40.844681], [-73.783365, 40.844445], [-73.783357, 40.844403], [-73.783335, 40.844362], [-73.783321, 40.844348], [-73.783285, 40.84434], [-73.783234, 40.844348], [-73.783155, 40.844364], [-73.7831, 40.844383], [-73.78306, 40.844372], [-73.783046, 40.844325], [-73.783011, 40.844173], [-73.78327, 40.844069], [-73.783095, 40.843866], [-73.783496, 40.843732], [-73.783484, 40.843679], [-73.782986, 40.843794], [-73.782893, 40.843895], [-73.782907, 40.843936], [-73.780574, 40.84447], [-73.780547, 40.84447], [-73.780576, 40.844501], [-73.780527, 40.844525], [-73.780527, 40.844525], [-73.780527, 40.844525], [-73.780527, 40.844525], [-73.780527, 40.844525], [-73.779927, 40.843883], [-73.779979, 40.843856], [-73.780533, 40.844453], [-73.780533, 40.844453], [-73.78056, 40.844449], [-73.780369, 40.843977], [-73.780396, 40.843966], [-73.780585, 40.844435], [-73.781063, 40.844328], [-73.780877, 40.843862], [-73.780912, 40.843856], [-73.78109, 40.84432], [-73.781546, 40.844216], [-73.781352, 40.843713], [-73.781377, 40.843704], [-73.781576, 40.844208], [-73.782008, 40.84411], [-73.7818, 40.843584], [-73.781833, 40.843576], [-73.782038, 40.844103], [-73.782437, 40.844009], [-73.782216, 40.843446], [-73.782249, 40.843436], [-73.782469, 40.843999], [-73.782469, 40.843999], [-73.782822, 40.843919], [-73.782822, 40.843919]]]]
    },
    "properties": {
      "neighbourhood": "City Island",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.901603, 40.76777], [-73.903906, 40.76814], [-73.904667, 40.768545], [-73.905605, 40.768717], [-73.916607, 40.770407], [-73.917262, 40.770785], [-73.922323, 40.774415], [-73.923036, 40.775387], [-73.923976, 40.774622], [-73.928277, 40.776899], [-73.927082, 40.77772], [-73.926318, 40.778242], [-73.924816, 40.778758], [-73.924234, 40.779101], [-73.923187, 40.780248], [-73.922957, 40.780441], [-73.92263, 40.780565], [-73.9221, 40.780852], [-73.920976, 40.781768], [-73.919965, 40.782635], [-73.91909, 40.783368], [-73.918189, 40.783933], [-73.917738, 40.784076], [-73.917245, 40.784142], [-73.917171, 40.784193], [-73.917182, 40.784552], [-73.916833, 40.785191], [-73.915752, 40.786108], [-73.915417, 40.786064], [-73.91526, 40.786192], [-73.915587, 40.78643], [-73.914239, 40.787856], [-73.9126, 40.789376], [-73.91223, 40.789179], [-73.912069, 40.789339], [-73.911951, 40.789402], [-73.91208, 40.789522], [-73.911774, 40.789723], [-73.911618, 40.789586], [-73.91125, 40.789744], [-73.911131, 40.790114], [-73.909859, 40.790945], [-73.90678, 40.790375], [-73.906495, 40.790181], [-73.902512, 40.789472], [-73.902399, 40.789552], [-73.902063, 40.789494], [-73.902034, 40.789415], [-73.900774, 40.789144], [-73.900326, 40.789008], [-73.89694, 40.786625], [-73.896512, 40.786069], [-73.896379, 40.786131], [-73.896401, 40.786158], [-73.896353, 40.786179], [-73.896304, 40.786119], [-73.89635, 40.786097], [-73.896369, 40.78612], [-73.896503, 40.786057], [-73.896379, 40.785909], [-73.896268, 40.785961], [-73.896287, 40.785984], [-73.896218, 40.786016], [-73.896044, 40.7858], [-73.896114, 40.785767], [-73.896133, 40.785791], [-73.896243, 40.78574], [-73.89614, 40.785607], [-73.896005, 40.785667], [-73.896027, 40.785689], [-73.89598, 40.785712], [-73.89593, 40.785649], [-73.895977, 40.785627], [-73.896, 40.785656], [-73.896126, 40.785593], [-73.895829, 40.785222], [-73.896832, 40.784428], [-73.896777, 40.784388], [-73.896759, 40.784403], [-73.896723, 40.784378], [-73.896734, 40.784368], [-73.896725, 40.784361], [-73.89673, 40.784357], [-73.896721, 40.784351], [-73.896756, 40.784322], [-73.896772, 40.784334], [-73.896788, 40.784321], [-73.896828, 40.784349], [-73.896807, 40.784366], [-73.896859, 40.784404], [-73.897083, 40.784251], [-73.896973, 40.78416], [-73.898749, 40.782781], [-73.901146, 40.782711], [-73.901724, 40.782129], [-73.902188, 40.781757], [-73.902512, 40.781108], [-73.90258, 40.780815], [-73.902677, 40.780594], [-73.902677, 40.780353], [-73.902343, 40.780187], [-73.902183, 40.780359], [-73.90215, 40.78078], [-73.902036, 40.781203], [-73.901291, 40.781858], [-73.901218, 40.781819], [-73.900728, 40.781979], [-73.900346, 40.782066], [-73.90035, 40.782164], [-73.899479, 40.78217], [-73.898654, 40.781995], [-73.897186, 40.782807], [-73.897114, 40.782723], [-73.897054, 40.782756], [-73.897025, 40.782788], [-73.896977, 40.782799], [-73.896937, 40.782822], [-73.896909, 40.782852], [-73.89687, 40.782858], [-73.896819, 40.782887], [-73.896789, 40.782914], [-73.896755, 40.782923], [-73.896712, 40.782946], [-73.896685, 40.782971], [-73.896646, 40.782983], [-73.896595, 40.783012], [-73.896574, 40.783039], [-73.896534, 40.783046], [-73.896484, 40.783073], [-73.89646, 40.7831], [-73.896419, 40.783109], [-73.896364, 40.78314], [-73.896341, 40.783165], [-73.896309, 40.78317], [-73.896255, 40.7832], [-73.896225, 40.783228], [-73.896181, 40.783242], [-73.896003, 40.783337], [-73.895991, 40.783356], [-73.895971, 40.783371], [-73.895951, 40.783379], [-73.89592, 40.783384], [-73.895743, 40.783482], [-73.89573, 40.7835], [-73.895708, 40.783515], [-73.895686, 40.783523], [-73.895662, 40.783525], [-73.895484, 40.783626], [-73.89547, 40.783645], [-73.895447, 40.783661], [-73.895424, 40.78367], [-73.895395, 40.783674], [-73.894971, 40.78391], [-73.894957, 40.783931], [-73.894937, 40.783947], [-73.894911, 40.783958], [-73.894879, 40.783962], [-73.894714, 40.784052], [-73.894694, 40.78408], [-73.894663, 40.784097], [-73.894625, 40.784103], [-73.894585, 40.784096], [-73.894552, 40.784078], [-73.894442, 40.784135], [-73.894454, 40.784177], [-73.894435, 40.784216], [-73.894387, 40.784242], [-73.894325, 40.78424], [-73.89428, 40.784212], [-73.894264, 40.784176], [-73.894282, 40.784129], [-73.89433, 40.784102], [-73.894391, 40.784103], [-73.894432, 40.784124], [-73.894541, 40.784066], [-73.894526, 40.784037], [-73.894529, 40.784008], [-73.894548, 40.78398], [-73.894582, 40.783962], [-73.894621, 40.783956], [-73.894784, 40.783868], [-73.894796, 40.783846], [-73.894816, 40.783829], [-73.894844, 40.783818], [-73.894879, 40.783814], [-73.895309, 40.783576], [-73.895322, 40.783555], [-73.895343, 40.783539], [-73.895364, 40.78353], [-73.895395, 40.783526], [-73.895571, 40.78343], [-73.895581, 40.783412], [-73.895597, 40.783399], [-73.895622, 40.783388], [-73.895647, 40.783386], [-73.895829, 40.783288], [-73.89584, 40.783269], [-73.895862, 40.783254], [-73.895881, 40.783246], [-73.895908, 40.783243], [-73.896064, 40.783157], [-73.896046, 40.783151], [-73.896033, 40.783141], [-73.896027, 40.783135], [-73.896021, 40.783121], [-73.896021, 40.783106], [-73.896014, 40.783106], [-73.896007, 40.783104], [-73.896002, 40.783101], [-73.895999, 40.783096], [-73.895997, 40.78309], [-73.895976, 40.783092], [-73.895955, 40.783088], [-73.895938, 40.783078], [-73.895925, 40.783065], [-73.895918, 40.78305], [-73.895919, 40.783034], [-73.895913, 40.783035], [-73.895907, 40.783034], [-73.895902, 40.783032], [-73.895898, 40.783029], [-73.895895, 40.783024], [-73.895895, 40.78302], [-73.895874, 40.783021], [-73.895854, 40.783017], [-73.895836, 40.783008], [-73.895824, 40.782995], [-73.895817, 40.78298], [-73.895818, 40.782964], [-73.895794, 40.782946], [-73.895771, 40.782946], [-73.895749, 40.78294], [-73.89574, 40.782935], [-73.895731, 40.782929], [-73.895724, 40.782922], [-73.895715, 40.782906], [-73.895713, 40.782889], [-73.895704, 40.782886], [-73.8957, 40.782884], [-73.895697, 40.782882], [-73.895691, 40.782876], [-73.895684, 40.78287], [-73.895665, 40.782873], [-73.895646, 40.782871], [-73.895629, 40.782864], [-73.895622, 40.782859], [-73.895612, 40.782847], [-73.895608, 40.782833], [-73.89561, 40.782818], [-73.895601, 40.782816], [-73.895593, 40.782812], [-73.895589, 40.78281], [-73.895587, 40.782806], [-73.895585, 40.782803], [-73.895582, 40.782797], [-73.895583, 40.782791], [-73.895571, 40.782792], [-73.895559, 40.782792], [-73.895547, 40.782791], [-73.895536, 40.782788], [-73.895525, 40.782784], [-73.895515, 40.782779], [-73.895425, 40.78272], [-73.894774, 40.782254], [-73.895422, 40.781718], [-73.895358, 40.781658], [-73.895279, 40.781723], [-73.895288, 40.781729], [-73.894624, 40.78227], [-73.894601, 40.782253], [-73.895237, 40.781735], [-73.895213, 40.781717], [-73.895243, 40.781692], [-73.895266, 40.781708], [-73.895311, 40.781672], [-73.895317, 40.781676], [-73.895349, 40.781649], [-73.895326, 40.781626], [-73.895356, 40.781596], [-73.895285, 40.781541], [-73.895266, 40.781564], [-73.895238, 40.78158], [-73.895223, 40.781601], [-73.895212, 40.78161], [-73.895187, 40.781623], [-73.895181, 40.781666], [-73.895156, 40.781705], [-73.895116, 40.781735], [-73.895064, 40.781753], [-73.895056, 40.781769], [-73.895049, 40.781776], [-73.895041, 40.781782], [-73.895032, 40.781787], [-73.895011, 40.781793], [-73.894993, 40.781832], [-73.894978, 40.78185], [-73.89496, 40.781865], [-73.894938, 40.781878], [-73.894887, 40.781894], [-73.894881, 40.78191], [-73.894868, 40.781925], [-73.89485, 40.781936], [-73.894828, 40.781942], [-73.894808, 40.781981], [-73.894793, 40.781998], [-73.894774, 40.782014], [-73.894753, 40.782027], [-73.894703, 40.782045], [-73.894698, 40.782061], [-73.894687, 40.782074], [-73.89467, 40.782084], [-73.89465, 40.782089], [-73.894632, 40.782128], [-73.894617, 40.782145], [-73.894599, 40.78216], [-73.894578, 40.782172], [-73.894529, 40.782188], [-73.894515, 40.78221], [-73.894493, 40.782228], [-73.894464, 40.782239], [-73.89445, 40.782274], [-73.894422, 40.782303], [-73.894382, 40.782324], [-73.894336, 40.782335], [-73.894333, 40.78235], [-73.894323, 40.782364], [-73.894316, 40.78237], [-73.894299, 40.782379], [-73.894279, 40.782383], [-73.894263, 40.782418], [-73.894231, 40.782447], [-73.894189, 40.782467], [-73.89414, 40.782474], [-73.894091, 40.782469], [-73.894047, 40.782451], [-73.894013, 40.782423], [-73.89399, 40.782425], [-73.893967, 40.782421], [-73.893947, 40.782412], [-73.893931, 40.782398], [-73.893883, 40.782401], [-73.893838, 40.782391], [-73.893798, 40.782372], [-73.893769, 40.782343], [-73.893753, 40.782309], [-73.893729, 40.782302], [-73.893711, 40.782289], [-73.893698, 40.782272], [-73.893639, 40.782252], [-73.893592, 40.782219], [-73.893563, 40.782176], [-73.893546, 40.782172], [-73.893531, 40.782164], [-73.893521, 40.782153], [-73.893516, 40.78214], [-73.893465, 40.782126], [-73.893443, 40.782115], [-73.893424, 40.7821], [-73.893409, 40.782084], [-73.89339, 40.782045], [-73.893372, 40.782045], [-73.893355, 40.78204], [-73.893348, 40.782036], [-73.893342, 40.782031], [-73.893336, 40.782025], [-73.89333, 40.782013], [-73.893329, 40.781999], [-73.893291, 40.781998], [-73.893256, 40.781989], [-73.893226, 40.781972], [-73.893205, 40.781948], [-73.893194, 40.781921], [-73.893162, 40.7819], [-73.893134, 40.781876], [-73.893108, 40.78187], [-73.893083, 40.78186], [-73.893061, 40.781848], [-73.892308, 40.782466], [-73.892297, 40.782534], [-73.892815, 40.782913], [-73.892749, 40.782966], [-73.891655, 40.782195], [-73.891717, 40.782142], [-73.892142, 40.782432], [-73.892242, 40.782411], [-73.89301, 40.781798], [-73.893001, 40.78178], [-73.892979, 40.781772], [-73.892962, 40.78176], [-73.892951, 40.781743], [-73.892898, 40.78173], [-73.892875, 40.781718], [-73.892854, 40.781704], [-73.892837, 40.781687], [-73.892815, 40.781648], [-73.892779, 40.781634], [-73.892751, 40.781611], [-73.892705, 40.781597], [-73.892685, 40.781586], [-73.892667, 40.781572], [-73.892653, 40.781557], [-73.892633, 40.781523], [-73.892606, 40.781513], [-73.892584, 40.781497], [-73.892568, 40.781478], [-73.89252, 40.781465], [-73.892498, 40.781454], [-73.892479, 40.781441], [-73.892463, 40.781426], [-73.89244, 40.781391], [-73.892418, 40.781384], [-73.8924, 40.781371], [-73.892387, 40.781356], [-73.892356, 40.781347], [-73.892327, 40.781335], [-73.892301, 40.781319], [-73.892279, 40.7813], [-73.892178, 40.781371], [-73.892162, 40.781358], [-73.892111, 40.781395], [-73.892085, 40.781374], [-73.892246, 40.781255], [-73.892225, 40.781242], [-73.892207, 40.781227], [-73.892192, 40.78121], [-73.892151, 40.781204], [-73.892116, 40.781187], [-73.892101, 40.781176], [-73.892081, 40.781149], [-73.892073, 40.781117], [-73.892055, 40.781114], [-73.89204, 40.781107], [-73.892028, 40.781096], [-73.892022, 40.781082], [-73.89198, 40.781076], [-73.891944, 40.781059], [-73.891916, 40.781035], [-73.891907, 40.781021], [-73.891897, 40.780989], [-73.891902, 40.780957], [-73.89192, 40.780928], [-73.891877, 40.780895], [-73.891835, 40.78091], [-73.891789, 40.780914], [-73.891744, 40.780906], [-73.891723, 40.780897], [-73.891704, 40.780887], [-73.891688, 40.780874], [-73.891666, 40.780843], [-73.891658, 40.780809], [-73.891665, 40.780774], [-73.891648, 40.780761], [-73.891636, 40.780745], [-73.891633, 40.780727], [-73.891637, 40.780709], [-73.891605, 40.780683], [-73.891585, 40.780651], [-73.891581, 40.780616], [-73.891584, 40.780598], [-73.891603, 40.780565], [-73.891634, 40.780539], [-73.891675, 40.780522], [-73.891687, 40.780496], [-73.891698, 40.780484], [-73.891727, 40.780462], [-73.891734, 40.780428], [-73.891755, 40.780396], [-73.89177, 40.780383], [-73.891808, 40.780363], [-73.891853, 40.780354], [-73.891848, 40.780343], [-73.891849, 40.780332], [-73.891854, 40.780322], [-73.891864, 40.780314], [-73.891876, 40.780308], [-73.891891, 40.780307], [-73.891905, 40.780309], [-73.891916, 40.780273], [-73.891942, 40.780242], [-73.891979, 40.780218], [-73.892024, 40.780205], [-73.892028, 40.780189], [-73.892038, 40.780174], [-73.892045, 40.780168], [-73.892063, 40.780158], [-73.892084, 40.780154], [-73.892102, 40.780115], [-73.892116, 40.780098], [-73.892134, 40.780082], [-73.892155, 40.780069], [-73.892203, 40.780051], [-73.892217, 40.780034], [-73.892227, 40.780027], [-73.892237, 40.780022], [-73.892247, 40.780018], [-73.892267, 40.780013], [-73.89227, 40.779994], [-73.892287, 40.779959], [-73.892302, 40.779945], [-73.892339, 40.779922], [-73.892387, 40.779907], [-73.892386, 40.779899], [-73.892389, 40.779891], [-73.892399, 40.779879], [-73.892406, 40.779874], [-73.892419, 40.779867], [-73.89243, 40.779865], [-73.892443, 40.779865], [-73.892445, 40.779842], [-73.892448, 40.779831], [-73.892452, 40.779821], [-73.892459, 40.779811], [-73.892468, 40.779802], [-73.892478, 40.779794], [-73.89249, 40.779788], [-73.892503, 40.779783], [-73.892517, 40.77978], [-73.892535, 40.779771], [-73.892513, 40.779742], [-73.892496, 40.779702], [-73.892497, 40.779674], [-73.892544, 40.779576], [-73.89254, 40.779552], [-73.892477, 40.779515], [-73.892459, 40.779528], [-73.892437, 40.779539], [-73.892413, 40.779547], [-73.892388, 40.779552], [-73.892363, 40.779554], [-73.892337, 40.779553], [-73.892312, 40.779548], [-73.892288, 40.779541], [-73.892226, 40.779532], [-73.892164, 40.779527], [-73.892101, 40.779528], [-73.892039, 40.779533], [-73.891978, 40.779544], [-73.891818, 40.779589], [-73.891669, 40.779493], [-73.891507, 40.779098], [-73.891297, 40.778916], [-73.891196, 40.778563], [-73.892183, 40.777722], [-73.892523, 40.777405], [-73.892503, 40.777365], [-73.892254, 40.777205], [-73.892132, 40.777091], [-73.891772, 40.776594], [-73.891652, 40.776562], [-73.891531, 40.776477], [-73.891434, 40.776381], [-73.891416, 40.776339], [-73.891401, 40.776045], [-73.89148, 40.775897], [-73.89153, 40.775606], [-73.891668, 40.775485], [-73.891766, 40.775357], [-73.891809, 40.77522], [-73.891793, 40.775089], [-73.891832, 40.77488], [-73.891725, 40.775052], [-73.891718, 40.775164], [-73.891689, 40.775255], [-73.891528, 40.775478], [-73.891444, 40.775623], [-73.891358, 40.776049], [-73.891368, 40.776343], [-73.891452, 40.776513], [-73.891264, 40.776856], [-73.891104, 40.777023], [-73.89112, 40.777125], [-73.891067, 40.777213], [-73.890949, 40.777284], [-73.890731, 40.777332], [-73.890563, 40.777404], [-73.890498, 40.777463], [-73.890459, 40.77755], [-73.890465, 40.777703], [-73.890352, 40.7778], [-73.890174, 40.777851], [-73.890087, 40.777784], [-73.890024, 40.777247], [-73.889516, 40.775937], [-73.889472, 40.775738], [-73.889471, 40.775536], [-73.889614, 40.774846], [-73.889789, 40.774237], [-73.889887, 40.774017], [-73.890068, 40.773962], [-73.890192, 40.773647], [-73.890089, 40.773626], [-73.889977, 40.773724], [-73.889852, 40.773753], [-73.88975, 40.773717], [-73.889455, 40.773533], [-73.889424, 40.77305], [-73.8884, 40.7671], [-73.889323, 40.766866], [-73.891202, 40.766595], [-73.89499, 40.76679], [-73.901603, 40.76777]]]]
    },
    "properties": {
      "neighbourhood": "Ditmars Steinway",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.837544, 40.691364], [-73.831083, 40.678151], [-73.830875, 40.678109], [-73.83094, 40.67812], [-73.83208, 40.675261], [-73.833053, 40.675412], [-73.833756, 40.675226], [-73.835896, 40.675754], [-73.83633, 40.674922], [-73.83698, 40.674678], [-73.836175, 40.67315], [-73.835867, 40.672212], [-73.832906, 40.666651], [-73.833216, 40.666092], [-73.834858, 40.666457], [-73.83806, 40.666852], [-73.83914, 40.666688], [-73.840313, 40.66763], [-73.84214, 40.668269], [-73.855717, 40.672534], [-73.857944, 40.673066], [-73.86107, 40.674021], [-73.861318, 40.675021], [-73.862346, 40.679165], [-73.862391, 40.679161], [-73.863282, 40.679073], [-73.863283, 40.679078], [-73.864101, 40.682373], [-73.866027, 40.681918], [-73.866027, 40.681918], [-73.866295, 40.683189], [-73.866246, 40.683203], [-73.845026, 40.689238], [-73.837544, 40.691364]]]]
    },
    "properties": {
      "neighbourhood": "Ozone Park",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.88303, 40.86663], [-73.883751, 40.865345], [-73.883896, 40.864518], [-73.88245, 40.862648], [-73.880999, 40.861347], [-73.880555, 40.86069], [-73.880949, 40.858579], [-73.880675, 40.85716], [-73.88341, 40.858104], [-73.885151, 40.858481], [-73.886823, 40.859357], [-73.890855, 40.861414], [-73.891686, 40.860222], [-73.894778, 40.85598], [-73.897085, 40.851972], [-73.897087, 40.851969], [-73.898104, 40.852308], [-73.900097, 40.849209], [-73.900884, 40.84941], [-73.900694, 40.850253], [-73.902719, 40.851851], [-73.90469, 40.852899], [-73.906448, 40.853474], [-73.906424, 40.853501], [-73.904727, 40.85537], [-73.90557, 40.855787], [-73.902545, 40.860578], [-73.90108, 40.862756], [-73.899515, 40.864549], [-73.897267, 40.867726], [-73.895196, 40.870296], [-73.891816, 40.871785], [-73.890378, 40.871652], [-73.889807, 40.87258], [-73.889414, 40.873437], [-73.884953, 40.869796], [-73.884525, 40.868547], [-73.88303, 40.86663]]]]
    },
    "properties": {
      "neighbourhood": "Fordham",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.794306, 40.789062], [-73.794975, 40.788082], [-73.794786, 40.786719], [-73.79548, 40.785831], [-73.795086, 40.785861], [-73.7944, 40.78185], [-73.792761, 40.774006], [-73.812784, 40.775615], [-73.817643, 40.776398], [-73.82167, 40.776863], [-73.825825, 40.776671], [-73.827178, 40.777046], [-73.825667, 40.77974], [-73.825992, 40.77982], [-73.825706, 40.78067], [-73.825696, 40.781691], [-73.8251, 40.783054], [-73.82445, 40.78674], [-73.825337, 40.786704], [-73.825453, 40.787109], [-73.82638, 40.78798], [-73.82892, 40.787692], [-73.82909, 40.788564], [-73.830779, 40.788361], [-73.830981, 40.789154], [-73.83143, 40.789386], [-73.832129, 40.79009], [-73.832071, 40.790243], [-73.831915, 40.79046], [-73.831825, 40.790673], [-73.831809, 40.790856], [-73.831743, 40.791006], [-73.831374, 40.791369], [-73.831155, 40.791494], [-73.830963, 40.791576], [-73.83066, 40.79165], [-73.830568, 40.791658], [-73.83049, 40.791652], [-73.830198, 40.791572], [-73.830052, 40.791551], [-73.829778, 40.791617], [-73.829483, 40.791754], [-73.829171, 40.791871], [-73.828536, 40.792336], [-73.828501, 40.792356], [-73.828466, 40.792369], [-73.828367, 40.792395], [-73.829279, 40.792891], [-73.829303, 40.792913], [-73.829307, 40.792936], [-73.829229, 40.793019], [-73.829212, 40.793022], [-73.828292, 40.792514], [-73.82827, 40.792558], [-73.828234, 40.792602], [-73.828212, 40.792627], [-73.828176, 40.792649], [-73.828146, 40.792661], [-73.828082, 40.792686], [-73.82804, 40.792712], [-73.827929, 40.792879], [-73.827821, 40.793161], [-73.827785, 40.793421], [-73.827786, 40.793427], [-73.827785, 40.79343], [-73.82791, 40.79398], [-73.827978, 40.79451], [-73.828006, 40.794817], [-73.828057, 40.794815], [-73.82807, 40.794821], [-73.828071, 40.794831], [-73.828064, 40.794843], [-73.828042, 40.794864], [-73.828023, 40.794876], [-73.828014, 40.794942], [-73.828084, 40.795025], [-73.828138, 40.795061], [-73.828175, 40.7951], [-73.828214, 40.795162], [-73.828327, 40.795481], [-73.828413, 40.795623], [-73.828474, 40.795664], [-73.82853, 40.795683], [-73.828572, 40.795685], [-73.828605, 40.795677], [-73.828623, 40.795682], [-73.828638, 40.795705], [-73.82864, 40.795729], [-73.828634, 40.795757], [-73.828626, 40.795782], [-73.828621, 40.795807], [-73.828627, 40.795835], [-73.828692, 40.795919], [-73.828703, 40.795925], [-73.828714, 40.795922], [-73.828724, 40.795913], [-73.828736, 40.795908], [-73.828755, 40.795901], [-73.828762, 40.795902], [-73.828773, 40.795908], [-73.828784, 40.795926], [-73.828788, 40.795951], [-73.828783, 40.795973], [-73.828753, 40.796061], [-73.82881, 40.796193], [-73.828855, 40.796203], [-73.828923, 40.7962], [-73.82898, 40.796211], [-73.829061, 40.796254], [-73.829131, 40.796294], [-73.829199, 40.796423], [-73.829252, 40.796497], [-73.829271, 40.796548], [-73.82928, 40.796587], [-73.829294, 40.796673], [-73.829315, 40.796691], [-73.829385, 40.796733], [-73.829416, 40.796752], [-73.829448, 40.796777], [-73.829457, 40.79679], [-73.829464, 40.796804], [-73.829466, 40.796815], [-73.82946, 40.796823], [-73.829448, 40.796829], [-73.829435, 40.796832], [-73.829418, 40.796831], [-73.829399, 40.796827], [-73.829383, 40.796821], [-73.829367, 40.796814], [-73.829346, 40.796804], [-73.829322, 40.796791], [-73.829291, 40.796773], [-73.829261, 40.79675], [-73.829251, 40.796743], [-73.829246, 40.796737], [-73.82924, 40.796724], [-73.829237, 40.796713], [-73.82924, 40.796699], [-73.829246, 40.796681], [-73.829233, 40.796655], [-73.829204, 40.796629], [-73.829165, 40.796607], [-73.829121, 40.796584], [-73.829059, 40.796562], [-73.828744, 40.79657], [-73.828484, 40.796612], [-73.828368, 40.796641], [-73.828241, 40.796724], [-73.82817, 40.796747], [-73.828082, 40.796756], [-73.827619, 40.796757], [-73.827418, 40.796789], [-73.827285, 40.796894], [-73.827277, 40.796918], [-73.827289, 40.79694], [-73.827289, 40.796952], [-73.827283, 40.796961], [-73.827273, 40.796966], [-73.827258, 40.796966], [-73.827243, 40.796962], [-73.827212, 40.796922], [-73.827207, 40.796921], [-73.827172, 40.796932], [-73.827095, 40.796975], [-73.827046, 40.797013], [-73.827001, 40.797063], [-73.826971, 40.797128], [-73.82697, 40.797166], [-73.826993, 40.797258], [-73.826999, 40.797271], [-73.827012, 40.797286], [-73.827058, 40.797315], [-73.827102, 40.797355], [-73.82718, 40.797486], [-73.827196, 40.797521], [-73.827195, 40.797572], [-73.827186, 40.797598], [-73.82717, 40.797624], [-73.827129, 40.797664], [-73.827096, 40.797685], [-73.827031, 40.797718], [-73.826979, 40.797738], [-73.826739, 40.797796], [-73.826672, 40.797795], [-73.826616, 40.797781], [-73.826579, 40.79776], [-73.826508, 40.797708], [-73.826458, 40.797661], [-73.826408, 40.797592], [-73.826314, 40.797488], [-73.826149, 40.797416], [-73.825913, 40.797367], [-73.825713, 40.797371], [-73.825555, 40.797394], [-73.825538, 40.797399], [-73.825535, 40.797402], [-73.825542, 40.797415], [-73.825538, 40.797429], [-73.825532, 40.797435], [-73.82552, 40.797438], [-73.825508, 40.797438], [-73.825494, 40.797427], [-73.825483, 40.797418], [-73.825476, 40.797406], [-73.825475, 40.797392], [-73.825467, 40.797384], [-73.825455, 40.797378], [-73.825261, 40.79731], [-73.825116, 40.797352], [-73.824036, 40.79808], [-73.824012, 40.798128], [-73.824033, 40.798198], [-73.823948, 40.798227], [-73.824028, 40.798361], [-73.824007, 40.798367], [-73.823932, 40.798232], [-73.823908, 40.798238], [-73.823859, 40.798154], [-73.823502, 40.798374], [-73.823494, 40.798388], [-73.823495, 40.798402], [-73.823513, 40.798423], [-73.823514, 40.798438], [-73.823501, 40.798439], [-73.823493, 40.798435], [-73.823473, 40.798412], [-73.823461, 40.798404], [-73.82345, 40.798402], [-73.823433, 40.798407], [-73.82368, 40.79877], [-73.823644, 40.798782], [-73.823409, 40.798418], [-73.823412, 40.798433], [-73.82341, 40.798442], [-73.823403, 40.798447], [-73.823389, 40.798451], [-73.823348, 40.798438], [-73.823314, 40.798445], [-73.823108, 40.798613], [-73.823108, 40.798623], [-73.823136, 40.798667], [-73.823138, 40.798673], [-73.823137, 40.79868], [-73.823129, 40.798688], [-73.823115, 40.798691], [-73.823096, 40.798683], [-73.823306, 40.798963], [-73.823271, 40.798975], [-73.823054, 40.79866], [-73.823037, 40.798652], [-73.823003, 40.798642], [-73.822743, 40.798817], [-73.822599, 40.798902], [-73.822541, 40.798957], [-73.822777, 40.79932], [-73.822743, 40.799333], [-73.822519, 40.798988], [-73.822412, 40.799089], [-73.822622, 40.799408], [-73.822593, 40.799417], [-73.822388, 40.799113], [-73.821901, 40.799728], [-73.821776, 40.799855], [-73.821618, 40.799992], [-73.820981, 40.800478], [-73.820855, 40.800538], [-73.820786, 40.80056], [-73.820432, 40.800628], [-73.820528, 40.801006], [-73.820499, 40.801011], [-73.820405, 40.80064], [-73.820262, 40.800709], [-73.820129, 40.800765], [-73.820081, 40.800802], [-73.820058, 40.800816], [-73.820007, 40.800835], [-73.819953, 40.800849], [-73.81991, 40.800886], [-73.819906, 40.800918], [-73.819906, 40.800944], [-73.819914, 40.80097], [-73.819912, 40.800975], [-73.819908, 40.800979], [-73.819902, 40.80098], [-73.819889, 40.800977], [-73.81987, 40.800987], [-73.819857, 40.800992], [-73.81984, 40.800995], [-73.819828, 40.800995], [-73.819815, 40.800992], [-73.819776, 40.800924], [-73.819722, 40.800888], [-73.819687, 40.800876], [-73.81958, 40.800862], [-73.819562, 40.800855], [-73.81955, 40.800848], [-73.819518, 40.800833], [-73.819486, 40.800813], [-73.819421, 40.800753], [-73.819356, 40.800721], [-73.819288, 40.800675], [-73.817404, 40.799299], [-73.816516, 40.799025], [-73.816026, 40.798533], [-73.813679, 40.797546], [-73.813644, 40.797518], [-73.813628, 40.797457], [-73.813635, 40.797403], [-73.813677, 40.797307], [-73.813749, 40.797148], [-73.8137, 40.797079], [-73.813421, 40.797693], [-73.81335, 40.797672], [-73.813486, 40.797346], [-73.813378, 40.797314], [-73.813494, 40.797058], [-73.81337, 40.797075], [-73.813277, 40.797106], [-73.813246, 40.797212], [-73.81316, 40.797198], [-73.813053, 40.797455], [-73.812934, 40.797426], [-73.813043, 40.797178], [-73.812941, 40.797161], [-73.81292, 40.797172], [-73.812884, 40.797167], [-73.812862, 40.797279], [-73.812856, 40.797287], [-73.812813, 40.797282], [-73.812802, 40.797307], [-73.812775, 40.797345], [-73.812692, 40.797704], [-73.812576, 40.797987], [-73.812548, 40.798047], [-73.81252, 40.798075], [-73.812487, 40.798087], [-73.812402, 40.798105], [-73.812332, 40.798125], [-73.812254, 40.798127], [-73.812212, 40.798118], [-73.812166, 40.798101], [-73.812086, 40.798097], [-73.81198, 40.798076], [-73.811817, 40.798042], [-73.8118, 40.798038], [-73.811786, 40.798032], [-73.811778, 40.798025], [-73.811773, 40.797998], [-73.811762, 40.797866], [-73.811756, 40.797763], [-73.811759, 40.79771], [-73.81171, 40.797578], [-73.811645, 40.797434], [-73.811628, 40.797393], [-73.811609, 40.797372], [-73.811497, 40.797344], [-73.811414, 40.797333], [-73.811278, 40.797309], [-73.811038, 40.79728], [-73.810779, 40.797247], [-73.810598, 40.797225], [-73.810435, 40.797205], [-73.810284, 40.797176], [-73.810199, 40.797164], [-73.809901, 40.797071], [-73.809858, 40.797068], [-73.809744, 40.797048], [-73.809637, 40.797026], [-73.809586, 40.797023], [-73.809514, 40.797013], [-73.809473, 40.797006], [-73.809369, 40.796986], [-73.809312, 40.796976], [-73.809244, 40.796959], [-73.809179, 40.796932], [-73.809097, 40.796897], [-73.809054, 40.796879], [-73.809033, 40.796876], [-73.809004, 40.796867], [-73.808959, 40.796849], [-73.808875, 40.796817], [-73.808793, 40.796796], [-73.808784, 40.796796], [-73.808769, 40.796802], [-73.808745, 40.796802], [-73.808729, 40.796801], [-73.808714, 40.796797], [-73.8087, 40.79679], [-73.808684, 40.796782], [-73.808614, 40.796765], [-73.808569, 40.796761], [-73.808534, 40.796766], [-73.808501, 40.79677], [-73.808477, 40.796768], [-73.808448, 40.796762], [-73.80838, 40.796757], [-73.808362, 40.796754], [-73.808317, 40.796739], [-73.808278, 40.796727], [-73.808255, 40.796724], [-73.808222, 40.79672], [-73.808192, 40.79672], [-73.808176, 40.796719], [-73.808146, 40.796716], [-73.808122, 40.796712], [-73.80811, 40.79673], [-73.807677, 40.796672], [-73.807428, 40.7966], [-73.807412, 40.796599], [-73.807394, 40.796608], [-73.807043, 40.796547], [-73.806363, 40.796394], [-73.806328, 40.79656], [-73.80632, 40.796559], [-73.806305, 40.796626], [-73.806315, 40.796626], [-73.806273, 40.796823], [-73.806231, 40.796817], [-73.806275, 40.796624], [-73.806283, 40.796624], [-73.806298, 40.796558], [-73.80629, 40.796555], [-73.806331, 40.796393], [-73.806284, 40.796392], [-73.806261, 40.796399], [-73.80624, 40.796458], [-73.806228, 40.796482], [-73.806225, 40.796487], [-73.806221, 40.796491], [-73.806216, 40.796494], [-73.806211, 40.796497], [-73.806205, 40.7965], [-73.806198, 40.796501], [-73.806144, 40.796503], [-73.806089, 40.796503], [-73.806017, 40.796497], [-73.805946, 40.796488], [-73.805876, 40.796473], [-73.805827, 40.796459], [-73.805753, 40.796434], [-73.805705, 40.796413], [-73.805629, 40.796373], [-73.805559, 40.796327], [-73.805508, 40.796287], [-73.805447, 40.79623], [-73.805396, 40.796171], [-73.805366, 40.796168], [-73.805358, 40.796227], [-73.805351, 40.796228], [-73.805345, 40.796255], [-73.805353, 40.796255], [-73.80535, 40.796318], [-73.805301, 40.796317], [-73.805311, 40.796252], [-73.805324, 40.796252], [-73.80533, 40.796226], [-73.805324, 40.796225], [-73.805339, 40.796164], [-73.805278, 40.796156], [-73.805128, 40.796177], [-73.805002, 40.796141], [-73.804782, 40.796175], [-73.804672, 40.796167], [-73.804649, 40.796363], [-73.804628, 40.796365], [-73.804661, 40.796428], [-73.804634, 40.796438], [-73.804594, 40.796368], [-73.804629, 40.796353], [-73.804649, 40.796159], [-73.80461, 40.796135], [-73.804538, 40.796151], [-73.804416, 40.796203], [-73.804348, 40.796214], [-73.804344, 40.796233], [-73.80433, 40.79623], [-73.804297, 40.796453], [-73.80432, 40.796456], [-73.804312, 40.796493], [-73.804293, 40.796492], [-73.804274, 40.796641], [-73.804236, 40.796635], [-73.804259, 40.796492], [-73.804241, 40.79649], [-73.804243, 40.79645], [-73.804267, 40.79645], [-73.804311, 40.796213], [-73.804165, 40.796229], [-73.804122, 40.796529], [-73.804092, 40.79653], [-73.804136, 40.796234], [-73.804005, 40.796267], [-73.803959, 40.796556], [-73.803931, 40.796557], [-73.803974, 40.796278], [-73.803846, 40.796326], [-73.803819, 40.796515], [-73.803826, 40.796515], [-73.803817, 40.79663], [-73.803774, 40.796629], [-73.803793, 40.796515], [-73.803803, 40.796515], [-73.803823, 40.796335], [-73.803643, 40.796406], [-73.803609, 40.796605], [-73.803618, 40.796607], [-73.803613, 40.796684], [-73.803576, 40.796683], [-73.803586, 40.796604], [-73.803594, 40.796604], [-73.803613, 40.796421], [-73.803517, 40.796465], [-73.803504, 40.79647], [-73.803488, 40.796478], [-73.803476, 40.796487], [-73.803464, 40.796497], [-73.803454, 40.79651], [-73.80345, 40.796523], [-73.803447, 40.796549], [-73.803431, 40.796653], [-73.803401, 40.796688], [-73.80335, 40.796713], [-73.803, 40.796709], [-73.802972, 40.796685], [-73.802949, 40.796405], [-73.802791, 40.796364], [-73.802763, 40.796368], [-73.802728, 40.796364], [-73.802711, 40.79636], [-73.80264, 40.796338], [-73.802631, 40.796348], [-73.802627, 40.796362], [-73.802623, 40.796366], [-73.802613, 40.796355], [-73.802605, 40.796342], [-73.802579, 40.796295], [-73.80226, 40.796262], [-73.801779, 40.796316], [-73.801763, 40.79642], [-73.801775, 40.796421], [-73.801766, 40.796477], [-73.801755, 40.796476], [-73.801745, 40.796512], [-73.801721, 40.796507], [-73.801756, 40.796321], [-73.801458, 40.796367], [-73.801288, 40.796418], [-73.801138, 40.796485], [-73.801011, 40.796522], [-73.800975, 40.796476], [-73.800964, 40.796401], [-73.800935, 40.796367], [-73.800863, 40.796333], [-73.800761, 40.796337], [-73.800672, 40.796352], [-73.800641, 40.796372], [-73.800633, 40.796415], [-73.800622, 40.796427], [-73.800607, 40.796415], [-73.800594, 40.796377], [-73.800555, 40.796347], [-73.800527, 40.796311], [-73.800475, 40.796282], [-73.800391, 40.796263], [-73.800365, 40.796337], [-73.800286, 40.796324], [-73.800322, 40.796254], [-73.800204, 40.79627], [-73.800121, 40.796631], [-73.800084, 40.796628], [-73.800106, 40.796526], [-73.800121, 40.796529], [-73.800126, 40.796492], [-73.800064, 40.796485], [-73.800079, 40.796429], [-73.800134, 40.796431], [-73.800144, 40.796399], [-73.800131, 40.796397], [-73.800144, 40.796346], [-73.800159, 40.796344], [-73.800182, 40.796267], [-73.800052, 40.79625], [-73.799828, 40.796179], [-73.799681, 40.796175], [-73.799647, 40.796215], [-73.799669, 40.796282], [-73.79968, 40.796311], [-73.799669, 40.79633], [-73.79964, 40.796339], [-73.799605, 40.796332], [-73.799569, 40.796314], [-73.799552, 40.796285], [-73.799405, 40.796189], [-73.799171, 40.796053], [-73.798916, 40.796017], [-73.798693, 40.795952], [-73.798111, 40.795606], [-73.797898, 40.795559], [-73.797673, 40.795937], [-73.797697, 40.795948], [-73.79767, 40.795994], [-73.797583, 40.795967], [-73.797615, 40.795924], [-73.797638, 40.795929], [-73.79787, 40.795552], [-73.797337, 40.795443], [-73.797241, 40.795453], [-73.797231, 40.795438], [-73.797256, 40.795377], [-73.797238, 40.795338], [-73.797128, 40.795304], [-73.796915, 40.795274], [-73.796736, 40.795209], [-73.796519, 40.795595], [-73.796542, 40.795606], [-73.796512, 40.795653], [-73.796487, 40.795646], [-73.796434, 40.795736], [-73.79641, 40.795729], [-73.796467, 40.795638], [-73.796442, 40.795627], [-73.796467, 40.795581], [-73.796492, 40.795585], [-73.796706, 40.795198], [-73.796331, 40.795079], [-73.795808, 40.794988], [-73.795188, 40.795008], [-73.795085, 40.795066], [-73.79507, 40.794976], [-73.795009, 40.794924], [-73.79483, 40.794886], [-73.794706, 40.794889], [-73.794666, 40.794919], [-73.794611, 40.79493], [-73.794482, 40.794835], [-73.794474, 40.794835], [-73.794466, 40.794835], [-73.794459, 40.794833], [-73.794451, 40.79483], [-73.794445, 40.794827], [-73.794439, 40.794823], [-73.794434, 40.794818], [-73.794431, 40.794813], [-73.794428, 40.794807], [-73.794427, 40.794801], [-73.794428, 40.794796], [-73.794432, 40.794791], [-73.794437, 40.794787], [-73.794443, 40.794785], [-73.79445, 40.794785], [-73.794457, 40.794786], [-73.794462, 40.794789], [-73.794465, 40.794791], [-73.794489, 40.794793], [-73.794511, 40.794797], [-73.794533, 40.794804], [-73.794554, 40.794812], [-73.79457, 40.794798], [-73.79458, 40.794782], [-73.794583, 40.794763], [-73.794442, 40.794542], [-73.794393, 40.794436], [-73.794376, 40.794324], [-73.794375, 40.794223], [-73.794394, 40.794133], [-73.794448, 40.794052], [-73.794533, 40.793987], [-73.79461, 40.793899], [-73.794586, 40.79357], [-73.79478, 40.792935], [-73.79476, 40.792826], [-73.794717, 40.792735], [-73.794711, 40.792713], [-73.794706, 40.792688], [-73.794711, 40.792662], [-73.79472, 40.79265], [-73.794748, 40.792627], [-73.794915, 40.792532], [-73.794928, 40.792347], [-73.794888, 40.791681], [-73.793801, 40.789172], [-73.794306, 40.789062]]]]
    },
    "properties": {
      "neighbourhood": "Whitestone",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.169827, 40.561078], [-74.169823, 40.561057], [-74.16707, 40.548205], [-74.166923, 40.547942], [-74.16689, 40.547847], [-74.166855, 40.54782], [-74.16683, 40.547779], [-74.166233, 40.547343], [-74.165296, 40.544273], [-74.169924, 40.542225], [-74.177282, 40.54063], [-74.177331, 40.540619], [-74.177403, 40.542479], [-74.176498, 40.544487], [-74.180721, 40.546673], [-74.17959, 40.548066], [-74.178814, 40.54966], [-74.17933, 40.549888], [-74.18209, 40.551104], [-74.183181, 40.555201], [-74.18464, 40.553807], [-74.185508, 40.55424], [-74.185657, 40.554096], [-74.186093, 40.554549], [-74.188265, 40.553275], [-74.18781, 40.552821], [-74.187074, 40.552424], [-74.188576, 40.550714], [-74.189318, 40.551133], [-74.190568, 40.552002], [-74.192417, 40.553754], [-74.19769, 40.558887], [-74.194076, 40.562079], [-74.193147, 40.562644], [-74.192592, 40.562733], [-74.192407, 40.564272], [-74.190794, 40.564392], [-74.190335, 40.563049], [-74.189463, 40.56364], [-74.185254, 40.564549], [-74.184371, 40.565163], [-74.184311, 40.566527], [-74.182846, 40.566651], [-74.182634, 40.565556], [-74.181581, 40.565313], [-74.177945, 40.563983], [-74.176594, 40.563241], [-74.174888, 40.562826], [-74.171463, 40.561375], [-74.169827, 40.561078]]]]
    },
    "properties": {
      "neighbourhood": "Arden Heights",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.06078, 40.593188], [-74.060792, 40.593178], [-74.062153, 40.592025], [-74.06304, 40.59109], [-74.065033, 40.588991], [-74.064482, 40.588399], [-74.06436, 40.588268], [-74.064523, 40.588354], [-74.064778, 40.588488], [-74.067199, 40.586752], [-74.067223, 40.586734], [-74.069416, 40.584651], [-74.070485, 40.585079], [-74.08024, 40.590067], [-74.08241, 40.593207], [-74.083752, 40.595491], [-74.085875, 40.59589], [-74.085593, 40.596584], [-74.085513, 40.596781], [-74.08537, 40.596915], [-74.084944, 40.597312], [-74.084809, 40.597438], [-74.084742, 40.597462], [-74.08171, 40.598563], [-74.077164, 40.59839], [-74.0749, 40.597614], [-74.073872, 40.597637], [-74.073623, 40.59721], [-74.064638, 40.600183], [-74.062076, 40.596841], [-74.061829, 40.596306], [-74.062397, 40.59585], [-74.062829, 40.595236], [-74.06078, 40.593188]]]]
    },
    "properties": {
      "neighbourhood": "Arrochar",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.789535, 40.599972], [-73.789541, 40.599944], [-73.78956, 40.599912], [-73.789602, 40.599873], [-73.789701, 40.599801], [-73.789765, 40.599747], [-73.789773, 40.599729], [-73.789781, 40.599722], [-73.789801, 40.599716], [-73.789806, 40.599701], [-73.789835, 40.599657], [-73.789875, 40.59959], [-73.789909, 40.599543], [-73.789926, 40.599518], [-73.78998, 40.599459], [-73.789996, 40.599437], [-73.790014, 40.599414], [-73.790052, 40.599374], [-73.790135, 40.599346], [-73.790241, 40.599304], [-73.790305, 40.59926], [-73.79034, 40.599192], [-73.790325, 40.599047], [-73.790352, 40.598891], [-73.790432, 40.598649], [-73.790665, 40.598111], [-73.790664, 40.598094], [-73.790679, 40.59805], [-73.790739, 40.597895], [-73.790791, 40.597786], [-73.790813, 40.597714], [-73.790853, 40.597582], [-73.790917, 40.59746], [-73.790927, 40.597413], [-73.790937, 40.597397], [-73.790956, 40.597391], [-73.791002, 40.597339], [-73.791032, 40.597296], [-73.791056, 40.597248], [-73.791071, 40.597198], [-73.79108, 40.597149], [-73.791068, 40.597044], [-73.791069, 40.597013], [-73.79109, 40.596971], [-73.791096, 40.596945], [-73.791095, 40.596924], [-73.791073, 40.596895], [-73.791067, 40.596874], [-73.791067, 40.596848], [-73.791079, 40.596828], [-73.791101, 40.596806], [-73.791103, 40.59679], [-73.791088, 40.596741], [-73.791077, 40.596703], [-73.791073, 40.596683], [-73.791071, 40.596636], [-73.791056, 40.596518], [-73.79105, 40.596498], [-73.791021, 40.596465], [-73.791, 40.596423], [-73.790993, 40.596393], [-73.790987, 40.596302], [-73.790973, 40.596209], [-73.79096, 40.596162], [-73.790944, 40.596121], [-73.790941, 40.596072], [-73.79094, 40.596029], [-73.790935, 40.596005], [-73.790932, 40.595983], [-73.790931, 40.595961], [-73.790934, 40.595881], [-73.790951, 40.595811], [-73.791019, 40.595632], [-73.791033, 40.595569], [-73.791036, 40.595522], [-73.791018, 40.595448], [-73.790999, 40.5954], [-73.79099, 40.595372], [-73.790969, 40.595323], [-73.790947, 40.595234], [-73.790937, 40.59519], [-73.790903, 40.595094], [-73.790863, 40.595013], [-73.790776, 40.594923], [-73.790728, 40.594898], [-73.790707, 40.594882], [-73.79069, 40.594862], [-73.790651, 40.594783], [-73.790538, 40.594757], [-73.79042, 40.594753], [-73.790437, 40.594826], [-73.790457, 40.59496], [-73.79057, 40.594952], [-73.790714, 40.596086], [-73.790804, 40.596081], [-73.790806, 40.596093], [-73.790594, 40.596108], [-73.790593, 40.596097], [-73.790682, 40.596089], [-73.790539, 40.594981], [-73.790425, 40.594989], [-73.790407, 40.594856], [-73.790319, 40.594862], [-73.790316, 40.594849], [-73.790405, 40.594841], [-73.790402, 40.594828], [-73.790383, 40.594789], [-73.790379, 40.594752], [-73.790296, 40.594754], [-73.790153, 40.594768], [-73.790161, 40.594818], [-73.790166, 40.594869], [-73.790316, 40.596048], [-73.790424, 40.596042], [-73.790425, 40.596054], [-73.790178, 40.596071], [-73.790176, 40.59606], [-73.790282, 40.596051], [-73.79013, 40.594872], [-73.79012, 40.594824], [-73.790113, 40.594773], [-73.789947, 40.594807], [-73.789906, 40.594809], [-73.789901, 40.594802], [-73.789867, 40.594716], [-73.789858, 40.594717], [-73.789896, 40.594821], [-73.789882, 40.594824], [-73.789846, 40.59472], [-73.789785, 40.594731], [-73.789823, 40.594834], [-73.789811, 40.594839], [-73.789775, 40.594733], [-73.789739, 40.594744], [-73.789706, 40.594778], [-73.789683, 40.594809], [-73.789674, 40.594844], [-73.789712, 40.594841], [-73.789726, 40.594938], [-73.789874, 40.596204], [-73.789997, 40.596197], [-73.789999, 40.596209], [-73.789699, 40.596228], [-73.789698, 40.596218], [-73.789841, 40.596207], [-73.789686, 40.594952], [-73.789674, 40.59486], [-73.78946, 40.594997], [-73.789425, 40.594956], [-73.789414, 40.594947], [-73.789402, 40.59495], [-73.789395, 40.594963], [-73.789412, 40.595002], [-73.789425, 40.595022], [-73.789425, 40.595045], [-73.789384, 40.595113], [-73.789379, 40.59516], [-73.789376, 40.595177], [-73.789353, 40.595194], [-73.789331, 40.595199], [-73.789304, 40.595188], [-73.789273, 40.595185], [-73.789243, 40.595186], [-73.78921, 40.595184], [-73.78918, 40.595186], [-73.789188, 40.595209], [-73.789189, 40.595234], [-73.789186, 40.595282], [-73.789182, 40.595298], [-73.789142, 40.59534], [-73.789113, 40.595475], [-73.789123, 40.59557], [-73.789185, 40.595626], [-73.789203, 40.595646], [-73.789213, 40.595668], [-73.789215, 40.595692], [-73.78921, 40.595715], [-73.78919, 40.595738], [-73.789167, 40.595759], [-73.789152, 40.595793], [-73.78915, 40.595809], [-73.78913, 40.59583], [-73.789117, 40.595851], [-73.789107, 40.595878], [-73.789112, 40.595902], [-73.789124, 40.595913], [-73.789138, 40.595929], [-73.789269, 40.596454], [-73.78926, 40.596917], [-73.78922, 40.597111], [-73.789212, 40.59714], [-73.789134, 40.597361], [-73.789186, 40.597599], [-73.788399, 40.59753], [-73.788052, 40.594502], [-73.787044, 40.594911], [-73.785872, 40.594982], [-73.785389, 40.588792], [-73.788765, 40.587972], [-73.788539, 40.587555], [-73.788784, 40.58745], [-73.789451, 40.587623], [-73.794345, 40.586757], [-73.79602, 40.586319], [-73.796702, 40.586367], [-73.796876, 40.586315], [-73.796871, 40.586384], [-73.796866, 40.586466], [-73.796865, 40.586538], [-73.800451, 40.586008], [-73.800408, 40.586548], [-73.800677, 40.586758], [-73.801246, 40.590868], [-73.804521, 40.590487], [-73.80533, 40.59052], [-73.805279, 40.591682], [-73.805234, 40.591668], [-73.80517, 40.591643], [-73.8051, 40.591614], [-73.805035, 40.591584], [-73.804764, 40.59145], [-73.804699, 40.591427], [-73.80465, 40.591418], [-73.804632, 40.591413], [-73.804557, 40.591384], [-73.804487, 40.591361], [-73.804362, 40.591314], [-73.80434, 40.591311], [-73.804335, 40.591313], [-73.804329, 40.591311], [-73.804303, 40.591319], [-73.804283, 40.591333], [-73.80427, 40.591345], [-73.804252, 40.591373], [-73.804223, 40.591448], [-73.80419, 40.591622], [-73.804164, 40.59174], [-73.804166, 40.591855], [-73.804962, 40.592173], [-73.805563, 40.592421], [-73.806003, 40.592614], [-73.807012, 40.593049], [-73.807064, 40.593065], [-73.807087, 40.593069], [-73.807115, 40.593069], [-73.807145, 40.593047], [-73.807201, 40.593049], [-73.807249, 40.593055], [-73.807296, 40.593061], [-73.807319, 40.593069], [-73.807342, 40.593083], [-73.807557, 40.593226], [-73.807613, 40.59327], [-73.807739, 40.593337], [-73.807793, 40.593355], [-73.80781, 40.593361], [-73.807819, 40.593365], [-73.807826, 40.59337], [-73.807832, 40.593375], [-73.807838, 40.59338], [-73.807873, 40.593427], [-73.807932, 40.593506], [-73.807955, 40.593547], [-73.80797, 40.593567], [-73.808047, 40.59365], [-73.80803, 40.593669], [-73.808003, 40.593673], [-73.808002, 40.5937], [-73.807981, 40.593723], [-73.80795, 40.593732], [-73.807936, 40.593744], [-73.807913, 40.593757], [-73.807889, 40.593779], [-73.807858, 40.593824], [-73.807818, 40.593884], [-73.807811, 40.593907], [-73.807812, 40.593947], [-73.80781, 40.593969], [-73.807802, 40.593996], [-73.807801, 40.594004], [-73.807802, 40.594016], [-73.807808, 40.594026], [-73.807826, 40.594038], [-73.807861, 40.594056], [-73.80787, 40.594062], [-73.807876, 40.594068], [-73.807884, 40.59408], [-73.807901, 40.594111], [-73.80791, 40.594122], [-73.807917, 40.594127], [-73.807927, 40.59413], [-73.807956, 40.594135], [-73.807961, 40.594136], [-73.807969, 40.594138], [-73.807974, 40.594142], [-73.807976, 40.594146], [-73.807978, 40.594154], [-73.807977, 40.594161], [-73.807897, 40.594302], [-73.807113, 40.595284], [-73.806966, 40.595335], [-73.806899, 40.595393], [-73.806868, 40.595409], [-73.806774, 40.595422], [-73.806551, 40.595451], [-73.806183, 40.595546], [-73.806093, 40.595558], [-73.806041, 40.595555], [-73.805826, 40.595466], [-73.805769, 40.595428], [-73.805468, 40.595324], [-73.805426, 40.595293], [-73.805411, 40.595286], [-73.805405, 40.595285], [-73.805398, 40.595286], [-73.80539, 40.595288], [-73.805374, 40.595295], [-73.80537, 40.595296], [-73.805366, 40.595297], [-73.805363, 40.595297], [-73.80536, 40.595297], [-73.805357, 40.595296], [-73.805356, 40.595295], [-73.805354, 40.595295], [-73.805353, 40.595294], [-73.805352, 40.595293], [-73.805351, 40.595291], [-73.805349, 40.595289], [-73.805348, 40.595286], [-73.805347, 40.595281], [-73.805345, 40.595269], [-73.805344, 40.595263], [-73.805338, 40.595256], [-73.805312, 40.595243], [-73.805218, 40.595209], [-73.805172, 40.595194], [-73.805153, 40.595191], [-73.805145, 40.595189], [-73.80511, 40.595177], [-73.805058, 40.595157], [-73.805015, 40.59514], [-73.804966, 40.595118], [-73.804906, 40.595088], [-73.804853, 40.595056], [-73.804788, 40.595007], [-73.804732, 40.594974], [-73.804709, 40.594958], [-73.80464, 40.594907], [-73.804636, 40.594894], [-73.804639, 40.594887], [-73.804648, 40.594869], [-73.80465, 40.594861], [-73.804652, 40.594842], [-73.804651, 40.594831], [-73.804649, 40.594826], [-73.804645, 40.594823], [-73.804644, 40.594818], [-73.80464, 40.594815], [-73.804629, 40.594809], [-73.804615, 40.594803], [-73.804566, 40.594786], [-73.804548, 40.594778], [-73.804517, 40.594765], [-73.804509, 40.59476], [-73.804502, 40.594756], [-73.804492, 40.594748], [-73.804483, 40.594738], [-73.804461, 40.594708], [-73.804438, 40.594668], [-73.804428, 40.594653], [-73.804318, 40.594526], [-73.804286, 40.59448], [-73.804237, 40.594421], [-73.804115, 40.594319], [-73.804092, 40.594288], [-73.804037, 40.594175], [-73.804027, 40.594071], [-73.804015, 40.593924], [-73.80401, 40.593815], [-73.804009, 40.593768], [-73.80401, 40.593727], [-73.804013, 40.593713], [-73.804029, 40.593669], [-73.80403, 40.593643], [-73.804026, 40.59359], [-73.804027, 40.593581], [-73.804029, 40.593571], [-73.804038, 40.59355], [-73.80404, 40.593547], [-73.804044, 40.593544], [-73.804049, 40.593541], [-73.804056, 40.593539], [-73.80407, 40.593536], [-73.804104, 40.59353], [-73.804125, 40.593514], [-73.804059, 40.593355], [-73.804053, 40.593258], [-73.804031, 40.593212], [-73.804005, 40.593179], [-73.80395, 40.593127], [-73.803905, 40.593089], [-73.803888, 40.593079], [-73.803846, 40.593064], [-73.803831, 40.593055], [-73.803786, 40.593017], [-73.803761, 40.593005], [-73.803756, 40.593001], [-73.803753, 40.592997], [-73.803751, 40.592994], [-73.80375, 40.592989], [-73.803749, 40.592984], [-73.80375, 40.592977], [-73.803754, 40.592965], [-73.803768, 40.592937], [-73.803771, 40.592932], [-73.803776, 40.592926], [-73.8038, 40.592906], [-73.803804, 40.592902], [-73.803808, 40.592896], [-73.803809, 40.592891], [-73.803803, 40.59289], [-73.803793, 40.592887], [-73.803788, 40.592886], [-73.803771, 40.592883], [-73.803709, 40.592884], [-73.803692, 40.592886], [-73.803678, 40.592892], [-73.803617, 40.592941], [-73.803285, 40.592762], [-73.803075, 40.592613], [-73.803052, 40.592587], [-73.80304, 40.59258], [-73.803032, 40.592577], [-73.803021, 40.592576], [-73.802982, 40.592576], [-73.802975, 40.592579], [-73.802955, 40.592599], [-73.802948, 40.592603], [-73.802438, 40.59264], [-73.80246, 40.592862], [-73.802493, 40.593286], [-73.802377, 40.593287], [-73.80251, 40.593948], [-73.803142, 40.593848], [-73.803117, 40.593761], [-73.803135, 40.593758], [-73.803165, 40.593863], [-73.803181, 40.593945], [-73.803166, 40.593948], [-73.803143, 40.593867], [-73.802513, 40.593967], [-73.802568, 40.594272], [-73.802737, 40.594249], [-73.80324, 40.594188], [-73.80322, 40.594089], [-73.803243, 40.594087], [-73.803288, 40.594282], [-73.803258, 40.594286], [-73.80324, 40.594204], [-73.80282, 40.594261], [-73.802828, 40.594288], [-73.802722, 40.594303], [-73.802716, 40.594274], [-73.802604, 40.594288], [-73.802607, 40.594299], [-73.802706, 40.594286], [-73.80271, 40.594306], [-73.802577, 40.594322], [-73.802589, 40.594385], [-73.802337, 40.594405], [-73.802345, 40.594496], [-73.802774, 40.594482], [-73.802777, 40.594556], [-73.803042, 40.594536], [-73.803098, 40.594563], [-73.803119, 40.59459], [-73.803186, 40.594663], [-73.803471, 40.594503], [-73.803418, 40.594447], [-73.80344, 40.594434], [-73.803509, 40.594506], [-73.803486, 40.594519], [-73.803482, 40.594516], [-73.803197, 40.594678], [-73.803211, 40.594693], [-73.803378, 40.594869], [-73.803655, 40.594731], [-73.803725, 40.594817], [-73.80371, 40.594824], [-73.803652, 40.594753], [-73.803385, 40.594885], [-73.803361, 40.594887], [-73.803345, 40.594871], [-73.8032, 40.594873], [-73.803203, 40.594937], [-73.803384, 40.594934], [-73.803385, 40.59495], [-73.803204, 40.594953], [-73.803207, 40.59501], [-73.803391, 40.595007], [-73.803391, 40.59502], [-73.803208, 40.595026], [-73.803215, 40.595146], [-73.803313, 40.595149], [-73.803314, 40.595165], [-73.803351, 40.595164], [-73.803353, 40.595156], [-73.80364, 40.595133], [-73.803895, 40.594991], [-73.803908, 40.595005], [-73.803652, 40.59515], [-73.803314, 40.595177], [-73.803315, 40.59518], [-73.803329, 40.595188], [-73.803427, 40.595191], [-73.803498, 40.595175], [-73.80354, 40.595167], [-73.803571, 40.595164], [-73.803598, 40.595165], [-73.803623, 40.595169], [-73.803646, 40.595176], [-73.803667, 40.595186], [-73.803685, 40.595198], [-73.804112, 40.595687], [-73.804279, 40.595879], [-73.804398, 40.596036], [-73.804495, 40.596169], [-73.804594, 40.596287], [-73.804693, 40.59637], [-73.804718, 40.596407], [-73.804731, 40.596439], [-73.804735, 40.596488], [-73.804751, 40.59653], [-73.804779, 40.596573], [-73.804865, 40.596734], [-73.80495, 40.596744], [-73.80501, 40.596763], [-73.805016, 40.596764], [-73.805016, 40.59676], [-73.805094, 40.596767], [-73.8051, 40.596706], [-73.805108, 40.59669], [-73.805099, 40.596609], [-73.805134, 40.596608], [-73.805148, 40.596722], [-73.805154, 40.596721], [-73.805157, 40.596734], [-73.805213, 40.596733], [-73.805217, 40.596767], [-73.805225, 40.596767], [-73.805225, 40.596788], [-73.805206, 40.59679], [-73.805209, 40.59681], [-73.805204, 40.596892], [-73.805248, 40.596895], [-73.805247, 40.596945], [-73.805201, 40.596944], [-73.805201, 40.59696], [-73.805245, 40.596959], [-73.805251, 40.597033], [-73.805208, 40.597035], [-73.805222, 40.597189], [-73.805192, 40.59719], [-73.805185, 40.597129], [-73.805176, 40.597047], [-73.805173, 40.596967], [-73.805174, 40.596898], [-73.805181, 40.596791], [-73.805163, 40.596792], [-73.805157, 40.596769], [-73.805165, 40.596768], [-73.805163, 40.596758], [-73.80515, 40.596757], [-73.805137, 40.596822], [-73.805102, 40.596819], [-73.805103, 40.596811], [-73.80501, 40.596806], [-73.805011, 40.596794], [-73.804974, 40.59678], [-73.804971, 40.596787], [-73.804946, 40.596781], [-73.804952, 40.596765], [-73.80493, 40.596757], [-73.804876, 40.596749], [-73.804941, 40.596857], [-73.805026, 40.597001], [-73.805085, 40.597101], [-73.805112, 40.597151], [-73.805055, 40.597206], [-73.80497, 40.59727], [-73.804933, 40.597304], [-73.804846, 40.597415], [-73.804765, 40.597529], [-73.804751, 40.597551], [-73.80473, 40.597625], [-73.80473, 40.597636], [-73.804728, 40.597646], [-73.804724, 40.597656], [-73.804718, 40.597665], [-73.804711, 40.597675], [-73.804702, 40.597683], [-73.804692, 40.597691], [-73.80468, 40.597696], [-73.804667, 40.597701], [-73.804645, 40.597706], [-73.804622, 40.597708], [-73.804599, 40.597708], [-73.804581, 40.597707], [-73.804563, 40.597708], [-73.804514, 40.597714], [-73.804485, 40.59772], [-73.804464, 40.59773], [-73.804456, 40.597732], [-73.804444, 40.597728], [-73.804439, 40.597723], [-73.804436, 40.597723], [-73.804424, 40.597733], [-73.804419, 40.597738], [-73.804406, 40.597746], [-73.80439, 40.59775], [-73.804379, 40.597754], [-73.804363, 40.597767], [-73.804358, 40.597775], [-73.804351, 40.59778], [-73.804348, 40.597782], [-73.804339, 40.597784], [-73.804324, 40.597789], [-73.804313, 40.597794], [-73.804308, 40.597798], [-73.8043, 40.597799], [-73.804295, 40.597798], [-73.80429, 40.597797], [-73.804279, 40.5978], [-73.804262, 40.597805], [-73.80424, 40.597812], [-73.804234, 40.597818], [-73.804232, 40.597823], [-73.804233, 40.597829], [-73.804228, 40.59783], [-73.804218, 40.597828], [-73.80421, 40.597828], [-73.804203, 40.597829], [-73.804195, 40.597832], [-73.804171, 40.597838], [-73.804125, 40.597866], [-73.804111, 40.597871], [-73.8041, 40.597873], [-73.804086, 40.597872], [-73.804075, 40.597874], [-73.804047, 40.597888], [-73.804036, 40.597896], [-73.803933, 40.597943], [-73.803921, 40.597954], [-73.803914, 40.598003], [-73.803906, 40.598019], [-73.803898, 40.598033], [-73.803889, 40.59804], [-73.803887, 40.598047], [-73.80389, 40.598052], [-73.803883, 40.598062], [-73.803876, 40.598062], [-73.803868, 40.598059], [-73.803857, 40.598051], [-73.803852, 40.598052], [-73.803849, 40.598056], [-73.80385, 40.598062], [-73.803852, 40.598068], [-73.803856, 40.598077], [-73.803857, 40.598083], [-73.803857, 40.598091], [-73.803853, 40.598099], [-73.803846, 40.598103], [-73.803841, 40.598103], [-73.80382, 40.598091], [-73.803812, 40.598085], [-73.803806, 40.598083], [-73.803801, 40.598082], [-73.803783, 40.598087], [-73.80377, 40.598092], [-73.803712, 40.598111], [-73.803693, 40.598119], [-73.803688, 40.598127], [-73.803683, 40.598144], [-73.803686, 40.598168], [-73.803681, 40.598179], [-73.803679, 40.59818], [-73.803672, 40.598176], [-73.803664, 40.598169], [-73.803657, 40.598163], [-73.803652, 40.598161], [-73.80365, 40.598162], [-73.803647, 40.598167], [-73.803645, 40.598184], [-73.80364, 40.598188], [-73.803625, 40.598186], [-73.803615, 40.598186], [-73.803604, 40.598189], [-73.803594, 40.598194], [-73.803581, 40.598209], [-73.803575, 40.59822], [-73.803575, 40.598232], [-73.803578, 40.59824], [-73.803581, 40.598251], [-73.803566, 40.598282], [-73.803559, 40.598292], [-73.803549, 40.598297], [-73.803542, 40.598296], [-73.803527, 40.598291], [-73.803523, 40.598291], [-73.803519, 40.598295], [-73.803517, 40.598298], [-73.803514, 40.598308], [-73.803511, 40.598316], [-73.803485, 40.598331], [-73.803448, 40.59837], [-73.803446, 40.598376], [-73.803447, 40.598386], [-73.803447, 40.598396], [-73.80344, 40.598401], [-73.803431, 40.598404], [-73.803424, 40.598404], [-73.803408, 40.598402], [-73.8034, 40.598406], [-73.803394, 40.598413], [-73.803397, 40.598417], [-73.80343, 40.598442], [-73.803433, 40.598448], [-73.803431, 40.598453], [-73.803424, 40.598459], [-73.803416, 40.598463], [-73.8034, 40.598482], [-73.803394, 40.598488], [-73.803389, 40.598496], [-73.803389, 40.598504], [-73.803386, 40.598511], [-73.803379, 40.598519], [-73.803372, 40.598521], [-73.803358, 40.598522], [-73.803346, 40.598521], [-73.803338, 40.598519], [-73.803326, 40.598518], [-73.803314, 40.598522], [-73.803285, 40.598535], [-73.803264, 40.59855], [-73.803244, 40.598567], [-73.803204, 40.598604], [-73.803166, 40.59865], [-73.803132, 40.598689], [-73.803114, 40.598708], [-73.803102, 40.598716], [-73.80307, 40.598732], [-73.803043, 40.59875], [-73.803027, 40.598768], [-73.803017, 40.598782], [-73.803006, 40.598807], [-73.803002, 40.598817], [-73.802994, 40.598827], [-73.802979, 40.598844], [-73.802957, 40.598857], [-73.802922, 40.598873], [-73.802892, 40.59888], [-73.802864, 40.598891], [-73.802835, 40.598899], [-73.802801, 40.598907], [-73.802705, 40.598922], [-73.802671, 40.598933], [-73.802657, 40.598936], [-73.80263, 40.598936], [-73.802571, 40.598931], [-73.802424, 40.598929], [-73.802335, 40.598923], [-73.802193, 40.5989], [-73.802076, 40.598871], [-73.802008, 40.598853], [-73.801963, 40.598851], [-73.801889, 40.598862], [-73.801766, 40.598887], [-73.801671, 40.598896], [-73.801472, 40.598989], [-73.801235, 40.599123], [-73.800949, 40.599152], [-73.800952, 40.599181], [-73.800911, 40.599184], [-73.800891, 40.599201], [-73.800903, 40.599312], [-73.800893, 40.599312], [-73.800896, 40.599338], [-73.800909, 40.599337], [-73.800915, 40.599391], [-73.800883, 40.599393], [-73.800877, 40.599339], [-73.800886, 40.599339], [-73.800883, 40.599312], [-73.800871, 40.599313], [-73.800859, 40.599211], [-73.800823, 40.599189], [-73.80078, 40.599192], [-73.800777, 40.599162], [-73.800565, 40.599175], [-73.800568, 40.599199], [-73.800495, 40.599204], [-73.80051, 40.599329], [-73.800474, 40.599332], [-73.800467, 40.599276], [-73.800462, 40.599276], [-73.800451, 40.599183], [-73.799338, 40.599249], [-73.79916, 40.599258], [-73.799167, 40.599321], [-73.799191, 40.59932], [-73.799197, 40.599369], [-73.799188, 40.59937], [-73.79919, 40.599417], [-73.799143, 40.599419], [-73.799139, 40.599373], [-73.799129, 40.599373], [-73.799123, 40.599322], [-73.799146, 40.599321], [-73.79914, 40.599258], [-73.798788, 40.599265], [-73.798688, 40.599263], [-73.798615, 40.599214], [-73.798527, 40.599183], [-73.798431, 40.599174], [-73.79831, 40.599186], [-73.79824, 40.5992], [-73.798172, 40.59922], [-73.798107, 40.599246], [-73.798112, 40.599301], [-73.797822, 40.599322], [-73.79769, 40.599329], [-73.795618, 40.599445], [-73.795618, 40.599462], [-73.795543, 40.599467], [-73.795546, 40.599497], [-73.795465, 40.599499], [-73.795464, 40.599473], [-73.795314, 40.599483], [-73.795193, 40.599455], [-73.795071, 40.599434], [-73.794946, 40.59942], [-73.794821, 40.599413], [-73.794697, 40.599412], [-73.794574, 40.599419], [-73.794451, 40.599433], [-73.79433, 40.599453], [-73.794212, 40.59948], [-73.794096, 40.599513], [-73.793984, 40.599553], [-73.793876, 40.599599], [-73.793772, 40.599651], [-73.793674, 40.599709], [-73.793582, 40.599772], [-73.793552, 40.599784], [-73.793516, 40.599817], [-73.793482, 40.599849], [-73.793456, 40.599868], [-73.793431, 40.59988], [-73.793412, 40.599901], [-73.793377, 40.599927], [-73.793359, 40.599949], [-73.793347, 40.599952], [-73.793337, 40.59995], [-73.793319, 40.599966], [-73.793309, 40.599968], [-73.793258, 40.599966], [-73.793189, 40.599958], [-73.793165, 40.599961], [-73.793144, 40.599976], [-73.793123, 40.599985], [-73.7931, 40.599987], [-73.793039, 40.599978], [-73.792982, 40.599986], [-73.792913, 40.599988], [-73.792895, 40.599978], [-73.792876, 40.599958], [-73.792855, 40.599948], [-73.792814, 40.599956], [-73.792783, 40.599942], [-73.792772, 40.599942], [-73.792755, 40.599948], [-73.792743, 40.599992], [-73.792736, 40.599998], [-73.792703, 40.600007], [-73.792667, 40.600007], [-73.792634, 40.600009], [-73.792624, 40.600012], [-73.792619, 40.60002], [-73.792613, 40.600043], [-73.792597, 40.600052], [-73.792586, 40.600051], [-73.792559, 40.600044], [-73.792538, 40.600048], [-73.792525, 40.600037], [-73.792508, 40.60002], [-73.792487, 40.600019], [-73.792457, 40.600011], [-73.792429, 40.599996], [-73.792355, 40.599953], [-73.792333, 40.599954], [-73.792287, 40.599993], [-73.792284, 40.600019], [-73.792267, 40.600021], [-73.792261, 40.600014], [-73.792242, 40.60001], [-73.792212, 40.600013], [-73.792195, 40.600021], [-73.792196, 40.600035], [-73.792193, 40.60005], [-73.79216, 40.600055], [-73.79214, 40.600064], [-73.792129, 40.600079], [-73.792106, 40.60009], [-73.792091, 40.600113], [-73.792081, 40.600135], [-73.792059, 40.600158], [-73.792052, 40.60017], [-73.792046, 40.600182], [-73.79204, 40.600206], [-73.79203, 40.600222], [-73.791931, 40.600253], [-73.791914, 40.600265], [-73.791887, 40.600279], [-73.791854, 40.600287], [-73.791799, 40.6003], [-73.791718, 40.600316], [-73.791589, 40.600335], [-73.791541, 40.60035], [-73.791473, 40.600391], [-73.791417, 40.600433], [-73.791311, 40.600502], [-73.791187, 40.600598], [-73.791158, 40.600626], [-73.791078, 40.600688], [-73.790956, 40.600805], [-73.79087, 40.600921], [-73.790845, 40.600943], [-73.790822, 40.60096], [-73.79079, 40.60098], [-73.79076, 40.600994], [-73.790737, 40.601009], [-73.790718, 40.601032], [-73.790705, 40.601054], [-73.790698, 40.601067], [-73.790685, 40.601083], [-73.790671, 40.601096], [-73.790649, 40.601106], [-73.79062, 40.601116], [-73.790589, 40.601125], [-73.790563, 40.601131], [-73.790535, 40.601136], [-73.79051, 40.601139], [-73.790452, 40.601142], [-73.790432, 40.601145], [-73.790404, 40.601154], [-73.790376, 40.601165], [-73.790299, 40.601211], [-73.790255, 40.601242], [-73.790087, 40.60137], [-73.789998, 40.601431], [-73.789939, 40.601505], [-73.78985, 40.601602], [-73.789797, 40.601643], [-73.789746, 40.601677], [-73.789697, 40.601703], [-73.789608, 40.601775], [-73.789485, 40.60188], [-73.789399, 40.601966], [-73.789333, 40.602013], [-73.789072, 40.602186], [-73.789011, 40.602239], [-73.788958, 40.602289], [-73.78889, 40.60234], [-73.788653, 40.602509], [-73.788574, 40.602582], [-73.788516, 40.60263], [-73.788365, 40.602729], [-73.788323, 40.602757], [-73.788277, 40.602794], [-73.788208, 40.602842], [-73.788109, 40.602934], [-73.788079, 40.602958], [-73.788041, 40.602977], [-73.787979, 40.603016], [-73.787897, 40.603084], [-73.787858, 40.603111], [-73.787823, 40.603124], [-73.787792, 40.603134], [-73.787769, 40.603136], [-73.787698, 40.603115], [-73.787669, 40.603115], [-73.78762, 40.603123], [-73.787576, 40.603135], [-73.787432, 40.603188], [-73.787343, 40.603218], [-73.787302, 40.603231], [-73.787275, 40.603238], [-73.786639, 40.603256], [-73.786503, 40.60325], [-73.786353, 40.603195], [-73.786305, 40.603159], [-73.786304, 40.603151], [-73.786314, 40.603138], [-73.786315, 40.603123], [-73.786288, 40.603114], [-73.786256, 40.603114], [-73.786222, 40.603105], [-73.786169, 40.603075], [-73.786166, 40.603067], [-73.786169, 40.603047], [-73.786179, 40.603032], [-73.786201, 40.60301], [-73.786244, 40.602976], [-73.786288, 40.60293], [-73.78634, 40.602904], [-73.786389, 40.602874], [-73.786433, 40.60284], [-73.786473, 40.602803], [-73.786507, 40.602763], [-73.786467, 40.602723], [-73.78659, 40.602646], [-73.786626, 40.602677], [-73.786766, 40.602595], [-73.786903, 40.60251], [-73.787162, 40.602326], [-73.787211, 40.60226], [-73.78728, 40.602113], [-73.787333, 40.602012], [-73.787419, 40.601865], [-73.787455, 40.601787], [-73.787512, 40.601676], [-73.787546, 40.601618], [-73.787575, 40.601557], [-73.78763, 40.601442], [-73.787664, 40.60137], [-73.787745, 40.60125], [-73.78789, 40.601041], [-73.78793, 40.600995], [-73.788002, 40.600937], [-73.788072, 40.600854], [-73.788355, 40.600643], [-73.7885, 40.600539], [-73.788625, 40.60048], [-73.788761, 40.60038], [-73.788868, 40.600323], [-73.788985, 40.60024], [-73.789089, 40.600186], [-73.789133, 40.600152], [-73.789188, 40.600128], [-73.789236, 40.600099], [-73.789264, 40.600061], [-73.789271, 40.600042], [-73.789284, 40.60002], [-73.789304, 40.600007], [-73.78936, 40.600004], [-73.789395, 40.599994], [-73.789463, 40.599997], [-73.789535, 40.599972]]]]
    },
    "properties": {
      "neighbourhood": "Arverne",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.014752, 40.633967], [-74.014753, 40.633966], [-74.021216, 40.618472], [-74.02835, 40.622799], [-74.041652, 40.626018], [-74.041273, 40.628703], [-74.041063, 40.63019], [-74.03829, 40.635919], [-74.036807, 40.638984], [-74.038763, 40.639588], [-74.038688, 40.639738], [-74.036725, 40.639141], [-74.036344, 40.639798], [-74.035993, 40.639694], [-74.035366, 40.640502], [-74.034509, 40.641087], [-74.033227, 40.64149], [-74.031879, 40.64167], [-74.030271, 40.641613], [-74.028809, 40.641333], [-74.025774, 40.640607], [-74.023533, 40.63932], [-74.021328, 40.638008], [-74.01918, 40.636631], [-74.014752, 40.633967]]]]
    },
    "properties": {
      "neighbourhood": "Bay Ridge",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.880675, 40.85716], [-73.880743, 40.856496], [-73.883109, 40.848273], [-73.88379, 40.846783], [-73.884465, 40.845985], [-73.884486, 40.845995], [-73.895563, 40.851469], [-73.897085, 40.851972], [-73.894778, 40.85598], [-73.891686, 40.860222], [-73.890855, 40.861414], [-73.886823, 40.859357], [-73.885151, 40.858481], [-73.88341, 40.858104], [-73.880675, 40.85716]]]]
    },
    "properties": {
      "neighbourhood": "Belmont",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.935032, 40.601734], [-73.933543, 40.602697], [-73.92812, 40.597788], [-73.925933, 40.595924], [-73.927579, 40.595043], [-73.918401, 40.586794], [-73.918093, 40.58657], [-73.918125, 40.586507], [-73.918056, 40.586437], [-73.918083, 40.586432], [-73.918115, 40.586454], [-73.91814, 40.586446], [-73.918171, 40.586419], [-73.918176, 40.586395], [-73.918203, 40.586387], [-73.918238, 40.586408], [-73.918439, 40.586322], [-73.918486, 40.58631], [-73.918553, 40.5863], [-73.91858, 40.586263], [-73.918628, 40.58624], [-73.91871, 40.586192], [-73.918771, 40.586167], [-73.918848, 40.586148], [-73.919, 40.586077], [-73.91919, 40.585962], [-73.919234, 40.586009], [-73.919327, 40.586015], [-73.919435, 40.586113], [-73.919505, 40.586134], [-73.919514, 40.586115], [-73.919611, 40.586169], [-73.919976, 40.586059], [-73.920052, 40.58605], [-73.920139, 40.586057], [-73.92014, 40.586025], [-73.920182, 40.586025], [-73.920182, 40.586021], [-73.920189, 40.58602], [-73.920185, 40.585991], [-73.920049, 40.586007], [-73.920047, 40.585989], [-73.920175, 40.585972], [-73.920171, 40.58594], [-73.920206, 40.585939], [-73.920211, 40.585962], [-73.920253, 40.585963], [-73.920255, 40.585981], [-73.920202, 40.585984], [-73.920207, 40.586019], [-73.920217, 40.586022], [-73.920219, 40.586027], [-73.920278, 40.586026], [-73.920277, 40.586064], [-73.920361, 40.586068], [-73.920405, 40.58609], [-73.92047, 40.586034], [-73.920551, 40.58601], [-73.920715, 40.585982], [-73.920822, 40.585996], [-73.920821, 40.585958], [-73.920868, 40.585921], [-73.920759, 40.585813], [-73.920765, 40.58581], [-73.920728, 40.585778], [-73.920697, 40.585797], [-73.92067, 40.585774], [-73.920739, 40.58573], [-73.920764, 40.585754], [-73.920739, 40.585772], [-73.920778, 40.585804], [-73.920782, 40.585801], [-73.920891, 40.585903], [-73.920929, 40.585873], [-73.920902, 40.58583], [-73.920989, 40.585769], [-73.920878, 40.585599], [-73.920906, 40.585591], [-73.921012, 40.585754], [-73.921038, 40.585737], [-73.921082, 40.585729], [-73.921103, 40.585741], [-73.921471, 40.585746], [-73.921514, 40.585781], [-73.921533, 40.585767], [-73.921763, 40.5858], [-73.921782, 40.585777], [-73.921758, 40.585766], [-73.921781, 40.585733], [-73.921811, 40.585748], [-73.92181, 40.585759], [-73.921836, 40.585777], [-73.9219, 40.585693], [-73.921948, 40.585712], [-73.921848, 40.585838], [-73.921867, 40.585832], [-73.921899, 40.585845], [-73.921889, 40.585821], [-73.922119, 40.585811], [-73.922305, 40.585993], [-73.922302, 40.586018], [-73.922353, 40.586024], [-73.922717, 40.585997], [-73.922824, 40.585951], [-73.922964, 40.585894], [-73.92302, 40.585926], [-73.923133, 40.585963], [-73.923341, 40.585995], [-73.923535, 40.585978], [-73.923698, 40.585942], [-73.923858, 40.585858], [-73.923895, 40.585801], [-73.923926, 40.585801], [-73.923972, 40.585842], [-73.924017, 40.585893], [-73.924043, 40.5859], [-73.924063, 40.585895], [-73.924067, 40.585877], [-73.924049, 40.585855], [-73.924009, 40.585805], [-73.924011, 40.58578], [-73.924296, 40.585683], [-73.924323, 40.585705], [-73.924568, 40.585646], [-73.924757, 40.585633], [-73.924807, 40.585653], [-73.924861, 40.585713], [-73.924938, 40.5857], [-73.924993, 40.585713], [-73.925204, 40.585806], [-73.925466, 40.586092], [-73.925418, 40.586197], [-73.925543, 40.586193], [-73.925708, 40.586403], [-73.925706, 40.586467], [-73.925791, 40.586458], [-73.926003, 40.586631], [-73.925984, 40.58668], [-73.926076, 40.58668], [-73.926288, 40.586844], [-73.926282, 40.586886], [-73.926304, 40.586902], [-73.92637, 40.586871], [-73.926573, 40.587049], [-73.926498, 40.587096], [-73.926533, 40.587121], [-73.926585, 40.587133], [-73.926703, 40.587204], [-73.92674, 40.587189], [-73.926842, 40.58729], [-73.926779, 40.58733], [-73.926879, 40.58741], [-73.926958, 40.587452], [-73.927069, 40.587567], [-73.927088, 40.587556], [-73.927095, 40.58756], [-73.927128, 40.58754], [-73.926942, 40.587369], [-73.926967, 40.587354], [-73.927188, 40.58756], [-73.92717, 40.587572], [-73.927141, 40.587551], [-73.927105, 40.587572], [-73.92712, 40.58758], [-73.927099, 40.587591], [-73.927111, 40.587618], [-73.927159, 40.587661], [-73.927208, 40.587723], [-73.927258, 40.587706], [-73.92765, 40.587467], [-73.927668, 40.587359], [-73.927683, 40.587362], [-73.927666, 40.587475], [-73.927299, 40.587703], [-73.927277, 40.587738], [-73.927248, 40.587753], [-73.927243, 40.587769], [-73.927319, 40.58785], [-73.927265, 40.587883], [-73.927357, 40.588022], [-73.927946, 40.587659], [-73.927874, 40.587588], [-73.927874, 40.587576], [-73.927916, 40.587549], [-73.928079, 40.587702], [-73.92803, 40.587731], [-73.927956, 40.587667], [-73.927469, 40.587973], [-73.927475, 40.58798], [-73.927369, 40.588045], [-73.927438, 40.588148], [-73.92739, 40.588179], [-73.927405, 40.588206], [-73.927426, 40.588219], [-73.927446, 40.588206], [-73.927504, 40.588221], [-73.927905, 40.587976], [-73.927891, 40.58796], [-73.927902, 40.587953], [-73.928022, 40.588069], [-73.928007, 40.588077], [-73.927923, 40.587996], [-73.927555, 40.588215], [-73.927567, 40.588229], [-73.927558, 40.588236], [-73.927547, 40.588228], [-73.92754, 40.588233], [-73.927526, 40.588222], [-73.927517, 40.588226], [-73.927523, 40.588232], [-73.927517, 40.588236], [-73.927529, 40.588248], [-73.927503, 40.588269], [-73.927455, 40.5883], [-73.927486, 40.588321], [-73.927435, 40.588369], [-73.92755, 40.588514], [-73.927634, 40.588459], [-73.927761, 40.588661], [-73.926653, 40.589411], [-73.923953, 40.59114], [-73.9242, 40.591364], [-73.92426, 40.591321], [-73.925875, 40.590337], [-73.927111, 40.589525], [-73.927765, 40.589077], [-73.928158, 40.588825], [-73.928363, 40.588969], [-73.928419, 40.588934], [-73.928413, 40.588929], [-73.928397, 40.588941], [-73.928369, 40.588918], [-73.928396, 40.588898], [-73.92838, 40.588886], [-73.928364, 40.588883], [-73.928356, 40.588889], [-73.928216, 40.588784], [-73.928225, 40.588776], [-73.928336, 40.588863], [-73.928359, 40.588865], [-73.928673, 40.588635], [-73.928677, 40.588626], [-73.928621, 40.58858], [-73.928631, 40.588573], [-73.928758, 40.588674], [-73.92875, 40.588681], [-73.928696, 40.588638], [-73.92839, 40.588863], [-73.928396, 40.588879], [-73.928469, 40.588933], [-73.928443, 40.588953], [-73.928432, 40.588944], [-73.928377, 40.588981], [-73.928441, 40.58903], [-73.92862, 40.58912], [-73.928651, 40.589096], [-73.928914, 40.58892], [-73.928913, 40.588906], [-73.928865, 40.588867], [-73.928881, 40.588854], [-73.928951, 40.58891], [-73.928632, 40.589126], [-73.928666, 40.589143], [-73.928691, 40.589127], [-73.928734, 40.589147], [-73.929134, 40.588879], [-73.929258, 40.588932], [-73.929242, 40.588951], [-73.929133, 40.588897], [-73.928847, 40.589091], [-73.928856, 40.589105], [-73.928817, 40.589128], [-73.928841, 40.58915], [-73.928824, 40.58916], [-73.928786, 40.589133], [-73.928757, 40.589153], [-73.928878, 40.58921], [-73.928847, 40.589232], [-73.929063, 40.589296], [-73.929084, 40.589261], [-73.929645, 40.589362], [-73.929765, 40.589401], [-73.929903, 40.589465], [-73.929982, 40.589516], [-73.930014, 40.589462], [-73.929861, 40.589374], [-73.929758, 40.589344], [-73.929751, 40.58932], [-73.929611, 40.589309], [-73.929361, 40.589251], [-73.929373, 40.589224], [-73.929574, 40.589273], [-73.929766, 40.589292], [-73.930034, 40.589426], [-73.930159, 40.589525], [-73.930328, 40.589658], [-73.930395, 40.589732], [-73.930424, 40.589781], [-73.930439, 40.589776], [-73.930577, 40.589891], [-73.930548, 40.589907], [-73.93039, 40.589773], [-73.930341, 40.589808], [-73.930228, 40.589688], [-73.930271, 40.589653], [-73.930162, 40.589564], [-73.930103, 40.589606], [-73.930183, 40.589677], [-73.930311, 40.589819], [-73.930375, 40.58994], [-73.930297, 40.590035], [-73.930322, 40.590049], [-73.93044, 40.59002], [-73.930455, 40.590038], [-73.930567, 40.590017], [-73.930552, 40.589957], [-73.930589, 40.589953], [-73.930628, 40.590253], [-73.930589, 40.590253], [-73.93057, 40.590043], [-73.930468, 40.590061], [-73.930536, 40.590264], [-73.930529, 40.590308], [-73.93063, 40.590305], [-73.930631, 40.590294], [-73.930652, 40.590291], [-73.930674, 40.590591], [-73.930628, 40.590591], [-73.930631, 40.590329], [-73.930525, 40.590333], [-73.930471, 40.59086], [-73.930477, 40.590921], [-73.930499, 40.590921], [-73.930499, 40.59093], [-73.930523, 40.59093], [-73.930525, 40.590917], [-73.930623, 40.590919], [-73.930626, 40.590619], [-73.930647, 40.59062], [-73.930641, 40.590945], [-73.930522, 40.590952], [-73.930525, 40.590943], [-73.930494, 40.590946], [-73.930496, 40.590958], [-73.93047, 40.590956], [-73.93046, 40.591001], [-73.930693, 40.591], [-73.930696, 40.591019], [-73.930456, 40.591025], [-73.93045, 40.59108], [-73.930726, 40.59107], [-73.930726, 40.59109], [-73.930506, 40.591094], [-73.930506, 40.591111], [-73.930445, 40.591117], [-73.930372, 40.591211], [-73.930427, 40.591248], [-73.930532, 40.59119], [-73.930525, 40.591211], [-73.93057, 40.59121], [-73.930572, 40.591191], [-73.930604, 40.591186], [-73.930601, 40.591485], [-73.930564, 40.591495], [-73.930575, 40.59123], [-73.930526, 40.591226], [-73.930523, 40.591242], [-73.930465, 40.591273], [-73.930499, 40.591296], [-73.930475, 40.591462], [-73.930405, 40.591731], [-73.930462, 40.591721], [-73.930571, 40.591528], [-73.930606, 40.591541], [-73.930505, 40.591717], [-73.930465, 40.591747], [-73.930451, 40.592245], [-73.930425, 40.592246], [-73.930438, 40.591747], [-73.930399, 40.591756], [-73.930346, 40.592095], [-73.930311, 40.592194], [-73.930302, 40.592299], [-73.930344, 40.592301], [-73.930345, 40.592298], [-73.930364, 40.592299], [-73.930369, 40.592244], [-73.930389, 40.592252], [-73.930364, 40.59248], [-73.930342, 40.592465], [-73.930362, 40.592312], [-73.930301, 40.592308], [-73.930308, 40.592357], [-73.930287, 40.592446], [-73.930204, 40.592378], [-73.930176, 40.592406], [-73.930354, 40.592555], [-73.930265, 40.592619], [-73.930253, 40.59261], [-73.930326, 40.592554], [-73.930233, 40.592488], [-73.93019, 40.592454], [-73.930106, 40.592575], [-73.930023, 40.592683], [-73.930116, 40.592726], [-73.930094, 40.592754], [-73.930091, 40.592752], [-73.930089, 40.592755], [-73.930102, 40.592761], [-73.930187, 40.592666], [-73.930213, 40.592678], [-73.930107, 40.592805], [-73.930076, 40.59279], [-73.930087, 40.592777], [-73.92999, 40.592728], [-73.929963, 40.592817], [-73.929913, 40.592853], [-73.929991, 40.592874], [-73.93007, 40.592903], [-73.930087, 40.592869], [-73.930099, 40.592872], [-73.930067, 40.59295], [-73.930052, 40.593], [-73.930033, 40.593], [-73.930046, 40.592959], [-73.930064, 40.592917], [-73.930009, 40.592905], [-73.929958, 40.592892], [-73.929891, 40.592871], [-73.929832, 40.592904], [-73.929712, 40.59312], [-73.92989, 40.593142], [-73.929981, 40.593159], [-73.930014, 40.593054], [-73.930042, 40.593061], [-73.929956, 40.593309], [-73.929936, 40.593305], [-73.929976, 40.593174], [-73.929894, 40.593158], [-73.929798, 40.593145], [-73.929741, 40.593144], [-73.929767, 40.593187], [-73.929815, 40.593299], [-73.929823, 40.593373], [-73.929893, 40.593366], [-73.929901, 40.593359], [-73.930039, 40.593348], [-73.930035, 40.593367], [-73.929904, 40.593376], [-73.929801, 40.593391], [-73.929781, 40.593437], [-73.929853, 40.593525], [-73.929857, 40.593584], [-73.929844, 40.593646], [-73.929854, 40.593699], [-73.92986, 40.593782], [-73.929919, 40.593876], [-73.929944, 40.593932], [-73.929961, 40.594006], [-73.930017, 40.594095], [-73.930215, 40.593973], [-73.930198, 40.593939], [-73.930189, 40.593941], [-73.93005, 40.593602], [-73.930082, 40.593595], [-73.930228, 40.593931], [-73.930288, 40.593906], [-73.930292, 40.593912], [-73.930459, 40.593814], [-73.930525, 40.59388], [-73.93036, 40.593976], [-73.93057, 40.594186], [-73.930547, 40.594199], [-73.930337, 40.593988], [-73.930344, 40.593983], [-73.930299, 40.593938], [-73.93004, 40.594105], [-73.930432, 40.594403], [-73.93053, 40.594451], [-73.930613, 40.594477], [-73.930761, 40.594382], [-73.930598, 40.594219], [-73.930623, 40.594204], [-73.930834, 40.594414], [-73.930806, 40.59443], [-73.930768, 40.594392], [-73.930662, 40.594464], [-73.930769, 40.594493], [-73.930825, 40.594447], [-73.93082, 40.594442], [-73.930832, 40.594431], [-73.930935, 40.59446], [-73.931104, 40.594344], [-73.931263, 40.594244], [-73.931213, 40.594188], [-73.931221, 40.594183], [-73.931325, 40.594276], [-73.931317, 40.594281], [-73.931277, 40.594257], [-73.930955, 40.594466], [-73.931171, 40.594498], [-73.931168, 40.594503], [-73.931367, 40.594529], [-73.931587, 40.594495], [-73.931616, 40.594366], [-73.93174, 40.594371], [-73.931742, 40.594284], [-73.931764, 40.594284], [-73.931758, 40.594384], [-73.931632, 40.594377], [-73.931613, 40.594504], [-73.931368, 40.594546], [-73.931027, 40.594505], [-73.930846, 40.594452], [-73.930781, 40.594499], [-73.930805, 40.594516], [-73.930819, 40.594529], [-73.93085, 40.594544], [-73.930885, 40.594549], [-73.931019, 40.594617], [-73.931138, 40.59464], [-73.931301, 40.594654], [-73.93143, 40.594687], [-73.931697, 40.59471], [-73.931905, 40.594685], [-73.931934, 40.594692], [-73.931999, 40.594728], [-73.93209, 40.594794], [-73.93213, 40.594829], [-73.932167, 40.594863], [-73.932218, 40.594892], [-73.932252, 40.594905], [-73.932308, 40.594916], [-73.932347, 40.594917], [-73.932397, 40.594912], [-73.932452, 40.594915], [-73.932413, 40.594843], [-73.932398, 40.594846], [-73.932372, 40.594802], [-73.93239, 40.594796], [-73.932405, 40.594824], [-73.932563, 40.594763], [-73.932578, 40.594786], [-73.932438, 40.594844], [-73.932477, 40.594916], [-73.932556, 40.594912], [-73.932604, 40.59493], [-73.932671, 40.594912], [-73.932797, 40.594843], [-73.932827, 40.594804], [-73.933056, 40.594887], [-73.934227, 40.60101], [-73.935032, 40.601734]]]]
    },
    "properties": {
      "neighbourhood": "Gerritsen Beach",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.171193, 40.641741], [-74.171287, 40.640518], [-74.172598, 40.640315], [-74.174062, 40.640923], [-74.1748, 40.641032], [-74.175895, 40.641193], [-74.180805, 40.640818], [-74.186157, 40.643291], [-74.185909, 40.643631], [-74.185574, 40.643802], [-74.185501, 40.643815], [-74.185345, 40.643786], [-74.185303, 40.643767], [-74.185114, 40.643806], [-74.185248, 40.643944], [-74.184982, 40.644072], [-74.184836, 40.644128], [-74.18466, 40.643912], [-74.184472, 40.643772], [-74.184424, 40.643651], [-74.1842, 40.64359], [-74.184113, 40.64353], [-74.184064, 40.643395], [-74.184065, 40.643324], [-74.184192, 40.643172], [-74.184197, 40.643171], [-74.184207, 40.643174], [-74.184217, 40.643182], [-74.184222, 40.643194], [-74.184222, 40.643207], [-74.184227, 40.643214], [-74.184233, 40.643229], [-74.18424, 40.643234], [-74.18425, 40.643232], [-74.18426, 40.643228], [-74.184273, 40.643224], [-74.184283, 40.643223], [-74.184292, 40.643223], [-74.184298, 40.643225], [-74.184314, 40.643229], [-74.184322, 40.64323], [-74.184329, 40.643227], [-74.184332, 40.643221], [-74.184327, 40.643214], [-74.184315, 40.643208], [-74.184305, 40.643201], [-74.184305, 40.643195], [-74.184311, 40.64319], [-74.184323, 40.643183], [-74.184333, 40.643184], [-74.184348, 40.643182], [-74.184362, 40.643172], [-74.184363, 40.643163], [-74.184359, 40.643155], [-74.184352, 40.643148], [-74.184342, 40.643141], [-74.184334, 40.643132], [-74.184333, 40.643124], [-74.184339, 40.643118], [-74.18437, 40.6431], [-74.184359, 40.643094], [-74.184339, 40.643092], [-74.184258, 40.643116], [-74.184242, 40.643118], [-74.184223, 40.643119], [-74.184214, 40.643117], [-74.184207, 40.643106], [-74.184191, 40.643074], [-74.183955, 40.642494], [-74.183904, 40.642432], [-74.183728, 40.642307], [-74.183721, 40.642298], [-74.183719, 40.642289], [-74.183726, 40.642274], [-74.183651, 40.64224], [-74.183633, 40.642261], [-74.183622, 40.64228], [-74.183615, 40.642301], [-74.183613, 40.642323], [-74.183617, 40.642342], [-74.183627, 40.642366], [-74.183636, 40.642396], [-74.183656, 40.64244], [-74.183686, 40.642487], [-74.183737, 40.642542], [-74.183795, 40.642601], [-74.183807, 40.642614], [-74.183809, 40.642635], [-74.183791, 40.642718], [-74.183914, 40.64284], [-74.183945, 40.642882], [-74.183948, 40.642911], [-74.184026, 40.6431], [-74.18392, 40.643222], [-74.183916, 40.64324], [-74.183896, 40.643265], [-74.183846, 40.643266], [-74.183801, 40.643246], [-74.18376, 40.643217], [-74.183692, 40.643154], [-74.183562, 40.643036], [-74.183474, 40.642949], [-74.18331, 40.642913], [-74.183242, 40.642964], [-74.183417, 40.643223], [-74.18347, 40.643366], [-74.183463, 40.643473], [-74.183398, 40.64361], [-74.183484, 40.643705], [-74.183764, 40.644337], [-74.1838, 40.644432], [-74.183762, 40.644515], [-74.18366, 40.644616], [-74.183326, 40.644677], [-74.183209, 40.644724], [-74.18298, 40.644794], [-74.182798, 40.644796], [-74.182511, 40.644768], [-74.182221, 40.644747], [-74.181668, 40.644709], [-74.181381, 40.644613], [-74.181184, 40.644586], [-74.181087, 40.644627], [-74.181029, 40.644718], [-74.180995, 40.644771], [-74.180944, 40.644828], [-74.180872, 40.644851], [-74.180807, 40.644819], [-74.180802, 40.644801], [-74.180807, 40.644745], [-74.1808, 40.64461], [-74.180752, 40.644555], [-74.180676, 40.644527], [-74.180605, 40.644512], [-74.180527, 40.644485], [-74.180503, 40.644457], [-74.180499, 40.644427], [-74.180482, 40.644279], [-74.180041, 40.644288], [-74.180048, 40.644372], [-74.179907, 40.644379], [-74.179924, 40.644655], [-74.179937, 40.644655], [-74.179965, 40.645267], [-74.179896, 40.645269], [-74.179884, 40.64511], [-74.179844, 40.64511], [-74.179848, 40.645165], [-74.179775, 40.645167], [-74.17973, 40.644381], [-74.179331, 40.644401], [-74.179332, 40.644487], [-74.179314, 40.644516], [-74.179299, 40.64456], [-74.179298, 40.644583], [-74.179311, 40.644638], [-74.179316, 40.644672], [-74.179335, 40.644722], [-74.17931, 40.644759], [-74.179292, 40.644803], [-74.179281, 40.644859], [-74.179285, 40.644884], [-74.179293, 40.644909], [-74.179307, 40.644932], [-74.179325, 40.644953], [-74.179337, 40.644964], [-74.17934, 40.64497], [-74.179338, 40.644982], [-74.179251, 40.645042], [-74.179172, 40.645031], [-74.179144, 40.644988], [-74.179106, 40.644877], [-74.179075, 40.644647], [-74.179081, 40.644506], [-74.179056, 40.644403], [-74.179045, 40.643692], [-74.179036, 40.643395], [-74.179405, 40.643129], [-74.179385, 40.642799], [-74.179395, 40.64275], [-74.179402, 40.642742], [-74.179408, 40.642681], [-74.179428, 40.642611], [-74.179484, 40.642523], [-74.179529, 40.642377], [-74.179556, 40.642243], [-74.179582, 40.642187], [-74.179592, 40.642174], [-74.179604, 40.642121], [-74.179602, 40.642078], [-74.179612, 40.642044], [-74.17961, 40.642033], [-74.179602, 40.641931], [-74.179598, 40.641922], [-74.179587, 40.641918], [-74.179569, 40.641917], [-74.179558, 40.641924], [-74.179549, 40.641962], [-74.179534, 40.642148], [-74.179507, 40.642222], [-74.179486, 40.642264], [-74.179472, 40.642342], [-74.17934, 40.64269], [-74.179314, 40.642813], [-74.179294, 40.642912], [-74.179244, 40.642968], [-74.179187, 40.642988], [-74.179123, 40.642985], [-74.179051, 40.64296], [-74.179019, 40.642924], [-74.178791, 40.642499], [-74.178676, 40.642564], [-74.178641, 40.642572], [-74.178599, 40.642571], [-74.178514, 40.642548], [-74.178483, 40.642521], [-74.17837, 40.64228], [-74.178334, 40.642233], [-74.17832, 40.642208], [-74.178273, 40.64214], [-74.178257, 40.642129], [-74.178245, 40.642132], [-74.178236, 40.642147], [-74.178239, 40.642181], [-74.178348, 40.642478], [-74.178368, 40.642545], [-74.178361, 40.642565], [-74.178341, 40.642589], [-74.178317, 40.642603], [-74.178289, 40.642604], [-74.178202, 40.642581], [-74.17811, 40.642529], [-74.178008, 40.642543], [-74.17796, 40.642578], [-74.17794, 40.642619], [-74.177931, 40.642625], [-74.177891, 40.64263], [-74.177812, 40.6426], [-74.177743, 40.64289], [-74.177686, 40.642949], [-74.177531, 40.643014], [-74.177459, 40.643035], [-74.177441, 40.643033], [-74.177386, 40.643012], [-74.177328, 40.643064], [-74.177259, 40.643099], [-74.177211, 40.643123], [-74.177174, 40.643114], [-74.177058, 40.643059], [-74.176981, 40.643001], [-74.176824, 40.642859], [-74.176767, 40.64265], [-74.176748, 40.642512], [-74.176736, 40.642464], [-74.176726, 40.642439], [-74.176705, 40.642417], [-74.176696, 40.642419], [-74.176701, 40.642438], [-74.176699, 40.642455], [-74.176694, 40.642467], [-74.176683, 40.642473], [-74.176483, 40.642392], [-74.176391, 40.642344], [-74.176369, 40.64233], [-74.176358, 40.642327], [-74.17635, 40.642337], [-74.176359, 40.642349], [-74.176384, 40.642362], [-74.176652, 40.642512], [-74.176676, 40.64253], [-74.176687, 40.642552], [-74.176717, 40.64279], [-74.176724, 40.642971], [-74.176717, 40.64311], [-74.176706, 40.643173], [-74.176708, 40.643214], [-74.176708, 40.643281], [-74.176684, 40.643362], [-74.176668, 40.643387], [-74.176616, 40.643419], [-74.176585, 40.643427], [-74.176539, 40.643419], [-74.176497, 40.643405], [-74.176337, 40.64346], [-74.176104, 40.643472], [-74.175982, 40.643464], [-74.17585, 40.64344], [-74.17578, 40.643416], [-74.175731, 40.643391], [-74.17569, 40.64336], [-74.175665, 40.64331], [-74.175627, 40.643307], [-74.175603, 40.643311], [-74.175528, 40.643383], [-74.175486, 40.643471], [-74.17552, 40.643696], [-74.17554, 40.643707], [-74.175572, 40.643734], [-74.175585, 40.643749], [-74.175586, 40.643779], [-74.175502, 40.643867], [-74.175493, 40.644092], [-74.175472, 40.644123], [-74.175477, 40.644157], [-74.175494, 40.64417], [-74.175547, 40.644177], [-74.175624, 40.644349], [-74.175708, 40.644572], [-74.175709, 40.644646], [-74.17569, 40.644671], [-74.175685, 40.64471], [-74.175669, 40.644718], [-74.175625, 40.644678], [-74.17559, 40.644636], [-74.175559, 40.644616], [-74.175527, 40.644615], [-74.175499, 40.644623], [-74.175467, 40.644647], [-74.175351, 40.644856], [-74.175347, 40.644928], [-74.175327, 40.64503], [-74.175297, 40.645075], [-74.175259, 40.645085], [-74.175156, 40.6451], [-74.174953, 40.64515], [-74.174896, 40.645146], [-74.174788, 40.645115], [-74.17472, 40.645063], [-74.17468, 40.645045], [-74.174586, 40.645017], [-74.174523, 40.645037], [-74.174498, 40.645065], [-74.174448, 40.645123], [-74.174366, 40.645136], [-74.174154, 40.64508], [-74.174055, 40.645022], [-74.173599, 40.644703], [-74.172941, 40.644205], [-74.172953, 40.644086], [-74.173002, 40.643585], [-74.172448, 40.643422], [-74.172386, 40.643304], [-74.172362, 40.643256], [-74.172721, 40.642948], [-74.17244, 40.642812], [-74.171963, 40.642858], [-74.171794, 40.643058], [-74.17175, 40.643092], [-74.171658, 40.643123], [-74.171572, 40.643138], [-74.171508, 40.643134], [-74.171446, 40.643093], [-74.17143, 40.643071], [-74.171424, 40.643041], [-74.171433, 40.643019], [-74.171449, 40.643006], [-74.171483, 40.642995], [-74.171491, 40.642984], [-74.171473, 40.642982], [-74.171454, 40.642985], [-74.171432, 40.642974], [-74.171406, 40.642946], [-74.171348, 40.642874], [-74.171336, 40.642856], [-74.171348, 40.642838], [-74.171441, 40.642776], [-74.171646, 40.642651], [-74.171769, 40.642583], [-74.171858, 40.642536], [-74.17186, 40.642523], [-74.17179, 40.642527], [-74.171761, 40.642525], [-74.17175, 40.642517], [-74.171754, 40.642506], [-74.171796, 40.642471], [-74.171823, 40.642439], [-74.171846, 40.642401], [-74.171849, 40.64238], [-74.17184, 40.642355], [-74.171823, 40.642331], [-74.171803, 40.642312], [-74.171783, 40.642307], [-74.171756, 40.642303], [-74.171734, 40.642296], [-74.171723, 40.642283], [-74.171728, 40.642256], [-74.171758, 40.642223], [-74.17177, 40.642197], [-74.171765, 40.642183], [-74.171746, 40.642167], [-74.171719, 40.642156], [-74.171696, 40.642144], [-74.171682, 40.642097], [-74.171671, 40.642044], [-74.17168, 40.642008], [-74.171694, 40.641985], [-74.171712, 40.641961], [-74.171722, 40.64194], [-74.171698, 40.641908], [-74.171604, 40.641865], [-74.171591, 40.641868], [-74.17158, 40.641875], [-74.171562, 40.641877], [-74.171551, 40.641865], [-74.171527, 40.641814], [-74.171509, 40.641793], [-74.171495, 40.64177], [-74.171479, 40.641703], [-74.171484, 40.641688], [-74.171488, 40.641667], [-74.171468, 40.641548], [-74.171465, 40.641501], [-74.171454, 40.64147], [-74.171452, 40.641455], [-74.171463, 40.641441], [-74.171476, 40.641432], [-74.171483, 40.641427], [-74.171491, 40.641414], [-74.171496, 40.641363], [-74.171495, 40.641347], [-74.171487, 40.641319], [-74.171485, 40.641296], [-74.171485, 40.641273], [-74.171493, 40.641249], [-74.171507, 40.641222], [-74.171516, 40.641212], [-74.171541, 40.641207], [-74.171577, 40.641191], [-74.17159, 40.641175], [-74.171593, 40.641163], [-74.171602, 40.641146], [-74.171606, 40.641126], [-74.1716, 40.641108], [-74.171581, 40.641089], [-74.171573, 40.641077], [-74.171574, 40.641066], [-74.17158, 40.641046], [-74.171587, 40.64103], [-74.171601, 40.641015], [-74.171706, 40.64101], [-74.171913, 40.641006], [-74.171971, 40.641], [-74.172023, 40.640989], [-74.17209, 40.640948], [-74.172258, 40.640861], [-74.172332, 40.640817], [-74.172392, 40.640788], [-74.172416, 40.640772], [-74.172441, 40.640741], [-74.172461, 40.640707], [-74.172479, 40.640692], [-74.17251, 40.640677], [-74.172545, 40.640667], [-74.172618, 40.640655], [-74.172752, 40.640639], [-74.172796, 40.64063], [-74.172904, 40.640594], [-74.172939, 40.64058], [-74.172967, 40.640564], [-74.172988, 40.640544], [-74.172999, 40.640523], [-74.173004, 40.640508], [-74.172999, 40.640498], [-74.172988, 40.640489], [-74.17298, 40.640486], [-74.172968, 40.640487], [-74.172959, 40.640496], [-74.172941, 40.640513], [-74.172919, 40.640531], [-74.172889, 40.640554], [-74.172853, 40.64058], [-74.172799, 40.640606], [-74.172756, 40.640617], [-74.172714, 40.640619], [-74.172628, 40.64063], [-74.172557, 40.640644], [-74.172501, 40.640657], [-74.172461, 40.640674], [-74.172437, 40.64069], [-74.172373, 40.640749], [-74.172308, 40.640801], [-74.172215, 40.640856], [-74.172062, 40.640942], [-74.172024, 40.640955], [-74.171992, 40.640964], [-74.171937, 40.640971], [-74.171776, 40.640985], [-74.171693, 40.640998], [-74.171623, 40.640995], [-74.171601, 40.640996], [-74.171585, 40.641002], [-74.17157, 40.641012], [-74.171559, 40.641027], [-74.171554, 40.641047], [-74.171547, 40.64107], [-74.171549, 40.64109], [-74.171566, 40.64113], [-74.171565, 40.641148], [-74.171559, 40.64116], [-74.171547, 40.64117], [-74.171529, 40.641173], [-74.171512, 40.641174], [-74.171493, 40.64118], [-74.171456, 40.641213], [-74.171442, 40.641254], [-74.17144, 40.641359], [-74.171431, 40.641374], [-74.171409, 40.641397], [-74.171397, 40.641414], [-74.171387, 40.641423], [-74.171386, 40.64148], [-74.171402, 40.641499], [-74.171374, 40.642085], [-74.171327, 40.642085], [-74.171154, 40.642399], [-74.171177, 40.642404], [-74.17105, 40.642594], [-74.170992, 40.642572], [-74.171275, 40.642112], [-74.171211, 40.642068], [-74.171193, 40.641741]]]]
    },
    "properties": {
      "neighbourhood": "Port Ivory",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.858264, 40.822015], [-73.879769, 40.819181], [-73.88055, 40.818468], [-73.883187, 40.820281], [-73.88365, 40.82152], [-73.883941, 40.821989], [-73.884328, 40.822614], [-73.88457, 40.82316], [-73.884531, 40.825647], [-73.883817, 40.82833], [-73.882976, 40.828304], [-73.88198, 40.828356], [-73.877299, 40.828742], [-73.86366, 40.832652], [-73.862702, 40.832979], [-73.85879, 40.824209], [-73.858264, 40.822015]]]]
    },
    "properties": {
      "neighbourhood": "Soundview",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.901603, 40.76777], [-73.902696, 40.766889], [-73.903569, 40.76578], [-73.902184, 40.76267], [-73.90108, 40.758122], [-73.900866, 40.757674], [-73.90737, 40.756988], [-73.907828, 40.756999], [-73.90907, 40.757565], [-73.910618, 40.755476], [-73.911294, 40.755814], [-73.911568, 40.75548], [-73.911764, 40.755573], [-73.913519, 40.753496], [-73.914467, 40.753661], [-73.920865, 40.756678], [-73.923372, 40.753594], [-73.929751, 40.756581], [-73.92538, 40.76197], [-73.928425, 40.763416], [-73.93779, 40.7687], [-73.938064, 40.768771], [-73.937576, 40.768924], [-73.936815, 40.768904], [-73.936815, 40.768904], [-73.936685, 40.769133], [-73.936707, 40.769253], [-73.936404, 40.769475], [-73.936169, 40.769516], [-73.93574, 40.769367], [-73.935739, 40.769368], [-73.935733, 40.769367], [-73.93524, 40.769679], [-73.934895, 40.770042], [-73.934695, 40.770425], [-73.935147, 40.770542], [-73.935008, 40.771162], [-73.93494, 40.771164], [-73.934905, 40.771271], [-73.934527, 40.771177], [-73.934485, 40.771307], [-73.934858, 40.771383], [-73.93487, 40.771354], [-73.934954, 40.771373], [-73.934929, 40.77144], [-73.934837, 40.77142], [-73.934843, 40.771396], [-73.93448, 40.771323], [-73.93448, 40.771324], [-73.934435, 40.771462], [-73.934826, 40.771577], [-73.9348, 40.771734], [-73.937459, 40.772531], [-73.937806, 40.773563], [-73.937858, 40.774088], [-73.937648, 40.775086], [-73.93638, 40.776921], [-73.936089, 40.777184], [-73.935855, 40.777212], [-73.935082, 40.777944], [-73.934744, 40.778076], [-73.933904, 40.778117], [-73.932775, 40.777922], [-73.932722, 40.778035], [-73.931788, 40.777871], [-73.93105, 40.777442], [-73.931074, 40.777261], [-73.930629, 40.776591], [-73.929881, 40.776222], [-73.929876, 40.776223], [-73.929873, 40.776222], [-73.928598, 40.776593], [-73.928277, 40.776899], [-73.923976, 40.774622], [-73.923036, 40.775387], [-73.922323, 40.774415], [-73.917262, 40.770785], [-73.916563, 40.770405], [-73.905605, 40.768717], [-73.904667, 40.768545], [-73.903906, 40.76814], [-73.901603, 40.76777]]]]
    },
    "properties": {
      "neighbourhood": "Astoria",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.99381, 40.60195], [-73.99962, 40.596469], [-74.000471, 40.595939], [-74.000167, 40.595549], [-74.001844, 40.593978], [-74.002004, 40.594132], [-74.003634, 40.596081], [-74.003974, 40.596343], [-74.004179, 40.5965], [-74.005526, 40.597539], [-74.009217, 40.599844], [-74.010901, 40.600716], [-74.01237, 40.601349], [-74.014784, 40.602082], [-74.015626, 40.602235], [-74.015626, 40.602235], [-74.016183, 40.602337], [-74.016526, 40.602399], [-74.018323, 40.602418], [-74.019136, 40.602613], [-74.019435, 40.602844], [-74.018641, 40.603655], [-74.019152, 40.60382], [-74.018531, 40.604458], [-74.017467, 40.604965], [-74.015499, 40.606842], [-74.01702, 40.607655], [-74.011726, 40.612744], [-73.99381, 40.60195]]]]
    },
    "properties": {
      "neighbourhood": "Bath Beach",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.745663, 40.751578], [-73.744103, 40.748186], [-73.743763, 40.747559], [-73.74648, 40.746846], [-73.744765, 40.743332], [-73.745735, 40.74295], [-73.748443, 40.743341], [-73.753493, 40.742388], [-73.751452, 40.740234], [-73.749903, 40.739766], [-73.744016, 40.740775], [-73.743714, 40.739403], [-73.743333, 40.738883], [-73.756287, 40.736575], [-73.762754, 40.735297], [-73.762473, 40.736557], [-73.762678, 40.737261], [-73.763606, 40.739227], [-73.765182, 40.742453], [-73.765628, 40.743185], [-73.766685, 40.74388], [-73.767024, 40.744264], [-73.767626, 40.745526], [-73.768115, 40.745395], [-73.768507, 40.74513], [-73.769211, 40.743494], [-73.769788, 40.742954], [-73.77082, 40.742559], [-73.771972, 40.742377], [-73.773251, 40.742454], [-73.774622, 40.743013], [-73.775134, 40.743069], [-73.775601, 40.743026], [-73.780532, 40.753329], [-73.780532, 40.753329], [-73.781683, 40.754874], [-73.783282, 40.757444], [-73.783796, 40.758644], [-73.785167, 40.760928], [-73.785338, 40.762241], [-73.785566, 40.762927], [-73.788136, 40.764526], [-73.790078, 40.766524], [-73.792248, 40.769722], [-73.792248, 40.769722], [-73.792248, 40.771493], [-73.792715, 40.773788], [-73.791635, 40.774239], [-73.775839, 40.778606], [-73.775599, 40.779316], [-73.770652, 40.782078], [-73.770498, 40.78193], [-73.769304, 40.780775], [-73.769024, 40.780451], [-73.768581, 40.779877], [-73.768338, 40.779635], [-73.768273, 40.77962], [-73.768159, 40.779636], [-73.768135, 40.77959], [-73.768232, 40.779502], [-73.768201, 40.779444], [-73.767162, 40.779783], [-73.767207, 40.779867], [-73.766998, 40.779931], [-73.767073, 40.78007], [-73.767024, 40.780086], [-73.766928, 40.779918], [-73.766958, 40.7799], [-73.76689, 40.779779], [-73.766776, 40.779812], [-73.766759, 40.779784], [-73.766869, 40.779749], [-73.766863, 40.77974], [-73.767088, 40.779667], [-73.767135, 40.779742], [-73.768162, 40.779397], [-73.768159, 40.77939], [-73.768162, 40.77939], [-73.768153, 40.779376], [-73.767822, 40.77881], [-73.767605, 40.778299], [-73.767619, 40.777995], [-73.767091, 40.776845], [-73.766328, 40.775843], [-73.765947, 40.774972], [-73.765104, 40.773799], [-73.764176, 40.77283], [-73.762239, 40.771221], [-73.762631, 40.771101], [-73.760298, 40.768699], [-73.758258, 40.763705], [-73.756992, 40.762275], [-73.758398, 40.762008], [-73.757922, 40.760425], [-73.758054, 40.760127], [-73.758865, 40.759942], [-73.759625, 40.75922], [-73.760933, 40.759032], [-73.761663, 40.75815], [-73.761311, 40.756962], [-73.761421, 40.755745], [-73.760666, 40.754875], [-73.76015, 40.755049], [-73.760727, 40.755902], [-73.760672, 40.756994], [-73.759777, 40.757848], [-73.757978, 40.758665], [-73.756451, 40.758892], [-73.753478, 40.758813], [-73.752422, 40.760088], [-73.750463, 40.759392], [-73.747506, 40.756138], [-73.74602, 40.752664], [-73.745663, 40.751578]]]]
    },
    "properties": {
      "neighbourhood": "Bayside",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.013754, 40.71369], [-74.014262, 40.710928], [-74.016542, 40.704733], [-74.016174, 40.702572], [-74.01563, 40.701862], [-74.015127, 40.70139], [-74.014008, 40.701043], [-74.013959, 40.700966], [-74.014105, 40.700511], [-74.014091, 40.700508], [-74.014149, 40.700321], [-74.014221, 40.700111], [-74.01431, 40.700121], [-74.01431, 40.700134], [-74.014178, 40.700541], [-74.014165, 40.700539], [-74.014152, 40.700578], [-74.014289, 40.700644], [-74.014297, 40.700629], [-74.014315, 40.700611], [-74.01456, 40.70031], [-74.014633, 40.700197], [-74.014671, 40.70021], [-74.014667, 40.700239], [-74.014608, 40.700324], [-74.014324, 40.700661], [-74.014643, 40.700817], [-74.015068, 40.700318], [-74.015098, 40.700334], [-74.014674, 40.700835], [-74.014811, 40.700904], [-74.014828, 40.700895], [-74.015021, 40.700993], [-74.015142, 40.700843], [-74.015678, 40.701256], [-74.016139, 40.701646], [-74.016533, 40.702037], [-74.016819, 40.702339], [-74.017145, 40.702705], [-74.017252, 40.702836], [-74.017398, 40.703019], [-74.01744, 40.703078], [-74.01754, 40.703236], [-74.017575, 40.703308], [-74.017617, 40.703423], [-74.017626, 40.703423], [-74.017648, 40.703495], [-74.017671, 40.703606], [-74.017683, 40.703711], [-74.017673, 40.703712], [-74.017677, 40.703771], [-74.017674, 40.703834], [-74.017666, 40.703899], [-74.017658, 40.703933], [-74.017643, 40.703989], [-74.017654, 40.703998], [-74.017655, 40.70401], [-74.017644, 40.704022], [-74.017634, 40.704025], [-74.017627, 40.704024], [-74.01757, 40.704184], [-74.017795, 40.704235], [-74.017856, 40.704079], [-74.017751, 40.704055], [-74.017791, 40.703951], [-74.017818, 40.703938], [-74.017838, 40.703963], [-74.017808, 40.704032], [-74.017912, 40.704054], [-74.017943, 40.703973], [-74.017955, 40.703976], [-74.017844, 40.704242], [-74.018448, 40.704162], [-74.018668, 40.704435], [-74.018656, 40.704441], [-74.017516, 40.704581], [-74.017481, 40.704667], [-74.018043, 40.704628], [-74.018054, 40.70463], [-74.018065, 40.704636], [-74.018113, 40.704554], [-74.018863, 40.70472], [-74.018887, 40.704729], [-74.018926, 40.704774], [-74.019343, 40.706094], [-74.019123, 40.706976], [-74.019103, 40.707], [-74.019066, 40.707014], [-74.019033, 40.707013], [-74.018954, 40.706997], [-74.018946, 40.707018], [-74.018937, 40.707034], [-74.018909, 40.707064], [-74.018885, 40.707086], [-74.018859, 40.7071], [-74.018829, 40.707115], [-74.018796, 40.707128], [-74.018761, 40.707138], [-74.018726, 40.707143], [-74.01869, 40.707142], [-74.018655, 40.707142], [-74.018631, 40.70714], [-74.018581, 40.707124], [-74.018547, 40.707108], [-74.018571, 40.70708], [-74.018607, 40.707095], [-74.018644, 40.707105], [-74.018648, 40.707082], [-74.018687, 40.707084], [-74.018721, 40.707082], [-74.018751, 40.70708], [-74.018762, 40.707076], [-74.01875, 40.70705], [-74.018774, 40.707044], [-74.018794, 40.707032], [-74.01882, 40.707016], [-74.018848, 40.706983], [-74.018849, 40.70697], [-74.018811, 40.706966], [-74.018799, 40.706982], [-74.018776, 40.706997], [-74.018742, 40.707008], [-74.018679, 40.707019], [-74.018648, 40.707018], [-74.018628, 40.707011], [-74.018605, 40.706989], [-74.018572, 40.706938], [-74.018565, 40.706906], [-74.018549, 40.706908], [-74.018535, 40.706918], [-74.01853, 40.706951], [-74.018217, 40.707742], [-74.018217, 40.707751], [-74.01819, 40.707822], [-74.018656, 40.707924], [-74.018647, 40.707947], [-74.018801, 40.707981], [-74.018832, 40.707999], [-74.018853, 40.708022], [-74.018855, 40.708048], [-74.018608, 40.709135], [-74.017873, 40.712315], [-74.01777, 40.712835], [-74.017753, 40.712848], [-74.017732, 40.712849], [-74.01772, 40.712845], [-74.017721, 40.712784], [-74.0178, 40.712345], [-74.016625, 40.712157], [-74.016545, 40.712456], [-74.016592, 40.712548], [-74.016619, 40.71265], [-74.016618, 40.712756], [-74.016591, 40.712862], [-74.016555, 40.712929], [-74.016541, 40.712956], [-74.016477, 40.713029], [-74.016392, 40.7131], [-74.01632, 40.713408], [-74.016541, 40.713441], [-74.016911, 40.713496], [-74.017544, 40.713611], [-74.017568, 40.713524], [-74.017579, 40.713443], [-74.017648, 40.713206], [-74.01767, 40.713069], [-74.017673, 40.713066], [-74.017676, 40.713063], [-74.017679, 40.713061], [-74.017683, 40.713059], [-74.017688, 40.713057], [-74.017692, 40.713056], [-74.017697, 40.713056], [-74.017702, 40.713056], [-74.017706, 40.713057], [-74.01771, 40.713058], [-74.017714, 40.71306], [-74.017718, 40.713062], [-74.017721, 40.713064], [-74.017723, 40.713067], [-74.017725, 40.71307], [-74.017657, 40.71344], [-74.01671, 40.718624], [-74.016694, 40.718649], [-74.016659, 40.718666], [-74.01663, 40.718665], [-74.015947, 40.718576], [-74.015944, 40.718589], [-74.015669, 40.718554], [-74.015671, 40.718538], [-74.015001, 40.718449], [-74.014996, 40.718473], [-74.01499, 40.718507], [-74.014983, 40.718524], [-74.01497, 40.718536], [-74.014945, 40.718544], [-74.014703, 40.718516], [-74.013213, 40.718316], [-74.013072, 40.718939], [-74.013036, 40.719086], [-74.01244, 40.719058], [-74.013754, 40.71369]]]]
    },
    "properties": {
      "neighbourhood": "Battery Park City",
      "neighbourhood_group": "Manhattan"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.770652, 40.782078], [-73.775599, 40.779316], [-73.775839, 40.778606], [-73.791635, 40.774239], [-73.792715, 40.773788], [-73.792761, 40.774006], [-73.7944, 40.78185], [-73.795086, 40.785861], [-73.79548, 40.785831], [-73.794786, 40.786719], [-73.794975, 40.788082], [-73.794306, 40.789062], [-73.793801, 40.789172], [-73.793751, 40.789062], [-73.793751, 40.789063], [-73.793751, 40.789062], [-73.79367, 40.789174], [-73.79338, 40.789578], [-73.793239, 40.78953], [-73.79362, 40.788997], [-73.792807, 40.788783], [-73.792353, 40.788907], [-73.791628, 40.789486], [-73.791083, 40.789823], [-73.790702, 40.790058], [-73.790282, 40.790317], [-73.789887, 40.790372], [-73.789309, 40.79038], [-73.788354, 40.790328], [-73.785681, 40.790341], [-73.783838, 40.790641], [-73.782531, 40.791277], [-73.782531, 40.791277], [-73.78253, 40.791277], [-73.782523, 40.791352], [-73.784407, 40.791676], [-73.784398, 40.791719], [-73.784342, 40.791749], [-73.782273, 40.791374], [-73.781747, 40.791133], [-73.781078, 40.791677], [-73.781078, 40.791677], [-73.781078, 40.791678], [-73.780775, 40.792991], [-73.780779, 40.79319], [-73.78085, 40.793252], [-73.780839, 40.793278], [-73.781589, 40.793464], [-73.781588, 40.793448], [-73.781582, 40.793444], [-73.781638, 40.793311], [-73.781684, 40.793322], [-73.781627, 40.793455], [-73.781609, 40.793452], [-73.781616, 40.793471], [-73.78166, 40.793482], [-73.781642, 40.793525], [-73.780822, 40.793319], [-73.780808, 40.793351], [-73.780724, 40.793334], [-73.7807, 40.793649], [-73.780791, 40.794036], [-73.781005, 40.794385], [-73.781529, 40.794725], [-73.78181, 40.794802], [-73.781903, 40.794902], [-73.782582, 40.794883], [-73.782844, 40.794902], [-73.783109, 40.794915], [-73.78317, 40.794876], [-73.783248, 40.794789], [-73.783289, 40.79476], [-73.783317, 40.794759], [-73.78332, 40.794788], [-73.783287, 40.794828], [-73.783273, 40.794833], [-73.783265, 40.79488], [-73.783272, 40.794899], [-73.783258, 40.794924], [-73.783218, 40.794964], [-73.783174, 40.794985], [-73.783054, 40.794991], [-73.782003, 40.794975], [-73.782003, 40.794976], [-73.782003, 40.794976], [-73.781825, 40.795077], [-73.781726, 40.795428], [-73.781658, 40.795559], [-73.781542, 40.79566], [-73.779898, 40.796238], [-73.779803, 40.796206], [-73.779803, 40.796206], [-73.779803, 40.796206], [-73.77945, 40.796576], [-73.779469, 40.796608], [-73.779433, 40.796662], [-73.779362, 40.796685], [-73.779284, 40.796675], [-73.779273, 40.796638], [-73.778715, 40.796597], [-73.778432, 40.7967], [-73.778067, 40.796739], [-73.777624, 40.79665], [-73.776871, 40.796445], [-73.776126, 40.796061], [-73.774718, 40.79486], [-73.774314, 40.794425], [-73.774014, 40.79403], [-73.773632, 40.79275], [-73.773205, 40.792243], [-73.772861, 40.791977], [-73.772326, 40.791481], [-73.772252, 40.791234], [-73.772271, 40.790944], [-73.772242, 40.790747], [-73.772242, 40.790571], [-73.772253, 40.790484], [-73.772133, 40.790179], [-73.772026, 40.790064], [-73.771944, 40.790001], [-73.771851, 40.789962], [-73.771779, 40.789903], [-73.77173, 40.789782], [-73.771746, 40.789695], [-73.770631, 40.788463], [-73.770823, 40.787983], [-73.770999, 40.787883], [-73.771397, 40.787657], [-73.771737, 40.787464], [-73.773547, 40.786906], [-73.773967, 40.786782], [-73.774268, 40.786757], [-73.774346, 40.786772], [-73.774392, 40.786815], [-73.774389, 40.786858], [-73.7742, 40.786962], [-73.7742, 40.787026], [-73.77423, 40.787066], [-73.774324, 40.787082], [-73.774446, 40.787179], [-73.775019, 40.787395], [-73.776289, 40.788514], [-73.776337, 40.788487], [-73.775048, 40.787193], [-73.774862, 40.787079], [-73.774807, 40.786971], [-73.774741, 40.786927], [-73.774631, 40.786919], [-73.774586, 40.786878], [-73.774512, 40.786729], [-73.774455, 40.78668], [-73.774265, 40.786651], [-73.774096, 40.786297], [-73.774076, 40.785917], [-73.771607, 40.782996], [-73.770652, 40.782078]]]]
    },
    "properties": {
      "neighbourhood": "Bay Terrace",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.132614, 40.563453], [-74.13311, 40.562868], [-74.133407, 40.56213], [-74.134808, 40.560799], [-74.129607, 40.557485], [-74.128203, 40.55659], [-74.128117, 40.556535], [-74.136089, 40.550424], [-74.13738, 40.551473], [-74.138803, 40.550597], [-74.139479, 40.551069], [-74.1415, 40.549589], [-74.142638, 40.55074], [-74.143518, 40.550155], [-74.144021, 40.551024], [-74.14476, 40.550512], [-74.14483, 40.551045], [-74.145599, 40.552081], [-74.145558, 40.553195], [-74.146551, 40.556235], [-74.14422, 40.558336], [-74.14374, 40.557984], [-74.143047, 40.558461], [-74.143859, 40.559161], [-74.142588, 40.559894], [-74.14313, 40.560508], [-74.148306, 40.564919], [-74.146874, 40.566426], [-74.14252, 40.563893], [-74.13963, 40.566206], [-74.138929, 40.567264], [-74.134617, 40.565247], [-74.134768, 40.564514], [-74.132614, 40.563453]]]]
    },
    "properties": {
      "neighbourhood": "Bay Terrace, Staten Island",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.831108, 40.865547], [-73.829297, 40.862243], [-73.829119, 40.861587], [-73.829824, 40.861974], [-73.830927, 40.86224], [-73.831602, 40.862628], [-73.841224, 40.867858], [-73.845823, 40.870239], [-73.848597, 40.87167], [-73.853598, 40.873288], [-73.853637, 40.8733], [-73.850689, 40.875487], [-73.845461, 40.87735], [-73.843241, 40.879109], [-73.835823, 40.875989], [-73.834854, 40.875387], [-73.834204, 40.87201], [-73.83305, 40.869235], [-73.831108, 40.865547]]]]
    },
    "properties": {
      "neighbourhood": "Baychester",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.765065, 40.613568], [-73.765016, 40.613475], [-73.765154, 40.613086], [-73.765117, 40.612483], [-73.764978, 40.612332], [-73.76506, 40.612035], [-73.762299, 40.611359], [-73.761724, 40.611847], [-73.760236, 40.610821], [-73.761782, 40.609152], [-73.761551, 40.609031], [-73.759984, 40.610879], [-73.759491, 40.610816], [-73.759721, 40.610152], [-73.75928, 40.610369], [-73.757191, 40.610205], [-73.756551, 40.610155], [-73.755855, 40.610318], [-73.755608, 40.610078], [-73.755874, 40.610385], [-73.755564, 40.610118], [-73.755179, 40.610128], [-73.754995, 40.610132], [-73.754732, 40.610405], [-73.753458, 40.61052], [-73.753458, 40.61052], [-73.753458, 40.61052], [-73.75471, 40.606381], [-73.756009, 40.603873], [-73.758003, 40.602858], [-73.758239, 40.602547], [-73.759533, 40.601734], [-73.761658, 40.599973], [-73.761588, 40.599901], [-73.764968, 40.59738], [-73.766722, 40.596325], [-73.767139, 40.596285], [-73.767718, 40.596261], [-73.767987, 40.597596], [-73.768123, 40.597824], [-73.768099, 40.597846], [-73.768067, 40.597911], [-73.768028, 40.598004], [-73.768007, 40.598047], [-73.767972, 40.598075], [-73.76795, 40.5981], [-73.76794, 40.598115], [-73.767935, 40.59813], [-73.767936, 40.59814], [-73.767945, 40.598154], [-73.767958, 40.598163], [-73.768106, 40.598221], [-73.768265, 40.598332], [-73.768367, 40.598354], [-73.768566, 40.59836], [-73.768905, 40.598397], [-73.768892, 40.598443], [-73.768931, 40.598468], [-73.76898, 40.598453], [-73.769016, 40.598495], [-73.76905, 40.59851], [-73.769189, 40.598509], [-73.769261, 40.598505], [-73.769315, 40.598531], [-73.769701, 40.59864], [-73.770016, 40.598784], [-73.770336, 40.598984], [-73.770468, 40.598968], [-73.770618, 40.598854], [-73.770725, 40.598813], [-73.770861, 40.598829], [-73.770931, 40.598858], [-73.77102, 40.598946], [-73.77105, 40.599022], [-73.771161, 40.599422], [-73.771111, 40.600546], [-73.77096, 40.600947], [-73.770737, 40.601536], [-73.770839, 40.601811], [-73.770744, 40.601945], [-73.770618, 40.601869], [-73.770186, 40.602749], [-73.7704, 40.602944], [-73.77025, 40.603036], [-73.770162, 40.60309], [-73.770458, 40.603891], [-73.770468, 40.603919], [-73.770471, 40.603945], [-73.770565, 40.60484], [-73.770009, 40.605337], [-73.770063, 40.605656], [-73.769836, 40.606278], [-73.769906, 40.606644], [-73.770015, 40.607216], [-73.769798, 40.607503], [-73.769772, 40.607538], [-73.769775, 40.607933], [-73.769219, 40.60845], [-73.76894, 40.609131], [-73.769001, 40.609392], [-73.76918, 40.609701], [-73.769818, 40.610088], [-73.770818, 40.610298], [-73.771251, 40.61039], [-73.77131, 40.610433], [-73.771487, 40.610562], [-73.771715, 40.610728], [-73.771847, 40.610824], [-73.771924, 40.610959], [-73.772158, 40.611368], [-73.772235, 40.611502], [-73.772517, 40.611402], [-73.772665, 40.61135], [-73.773404, 40.61109], [-73.772911, 40.61026], [-73.772885, 40.610201], [-73.772882, 40.610185], [-73.772879, 40.610168], [-73.772888, 40.610159], [-73.772908, 40.610151], [-73.772934, 40.610148], [-73.77295, 40.610149], [-73.772963, 40.610153], [-73.77297, 40.610159], [-73.773768, 40.611256], [-73.773938, 40.61212], [-73.774172, 40.61183], [-73.774042, 40.612247], [-73.773849, 40.612869], [-73.773837, 40.612908], [-73.773663, 40.613247], [-73.773536, 40.613528], [-73.773474, 40.613626], [-73.773386, 40.613675], [-73.773242, 40.613682], [-73.772968, 40.613559], [-73.77184, 40.613929], [-73.771742, 40.613961], [-73.77008, 40.61397], [-73.769331, 40.613975], [-73.769013, 40.614057], [-73.768355, 40.614227], [-73.766691, 40.614255], [-73.765164, 40.613754], [-73.765065, 40.613568]]]]
    },
    "properties": {
      "neighbourhood": "Bayswater",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.941149, 40.700281], [-73.905479, 40.680039], [-73.905479, 40.680039], [-73.90786, 40.678134], [-73.908088, 40.67619], [-73.952432, 40.678611], [-73.958292, 40.679831], [-73.958237, 40.680008], [-73.958396, 40.680798], [-73.961899, 40.698188], [-73.95702, 40.698974], [-73.941931, 40.700725], [-73.941149, 40.700281]]]]
    },
    "properties": {
      "neighbourhood": "Bedford-Stuyvesant",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.847319, 40.581957], [-73.842984, 40.57448], [-73.842862, 40.5742], [-73.843784, 40.573887], [-73.845997, 40.573061], [-73.852202, 40.570745], [-73.85275, 40.570611], [-73.854717, 40.569936], [-73.856007, 40.569549], [-73.860614, 40.577252], [-73.857704, 40.578793], [-73.853055, 40.581255], [-73.850862, 40.58199], [-73.850444, 40.58213], [-73.848611, 40.582188], [-73.847319, 40.581957]]]]
    },
    "properties": {
      "neighbourhood": "Belle Harbor",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.717616, 40.744033], [-73.714822, 40.73797], [-73.712105, 40.733507], [-73.711219, 40.731789], [-73.710831, 40.730957], [-73.710637, 40.730154], [-73.7105, 40.727227], [-73.714076, 40.72676], [-73.71588, 40.726542], [-73.718305, 40.726036], [-73.724634, 40.724336], [-73.729529, 40.722549], [-73.72987, 40.723276], [-73.731492, 40.727419], [-73.745507, 40.730656], [-73.746264, 40.731201], [-73.746641, 40.731763], [-73.746807, 40.732484], [-73.74681, 40.732505], [-73.742962, 40.735547], [-73.740155, 40.738531], [-73.738477, 40.738117], [-73.733794, 40.738988], [-73.733208, 40.741796], [-73.733746, 40.742839], [-73.731698, 40.744351], [-73.730059, 40.74602], [-73.729264, 40.747081], [-73.728824, 40.747929], [-73.727962, 40.750026], [-73.726526, 40.751827], [-73.72589, 40.752291], [-73.725656, 40.752045], [-73.722917, 40.754098], [-73.722619, 40.753502], [-73.72132, 40.752811], [-73.72042, 40.750374], [-73.717616, 40.744033], [-73.717616, 40.744033]]]]
    },
    "properties": {
      "neighbourhood": "Bellerose",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.972998, 40.608833], [-73.972989, 40.608828], [-73.972993, 40.608818], [-73.972994, 40.608814], [-73.988423, 40.607119], [-73.99381, 40.60195], [-74.011726, 40.612744], [-73.99932, 40.624671], [-73.99932, 40.624672], [-73.972998, 40.608833]]]]
    },
    "properties": {
      "neighbourhood": "Bensonhurst",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.91732, 40.631007], [-73.903961, 40.624834], [-73.903855, 40.62494], [-73.90388, 40.624949], [-73.903867, 40.624969], [-73.905462, 40.625775], [-73.905446, 40.625793], [-73.905413, 40.625776], [-73.90533, 40.625865], [-73.905319, 40.625858], [-73.905397, 40.625767], [-73.903209, 40.624665], [-73.903141, 40.624745], [-73.903124, 40.624738], [-73.903208, 40.624641], [-73.903152, 40.624613], [-73.90307, 40.624705], [-73.903054, 40.624699], [-73.903124, 40.624619], [-73.902627, 40.62437], [-73.902559, 40.624449], [-73.902547, 40.624444], [-73.902631, 40.624349], [-73.903132, 40.624602], [-73.903174, 40.624556], [-73.903203, 40.624571], [-73.90327, 40.624484], [-73.902885, 40.624311], [-73.902693, 40.624213], [-73.902833, 40.624051], [-73.902786, 40.624039], [-73.902755, 40.624068], [-73.902719, 40.624052], [-73.902415, 40.624463], [-73.902287, 40.62441], [-73.902297, 40.624397], [-73.902404, 40.624442], [-73.902714, 40.624023], [-73.902619, 40.623983], [-73.902624, 40.623977], [-73.902719, 40.624018], [-73.902745, 40.623983], [-73.902636, 40.623935], [-73.902644, 40.623925], [-73.902702, 40.62395], [-73.902712, 40.623936], [-73.902848, 40.623994], [-73.902874, 40.623958], [-73.902739, 40.6239], [-73.902752, 40.623883], [-73.902916, 40.623955], [-73.902962, 40.623873], [-73.902979, 40.623786], [-73.902963, 40.623698], [-73.902936, 40.623624], [-73.902882, 40.623542], [-73.902825, 40.623476], [-73.90273, 40.623442], [-73.902649, 40.623425], [-73.902589, 40.623434], [-73.90242, 40.623492], [-73.902402, 40.623491], [-73.902384, 40.623489], [-73.902367, 40.623484], [-73.902351, 40.623477], [-73.902338, 40.623468], [-73.902321, 40.623451], [-73.902311, 40.623432], [-73.902308, 40.623418], [-73.902286, 40.623338], [-73.902223, 40.62318], [-73.901973, 40.622911], [-73.901732, 40.622899], [-73.901381, 40.622778], [-73.901251, 40.62272], [-73.901095, 40.622626], [-73.900987, 40.622541], [-73.900943, 40.622477], [-73.900826, 40.622173], [-73.900818, 40.622138], [-73.900764, 40.621777], [-73.900744, 40.621733], [-73.900705, 40.621629], [-73.900535, 40.62164], [-73.90015, 40.621677], [-73.899714, 40.621794], [-73.898118, 40.621852], [-73.896995, 40.621674], [-73.896515, 40.621444], [-73.896475, 40.621428], [-73.896441, 40.621395], [-73.8963, 40.621071], [-73.896301, 40.621015], [-73.896313, 40.620969], [-73.896318, 40.620907], [-73.896314, 40.620824], [-73.896288, 40.620736], [-73.896251, 40.62083], [-73.896222, 40.62084], [-73.895729, 40.620241], [-73.895775, 40.620029], [-73.895777, 40.62002], [-73.895654, 40.619854], [-73.895614, 40.619801], [-73.895719, 40.61953], [-73.89561, 40.619351], [-73.895853, 40.619145], [-73.896084, 40.618383], [-73.896403, 40.61789], [-73.896451, 40.617739], [-73.896643, 40.617348], [-73.896454, 40.61677], [-73.89646, 40.61613], [-73.896256, 40.616091], [-73.896171, 40.616001], [-73.896155, 40.615786], [-73.896173, 40.615654], [-73.896077, 40.615616], [-73.895734, 40.614888], [-73.895737, 40.614875], [-73.895751, 40.614859], [-73.895777, 40.614844], [-73.895782, 40.614835], [-73.895788, 40.614818], [-73.895805, 40.614809], [-73.895828, 40.614815], [-73.895844, 40.614821], [-73.895852, 40.614829], [-73.895869, 40.614841], [-73.895893, 40.614851], [-73.895949, 40.614869], [-73.896002, 40.614853], [-73.896029, 40.614805], [-73.895936, 40.6147], [-73.895919, 40.614671], [-73.895866, 40.614569], [-73.895861, 40.614518], [-73.895816, 40.614491], [-73.89559, 40.614438], [-73.895456, 40.614427], [-73.895418, 40.614414], [-73.894276, 40.613883], [-73.893069, 40.613881], [-73.892499, 40.613792], [-73.891868, 40.613553], [-73.891345, 40.613266], [-73.891278, 40.613202], [-73.891231, 40.61317], [-73.891214, 40.613157], [-73.891204, 40.613134], [-73.891187, 40.613093], [-73.891173, 40.61305], [-73.89114, 40.613007], [-73.891087, 40.612956], [-73.890981, 40.612868], [-73.890954, 40.612834], [-73.890944, 40.612769], [-73.890949, 40.612724], [-73.890959, 40.612697], [-73.890983, 40.612679], [-73.891028, 40.61265], [-73.891044, 40.612624], [-73.891047, 40.612601], [-73.891046, 40.612569], [-73.891037, 40.612541], [-73.891044, 40.61251], [-73.891067, 40.612481], [-73.891092, 40.612469], [-73.891128, 40.61246], [-73.891208, 40.612428], [-73.891234, 40.612395], [-73.891273, 40.612299], [-73.891309, 40.612234], [-73.891344, 40.612187], [-73.891373, 40.612155], [-73.891414, 40.612125], [-73.891496, 40.612119], [-73.891585, 40.612093], [-73.891617, 40.612078], [-73.891647, 40.612059], [-73.891664, 40.612053], [-73.89168, 40.612062], [-73.891673, 40.612105], [-73.891684, 40.612117], [-73.89172, 40.612131], [-73.891742, 40.61213], [-73.891759, 40.61212], [-73.891812, 40.612066], [-73.891829, 40.612032], [-73.89186, 40.61202], [-73.892096, 40.611961], [-73.892116, 40.611961], [-73.892129, 40.611968], [-73.892109, 40.612014], [-73.892086, 40.612062], [-73.892096, 40.612071], [-73.89212, 40.612078], [-73.892153, 40.612074], [-73.892177, 40.612063], [-73.892201, 40.612047], [-73.892263, 40.61199], [-73.892706, 40.611744], [-73.892749, 40.61173], [-73.892798, 40.611727], [-73.892864, 40.611727], [-73.892934, 40.611731], [-73.892977, 40.61174], [-73.893034, 40.611763], [-73.893115, 40.611763], [-73.893208, 40.611736], [-73.893265, 40.611701], [-73.893306, 40.611685], [-73.893359, 40.611675], [-73.893418, 40.611648], [-73.893484, 40.611625], [-73.893534, 40.611592], [-73.893593, 40.611558], [-73.893645, 40.611531], [-73.893696, 40.611516], [-73.893762, 40.611515], [-73.893837, 40.611526], [-73.893885, 40.611537], [-73.893932, 40.611537], [-73.893965, 40.611524], [-73.894002, 40.611504], [-73.894034, 40.611464], [-73.894042, 40.611428], [-73.89404, 40.611409], [-73.894041, 40.611379], [-73.894031, 40.611347], [-73.893989, 40.611311], [-73.893969, 40.611297], [-73.893966, 40.611276], [-73.893958, 40.611251], [-73.893966, 40.611233], [-73.893964, 40.611214], [-73.89394, 40.611181], [-73.89392, 40.611174], [-73.893893, 40.611169], [-73.893881, 40.611175], [-73.893848, 40.611225], [-73.893832, 40.611233], [-73.893792, 40.611227], [-73.893717, 40.611208], [-73.893594, 40.61117], [-73.893581, 40.611166], [-73.893575, 40.61115], [-73.893582, 40.611119], [-73.893572, 40.611095], [-73.893573, 40.611071], [-73.89358, 40.611056], [-73.893595, 40.611052], [-73.893608, 40.611045], [-73.893599, 40.611024], [-73.893578, 40.611015], [-73.893549, 40.611001], [-73.893479, 40.611017], [-73.893458, 40.611028], [-73.893442, 40.611048], [-73.893389, 40.611072], [-73.893364, 40.611089], [-73.893252, 40.611135], [-73.893133, 40.611161], [-73.893089, 40.611193], [-73.893042, 40.611206], [-73.892993, 40.61121], [-73.892936, 40.611206], [-73.892908, 40.611209], [-73.89286, 40.611268], [-73.892742, 40.611347], [-73.892624, 40.611394], [-73.892433, 40.611412], [-73.892107, 40.611536], [-73.892022, 40.611558], [-73.891999, 40.611559], [-73.891975, 40.61154], [-73.891942, 40.611537], [-73.891913, 40.611529], [-73.891894, 40.611535], [-73.891861, 40.611568], [-73.891861, 40.611582], [-73.891846, 40.611603], [-73.891795, 40.611586], [-73.891768, 40.611595], [-73.891756, 40.611618], [-73.891751, 40.611636], [-73.891756, 40.611652], [-73.891768, 40.611667], [-73.891767, 40.611687], [-73.89169, 40.611751], [-73.891625, 40.611791], [-73.891578, 40.611815], [-73.891535, 40.611822], [-73.89149, 40.611814], [-73.89146, 40.611823], [-73.891442, 40.611834], [-73.891423, 40.611857], [-73.891373, 40.611914], [-73.891348, 40.611928], [-73.891323, 40.611932], [-73.891277, 40.611935], [-73.891227, 40.611961], [-73.891191, 40.611962], [-73.891154, 40.611977], [-73.891115, 40.612], [-73.891086, 40.612028], [-73.891016, 40.61205], [-73.890997, 40.612052], [-73.890988, 40.612067], [-73.890999, 40.612084], [-73.891138, 40.612147], [-73.89116, 40.612177], [-73.891161, 40.612194], [-73.891153, 40.612214], [-73.891123, 40.612261], [-73.891078, 40.612277], [-73.891023, 40.612261], [-73.890881, 40.612193], [-73.890695, 40.612165], [-73.890588, 40.612133], [-73.890549, 40.612119], [-73.890445, 40.612057], [-73.890334, 40.612011], [-73.890326, 40.611991], [-73.890302, 40.611964], [-73.890255, 40.611931], [-73.890189, 40.611886], [-73.890137, 40.611849], [-73.890062, 40.61181], [-73.889928, 40.611737], [-73.889792, 40.611686], [-73.889736, 40.611625], [-73.889702, 40.611563], [-73.889696, 40.611454], [-73.889785, 40.610955], [-73.890302, 40.610318], [-73.890588, 40.610074], [-73.891163, 40.609725], [-73.891817, 40.609219], [-73.891904, 40.609139], [-73.891945, 40.609102], [-73.891984, 40.609091], [-73.89199, 40.609097], [-73.891993, 40.609105], [-73.891982, 40.609122], [-73.891965, 40.609143], [-73.891951, 40.609166], [-73.891947, 40.609177], [-73.891947, 40.609189], [-73.891877, 40.609273], [-73.891865, 40.609301], [-73.891866, 40.609323], [-73.89188, 40.609341], [-73.891911, 40.609349], [-73.891946, 40.609358], [-73.891973, 40.609375], [-73.891981, 40.609382], [-73.891982, 40.609385], [-73.891977, 40.609387], [-73.891954, 40.60939], [-73.891915, 40.609382], [-73.891904, 40.609385], [-73.891813, 40.609384], [-73.891793, 40.609393], [-73.891768, 40.609422], [-73.891738, 40.609456], [-73.891746, 40.609477], [-73.891753, 40.609475], [-73.891772, 40.609461], [-73.891786, 40.609458], [-73.891793, 40.609467], [-73.891796, 40.609474], [-73.891786, 40.609487], [-73.891769, 40.609495], [-73.891761, 40.609512], [-73.891769, 40.609519], [-73.891787, 40.609523], [-73.89183, 40.609507], [-73.891859, 40.609499], [-73.891919, 40.609472], [-73.891954, 40.60945], [-73.891989, 40.60942], [-73.892002, 40.609395], [-73.892013, 40.609381], [-73.892037, 40.609348], [-73.892074, 40.609319], [-73.892086, 40.609303], [-73.892096, 40.609262], [-73.892108, 40.609237], [-73.892148, 40.609215], [-73.892252, 40.609181], [-73.892267, 40.609165], [-73.892259, 40.609157], [-73.89224, 40.609155], [-73.892234, 40.609097], [-73.892266, 40.60902], [-73.892287, 40.608941], [-73.89231, 40.608852], [-73.892335, 40.608799], [-73.892367, 40.60876], [-73.892372, 40.608728], [-73.892367, 40.608709], [-73.892351, 40.608691], [-73.892322, 40.60868], [-73.892269, 40.608661], [-73.89223, 40.608639], [-73.892225, 40.608636], [-73.892223, 40.608627], [-73.892241, 40.608621], [-73.892271, 40.608624], [-73.892339, 40.608631], [-73.892374, 40.608617], [-73.892406, 40.608598], [-73.892422, 40.608578], [-73.892423, 40.608558], [-73.892419, 40.608549], [-73.8924, 40.608542], [-73.89235, 40.608502], [-73.892321, 40.608487], [-73.892307, 40.608488], [-73.892288, 40.608498], [-73.892252, 40.608539], [-73.892225, 40.608559], [-73.892202, 40.608564], [-73.892176, 40.60856], [-73.89217, 40.608545], [-73.892186, 40.608503], [-73.892201, 40.608487], [-73.892206, 40.608467], [-73.89222, 40.608443], [-73.892245, 40.608409], [-73.892248, 40.608364], [-73.892265, 40.608337], [-73.892271, 40.608316], [-73.892265, 40.608288], [-73.892276, 40.608257], [-73.892287, 40.608242], [-73.892327, 40.608226], [-73.892341, 40.608212], [-73.892363, 40.608202], [-73.892428, 40.608199], [-73.892459, 40.608193], [-73.892483, 40.608153], [-73.892504, 40.608044], [-73.892513, 40.607916], [-73.892516, 40.607829], [-73.892535, 40.607745], [-73.892573, 40.607701], [-73.892593, 40.607564], [-73.892599, 40.607529], [-73.892729, 40.607227], [-73.892746, 40.607195], [-73.892773, 40.607166], [-73.892918, 40.607116], [-73.893017, 40.607087], [-73.893112, 40.607052], [-73.893162, 40.606963], [-73.893214, 40.606861], [-73.89324, 40.606829], [-73.893346, 40.606743], [-73.893568, 40.606664], [-73.893721, 40.606595], [-73.893849, 40.606572], [-73.893954, 40.606532], [-73.894267, 40.606444], [-73.894389, 40.606427], [-73.894531, 40.606431], [-73.894667, 40.606455], [-73.894862, 40.606405], [-73.895195, 40.606206], [-73.895301, 40.606171], [-73.895581, 40.605973], [-73.895749, 40.605932], [-73.895913, 40.605845], [-73.898339, 40.605304], [-73.898647, 40.605298], [-73.89871, 40.605353], [-73.899162, 40.605528], [-73.899382, 40.605463], [-73.899832, 40.605503], [-73.900519, 40.606278], [-73.900834, 40.606843], [-73.900877, 40.60698], [-73.900841, 40.607067], [-73.900566, 40.607634], [-73.900511, 40.608281], [-73.900486, 40.608707], [-73.900488, 40.609064], [-73.900477, 40.609217], [-73.900469, 40.609235], [-73.900442, 40.609252], [-73.900428, 40.609264], [-73.900411, 40.609309], [-73.900399, 40.609373], [-73.90037, 40.609411], [-73.900336, 40.609437], [-73.900298, 40.609452], [-73.900281, 40.609465], [-73.900251, 40.609517], [-73.900235, 40.609618], [-73.900225, 40.609884], [-73.900216, 40.609989], [-73.900198, 40.610017], [-73.900167, 40.610043], [-73.900156, 40.610076], [-73.900164, 40.610104], [-73.900183, 40.610119], [-73.900201, 40.610123], [-73.900234, 40.610116], [-73.900279, 40.610118], [-73.900341, 40.610156], [-73.90041, 40.610209], [-73.900438, 40.610242], [-73.900451, 40.610276], [-73.900453, 40.610297], [-73.900431, 40.61033], [-73.900409, 40.610375], [-73.900418, 40.610411], [-73.900448, 40.610445], [-73.900669, 40.610545], [-73.900708, 40.610571], [-73.900761, 40.610613], [-73.900905, 40.61076], [-73.900919, 40.610777], [-73.900932, 40.610788], [-73.90103, 40.610823], [-73.901074, 40.610861], [-73.901099, 40.610894], [-73.901096, 40.61091], [-73.901086, 40.610922], [-73.901084, 40.610944], [-73.901088, 40.610966], [-73.901111, 40.61099], [-73.901156, 40.611016], [-73.901206, 40.611035], [-73.901248, 40.611033], [-73.901296, 40.611048], [-73.90135, 40.611089], [-73.901391, 40.611146], [-73.901425, 40.611233], [-73.90144, 40.611325], [-73.901432, 40.611381], [-73.901423, 40.611394], [-73.901395, 40.611397], [-73.901376, 40.611377], [-73.901356, 40.611369], [-73.901331, 40.611383], [-73.901309, 40.611428], [-73.901314, 40.611668], [-73.901333, 40.611718], [-73.901396, 40.611753], [-73.901464, 40.611765], [-73.901529, 40.611796], [-73.901554, 40.611821], [-73.901563, 40.61184], [-73.901587, 40.611857], [-73.901615, 40.611864], [-73.901954, 40.611745], [-73.901987, 40.611745], [-73.902023, 40.611758], [-73.902175, 40.611868], [-73.90229, 40.611962], [-73.902316, 40.611946], [-73.902332, 40.611961], [-73.902487, 40.611862], [-73.90246, 40.611839], [-73.902494, 40.611815], [-73.901219, 40.610575], [-73.901208, 40.610582], [-73.901193, 40.610564], [-73.90133, 40.610481], [-73.901345, 40.610499], [-73.901302, 40.610525], [-73.901311, 40.610533], [-73.901254, 40.610565], [-73.901248, 40.61058], [-73.902536, 40.611826], [-73.902557, 40.611827], [-73.90264, 40.611772], [-73.902651, 40.611781], [-73.902502, 40.611878], [-73.902498, 40.611873], [-73.902467, 40.611898], [-73.902472, 40.611907], [-73.90236, 40.61198], [-73.902407, 40.612016], [-73.902507, 40.611943], [-73.902515, 40.611943], [-73.902572, 40.611921], [-73.902719, 40.611826], [-73.902728, 40.611837], [-73.902639, 40.611895], [-73.902638, 40.611907], [-73.902927, 40.612159], [-73.903028, 40.612084], [-73.903044, 40.612095], [-73.902918, 40.612187], [-73.902901, 40.612175], [-73.90291, 40.612168], [-73.902629, 40.611926], [-73.902597, 40.611948], [-73.902581, 40.611936], [-73.902528, 40.611958], [-73.902423, 40.612034], [-73.90256, 40.612164], [-73.902711, 40.612247], [-73.905871, 40.615063], [-73.905907, 40.615039], [-73.905735, 40.614883], [-73.90575, 40.614875], [-73.905886, 40.615002], [-73.905998, 40.614926], [-73.906034, 40.614953], [-73.905986, 40.61499], [-73.90596, 40.61497], [-73.905929, 40.614991], [-73.905966, 40.615024], [-73.905924, 40.615054], [-73.905919, 40.615051], [-73.905879, 40.615077], [-73.906965, 40.616064], [-73.906963, 40.616114], [-73.907147, 40.616], [-73.907173, 40.61601], [-73.906738, 40.616296], [-73.90681, 40.61636], [-73.907257, 40.616088], [-73.907275, 40.616105], [-73.907083, 40.616221], [-73.907226, 40.616352], [-73.907412, 40.616235], [-73.907443, 40.616259], [-73.907022, 40.616534], [-73.907106, 40.61661], [-73.907527, 40.616344], [-73.907543, 40.616363], [-73.907242, 40.616552], [-73.907295, 40.616608], [-73.907343, 40.616586], [-73.907475, 40.616713], [-73.90759, 40.616629], [-73.907679, 40.616695], [-73.907551, 40.616781], [-73.907689, 40.616947], [-73.907786, 40.616894], [-73.907968, 40.617047], [-73.907971, 40.617082], [-73.907765, 40.617217], [-73.907811, 40.617265], [-73.907754, 40.617316], [-73.907814, 40.617374], [-73.908153, 40.617162], [-73.908392, 40.617388], [-73.908604, 40.617265], [-73.908791, 40.617436], [-73.908869, 40.617391], [-73.908633, 40.617168], [-73.908664, 40.61715], [-73.908837, 40.617312], [-73.909071, 40.61716], [-73.908354, 40.616531], [-73.908374, 40.616517], [-73.908794, 40.616873], [-73.909138, 40.616633], [-73.909139, 40.616532], [-73.908106, 40.615669], [-73.907991, 40.615752], [-73.907973, 40.615737], [-73.908157, 40.615601], [-73.908174, 40.615613], [-73.908123, 40.615652], [-73.909177, 40.616522], [-73.909169, 40.616646], [-73.908815, 40.61689], [-73.908957, 40.616991], [-73.909205, 40.616814], [-73.910245, 40.617783], [-73.912525, 40.619831], [-73.917253, 40.619549], [-73.918586, 40.632057], [-73.916248, 40.633621], [-73.915597, 40.633029], [-73.900588, 40.62634], [-73.901519, 40.625099], [-73.904128, 40.626306], [-73.915048, 40.631166], [-73.916332, 40.632039], [-73.916795, 40.63196], [-73.917161, 40.63173], [-73.917426, 40.631581], [-73.917518, 40.63134], [-73.91732, 40.631007]]]]
    },
    "properties": {
      "neighbourhood": "Bergen Beach",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.16848, 40.621562], [-74.16922, 40.621306], [-74.173684, 40.620528], [-74.174689, 40.619983], [-74.174821, 40.619876], [-74.17495, 40.6198], [-74.175179, 40.619587], [-74.175647, 40.619209], [-74.175864, 40.618939], [-74.17604, 40.618776], [-74.178373, 40.615815], [-74.18031, 40.612185], [-74.18202, 40.609753], [-74.182929, 40.608148], [-74.18382, 40.605294], [-74.18543, 40.603378], [-74.184039, 40.602687], [-74.184845, 40.602159], [-74.186247, 40.60192], [-74.190373, 40.602385], [-74.194357, 40.601115], [-74.1951, 40.601857], [-74.195834, 40.602301], [-74.19606, 40.601269], [-74.196487, 40.601236], [-74.19704, 40.599983], [-74.19834, 40.600657], [-74.19876, 40.601712], [-74.19946, 40.602706], [-74.200149, 40.603683], [-74.200155, 40.603688], [-74.201385, 40.604637], [-74.201567, 40.604928], [-74.202218, 40.60597], [-74.202504, 40.607067], [-74.202816, 40.608271], [-74.202421, 40.611039], [-74.202302, 40.611876], [-74.202375, 40.612599], [-74.202444, 40.613285], [-74.200384, 40.616428], [-74.200383, 40.616428], [-74.200384, 40.616428], [-74.200508, 40.616791], [-74.20059, 40.617029], [-74.200591, 40.617029], [-74.200828, 40.617094], [-74.200914, 40.617799], [-74.200899, 40.617915], [-74.200875, 40.6181], [-74.200542, 40.617998], [-74.200352, 40.618342], [-74.20084, 40.618804], [-74.200681, 40.619168], [-74.20107, 40.620382], [-74.200506, 40.6203], [-74.200428, 40.620495], [-74.200873, 40.620591], [-74.201258, 40.621555], [-74.201326, 40.621577], [-74.201432, 40.621613], [-74.20136, 40.621778], [-74.201231, 40.622074], [-74.201275, 40.622688], [-74.201517, 40.622697], [-74.201546, 40.622698], [-74.201632, 40.623122], [-74.201614, 40.623265], [-74.201585, 40.623498], [-74.201344, 40.623553], [-74.201397, 40.623736], [-74.201077, 40.624078], [-74.201061, 40.625895], [-74.201183, 40.62611], [-74.201417, 40.626071], [-74.200986, 40.629344], [-74.200805, 40.629333], [-74.200755, 40.629595], [-74.200477, 40.629657], [-74.200426, 40.629821], [-74.200408, 40.63025], [-74.200787, 40.630346], [-74.200403, 40.630292], [-74.200185, 40.631329], [-74.200404, 40.631446], [-74.200173, 40.631361], [-74.198501, 40.632798], [-74.198392, 40.633036], [-74.198344, 40.633141], [-74.198259, 40.633169], [-74.197959, 40.633267], [-74.197591, 40.633081], [-74.197287, 40.633292], [-74.19715, 40.633929], [-74.196739, 40.634053], [-74.19647, 40.634136], [-74.196029, 40.634996], [-74.195655, 40.635003], [-74.18173, 40.627922], [-74.178845, 40.626106], [-74.177624, 40.625774], [-74.173366, 40.623677], [-74.16848, 40.621562]]]]
    },
    "properties": {
      "neighbourhood": "Bloomfield",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.979903, 40.687466], [-73.978026, 40.684864], [-73.978033, 40.684853], [-73.980051, 40.68186], [-73.988712, 40.685224], [-73.98914, 40.684594], [-73.991332, 40.685448], [-73.990035, 40.687365], [-73.991509, 40.687959], [-73.991094, 40.688571], [-73.992623, 40.689161], [-73.992368, 40.689691], [-73.992012, 40.690432], [-73.991742, 40.690993], [-73.986196, 40.688999], [-73.985854, 40.689602], [-73.979903, 40.687466]]]]
    },
    "properties": {
      "neighbourhood": "Boerum Hill",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.988967, 40.644122], [-73.978532, 40.637892], [-73.976569, 40.627579], [-73.976569, 40.627579], [-73.972998, 40.608833], [-73.99932, 40.624672], [-73.99932, 40.624671], [-74.012536, 40.632632], [-73.996088, 40.648307], [-73.988967, 40.644122]]]]
    },
    "properties": {
      "neighbourhood": "Borough Park",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.96661, 40.584575], [-73.96521, 40.583788], [-73.96207, 40.584203], [-73.959007, 40.582838], [-73.957353, 40.583023], [-73.956536, 40.582659], [-73.95414, 40.583105], [-73.95408, 40.582793], [-73.953641, 40.580605], [-73.952426, 40.574559], [-73.952363, 40.574292], [-73.952543, 40.574224], [-73.952759, 40.574214], [-73.953118, 40.574288], [-73.953851, 40.574271], [-73.953935, 40.574243], [-73.953994, 40.574266], [-73.954011, 40.574238], [-73.954032, 40.574086], [-73.954083, 40.574073], [-73.954107, 40.574102], [-73.9541, 40.574287], [-73.954134, 40.574333], [-73.954398, 40.574371], [-73.955695, 40.574327], [-73.956208, 40.574265], [-73.956345, 40.574207], [-73.956345, 40.574207], [-73.956369, 40.574173], [-73.956296, 40.573835], [-73.956311, 40.5738], [-73.956345, 40.573798], [-73.95639, 40.573824], [-73.956472, 40.574139], [-73.956568, 40.574171], [-73.958435, 40.574089], [-73.958884, 40.573992], [-73.958966, 40.573947], [-73.958975, 40.573905], [-73.958943, 40.573467], [-73.958987, 40.573431], [-73.959026, 40.573452], [-73.959072, 40.573846], [-73.959096, 40.573864], [-73.959829, 40.573929], [-73.96383, 40.57357], [-73.966022, 40.573389], [-73.967203, 40.573326], [-73.96739, 40.573259], [-73.967436, 40.573209], [-73.967436, 40.573206], [-73.967364, 40.573045], [-73.967395, 40.572995], [-73.967426, 40.572985], [-73.967449, 40.573008], [-73.967531, 40.573191], [-73.968185, 40.573178], [-73.968849, 40.573058], [-73.969451, 40.572857], [-73.969212, 40.572335], [-73.969246, 40.572304], [-73.969284, 40.572301], [-73.969559, 40.572809], [-73.969756, 40.572847], [-73.971087, 40.572727], [-73.97133, 40.572644], [-73.971378, 40.572511], [-73.971142, 40.572051], [-73.971154, 40.572], [-73.971135, 40.57196], [-73.971183, 40.571942], [-73.971221, 40.571963], [-73.971457, 40.572479], [-73.971607, 40.572628], [-73.972935, 40.572475], [-73.973345, 40.572321], [-73.973233, 40.571906], [-73.973212, 40.571668], [-73.97325, 40.571627], [-73.973291, 40.571642], [-73.973325, 40.571676], [-73.973343, 40.571741], [-73.973448, 40.572272], [-73.975286, 40.57205], [-73.975471, 40.571969], [-73.975406, 40.571505], [-73.975406, 40.571421], [-73.975457, 40.571421], [-73.975484, 40.571455], [-73.975509, 40.571524], [-73.975517, 40.571694], [-73.975679, 40.571956], [-73.975926, 40.572019], [-73.97708, 40.571888], [-73.977301, 40.571862], [-73.977664, 40.571729], [-73.977568, 40.571247], [-73.977599, 40.571191], [-73.977671, 40.571171], [-73.978047, 40.5712], [-73.978076, 40.57123], [-73.977715, 40.571252], [-73.977698, 40.571325], [-73.977808, 40.571756], [-73.978455, 40.571892], [-73.9791, 40.571841], [-73.979522, 40.571714], [-73.979847, 40.571539], [-73.979861, 40.571482], [-73.979806, 40.571404], [-73.979724, 40.571346], [-73.979467, 40.571299], [-73.97945, 40.571303], [-73.979432, 40.571303], [-73.979415, 40.571297], [-73.979408, 40.571293], [-73.979397, 40.571282], [-73.979393, 40.571276], [-73.979391, 40.571262], [-73.979443, 40.571221], [-73.979584, 40.571226], [-73.979755, 40.57125], [-73.97996, 40.57144], [-73.980008, 40.571699], [-73.980104, 40.571727], [-73.980613, 40.571662], [-73.980597, 40.571755], [-73.982734, 40.58337], [-73.977517, 40.582745], [-73.97056, 40.583909], [-73.969087, 40.584001], [-73.967878, 40.584602], [-73.96661, 40.584575]]]]
    },
    "properties": {
      "neighbourhood": "Brighton Beach",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.939926, 40.6639], [-73.940029, 40.663021], [-73.93957, 40.65853], [-73.93956, 40.656063], [-73.952959, 40.655249], [-73.952959, 40.65525], [-73.959696, 40.654839], [-73.96176, 40.654071], [-73.9619, 40.65487], [-73.9619, 40.654871], [-73.96309, 40.662165], [-73.962986, 40.662496], [-73.962746, 40.662783], [-73.962375, 40.663098], [-73.962212, 40.663177], [-73.96186, 40.663217], [-73.960952, 40.663306], [-73.960563, 40.66331], [-73.945463, 40.66423], [-73.939926, 40.6639]]]]
    },
    "properties": {
      "neighbourhood": "Prospect-Lefferts Gardens",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.927313, 40.81856], [-73.926463, 40.818347], [-73.926358, 40.818321], [-73.926223, 40.818286], [-73.92538, 40.818066], [-73.917625, 40.816055], [-73.914954, 40.814937], [-73.910948, 40.813621], [-73.904466, 40.812282], [-73.902718, 40.810917], [-73.900905, 40.811429], [-73.90627, 40.807451], [-73.909127, 40.806166], [-73.914429, 40.803845], [-73.916281, 40.803263], [-73.921615, 40.805799], [-73.926857, 40.807709], [-73.929508, 40.809329], [-73.932239, 40.811657], [-73.932444, 40.811786], [-73.932632, 40.811905], [-73.932403, 40.814355], [-73.9324, 40.814391], [-73.932376, 40.814652], [-73.932346, 40.816892], [-73.932336, 40.81763], [-73.932442, 40.819565], [-73.932116, 40.819616], [-73.930218, 40.819312], [-73.927313, 40.81856]]]]
    },
    "properties": {
      "neighbourhood": "Mott Haven",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.868882, 40.857223], [-73.856389, 40.857594], [-73.857112, 40.857036], [-73.86008, 40.854751], [-73.862975, 40.852344], [-73.865477, 40.850284], [-73.866129, 40.850537], [-73.868609, 40.852088], [-73.869948, 40.855886], [-73.868882, 40.857223]]]]
    },
    "properties": {
      "neighbourhood": "Bronxdale",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.862659, 40.5668], [-73.862869, 40.566831], [-73.862674, 40.56652], [-73.862676, 40.566513], [-73.862684, 40.566506], [-73.862694, 40.566502], [-73.862704, 40.566502], [-73.862714, 40.566505], [-73.862774, 40.566572], [-73.863005, 40.566876], [-73.863199, 40.566972], [-73.863559, 40.567027], [-73.864347, 40.566776], [-73.864753, 40.566653], [-73.864955, 40.566631], [-73.86542, 40.566596], [-73.865576, 40.56656], [-73.866448, 40.566139], [-73.86654, 40.566108], [-73.866617, 40.566092], [-73.866301, 40.565552], [-73.866309, 40.565546], [-73.86663, 40.56609], [-73.866742, 40.566083], [-73.866861, 40.566086], [-73.866964, 40.566069], [-73.867381, 40.565935], [-73.867688, 40.565796], [-73.868098, 40.565624], [-73.868365, 40.565519], [-73.868395, 40.565514], [-73.868451, 40.565517], [-73.868487, 40.565527], [-73.868232, 40.565077], [-73.868251, 40.565069], [-73.868528, 40.565545], [-73.86925, 40.565385], [-73.869549, 40.565241], [-73.870487, 40.564855], [-73.870622, 40.564813], [-73.870253, 40.564183], [-73.870276, 40.564175], [-73.870641, 40.56481], [-73.870666, 40.564815], [-73.870913, 40.564765], [-73.872326, 40.56419], [-73.872578, 40.564098], [-73.87264, 40.564084], [-73.872647, 40.564042], [-73.872379, 40.563575], [-73.872399, 40.563571], [-73.872668, 40.564034], [-73.872687, 40.564038], [-73.872708, 40.564058], [-73.872749, 40.56411], [-73.87322, 40.564064], [-73.873983, 40.563807], [-73.873962, 40.563761], [-73.873977, 40.563757], [-73.873999, 40.563805], [-73.874593, 40.563631], [-73.874641, 40.563609], [-73.874667, 40.563578], [-73.87467, 40.563559], [-73.874645, 40.563501], [-73.874665, 40.563498], [-73.874685, 40.563531], [-73.874737, 40.563538], [-73.875386, 40.563387], [-73.875346, 40.563299], [-73.875361, 40.563296], [-73.875401, 40.563383], [-73.876068, 40.563154], [-73.876031, 40.563074], [-73.876046, 40.563071], [-73.876083, 40.563149], [-73.87633, 40.563087], [-73.876693, 40.562901], [-73.876743, 40.562881], [-73.876726, 40.562845], [-73.876744, 40.562842], [-73.876759, 40.562876], [-73.877298, 40.562668], [-73.877356, 40.562653], [-73.877343, 40.562632], [-73.877361, 40.562628], [-73.877374, 40.562649], [-73.879379, 40.561837], [-73.880284, 40.561511], [-73.880302, 40.561494], [-73.8803, 40.561472], [-73.880283, 40.561443], [-73.880276, 40.561401], [-73.880282, 40.561385], [-73.880297, 40.561375], [-73.880322, 40.561368], [-73.880355, 40.56137], [-73.880371, 40.56138], [-73.880387, 40.561402], [-73.880415, 40.561472], [-73.880535, 40.561466], [-73.881282, 40.561372], [-73.881975, 40.561069], [-73.882256, 40.560954], [-73.882416, 40.560911], [-73.882353, 40.560788], [-73.882359, 40.560768], [-73.882374, 40.56076], [-73.882398, 40.560762], [-73.882426, 40.56077], [-73.882473, 40.560873], [-73.882521, 40.560881], [-73.8828, 40.560875], [-73.88305, 40.560889], [-73.883247, 40.560856], [-73.883847, 40.560579], [-73.884836, 40.560195], [-73.884884, 40.560182], [-73.884826, 40.560084], [-73.884827, 40.560073], [-73.884838, 40.560055], [-73.884859, 40.560043], [-73.884882, 40.560041], [-73.884897, 40.560048], [-73.884951, 40.56016], [-73.885113, 40.560151], [-73.886111, 40.559922], [-73.886962, 40.559558], [-73.886983, 40.559541], [-73.886995, 40.559515], [-73.886948, 40.559425], [-73.886975, 40.5594], [-73.887006, 40.559406], [-73.887066, 40.55954], [-73.887893, 40.559511], [-73.8892, 40.55898], [-73.889386, 40.55892], [-73.889494, 40.558856], [-73.889619, 40.558792], [-73.889593, 40.558698], [-73.889639, 40.558664], [-73.889713, 40.558772], [-73.89017, 40.558799], [-73.890217, 40.558812], [-73.890796, 40.558619], [-73.891817, 40.558182], [-73.891924, 40.55816], [-73.891997, 40.558105], [-73.892087, 40.558048], [-73.892114, 40.557917], [-73.892139, 40.557872], [-73.892165, 40.557868], [-73.892199, 40.557911], [-73.892204, 40.557951], [-73.892266, 40.558025], [-73.892388, 40.558054], [-73.892527, 40.558119], [-73.892957, 40.558072], [-73.893515, 40.557915], [-73.893735, 40.557802], [-73.894223, 40.557591], [-73.894817, 40.557347], [-73.894894, 40.557306], [-73.894925, 40.557297], [-73.894951, 40.557294], [-73.894956, 40.557281], [-73.894882, 40.557105], [-73.89489, 40.557088], [-73.894918, 40.557079], [-73.894942, 40.55709], [-73.894956, 40.557105], [-73.89502, 40.557262], [-73.895064, 40.557272], [-73.895091, 40.557287], [-73.895122, 40.557302], [-73.895143, 40.557317], [-73.895147, 40.557351], [-73.895185, 40.557385], [-73.895287, 40.557422], [-73.895512, 40.557414], [-73.895602, 40.557398], [-73.895787, 40.557358], [-73.895935, 40.557272], [-73.896995, 40.556892], [-73.897036, 40.556842], [-73.897073, 40.556811], [-73.897084, 40.556781], [-73.897064, 40.556695], [-73.897065, 40.556664], [-73.89708, 40.556657], [-73.897097, 40.556656], [-73.897119, 40.556659], [-73.897126, 40.556664], [-73.897129, 40.556672], [-73.897142, 40.556727], [-73.89716, 40.556782], [-73.897185, 40.55685], [-73.897357, 40.556998], [-73.89759, 40.557059], [-73.897995, 40.557102], [-73.898286, 40.557065], [-73.899117, 40.5568], [-73.899132, 40.556794], [-73.899114, 40.556729], [-73.8991, 40.556663], [-73.899111, 40.556649], [-73.89913, 40.556641], [-73.899152, 40.556641], [-73.899165, 40.556646], [-73.899175, 40.556654], [-73.899197, 40.556682], [-73.899213, 40.556712], [-73.899387, 40.556723], [-73.89956, 40.556707], [-73.899802, 40.556632], [-73.899795, 40.556602], [-73.899793, 40.556572], [-73.899795, 40.556541], [-73.899805, 40.556531], [-73.899821, 40.556525], [-73.899838, 40.556527], [-73.899849, 40.556531], [-73.899873, 40.556558], [-73.899891, 40.556588], [-73.899902, 40.55662], [-73.90009, 40.556625], [-73.900276, 40.556604], [-73.900366, 40.556584], [-73.900538, 40.556526], [-73.90054, 40.556507], [-73.900532, 40.556469], [-73.900535, 40.55646], [-73.900539, 40.556451], [-73.900546, 40.556443], [-73.900554, 40.556436], [-73.900563, 40.55643], [-73.900574, 40.556425], [-73.900586, 40.556422], [-73.900594, 40.556425], [-73.900602, 40.556428], [-73.900609, 40.556432], [-73.900616, 40.556437], [-73.900621, 40.556443], [-73.900625, 40.55645], [-73.900628, 40.556463], [-73.900652, 40.556558], [-73.900658, 40.556607], [-73.900701, 40.556634], [-73.901243, 40.556761], [-73.902115, 40.556786], [-73.902569, 40.556757], [-73.903461, 40.556619], [-73.904437, 40.55637], [-73.906914, 40.555604], [-73.918934, 40.550842], [-73.923708, 40.549121], [-73.927644, 40.547667], [-73.929726, 40.546751], [-73.930844, 40.546314], [-73.932918, 40.545568], [-73.934083, 40.545165], [-73.935562, 40.544712], [-73.936771, 40.544243], [-73.938899, 40.543228], [-73.939277, 40.543098], [-73.939866, 40.542947], [-73.940474, 40.54285], [-73.940559, 40.541847], [-73.940737, 40.54182], [-73.94013, 40.548003], [-73.940128, 40.549516], [-73.940285, 40.550395], [-73.940576, 40.551512], [-73.940653, 40.552487], [-73.940413, 40.553565], [-73.939851, 40.55456], [-73.938997, 40.555425], [-73.938305, 40.55591], [-73.937576, 40.556279], [-73.936399, 40.55693], [-73.935706, 40.557225], [-73.933403, 40.557351], [-73.931921, 40.557819], [-73.927352, 40.560779], [-73.926157, 40.561553], [-73.924215, 40.562001], [-73.921518, 40.562069], [-73.92122, 40.562076], [-73.921078, 40.56208], [-73.920368, 40.562219], [-73.92026, 40.562612], [-73.920098, 40.562571], [-73.920331, 40.562226], [-73.917661, 40.562826], [-73.914553, 40.564353], [-73.913867, 40.564608], [-73.913132, 40.564638], [-73.912202, 40.565055], [-73.912113, 40.565037], [-73.911883, 40.56499], [-73.911888, 40.565048], [-73.911955, 40.565811], [-73.912162, 40.565836], [-73.91197, 40.565869], [-73.911736, 40.565873], [-73.911926, 40.565814], [-73.911862, 40.565045], [-73.911858, 40.564995], [-73.911636, 40.56502], [-73.910798, 40.565111], [-73.910101, 40.564956], [-73.910038, 40.564794], [-73.909717, 40.565287], [-73.910023, 40.56478], [-73.909955, 40.564652], [-73.909763, 40.564285], [-73.909277, 40.563997], [-73.908725, 40.563931], [-73.908718, 40.563934], [-73.907948, 40.564158], [-73.907976, 40.563556], [-73.907907, 40.563513], [-73.906839, 40.562856], [-73.905495, 40.562766], [-73.904224, 40.562995], [-73.902907, 40.563479], [-73.90229, 40.562992], [-73.901511, 40.562955], [-73.900627, 40.563264], [-73.900563, 40.563286], [-73.899056, 40.563813], [-73.896281, 40.565233], [-73.896157, 40.565378], [-73.896129, 40.565411], [-73.895333, 40.566341], [-73.895496, 40.566701], [-73.89566, 40.567059], [-73.895338, 40.567025], [-73.895312, 40.567022], [-73.895105, 40.567157], [-73.893455, 40.568235], [-73.89261, 40.568587], [-73.892453, 40.568564], [-73.890165, 40.568229], [-73.889595, 40.567942], [-73.889111, 40.567916], [-73.889005, 40.567949], [-73.888368, 40.568145], [-73.88831, 40.568133], [-73.887862, 40.568038], [-73.887595, 40.568126], [-73.886548, 40.568471], [-73.886547, 40.568471], [-73.886351, 40.568492], [-73.885342, 40.568599], [-73.885341, 40.568599], [-73.884897, 40.5685], [-73.884761, 40.568545], [-73.88431, 40.568696], [-73.884741, 40.568527], [-73.884887, 40.56847], [-73.884756, 40.568289], [-73.884708, 40.56843], [-73.884646, 40.568439], [-73.884337, 40.568488], [-73.884564, 40.568363], [-73.884737, 40.568269], [-73.884457, 40.567896], [-73.884166, 40.568002], [-73.884195, 40.568051], [-73.884256, 40.568157], [-73.884183, 40.568057], [-73.884148, 40.568009], [-73.883989, 40.56806], [-73.884032, 40.568131], [-73.884072, 40.568195], [-73.884026, 40.568134], [-73.883974, 40.568065], [-73.883791, 40.568124], [-73.88385, 40.56822], [-73.884023, 40.568503], [-73.883843, 40.568224], [-73.883781, 40.568127], [-73.883577, 40.56821], [-73.883645, 40.56832], [-73.883692, 40.568395], [-73.883479, 40.568473], [-73.883904, 40.568906], [-73.883687, 40.568843], [-73.883428, 40.568427], [-73.883369, 40.568332], [-73.88263, 40.568369], [-73.881956, 40.568714], [-73.881923, 40.568731], [-73.878769, 40.568643], [-73.878675, 40.56864], [-73.877808, 40.568801], [-73.875985, 40.56952], [-73.870326, 40.572296], [-73.865543, 40.574642], [-73.864129, 40.575391], [-73.8632, 40.574127], [-73.863615, 40.57383], [-73.864493, 40.573543], [-73.866685, 40.57319], [-73.866785, 40.572368], [-73.864628, 40.569257], [-73.865387, 40.568863], [-73.864963, 40.567895], [-73.863754, 40.56858], [-73.863088, 40.567598], [-73.862659, 40.5668]]]]
    },
    "properties": {
      "neighbourhood": "Breezy Point",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.807669, 40.715506], [-73.807422, 40.714325], [-73.80693, 40.713643], [-73.806457, 40.712056], [-73.80558, 40.710237], [-73.805012, 40.709473], [-73.80364, 40.708729], [-73.803479, 40.708536], [-73.803276, 40.708412], [-73.802787, 40.707716], [-73.814439, 40.704402], [-73.81702, 40.704041], [-73.817769, 40.70548], [-73.818459, 40.705663], [-73.81942, 40.707678], [-73.81961, 40.708863], [-73.8205, 40.710111], [-73.8228, 40.711838], [-73.826007, 40.7156], [-73.822911, 40.716289], [-73.821393, 40.716316], [-73.817833, 40.715708], [-73.808859, 40.715726], [-73.807769, 40.715525], [-73.807669, 40.715506]]]]
    },
    "properties": {
      "neighbourhood": "Briarwood",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.998871, 40.697158], [-74.001049, 40.697908], [-74.000488, 40.698758], [-73.998378, 40.698063], [-73.998021, 40.698762], [-74.000018, 40.699466], [-73.999475, 40.700323], [-73.997499, 40.699639], [-73.997367, 40.699634], [-73.997161, 40.699793], [-73.997181, 40.699994], [-73.997176, 40.700106], [-73.997245, 40.700141], [-73.996698, 40.700877], [-73.996822, 40.700991], [-73.997528, 40.701229], [-73.99776, 40.701359], [-73.997802, 40.701319], [-73.998139, 40.701519], [-73.996192, 40.703377], [-73.995138, 40.702974], [-73.995046, 40.703132], [-73.994358, 40.70291], [-73.993258, 40.702461], [-73.992588, 40.702125], [-73.991987, 40.701607], [-73.99093, 40.700767], [-73.991031, 40.699845], [-73.991409, 40.698632], [-73.991365, 40.69701], [-73.990447, 40.693735], [-73.991742, 40.690993], [-73.992012, 40.690432], [-73.992368, 40.689691], [-73.999254, 40.691576], [-74.001744, 40.692407], [-74.004008, 40.693208], [-74.003462, 40.694057], [-74.00127, 40.693296], [-74.000959, 40.694069], [-74.003014, 40.694778], [-74.002398, 40.695712], [-74.000269, 40.694966], [-73.999413, 40.696358], [-73.999524, 40.696575], [-74.000489, 40.696926], [-74.000431, 40.697052], [-73.999593, 40.696782], [-73.999531, 40.696877], [-73.999588, 40.696898], [-73.999554, 40.696945], [-73.999407, 40.696885], [-73.999503, 40.696727], [-73.999474, 40.696704], [-73.999295, 40.696795], [-73.999182, 40.696885], [-73.998996, 40.696812], [-73.99894, 40.696941], [-73.998872, 40.696924], [-73.998855, 40.696954], [-73.998765, 40.697121], [-73.998871, 40.697158]]]]
    },
    "properties": {
      "neighbourhood": "Brooklyn Heights",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.903475, 40.675507], [-73.90266, 40.672197], [-73.899217, 40.659112], [-73.899041, 40.657372], [-73.899861, 40.657296], [-73.900612, 40.655982], [-73.902162, 40.654676], [-73.906247, 40.652028], [-73.908419, 40.650595], [-73.925453, 40.665905], [-73.925829, 40.666217], [-73.925606, 40.668514], [-73.92262, 40.668372], [-73.915049, 40.671504], [-73.91123, 40.67308], [-73.908195, 40.67538], [-73.908088, 40.67619], [-73.905225, 40.676046], [-73.903311, 40.675873], [-73.903475, 40.675507]]]]
    },
    "properties": {
      "neighbourhood": "Brownsville",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.14721, 40.608259], [-74.147502, 40.606313], [-74.147066, 40.605504], [-74.148281, 40.60567], [-74.14829, 40.604951], [-74.147894, 40.604878], [-74.14757, 40.604597], [-74.147237, 40.603727], [-74.14645, 40.602996], [-74.146173, 40.602143], [-74.1462, 40.601135], [-74.146613, 40.599666], [-74.146153, 40.597431], [-74.146193, 40.596997], [-74.146241, 40.596706], [-74.146581, 40.59627], [-74.146377, 40.596151], [-74.141873, 40.596054], [-74.140761, 40.597553], [-74.138836, 40.597311], [-74.137873, 40.597556], [-74.13608, 40.597254], [-74.133775, 40.596333], [-74.138696, 40.588962], [-74.145834, 40.588508], [-74.145845, 40.588507], [-74.145834, 40.588564], [-74.145667, 40.589966], [-74.155246, 40.595479], [-74.159652, 40.596467], [-74.159715, 40.596113], [-74.160174, 40.59617], [-74.160355, 40.595342], [-74.1619, 40.595299], [-74.161999, 40.594342], [-74.162604, 40.593157], [-74.1636, 40.593374], [-74.166141, 40.59369], [-74.167776, 40.59421], [-74.16831, 40.594444], [-74.167913, 40.596297], [-74.168451, 40.596475], [-74.167382, 40.601972], [-74.171683, 40.602511], [-74.172674, 40.602908], [-74.17485, 40.602211], [-74.17808, 40.599717], [-74.184039, 40.602687], [-74.18543, 40.603378], [-74.18382, 40.605294], [-74.182929, 40.608148], [-74.18202, 40.609753], [-74.18031, 40.612185], [-74.178373, 40.615815], [-74.17604, 40.618776], [-74.175864, 40.618939], [-74.175647, 40.619209], [-74.175179, 40.619587], [-74.17495, 40.6198], [-74.174821, 40.619876], [-74.174689, 40.619983], [-74.173684, 40.620528], [-74.16922, 40.621306], [-74.16848, 40.621562], [-74.161154, 40.618092], [-74.160501, 40.617416], [-74.157965, 40.615653], [-74.150506, 40.609906], [-74.14721, 40.608259]]]]
    },
    "properties": {
      "neighbourhood": "Bull's Head",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.905822, 40.694114], [-73.90158, 40.691766], [-73.904773, 40.688318], [-73.905495, 40.686882], [-73.904581, 40.686425], [-73.903684, 40.68521], [-73.904054, 40.68497], [-73.904183, 40.685427], [-73.904739, 40.68563], [-73.905714, 40.684099], [-73.902754, 40.682415], [-73.902642, 40.680704], [-73.904052, 40.681466], [-73.905479, 40.680039], [-73.941149, 40.700281], [-73.94042, 40.701077], [-73.933951, 40.702674], [-73.92598, 40.705792], [-73.921676, 40.709471], [-73.91198, 40.703603], [-73.91202, 40.703561], [-73.913078, 40.702422], [-73.910672, 40.701072], [-73.910691, 40.701053], [-73.91169, 40.700054], [-73.911769, 40.699974], [-73.904263, 40.695682], [-73.905822, 40.694114]]]]
    },
    "properties": {
      "neighbourhood": "Bushwick",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.726764, 40.702976], [-73.726544, 40.698983], [-73.726258, 40.69061], [-73.726199, 40.688941], [-73.725926, 40.686225], [-73.725798, 40.684354], [-73.72587, 40.683226], [-73.727183, 40.683597], [-73.73365, 40.685542], [-73.73562, 40.681871], [-73.740365, 40.68344], [-73.740806, 40.682769], [-73.750236, 40.685649], [-73.746189, 40.691272], [-73.744823, 40.693171], [-73.748579, 40.701604], [-73.748643, 40.701587], [-73.748579, 40.701605], [-73.741624, 40.703532], [-73.726764, 40.702976]]]]
    },
    "properties": {
      "neighbourhood": "Cambria Heights",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.190579, 40.57692], [-74.191733, 40.576839], [-74.196343, 40.578954], [-74.203645, 40.579952], [-74.205942, 40.579197], [-74.205973, 40.579936], [-74.205993, 40.58041], [-74.205724, 40.580966], [-74.205674, 40.580982], [-74.205417, 40.581069], [-74.205081, 40.581599], [-74.205083, 40.5817], [-74.205089, 40.582208], [-74.204811, 40.582639], [-74.204709, 40.582798], [-74.204739, 40.583176], [-74.204401, 40.583713], [-74.204634, 40.584323], [-74.204364, 40.584634], [-74.204415, 40.585524], [-74.204119, 40.585896], [-74.204275, 40.58611], [-74.204265, 40.587321], [-74.204581, 40.588218], [-74.20438, 40.58839], [-74.204273, 40.588483], [-74.204122, 40.588881], [-74.204225, 40.589012], [-74.204323, 40.589137], [-74.204574, 40.588719], [-74.204705, 40.588772], [-74.204435, 40.589218], [-74.204646, 40.589286], [-74.204409, 40.589707], [-74.204203, 40.589643], [-74.203859, 40.59025], [-74.2037, 40.5902], [-74.20386, 40.589842], [-74.203886, 40.589786], [-74.202659, 40.590722], [-74.202378, 40.590645], [-74.202014, 40.590896], [-74.202468, 40.590839], [-74.202767, 40.590993], [-74.203053, 40.591141], [-74.202963, 40.591231], [-74.202686, 40.591078], [-74.202455, 40.590951], [-74.202027, 40.590999], [-74.202124, 40.591253], [-74.201841, 40.591636], [-74.202003, 40.591781], [-74.202072, 40.591725], [-74.202316, 40.591524], [-74.201667, 40.59215], [-74.200925, 40.592866], [-74.200471, 40.592812], [-74.199741, 40.593565], [-74.199362, 40.594094], [-74.199483, 40.594321], [-74.198732, 40.595012], [-74.198561, 40.595553], [-74.19795, 40.59647], [-74.197514, 40.596799], [-74.197513, 40.596826], [-74.197504, 40.597305], [-74.197497, 40.597724], [-74.197421, 40.597858], [-74.197306, 40.59806], [-74.197436, 40.598385], [-74.19834, 40.600657], [-74.19704, 40.599983], [-74.196487, 40.601236], [-74.19606, 40.601269], [-74.195834, 40.602301], [-74.1951, 40.601857], [-74.194357, 40.601115], [-74.190373, 40.602385], [-74.186247, 40.60192], [-74.184845, 40.602159], [-74.184039, 40.602687], [-74.17808, 40.599717], [-74.180271, 40.598162], [-74.178495, 40.59688], [-74.182229, 40.593679], [-74.182921, 40.59328], [-74.184139, 40.592081], [-74.18448, 40.59136], [-74.18537, 40.590908], [-74.186345, 40.589549], [-74.185216, 40.588933], [-74.18614, 40.58794], [-74.187008, 40.588411], [-74.190107, 40.585636], [-74.191576, 40.586626], [-74.192342, 40.585891], [-74.190579, 40.57692]]]]
    },
    "properties": {
      "neighbourhood": "Chelsea, Staten Island",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.999991, 40.717977], [-73.998636, 40.717077], [-73.997791, 40.716793], [-73.996478, 40.719048], [-73.994808, 40.718457], [-73.989155, 40.716708], [-73.9902, 40.714665], [-73.99012, 40.713382], [-73.992623, 40.713168], [-73.997994, 40.712722], [-73.998174, 40.713328], [-73.998086, 40.713426], [-73.998535, 40.713446], [-74.00045, 40.714365], [-74.000528, 40.71517], [-74.000789, 40.715291], [-73.99994, 40.716553], [-74.000796, 40.716907], [-74.001554, 40.717305], [-74.00208, 40.716731], [-74.003523, 40.717444], [-74.003533, 40.717449], [-74.001886, 40.719395], [-73.999991, 40.717977]]]]
    },
    "properties": {
      "neighbourhood": "Chinatown",
      "neighbourhood_group": "Manhattan"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.784572, 40.859715], [-73.784705, 40.859174], [-73.785004, 40.858963], [-73.785197, 40.858827], [-73.785259, 40.858987], [-73.786018, 40.859301], [-73.786571, 40.859232], [-73.787105, 40.858809], [-73.787432, 40.858935], [-73.786979, 40.859535], [-73.787108, 40.859719], [-73.786859, 40.860045], [-73.786213, 40.860165], [-73.784524, 40.860477], [-73.7844, 40.859766], [-73.784572, 40.859715]]]]
    },
    "properties": {
      "neighbourhood": "City Island",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.868064, 40.691182], [-73.867456, 40.688379], [-73.866598, 40.68527], [-73.866595, 40.685248], [-73.866295, 40.683189], [-73.866027, 40.681918], [-73.864101, 40.682373], [-73.863283, 40.679078], [-73.863282, 40.679073], [-73.862391, 40.679161], [-73.862346, 40.679165], [-73.861318, 40.675021], [-73.861319, 40.675021], [-73.863092, 40.675257], [-73.868868, 40.677156], [-73.872099, 40.677953], [-73.872878, 40.678303], [-73.874022, 40.6797], [-73.874964, 40.680321], [-73.876333, 40.680387], [-73.87637, 40.680387], [-73.880615, 40.679105], [-73.886019, 40.677578], [-73.887707, 40.677167], [-73.890335, 40.676612], [-73.893993, 40.676006], [-73.896838, 40.675739], [-73.899707, 40.675598], [-73.901637, 40.675636], [-73.903311, 40.675873], [-73.905225, 40.676046], [-73.908088, 40.67619], [-73.90786, 40.678134], [-73.905479, 40.680039], [-73.904052, 40.681466], [-73.902642, 40.680704], [-73.900439, 40.679547], [-73.898836, 40.679559], [-73.896696, 40.680394], [-73.896441, 40.682457], [-73.894523, 40.684929], [-73.893464, 40.683241], [-73.89024, 40.685087], [-73.888167, 40.68255], [-73.882189, 40.685346], [-73.875655, 40.688641], [-73.871419, 40.690404], [-73.868064, 40.691182]]]]
    },
    "properties": {
      "neighbourhood": "Cypress Hills",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.890347, 40.649034], [-73.890535, 40.649208], [-73.890597, 40.649213], [-73.890658, 40.649238], [-73.890708, 40.649269], [-73.890786, 40.649343], [-73.890853, 40.649374], [-73.890932, 40.649376], [-73.891003, 40.649351], [-73.89106, 40.649304], [-73.891118, 40.649225], [-73.8912, 40.649142], [-73.891191, 40.649067], [-73.891172, 40.64898], [-73.891083, 40.648793], [-73.890846, 40.648519], [-73.890545, 40.648281], [-73.889432, 40.647151], [-73.889351, 40.647035], [-73.889473, 40.646957], [-73.889489, 40.646934], [-73.889482, 40.646913], [-73.88941, 40.646798], [-73.888797, 40.64605], [-73.888761, 40.64607], [-73.889309, 40.646746], [-73.889414, 40.646893], [-73.889422, 40.646916], [-73.889414, 40.646938], [-73.889376, 40.646975], [-73.889311, 40.647015], [-73.889188, 40.64708], [-73.889132, 40.647088], [-73.889095, 40.647071], [-73.88906, 40.647044], [-73.889045, 40.647047], [-73.889049, 40.647085], [-73.888986, 40.647163], [-73.888896, 40.647219], [-73.888865, 40.64722], [-73.888781, 40.647194], [-73.888761, 40.647181], [-73.888734, 40.647149], [-73.888723, 40.647125], [-73.888691, 40.647096], [-73.888641, 40.64708], [-73.88861, 40.647081], [-73.888587, 40.647094], [-73.888582, 40.64711], [-73.888588, 40.647136], [-73.888606, 40.647153], [-73.888626, 40.647163], [-73.888643, 40.647185], [-73.888636, 40.647216], [-73.888606, 40.647245], [-73.888578, 40.647331], [-73.888516, 40.647361], [-73.888463, 40.647363], [-73.888445, 40.647358], [-73.8884, 40.647314], [-73.888376, 40.647261], [-73.888353, 40.647249], [-73.888325, 40.647214], [-73.888304, 40.647161], [-73.888267, 40.647144], [-73.888201, 40.647141], [-73.888186, 40.647081], [-73.888184, 40.647034], [-73.88819, 40.646979], [-73.888209, 40.646925], [-73.888204, 40.646886], [-73.888186, 40.646857], [-73.888176, 40.646809], [-73.88819, 40.646774], [-73.888227, 40.646745], [-73.888292, 40.646719], [-73.888353, 40.646708], [-73.888405, 40.646714], [-73.88845, 40.646729], [-73.888497, 40.646757], [-73.888536, 40.646788], [-73.88854, 40.646824], [-73.888533, 40.646862], [-73.88851, 40.646881], [-73.888468, 40.6469], [-73.88845, 40.646905], [-73.888445, 40.646918], [-73.88846, 40.646955], [-73.888485, 40.646958], [-73.888535, 40.646968], [-73.888579, 40.646964], [-73.888616, 40.646946], [-73.88864, 40.646911], [-73.888654, 40.646885], [-73.888655, 40.64683], [-73.888642, 40.646785], [-73.888599, 40.646712], [-73.8885, 40.646664], [-73.88843, 40.646647], [-73.888355, 40.646644], [-73.888289, 40.646658], [-73.888228, 40.646653], [-73.888139, 40.646644], [-73.888103, 40.64664], [-73.888081, 40.646621], [-73.888066, 40.646589], [-73.888057, 40.646534], [-73.888064, 40.646516], [-73.888067, 40.6463], [-73.888073, 40.646283], [-73.888088, 40.646252], [-73.888094, 40.646213], [-73.88821, 40.646113], [-73.888273, 40.646085], [-73.88829, 40.646066], [-73.88829, 40.646044], [-73.888263, 40.64606], [-73.888224, 40.646026], [-73.888256, 40.646014], [-73.888241, 40.646006], [-73.888211, 40.646003], [-73.888075, 40.646035], [-73.888029, 40.646041], [-73.888001, 40.646028], [-73.887929, 40.645948], [-73.887872, 40.645912], [-73.887741, 40.645741], [-73.88775, 40.645715], [-73.887715, 40.645712], [-73.887629, 40.645625], [-73.887416, 40.645364], [-73.88741, 40.645329], [-73.887454, 40.645309], [-73.88748, 40.645306], [-73.887507, 40.645317], [-73.887502, 40.645279], [-73.887517, 40.645265], [-73.887826, 40.645128], [-73.887887, 40.645096], [-73.887917, 40.645068], [-73.887926, 40.645066], [-73.887965, 40.645127], [-73.887989, 40.645133], [-73.888006, 40.645155], [-73.888025, 40.645158], [-73.888068, 40.64517], [-73.888084, 40.645164], [-73.888084, 40.645151], [-73.887927, 40.645005], [-73.887913, 40.645003], [-73.887845, 40.645035], [-73.887735, 40.645043], [-73.887672, 40.645066], [-73.887369, 40.645224], [-73.887344, 40.645224], [-73.887269, 40.645166], [-73.887245, 40.645106], [-73.887199, 40.645078], [-73.887184, 40.645053], [-73.887187, 40.645014], [-73.887174, 40.64498], [-73.887112, 40.644945], [-73.887092, 40.644919], [-73.887091, 40.644868], [-73.887062, 40.644767], [-73.887015, 40.644728], [-73.886985, 40.644677], [-73.886916, 40.644525], [-73.886912, 40.644474], [-73.886872, 40.644445], [-73.886803, 40.64444], [-73.886784, 40.644446], [-73.886775, 40.644465], [-73.886784, 40.644474], [-73.886794, 40.644498], [-73.886796, 40.64452], [-73.886785, 40.644522], [-73.886748, 40.644487], [-73.886683, 40.644421], [-73.886652, 40.644391], [-73.886639, 40.644382], [-73.886631, 40.644352], [-73.886617, 40.644345], [-73.886584, 40.644331], [-73.886581, 40.64433], [-73.88658, 40.644331], [-73.886549, 40.644312], [-73.886576, 40.644294], [-73.886542, 40.644232], [-73.886433, 40.644193], [-73.886372, 40.644137], [-73.886337, 40.64405], [-73.886305, 40.644006], [-73.886226, 40.643949], [-73.886247, 40.64384], [-73.886236, 40.643817], [-73.886137, 40.643794], [-73.88612, 40.643779], [-73.886098, 40.643748], [-73.886072, 40.643696], [-73.886025, 40.643661], [-73.885879, 40.64366], [-73.88585, 40.643652], [-73.885789, 40.643605], [-73.8857, 40.643576], [-73.884955, 40.643264], [-73.884692, 40.643121], [-73.884513, 40.643002], [-73.883736, 40.64245], [-73.880789, 40.639757], [-73.880551, 40.639159], [-73.879539, 40.638218], [-73.879355, 40.638179], [-73.879118, 40.638267], [-73.879051, 40.638436], [-73.878967, 40.63846], [-73.878874, 40.638439], [-73.878639, 40.638294], [-73.878437, 40.637949], [-73.878635, 40.637552], [-73.878467, 40.63749], [-73.877837, 40.636902], [-73.877144, 40.635976], [-73.877736, 40.635195], [-73.878206, 40.634573], [-73.879988, 40.633515], [-73.880376, 40.63298], [-73.881271, 40.632369], [-73.883014, 40.631626], [-73.883645, 40.630943], [-73.883769, 40.630222], [-73.883454, 40.629908], [-73.884047, 40.62956], [-73.883602, 40.629156], [-73.882632, 40.628274], [-73.883692, 40.627559], [-73.884558, 40.628323], [-73.88513, 40.628827], [-73.885722, 40.628447], [-73.886041, 40.628697], [-73.887527, 40.628332], [-73.890487, 40.626225], [-73.890594, 40.626105], [-73.890636, 40.626039], [-73.890694, 40.625901], [-73.890717, 40.625757], [-73.890714, 40.625684], [-73.890683, 40.625541], [-73.890699, 40.625449], [-73.890724, 40.625358], [-73.890757, 40.625269], [-73.890798, 40.625182], [-73.890905, 40.625016], [-73.891041, 40.624863], [-73.891205, 40.624727], [-73.891296, 40.624665], [-73.891494, 40.624558], [-73.891601, 40.624429], [-73.891714, 40.624304], [-73.891835, 40.624182], [-73.891961, 40.624063], [-73.892094, 40.623949], [-73.892232, 40.623839], [-73.892377, 40.623733], [-73.892526, 40.623632], [-73.892681, 40.623535], [-73.892841, 40.623443], [-73.893006, 40.623356], [-73.893083, 40.623362], [-73.89313, 40.62341], [-73.893298, 40.623442], [-73.893512, 40.623378], [-73.893591, 40.62339], [-73.894157, 40.623164], [-73.894924, 40.622886], [-73.895158, 40.622776], [-73.895268, 40.622713], [-73.89547, 40.622571], [-73.895774, 40.622519], [-73.895941, 40.622547], [-73.895993, 40.622583], [-73.896019, 40.622615], [-73.895962, 40.622663], [-73.895967, 40.622703], [-73.896025, 40.622747], [-73.896072, 40.622774], [-73.901519, 40.625099], [-73.900588, 40.62634], [-73.915597, 40.633029], [-73.916248, 40.633621], [-73.918586, 40.632057], [-73.920159, 40.633316], [-73.922616, 40.633224], [-73.922855, 40.635564], [-73.919197, 40.637481], [-73.919754, 40.642908], [-73.913746, 40.647167], [-73.908419, 40.650595], [-73.906247, 40.652028], [-73.902162, 40.654676], [-73.900612, 40.655982], [-73.899861, 40.657296], [-73.899041, 40.657372], [-73.89788, 40.653354], [-73.895206, 40.654488], [-73.892743, 40.651353], [-73.891252, 40.650026], [-73.890347, 40.649034]]]]
    },
    "properties": {
      "neighbourhood": "Canarsie",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.991332, 40.685448], [-73.98914, 40.684594], [-73.994596, 40.676572], [-73.99646, 40.677457], [-73.99896, 40.67218], [-74.003414, 40.679705], [-74.000891, 40.6853], [-73.995232, 40.683741], [-73.99393, 40.686453], [-73.991332, 40.685448]]]]
    },
    "properties": {
      "neighbourhood": "Carroll Gardens",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.855315, 40.814412], [-73.85538, 40.814289], [-73.855848, 40.815797], [-73.855517, 40.815833], [-73.856197, 40.817917], [-73.857202, 40.822155], [-73.842898, 40.824083], [-73.843585, 40.827003], [-73.842317, 40.827185], [-73.842206, 40.82687], [-73.842027, 40.826547], [-73.840868, 40.824154], [-73.84045, 40.823346], [-73.84042, 40.823269], [-73.840432, 40.823113], [-73.840466, 40.82308], [-73.840121, 40.822396], [-73.840018, 40.82219], [-73.839829, 40.821572], [-73.839881, 40.820897], [-73.840101, 40.820323], [-73.839967, 40.820179], [-73.839999, 40.819935], [-73.840146, 40.819819], [-73.840289, 40.819808], [-73.840232, 40.819736], [-73.840285, 40.819626], [-73.840365, 40.819578], [-73.840844, 40.819355], [-73.841045, 40.81923], [-73.841567, 40.81894], [-73.841987, 40.818774], [-73.842094, 40.81806], [-73.842311, 40.817621], [-73.84259, 40.817209], [-73.842892, 40.81673], [-73.843064, 40.816559], [-73.843043, 40.816377], [-73.843122, 40.816279], [-73.84317, 40.816051], [-73.843332, 40.815845], [-73.84358, 40.815468], [-73.843772, 40.815139], [-73.844179, 40.814187], [-73.844387, 40.813645], [-73.845207, 40.811887], [-73.84528, 40.811778], [-73.845368, 40.811751], [-73.845517, 40.811718], [-73.845766, 40.811582], [-73.846173, 40.810677], [-73.846889, 40.810521], [-73.847197, 40.81058], [-73.847468, 40.810904], [-73.848215, 40.812463], [-73.849386, 40.813237], [-73.850411, 40.813584], [-73.850602, 40.81393], [-73.851142, 40.814393], [-73.851145, 40.814397], [-73.852468, 40.814279], [-73.852424, 40.81442], [-73.852621, 40.814506], [-73.852794, 40.814435], [-73.852912, 40.814501], [-73.852819, 40.814335], [-73.85265, 40.814363], [-73.852639, 40.814239], [-73.852613, 40.813963], [-73.852886, 40.813882], [-73.852942, 40.81382], [-73.852943, 40.81375], [-73.852869, 40.813693], [-73.853017, 40.813664], [-73.853369, 40.813594], [-73.853744, 40.813646], [-73.854347, 40.813864], [-73.854842, 40.814092], [-73.855147, 40.814369], [-73.855315, 40.814412]]]]
    },
    "properties": {
      "neighbourhood": "Castle Hill",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.110015, 40.620688], [-74.107722, 40.619677], [-74.1058, 40.618829], [-74.103511, 40.616414], [-74.10209, 40.6146], [-74.099623, 40.612635], [-74.09935, 40.612419], [-74.099068, 40.612015], [-74.09818, 40.610742], [-74.097658, 40.610503], [-74.10535, 40.610215], [-74.10667, 40.610418], [-74.109783, 40.610254], [-74.10998, 40.610456], [-74.11125, 40.610759], [-74.11438, 40.611193], [-74.116756, 40.610814], [-74.11676, 40.61087], [-74.119672, 40.610348], [-74.119837, 40.610322], [-74.119909, 40.610306], [-74.12743, 40.608615], [-74.136437, 40.607791], [-74.143992, 40.607741], [-74.145868, 40.607921], [-74.14721, 40.608259], [-74.14697, 40.610151], [-74.14602, 40.610344], [-74.13604, 40.612262], [-74.13072, 40.612558], [-74.131258, 40.617578], [-74.132076, 40.622702], [-74.13192, 40.624546], [-74.13131, 40.626328], [-74.122162, 40.627477], [-74.121257, 40.627823], [-74.120129, 40.626536], [-74.11846, 40.625269], [-74.11331, 40.623042], [-74.111534, 40.621603], [-74.111239, 40.621425], [-74.110575, 40.621025], [-74.110015, 40.620688]]]]
    },
    "properties": {
      "neighbourhood": "Castleton Corners",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.100345, 40.579728], [-74.10167, 40.578623], [-74.105646, 40.574559], [-74.105678, 40.574527], [-74.105833, 40.574373], [-74.114826, 40.579181], [-74.114235, 40.579738], [-74.112987, 40.580819], [-74.111276, 40.581792], [-74.109248, 40.582679], [-74.107974, 40.583715], [-74.107974, 40.583715], [-74.100345, 40.579728]]]]
    },
    "properties": {
      "neighbourhood": "Grant City",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.217537, 40.555073], [-74.217209, 40.554715], [-74.21784, 40.554432], [-74.21777, 40.553245], [-74.221315, 40.550253], [-74.220544, 40.548324], [-74.22188, 40.54628], [-74.223956, 40.540778], [-74.224397, 40.537318], [-74.224583, 40.537017], [-74.22414, 40.532292], [-74.224846, 40.5324], [-74.225693, 40.529911], [-74.226939, 40.528117], [-74.227336, 40.527828], [-74.227581, 40.527776], [-74.227853, 40.527631], [-74.228563, 40.527566], [-74.242564, 40.528411], [-74.24251, 40.528446], [-74.242467, 40.528847], [-74.242455, 40.528955], [-74.242408, 40.529041], [-74.242188, 40.529438], [-74.24222, 40.529653], [-74.242245, 40.529823], [-74.242089, 40.530081], [-74.241507, 40.531041], [-74.241511, 40.531057], [-74.241719, 40.53161], [-74.241668, 40.531923], [-74.241811, 40.532563], [-74.242125, 40.532574], [-74.242178, 40.532576], [-74.242236, 40.53303], [-74.242282, 40.533387], [-74.241965, 40.533634], [-74.242046, 40.534346], [-74.242366, 40.534734], [-74.24258, 40.534768], [-74.242858, 40.535353], [-74.243663, 40.536075], [-74.244125, 40.536196], [-74.243977, 40.53646], [-74.244148, 40.536881], [-74.244588, 40.536933], [-74.244937, 40.536664], [-74.245337, 40.536906], [-74.245261, 40.537152], [-74.244801, 40.537409], [-74.244443, 40.538067], [-74.245271, 40.539242], [-74.245602, 40.54095], [-74.245993, 40.541279], [-74.246486, 40.542213], [-74.247678, 40.543125], [-74.247922, 40.543049], [-74.248035, 40.543093], [-74.247706, 40.543524], [-74.24762, 40.543509], [-74.246184, 40.545634], [-74.245578, 40.546113], [-74.243638, 40.547666], [-74.243602, 40.547638], [-74.243366, 40.547809], [-74.243402, 40.547836], [-74.243363, 40.547865], [-74.243299, 40.547828], [-74.243341, 40.547799], [-74.24335, 40.547804], [-74.243584, 40.547624], [-74.242936, 40.547113], [-74.242683, 40.547056], [-74.242203, 40.546949], [-74.242151, 40.546969], [-74.240392, 40.547663], [-74.238372, 40.549142], [-74.23788, 40.549783], [-74.23762, 40.550123], [-74.236416, 40.550509], [-74.236175, 40.551427], [-74.236521, 40.552021], [-74.236416, 40.552328], [-74.234899, 40.553005], [-74.234484, 40.552912], [-74.234139, 40.552772], [-74.233565, 40.552469], [-74.233324, 40.552509], [-74.232291, 40.553364], [-74.232272, 40.553406], [-74.231933, 40.55415], [-74.23071, 40.555558], [-74.230555, 40.555564], [-74.23025, 40.555387], [-74.22968, 40.555521], [-74.22932, 40.555492], [-74.229347, 40.55571], [-74.229353, 40.555751], [-74.229052, 40.556107], [-74.228816, 40.556255], [-74.228332, 40.55639], [-74.228162, 40.556377], [-74.22796, 40.556281], [-74.227505, 40.556065], [-74.227437, 40.556039], [-74.227063, 40.556117], [-74.226405, 40.556256], [-74.226164, 40.556221], [-74.223903, 40.555897], [-74.223864, 40.556098], [-74.223443, 40.556047], [-74.223472, 40.555946], [-74.223719, 40.555981], [-74.223757, 40.555981], [-74.223774, 40.555965], [-74.223786, 40.55588], [-74.223161, 40.555787], [-74.222972, 40.555503], [-74.222575, 40.555406], [-74.222422, 40.555479], [-74.222371, 40.555487], [-74.221799, 40.555417], [-74.221697, 40.555503], [-74.221654, 40.555589], [-74.221603, 40.555636], [-74.221588, 40.555646], [-74.22157, 40.555649], [-74.221545, 40.555634], [-74.221499, 40.555592], [-74.221494, 40.555562], [-74.221453, 40.555529], [-74.221455, 40.555482], [-74.221462, 40.555451], [-74.221454, 40.555413], [-74.221432, 40.555379], [-74.221401, 40.555364], [-74.221347, 40.555358], [-74.221299, 40.555366], [-74.221255, 40.555388], [-74.221214, 40.555431], [-74.221207, 40.555464], [-74.221183, 40.555683], [-74.22116, 40.5557], [-74.221045, 40.555704], [-74.220979, 40.555912], [-74.220943, 40.555938], [-74.220867, 40.55594], [-74.22082, 40.555932], [-74.220553, 40.555885], [-74.220455, 40.555775], [-74.220297, 40.555598], [-74.220219, 40.555473], [-74.220185, 40.555426], [-74.220106, 40.554929], [-74.219744, 40.554613], [-74.219081, 40.554847], [-74.21909, 40.554928], [-74.219128, 40.554975], [-74.219173, 40.555071], [-74.219235, 40.555118], [-74.219258, 40.555156], [-74.219198, 40.555398], [-74.21921, 40.555456], [-74.219295, 40.555489], [-74.21931, 40.555512], [-74.219321, 40.555614], [-74.219337, 40.555691], [-74.219286, 40.555795], [-74.219217, 40.555797], [-74.219182, 40.555753], [-74.219181, 40.555656], [-74.219189, 40.555566], [-74.219169, 40.555517], [-74.219136, 40.555531], [-74.219092, 40.555529], [-74.219075, 40.555507], [-74.219071, 40.555442], [-74.219068, 40.555353], [-74.21899, 40.555047], [-74.218958, 40.554858], [-74.218914, 40.554778], [-74.218781, 40.554672], [-74.218593, 40.554674], [-74.218533, 40.554739], [-74.218565, 40.55482], [-74.218536, 40.554933], [-74.218819, 40.555875], [-74.218754, 40.555893], [-74.218802, 40.555955], [-74.21875, 40.556028], [-74.21867, 40.55605], [-74.218415, 40.555728], [-74.21827, 40.555691], [-74.218174, 40.555601], [-74.218122, 40.55551], [-74.218129, 40.555465], [-74.218071, 40.555293], [-74.217915, 40.555095], [-74.217753, 40.555005], [-74.217537, 40.555073]]]]
    },
    "properties": {
      "neighbourhood": "Charleston",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.993464, 40.75219], [-73.987937, 40.749855], [-73.987933, 40.749853], [-73.987973, 40.749467], [-73.991356, 40.744763], [-73.994211, 40.741013], [-73.989777, 40.739169], [-73.990371, 40.737098], [-73.991725, 40.735245], [-73.996797, 40.737364], [-74.00881, 40.742378], [-74.009161, 40.742509], [-74.009092, 40.742886], [-74.00924, 40.7429], [-74.00962, 40.742951], [-74.00962, 40.742952], [-74.009568, 40.743258], [-74.009585, 40.743264], [-74.012119, 40.743517], [-74.012137, 40.743532], [-74.012148, 40.743559], [-74.01209, 40.743898], [-74.012069, 40.743922], [-74.012021, 40.74394], [-74.009512, 40.743676], [-74.009489, 40.743696], [-74.009438, 40.743971], [-74.009394, 40.743969], [-74.0089, 40.743918], [-74.00873, 40.744882], [-74.009105, 40.744931], [-74.009612, 40.744998], [-74.009558, 40.745289], [-74.009917, 40.745327], [-74.009934, 40.745317], [-74.009998, 40.744955], [-74.009987, 40.744944], [-74.009869, 40.744934], [-74.009872, 40.744917], [-74.010168, 40.744942], [-74.010165, 40.744964], [-74.010054, 40.744954], [-74.010038, 40.744963], [-74.009974, 40.745323], [-74.009991, 40.745337], [-74.010469, 40.745387], [-74.010488, 40.745376], [-74.01055, 40.745013], [-74.010532, 40.745003], [-74.010417, 40.744994], [-74.010419, 40.744977], [-74.010764, 40.745005], [-74.010762, 40.745024], [-74.010606, 40.745011], [-74.010586, 40.74502], [-74.010531, 40.745382], [-74.010545, 40.745392], [-74.011104, 40.745448], [-74.011116, 40.745436], [-74.011172, 40.745078], [-74.011153, 40.745069], [-74.011043, 40.745061], [-74.011045, 40.745046], [-74.011388, 40.745073], [-74.011386, 40.745088], [-74.01123, 40.745076], [-74.011154, 40.745446], [-74.011167, 40.74546], [-74.01174, 40.74552], [-74.011795, 40.745155], [-74.011783, 40.745135], [-74.011669, 40.745127], [-74.011671, 40.745114], [-74.011836, 40.745126], [-74.011766, 40.745578], [-74.011783, 40.745602], [-74.011719, 40.74594], [-74.011711, 40.745961], [-74.011679, 40.745979], [-74.011635, 40.745978], [-74.010555, 40.745871], [-74.010551, 40.745903], [-74.010128, 40.745857], [-74.010128, 40.745842], [-74.009947, 40.745817], [-74.009948, 40.7458], [-74.009464, 40.74575], [-74.009366, 40.746337], [-74.011528, 40.746575], [-74.011562, 40.746587], [-74.011585, 40.746609], [-74.011582, 40.746636], [-74.011525, 40.746973], [-74.011479, 40.746985], [-74.011476, 40.746997], [-74.009243, 40.746763], [-74.009137, 40.74736], [-74.00956, 40.747403], [-74.00955, 40.747371], [-74.009552, 40.747339], [-74.009964, 40.747378], [-74.009958, 40.747412], [-74.009902, 40.747438], [-74.011357, 40.747592], [-74.011395, 40.747611], [-74.011407, 40.747631], [-74.011407, 40.747631], [-74.011347, 40.747976], [-74.011332, 40.748001], [-74.011304, 40.748015], [-74.011266, 40.748014], [-74.009058, 40.747786], [-74.008946, 40.748412], [-74.008979, 40.748413], [-74.008979, 40.7484], [-74.009071, 40.74841], [-74.009074, 40.748395], [-74.009415, 40.74843], [-74.009416, 40.748437], [-74.009523, 40.748448], [-74.009519, 40.748474], [-74.011167, 40.748645], [-74.011195, 40.748657], [-74.011216, 40.748678], [-74.011216, 40.748697], [-74.011149, 40.749026], [-74.011133, 40.749042], [-74.011109, 40.74905], [-74.011078, 40.749052], [-74.009994, 40.748937], [-74.009948, 40.748932], [-74.00956, 40.749935], [-74.009723, 40.749972], [-74.009728, 40.749964], [-74.010192, 40.750109], [-74.010808, 40.750319], [-74.010757, 40.750411], [-74.009683, 40.750063], [-74.009694, 40.750044], [-74.009542, 40.750001], [-74.009518, 40.750107], [-74.009253, 40.749985], [-74.009119, 40.750332], [-74.010674, 40.751072], [-74.010591, 40.751323], [-74.009001, 40.750648], [-74.008735, 40.751349], [-74.008731, 40.751466], [-74.008667, 40.751628], [-74.008533, 40.751884], [-74.00876, 40.751948], [-74.009078, 40.752069], [-74.010217, 40.752548], [-74.010125, 40.752669], [-74.008997, 40.752189], [-74.008915, 40.752164], [-74.008591, 40.752028], [-74.008581, 40.752044], [-74.009341, 40.752356], [-74.009328, 40.752374], [-74.008479, 40.752019], [-74.008426, 40.752158], [-74.009991, 40.752816], [-74.00992, 40.752912], [-74.009971, 40.752934], [-74.009919, 40.753004], [-74.009789, 40.752948], [-74.009888, 40.752814], [-74.009839, 40.752795], [-74.009831, 40.752803], [-74.00883, 40.75238], [-74.008836, 40.752372], [-74.008792, 40.752352], [-74.008688, 40.752494], [-74.008354, 40.752351], [-74.007811, 40.753779], [-74.007761, 40.75391], [-74.00762, 40.754281], [-74.007745, 40.754337], [-74.007597, 40.75453], [-74.007472, 40.754477], [-74.007285, 40.754736], [-74.007414, 40.754789], [-74.007272, 40.754986], [-74.007145, 40.754932], [-74.006394, 40.755972], [-74.005567, 40.757118], [-74.004927, 40.757023], [-73.993464, 40.75219]]]]
    },
    "properties": {
      "neighbourhood": "Chelsea",
      "neighbourhood_group": "Manhattan"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.997994, 40.712722], [-73.99777, 40.711971], [-74.002363, 40.711591], [-74.003337, 40.711236], [-74.003355, 40.71123], [-74.003662, 40.711487], [-74.005358, 40.712151], [-74.005769, 40.712007], [-74.008614, 40.711372], [-74.003533, 40.717449], [-74.003523, 40.717444], [-74.00208, 40.716731], [-74.001554, 40.717305], [-74.000796, 40.716907], [-73.99994, 40.716553], [-74.000789, 40.715291], [-74.000528, 40.71517], [-74.00045, 40.714365], [-73.998535, 40.713446], [-73.998086, 40.713426], [-73.998174, 40.713328], [-73.997994, 40.712722]]]]
    },
    "properties": {
      "neighbourhood": "Civic Center",
      "neighbourhood_group": "Manhattan"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.902706, 40.844568], [-73.90084, 40.844395], [-73.8975, 40.844016], [-73.897569, 40.843848], [-73.896566, 40.843664], [-73.901212, 40.835498], [-73.90343, 40.832216], [-73.907069, 40.833437], [-73.915871, 40.836393], [-73.915738, 40.836532], [-73.915328, 40.836954], [-73.915335, 40.836957], [-73.91478, 40.837517], [-73.91375, 40.838743], [-73.91314, 40.839814], [-73.912426, 40.84102], [-73.912194, 40.842393], [-73.911813, 40.843434], [-73.91132, 40.844783], [-73.911049, 40.845143], [-73.902706, 40.844568]]]]
    },
    "properties": {
      "neighbourhood": "Claremont Village",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.85538, 40.814289], [-73.85532, 40.814162], [-73.855049, 40.814073], [-73.85471, 40.813844], [-73.854431, 40.813718], [-73.853809, 40.813563], [-73.853468, 40.813478], [-73.853128, 40.813535], [-73.852914, 40.813605], [-73.852748, 40.813684], [-73.852661, 40.813718], [-73.852557, 40.813735], [-73.852064, 40.813726], [-73.851225, 40.813556], [-73.850992, 40.81348], [-73.84965, 40.812752], [-73.849368, 40.812544], [-73.849287, 40.812466], [-73.849145, 40.812299], [-73.849033, 40.812119], [-73.849038, 40.812049], [-73.849063, 40.811905], [-73.84924, 40.811498], [-73.849342, 40.811397], [-73.849384, 40.811287], [-73.849376, 40.81123], [-73.849316, 40.811169], [-73.849248, 40.811122], [-73.849213, 40.81106], [-73.849174, 40.810924], [-73.849195, 40.810861], [-73.849249, 40.81078], [-73.849454, 40.810506], [-73.84953, 40.810278], [-73.849577, 40.81023], [-73.849714, 40.810143], [-73.849798, 40.810033], [-73.849835, 40.809822], [-73.849909, 40.80966], [-73.849767, 40.809669], [-73.84976, 40.809645], [-73.849786, 40.80964], [-73.849792, 40.809652], [-73.849888, 40.809644], [-73.849884, 40.809629], [-73.849919, 40.809627], [-73.849956, 40.809555], [-73.849985, 40.809482], [-73.850017, 40.809331], [-73.85002, 40.809254], [-73.849848, 40.809267], [-73.849847, 40.809252], [-73.85003, 40.809235], [-73.850042, 40.809215], [-73.850043, 40.809154], [-73.850005, 40.809094], [-73.849996, 40.809077], [-73.84998, 40.809025], [-73.849975, 40.808988], [-73.84997, 40.808948], [-73.849967, 40.808876], [-73.849748, 40.808914], [-73.849729, 40.808875], [-73.849957, 40.80883], [-73.849951, 40.808715], [-73.849556, 40.808745], [-73.849551, 40.808721], [-73.849954, 40.808693], [-73.84997, 40.80865], [-73.849967, 40.808578], [-73.849943, 40.808533], [-73.849881, 40.808476], [-73.8499, 40.80841], [-73.849867, 40.808337], [-73.84979, 40.808307], [-73.849759, 40.808269], [-73.849702, 40.808178], [-73.849612, 40.808124], [-73.849166, 40.808225], [-73.849171, 40.808236], [-73.84876, 40.808337], [-73.84871, 40.80824], [-73.849127, 40.808133], [-73.849133, 40.808147], [-73.849522, 40.808055], [-73.849454, 40.808024], [-73.849445, 40.807949], [-73.849388, 40.807878], [-73.849276, 40.807832], [-73.848777, 40.807636], [-73.848416, 40.807369], [-73.84828, 40.806852], [-73.84838, 40.80636], [-73.848115, 40.806129], [-73.84785, 40.806076], [-73.847634, 40.806009], [-73.847536, 40.805926], [-73.847517, 40.805718], [-73.847488, 40.805449], [-73.847528, 40.80533], [-73.847668, 40.805166], [-73.847903, 40.805002], [-73.848076, 40.80492], [-73.848403, 40.804858], [-73.848555, 40.804794], [-73.848648, 40.804699], [-73.848701, 40.804732], [-73.848704, 40.804858], [-73.848743, 40.804896], [-73.8488, 40.804899], [-73.848836, 40.804845], [-73.848836, 40.804797], [-73.848871, 40.804772], [-73.848946, 40.804762], [-73.849031, 40.804797], [-73.849084, 40.804854], [-73.849119, 40.804926], [-73.849215, 40.805021], [-73.849334, 40.805051], [-73.849318, 40.804661], [-73.84941, 40.804668], [-73.849429, 40.80506], [-73.849821, 40.805094], [-73.849977, 40.80506], [-73.850063, 40.804866], [-73.850149, 40.804534], [-73.850198, 40.80451], [-73.850336, 40.804516], [-73.85065, 40.804478], [-73.851186, 40.804493], [-73.852049, 40.804599], [-73.854071, 40.804457], [-73.855389, 40.804464], [-73.85561, 40.80447], [-73.855854, 40.804515], [-73.856052, 40.804587], [-73.856626, 40.80483], [-73.856618, 40.804866], [-73.856578, 40.804933], [-73.856497, 40.804949], [-73.856398, 40.804947], [-73.855808, 40.804679], [-73.85569, 40.804677], [-73.855614, 40.804704], [-73.855564, 40.804785], [-73.855605, 40.805062], [-73.855898, 40.805169], [-73.856125, 40.805282], [-73.8563, 40.805282], [-73.856386, 40.805259], [-73.856524, 40.80524], [-73.856878, 40.805294], [-73.856949, 40.805275], [-73.857044, 40.805295], [-73.857121, 40.80533], [-73.857202, 40.805326], [-73.857245, 40.805307], [-73.85722, 40.805239], [-73.857128, 40.805185], [-73.856926, 40.805115], [-73.856676, 40.804995], [-73.856675, 40.804952], [-73.856834, 40.804909], [-73.857633, 40.805262], [-73.858127, 40.805467], [-73.858736, 40.805794], [-73.85889, 40.805889], [-73.858911, 40.805913], [-73.858912, 40.805954], [-73.858872, 40.80598], [-73.858826, 40.805993], [-73.858783, 40.805978], [-73.858747, 40.805945], [-73.858706, 40.805934], [-73.858622, 40.805871], [-73.858573, 40.805851], [-73.858506, 40.80582], [-73.858456, 40.805925], [-73.858444, 40.805952], [-73.858412, 40.80597], [-73.858315, 40.805999], [-73.858313, 40.806066], [-73.858382, 40.806149], [-73.858386, 40.806198], [-73.8584, 40.806252], [-73.858393, 40.806384], [-73.858393, 40.806408], [-73.858461, 40.806408], [-73.858503, 40.806424], [-73.858512, 40.806489], [-73.858505, 40.806544], [-73.858517, 40.806638], [-73.858612, 40.806698], [-73.858809, 40.806698], [-73.858935, 40.806674], [-73.859019, 40.806607], [-73.859085, 40.80648], [-73.859092, 40.806445], [-73.859083, 40.806409], [-73.859057, 40.806366], [-73.859047, 40.806343], [-73.859003, 40.806293], [-73.858974, 40.806236], [-73.858958, 40.806183], [-73.858897, 40.806076], [-73.858857, 40.806036], [-73.858853, 40.806008], [-73.858877, 40.805989], [-73.858909, 40.805981], [-73.858931, 40.805969], [-73.858972, 40.805966], [-73.859127, 40.806157], [-73.859195, 40.80627], [-73.859259, 40.806412], [-73.859366, 40.806676], [-73.85941, 40.80732], [-73.859402, 40.80753], [-73.859377, 40.807568], [-73.859313, 40.807572], [-73.859258, 40.807543], [-73.859253, 40.807359], [-73.859227, 40.807243], [-73.859223, 40.807034], [-73.859205, 40.80695], [-73.859159, 40.806879], [-73.859082, 40.80684], [-73.858828, 40.806841], [-73.858665, 40.806833], [-73.858665, 40.806833], [-73.85839, 40.808259], [-73.858775, 40.809234], [-73.858951, 40.810271], [-73.859001, 40.810198], [-73.859005, 40.810105], [-73.859033, 40.810046], [-73.859077, 40.809976], [-73.859152, 40.809951], [-73.85932, 40.809941], [-73.859472, 40.809905], [-73.859548, 40.809818], [-73.859666, 40.809807], [-73.860127, 40.809605], [-73.85996, 40.809481], [-73.859747, 40.809278], [-73.859625, 40.809146], [-73.859541, 40.80902], [-73.859406, 40.809008], [-73.859339, 40.809011], [-73.859329, 40.808997], [-73.859334, 40.808956], [-73.859414, 40.808865], [-73.859356, 40.808603], [-73.859336, 40.808472], [-73.859316, 40.808207], [-73.85933, 40.808184], [-73.859356, 40.808169], [-73.85939, 40.808164], [-73.859423, 40.808172], [-73.859447, 40.808192], [-73.859512, 40.808489], [-73.859703, 40.808952], [-73.859822, 40.809113], [-73.860142, 40.809392], [-73.86066, 40.809632], [-73.864403, 40.810276], [-73.867656, 40.810584], [-73.868689, 40.811854], [-73.86977, 40.813424], [-73.870778, 40.814487], [-73.871096, 40.814634], [-73.871108, 40.81464], [-73.871716, 40.814922], [-73.873585, 40.815393], [-73.87652, 40.816131], [-73.876732, 40.815386], [-73.874464, 40.814645], [-73.876708, 40.815228], [-73.878518, 40.815799], [-73.878704, 40.816279], [-73.881272, 40.818006], [-73.882909, 40.819536], [-73.883187, 40.820281], [-73.88055, 40.818468], [-73.879769, 40.819181], [-73.858264, 40.822015], [-73.857202, 40.822155], [-73.856197, 40.817917], [-73.855517, 40.815833], [-73.855848, 40.815797], [-73.85538, 40.814289]]]]
    },
    "properties": {
      "neighbourhood": "Clason Point",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.069244, 40.619412], [-74.070954, 40.620431], [-74.074979, 40.617349], [-74.078056, 40.615351], [-74.078756, 40.615925], [-74.081103, 40.617789], [-74.08721, 40.613307], [-74.087429, 40.614419], [-74.08778, 40.614943], [-74.08783, 40.615318], [-74.086571, 40.61717], [-74.086418, 40.61759], [-74.086187, 40.618221], [-74.08608, 40.618515], [-74.085998, 40.619146], [-74.085899, 40.619909], [-74.08533, 40.622771], [-74.077413, 40.625288], [-74.075031, 40.625603], [-74.07524, 40.626006], [-74.073976, 40.626114], [-74.074152, 40.626816], [-74.072766, 40.626968], [-74.072255, 40.624609], [-74.071831, 40.623963], [-74.071277, 40.623121], [-74.071062, 40.622793], [-74.07072, 40.622577], [-74.070087, 40.621608], [-74.07008, 40.621561], [-74.070065, 40.62151], [-74.070027, 40.621454], [-74.069983, 40.621418], [-74.069957, 40.621418], [-74.069904, 40.621439], [-74.06988, 40.621405], [-74.069882, 40.621396], [-74.069906, 40.621388], [-74.069898, 40.621351], [-74.069878, 40.621351], [-74.069858, 40.621319], [-74.06984, 40.621323], [-74.069771, 40.621269], [-74.069784, 40.621247], [-74.069755, 40.621208], [-74.069463, 40.621087], [-74.069213, 40.620903], [-74.067286, 40.619514], [-74.069244, 40.619412]]]]
    },
    "properties": {
      "neighbourhood": "Clifton",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.958396, 40.680798], [-73.958237, 40.680008], [-73.958292, 40.679831], [-73.964389, 40.681105], [-73.967477, 40.68175], [-73.970773, 40.69784], [-73.965418, 40.697628], [-73.961899, 40.698188], [-73.958396, 40.680798]]]]
    },
    "properties": {
      "neighbourhood": "Clinton Hill",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.820315, 40.885519], [-73.820081, 40.883753], [-73.821489, 40.878397], [-73.823297, 40.874445], [-73.823167, 40.869918], [-73.821581, 40.868745], [-73.821225, 40.869042], [-73.820814, 40.868792], [-73.821123, 40.86852], [-73.820146, 40.867735], [-73.81954, 40.865447], [-73.819841, 40.862759], [-73.819016, 40.862272], [-73.820631, 40.861339], [-73.827098, 40.859073], [-73.828015, 40.860703], [-73.829119, 40.861587], [-73.829297, 40.862243], [-73.831108, 40.865547], [-73.83305, 40.869235], [-73.834204, 40.87201], [-73.834854, 40.875387], [-73.83423, 40.877152], [-73.83356, 40.878445], [-73.83223, 40.880031], [-73.830513, 40.881459], [-73.828136, 40.882825], [-73.825394, 40.884064], [-73.823063, 40.88481], [-73.820315, 40.885519]]]]
    },
    "properties": {
      "neighbourhood": "Co-op City",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.992368, 40.689691], [-73.992623, 40.689161], [-73.991094, 40.688571], [-73.991509, 40.687959], [-73.990035, 40.687365], [-73.991332, 40.685448], [-73.99393, 40.686453], [-73.995232, 40.683741], [-74.000891, 40.6853], [-73.998631, 40.68992], [-73.998637, 40.690376], [-73.998845, 40.690467], [-73.999254, 40.691576], [-73.992368, 40.689691]]]]
    },
    "properties": {
      "neighbourhood": "Cobble Hill",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.832129, 40.79009], [-73.83143, 40.789386], [-73.830981, 40.789154], [-73.830779, 40.788361], [-73.82909, 40.788564], [-73.82892, 40.787692], [-73.82638, 40.78798], [-73.825453, 40.787109], [-73.825337, 40.786704], [-73.82445, 40.78674], [-73.8251, 40.783054], [-73.825696, 40.781691], [-73.825706, 40.78067], [-73.825992, 40.77982], [-73.825667, 40.77974], [-73.827178, 40.777046], [-73.827777, 40.775977], [-73.828099, 40.776031], [-73.828841, 40.774699], [-73.829014, 40.774864], [-73.830624, 40.77329], [-73.835398, 40.77036], [-73.835486, 40.770081], [-73.836909, 40.768866], [-73.83701, 40.768448], [-73.838742, 40.766211], [-73.839354, 40.765057], [-73.840022, 40.765316], [-73.839928, 40.76535], [-73.839578, 40.765252], [-73.839132, 40.765991], [-73.839527, 40.76614], [-73.839544, 40.766212], [-73.839698, 40.766393], [-73.839738, 40.766651], [-73.839734, 40.766734], [-73.839694, 40.766825], [-73.839561, 40.766917], [-73.83951, 40.766974], [-73.839498, 40.767017], [-73.839591, 40.767111], [-73.839683, 40.767105], [-73.839754, 40.76712], [-73.839789, 40.767051], [-73.83987, 40.767087], [-73.839939, 40.767064], [-73.83994, 40.767002], [-73.839884, 40.766952], [-73.839902, 40.766824], [-73.840008, 40.766623], [-73.840113, 40.766567], [-73.840224, 40.766529], [-73.84027, 40.766465], [-73.840274, 40.76638], [-73.840312, 40.766295], [-73.840572, 40.76627], [-73.840865, 40.766215], [-73.840848, 40.766162], [-73.84084, 40.766163], [-73.840836, 40.766148], [-73.84086, 40.766142], [-73.840871, 40.766157], [-73.840865, 40.766159], [-73.840889, 40.76621], [-73.841022, 40.766185], [-73.841008, 40.766117], [-73.841079, 40.76611], [-73.841085, 40.766165], [-73.841058, 40.766169], [-73.841056, 40.766179], [-73.841205, 40.76615], [-73.841203, 40.766097], [-73.841196, 40.766097], [-73.841201, 40.766081], [-73.841237, 40.766081], [-73.841237, 40.766094], [-73.841223, 40.766095], [-73.841227, 40.766146], [-73.841723, 40.766043], [-73.841701, 40.765988], [-73.841673, 40.765995], [-73.841662, 40.765968], [-73.841713, 40.765958], [-73.841745, 40.766038], [-73.841964, 40.76599], [-73.841984, 40.765965], [-73.841965, 40.765927], [-73.841916, 40.765933], [-73.841916, 40.765938], [-73.841873, 40.765949], [-73.841862, 40.765925], [-73.841903, 40.765914], [-73.841906, 40.765919], [-73.842319, 40.765821], [-73.842317, 40.765819], [-73.842357, 40.765813], [-73.842365, 40.765835], [-73.842329, 40.765845], [-73.842326, 40.765839], [-73.842273, 40.765856], [-73.84229, 40.765899], [-73.842318, 40.765911], [-73.842513, 40.765868], [-73.842493, 40.765802], [-73.842482, 40.765806], [-73.842473, 40.765785], [-73.842523, 40.765775], [-73.842528, 40.765793], [-73.842511, 40.765798], [-73.842536, 40.765863], [-73.842682, 40.765831], [-73.842959, 40.765855], [-73.84337, 40.765725], [-73.843468, 40.765653], [-73.8436, 40.765643], [-73.843706, 40.76568], [-73.843947, 40.765495], [-73.844523, 40.765453], [-73.844913, 40.765528], [-73.84528, 40.765666], [-73.845608, 40.76584], [-73.845788, 40.765937], [-73.846027, 40.766045], [-73.846141, 40.766116], [-73.8462, 40.766196], [-73.846522, 40.766296], [-73.84685, 40.766262], [-73.847013, 40.766268], [-73.847229, 40.766313], [-73.847805, 40.766773], [-73.848567, 40.768091], [-73.848481, 40.768173], [-73.848376, 40.768276], [-73.848291, 40.76839], [-73.8483, 40.76843], [-73.848345, 40.768482], [-73.848416, 40.768501], [-73.848484, 40.768525], [-73.848548, 40.768554], [-73.848609, 40.768586], [-73.848666, 40.768623], [-73.848834, 40.768752], [-73.849012, 40.769215], [-73.848923, 40.769325], [-73.848923, 40.769407], [-73.848718, 40.769548], [-73.848659, 40.769614], [-73.848607, 40.769703], [-73.8486, 40.769818], [-73.848729, 40.76999], [-73.84873, 40.769989], [-73.84873, 40.76999], [-73.848927, 40.769915], [-73.848818, 40.769738], [-73.849503, 40.769511], [-73.849534, 40.769517], [-73.849555, 40.769549], [-73.849555, 40.769563], [-73.849492, 40.769583], [-73.849555, 40.769668], [-73.849603, 40.769659], [-73.84963, 40.769661], [-73.849705, 40.76979], [-73.84969, 40.76981], [-73.849642, 40.769831], [-73.849696, 40.769931], [-73.84975, 40.769922], [-73.849774, 40.769936], [-73.849762, 40.769961], [-73.849075, 40.770193], [-73.848993, 40.770029], [-73.848992, 40.770029], [-73.848992, 40.770029], [-73.848726, 40.770106], [-73.848585, 40.770504], [-73.848598, 40.770635], [-73.84867, 40.770762], [-73.848905, 40.770982], [-73.84913, 40.771064], [-73.849338, 40.771188], [-73.849493, 40.771329], [-73.849614, 40.77149], [-73.849773, 40.771805], [-73.849823, 40.771858], [-73.849933, 40.771894], [-73.849942, 40.771927], [-73.850202, 40.771937], [-73.850203, 40.771946], [-73.850304, 40.771938], [-73.850311, 40.77192], [-73.850284, 40.771925], [-73.850291, 40.771892], [-73.850314, 40.771902], [-73.850338, 40.771744], [-73.850378, 40.771751], [-73.850368, 40.771815], [-73.851261, 40.771873], [-73.851267, 40.771799], [-73.851301, 40.771806], [-73.851269, 40.771985], [-73.85124, 40.77198], [-73.851254, 40.771891], [-73.850361, 40.771831], [-73.850361, 40.771831], [-73.85036, 40.771831], [-73.850334, 40.772018], [-73.850297, 40.77201], [-73.850297, 40.771966], [-73.850197, 40.771961], [-73.850195, 40.771972], [-73.849952, 40.771958], [-73.849963, 40.771996], [-73.849946, 40.772057], [-73.849869, 40.772183], [-73.850037, 40.772181], [-73.850041, 40.772225], [-73.84984, 40.772231], [-73.849728, 40.772413], [-73.849572, 40.772561], [-73.849186, 40.773105], [-73.848975, 40.773562], [-73.848961, 40.773743], [-73.849216, 40.77464], [-73.849132, 40.775093], [-73.848938, 40.77556], [-73.849115, 40.775788], [-73.849018, 40.777405], [-73.848957, 40.777891], [-73.848967, 40.778022], [-73.849019, 40.778083], [-73.849114, 40.778115], [-73.849288, 40.778141], [-73.849345, 40.778155], [-73.849366, 40.778169], [-73.849378, 40.778178], [-73.849435, 40.778246], [-73.849494, 40.778318], [-73.849525, 40.778377], [-73.849535, 40.778426], [-73.849536, 40.778426], [-73.849536, 40.778426], [-73.849692, 40.778428], [-73.849696, 40.778415], [-73.849746, 40.778414], [-73.849744, 40.778465], [-73.849535, 40.778458], [-73.849534, 40.778461], [-73.849527, 40.778503], [-73.849471, 40.778538], [-73.849451, 40.778581], [-73.849447, 40.778637], [-73.849468, 40.778664], [-73.849505, 40.778682], [-73.849577, 40.778699], [-73.849657, 40.778707], [-73.849739, 40.778718], [-73.849773, 40.778728], [-73.849794, 40.778741], [-73.849802, 40.778753], [-73.849801, 40.778767], [-73.849932, 40.778769], [-73.849931, 40.778797], [-73.8498, 40.778793], [-73.849796, 40.779075], [-73.849792, 40.779093], [-73.849788, 40.779103], [-73.849781, 40.779112], [-73.849772, 40.779121], [-73.849759, 40.779129], [-73.849731, 40.779142], [-73.849662, 40.779169], [-73.849644, 40.779174], [-73.849593, 40.779181], [-73.84957, 40.779193], [-73.849579, 40.77941], [-73.849583, 40.779423], [-73.849588, 40.779436], [-73.849604, 40.779458], [-73.849625, 40.779476], [-73.84964, 40.779483], [-73.849651, 40.779486], [-73.849669, 40.779487], [-73.849732, 40.779478], [-73.849743, 40.779477], [-73.849754, 40.779477], [-73.849739, 40.779401], [-73.85007, 40.779348], [-73.850091, 40.779351], [-73.850094, 40.779373], [-73.850129, 40.779367], [-73.850111, 40.779301], [-73.850672, 40.779194], [-73.850658, 40.77917], [-73.850967, 40.779111], [-73.850947, 40.779069], [-73.851187, 40.779015], [-73.851193, 40.779026], [-73.851476, 40.778964], [-73.851488, 40.778993], [-73.851204, 40.77905], [-73.85121, 40.779076], [-73.851013, 40.779122], [-73.851028, 40.779199], [-73.851051, 40.779197], [-73.851078, 40.779298], [-73.851051, 40.779302], [-73.851039, 40.77928], [-73.850947, 40.779293], [-73.850949, 40.779326], [-73.850744, 40.779354], [-73.850736, 40.779324], [-73.850157, 40.779433], [-73.850139, 40.779391], [-73.850111, 40.7794], [-73.850123, 40.779428], [-73.850037, 40.779449], [-73.849792, 40.779498], [-73.849817, 40.77963], [-73.849879, 40.779626], [-73.849875, 40.779615], [-73.850005, 40.779604], [-73.850007, 40.779617], [-73.852353, 40.779481], [-73.852321, 40.779169], [-73.852357, 40.779169], [-73.852387, 40.779529], [-73.852362, 40.77953], [-73.852358, 40.779497], [-73.849821, 40.779651], [-73.849844, 40.779775], [-73.84984, 40.779777], [-73.849832, 40.779778], [-73.849814, 40.779777], [-73.849806, 40.779778], [-73.849796, 40.77978], [-73.84977, 40.779804], [-73.849754, 40.779819], [-73.849722, 40.779842], [-73.849689, 40.779857], [-73.849664, 40.779863], [-73.849619, 40.779863], [-73.849586, 40.779866], [-73.849562, 40.779879], [-73.84955, 40.7799], [-73.849548, 40.779915], [-73.849549, 40.77993], [-73.849553, 40.779962], [-73.849555, 40.779971], [-73.849555, 40.779979], [-73.849553, 40.77999], [-73.849735, 40.779996], [-73.849739, 40.78004], [-73.84974, 40.78004], [-73.850315, 40.780032], [-73.850315, 40.780042], [-73.850374, 40.780035], [-73.850376, 40.78001], [-73.850416, 40.780011], [-73.850418, 40.780035], [-73.85045, 40.780034], [-73.850457, 40.779888], [-73.850482, 40.779888], [-73.850484, 40.779962], [-73.851623, 40.779939], [-73.851636, 40.779869], [-73.851689, 40.779868], [-73.85167, 40.780035], [-73.851623, 40.780032], [-73.851625, 40.779958], [-73.850486, 40.779978], [-73.850475, 40.780053], [-73.85042, 40.780056], [-73.850418, 40.780078], [-73.850368, 40.78008], [-73.850366, 40.780058], [-73.849493, 40.780065], [-73.849488, 40.780094], [-73.849512, 40.780136], [-73.849565, 40.780192], [-73.849582, 40.780216], [-73.849589, 40.780233], [-73.849591, 40.780271], [-73.849586, 40.780315], [-73.849623, 40.780554], [-73.84964, 40.78057], [-73.849662, 40.780584], [-73.849679, 40.780591], [-73.8497, 40.780594], [-73.849751, 40.780592], [-73.849769, 40.780594], [-73.849787, 40.780599], [-73.849802, 40.780613], [-73.849815, 40.780642], [-73.849819, 40.780692], [-73.849811, 40.780889], [-73.849888, 40.781089], [-73.85094, 40.781081], [-73.850935, 40.78112], [-73.849887, 40.781122], [-73.849886, 40.781122], [-73.849845, 40.781593], [-73.849835, 40.7816], [-73.849813, 40.781609], [-73.849767, 40.781618], [-73.849736, 40.78162], [-73.849584, 40.781629], [-73.849288, 40.781628], [-73.849201, 40.781632], [-73.849186, 40.781642], [-73.84919, 40.781675], [-73.849235, 40.781702], [-73.849298, 40.781715], [-73.849442, 40.781733], [-73.849501, 40.781757], [-73.849525, 40.781781], [-73.849541, 40.78181], [-73.849547, 40.781841], [-73.849547, 40.781856], [-73.849541, 40.781888], [-73.849522, 40.781932], [-73.849493, 40.781968], [-73.849454, 40.781997], [-73.849362, 40.782046], [-73.84927, 40.782122], [-73.849237, 40.782186], [-73.849246, 40.782256], [-73.849329, 40.782307], [-73.849565, 40.782364], [-73.849994, 40.782405], [-73.85023, 40.782416], [-73.850241, 40.782421], [-73.85025, 40.78243], [-73.850264, 40.782451], [-73.85027, 40.782456], [-73.850279, 40.782459], [-73.850285, 40.782459], [-73.850299, 40.782456], [-73.850317, 40.782444], [-73.85034, 40.782414], [-73.850359, 40.7824], [-73.850386, 40.782391], [-73.850402, 40.782389], [-73.850442, 40.782366], [-73.850484, 40.782356], [-73.850528, 40.782354], [-73.851167, 40.782368], [-73.851205, 40.78238], [-73.85123, 40.782403], [-73.852096, 40.782342], [-73.85315, 40.782324], [-73.853223, 40.782061], [-73.85368, 40.781986], [-73.854964, 40.781942], [-73.855058, 40.781946], [-73.855167, 40.781954], [-73.855281, 40.781975], [-73.85535, 40.782012], [-73.855388, 40.782076], [-73.855395, 40.782194], [-73.855449, 40.783143], [-73.855735, 40.783157], [-73.855735, 40.783192], [-73.855819, 40.783194], [-73.855876, 40.78331], [-73.855875, 40.783198], [-73.855927, 40.783196], [-73.855933, 40.783318], [-73.856451, 40.783323], [-73.856451, 40.783323], [-73.856452, 40.783323], [-73.85644, 40.783158], [-73.856677, 40.78315], [-73.856653, 40.782979], [-73.856621, 40.782979], [-73.856619, 40.782939], [-73.856609, 40.78294], [-73.856603, 40.782892], [-73.85665, 40.782892], [-73.856653, 40.782938], [-73.856681, 40.78294], [-73.856703, 40.783097], [-73.856704, 40.783149], [-73.856744, 40.783248], [-73.85684, 40.783371], [-73.856841, 40.783371], [-73.85691, 40.783388], [-73.857031, 40.783371], [-73.857279, 40.783361], [-73.857339, 40.783371], [-73.85742, 40.783402], [-73.857463, 40.783427], [-73.857517, 40.783473], [-73.857534, 40.783496], [-73.857611, 40.783612], [-73.857772, 40.783656], [-73.857915, 40.783676], [-73.857973, 40.783687], [-73.85803, 40.783703], [-73.858082, 40.783724], [-73.858103, 40.783753], [-73.858115, 40.783788], [-73.858159, 40.783933], [-73.858172, 40.784007], [-73.85817, 40.784049], [-73.858124, 40.784188], [-73.858098, 40.784223], [-73.858046, 40.784251], [-73.858003, 40.784265], [-73.857944, 40.784266], [-73.857906, 40.784278], [-73.857883, 40.784294], [-73.85783, 40.784442], [-73.857847, 40.784509], [-73.857936, 40.784502], [-73.858005, 40.784651], [-73.857994, 40.784651], [-73.857983, 40.784651], [-73.857976, 40.784652], [-73.85797, 40.784656], [-73.857969, 40.784664], [-73.857976, 40.784678], [-73.858165, 40.784839], [-73.85834, 40.785005], [-73.858526, 40.785229], [-73.858527, 40.785229], [-73.858527, 40.785229], [-73.85899, 40.785204], [-73.859056, 40.785432], [-73.859095, 40.785439], [-73.859092, 40.785421], [-73.859081, 40.785421], [-73.858991, 40.785105], [-73.859036, 40.785093], [-73.859121, 40.785413], [-73.859105, 40.785413], [-73.85911, 40.785443], [-73.859217, 40.785465], [-73.859216, 40.785478], [-73.859237, 40.785479], [-73.85924, 40.785469], [-73.859529, 40.785531], [-73.859524, 40.785562], [-73.859416, 40.78554], [-73.859417, 40.785528], [-73.859393, 40.785524], [-73.85939, 40.785535], [-73.859066, 40.785467], [-73.859089, 40.785532], [-73.85899, 40.785492], [-73.858991, 40.785492], [-73.858989, 40.785492], [-73.85894, 40.785568], [-73.858998, 40.785572], [-73.859026, 40.78558], [-73.859074, 40.785604], [-73.859111, 40.785638], [-73.859131, 40.785679], [-73.859134, 40.785709], [-73.859123, 40.785733], [-73.859106, 40.785748], [-73.859079, 40.785766], [-73.859043, 40.785779], [-73.859023, 40.785788], [-73.859012, 40.785801], [-73.859123, 40.78585], [-73.859103, 40.78588], [-73.859008, 40.785833], [-73.859013, 40.785864], [-73.859016, 40.785874], [-73.859027, 40.785895], [-73.859032, 40.785911], [-73.859031, 40.785931], [-73.859028, 40.785947], [-73.859021, 40.785965], [-73.859016, 40.785976], [-73.858998, 40.785996], [-73.858971, 40.786014], [-73.858911, 40.786041], [-73.858805, 40.786077], [-73.85871, 40.786105], [-73.858651, 40.786116], [-73.858612, 40.78613], [-73.858587, 40.786148], [-73.858572, 40.786183], [-73.858565, 40.786248], [-73.858578, 40.786302], [-73.858608, 40.786359], [-73.858641, 40.786405], [-73.858669, 40.786433], [-73.858689, 40.786462], [-73.858694, 40.786476], [-73.858697, 40.786488], [-73.858697, 40.786493], [-73.858696, 40.786499], [-73.858691, 40.786515], [-73.858683, 40.786531], [-73.858672, 40.786548], [-73.858609, 40.786624], [-73.858545, 40.786691], [-73.858471, 40.786757], [-73.85843, 40.786803], [-73.858387, 40.786825], [-73.858267, 40.786917], [-73.858234, 40.786957], [-73.858205, 40.786989], [-73.85817, 40.787025], [-73.858158, 40.787035], [-73.858144, 40.787044], [-73.858127, 40.787051], [-73.858112, 40.787057], [-73.858091, 40.787061], [-73.858069, 40.787063], [-73.858036, 40.787064], [-73.858, 40.787061], [-73.857962, 40.787053], [-73.857922, 40.787037], [-73.857863, 40.787009], [-73.85773, 40.786959], [-73.857685, 40.786949], [-73.857603, 40.786944], [-73.857574, 40.786941], [-73.857547, 40.786935], [-73.857525, 40.786926], [-73.857447, 40.786874], [-73.857361, 40.786831], [-73.857348, 40.786821], [-73.857243, 40.78673], [-73.857218, 40.786717], [-73.857168, 40.786706], [-73.857154, 40.786702], [-73.857123, 40.786691], [-73.85703, 40.786653], [-73.857009, 40.786647], [-73.856992, 40.786648], [-73.856949, 40.786668], [-73.85694, 40.78667], [-73.856936, 40.78667], [-73.856915, 40.78667], [-73.856866, 40.786667], [-73.856842, 40.786668], [-73.856811, 40.786673], [-73.856709, 40.786697], [-73.856659, 40.786715], [-73.856625, 40.786738], [-73.856584, 40.786806], [-73.85656, 40.786869], [-73.856521, 40.786941], [-73.856502, 40.786957], [-73.856486, 40.786959], [-73.856438, 40.786954], [-73.856385, 40.786964], [-73.856348, 40.786983], [-73.856321, 40.787011], [-73.856285, 40.787067], [-73.856199, 40.78715], [-73.856169, 40.78721], [-73.856176, 40.787437], [-73.856176, 40.787463], [-73.856172, 40.787493], [-73.856157, 40.787509], [-73.856139, 40.787516], [-73.856081, 40.787536], [-73.856057, 40.787553], [-73.855976, 40.787664], [-73.855957, 40.787675], [-73.85593, 40.78768], [-73.855739, 40.78769], [-73.855561, 40.787693], [-73.855397, 40.787691], [-73.855342, 40.787699], [-73.855299, 40.78771], [-73.855247, 40.787736], [-73.855222, 40.787742], [-73.855127, 40.787748], [-73.854915, 40.787764], [-73.854837, 40.787775], [-73.854765, 40.78778], [-73.85468, 40.787769], [-73.854018, 40.787764], [-73.853451, 40.787826], [-73.85332, 40.787852], [-73.853229, 40.78789], [-73.853139, 40.787955], [-73.853043, 40.788022], [-73.852995, 40.788064], [-73.852937, 40.788126], [-73.852842, 40.788211], [-73.852842, 40.788343], [-73.852889, 40.788346], [-73.852889, 40.788347], [-73.85289, 40.788347], [-73.853164, 40.788358], [-73.85329, 40.788354], [-73.853538, 40.788358], [-73.8537, 40.788339], [-73.853865, 40.788327], [-73.854153, 40.788315], [-73.854384, 40.78832], [-73.8545, 40.788353], [-73.854631, 40.788418], [-73.854693, 40.78847], [-73.854765, 40.788546], [-73.854792, 40.788584], [-73.854801, 40.788608], [-73.854802, 40.788619], [-73.854788, 40.788842], [-73.854775, 40.788956], [-73.854775, 40.789014], [-73.854773, 40.789036], [-73.854767, 40.789057], [-73.854751, 40.7891], [-73.854713, 40.789251], [-73.854701, 40.789293], [-73.854693, 40.789311], [-73.854674, 40.789348], [-73.854508, 40.790144], [-73.854496, 40.790209], [-73.854486, 40.790235], [-73.854471, 40.790259], [-73.854452, 40.790274], [-73.854435, 40.790282], [-73.852745, 40.791011], [-73.852689, 40.791055], [-73.852671, 40.791078], [-73.852652, 40.791122], [-73.852648, 40.791158], [-73.852647, 40.791189], [-73.852653, 40.791222], [-73.852681, 40.791289], [-73.852884, 40.791563], [-73.853717, 40.792269], [-73.853753, 40.792306], [-73.853769, 40.792336], [-73.853778, 40.792381], [-73.853779, 40.792421], [-73.853773, 40.792495], [-73.853697, 40.792752], [-73.853666, 40.792829], [-73.85363, 40.793098], [-73.853711, 40.793595], [-73.853741, 40.79384], [-73.853734, 40.793935], [-73.853684, 40.794018], [-73.853585, 40.794108], [-73.853532, 40.794139], [-73.853388, 40.794183], [-73.85304, 40.794264], [-73.852902, 40.794315], [-73.852765, 40.794389], [-73.852685, 40.794475], [-73.852637, 40.794542], [-73.852624, 40.794613], [-73.852623, 40.79475], [-73.852657, 40.794875], [-73.852659, 40.79492], [-73.85263, 40.794943], [-73.852593, 40.794936], [-73.852556, 40.794894], [-73.852532, 40.79479], [-73.852491, 40.794675], [-73.852427, 40.79461], [-73.852336, 40.794545], [-73.852255, 40.794513], [-73.852003, 40.794363], [-73.851591, 40.794087], [-73.85112, 40.793924], [-73.850798, 40.79381], [-73.850628, 40.793775], [-73.850007, 40.793601], [-73.849841, 40.793544], [-73.849623, 40.793466], [-73.849337, 40.793371], [-73.849062, 40.793363], [-73.849061, 40.793363], [-73.84906, 40.793363], [-73.848931, 40.793411], [-73.848862, 40.793469], [-73.848848, 40.793502], [-73.848858, 40.793591], [-73.84888, 40.793655], [-73.848901, 40.793668], [-73.849017, 40.793925], [-73.849077, 40.794145], [-73.849032, 40.794338], [-73.848963, 40.794408], [-73.848784, 40.794542], [-73.848771, 40.794617], [-73.848847, 40.794905], [-73.848872, 40.795027], [-73.848875, 40.795134], [-73.848846, 40.795229], [-73.848814, 40.795287], [-73.848709, 40.795416], [-73.848401, 40.795565], [-73.84782, 40.795785], [-73.847126, 40.795935], [-73.846609, 40.796027], [-73.846516, 40.796062], [-73.846378, 40.796142], [-73.846323, 40.796164], [-73.846245, 40.796162], [-73.84612, 40.796093], [-73.84604, 40.796038], [-73.845974, 40.796017], [-73.845885, 40.796014], [-73.845675, 40.796029], [-73.845621, 40.796029], [-73.845592, 40.796012], [-73.845595, 40.795983], [-73.845627, 40.795892], [-73.845616, 40.795846], [-73.845517, 40.795765], [-73.845285, 40.795443], [-73.845064, 40.795325], [-73.844984, 40.795265], [-73.844873, 40.795097], [-73.844801, 40.795058], [-73.844599, 40.794912], [-73.844598, 40.794912], [-73.844385, 40.79487], [-73.844079, 40.794875], [-73.843825, 40.794875], [-73.843547, 40.794914], [-73.843545, 40.794914], [-73.843433, 40.794948], [-73.843338, 40.795021], [-73.843324, 40.795069], [-73.843356, 40.795234], [-73.843364, 40.795346], [-73.843351, 40.795473], [-73.843306, 40.795501], [-73.843235, 40.795477], [-73.84318, 40.795434], [-73.843148, 40.795387], [-73.843111, 40.795264], [-73.843042, 40.795215], [-73.842895, 40.795183], [-73.842861, 40.795199], [-73.842849, 40.795213], [-73.842893, 40.795393], [-73.843281, 40.796168], [-73.843207, 40.796193], [-73.842809, 40.795418], [-73.842808, 40.795419], [-73.842808, 40.795418], [-73.842258, 40.795585], [-73.842921, 40.796904], [-73.842867, 40.796922], [-73.842167, 40.795613], [-73.842088, 40.795637], [-73.841979, 40.79564], [-73.841905, 40.795622], [-73.841837, 40.795589], [-73.841782, 40.795537], [-73.841687, 40.795409], [-73.841654, 40.795396], [-73.841587, 40.795401], [-73.841587, 40.795401], [-73.841586, 40.795401], [-73.841489, 40.795437], [-73.841427, 40.79549], [-73.841362, 40.79562], [-73.84135, 40.79574], [-73.841361, 40.795857], [-73.841493, 40.795982], [-73.841493, 40.795982], [-73.841493, 40.795982], [-73.841488, 40.796014], [-73.841443, 40.796045], [-73.841341, 40.796095], [-73.841307, 40.796138], [-73.841292, 40.796167], [-73.841306, 40.796201], [-73.841298, 40.79622], [-73.840603, 40.796803], [-73.840599, 40.796807], [-73.840138, 40.796879], [-73.840138, 40.796879], [-73.84044, 40.797638], [-73.840401, 40.797649], [-73.840415, 40.797678], [-73.839234, 40.797885], [-73.839209, 40.797844], [-73.838419, 40.798342], [-73.838428, 40.798376], [-73.837901, 40.798508], [-73.83787, 40.798442], [-73.83839, 40.798305], [-73.83919, 40.797777], [-73.840224, 40.797611], [-73.840259, 40.797589], [-73.839971, 40.796906], [-73.83997, 40.796906], [-73.83997, 40.796906], [-73.839036, 40.797052], [-73.838401, 40.796755], [-73.837362, 40.794264], [-73.837302, 40.79422], [-73.837084, 40.793903], [-73.837065, 40.793851], [-73.837071, 40.793799], [-73.837126, 40.793696], [-73.836633, 40.792516], [-73.836541, 40.792073], [-73.836532, 40.791743], [-73.836603, 40.791661], [-73.836715, 40.791583], [-73.836945, 40.791471], [-73.83706, 40.791438], [-73.837423, 40.791393], [-73.837518, 40.791325], [-73.837529, 40.791272], [-73.837521, 40.791227], [-73.837523, 40.791178], [-73.837559, 40.791109], [-73.837589, 40.79108], [-73.837629, 40.791057], [-73.837646, 40.791036], [-73.83764, 40.790997], [-73.837611, 40.790958], [-73.837552, 40.790908], [-73.837526, 40.790874], [-73.837515, 40.790853], [-73.837509, 40.790826], [-73.837513, 40.790811], [-73.837555, 40.790781], [-73.837561, 40.790769], [-73.837561, 40.790733], [-73.837557, 40.790699], [-73.837531, 40.790596], [-73.837506, 40.790538], [-73.837508, 40.790477], [-73.837504, 40.790462], [-73.83738, 40.790458], [-73.837378, 40.790488], [-73.837027, 40.790497], [-73.837027, 40.790473], [-73.836818, 40.79047], [-73.836814, 40.790434], [-73.837019, 40.790429], [-73.837013, 40.790409], [-73.837372, 40.790398], [-73.837372, 40.790436], [-73.837482, 40.790434], [-73.837414, 40.790359], [-73.83739, 40.790321], [-73.837387, 40.790302], [-73.837391, 40.79027], [-73.837408, 40.790214], [-73.83741, 40.790182], [-73.837397, 40.790103], [-73.837374, 40.789903], [-73.837389, 40.789836], [-73.837384, 40.789813], [-73.83737, 40.789797], [-73.83734, 40.78978], [-73.837279, 40.789731], [-73.837249, 40.789678], [-73.837236, 40.789635], [-73.837231, 40.789603], [-73.837234, 40.789575], [-73.837239, 40.789528], [-73.837236, 40.789495], [-73.837225, 40.789478], [-73.837193, 40.789453], [-73.837184, 40.789444], [-73.837178, 40.789436], [-73.837175, 40.789427], [-73.837173, 40.789396], [-73.837174, 40.789364], [-73.837179, 40.789333], [-73.837188, 40.789304], [-73.837239, 40.789169], [-73.837272, 40.789064], [-73.83728, 40.789019], [-73.837281, 40.789013], [-73.837281, 40.789011], [-73.837281, 40.78901], [-73.83728, 40.78901], [-73.83728, 40.78901], [-73.83728, 40.78901], [-73.83728, 40.789009], [-73.83728, 40.789009], [-73.83728, 40.789009], [-73.83728, 40.78901], [-73.83728, 40.78901], [-73.837279, 40.78901], [-73.837279, 40.78901], [-73.837279, 40.789011], [-73.837278, 40.789013], [-73.837244, 40.789102], [-73.837184, 40.789246], [-73.837163, 40.789301], [-73.837142, 40.789374], [-73.83714, 40.789391], [-73.837147, 40.789432], [-73.837162, 40.789476], [-73.837168, 40.789495], [-73.837171, 40.789515], [-73.83717, 40.789532], [-73.837167, 40.789542], [-73.83716, 40.78955], [-73.837149, 40.789558], [-73.837133, 40.789564], [-73.837117, 40.789569], [-73.837097, 40.789573], [-73.837077, 40.789574], [-73.837059, 40.789573], [-73.837024, 40.789568], [-73.836953, 40.789546], [-73.836837, 40.789505], [-73.836378, 40.78946], [-73.836378, 40.78946], [-73.836377, 40.78946], [-73.835897, 40.789563], [-73.835787, 40.789575], [-73.835733, 40.789577], [-73.835658, 40.789573], [-73.835597, 40.789556], [-73.835555, 40.78953], [-73.83552, 40.789467], [-73.835499, 40.789403], [-73.835496, 40.789333], [-73.835483, 40.789296], [-73.835458, 40.78927], [-73.835419, 40.789247], [-73.835332, 40.789213], [-73.835125, 40.789172], [-73.834409, 40.789116], [-73.834208, 40.789093], [-73.834136, 40.789066], [-73.834087, 40.789033], [-73.834039, 40.788967], [-73.834012, 40.788903], [-73.833995, 40.788714], [-73.833901, 40.788584], [-73.833812, 40.788523], [-73.8336, 40.788492], [-73.833503, 40.788459], [-73.833457, 40.788458], [-73.833404, 40.788473], [-73.833309, 40.788512], [-73.833258, 40.788528], [-73.833183, 40.788528], [-73.833062, 40.788514], [-73.832929, 40.788518], [-73.832928, 40.788518], [-73.832842, 40.78856], [-73.832787, 40.788584], [-73.832539, 40.788616], [-73.832117, 40.788772], [-73.831936, 40.788939], [-73.831848, 40.789103], [-73.831801, 40.789178], [-73.831773, 40.789216], [-73.831742, 40.789234], [-73.831666, 40.789256], [-73.83161, 40.78926], [-73.831563, 40.789254], [-73.831527, 40.78924], [-73.831498, 40.789223], [-73.831473, 40.789204], [-73.831465, 40.789197], [-73.831458, 40.789188], [-73.831452, 40.789179], [-73.831447, 40.78917], [-73.831446, 40.789171], [-73.831445, 40.789171], [-73.831442, 40.789173], [-73.83144, 40.789176], [-73.831438, 40.789178], [-73.831436, 40.789181], [-73.831435, 40.789184], [-73.831435, 40.789187], [-73.831436, 40.78919], [-73.831437, 40.789193], [-73.831463, 40.789222], [-73.831487, 40.789237], [-73.831669, 40.789306], [-73.831688, 40.789311], [-73.831801, 40.789325], [-73.831863, 40.789343], [-73.831933, 40.789395], [-73.83195, 40.789415], [-73.831985, 40.789469], [-73.831992, 40.789512], [-73.831989, 40.789561], [-73.832103, 40.789842], [-73.832149, 40.790033], [-73.832129, 40.79009]]]]
    },
    "properties": {
      "neighbourhood": "College Point",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.963331, 40.675561], [-73.964389, 40.681105], [-73.958292, 40.679831], [-73.952432, 40.678611], [-73.908088, 40.67619], [-73.908195, 40.67538], [-73.91123, 40.67308], [-73.915035, 40.671503], [-73.92262, 40.668372], [-73.925606, 40.668514], [-73.925829, 40.666217], [-73.925453, 40.665905], [-73.93078, 40.663601], [-73.932619, 40.663514], [-73.939926, 40.6639], [-73.945463, 40.66423], [-73.960563, 40.66331], [-73.960952, 40.663306], [-73.96186, 40.663217], [-73.961258, 40.664802], [-73.962596, 40.67163], [-73.96277, 40.672651], [-73.963331, 40.675561]]]]
    },
    "properties": {
      "neighbourhood": "Crown Heights",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.001744, 40.692407], [-73.999254, 40.691576], [-73.998845, 40.690467], [-73.998637, 40.690376], [-73.998631, 40.68992], [-74.000891, 40.6853], [-74.003414, 40.679705], [-74.004473, 40.68099], [-74.005675, 40.68293], [-74.006831, 40.683622], [-74.00701, 40.683729], [-74.00756, 40.683737], [-74.009543, 40.681745], [-74.0123, 40.679731], [-74.013883, 40.6808], [-74.01439, 40.681341], [-74.015387, 40.681867], [-74.015201, 40.681979], [-74.015261, 40.682046], [-74.015321, 40.682111], [-74.01282, 40.683622], [-74.012624, 40.683469], [-74.012123, 40.682962], [-74.012135, 40.682906], [-74.014105, 40.681713], [-74.013609, 40.681222], [-74.013874, 40.68101], [-74.013018, 40.680412], [-74.009671, 40.683269], [-74.010086, 40.683655], [-74.010773, 40.684359], [-74.011783, 40.68376], [-74.011895, 40.683856], [-74.011933, 40.683888], [-74.012069, 40.684004], [-74.012176, 40.684095], [-74.010877, 40.684879], [-74.008354, 40.6864], [-74.008164, 40.686175], [-74.007982, 40.686276], [-74.007934, 40.686282], [-74.007887, 40.686246], [-74.007827, 40.686241], [-74.007768, 40.686249], [-74.007717, 40.686264], [-74.007545, 40.686318], [-74.00702, 40.686526], [-74.006441, 40.686288], [-74.005882, 40.686196], [-74.005846, 40.68628], [-74.00563, 40.686784], [-74.007068, 40.687176], [-74.007833, 40.687385], [-74.00742, 40.688206], [-74.005773, 40.687797], [-74.00503, 40.687612], [-74.004593, 40.688215], [-74.004997, 40.688328], [-74.006784, 40.688827], [-74.006365, 40.68967], [-74.004029, 40.68899], [-74.00382, 40.68893], [-74.003431, 40.689619], [-74.003493, 40.689635], [-74.005759, 40.690236], [-74.005342, 40.691092], [-74.004799, 40.690939], [-74.002976, 40.690427], [-74.002914, 40.690409], [-74.002462, 40.690279], [-74.001963, 40.690136], [-74.001853, 40.690388], [-74.000962, 40.690129], [-74.000699, 40.690612], [-74.002552, 40.691132], [-74.002768, 40.691193], [-74.004794, 40.691762], [-74.004409, 40.692529], [-74.002751, 40.692063], [-74.002169, 40.691899], [-74.001969, 40.691843], [-74.001744, 40.692407]]]]
    },
    "properties": {
      "neighbourhood": "Columbia St",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.081323, 40.606588], [-74.079995, 40.606503], [-74.078339, 40.606877], [-74.077538, 40.606886], [-74.076443, 40.606774], [-74.073339, 40.606098], [-74.066503, 40.603336], [-74.064638, 40.600183], [-74.073623, 40.59721], [-74.073872, 40.597637], [-74.0749, 40.597614], [-74.077164, 40.59839], [-74.08171, 40.598563], [-74.084742, 40.597462], [-74.084809, 40.597438], [-74.084944, 40.597312], [-74.08537, 40.596915], [-74.085513, 40.596781], [-74.085593, 40.596584], [-74.085875, 40.59589], [-74.090292, 40.596196], [-74.093364, 40.597033], [-74.09272, 40.597464], [-74.09178, 40.598719], [-74.091779, 40.599239], [-74.092837, 40.601089], [-74.092609, 40.60323], [-74.09268, 40.605912], [-74.0924, 40.607072], [-74.090109, 40.609403], [-74.084368, 40.607173], [-74.083937, 40.607053], [-74.083466, 40.606874], [-74.083163, 40.606838], [-74.082546, 40.606667], [-74.081323, 40.606588]]]]
    },
    "properties": {
      "neighbourhood": "Concord",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.915335, 40.836957], [-73.915328, 40.836954], [-73.915738, 40.836532], [-73.918389, 40.833809], [-73.918613, 40.833526], [-73.919397, 40.83253], [-73.919856, 40.831949], [-73.92026, 40.83122], [-73.921145, 40.829623], [-73.923473, 40.825425], [-73.925645, 40.821131], [-73.926321, 40.820568], [-73.927311, 40.818565], [-73.927313, 40.81856], [-73.930218, 40.819312], [-73.932116, 40.819616], [-73.932442, 40.819565], [-73.932579, 40.822049], [-73.932592, 40.822293], [-73.932766, 40.825458], [-73.93278, 40.825583], [-73.932805, 40.825803], [-73.93309, 40.82829], [-73.933006, 40.828279], [-73.931022, 40.82835], [-73.93102, 40.82835], [-73.930964, 40.828352], [-73.929772, 40.82868], [-73.928756, 40.829186], [-73.925364, 40.832625], [-73.923967, 40.835082], [-73.922369, 40.836147], [-73.919017, 40.838381], [-73.915335, 40.836957]]]]
    },
    "properties": {
      "neighbourhood": "Concourse",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.907069, 40.833437], [-73.90896, 40.830226], [-73.910307, 40.828773], [-73.916309, 40.824903], [-73.918991, 40.823306], [-73.920063, 40.822667], [-73.92047, 40.822374], [-73.920704, 40.822227], [-73.92294, 40.820598], [-73.925382, 40.818069], [-73.92538, 40.818066], [-73.926223, 40.818286], [-73.926358, 40.818321], [-73.926463, 40.818347], [-73.927313, 40.81856], [-73.927311, 40.818565], [-73.926321, 40.820568], [-73.925645, 40.821131], [-73.923473, 40.825425], [-73.921145, 40.829623], [-73.92026, 40.83122], [-73.919856, 40.831949], [-73.919397, 40.83253], [-73.918613, 40.833526], [-73.918389, 40.833809], [-73.915738, 40.836532], [-73.915871, 40.836393], [-73.907069, 40.833437]]]]
    },
    "properties": {
      "neighbourhood": "Concourse Village",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.980613, 40.571662], [-73.981446, 40.57158], [-73.981842, 40.571469], [-73.982041, 40.57148], [-73.982037, 40.571438], [-73.982016, 40.571388], [-73.981992, 40.571352], [-73.981921, 40.57132], [-73.981599, 40.571307], [-73.981558, 40.571294], [-73.981544, 40.571273], [-73.981572, 40.57125], [-73.981948, 40.571237], [-73.982027, 40.571276], [-73.982095, 40.571347], [-73.982146, 40.571521], [-73.982177, 40.57156], [-73.982177, 40.571561], [-73.982827, 40.571542], [-73.983673, 40.571407], [-73.983404, 40.570166], [-73.983058, 40.57021], [-73.983043, 40.570146], [-73.983392, 40.570095], [-73.98327, 40.569542], [-73.983361, 40.56953], [-73.983485, 40.570089], [-73.983821, 40.570046], [-73.983839, 40.570112], [-73.983488, 40.570156], [-73.983757, 40.571394], [-73.983758, 40.571396], [-73.985729, 40.571196], [-73.986451, 40.571149], [-73.986468, 40.571078], [-73.986509, 40.571081], [-73.986547, 40.571133], [-73.988037, 40.570985], [-73.98862, 40.570896], [-73.988578, 40.570698], [-73.988634, 40.570695], [-73.988665, 40.570729], [-73.988721, 40.570884], [-73.990263, 40.570708], [-73.990773, 40.570599], [-73.990718, 40.57026], [-73.990793, 40.570249], [-73.990864, 40.570602], [-73.991173, 40.570612], [-73.991177, 40.570611], [-73.991193, 40.570612], [-73.992729, 40.570434], [-73.992969, 40.570367], [-73.992945, 40.570236], [-73.992981, 40.570197], [-73.993014, 40.570213], [-73.993027, 40.570278], [-73.993053, 40.570339], [-73.993157, 40.57038], [-73.993157, 40.57038], [-73.994938, 40.570355], [-73.995139, 40.570315], [-73.995152, 40.570179], [-73.995135, 40.570067], [-73.995187, 40.570022], [-73.995248, 40.570098], [-73.995262, 40.570229], [-73.995293, 40.570321], [-73.995474, 40.570352], [-73.995744, 40.570393], [-73.995761, 40.570392], [-73.995765, 40.570393], [-73.997195, 40.570349], [-73.997318, 40.570323], [-73.997356, 40.570278], [-73.997356, 40.570197], [-73.997369, 40.570137], [-73.99742, 40.570141], [-73.997448, 40.570286], [-73.99752, 40.570325], [-73.997667, 40.570375], [-73.997939, 40.57042], [-73.998468, 40.570497], [-73.999614, 40.570466], [-73.999641, 40.570445], [-73.999659, 40.570383], [-73.999703, 40.570386], [-73.999733, 40.570412], [-73.99973, 40.57045], [-73.999719, 40.570474], [-73.999749, 40.570496], [-74.000771, 40.570413], [-74.001064, 40.570402], [-74.002012, 40.570209], [-74.002058, 40.570152], [-74.001984, 40.569597], [-74.002085, 40.569586], [-74.002487, 40.571738], [-74.002439, 40.571787], [-74.002546, 40.573301], [-74.003937, 40.580598], [-74.003948, 40.581366], [-74.00388, 40.581635], [-74.002206, 40.581366], [-74.002191, 40.581367], [-74.002185, 40.581366], [-74.001234, 40.581425], [-74.000012, 40.581252], [-74.000001, 40.581253], [-73.999991, 40.581252], [-73.998719, 40.581486], [-73.998619, 40.581495], [-73.998418, 40.581496], [-73.998217, 40.581472], [-73.998122, 40.581455], [-73.998072, 40.581419], [-73.998027, 40.581378], [-73.997988, 40.581334], [-73.997956, 40.581287], [-73.99793, 40.581238], [-73.997912, 40.581187], [-73.997901, 40.581135], [-73.997897, 40.581082], [-73.997991, 40.580766], [-73.997921, 40.58065], [-73.997809, 40.580596], [-73.991829, 40.579247], [-73.990362, 40.579425], [-73.98958, 40.579193], [-73.988991, 40.578835], [-73.988428, 40.578816], [-73.988142, 40.578866], [-73.987983, 40.578945], [-73.987608, 40.579033], [-73.987616, 40.579064], [-73.987855, 40.579004], [-73.987866, 40.579026], [-73.987452, 40.579132], [-73.987442, 40.579107], [-73.987597, 40.579066], [-73.987587, 40.579041], [-73.987571, 40.579045], [-73.987391, 40.579087], [-73.987383, 40.579138], [-73.986695, 40.579815], [-73.987021, 40.580023], [-73.986165, 40.58095], [-73.985886, 40.581144], [-73.985959, 40.58141], [-73.985761, 40.581441], [-73.985709, 40.581267], [-73.984646, 40.581538], [-73.982734, 40.58337], [-73.980597, 40.571755], [-73.980613, 40.571662]]]]
    },
    "properties": {
      "neighbourhood": "Coney Island",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.848853, 40.738327], [-73.851571, 40.737386], [-73.85339, 40.736933], [-73.856492, 40.736273], [-73.8585, 40.735663], [-73.864424, 40.733905], [-73.864427, 40.733905], [-73.86583, 40.736636], [-73.867563, 40.740942], [-73.867491, 40.743295], [-73.867918, 40.744783], [-73.868535, 40.747706], [-73.869411, 40.749165], [-73.861666, 40.749945], [-73.852191, 40.752639], [-73.850742, 40.750088], [-73.854396, 40.748907], [-73.850078, 40.740841], [-73.84778, 40.740155], [-73.848853, 40.738327]]]]
    },
    "properties": {
      "neighbourhood": "Corona",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.91132, 40.844783], [-73.911813, 40.843434], [-73.912194, 40.842393], [-73.912426, 40.84102], [-73.91314, 40.839814], [-73.91375, 40.838743], [-73.91478, 40.837517], [-73.915335, 40.836957], [-73.919017, 40.838381], [-73.922369, 40.836147], [-73.92222, 40.837986], [-73.92164, 40.838888], [-73.921314, 40.840005], [-73.92242, 40.841837], [-73.9228, 40.842775], [-73.9228, 40.844305], [-73.922661, 40.844632], [-73.914199, 40.845115], [-73.91308, 40.845061], [-73.91226, 40.844718], [-73.91132, 40.844783]]]]
    },
    "properties": {
      "neighbourhood": "Mount Eden",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.79304, 40.710711], [-73.793532, 40.710507], [-73.795534, 40.709783], [-73.800222, 40.708446], [-73.802787, 40.707716], [-73.803276, 40.708412], [-73.803479, 40.708536], [-73.80364, 40.708729], [-73.805012, 40.709473], [-73.80558, 40.710237], [-73.806457, 40.712056], [-73.80693, 40.713643], [-73.807422, 40.714325], [-73.807669, 40.715506], [-73.807684, 40.715554], [-73.805871, 40.716181], [-73.801645, 40.716581], [-73.797819, 40.717494], [-73.795934, 40.718351], [-73.793365, 40.718808], [-73.792051, 40.719207], [-73.791137, 40.719207], [-73.791423, 40.718693], [-73.792051, 40.717723], [-73.792337, 40.716581], [-73.792451, 40.71561], [-73.793136, 40.714753], [-73.79365, 40.714011], [-73.793479, 40.713097], [-73.793079, 40.712126], [-73.79304, 40.710711]]]]
    },
    "properties": {
      "neighbourhood": "Jamaica Hills",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.816312, 40.84855], [-73.816348, 40.847652], [-73.815974, 40.847652], [-73.816056, 40.847587], [-73.816097, 40.847512], [-73.81617, 40.847015], [-73.816105, 40.846455], [-73.815844, 40.846327], [-73.815719, 40.846293], [-73.815685, 40.846341], [-73.815688, 40.846342], [-73.815459, 40.846603], [-73.815336, 40.846691], [-73.814627, 40.847143], [-73.814624, 40.847168], [-73.814667, 40.847204], [-73.814646, 40.84722], [-73.814511, 40.847106], [-73.814535, 40.847088], [-73.814575, 40.847125], [-73.814608, 40.847127], [-73.815436, 40.846588], [-73.815504, 40.846513], [-73.815475, 40.846497], [-73.815555, 40.846409], [-73.815583, 40.846424], [-73.815683, 40.846308], [-73.815691, 40.846311], [-73.815704, 40.846291], [-73.815662, 40.846288], [-73.815611, 40.846294], [-73.815573, 40.846301], [-73.815514, 40.846323], [-73.815118, 40.846524], [-73.815072, 40.846543], [-73.815039, 40.846547], [-73.814999, 40.846539], [-73.814966, 40.84652], [-73.814923, 40.846483], [-73.813657, 40.847205], [-73.813657, 40.847216], [-73.813705, 40.847265], [-73.813686, 40.847274], [-73.813564, 40.847151], [-73.813583, 40.847141], [-73.813627, 40.84719], [-73.813645, 40.84719], [-73.814909, 40.846469], [-73.814657, 40.846206], [-73.814469, 40.846234], [-73.814424, 40.846188], [-73.814655, 40.845968], [-73.814604, 40.845909], [-73.815086, 40.845595], [-73.815026, 40.8455], [-73.814206, 40.84601], [-73.81399, 40.845827], [-73.813189, 40.84623], [-73.813145, 40.846169], [-73.813819, 40.845802], [-73.814006, 40.845669], [-73.814018, 40.845631], [-73.81398, 40.845649], [-73.813483, 40.845965], [-73.813464, 40.84595], [-73.813974, 40.845636], [-73.814023, 40.845618], [-73.814032, 40.845589], [-73.813954, 40.845522], [-73.813686, 40.845659], [-73.813672, 40.845647], [-73.813943, 40.845512], [-73.813902, 40.845476], [-73.813857, 40.845418], [-73.813729, 40.845485], [-73.813711, 40.845462], [-73.813843, 40.845399], [-73.813805, 40.845351], [-73.813633, 40.845281], [-73.813406, 40.845753], [-73.813353, 40.845854], [-73.813289, 40.845951], [-73.813213, 40.845923], [-73.813219, 40.845914], [-73.813284, 40.845937], [-73.813366, 40.845802], [-73.813619, 40.845275], [-73.813462, 40.845211], [-73.81326, 40.845234], [-73.813129, 40.845565], [-73.812961, 40.845957], [-73.812895, 40.846097], [-73.8128, 40.846295], [-73.812855, 40.84631], [-73.812849, 40.846319], [-73.812725, 40.846287], [-73.812731, 40.846276], [-73.812786, 40.846289], [-73.813243, 40.845236], [-73.813207, 40.84524], [-73.813161, 40.8452], [-73.813101, 40.845172], [-73.813067, 40.845164], [-73.812999, 40.84516], [-73.812877, 40.845135], [-73.812862, 40.845175], [-73.812995, 40.845211], [-73.813149, 40.8452], [-73.813156, 40.845212], [-73.812993, 40.845225], [-73.812855, 40.845186], [-73.81234, 40.846545], [-73.812414, 40.846559], [-73.81241, 40.846571], [-73.812278, 40.846543], [-73.812282, 40.846531], [-73.81233, 40.846542], [-73.812616, 40.845744], [-73.812841, 40.84518], [-73.812607, 40.84513], [-73.812614, 40.84511], [-73.812849, 40.845163], [-73.812858, 40.84513], [-73.812718, 40.845082], [-73.812652, 40.845052], [-73.812634, 40.845026], [-73.812629, 40.844997], [-73.812545, 40.84498], [-73.81244, 40.845237], [-73.812549, 40.845261], [-73.812538, 40.845284], [-73.812455, 40.845264], [-73.812189, 40.845952], [-73.812175, 40.845946], [-73.811955, 40.846476], [-73.811961, 40.846484], [-73.812034, 40.846502], [-73.812022, 40.846529], [-73.812035, 40.846533], [-73.812026, 40.846551], [-73.811916, 40.846527], [-73.811884, 40.846595], [-73.812302, 40.846689], [-73.812436, 40.846738], [-73.812424, 40.846755], [-73.812303, 40.846713], [-73.811878, 40.846617], [-73.811841, 40.846714], [-73.8117, 40.846682], [-73.81233, 40.845159], [-73.812661, 40.844208], [-73.812784, 40.844228], [-73.812712, 40.844467], [-73.812728, 40.844469], [-73.812779, 40.844275], [-73.812781, 40.844255], [-73.812821, 40.84426], [-73.8128, 40.844355], [-73.812761, 40.844473], [-73.812769, 40.844479], [-73.812991, 40.844523], [-73.812983, 40.84455], [-73.81276, 40.844503], [-73.812762, 40.844495], [-73.812703, 40.844485], [-73.812648, 40.844659], [-73.812897, 40.844713], [-73.812911, 40.844684], [-73.812902, 40.844681], [-73.812912, 40.844658], [-73.812962, 40.844673], [-73.812972, 40.84465], [-73.813113, 40.844684], [-73.813093, 40.844731], [-73.813044, 40.844718], [-73.813036, 40.844743], [-73.81307, 40.844751], [-73.813065, 40.844773], [-73.813118, 40.844788], [-73.813093, 40.844848], [-73.812657, 40.844751], [-73.81268, 40.84469], [-73.812641, 40.844682], [-73.812549, 40.844952], [-73.812634, 40.844971], [-73.812649, 40.844948], [-73.812673, 40.844931], [-73.812703, 40.844921], [-73.812987, 40.844926], [-73.813253, 40.84495], [-73.81345, 40.844961], [-73.813547, 40.844973], [-73.813548, 40.845042], [-73.813656, 40.845059], [-73.81374, 40.845035], [-73.813789, 40.844978], [-73.813993, 40.844932], [-73.814145, 40.844818], [-73.814183, 40.844742], [-73.814116, 40.844764], [-73.813862, 40.844818], [-73.813867, 40.844842], [-73.813749, 40.844867], [-73.81374, 40.844841], [-73.8137, 40.844848], [-73.813692, 40.844829], [-73.813896, 40.844789], [-73.813894, 40.844773], [-73.81395, 40.84476], [-73.813961, 40.844777], [-73.814187, 40.844725], [-73.81417, 40.84464], [-73.81412, 40.844563], [-73.81404, 40.844502], [-73.813991, 40.84448], [-73.813882, 40.844455], [-73.813812, 40.844462], [-73.813723, 40.844452], [-73.813652, 40.844437], [-73.813555, 40.844379], [-73.813456, 40.844243], [-73.813431, 40.844187], [-73.813421, 40.844124], [-73.813377, 40.843957], [-73.813366, 40.843906], [-73.813363, 40.843853], [-73.81337, 40.843801], [-73.813385, 40.84375], [-73.81341, 40.8437], [-73.813442, 40.843654], [-73.813482, 40.843611], [-73.813544, 40.843578], [-73.813653, 40.84354], [-73.813772, 40.843525], [-73.814016, 40.843519], [-73.81418, 40.843453], [-73.814265, 40.843384], [-73.814297, 40.843343], [-73.814322, 40.8433], [-73.814339, 40.843254], [-73.814348, 40.843208], [-73.814339, 40.843193], [-73.814334, 40.843177], [-73.814332, 40.843161], [-73.814334, 40.843145], [-73.814348, 40.843114], [-73.814375, 40.843089], [-73.814433, 40.843098], [-73.814474, 40.843185], [-73.81453, 40.843254], [-73.814767, 40.843357], [-73.814883, 40.843402], [-73.814934, 40.843432], [-73.81502, 40.843506], [-73.815144, 40.843666], [-73.815259, 40.844013], [-73.815567, 40.84426], [-73.815666, 40.84438], [-73.815964, 40.844412], [-73.815994, 40.844403], [-73.816009, 40.844391], [-73.816018, 40.844376], [-73.816018, 40.844351], [-73.816, 40.844333], [-73.815986, 40.844313], [-73.815976, 40.84429], [-73.81597, 40.844265], [-73.81597, 40.844241], [-73.815975, 40.844217], [-73.815985, 40.844194], [-73.816, 40.844172], [-73.81602, 40.844135], [-73.816046, 40.8441], [-73.81608, 40.844068], [-73.816118, 40.844041], [-73.816162, 40.844018], [-73.816209, 40.844], [-73.816259, 40.843987], [-73.816311, 40.84398], [-73.816346, 40.843982], [-73.816414, 40.843996], [-73.816461, 40.844021], [-73.816516, 40.84413], [-73.816586, 40.844095], [-73.81661, 40.844091], [-73.816631, 40.844107], [-73.816711, 40.844137], [-73.816801, 40.844135], [-73.816829, 40.844126], [-73.816847, 40.844112], [-73.816868, 40.844101], [-73.816892, 40.844092], [-73.816916, 40.844086], [-73.816942, 40.844084], [-73.816968, 40.844085], [-73.816994, 40.844089], [-73.817018, 40.844096], [-73.81704, 40.844106], [-73.81706, 40.844119], [-73.817076, 40.844135], [-73.817089, 40.844152], [-73.817098, 40.84417], [-73.817089, 40.844265], [-73.817318, 40.844307], [-73.817411, 40.844334], [-73.817501, 40.844367], [-73.818237, 40.844355], [-73.818241, 40.844342], [-73.818239, 40.844316], [-73.818216, 40.844281], [-73.818197, 40.844266], [-73.818185, 40.844248], [-73.818182, 40.844227], [-73.818188, 40.844207], [-73.818194, 40.844198], [-73.8182, 40.844177], [-73.818201, 40.844155], [-73.818191, 40.844113], [-73.818169, 40.844111], [-73.818104, 40.84412], [-73.818051, 40.844151], [-73.818017, 40.844188], [-73.817975, 40.844222], [-73.817927, 40.84425], [-73.817806, 40.844269], [-73.81769, 40.844268], [-73.817561, 40.844245], [-73.817469, 40.844204], [-73.817393, 40.844147], [-73.817317, 40.844044], [-73.817187, 40.843916], [-73.817129, 40.843913], [-73.816691, 40.843975], [-73.816679, 40.843971], [-73.816656, 40.843963], [-73.816627, 40.843945], [-73.816607, 40.843917], [-73.816612, 40.843832], [-73.816515, 40.843763], [-73.816488, 40.843724], [-73.816445, 40.843674], [-73.816367, 40.843518], [-73.816202, 40.843073], [-73.815939, 40.842892], [-73.815876, 40.842828], [-73.815723, 40.842537], [-73.815171, 40.842577], [-73.815169, 40.842555], [-73.815702, 40.84252], [-73.815618, 40.842458], [-73.815442, 40.842411], [-73.815415, 40.842391], [-73.815406, 40.842354], [-73.815408, 40.842326], [-73.815434, 40.842291], [-73.815505, 40.842223], [-73.815547, 40.842159], [-73.815564, 40.842105], [-73.815559, 40.842025], [-73.815585, 40.841841], [-73.815525, 40.841648], [-73.815426, 40.84156], [-73.81533, 40.841492], [-73.815302, 40.841442], [-73.815281, 40.841295], [-73.815232, 40.841234], [-73.814797, 40.841384], [-73.814803, 40.841398], [-73.814763, 40.841413], [-73.814733, 40.841376], [-73.81522, 40.841203], [-73.815217, 40.841168], [-73.815221, 40.841133], [-73.815247, 40.841062], [-73.815234, 40.84101], [-73.81509, 40.840704], [-73.815074, 40.840659], [-73.815054, 40.840538], [-73.814979, 40.840551], [-73.81498, 40.840558], [-73.814916, 40.840567], [-73.814912, 40.840559], [-73.814905, 40.840559], [-73.814901, 40.840543], [-73.814909, 40.84054], [-73.814908, 40.840533], [-73.814971, 40.840522], [-73.814973, 40.840528], [-73.815049, 40.840518], [-73.814973, 40.840077], [-73.814806, 40.839804], [-73.814366, 40.839865], [-73.814362, 40.839852], [-73.814797, 40.839788], [-73.814767, 40.839756], [-73.814745, 40.839754], [-73.814733, 40.83976], [-73.81472, 40.839763], [-73.814709, 40.839763], [-73.814698, 40.839759], [-73.814696, 40.839748], [-73.814705, 40.839714], [-73.814719, 40.839699], [-73.81473, 40.839676], [-73.814723, 40.839589], [-73.814475, 40.839626], [-73.814471, 40.839621], [-73.814384, 40.839635], [-73.814387, 40.839643], [-73.814316, 40.83965], [-73.814309, 40.839622], [-73.814385, 40.839613], [-73.814387, 40.839623], [-73.814471, 40.839612], [-73.81447, 40.839606], [-73.81472, 40.839572], [-73.814697, 40.839451], [-73.814783, 40.839076], [-73.815426, 40.838783], [-73.815965, 40.838573], [-73.816265, 40.838264], [-73.816287, 40.837934], [-73.81644, 40.837493], [-73.816398, 40.837048], [-73.816161, 40.836587], [-73.816061, 40.83603], [-73.816408, 40.835932], [-73.822477, 40.834495], [-73.823335, 40.834415], [-73.824444, 40.835741], [-73.825188, 40.834588], [-73.826013, 40.834021], [-73.826124, 40.834214], [-73.825194, 40.835225], [-73.825254, 40.836661], [-73.825775, 40.838127], [-73.825485, 40.839697], [-73.825568, 40.842817], [-73.826113, 40.845339], [-73.82586, 40.845613], [-73.820484, 40.848501], [-73.820141, 40.84802], [-73.816312, 40.84855]]]]
    },
    "properties": {
      "neighbourhood": "Country Club",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.906424, 40.853501], [-73.906448, 40.853474], [-73.90469, 40.852899], [-73.902719, 40.851851], [-73.900694, 40.850253], [-73.900884, 40.84941], [-73.900097, 40.849209], [-73.902654, 40.844753], [-73.902706, 40.844568], [-73.911049, 40.845143], [-73.91132, 40.844783], [-73.91226, 40.844718], [-73.91308, 40.845061], [-73.914199, 40.845115], [-73.913975, 40.84543], [-73.913236, 40.846241], [-73.91315, 40.846577], [-73.910582, 40.850182], [-73.907333, 40.853816], [-73.906424, 40.853501]]]]
    },
    "properties": {
      "neighbourhood": "Mount Hope",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.986623, 40.704979], [-73.98653, 40.704979], [-73.986429, 40.705069], [-73.986434, 40.705349], [-73.984535, 40.70552], [-73.984583, 40.704344], [-73.98476, 40.701446], [-73.986748, 40.701526], [-73.986784, 40.70112], [-73.989986, 40.701612], [-73.990474, 40.70169], [-73.991296, 40.701644], [-73.991987, 40.701607], [-73.992588, 40.702125], [-73.993258, 40.702461], [-73.994358, 40.70291], [-73.995046, 40.703132], [-73.995446, 40.703275], [-73.995293, 40.703554], [-73.9948, 40.703292], [-73.994663, 40.703431], [-73.994995, 40.703651], [-73.994882, 40.703788], [-73.99491, 40.703797], [-73.99493, 40.703771], [-73.995029, 40.703808], [-73.994882, 40.704009], [-73.994769, 40.703953], [-73.994714, 40.703997], [-73.994792, 40.704068], [-73.994792, 40.704089], [-73.994698, 40.704165], [-73.994776, 40.704246], [-73.99457, 40.704376], [-73.993863, 40.704556], [-73.993807, 40.70454], [-73.993775, 40.704449], [-73.993586, 40.704509], [-73.993626, 40.704595], [-73.993509, 40.704624], [-73.992801, 40.704634], [-73.992691, 40.70463], [-73.992512, 40.704694], [-73.992127, 40.70469], [-73.992121, 40.704396], [-73.991862, 40.704087], [-73.991418, 40.704004], [-73.990948, 40.704032], [-73.990715, 40.704351], [-73.990546, 40.704416], [-73.990308, 40.70484], [-73.990285, 40.704866], [-73.990227, 40.704934], [-73.990091, 40.704943], [-73.988303, 40.70454], [-73.988295, 40.704888], [-73.98829, 40.705071], [-73.987957, 40.705134], [-73.98727, 40.705176], [-73.986863, 40.70516], [-73.98673, 40.705106], [-73.986664, 40.705049], [-73.986623, 40.704979]]]]
    },
    "properties": {
      "neighbourhood": "DUMBO",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.076016, 40.578245], [-74.076399, 40.577995], [-74.076408, 40.577975], [-74.076305, 40.57792], [-74.07629, 40.577908], [-74.076297, 40.577899], [-74.076315, 40.577899], [-74.076465, 40.577967], [-74.076493, 40.577961], [-74.076493, 40.577961], [-74.076584, 40.577849], [-74.076723, 40.577731], [-74.076882, 40.577637], [-74.076916, 40.57758], [-74.076738, 40.577373], [-74.076748, 40.577367], [-74.076898, 40.577516], [-74.076939, 40.577534], [-74.076939, 40.577534], [-74.077375, 40.577282], [-74.077759, 40.576943], [-74.078302, 40.576465], [-74.078774, 40.576011], [-74.079263, 40.575671], [-74.07868, 40.575082], [-74.078752, 40.575042], [-74.079336, 40.575627], [-74.079336, 40.575627], [-74.079337, 40.575627], [-74.080503, 40.57498], [-74.080803, 40.574723], [-74.080803, 40.574723], [-74.080803, 40.574723], [-74.080933, 40.574833], [-74.085106, 40.578288], [-74.087152, 40.579358], [-74.088974, 40.577145], [-74.091123, 40.578323], [-74.091492, 40.578007], [-74.093443, 40.579049], [-74.095212, 40.577045], [-74.098909, 40.578977], [-74.100345, 40.579728], [-74.107974, 40.583715], [-74.107974, 40.583715], [-74.104549, 40.5865], [-74.102079, 40.588741], [-74.101864, 40.589], [-74.100883, 40.590179], [-74.100931, 40.591033], [-74.076031, 40.578301], [-74.076016, 40.578245]]]]
    },
    "properties": {
      "neighbourhood": "Dongan Hills",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.746216, 40.777986], [-73.745955, 40.777239], [-73.745833, 40.775817], [-73.745374, 40.774608], [-73.744996, 40.774215], [-73.744862, 40.773634], [-73.744378, 40.773204], [-73.741839, 40.773629], [-73.740774, 40.772791], [-73.738881, 40.770791], [-73.738549, 40.769668], [-73.736864, 40.767441], [-73.73527, 40.764571], [-73.73213, 40.760878], [-73.731803, 40.76066], [-73.731389, 40.759625], [-73.729908, 40.757378], [-73.72792, 40.754657], [-73.725886, 40.752291], [-73.726526, 40.751827], [-73.727962, 40.750026], [-73.728824, 40.747929], [-73.729264, 40.747081], [-73.730059, 40.74602], [-73.731698, 40.744351], [-73.733746, 40.742839], [-73.734756, 40.744118], [-73.735051, 40.744875], [-73.735044, 40.746115], [-73.735158, 40.746556], [-73.735418, 40.747142], [-73.735878, 40.747527], [-73.736723, 40.747917], [-73.737369, 40.748345], [-73.738298, 40.749222], [-73.739895, 40.751338], [-73.740913, 40.751984], [-73.741348, 40.752469], [-73.741847, 40.753465], [-73.741331, 40.754593], [-73.740983, 40.754873], [-73.73976, 40.755445], [-73.739162, 40.756295], [-73.739292, 40.757055], [-73.740841, 40.756009], [-73.742684, 40.758785], [-73.744422, 40.760491], [-73.74496, 40.762153], [-73.746217, 40.764226], [-73.749287, 40.763088], [-73.750025, 40.763749], [-73.756992, 40.762275], [-73.758258, 40.763705], [-73.760298, 40.768699], [-73.762631, 40.771101], [-73.762239, 40.771221], [-73.761263, 40.770396], [-73.760605, 40.769766], [-73.759601, 40.768723], [-73.759074, 40.768454], [-73.758808, 40.768183], [-73.758827, 40.767768], [-73.758643, 40.767357], [-73.758422, 40.767199], [-73.758024, 40.767075], [-73.75787, 40.766946], [-73.757607, 40.76697], [-73.757522, 40.767107], [-73.75739, 40.767167], [-73.757345, 40.76707], [-73.757184, 40.766952], [-73.756929, 40.766798], [-73.756409, 40.76651], [-73.75642, 40.766475], [-73.756499, 40.766386], [-73.756515, 40.766353], [-73.756491, 40.766342], [-73.756316, 40.766338], [-73.756164, 40.766402], [-73.756022, 40.766464], [-73.755883, 40.766412], [-73.755473, 40.766366], [-73.754937, 40.766093], [-73.75439, 40.765644], [-73.754252, 40.765529], [-73.754101, 40.765349], [-73.75402, 40.765307], [-73.753882, 40.765349], [-73.75377, 40.765305], [-73.753807, 40.765115], [-73.753804, 40.765068], [-73.753672, 40.764972], [-73.753467, 40.764776], [-73.75341, 40.764693], [-73.753307, 40.764639], [-73.753115, 40.764433], [-73.752974, 40.76434], [-73.752859, 40.764291], [-73.752647, 40.764203], [-73.752693, 40.764134], [-73.752494, 40.764036], [-73.752263, 40.763894], [-73.752046, 40.763625], [-73.752004, 40.763503], [-73.751649, 40.763558], [-73.751695, 40.763652], [-73.751976, 40.763933], [-73.752222, 40.764167], [-73.752253, 40.764271], [-73.752343, 40.764299], [-73.752448, 40.764419], [-73.752511, 40.764527], [-73.752741, 40.76458], [-73.753046, 40.764817], [-73.753213, 40.765132], [-73.753389, 40.765334], [-73.753469, 40.765445], [-73.753592, 40.765546], [-73.753724, 40.765689], [-73.753798, 40.765839], [-73.754047, 40.766076], [-73.754146, 40.766296], [-73.754342, 40.766436], [-73.754593, 40.766864], [-73.754887, 40.76718], [-73.754973, 40.767354], [-73.755072, 40.767533], [-73.755076, 40.767664], [-73.754956, 40.767991], [-73.754847, 40.768261], [-73.754831, 40.768337], [-73.754856, 40.76837], [-73.754864, 40.768391], [-73.754851, 40.768413], [-73.754805, 40.768443], [-73.754761, 40.768548], [-73.754722, 40.768605], [-73.754663, 40.76864], [-73.754594, 40.768652], [-73.754528, 40.76865], [-73.754438, 40.76869], [-73.754395, 40.768761], [-73.754452, 40.768784], [-73.75467, 40.768773], [-73.754714, 40.768795], [-73.754711, 40.76894], [-73.754733, 40.769002], [-73.754721, 40.769079], [-73.754697, 40.769165], [-73.754698, 40.769413], [-73.754706, 40.769742], [-73.754872, 40.770028], [-73.755027, 40.770325], [-73.755207, 40.770675], [-73.755333, 40.770998], [-73.755404, 40.770982], [-73.7554, 40.77097], [-73.755513, 40.770945], [-73.755535, 40.770986], [-73.755402, 40.771017], [-73.755397, 40.771005], [-73.755342, 40.771022], [-73.755502, 40.771283], [-73.755561, 40.771449], [-73.755573, 40.771529], [-73.755501, 40.7716], [-73.755424, 40.771642], [-73.755256, 40.771657], [-73.755083, 40.771713], [-73.755108, 40.771831], [-73.755114, 40.771831], [-73.755115, 40.771835], [-73.755074, 40.77184], [-73.755075, 40.771836], [-73.755081, 40.771836], [-73.755059, 40.771719], [-73.754381, 40.772041], [-73.754296, 40.77213], [-73.753975, 40.772383], [-73.753574, 40.772691], [-73.75357, 40.772695], [-73.753367, 40.773208], [-73.753956, 40.774306], [-73.754274, 40.775184], [-73.754801, 40.775899], [-73.755097, 40.776377], [-73.755137, 40.776407], [-73.755186, 40.776498], [-73.755177, 40.776544], [-73.755107, 40.776588], [-73.754858, 40.776896], [-73.754886, 40.776991], [-73.754902, 40.777004], [-73.75492, 40.777016], [-73.75494, 40.777025], [-73.754982, 40.777044], [-73.754977, 40.777063], [-73.754969, 40.777081], [-73.754956, 40.777099], [-73.75494, 40.777114], [-73.754893, 40.777167], [-73.754894, 40.777202], [-73.754849, 40.777507], [-73.754813, 40.777619], [-73.755418, 40.777636], [-73.755424, 40.777584], [-73.755518, 40.777584], [-73.755517, 40.777704], [-73.75542, 40.777701], [-73.755422, 40.777654], [-73.754812, 40.777636], [-73.754664, 40.777695], [-73.754558, 40.777777], [-73.754485, 40.777904], [-73.75465, 40.777992], [-73.754442, 40.778125], [-73.754289, 40.778518], [-73.75413, 40.779384], [-73.754026, 40.779604], [-73.753933, 40.779763], [-73.753008, 40.780866], [-73.752998, 40.781289], [-73.75246, 40.781781], [-73.750816, 40.782886], [-73.74999, 40.781649], [-73.7492, 40.779818], [-73.748535, 40.778857], [-73.747561, 40.778654], [-73.747046, 40.778232], [-73.746216, 40.777986]]]]
    },
    "properties": {
      "neighbourhood": "Douglaston",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.986784, 40.70112], [-73.985593, 40.698491], [-73.980544, 40.698246], [-73.980507, 40.696498], [-73.982419, 40.695973], [-73.982631, 40.692224], [-73.980881, 40.688838], [-73.979903, 40.687466], [-73.985854, 40.689602], [-73.986196, 40.688999], [-73.991742, 40.690993], [-73.99045, 40.693735], [-73.99136, 40.69701], [-73.991409, 40.698632], [-73.99103, 40.699845], [-73.99093, 40.700767], [-73.991987, 40.701607], [-73.991296, 40.701644], [-73.990474, 40.70169], [-73.989986, 40.701612], [-73.986784, 40.70112]]]]
    },
    "properties": {
      "neighbourhood": "Downtown Brooklyn",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.012536, 40.632632], [-73.99932, 40.624671], [-74.011726, 40.612744], [-74.01702, 40.607655], [-74.015499, 40.606842], [-74.017467, 40.604965], [-74.018531, 40.604458], [-74.019152, 40.60382], [-74.019156, 40.603816], [-74.02116, 40.604467], [-74.02122, 40.604738], [-74.020786, 40.605673], [-74.022477, 40.606674], [-74.021502, 40.607828], [-74.024694, 40.60996], [-74.021216, 40.618472], [-74.014753, 40.633966], [-74.014752, 40.633967], [-74.012536, 40.632632]]]]
    },
    "properties": {
      "neighbourhood": "Dyker Heights",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.713012, 40.759556], [-73.712449, 40.759242], [-73.707847, 40.75623], [-73.707825, 40.756216], [-73.71373, 40.751029], [-73.709537, 40.748316], [-73.717616, 40.744033], [-73.717616, 40.744033], [-73.72042, 40.750374], [-73.72132, 40.752811], [-73.722619, 40.753502], [-73.722917, 40.754098], [-73.721178, 40.756871], [-73.720181, 40.757815], [-73.719581, 40.758208], [-73.719326, 40.758375], [-73.71916, 40.758484], [-73.717975, 40.759027], [-73.716499, 40.759448], [-73.714804, 40.759649], [-73.713012, 40.759556]]]]
    },
    "properties": {
      "neighbourhood": "Glen Oaks",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.903569, 40.76578], [-73.902696, 40.766889], [-73.901603, 40.76777], [-73.89499, 40.76679], [-73.891202, 40.766595], [-73.889323, 40.766866], [-73.8884, 40.7671], [-73.887601, 40.767296], [-73.886022, 40.767788], [-73.885543, 40.767966], [-73.882257, 40.76937], [-73.877766, 40.771908], [-73.876781, 40.772302], [-73.87252, 40.772376], [-73.867442, 40.770717], [-73.865072, 40.768938], [-73.863959, 40.767426], [-73.86246, 40.76578], [-73.85974, 40.762794], [-73.859677, 40.762759], [-73.859607, 40.762721], [-73.859413, 40.762483], [-73.859221, 40.762483], [-73.859156, 40.76252], [-73.859079, 40.762523], [-73.858921, 40.762406], [-73.858992, 40.762247], [-73.858984, 40.762171], [-73.858923, 40.762122], [-73.858792, 40.762279], [-73.858672, 40.762522], [-73.858645, 40.762514], [-73.858765, 40.762267], [-73.858887, 40.762134], [-73.85884, 40.762105], [-73.858712, 40.762235], [-73.858691, 40.762221], [-73.858844, 40.762059], [-73.858619, 40.761936], [-73.858542, 40.762027], [-73.858532, 40.762022], [-73.858461, 40.762106], [-73.858466, 40.762109], [-73.857678, 40.763028], [-73.85769, 40.763036], [-73.857655, 40.76308], [-73.858415, 40.763453], [-73.858486, 40.763369], [-73.858501, 40.763376], [-73.858343, 40.763563], [-73.858329, 40.763556], [-73.858395, 40.763477], [-73.857639, 40.763099], [-73.857601, 40.76314], [-73.857588, 40.763134], [-73.856839, 40.764], [-73.856971, 40.764066], [-73.856964, 40.764074], [-73.856675, 40.76393], [-73.856683, 40.763921], [-73.856803, 40.763981], [-73.857559, 40.763122], [-73.857548, 40.763116], [-73.857583, 40.763073], [-73.85669, 40.762636], [-73.856603, 40.762731], [-73.856587, 40.762723], [-73.856782, 40.762508], [-73.856799, 40.762517], [-73.856712, 40.762616], [-73.857604, 40.763053], [-73.857636, 40.763012], [-73.85765, 40.763019], [-73.858176, 40.762396], [-73.856612, 40.76165], [-73.856628, 40.761629], [-73.858194, 40.762374], [-73.858443, 40.762096], [-73.858451, 40.762099], [-73.858517, 40.762015], [-73.858507, 40.762008], [-73.858585, 40.761917], [-73.857477, 40.761309], [-73.856273, 40.760902], [-73.855376, 40.760669], [-73.855304, 40.760747], [-73.855293, 40.760742], [-73.855223, 40.760817], [-73.85521, 40.760809], [-73.855277, 40.760734], [-73.855269, 40.76073], [-73.855335, 40.760658], [-73.855303, 40.76065], [-73.854998, 40.760391], [-73.854664, 40.760171], [-73.854633, 40.758466], [-73.856058, 40.758256], [-73.858269, 40.757965], [-73.865056, 40.757652], [-73.873641, 40.756774], [-73.898697, 40.75411], [-73.90014, 40.75615], [-73.900866, 40.757674], [-73.90108, 40.758122], [-73.902184, 40.76267], [-73.903569, 40.76578]]]]
    },
    "properties": {
      "neighbourhood": "East Elmhurst",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.908419, 40.650595], [-73.913746, 40.647167], [-73.919754, 40.642908], [-73.919197, 40.637481], [-73.922855, 40.635564], [-73.922616, 40.633224], [-73.946479, 40.631708], [-73.951101, 40.636073], [-73.9509, 40.636087], [-73.952959, 40.655249], [-73.93956, 40.656063], [-73.93957, 40.65853], [-73.940029, 40.663021], [-73.939926, 40.6639], [-73.932619, 40.663514], [-73.93078, 40.663601], [-73.925453, 40.665905], [-73.908419, 40.650595]]]]
    },
    "properties": {
      "neighbourhood": "East Flatbush",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.93383, 40.819521], [-73.93383, 40.819521], [-73.933829, 40.815585], [-73.933945, 40.815588], [-73.933945, 40.815588], [-73.933946, 40.815588], [-73.934015, 40.814484], [-73.933857, 40.814481], [-73.933865, 40.814153], [-73.934339, 40.809562], [-73.934121, 40.808656], [-73.933561, 40.807601], [-73.931159, 40.804967], [-73.930309, 40.803786], [-73.929208, 40.801148], [-73.929035, 40.801081], [-73.928902, 40.799855], [-73.929036, 40.796763], [-73.929279, 40.795853], [-73.929875, 40.795035], [-73.929842, 40.795015], [-73.929851, 40.795001], [-73.92981, 40.794983], [-73.929833, 40.794949], [-73.929887, 40.794967], [-73.929901, 40.794947], [-73.929916, 40.794949], [-73.929937, 40.794919], [-73.92992, 40.79491], [-73.930069, 40.794701], [-73.930108, 40.794713], [-73.930197, 40.794593], [-73.933485, 40.792774], [-73.935265, 40.791526], [-73.93519, 40.791471], [-73.935468, 40.791264], [-73.935539, 40.791319], [-73.935831, 40.791095], [-73.937062, 40.789414], [-73.937053, 40.789406], [-73.937081, 40.789366], [-73.937072, 40.789346], [-73.936141, 40.788949], [-73.936128, 40.788939], [-73.936127, 40.788927], [-73.936219, 40.7888], [-73.936228, 40.788796], [-73.936243, 40.788796], [-73.936883, 40.789059], [-73.936946, 40.789085], [-73.937148, 40.789168], [-73.937148, 40.789168], [-73.93715, 40.789168], [-73.937774, 40.787783], [-73.938116, 40.787185], [-73.939826, 40.785257], [-73.942435, 40.783918], [-73.94324, 40.783328], [-73.943592, 40.782748], [-73.944023, 40.78296], [-73.95576, 40.787907], [-73.949695, 40.796217], [-73.9494, 40.796638], [-73.949552, 40.796693], [-73.949641, 40.796804], [-73.949657, 40.797069], [-73.949374, 40.797158], [-73.949228, 40.797149], [-73.949073, 40.797094], [-73.944597, 40.803228], [-73.942993, 40.802561], [-73.941166, 40.805063], [-73.942754, 40.805744], [-73.933992, 40.817786], [-73.934289, 40.819569], [-73.93383, 40.819521]]]]
    },
    "properties": {
      "neighbourhood": "East Harlem",
      "neighbourhood_group": "Manhattan"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.876937, 40.836137], [-73.879252, 40.834424], [-73.881732, 40.831312], [-73.882473, 40.82972], [-73.882976, 40.828304], [-73.883817, 40.82833], [-73.885635, 40.828031], [-73.8864, 40.827503], [-73.888051, 40.828698], [-73.888063, 40.82887], [-73.893843, 40.828392], [-73.895292, 40.828143], [-73.895485, 40.828249], [-73.897002, 40.82805], [-73.897001, 40.828051], [-73.894692, 40.830619], [-73.895274, 40.834034], [-73.896302, 40.833543], [-73.896937, 40.834361], [-73.895529, 40.835017], [-73.895134, 40.835451], [-73.89427, 40.836241], [-73.893352, 40.836578], [-73.891435, 40.836695], [-73.890551, 40.836894], [-73.888638, 40.838055], [-73.888437, 40.838591], [-73.887247, 40.838151], [-73.886549, 40.839332], [-73.88601, 40.840585], [-73.882576, 40.838746], [-73.880681, 40.837532], [-73.878339, 40.836855], [-73.876152, 40.8365], [-73.876937, 40.836137]]]]
    },
    "properties": {
      "neighbourhood": "East Morrisania",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.142146, 40.539144], [-74.142304, 40.53907], [-74.142338, 40.538949], [-74.141905, 40.538641], [-74.141766, 40.538542], [-74.142265, 40.53814], [-74.142249, 40.53813], [-74.142208, 40.538165], [-74.142213, 40.538168], [-74.141868, 40.538444], [-74.141838, 40.538422], [-74.142201, 40.538126], [-74.142207, 40.538132], [-74.14223, 40.538114], [-74.142119, 40.538034], [-74.142079, 40.538004], [-74.142125, 40.537967], [-74.142167, 40.537933], [-74.142148, 40.537917], [-74.142139, 40.537921], [-74.141219, 40.537254], [-74.141198, 40.537254], [-74.141067, 40.537366], [-74.141042, 40.537347], [-74.141298, 40.537138], [-74.141321, 40.537154], [-74.141237, 40.537216], [-74.141241, 40.537235], [-74.142176, 40.537895], [-74.142162, 40.537902], [-74.142186, 40.537918], [-74.14239, 40.537753], [-74.142152, 40.537557], [-74.141784, 40.537254], [-74.141583, 40.537088], [-74.141734, 40.53704], [-74.142469, 40.537139], [-74.143052, 40.53724], [-74.143701, 40.537211], [-74.144014, 40.53694], [-74.144183, 40.536794], [-74.144555, 40.535947], [-74.144741, 40.535801], [-74.145032, 40.535827], [-74.145363, 40.535856], [-74.14602, 40.535554], [-74.145997, 40.53539], [-74.146255, 40.535539], [-74.147015, 40.535324], [-74.148667, 40.534512], [-74.149217, 40.534242], [-74.149777, 40.533888], [-74.149758, 40.533424], [-74.150696, 40.532546], [-74.15112, 40.532741], [-74.151256, 40.532669], [-74.151262, 40.532666], [-74.157043, 40.535967], [-74.157581, 40.53636], [-74.157818, 40.536532], [-74.15793, 40.536618], [-74.165296, 40.544273], [-74.166233, 40.547343], [-74.16683, 40.547779], [-74.166855, 40.54782], [-74.16689, 40.547847], [-74.166923, 40.547942], [-74.16707, 40.548205], [-74.169823, 40.561057], [-74.169827, 40.561078], [-74.169823, 40.561057], [-74.167099, 40.548448], [-74.166154, 40.548605], [-74.161168, 40.549191], [-74.157235, 40.550218], [-74.156752, 40.549077], [-74.15408, 40.55045], [-74.15395, 40.550143], [-74.151607, 40.551113], [-74.150839, 40.549963], [-74.150431, 40.548195], [-74.148011, 40.544114], [-74.147465, 40.543497], [-74.144348, 40.541173], [-74.143591, 40.54051], [-74.142228, 40.539316], [-74.142146, 40.539144]]]]
    },
    "properties": {
      "neighbourhood": "Eltingville",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.116756, 40.610814], [-74.116563, 40.609404], [-74.115791, 40.606862], [-74.11538, 40.603984], [-74.114871, 40.602137], [-74.11684, 40.601895], [-74.11664, 40.599062], [-74.117816, 40.599026], [-74.117817, 40.598386], [-74.119428, 40.59836], [-74.119576, 40.601817], [-74.120596, 40.60181], [-74.120772, 40.600672], [-74.122672, 40.599361], [-74.124684, 40.598298], [-74.124804, 40.598235], [-74.124959, 40.598153], [-74.125482, 40.598079], [-74.12983, 40.598671], [-74.13092, 40.598856], [-74.13099, 40.599503], [-74.132507, 40.599632], [-74.137234, 40.603249], [-74.14046, 40.60307], [-74.142028, 40.603372], [-74.147066, 40.605504], [-74.147502, 40.606313], [-74.14721, 40.608259], [-74.145868, 40.607921], [-74.143992, 40.607741], [-74.136437, 40.607791], [-74.12743, 40.608615], [-74.119909, 40.610306], [-74.119837, 40.610322], [-74.119672, 40.610348], [-74.11676, 40.61087], [-74.116756, 40.610814]]]]
    },
    "properties": {
      "neighbourhood": "Emerson Hill",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.867491, 40.743295], [-73.867563, 40.740942], [-73.86583, 40.736636], [-73.864427, 40.733905], [-73.86563, 40.733729], [-73.86663, 40.734014], [-73.867915, 40.733943], [-73.8692, 40.733372], [-73.870813, 40.732684], [-73.871344, 40.731837], [-73.871341, 40.730231], [-73.871429, 40.729248], [-73.874196, 40.727161], [-73.87698, 40.725734], [-73.880478, 40.724235], [-73.883048, 40.723021], [-73.885641, 40.722022], [-73.887018, 40.723738], [-73.8872, 40.728612], [-73.88756, 40.730197], [-73.88806, 40.730087], [-73.888523, 40.734531], [-73.887702, 40.734291], [-73.890157, 40.739192], [-73.889742, 40.739115], [-73.889898, 40.740074], [-73.890212, 40.74077], [-73.890547, 40.741513], [-73.890875, 40.743106], [-73.890716, 40.743128], [-73.891095, 40.74504], [-73.891457, 40.74687], [-73.88081, 40.747975], [-73.869482, 40.749143], [-73.869411, 40.749165], [-73.868535, 40.747706], [-73.867918, 40.744783], [-73.867491, 40.743295]]]]
    },
    "properties": {
      "neighbourhood": "Elmhurst",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.897033, 40.900279], [-73.897103, 40.898759], [-73.896707, 40.895858], [-73.896412, 40.89381], [-73.897248, 40.891724], [-73.898236, 40.889522], [-73.899812, 40.889677], [-73.901012, 40.888896], [-73.901851, 40.889223], [-73.902859, 40.889165], [-73.904135, 40.887089], [-73.905729, 40.885724], [-73.907465, 40.884434], [-73.906899, 40.885999], [-73.907388, 40.88782], [-73.908119, 40.88936], [-73.908054, 40.893639], [-73.907939, 40.897675], [-73.907257, 40.899389], [-73.905733, 40.90045], [-73.90416, 40.901109], [-73.901938, 40.90121], [-73.899059, 40.900911], [-73.897033, 40.900279]]]]
    },
    "properties": {
      "neighbourhood": "Fieldston",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.861318, 40.675021], [-73.86107, 40.674021], [-73.86039, 40.671269], [-73.859203, 40.671436], [-73.857633, 40.671656], [-73.857633, 40.671656], [-73.855685, 40.663867], [-73.85843, 40.663453], [-73.857615, 40.660119], [-73.858514, 40.659899], [-73.859387, 40.659773], [-73.86036, 40.659646], [-73.861222, 40.659221], [-73.861748, 40.658938], [-73.863157, 40.658283], [-73.863171, 40.658277], [-73.863171, 40.658277], [-73.863149, 40.658247], [-73.862701, 40.657617], [-73.863002, 40.657488], [-73.863002, 40.657398], [-73.863013, 40.657349], [-73.862995, 40.657318], [-73.862995, 40.657283], [-73.863016, 40.657247], [-73.863072, 40.657208], [-73.863276, 40.656941], [-73.863039, 40.656743], [-73.863002, 40.656654], [-73.863031, 40.656508], [-73.86303, 40.656437], [-73.863, 40.656396], [-73.862991, 40.656374], [-73.863015, 40.656344], [-73.86307, 40.656332], [-73.863131, 40.656395], [-73.863176, 40.656405], [-73.863197, 40.65638], [-73.863198, 40.656339], [-73.863123, 40.656212], [-73.862973, 40.656003], [-73.862795, 40.655807], [-73.862641, 40.655668], [-73.861734, 40.655295], [-73.861433, 40.655276], [-73.861136, 40.655237], [-73.860989, 40.65521], [-73.860899, 40.655226], [-73.860807, 40.655222], [-73.86072, 40.655197], [-73.860455, 40.655067], [-73.859792, 40.654476], [-73.859755, 40.654104], [-73.85941, 40.653858], [-73.859445, 40.653638], [-73.859342, 40.653561], [-73.85925, 40.653254], [-73.859045, 40.653108], [-73.85898, 40.652675], [-73.858548, 40.652361], [-73.857834, 40.651558], [-73.857319, 40.651237], [-73.857302, 40.651064], [-73.857026, 40.650694], [-73.856959, 40.650587], [-73.857166, 40.650323], [-73.857232, 40.6502], [-73.857524, 40.649996], [-73.857593, 40.649397], [-73.857705, 40.648746], [-73.857835, 40.648302], [-73.858376, 40.647274], [-73.858395, 40.646733], [-73.858164, 40.645941], [-73.857726, 40.645322], [-73.857292, 40.644531], [-73.85717, 40.643679], [-73.858941, 40.643217], [-73.862013, 40.642887], [-73.862895, 40.642551], [-73.864189, 40.641587], [-73.864193, 40.641587], [-73.865312, 40.640751], [-73.866073, 40.640353], [-73.866704, 40.640022], [-73.866092, 40.639434], [-73.865988, 40.639504], [-73.865354, 40.638951], [-73.865343, 40.638902], [-73.865363, 40.638836], [-73.865486, 40.638765], [-73.865573, 40.63877], [-73.865632, 40.638787], [-73.866255, 40.639316], [-73.866171, 40.639368], [-73.866815, 40.639964], [-73.86703, 40.639851], [-73.867323, 40.639872], [-73.868673, 40.640925], [-73.869912, 40.643278], [-73.870017, 40.644071], [-73.871192, 40.645305], [-73.871572, 40.645415], [-73.872122, 40.645424], [-73.87257, 40.645576], [-73.879332, 40.654622], [-73.879639, 40.654499], [-73.876762, 40.650561], [-73.873186, 40.645445], [-73.873391, 40.645006], [-73.873436, 40.644448], [-73.87327, 40.643903], [-73.873098, 40.643935], [-73.872973, 40.643839], [-73.872756, 40.643249], [-73.871949, 40.642394], [-73.870881, 40.640772], [-73.870845, 40.640557], [-73.870436, 40.640291], [-73.870085, 40.639844], [-73.87008, 40.639212], [-73.869896, 40.638935], [-73.869524, 40.638646], [-73.868598, 40.63835], [-73.868089, 40.638186], [-73.867997, 40.638115], [-73.868215, 40.637976], [-73.86961, 40.637086], [-73.869695, 40.637147], [-73.869208, 40.637466], [-73.869559, 40.637947], [-73.871086, 40.637394], [-73.872435, 40.636549], [-73.872934, 40.636365], [-73.873479, 40.636286], [-73.873631, 40.636344], [-73.874449, 40.636659], [-73.875471, 40.637273], [-73.877324, 40.638731], [-73.878294, 40.638839], [-73.87856, 40.63905], [-73.878654, 40.639305], [-73.879371, 40.640119], [-73.879864, 40.640338], [-73.880164, 40.640741], [-73.880222, 40.640921], [-73.880469, 40.640962], [-73.880736, 40.641566], [-73.880292, 40.641405], [-73.880026, 40.641718], [-73.880067, 40.642003], [-73.880294, 40.64212], [-73.880366, 40.642057], [-73.880535, 40.642059], [-73.880678, 40.642107], [-73.881393, 40.642347], [-73.881567, 40.642491], [-73.882241, 40.643453], [-73.882148, 40.643744], [-73.88302, 40.644179], [-73.88342, 40.644524], [-73.883698, 40.644352], [-73.884325, 40.644102], [-73.884551, 40.644009], [-73.884808, 40.643946], [-73.885578, 40.644041], [-73.885742, 40.644182], [-73.886006, 40.644503], [-73.886006, 40.644571], [-73.886244, 40.644746], [-73.886731, 40.645132], [-73.886796, 40.645239], [-73.887201, 40.645602], [-73.88722, 40.645682], [-73.887274, 40.645706], [-73.887279, 40.64576], [-73.88733, 40.645798], [-73.88735, 40.645861], [-73.887434, 40.645937], [-73.887401, 40.645964], [-73.88736, 40.645987], [-73.887388, 40.646079], [-73.887447, 40.646104], [-73.887462, 40.646125], [-73.887465, 40.646158], [-73.887534, 40.64618], [-73.887637, 40.646325], [-73.887666, 40.646505], [-73.887638, 40.646594], [-73.887671, 40.646657], [-73.887655, 40.646723], [-73.887726, 40.647143], [-73.887644, 40.647192], [-73.887568, 40.647267], [-73.887532, 40.647337], [-73.887516, 40.647415], [-73.887616, 40.647518], [-73.887641, 40.647588], [-73.887646, 40.647623], [-73.887623, 40.647697], [-73.887641, 40.647802], [-73.887712, 40.647874], [-73.887771, 40.647892], [-73.887842, 40.647879], [-73.887965, 40.647881], [-73.888021, 40.647904], [-73.88807, 40.647904], [-73.888154, 40.647871], [-73.888435, 40.648007], [-73.888636, 40.648024], [-73.888704, 40.648115], [-73.888738, 40.648131], [-73.888782, 40.648203], [-73.888792, 40.648313], [-73.888813, 40.648341], [-73.88888, 40.648361], [-73.888907, 40.648388], [-73.888931, 40.648441], [-73.888945, 40.648447], [-73.888965, 40.648478], [-73.889055, 40.648561], [-73.889116, 40.648592], [-73.88915, 40.648641], [-73.889247, 40.648746], [-73.889334, 40.648793], [-73.889488, 40.648853], [-73.88965, 40.648986], [-73.889756, 40.649085], [-73.889841, 40.649137], [-73.889942, 40.649252], [-73.890068, 40.649324], [-73.890218, 40.649376], [-73.890335, 40.649348], [-73.890137, 40.64917], [-73.890347, 40.649034], [-73.891252, 40.650026], [-73.892743, 40.651353], [-73.895206, 40.654488], [-73.89788, 40.653354], [-73.899041, 40.657372], [-73.899217, 40.659112], [-73.90266, 40.672197], [-73.903475, 40.675507], [-73.903311, 40.675873], [-73.901637, 40.675636], [-73.899707, 40.675598], [-73.896838, 40.675739], [-73.893993, 40.676006], [-73.890335, 40.676612], [-73.887707, 40.677167], [-73.886019, 40.677578], [-73.880615, 40.679105], [-73.87637, 40.680387], [-73.876333, 40.680387], [-73.874964, 40.680321], [-73.874022, 40.6797], [-73.872878, 40.678303], [-73.872099, 40.677953], [-73.868868, 40.677156], [-73.863092, 40.675257], [-73.861319, 40.675021], [-73.861318, 40.675021]]]]
    },
    "properties": {
      "neighbourhood": "East New York",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.990704, 40.734782], [-73.982554, 40.731375], [-73.982553, 40.731375], [-73.971629, 40.726761], [-73.97163, 40.72676], [-73.971768, 40.725833], [-73.971774, 40.725821], [-73.971791, 40.725814], [-73.971817, 40.725815], [-73.972188, 40.724045], [-73.972852, 40.721247], [-73.973383, 40.719189], [-73.973513, 40.718775], [-73.973576, 40.718589], [-73.974739, 40.718801], [-73.975452, 40.718947], [-73.977224, 40.71931], [-73.978753, 40.719934], [-73.992604, 40.724136], [-73.991285, 40.727762], [-73.990757, 40.729741], [-73.992854, 40.730083], [-73.99146, 40.731738], [-73.990704, 40.734782]]]]
    },
    "properties": {
      "neighbourhood": "East Village",
      "neighbourhood_group": "Manhattan"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.830932, 40.892197], [-73.822677, 40.889619], [-73.822486, 40.890098], [-73.823265, 40.889987], [-73.823366, 40.891075], [-73.822853, 40.891207], [-73.820495, 40.89058], [-73.816017, 40.889324], [-73.802909, 40.886031], [-73.794055, 40.8837], [-73.794471, 40.883076], [-73.796153, 40.883473], [-73.798153, 40.884227], [-73.798375, 40.884092], [-73.799381, 40.884354], [-73.803272, 40.88543], [-73.805141, 40.886017], [-73.807578, 40.885773], [-73.81254, 40.886657], [-73.814467, 40.886792], [-73.816091, 40.886614], [-73.820315, 40.885519], [-73.823063, 40.88481], [-73.825394, 40.884064], [-73.828136, 40.882825], [-73.830513, 40.881459], [-73.83223, 40.880031], [-73.83356, 40.878445], [-73.83423, 40.877152], [-73.834854, 40.875387], [-73.835823, 40.875989], [-73.843241, 40.879109], [-73.841277, 40.880317], [-73.836641, 40.88212], [-73.834744, 40.883613], [-73.834321, 40.883871], [-73.832972, 40.884449], [-73.8313, 40.884711], [-73.8312, 40.886664], [-73.8313, 40.889192], [-73.830932, 40.892197]]]]
    },
    "properties": {
      "neighbourhood": "Eastchester",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.830932, 40.892197], [-73.8313, 40.889192], [-73.8312, 40.886664], [-73.8313, 40.884711], [-73.832972, 40.884449], [-73.834321, 40.883871], [-73.834744, 40.883613], [-73.836641, 40.88212], [-73.841277, 40.880317], [-73.843241, 40.879109], [-73.850651, 40.882192], [-73.850496, 40.882424], [-73.847444, 40.886978], [-73.845906, 40.889741], [-73.845232, 40.889551], [-73.84629, 40.892324], [-73.83841, 40.894061], [-73.838392, 40.894067], [-73.838043, 40.894142], [-73.830932, 40.892197]]]]
    },
    "properties": {
      "neighbourhood": "Edenwald",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.768123, 40.597824], [-73.767987, 40.597596], [-73.767718, 40.596261], [-73.767139, 40.596285], [-73.766722, 40.596325], [-73.765559, 40.595869], [-73.765525, 40.595581], [-73.764622, 40.595675], [-73.763718, 40.591477], [-73.767171, 40.59087], [-73.76797, 40.590729], [-73.768727, 40.59087], [-73.769071, 40.59082], [-73.77088, 40.590554], [-73.77593, 40.590181], [-73.775837, 40.590325], [-73.776662, 40.590066], [-73.777614, 40.590053], [-73.779185, 40.589593], [-73.78043, 40.589597], [-73.781871, 40.589204], [-73.784533, 40.588478], [-73.787684, 40.587923], [-73.788539, 40.587555], [-73.788765, 40.587972], [-73.785389, 40.588792], [-73.785872, 40.594982], [-73.787044, 40.594911], [-73.788052, 40.594502], [-73.788399, 40.59753], [-73.789186, 40.597599], [-73.789192, 40.597649], [-73.789191, 40.597788], [-73.789182, 40.597835], [-73.789166, 40.597883], [-73.789139, 40.597928], [-73.789068, 40.59802], [-73.788814, 40.598264], [-73.788764, 40.598305], [-73.787562, 40.599179], [-73.78754, 40.599193], [-73.787502, 40.599215], [-73.78745, 40.599247], [-73.787191, 40.599427], [-73.787169, 40.59944], [-73.78715, 40.599446], [-73.787102, 40.599443], [-73.787098, 40.59947], [-73.787092, 40.599483], [-73.787066, 40.599504], [-73.787038, 40.599519], [-73.787008, 40.599533], [-73.786969, 40.599595], [-73.786976, 40.599607], [-73.786993, 40.599628], [-73.787024, 40.599657], [-73.787023, 40.599667], [-73.787, 40.599681], [-73.786949, 40.59969], [-73.786933, 40.599711], [-73.786921, 40.599736], [-73.786893, 40.599783], [-73.786845, 40.599849], [-73.786624, 40.600019], [-73.786585, 40.600041], [-73.786467, 40.600098], [-73.786165, 40.600234], [-73.785971, 40.600316], [-73.785794, 40.600569], [-73.786065, 40.600667], [-73.786087, 40.60063], [-73.786144, 40.600649], [-73.786105, 40.600712], [-73.78578, 40.600593], [-73.785738, 40.600665], [-73.785642, 40.600797], [-73.785984, 40.600918], [-73.785943, 40.600984], [-73.785886, 40.60096], [-73.785919, 40.60092], [-73.785633, 40.600816], [-73.785565, 40.601018], [-73.785579, 40.601216], [-73.785546, 40.601317], [-73.785517, 40.601382], [-73.785394, 40.601518], [-73.785284, 40.601582], [-73.785194, 40.601605], [-73.784482, 40.6018], [-73.783942, 40.602141], [-73.783506, 40.602563], [-73.783446, 40.602805], [-73.783371, 40.603037], [-73.783128, 40.603761], [-73.783164, 40.603858], [-73.783227, 40.603916], [-73.783293, 40.60393], [-73.783326, 40.603932], [-73.78335, 40.603948], [-73.783391, 40.603972], [-73.783455, 40.60402], [-73.783481, 40.604048], [-73.783891, 40.604697], [-73.783924, 40.604777], [-73.783948, 40.604824], [-73.783957, 40.604865], [-73.783932, 40.604925], [-73.7839, 40.60496], [-73.783808, 40.605074], [-73.783667, 40.605324], [-73.780408, 40.608426], [-73.779401, 40.609226], [-73.778568, 40.609644], [-73.777279, 40.609849], [-73.776928, 40.609835], [-73.776667, 40.609773], [-73.776581, 40.609746], [-73.776475, 40.609695], [-73.776358, 40.609656], [-73.776124, 40.609663], [-73.775479, 40.609741], [-73.775352, 40.609737], [-73.775146, 40.609667], [-73.774923, 40.609521], [-73.774534, 40.609192], [-73.774222, 40.608893], [-73.774129, 40.608747], [-73.774129, 40.608707], [-73.774166, 40.608651], [-73.774223, 40.608601], [-73.77433, 40.608523], [-73.774426, 40.608465], [-73.774491, 40.608436], [-73.774536, 40.608432], [-73.774662, 40.608451], [-73.774814, 40.6084], [-73.774696, 40.608169], [-73.774397, 40.607936], [-73.774327, 40.607876], [-73.774309, 40.607856], [-73.774263, 40.607782], [-73.774247, 40.607746], [-73.774217, 40.607637], [-73.774222, 40.607583], [-73.774247, 40.607534], [-73.774275, 40.607495], [-73.774325, 40.607457], [-73.774353, 40.607443], [-73.774409, 40.607425], [-73.774462, 40.607417], [-73.774503, 40.607414], [-73.774551, 40.607414], [-73.774603, 40.607418], [-73.774621, 40.607424], [-73.774637, 40.607438], [-73.774641, 40.607452], [-73.774641, 40.607484], [-73.774634, 40.607545], [-73.774646, 40.6076], [-73.774667, 40.60765], [-73.774745, 40.607765], [-73.774764, 40.607787], [-73.774813, 40.607821], [-73.774824, 40.607837], [-73.774827, 40.607858], [-73.774827, 40.607894], [-73.774835, 40.60799], [-73.774849, 40.608025], [-73.774939, 40.60816], [-73.775135, 40.608409], [-73.775287, 40.608605], [-73.775448, 40.608737], [-73.775521, 40.608798], [-73.775543, 40.608823], [-73.775549, 40.608836], [-73.775567, 40.608898], [-73.775587, 40.608937], [-73.775604, 40.608959], [-73.775673, 40.609002], [-73.775742, 40.60906], [-73.775845, 40.609155], [-73.775904, 40.609197], [-73.775952, 40.609221], [-73.77596, 40.609223], [-73.775976, 40.60922], [-73.775997, 40.609207], [-73.776004, 40.609199], [-73.776008, 40.609189], [-73.776006, 40.609181], [-73.775931, 40.609107], [-73.775785, 40.608982], [-73.775706, 40.608903], [-73.775686, 40.608879], [-73.775598, 40.608757], [-73.775537, 40.608694], [-73.775375, 40.608554], [-73.775308, 40.608487], [-73.775185, 40.608332], [-73.775074, 40.608193], [-73.774974, 40.608099], [-73.774927, 40.608026], [-73.774925, 40.608], [-73.774931, 40.607938], [-73.774927, 40.607907], [-73.7749, 40.607832], [-73.774873, 40.607794], [-73.774806, 40.607724], [-73.77476, 40.607657], [-73.774747, 40.607631], [-73.774731, 40.60758], [-73.774728, 40.607551], [-73.77473, 40.60751], [-73.774737, 40.607481], [-73.774734, 40.607451], [-73.774717, 40.607422], [-73.774689, 40.607389], [-73.774635, 40.607351], [-73.774621, 40.607341], [-73.77459, 40.607298], [-73.774546, 40.607122], [-73.774582, 40.606932], [-73.774628, 40.606779], [-73.774584, 40.606526], [-73.774604, 40.606477], [-73.774716, 40.60633], [-73.774762, 40.606169], [-73.774828, 40.605984], [-73.774834, 40.605886], [-73.774839, 40.605854], [-73.774849, 40.605829], [-73.774881, 40.605769], [-73.774898, 40.605719], [-73.774913, 40.60563], [-73.774879, 40.605397], [-73.774876, 40.605327], [-73.774885, 40.605258], [-73.77518, 40.604564], [-73.775187, 40.6045], [-73.77518, 40.604449], [-73.775167, 40.604424], [-73.775149, 40.604406], [-73.775111, 40.604392], [-73.775054, 40.604393], [-73.774927, 40.604418], [-73.774891, 40.604421], [-73.774834, 40.604421], [-73.774791, 40.604417], [-73.774754, 40.60441], [-73.774723, 40.604399], [-73.774703, 40.604386], [-73.774694, 40.604375], [-73.774687, 40.604356], [-73.774688, 40.604325], [-73.774694, 40.604307], [-73.774709, 40.604278], [-73.774731, 40.604245], [-73.774772, 40.604202], [-73.77482, 40.604161], [-73.774878, 40.604126], [-73.774914, 40.604113], [-73.774969, 40.604101], [-73.775032, 40.604096], [-73.775067, 40.604096], [-73.775103, 40.604098], [-73.775129, 40.604102], [-73.775157, 40.604111], [-73.775187, 40.604122], [-73.775262, 40.604154], [-73.775303, 40.604167], [-73.775334, 40.60417], [-73.775361, 40.604165], [-73.775376, 40.604157], [-73.775444, 40.604096], [-73.775702, 40.603682], [-73.775881, 40.603472], [-73.775922, 40.603309], [-73.775933, 40.603269], [-73.77595, 40.60323], [-73.775989, 40.603155], [-73.776022, 40.603061], [-73.776032, 40.602934], [-73.776054, 40.602753], [-73.776046, 40.602739], [-73.776029, 40.602734], [-73.776004, 40.602734], [-73.775951, 40.602746], [-73.77591, 40.60276], [-73.775873, 40.602777], [-73.775834, 40.602804], [-73.775815, 40.60283], [-73.775799, 40.602876], [-73.775783, 40.602949], [-73.775771, 40.602981], [-73.775755, 40.603006], [-73.775748, 40.603011], [-73.775725, 40.60303], [-73.775689, 40.603042], [-73.775659, 40.603047], [-73.775633, 40.603048], [-73.775618, 40.603047], [-73.775597, 40.603043], [-73.775589, 40.60304], [-73.775581, 40.603034], [-73.775577, 40.603029], [-73.775576, 40.603021], [-73.775581, 40.602993], [-73.775598, 40.602936], [-73.775612, 40.602909], [-73.775645, 40.602858], [-73.775688, 40.602815], [-73.775707, 40.6028], [-73.776009, 40.602545], [-73.776036, 40.602525], [-73.776058, 40.602513], [-73.776108, 40.602496], [-73.776134, 40.60249], [-73.77616, 40.602487], [-73.776186, 40.602487], [-73.77621, 40.602489], [-73.776236, 40.602499], [-73.776278, 40.602517], [-73.776302, 40.602522], [-73.776327, 40.602524], [-73.776375, 40.602517], [-73.776433, 40.602489], [-73.776479, 40.602448], [-73.776555, 40.602364], [-73.776584, 40.602318], [-73.776609, 40.602264], [-73.776625, 40.602208], [-73.77661, 40.602197], [-73.776591, 40.602191], [-73.77657, 40.602189], [-73.776569, 40.602194], [-73.776566, 40.602199], [-73.776562, 40.602204], [-73.776557, 40.602207], [-73.776552, 40.602211], [-73.776546, 40.602213], [-73.776539, 40.602215], [-73.776532, 40.602216], [-73.776525, 40.602216], [-73.776519, 40.602215], [-73.776512, 40.602213], [-73.776506, 40.602211], [-73.7765, 40.602207], [-73.776495, 40.602203], [-73.776491, 40.602198], [-73.776489, 40.602193], [-73.776487, 40.602188], [-73.776487, 40.602182], [-73.776488, 40.602177], [-73.77649, 40.602172], [-73.776499, 40.602162], [-73.776513, 40.60215], [-73.77653, 40.602138], [-73.77656, 40.60212], [-73.776605, 40.602093], [-73.77667, 40.602041], [-73.776788, 40.601925], [-73.776847, 40.601845], [-73.776924, 40.601757], [-73.77696, 40.601722], [-73.776995, 40.601692], [-73.77703, 40.601666], [-73.777122, 40.601608], [-73.777336, 40.601473], [-73.777403, 40.601417], [-73.777476, 40.601322], [-73.777491, 40.601306], [-73.777514, 40.601288], [-73.777542, 40.601274], [-73.777572, 40.601263], [-73.777604, 40.601256], [-73.777622, 40.601242], [-73.777648, 40.601208], [-73.77766, 40.601152], [-73.777671, 40.601114], [-73.777691, 40.601077], [-73.777705, 40.601058], [-73.77776, 40.601002], [-73.777803, 40.600967], [-73.777907, 40.600897], [-73.777967, 40.600863], [-73.778029, 40.600831], [-73.778053, 40.600812], [-73.778083, 40.6008], [-73.778135, 40.600796], [-73.778357, 40.600845], [-73.778369, 40.600839], [-73.77836, 40.60082], [-73.778153, 40.600755], [-73.778134, 40.600748], [-73.778116, 40.600739], [-73.7781, 40.600728], [-73.778086, 40.600715], [-73.778076, 40.600701], [-73.77808, 40.600576], [-73.778075, 40.600533], [-73.778076, 40.600514], [-73.778091, 40.600483], [-73.778121, 40.60044], [-73.778138, 40.60042], [-73.778158, 40.600402], [-73.778181, 40.600386], [-73.778206, 40.600371], [-73.778232, 40.600362], [-73.778264, 40.600358], [-73.778302, 40.600359], [-73.778347, 40.600366], [-73.778367, 40.60037], [-73.778715, 40.600468], [-73.779247, 40.600555], [-73.77937, 40.600583], [-73.779524, 40.60063], [-73.779869, 40.600737], [-73.779968, 40.600752], [-73.780109, 40.600727], [-73.780257, 40.60065], [-73.780421, 40.600507], [-73.780694, 40.600217], [-73.780733, 40.600055], [-73.780755, 40.600004], [-73.780811, 40.599948], [-73.781166, 40.599771], [-73.781212, 40.599724], [-73.781316, 40.599631], [-73.781373, 40.599592], [-73.781541, 40.599351], [-73.78159, 40.599297], [-73.781635, 40.599263], [-73.781907, 40.599114], [-73.78201, 40.598862], [-73.781936, 40.598531], [-73.78159, 40.598133], [-73.781517, 40.598042], [-73.781388, 40.597991], [-73.781377, 40.597985], [-73.781359, 40.597969], [-73.78134, 40.597913], [-73.78133, 40.597753], [-73.781018, 40.597543], [-73.780748, 40.597393], [-73.780596, 40.597313], [-73.780478, 40.597297], [-73.780423, 40.597292], [-73.780366, 40.597274], [-73.780237, 40.597233], [-73.780183, 40.597213], [-73.780152, 40.597178], [-73.780144, 40.597147], [-73.78015, 40.597058], [-73.78016, 40.596989], [-73.780171, 40.596929], [-73.780168, 40.596898], [-73.780163, 40.596885], [-73.780156, 40.596881], [-73.780145, 40.596878], [-73.780101, 40.596878], [-73.780091, 40.596876], [-73.780081, 40.596872], [-73.780067, 40.596858], [-73.780055, 40.596861], [-73.780048, 40.596871], [-73.780045, 40.596885], [-73.780039, 40.596941], [-73.780026, 40.596992], [-73.780004, 40.597041], [-73.779974, 40.597088], [-73.779937, 40.597132], [-73.779893, 40.597172], [-73.779797, 40.597252], [-73.779727, 40.597295], [-73.779718, 40.597353], [-73.779443, 40.597485], [-73.779317, 40.59754], [-73.779044, 40.597649], [-73.778981, 40.59773], [-73.778987, 40.597753], [-73.779, 40.597772], [-73.779, 40.597779], [-73.778993, 40.597786], [-73.778768, 40.597966], [-73.778761, 40.597967], [-73.778752, 40.597966], [-73.778743, 40.597964], [-73.778725, 40.597955], [-73.778712, 40.597948], [-73.778602, 40.597985], [-73.778558, 40.598021], [-73.778537, 40.598063], [-73.778528, 40.598073], [-73.778512, 40.598086], [-73.778491, 40.598097], [-73.777422, 40.598812], [-73.777352, 40.599165], [-73.777315, 40.599246], [-73.777295, 40.599376], [-73.777199, 40.599577], [-73.776522, 40.600642], [-73.77635, 40.600985], [-73.776318, 40.601041], [-73.7763, 40.601062], [-73.776276, 40.601084], [-73.776002, 40.601394], [-73.775963, 40.601424], [-73.77568, 40.601607], [-73.7756, 40.601648], [-73.775564, 40.601658], [-73.775519, 40.601658], [-73.775455, 40.601651], [-73.775388, 40.601651], [-73.775293, 40.601682], [-73.775248, 40.601697], [-73.775227, 40.601701], [-73.775111, 40.601719], [-73.774972, 40.601744], [-73.774963, 40.601704], [-73.774948, 40.601673], [-73.774927, 40.601643], [-73.774868, 40.601593], [-73.774857, 40.601571], [-73.774851, 40.601548], [-73.77485, 40.601535], [-73.774851, 40.601523], [-73.774855, 40.601499], [-73.774874, 40.601462], [-73.774886, 40.601423], [-73.774885, 40.601344], [-73.774853, 40.601269], [-73.774783, 40.60118], [-73.774755, 40.601136], [-73.774732, 40.601091], [-73.774712, 40.60104], [-73.77471, 40.60103], [-73.774712, 40.601021], [-73.774742, 40.600963], [-73.774617, 40.600971], [-73.77462, 40.600997], [-73.774604, 40.600998], [-73.774602, 40.60098], [-73.774481, 40.600988], [-73.77448, 40.600971], [-73.774525, 40.600968], [-73.774523, 40.600953], [-73.774601, 40.600948], [-73.774599, 40.600931], [-73.774618, 40.600929], [-73.774621, 40.600958], [-73.774747, 40.60095], [-73.774764, 40.600846], [-73.774641, 40.600851], [-73.77464, 40.600838], [-73.774763, 40.600832], [-73.774743, 40.600744], [-73.774696, 40.600662], [-73.774637, 40.600597], [-73.774616, 40.600568], [-73.774599, 40.600537], [-73.774593, 40.60052], [-73.774589, 40.600496], [-73.774573, 40.600404], [-73.774484, 40.600355], [-73.774464, 40.600339], [-73.774455, 40.600328], [-73.774239, 40.600124], [-73.774128, 40.599908], [-73.77411, 40.599841], [-73.774109, 40.599593], [-73.774143, 40.599393], [-73.774118, 40.599267], [-73.774154, 40.598979], [-73.773827, 40.598755], [-73.773793, 40.598726], [-73.773772, 40.598705], [-73.773744, 40.59867], [-73.773725, 40.598628], [-73.773703, 40.598305], [-73.773585, 40.59812], [-73.773231, 40.598046], [-73.773147, 40.597995], [-73.773128, 40.597974], [-73.773006, 40.597867], [-73.772888, 40.597892], [-73.772737, 40.597906], [-73.77266, 40.597901], [-73.772121, 40.597946], [-73.771676, 40.597985], [-73.771201, 40.598276], [-73.771156, 40.598298], [-73.771109, 40.598308], [-73.771057, 40.59831], [-73.770986, 40.598302], [-73.770634, 40.598175], [-73.770594, 40.598157], [-73.770548, 40.598117], [-73.770373, 40.598092], [-73.770157, 40.598113], [-73.770005, 40.598119], [-73.769881, 40.598118], [-73.769803, 40.598126], [-73.769667, 40.598191], [-73.769613, 40.598219], [-73.769562, 40.598244], [-73.769514, 40.598257], [-73.769477, 40.598258], [-73.769422, 40.598249], [-73.769376, 40.598232], [-73.769281, 40.598195], [-73.768345, 40.597877], [-73.768241, 40.597838], [-73.768171, 40.597821], [-73.76814, 40.59782], [-73.768123, 40.597824]]]]
    },
    "properties": {
      "neighbourhood": "Edgemere",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.855258, 40.70259], [-73.855254, 40.701922], [-73.857264, 40.70166], [-73.857331, 40.701154], [-73.858891, 40.701326], [-73.858526, 40.702952], [-73.862811, 40.703437], [-73.869022, 40.702867], [-73.87565, 40.702358], [-73.876147, 40.701889], [-73.876138, 40.701593], [-73.881761, 40.699493], [-73.882728, 40.700714], [-73.88428, 40.700191], [-73.887716, 40.699676], [-73.888078, 40.699066], [-73.888119, 40.698824], [-73.887861, 40.698019], [-73.887697, 40.697499], [-73.88733, 40.697041], [-73.886807, 40.69667], [-73.886282, 40.696375], [-73.888475, 40.695899], [-73.888422, 40.695623], [-73.889064, 40.694944], [-73.891907, 40.694317], [-73.892363, 40.695293], [-73.895796, 40.694406], [-73.893679, 40.69322], [-73.893541, 40.692287], [-73.894605, 40.692584], [-73.896968, 40.69192], [-73.89772, 40.693411], [-73.897053, 40.693931], [-73.897346, 40.694115], [-73.900394, 40.69333], [-73.894388, 40.700784], [-73.896722, 40.706093], [-73.892385, 40.707171], [-73.891165, 40.708598], [-73.885984, 40.706282], [-73.88091, 40.706405], [-73.874887, 40.707003], [-73.872504, 40.708227], [-73.870155, 40.709222], [-73.86893, 40.709697], [-73.86662, 40.710402], [-73.86501, 40.710777], [-73.859637, 40.713401], [-73.859771, 40.711843], [-73.859186, 40.707094], [-73.858816, 40.706204], [-73.858233, 40.705597], [-73.855548, 40.703722], [-73.855291, 40.703144], [-73.855258, 40.70259]]]]
    },
    "properties": {
      "neighbourhood": "Glendale",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.747993, 40.61231], [-73.747614, 40.611998], [-73.747614, 40.611998], [-73.747216, 40.612179], [-73.747216, 40.612179], [-73.746942, 40.611775], [-73.746855, 40.611574], [-73.746855, 40.611574], [-73.746179, 40.611832], [-73.745762, 40.611992], [-73.745621, 40.611742], [-73.745368, 40.611204], [-73.744567, 40.610117], [-73.74387, 40.608892], [-73.74338, 40.608179], [-73.743072, 40.607886], [-73.743209, 40.607698], [-73.743325, 40.607537], [-73.743215, 40.607367], [-73.743147, 40.60726], [-73.741214, 40.605519], [-73.740291, 40.604598], [-73.740291, 40.604598], [-73.739225, 40.604142], [-73.738585, 40.603288], [-73.738151, 40.60271], [-73.737997, 40.601601], [-73.738309, 40.598208], [-73.738295, 40.598175], [-73.738075, 40.597818], [-73.738089, 40.597688], [-73.73826, 40.597626], [-73.738285, 40.597637], [-73.738313, 40.597642], [-73.738342, 40.59764], [-73.738369, 40.597631], [-73.738397, 40.597611], [-73.73841, 40.597595], [-73.73842, 40.597578], [-73.738426, 40.597561], [-73.73843, 40.597521], [-73.738437, 40.597501], [-73.738447, 40.597481], [-73.738462, 40.597463], [-73.738527, 40.597415], [-73.738527, 40.597392], [-73.738649, 40.597344], [-73.738635, 40.597313], [-73.738627, 40.597281], [-73.738577, 40.597263], [-73.738574, 40.597268], [-73.738559, 40.597263], [-73.738504, 40.597363], [-73.738489, 40.597359], [-73.73872, 40.596949], [-73.738738, 40.596955], [-73.738575, 40.597245], [-73.738588, 40.597248], [-73.738585, 40.597253], [-73.738626, 40.597266], [-73.738628, 40.597241], [-73.738633, 40.597217], [-73.73876, 40.596994], [-73.738771, 40.596982], [-73.738788, 40.596975], [-73.738819, 40.596981], [-73.738833, 40.596997], [-73.738939, 40.597091], [-73.739071, 40.597165], [-73.73922, 40.597215], [-73.73938, 40.597239], [-73.739543, 40.597235], [-73.739711, 40.597181], [-73.739927, 40.597055], [-73.740085, 40.596885], [-73.740118, 40.596728], [-73.740034, 40.596576], [-73.739913, 40.59649], [-73.73981, 40.596458], [-73.739799, 40.596429], [-73.739904, 40.596373], [-73.740037, 40.596281], [-73.740097, 40.596209], [-73.740154, 40.596203], [-73.740251, 40.59621], [-73.740309, 40.596187], [-73.740392, 40.596182], [-73.740393, 40.596236], [-73.740349, 40.596308], [-73.740284, 40.59641], [-73.740282, 40.59648], [-73.74036, 40.596775], [-73.740441, 40.596838], [-73.740514, 40.596859], [-73.740575, 40.596861], [-73.740608, 40.596874], [-73.740618, 40.596896], [-73.74062, 40.596931], [-73.740615, 40.596949], [-73.740607, 40.596965], [-73.740613, 40.59698], [-73.740626, 40.596993], [-73.740644, 40.597001], [-73.740685, 40.596999], [-73.740726, 40.596992], [-73.740764, 40.59698], [-73.740799, 40.596963], [-73.740808, 40.596955], [-73.740813, 40.596952], [-73.740825, 40.596947], [-73.740858, 40.596953], [-73.740892, 40.596955], [-73.740925, 40.596953], [-73.740958, 40.596946], [-73.740989, 40.596935], [-73.740997, 40.596933], [-73.741005, 40.596928], [-73.741007, 40.596925], [-73.741011, 40.596919], [-73.741011, 40.596911], [-73.741009, 40.596904], [-73.741003, 40.596898], [-73.741002, 40.596901], [-73.741, 40.596903], [-73.740997, 40.596905], [-73.740995, 40.596907], [-73.740991, 40.596908], [-73.740988, 40.596909], [-73.740985, 40.59691], [-73.740981, 40.59691], [-73.740977, 40.596909], [-73.740974, 40.596908], [-73.740971, 40.596907], [-73.740968, 40.596908], [-73.740966, 40.596908], [-73.740963, 40.596908], [-73.74096, 40.596908], [-73.740958, 40.596908], [-73.740955, 40.596907], [-73.740953, 40.596906], [-73.740951, 40.596904], [-73.740949, 40.596903], [-73.740948, 40.596901], [-73.740947, 40.596899], [-73.740947, 40.596897], [-73.740956, 40.59688], [-73.740969, 40.596864], [-73.740986, 40.59685], [-73.741005, 40.596838], [-73.741083, 40.596823], [-73.741124, 40.596822], [-73.741186, 40.596828], [-73.741208, 40.596828], [-73.74123, 40.596826], [-73.741251, 40.596821], [-73.741252, 40.596818], [-73.741256, 40.596813], [-73.741265, 40.596806], [-73.741278, 40.596805], [-73.74129, 40.596807], [-73.741303, 40.596817], [-73.741311, 40.596822], [-73.74133, 40.596828], [-73.74135, 40.596829], [-73.741358, 40.596834], [-73.741371, 40.596846], [-73.741379, 40.59686], [-73.741378, 40.596883], [-73.741422, 40.596926], [-73.741435, 40.596938], [-73.741466, 40.596924], [-73.741488, 40.596915], [-73.741512, 40.596908], [-73.741537, 40.596904], [-73.741574, 40.596904], [-73.741614, 40.596845], [-73.741659, 40.596811], [-73.741715, 40.596789], [-73.741778, 40.596782], [-73.741811, 40.596752], [-73.741831, 40.596696], [-73.741825, 40.596659], [-73.741792, 40.596614], [-73.741756, 40.596592], [-73.741713, 40.59658], [-73.741704, 40.596583], [-73.741684, 40.596585], [-73.741675, 40.596585], [-73.741656, 40.59658], [-73.741645, 40.596575], [-73.741596, 40.596549], [-73.741512, 40.596529], [-73.740943, 40.596547], [-73.740935, 40.59656], [-73.740926, 40.596567], [-73.740914, 40.59657], [-73.740875, 40.596556], [-73.740833, 40.596546], [-73.74079, 40.596542], [-73.740746, 40.596543], [-73.740617, 40.59657], [-73.740571, 40.596574], [-73.740526, 40.596573], [-73.740521, 40.596572], [-73.740516, 40.59657], [-73.740511, 40.596567], [-73.740508, 40.596564], [-73.740505, 40.59656], [-73.740503, 40.596556], [-73.740502, 40.596552], [-73.740502, 40.596548], [-73.740503, 40.596544], [-73.740504, 40.59654], [-73.740507, 40.596536], [-73.740511, 40.596533], [-73.740515, 40.59653], [-73.740546, 40.59649], [-73.740571, 40.596448], [-73.74059, 40.596404], [-73.740604, 40.596359], [-73.740611, 40.596313], [-73.740615, 40.596272], [-73.740611, 40.596232], [-73.740598, 40.596192], [-73.740576, 40.596154], [-73.740547, 40.59612], [-73.740531, 40.596125], [-73.740511, 40.596125], [-73.740502, 40.596113], [-73.740494, 40.596074], [-73.740479, 40.596068], [-73.740444, 40.59607], [-73.740415, 40.596092], [-73.740301, 40.596066], [-73.74029, 40.596038], [-73.740222, 40.596035], [-73.740187, 40.596047], [-73.739928, 40.596062], [-73.739812, 40.596275], [-73.739579, 40.596376], [-73.739532, 40.596535], [-73.73961, 40.596763], [-73.739464, 40.596878], [-73.739482, 40.596978], [-73.739488, 40.596976], [-73.739497, 40.59702], [-73.739698, 40.596922], [-73.739811, 40.596844], [-73.739883, 40.596771], [-73.739734, 40.596568], [-73.739655, 40.596585], [-73.739649, 40.596567], [-73.739747, 40.596543], [-73.73991, 40.596773], [-73.739796, 40.596883], [-73.739687, 40.596954], [-73.739636, 40.596982], [-73.739585, 40.597005], [-73.739517, 40.597036], [-73.739497, 40.597043], [-73.73944, 40.597047], [-73.739398, 40.597046], [-73.739366, 40.597041], [-73.739208, 40.596992], [-73.738929, 40.596875], [-73.738947, 40.596863], [-73.739223, 40.59698], [-73.739343, 40.59702], [-73.739398, 40.59703], [-73.739447, 40.597029], [-73.739445, 40.596978], [-73.739456, 40.596978], [-73.73944, 40.596897], [-73.739333, 40.596913], [-73.739107, 40.596804], [-73.739123, 40.596785], [-73.738947, 40.596763], [-73.738846, 40.596822], [-73.73883, 40.596805], [-73.738626, 40.59686], [-73.738584, 40.596861], [-73.738602, 40.596884], [-73.738524, 40.596914], [-73.738487, 40.596988], [-73.73845, 40.596983], [-73.738267, 40.597354], [-73.738223, 40.597351], [-73.738122, 40.597386], [-73.738133, 40.597286], [-73.738037, 40.595913], [-73.737637, 40.594415], [-73.737648, 40.594415], [-73.737654, 40.594419], [-73.737665, 40.594433], [-73.737674, 40.594458], [-73.737685, 40.594473], [-73.737706, 40.594492], [-73.737769, 40.594518], [-73.737867, 40.594539], [-73.73817, 40.59454], [-73.738294, 40.594519], [-73.738367, 40.594495], [-73.738428, 40.59447], [-73.738461, 40.594428], [-73.73846, 40.594376], [-73.738472, 40.594359], [-73.738487, 40.594352], [-73.73852, 40.594401], [-73.738521, 40.594425], [-73.738534, 40.594438], [-73.738567, 40.594445], [-73.738657, 40.594475], [-73.738772, 40.594525], [-73.738778, 40.594449], [-73.738784, 40.594413], [-73.73877, 40.594412], [-73.738778, 40.594355], [-73.738817, 40.59436], [-73.738811, 40.594416], [-73.738793, 40.594414], [-73.738786, 40.59453], [-73.739002, 40.594586], [-73.739072, 40.594596], [-73.739168, 40.594593], [-73.739195, 40.594586], [-73.739256, 40.594558], [-73.739277, 40.594546], [-73.739287, 40.594533], [-73.739285, 40.594507], [-73.739278, 40.594483], [-73.739281, 40.594465], [-73.739294, 40.594453], [-73.739304, 40.594454], [-73.739319, 40.594462], [-73.739349, 40.594512], [-73.739365, 40.594523], [-73.739528, 40.59455], [-73.739565, 40.594562], [-73.739565, 40.594519], [-73.739552, 40.594519], [-73.739552, 40.594426], [-73.739588, 40.594427], [-73.739587, 40.594518], [-73.739575, 40.594518], [-73.739575, 40.594565], [-73.73962, 40.59458], [-73.739695, 40.594589], [-73.739681, 40.594504], [-73.739958, 40.594501], [-73.739953, 40.594637], [-73.739987, 40.594633], [-73.740017, 40.594625], [-73.740047, 40.594615], [-73.740061, 40.594601], [-73.740073, 40.59458], [-73.740089, 40.594531], [-73.740108, 40.594511], [-73.740136, 40.594512], [-73.740141, 40.594518], [-73.740134, 40.594566], [-73.740143, 40.594582], [-73.740184, 40.594612], [-73.740364, 40.59467], [-73.740628, 40.594722], [-73.740698, 40.594696], [-73.740708, 40.594672], [-73.740739, 40.594671], [-73.740768, 40.594663], [-73.740793, 40.59465], [-73.740832, 40.594611], [-73.740841, 40.594547], [-73.740853, 40.594503], [-73.740866, 40.594491], [-73.740902, 40.594488], [-73.740917, 40.594506], [-73.740916, 40.594518], [-73.740889, 40.594597], [-73.740895, 40.594612], [-73.741152, 40.594715], [-73.741318, 40.594793], [-73.741621, 40.594786], [-73.741698, 40.594642], [-73.742071, 40.594829], [-73.742226, 40.594906], [-73.742429, 40.594869], [-73.742421, 40.594842], [-73.742387, 40.594729], [-73.742618, 40.594737], [-73.74276, 40.594744], [-73.742775, 40.594791], [-73.742796, 40.594805], [-73.74281, 40.594808], [-73.74284, 40.594819], [-73.742914, 40.594832], [-73.742974, 40.594832], [-73.74301, 40.594828], [-73.743041, 40.594819], [-73.743067, 40.594804], [-73.743099, 40.594792], [-73.743132, 40.594786], [-73.74335, 40.594795], [-73.743423, 40.594684], [-73.743484, 40.594591], [-73.744625, 40.594662], [-73.745887, 40.59439], [-73.746629, 40.594301], [-73.746924, 40.594124], [-73.746989, 40.594105], [-73.747234, 40.59407], [-73.748148, 40.593618], [-73.748951, 40.593413], [-73.750147, 40.592755], [-73.750226, 40.592711], [-73.751558, 40.591418], [-73.753358, 40.590989], [-73.753542, 40.590945], [-73.75556, 40.590886], [-73.755955, 40.590874], [-73.755987, 40.590882], [-73.757892, 40.591357], [-73.760178, 40.591602], [-73.761343, 40.591727], [-73.762953, 40.591611], [-73.763718, 40.591477], [-73.764622, 40.595675], [-73.765525, 40.595581], [-73.765559, 40.595869], [-73.766722, 40.596325], [-73.764968, 40.59738], [-73.761588, 40.599901], [-73.761658, 40.599973], [-73.759533, 40.601734], [-73.758239, 40.602547], [-73.758003, 40.602858], [-73.756009, 40.603873], [-73.75471, 40.606381], [-73.753458, 40.61052], [-73.753455, 40.610521], [-73.750088, 40.611641], [-73.74912, 40.611794], [-73.748216, 40.612011], [-73.747993, 40.61231], [-73.747993, 40.61231]]]]
    },
    "properties": {
      "neighbourhood": "Far Rockaway",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.777292, 40.722348], [-73.776815, 40.721857], [-73.773571, 40.71512], [-73.782625, 40.712938], [-73.782713, 40.712919], [-73.787718, 40.711865], [-73.789321, 40.71203], [-73.79304, 40.710711], [-73.793079, 40.712126], [-73.793479, 40.713097], [-73.79365, 40.714011], [-73.793136, 40.714753], [-73.792451, 40.71561], [-73.792337, 40.716581], [-73.792051, 40.717723], [-73.791423, 40.718693], [-73.791137, 40.719207], [-73.792051, 40.719207], [-73.793365, 40.718808], [-73.795934, 40.718351], [-73.797819, 40.717494], [-73.801645, 40.716581], [-73.805871, 40.716181], [-73.807684, 40.715554], [-73.809021, 40.719911], [-73.798459, 40.723492], [-73.795237, 40.724585], [-73.791745, 40.725776], [-73.781161, 40.729213], [-73.779557, 40.725814], [-73.779066, 40.724964], [-73.778045, 40.723323], [-73.777292, 40.722348]]]]
    },
    "properties": {
      "neighbourhood": "Jamaica Estates",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.013754, 40.71369], [-74.008614, 40.711372], [-74.005769, 40.712007], [-74.00536, 40.712151], [-74.003662, 40.711487], [-74.003355, 40.71123], [-74.003337, 40.711236], [-73.999102, 40.707968], [-73.999523, 40.707763], [-73.999491, 40.707722], [-73.999538, 40.707693], [-73.999551, 40.707694], [-73.999609, 40.70776], [-73.999949, 40.707591], [-73.999945, 40.707583], [-73.999949, 40.707559], [-73.999957, 40.707531], [-73.999972, 40.707506], [-74.000234, 40.707347], [-74.001187, 40.70686], [-74.001131, 40.706799], [-74.001232, 40.70674], [-74.00116, 40.706664], [-74.001175, 40.706649], [-74.001169, 40.706639], [-74.001176, 40.706635], [-74.001176, 40.706628], [-74.000983, 40.706417], [-74.001407, 40.706179], [-74.000731, 40.705568], [-74.000583, 40.705434], [-74.000592, 40.70541], [-74.001437, 40.704872], [-74.001461, 40.704874], [-74.001835, 40.705212], [-74.002061, 40.705417], [-74.002158, 40.705357], [-74.00257, 40.705524], [-74.002685, 40.705449], [-74.002363, 40.705159], [-74.002416, 40.705129], [-74.001971, 40.704738], [-74.00197, 40.704731], [-74.002172, 40.704607], [-74.002186, 40.704607], [-74.002333, 40.704748], [-74.002334, 40.704743], [-74.002421, 40.70468], [-74.002431, 40.704678], [-74.002488, 40.704727], [-74.002488, 40.704734], [-74.002398, 40.704795], [-74.002387, 40.704796], [-74.003323, 40.705629], [-74.003632, 40.70543], [-74.003608, 40.705408], [-74.003559, 40.705438], [-74.002878, 40.704831], [-74.002972, 40.704766], [-74.003584, 40.705302], [-74.00365, 40.705378], [-74.003622, 40.705399], [-74.003644, 40.705422], [-74.003833, 40.705303], [-74.003948, 40.705403], [-74.004383, 40.705113], [-74.004267, 40.705012], [-74.00459, 40.704788], [-74.003496, 40.703797], [-74.00372, 40.703654], [-74.003985, 40.703896], [-74.004806, 40.704642], [-74.004841, 40.70464], [-74.005188, 40.704421], [-74.005111, 40.704351], [-74.005085, 40.704366], [-74.004926, 40.704212], [-74.005004, 40.704165], [-74.005163, 40.70432], [-74.005139, 40.704335], [-74.005212, 40.704406], [-74.00535, 40.70431], [-74.004181, 40.70325], [-74.004157, 40.703232], [-74.004207, 40.703199], [-74.004118, 40.703112], [-74.004273, 40.703016], [-74.004298, 40.703017], [-74.004326, 40.703045], [-74.004347, 40.703047], [-74.004677, 40.703348], [-74.004802, 40.703484], [-74.004988, 40.703637], [-74.005208, 40.703821], [-74.005396, 40.703942], [-74.005663, 40.704104], [-74.006019, 40.703873], [-74.00614, 40.703979], [-74.006596, 40.703686], [-74.006324, 40.70347], [-74.005484, 40.702714], [-74.005527, 40.702685], [-74.005505, 40.702667], [-74.005471, 40.70269], [-74.005436, 40.70266], [-74.005427, 40.702665], [-74.005304, 40.70256], [-74.005494, 40.702431], [-74.005502, 40.702431], [-74.005614, 40.70253], [-74.005609, 40.702553], [-74.005599, 40.70258], [-74.005592, 40.702599], [-74.005589, 40.702613], [-74.005535, 40.702646], [-74.005558, 40.702664], [-74.005675, 40.702584], [-74.006239, 40.70308], [-74.006494, 40.703301], [-74.006785, 40.703568], [-74.007527, 40.703115], [-74.007659, 40.702909], [-74.007705, 40.702882], [-74.007707, 40.702875], [-74.009128, 40.702008], [-74.009309, 40.701955], [-74.009085, 40.701655], [-74.0087, 40.70114], [-74.007755, 40.701548], [-74.007591, 40.701328], [-74.008536, 40.70092], [-74.008349, 40.700669], [-74.00862, 40.700552], [-74.009342, 40.70152], [-74.009601, 40.701865], [-74.010511, 40.70164], [-74.011167, 40.701477], [-74.011096, 40.701275], [-74.01129, 40.70125], [-74.01121, 40.701045], [-74.011129, 40.701065], [-74.011078, 40.700957], [-74.011067, 40.700915], [-74.011109, 40.700901], [-74.011094, 40.700866], [-74.011093, 40.700851], [-74.011079, 40.700852], [-74.011056, 40.700812], [-74.011059, 40.700803], [-74.011037, 40.700757], [-74.011015, 40.700741], [-74.011029, 40.700731], [-74.01102, 40.700712], [-74.011007, 40.700711], [-74.010993, 40.700691], [-74.011009, 40.700684], [-74.011004, 40.700668], [-74.010991, 40.700673], [-74.01097, 40.700646], [-74.010988, 40.700634], [-74.010958, 40.700575], [-74.010936, 40.700576], [-74.010925, 40.700567], [-74.010926, 40.700556], [-74.010947, 40.700538], [-74.010919, 40.700486], [-74.010905, 40.700492], [-74.010885, 40.700461], [-74.010904, 40.700451], [-74.010785, 40.700233], [-74.010815, 40.7002], [-74.010852, 40.700239], [-74.01115, 40.700898], [-74.011358, 40.700852], [-74.011303, 40.700648], [-74.011298, 40.700599], [-74.01131, 40.70058], [-74.011334, 40.700568], [-74.011361, 40.700566], [-74.011382, 40.70057], [-74.011395, 40.700591], [-74.011503, 40.700815], [-74.011729, 40.70077], [-74.011683, 40.700693], [-74.011665, 40.700638], [-74.011631, 40.700555], [-74.01161, 40.700493], [-74.011614, 40.700473], [-74.011631, 40.700458], [-74.011678, 40.700462], [-74.011703, 40.700481], [-74.011726, 40.700479], [-74.011751, 40.700531], [-74.011777, 40.700571], [-74.011826, 40.700666], [-74.011854, 40.700739], [-74.012087, 40.700681], [-74.012069, 40.7006], [-74.011977, 40.700378], [-74.011905, 40.700227], [-74.011857, 40.700107], [-74.011931, 40.700051], [-74.011962, 40.700038], [-74.01204, 40.700048], [-74.012088, 40.700087], [-74.012128, 40.700143], [-74.012158, 40.700211], [-74.012237, 40.700321], [-74.012255, 40.700365], [-74.012392, 40.700621], [-74.012594, 40.700571], [-74.012591, 40.700512], [-74.012555, 40.70036], [-74.012529, 40.700252], [-74.012516, 40.700185], [-74.012515, 40.70015], [-74.012542, 40.700135], [-74.012614, 40.700108], [-74.012648, 40.700115], [-74.012681, 40.700147], [-74.012735, 40.700219], [-74.012796, 40.7003], [-74.012835, 40.700353], [-74.012866, 40.700408], [-74.012905, 40.700497], [-74.012909, 40.700524], [-74.013107, 40.700507], [-74.013112, 40.70036], [-74.013078, 40.700103], [-74.013034, 40.699924], [-74.013025, 40.699883], [-74.013012, 40.699818], [-74.013021, 40.699793], [-74.013044, 40.699775], [-74.013113, 40.699774], [-74.013141, 40.699803], [-74.013154, 40.699845], [-74.013167, 40.699931], [-74.013201, 40.70024], [-74.013273, 40.700497], [-74.013486, 40.700478], [-74.013481, 40.700358], [-74.013483, 40.700263], [-74.013503, 40.700176], [-74.013533, 40.700108], [-74.013587, 40.70008], [-74.01361, 40.700084], [-74.013675, 40.700126], [-74.013643, 40.700162], [-74.013612, 40.700245], [-74.01357, 40.700232], [-74.013561, 40.700295], [-74.013533, 40.700297], [-74.01353, 40.700311], [-74.013561, 40.70031], [-74.01356, 40.700367], [-74.01353, 40.700374], [-74.013531, 40.700382], [-74.013563, 40.70038], [-74.01356, 40.700439], [-74.013524, 40.700442], [-74.013523, 40.70046], [-74.013581, 40.700457], [-74.013585, 40.700502], [-74.013553, 40.700503], [-74.013577, 40.700644], [-74.01351, 40.70065], [-74.013558, 40.70094], [-74.013952, 40.700991], [-74.013959, 40.700966], [-74.014008, 40.701043], [-74.015127, 40.70139], [-74.01563, 40.701862], [-74.016174, 40.702572], [-74.016542, 40.704733], [-74.014262, 40.710928], [-74.013754, 40.71369]]]]
    },
    "properties": {
      "neighbourhood": "Financial District",
      "neighbourhood_group": "Manhattan"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.952959, 40.655249], [-73.9509, 40.636087], [-73.951101, 40.636073], [-73.946479, 40.631708], [-73.94551, 40.630792], [-73.947458, 40.63059], [-73.957124, 40.629586], [-73.9659, 40.628648], [-73.96678, 40.632295], [-73.971397, 40.6482], [-73.972093, 40.650673], [-73.971834, 40.650769], [-73.971698, 40.650948], [-73.971469, 40.651108], [-73.9619, 40.654871], [-73.9619, 40.65487], [-73.96176, 40.654071], [-73.959696, 40.654839], [-73.952959, 40.65525], [-73.952959, 40.655249]]]]
    },
    "properties": {
      "neighbourhood": "Flatbush",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.983381, 40.741375], [-73.984742, 40.739503], [-73.984743, 40.739502], [-73.985232, 40.738833], [-73.986875, 40.739522], [-73.987743, 40.738311], [-73.989777, 40.739169], [-73.994211, 40.741013], [-73.991356, 40.744763], [-73.983381, 40.741375]]]]
    },
    "properties": {
      "neighbourhood": "Flatiron District",
      "neighbourhood_group": "Manhattan"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.922616, 40.633224], [-73.920159, 40.633316], [-73.918586, 40.632057], [-73.917253, 40.619549], [-73.916903, 40.616274], [-73.924359, 40.611466], [-73.935401, 40.621191], [-73.940764, 40.617723], [-73.943505, 40.617362], [-73.943958, 40.616816], [-73.944827, 40.616046], [-73.947458, 40.63059], [-73.94551, 40.630792], [-73.946479, 40.631708], [-73.922616, 40.633224]]]]
    },
    "properties": {
      "neighbourhood": "Flatlands",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.750236, 40.685649], [-73.740806, 40.682769], [-73.740365, 40.68344], [-73.73562, 40.681871], [-73.733646, 40.685542], [-73.727183, 40.683597], [-73.728102, 40.681766], [-73.729506, 40.680056], [-73.730527, 40.679364], [-73.731874, 40.677569], [-73.733283, 40.676145], [-73.736011, 40.67261], [-73.736249, 40.672631], [-73.737242, 40.670956], [-73.7385, 40.669285], [-73.740804, 40.666844], [-73.74118, 40.666403], [-73.745368, 40.6664], [-73.746086, 40.6664], [-73.74787, 40.667025], [-73.750378, 40.668696], [-73.750772, 40.669796], [-73.751974, 40.671179], [-73.753546, 40.673497], [-73.755657, 40.676157], [-73.754849, 40.677929], [-73.752258, 40.681491], [-73.750236, 40.685649]]]]
    },
    "properties": {
      "neighbourhood": "Laurelton",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.056849, 40.608039], [-74.057787, 40.60745], [-74.060379, 40.606277], [-74.057496, 40.602363], [-74.059556, 40.601925], [-74.064638, 40.600183], [-74.066503, 40.603336], [-74.073339, 40.606098], [-74.076443, 40.606774], [-74.076254, 40.607743], [-74.076138, 40.607982], [-74.07609, 40.608188], [-74.075769, 40.608742], [-74.07497, 40.609513], [-74.07415, 40.610014], [-74.062815, 40.615671], [-74.061833, 40.614787], [-74.061307, 40.614192], [-74.060958, 40.613368], [-74.060809, 40.613032], [-74.060738, 40.613047], [-74.060649, 40.612808], [-74.060674, 40.612578], [-74.060612, 40.612306], [-74.060504, 40.612101], [-74.060337, 40.611902], [-74.06009, 40.612015], [-74.06008, 40.611998], [-74.060005, 40.612033], [-74.060009, 40.612038], [-74.059854, 40.612103], [-74.060047, 40.612722], [-74.060004, 40.612727], [-74.060016, 40.612764], [-74.060198, 40.612786], [-74.060196, 40.612802], [-74.059999, 40.612784], [-74.059769, 40.612057], [-74.060034, 40.611943], [-74.06002, 40.611929], [-74.060272, 40.61182], [-74.060078, 40.61183], [-74.059901, 40.611749], [-74.059533, 40.611714], [-74.059451, 40.611674], [-74.059271, 40.611493], [-74.058922, 40.611056], [-74.058901, 40.611002], [-74.058927, 40.610938], [-74.059123, 40.610822], [-74.059109, 40.610749], [-74.059086, 40.610634], [-74.058761, 40.610314], [-74.057164, 40.608743], [-74.056849, 40.608039]]]]
    },
    "properties": {
      "neighbourhood": "Shore Acres",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.792761, 40.774006], [-73.792715, 40.773788], [-73.792248, 40.771493], [-73.792248, 40.769722], [-73.792248, 40.769722], [-73.790078, 40.766524], [-73.788136, 40.764526], [-73.785566, 40.762927], [-73.785338, 40.762241], [-73.785167, 40.760928], [-73.783796, 40.758644], [-73.783282, 40.757444], [-73.781683, 40.754874], [-73.780532, 40.753329], [-73.7861, 40.752532], [-73.787862, 40.75184], [-73.788301, 40.751482], [-73.792168, 40.750475], [-73.794727, 40.750565], [-73.79481, 40.748415], [-73.79452, 40.7459], [-73.794535, 40.744508], [-73.795723, 40.742984], [-73.796707, 40.742028], [-73.797267, 40.74056], [-73.796239, 40.737884], [-73.79512, 40.736411], [-73.794586, 40.735052], [-73.794626, 40.733596], [-73.79382, 40.731657], [-73.793784, 40.730709], [-73.791745, 40.725776], [-73.795237, 40.724585], [-73.798459, 40.723492], [-73.809021, 40.719911], [-73.809023, 40.719918], [-73.809023, 40.719918], [-73.809342, 40.720957], [-73.81063, 40.72442], [-73.810744, 40.726265], [-73.81444, 40.728087], [-73.815231, 40.728794], [-73.8148, 40.733776], [-73.821859, 40.734433], [-73.821666, 40.735447], [-73.825244, 40.735098], [-73.825665, 40.732273], [-73.833833, 40.730465], [-73.836066, 40.734128], [-73.83646, 40.73709], [-73.836657, 40.738557], [-73.837593, 40.74178], [-73.837769, 40.742961], [-73.837071, 40.744775], [-73.834847, 40.747584], [-73.834839, 40.74958], [-73.838063, 40.754575], [-73.846158, 40.751757], [-73.849286, 40.752319], [-73.849836, 40.75338], [-73.843189, 40.755352], [-73.84552, 40.759775], [-73.851347, 40.758146], [-73.854633, 40.758466], [-73.854664, 40.760171], [-73.85452, 40.760159], [-73.854252, 40.760251], [-73.853965, 40.760271], [-73.853724, 40.760246], [-73.852779, 40.759973], [-73.852104, 40.759683], [-73.852008, 40.759573], [-73.851887, 40.759522], [-73.851713, 40.759401], [-73.851586, 40.759355], [-73.851443, 40.759419], [-73.850691, 40.759449], [-73.850298, 40.759546], [-73.84994, 40.759698], [-73.849605, 40.759923], [-73.849301, 40.760243], [-73.849875, 40.761104], [-73.851817, 40.760354], [-73.85184, 40.760306], [-73.851974, 40.760249], [-73.852072, 40.760393], [-73.849812, 40.761271], [-73.849167, 40.760297], [-73.849141, 40.760307], [-73.848914, 40.760276], [-73.848687, 40.760138], [-73.848588, 40.76018], [-73.848212, 40.760438], [-73.847962, 40.760551], [-73.846834, 40.761266], [-73.845414, 40.762301], [-73.845232, 40.762435], [-73.845097, 40.762523], [-73.844745, 40.762756], [-73.844676, 40.762752], [-73.844286, 40.762999], [-73.844116, 40.763136], [-73.843915, 40.763232], [-73.843774, 40.763299], [-73.843594, 40.763371], [-73.843668, 40.76347], [-73.843615, 40.763497], [-73.843688, 40.763613], [-73.84365, 40.763628], [-73.843571, 40.763515], [-73.84352, 40.763537], [-73.843436, 40.763433], [-73.84307, 40.763593], [-73.842983, 40.763832], [-73.843051, 40.764097], [-73.843042, 40.764321], [-73.842985, 40.764424], [-73.842728, 40.764629], [-73.842117, 40.764901], [-73.840526, 40.765388], [-73.840022, 40.765316], [-73.839354, 40.765057], [-73.838742, 40.766211], [-73.83701, 40.768448], [-73.836909, 40.768866], [-73.835486, 40.770081], [-73.835398, 40.77036], [-73.830624, 40.77329], [-73.829014, 40.774864], [-73.828841, 40.774699], [-73.828099, 40.776031], [-73.827777, 40.775977], [-73.827178, 40.777046], [-73.825825, 40.776671], [-73.82167, 40.776863], [-73.817643, 40.776398], [-73.812784, 40.775615], [-73.792761, 40.774006]]]]
    },
    "properties": {
      "neighbourhood": "Flushing",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.980051, 40.68186], [-73.9839, 40.676148], [-73.988726, 40.670342], [-73.989229, 40.669747], [-73.992801, 40.665527], [-73.995193, 40.667025], [-73.997092, 40.669267], [-73.99827, 40.671153], [-73.99866, 40.671705], [-73.998769, 40.671602], [-73.99866, 40.671705], [-73.99896, 40.67218], [-73.99646, 40.677457], [-73.994596, 40.676572], [-73.98914, 40.684594], [-73.988712, 40.685224], [-73.980051, 40.68186]]]]
    },
    "properties": {
      "neighbourhood": "Gowanus",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.846937, 40.738705], [-73.846055, 40.737099], [-73.845426, 40.73495], [-73.84435, 40.732979], [-73.842774, 40.73112], [-73.841385, 40.729998], [-73.839798, 40.728199], [-73.836542, 40.722547], [-73.835356, 40.720805], [-73.834915, 40.719299], [-73.833529, 40.718418], [-73.829856, 40.715619], [-73.830079, 40.715161], [-73.830387, 40.714961], [-73.830757, 40.714533], [-73.83355, 40.713044], [-73.835994, 40.711727], [-73.836112, 40.711828], [-73.836854, 40.71138], [-73.838043, 40.710927], [-73.840771, 40.71015], [-73.843115, 40.709208], [-73.845038, 40.708518], [-73.846923, 40.708294], [-73.848942, 40.708479], [-73.851108, 40.707911], [-73.854795, 40.706784], [-73.85433, 40.706171], [-73.854377, 40.705362], [-73.854663, 40.70495], [-73.852229, 40.702248], [-73.855258, 40.70259], [-73.855291, 40.703144], [-73.855548, 40.703722], [-73.858233, 40.705597], [-73.858816, 40.706204], [-73.859186, 40.707094], [-73.859771, 40.711843], [-73.856448, 40.711338], [-73.857479, 40.719677], [-73.856652, 40.719869], [-73.857268, 40.721504], [-73.853721, 40.726962], [-73.852724, 40.726639], [-73.852008, 40.726866], [-73.85173, 40.728478], [-73.85326, 40.731103], [-73.854207, 40.733043], [-73.854715, 40.732863], [-73.856152, 40.735648], [-73.856492, 40.736273], [-73.85339, 40.736933], [-73.851571, 40.737386], [-73.848853, 40.738327], [-73.846937, 40.738705]]]]
    },
    "properties": {
      "neighbourhood": "Forest Hills",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.970773, 40.69784], [-73.967477, 40.68175], [-73.97378, 40.683061], [-73.97593, 40.683505], [-73.977431, 40.684043], [-73.978026, 40.684864], [-73.979903, 40.687466], [-73.980881, 40.688838], [-73.982631, 40.692224], [-73.982419, 40.695973], [-73.980507, 40.696498], [-73.980544, 40.698246], [-73.970773, 40.69784]]]]
    },
    "properties": {
      "neighbourhood": "Fort Greene",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.021216, 40.618472], [-74.024694, 40.60996], [-74.021502, 40.607828], [-74.022477, 40.606674], [-74.020786, 40.605673], [-74.02122, 40.604738], [-74.02116, 40.604467], [-74.019156, 40.603816], [-74.019152, 40.60382], [-74.018641, 40.603655], [-74.019435, 40.602844], [-74.019748, 40.603085], [-74.020028, 40.603195], [-74.020133, 40.603237], [-74.020857, 40.603522], [-74.022699, 40.60377], [-74.02276, 40.603778], [-74.02466, 40.604034], [-74.029464, 40.60468], [-74.030051, 40.604759], [-74.032707, 40.606331], [-74.032845, 40.606453], [-74.034273, 40.607717], [-74.03487, 40.608582], [-74.035568, 40.609008], [-74.03604, 40.609296], [-74.03613, 40.609489], [-74.036916, 40.611181], [-74.039206, 40.61344], [-74.040234, 40.615028], [-74.041617, 40.620563], [-74.041706, 40.623196], [-74.04171, 40.623305], [-74.041895, 40.624299], [-74.041652, 40.626018], [-74.02835, 40.622799], [-74.021216, 40.618472]]]]
    },
    "properties": {
      "neighbourhood": "Fort Hamilton",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.06078, 40.593188], [-74.062829, 40.595236], [-74.062397, 40.59585], [-74.061829, 40.596306], [-74.062076, 40.596841], [-74.064638, 40.600183], [-74.059556, 40.601925], [-74.057496, 40.602363], [-74.060379, 40.606277], [-74.057787, 40.60745], [-74.056849, 40.608039], [-74.056496, 40.607248], [-74.056407, 40.607189], [-74.05601, 40.606781], [-74.055521, 40.606483], [-74.055432, 40.606482], [-74.055379, 40.606494], [-74.055287, 40.606539], [-74.05516, 40.60673], [-74.054989, 40.606661], [-74.054999, 40.606646], [-74.055034, 40.60666], [-74.055052, 40.606634], [-74.05502, 40.606621], [-74.055056, 40.606569], [-74.055104, 40.606588], [-74.055182, 40.606475], [-74.055153, 40.606329], [-74.05506, 40.606265], [-74.054407, 40.606081], [-74.053811, 40.605913], [-74.053607, 40.605239], [-74.05402, 40.604935], [-74.053696, 40.604148], [-74.05354, 40.603634], [-74.053047, 40.601623], [-74.053033, 40.601466], [-74.053036, 40.601401], [-74.053048, 40.601336], [-74.053067, 40.601273], [-74.053096, 40.601211], [-74.053188, 40.601128], [-74.053319, 40.601011], [-74.053384, 40.600895], [-74.053386, 40.60086], [-74.053407, 40.600523], [-74.053007, 40.60016], [-74.052403, 40.599869], [-74.052254, 40.599851], [-74.05223, 40.599824], [-74.052228, 40.599776], [-74.052245, 40.599748], [-74.052291, 40.59972], [-74.052325, 40.599715], [-74.052372, 40.599719], [-74.052492, 40.599737], [-74.052607, 40.599815], [-74.052794, 40.599873], [-74.052893, 40.599863], [-74.054341, 40.598819], [-74.054312, 40.598778], [-74.054336, 40.59876], [-74.054474, 40.598756], [-74.057194, 40.596395], [-74.058373, 40.595237], [-74.059727, 40.593908], [-74.059747, 40.593849], [-74.059641, 40.593709], [-74.059663, 40.593703], [-74.059767, 40.593835], [-74.060554, 40.59338], [-74.06078, 40.593188]]]]
    },
    "properties": {
      "neighbourhood": "Fort Wadsworth",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.775601, 40.743026], [-73.772868, 40.736309], [-73.770177, 40.731771], [-73.777542, 40.730228], [-73.775223, 40.725191], [-73.778045, 40.723323], [-73.779066, 40.724964], [-73.779557, 40.725814], [-73.781161, 40.729213], [-73.791745, 40.725776], [-73.793784, 40.730709], [-73.79382, 40.731657], [-73.794626, 40.733596], [-73.794586, 40.735052], [-73.79512, 40.736411], [-73.796239, 40.737884], [-73.797267, 40.74056], [-73.796707, 40.742028], [-73.795723, 40.742984], [-73.794535, 40.744508], [-73.79452, 40.7459], [-73.79481, 40.748415], [-73.794727, 40.750565], [-73.792168, 40.750475], [-73.788301, 40.751482], [-73.787862, 40.75184], [-73.7861, 40.752532], [-73.780532, 40.753329], [-73.780532, 40.753329], [-73.775601, 40.743026]]]]
    },
    "properties": {
      "neighbourhood": "Fresh Meadows",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.978527, 40.736855], [-73.982022, 40.732012], [-73.982553, 40.731375], [-73.982554, 40.731375], [-73.990704, 40.734782], [-73.991725, 40.735245], [-73.990371, 40.737098], [-73.989777, 40.739169], [-73.987743, 40.738311], [-73.986875, 40.739522], [-73.985232, 40.738833], [-73.984743, 40.739502], [-73.984742, 40.739503], [-73.97852, 40.736858], [-73.978527, 40.736856], [-73.978527, 40.736855]]]]
    },
    "properties": {
      "neighbourhood": "Gramercy",
      "neighbourhood_group": "Manhattan"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.14612, 40.624931], [-74.144025, 40.624992], [-74.14579, 40.611932], [-74.14602, 40.610344], [-74.14697, 40.610151], [-74.14721, 40.608259], [-74.150506, 40.609906], [-74.157965, 40.615653], [-74.160501, 40.617416], [-74.161154, 40.618092], [-74.16848, 40.621562], [-74.167934, 40.622401], [-74.1676, 40.623125], [-74.166559, 40.627367], [-74.163733, 40.626874], [-74.1605, 40.62653], [-74.1578, 40.626172], [-74.152423, 40.625536], [-74.146127, 40.624931], [-74.14612, 40.624931]]]]
    },
    "properties": {
      "neighbourhood": "Graniteville",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.967666, 40.609394], [-73.964638, 40.593328], [-73.96661, 40.584575], [-73.967878, 40.584602], [-73.969087, 40.584001], [-73.97056, 40.583909], [-73.977517, 40.582745], [-73.982734, 40.58337], [-73.984646, 40.581538], [-73.985709, 40.581267], [-73.985761, 40.581441], [-73.985959, 40.58141], [-73.986045, 40.581721], [-73.986707, 40.581291], [-73.986945, 40.581136], [-73.987281, 40.58072], [-73.987574, 40.580031], [-73.987747, 40.57986], [-73.98801, 40.579671], [-73.988117, 40.57968], [-73.988904, 40.580009], [-73.989542, 40.580415], [-73.9897, 40.580421], [-73.989955, 40.580662], [-73.989987, 40.58067], [-73.991194, 40.581028], [-73.99163, 40.58108], [-73.991743, 40.5812], [-73.991683, 40.581383], [-73.991731, 40.581487], [-73.991825, 40.581504], [-73.991855, 40.581624], [-73.991822, 40.581729], [-73.991825, 40.581739], [-73.990338, 40.584218], [-73.990351, 40.584277], [-73.990356, 40.584336], [-73.990353, 40.584395], [-73.990342, 40.584453], [-73.990323, 40.58451], [-73.990296, 40.584566], [-73.990262, 40.584619], [-73.990976, 40.58435], [-73.992727, 40.583562], [-73.992847, 40.583451], [-73.992886, 40.583424], [-73.99293, 40.583402], [-73.993117, 40.583291], [-73.993147, 40.583272], [-73.993702, 40.582981], [-73.994025, 40.582834], [-73.994864, 40.582491], [-73.995397, 40.582228], [-73.996055, 40.582129], [-73.996726, 40.582253], [-74.000179, 40.583074], [-74.000309, 40.583177], [-74.000417, 40.583546], [-74.000417, 40.583546], [-74.000437, 40.584049], [-74.00036, 40.584186], [-73.999858, 40.584543], [-73.99934, 40.584861], [-73.998788, 40.585153], [-73.998461, 40.585286], [-73.998085, 40.585365], [-73.998089, 40.585471], [-73.999289, 40.585552], [-73.999469, 40.58569], [-73.999706, 40.58569], [-73.9997, 40.585754], [-73.999526, 40.585759], [-73.999634, 40.58607], [-73.999565, 40.586244], [-73.999357, 40.586381], [-73.998776, 40.586484], [-73.998145, 40.586532], [-73.994173, 40.588383], [-73.994235, 40.588439], [-73.995599, 40.587842], [-73.995661, 40.587936], [-73.994079, 40.588693], [-73.994216, 40.588869], [-73.995331, 40.58833], [-73.995346, 40.588345], [-73.995483, 40.588285], [-73.99549, 40.588297], [-73.995552, 40.588265], [-73.995563, 40.588277], [-73.995134, 40.588481], [-73.995155, 40.588515], [-73.995057, 40.588561], [-73.995099, 40.588593], [-73.995522, 40.588391], [-73.995528, 40.588404], [-73.997956, 40.58727], [-73.997979, 40.587312], [-73.99555, 40.588421], [-73.99555, 40.588434], [-73.994877, 40.588772], [-73.995347, 40.589331], [-74.000114, 40.586952], [-74.000103, 40.586591], [-74.000109, 40.586561], [-74.000165, 40.586505], [-74.000238, 40.586471], [-74.000317, 40.586453], [-74.000374, 40.586475], [-74.000433, 40.586545], [-74.000425, 40.586692], [-74.000489, 40.587043], [-74.000382, 40.587133], [-73.997883, 40.588343], [-73.997934, 40.588399], [-73.998019, 40.588425], [-73.998639, 40.589159], [-73.998673, 40.589196], [-73.999004, 40.589043], [-73.999237, 40.588935], [-73.999464, 40.589233], [-73.999258, 40.589335], [-73.998378, 40.58977], [-73.998421, 40.589814], [-73.998836, 40.589625], [-73.998866, 40.589667], [-73.998444, 40.58986], [-73.998553, 40.590018], [-73.998682, 40.59013], [-73.998743, 40.59019], [-73.99878, 40.590232], [-73.998794, 40.590281], [-73.998778, 40.590314], [-73.998733, 40.590335], [-73.998688, 40.590326], [-73.998653, 40.590291], [-73.998594, 40.590228], [-73.998533, 40.590209], [-73.99849, 40.590217], [-73.998443, 40.59024], [-73.99776, 40.590952], [-73.997112, 40.591278], [-73.997112, 40.591279], [-73.997107, 40.591391], [-73.997158, 40.591555], [-73.997228, 40.591654], [-73.998064, 40.591209], [-73.998129, 40.591289], [-73.997283, 40.591715], [-73.997549, 40.591918], [-73.999168, 40.591149], [-73.999573, 40.591093], [-73.999862, 40.591128], [-74.000043, 40.591204], [-74.000172, 40.591327], [-74.00022, 40.591426], [-74.000233, 40.591531], [-74.000058, 40.591715], [-73.999457, 40.59209], [-73.999012, 40.592335], [-73.999021, 40.592412], [-73.999093, 40.592446], [-73.9993, 40.592559], [-73.999423, 40.592756], [-73.999483, 40.592969], [-73.998975, 40.593306], [-73.998388, 40.593531], [-73.998391, 40.593532], [-73.998544, 40.593597], [-73.999874, 40.592999], [-74.000545, 40.592719], [-74.001057, 40.592537], [-74.001574, 40.593373], [-74.001933, 40.593895], [-74.001844, 40.593978], [-74.000167, 40.595549], [-74.000471, 40.595939], [-73.99962, 40.596469], [-73.99381, 40.60195], [-73.988423, 40.607119], [-73.972994, 40.608814], [-73.972993, 40.608818], [-73.96767, 40.609404], [-73.967666, 40.609394]]]]
    },
    "properties": {
      "neighbourhood": "Gravesend",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.96678, 40.632295], [-73.976569, 40.627579], [-73.978532, 40.637892], [-73.988967, 40.644122], [-73.98036, 40.647694], [-73.97925, 40.648123], [-73.979089, 40.647428], [-73.975164, 40.647864], [-73.97324, 40.64765], [-73.971397, 40.6482], [-73.96678, 40.632295]]]]
    },
    "properties": {
      "neighbourhood": "Kensington",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.8228, 40.711838], [-73.8205, 40.710111], [-73.81961, 40.708863], [-73.81942, 40.707678], [-73.818459, 40.705663], [-73.82008, 40.705031], [-73.82063, 40.705842], [-73.82202, 40.705212], [-73.822938, 40.706198], [-73.824065, 40.706944], [-73.8251, 40.707449], [-73.824441, 40.704062], [-73.82576, 40.704428], [-73.8353, 40.70201], [-73.838562, 40.703316], [-73.837346, 40.703934], [-73.83698, 40.704104], [-73.837067, 40.704439], [-73.837824, 40.705583], [-73.838132, 40.706254], [-73.838064, 40.706603], [-73.836768, 40.708473], [-73.836431, 40.708783], [-73.834095, 40.710026], [-73.835994, 40.711727], [-73.83355, 40.713044], [-73.830757, 40.714533], [-73.826007, 40.7156], [-73.8228, 40.711838]]]]
    },
    "properties": {
      "neighbourhood": "Kew Gardens",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.851663, 40.834201], [-73.859056, 40.833413], [-73.860344, 40.833294], [-73.860851, 40.833614], [-73.862702, 40.832979], [-73.86366, 40.832652], [-73.877299, 40.828742], [-73.88198, 40.828356], [-73.882976, 40.828304], [-73.882473, 40.82972], [-73.881732, 40.831312], [-73.879252, 40.834424], [-73.876937, 40.836137], [-73.876152, 40.8365], [-73.869974, 40.839455], [-73.868126, 40.840106], [-73.865127, 40.841218], [-73.85521, 40.842975], [-73.854317, 40.842681], [-73.854106, 40.84266], [-73.85377, 40.84254], [-73.853672, 40.842467], [-73.853366, 40.842505], [-73.852203, 40.836368], [-73.851663, 40.834201]]]]
    },
    "properties": {
      "neighbourhood": "Parkchester",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.830092, 40.858151], [-73.828573, 40.855749], [-73.827167, 40.853266], [-73.826746, 40.853329], [-73.826365, 40.853268], [-73.827317, 40.850073], [-73.8272, 40.848817], [-73.82665, 40.847426], [-73.826082, 40.846379], [-73.825865, 40.845613], [-73.826113, 40.845339], [-73.827575, 40.844732], [-73.830432, 40.843858], [-73.833001, 40.84354], [-73.836889, 40.843375], [-73.839126, 40.842158], [-73.842941, 40.846404], [-73.841558, 40.849906], [-73.841087, 40.851122], [-73.840232, 40.852155], [-73.837969, 40.854731], [-73.837969, 40.854731], [-73.836463, 40.856192], [-73.830092, 40.858151]]]]
    },
    "properties": {
      "neighbourhood": "Pelham Bay",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.148306, 40.564919], [-74.14313, 40.560508], [-74.142588, 40.559894], [-74.143859, 40.559161], [-74.143047, 40.558461], [-74.14374, 40.557984], [-74.14422, 40.558336], [-74.146551, 40.556235], [-74.145558, 40.553195], [-74.145599, 40.552081], [-74.14483, 40.551045], [-74.14476, 40.550512], [-74.144021, 40.551024], [-74.143518, 40.550155], [-74.142638, 40.55074], [-74.1415, 40.549589], [-74.139479, 40.551069], [-74.138803, 40.550597], [-74.13738, 40.551473], [-74.136089, 40.550424], [-74.137371, 40.549578], [-74.138641, 40.548475], [-74.137448, 40.547306], [-74.137271, 40.547213], [-74.13582, 40.546445], [-74.136412, 40.546252], [-74.136491, 40.546073], [-74.136459, 40.545975], [-74.136516, 40.545915], [-74.136806, 40.54597], [-74.136971, 40.545975], [-74.137064, 40.545957], [-74.137009, 40.545895], [-74.137023, 40.545885], [-74.137096, 40.545952], [-74.137133, 40.545931], [-74.137063, 40.545864], [-74.13718, 40.545793], [-74.137156, 40.545773], [-74.137143, 40.545774], [-74.136261, 40.544963], [-74.136134, 40.545039], [-74.136115, 40.54502], [-74.136384, 40.544855], [-74.136403, 40.544874], [-74.136284, 40.544947], [-74.13717, 40.545757], [-74.137173, 40.545766], [-74.137193, 40.545784], [-74.137508, 40.545578], [-74.137489, 40.545559], [-74.13748, 40.545565], [-74.136734, 40.544804], [-74.136612, 40.544862], [-74.136589, 40.544845], [-74.136873, 40.544683], [-74.136891, 40.544699], [-74.136749, 40.544783], [-74.137424, 40.545466], [-74.137433, 40.545461], [-74.137416, 40.545443], [-74.137472, 40.545411], [-74.137488, 40.545428], [-74.137503, 40.54542], [-74.13753, 40.545448], [-74.137447, 40.545494], [-74.137503, 40.545553], [-74.1375, 40.545554], [-74.137518, 40.545572], [-74.137529, 40.545565], [-74.137885, 40.545894], [-74.13795, 40.546], [-74.138411, 40.545606], [-74.138686, 40.545436], [-74.13887, 40.54513], [-74.138695, 40.544991], [-74.138743, 40.544945], [-74.138722, 40.544929], [-74.138708, 40.544928], [-74.138104, 40.544499], [-74.138041, 40.544548], [-74.137624, 40.544254], [-74.137756, 40.544145], [-74.13778, 40.544163], [-74.137679, 40.544245], [-74.137679, 40.544259], [-74.138047, 40.544504], [-74.138101, 40.544459], [-74.138735, 40.544905], [-74.138735, 40.544918], [-74.138755, 40.544934], [-74.13902, 40.544716], [-74.13799, 40.54399], [-74.137894, 40.54407], [-74.137868, 40.544053], [-74.138043, 40.543905], [-74.138066, 40.54392], [-74.13801, 40.543971], [-74.139033, 40.544705], [-74.139539, 40.544295], [-74.139433, 40.544217], [-74.139414, 40.544232], [-74.139421, 40.544236], [-74.139108, 40.544473], [-74.139151, 40.544505], [-74.139145, 40.54451], [-74.1391, 40.544479], [-74.139033, 40.544428], [-74.139041, 40.544421], [-74.139093, 40.544461], [-74.139421, 40.544206], [-74.139288, 40.544117], [-74.138975, 40.544376], [-74.138907, 40.544329], [-74.138918, 40.54432], [-74.13896, 40.544349], [-74.138972, 40.544349], [-74.139157, 40.544198], [-74.139156, 40.544186], [-74.139214, 40.544135], [-74.139222, 40.544141], [-74.139246, 40.544122], [-74.139196, 40.544085], [-74.13922, 40.544067], [-74.139083, 40.543968], [-74.139059, 40.543985], [-74.139067, 40.543991], [-74.138839, 40.544174], [-74.138839, 40.544182], [-74.138897, 40.544226], [-74.138876, 40.544244], [-74.138728, 40.54413], [-74.138746, 40.544116], [-74.138807, 40.544163], [-74.138828, 40.544159], [-74.139042, 40.543975], [-74.139051, 40.54398], [-74.139078, 40.54396], [-74.138835, 40.543791], [-74.138803, 40.543813], [-74.13881, 40.543823], [-74.138538, 40.544041], [-74.138539, 40.544052], [-74.138598, 40.544096], [-74.138586, 40.544105], [-74.138415, 40.543978], [-74.138423, 40.54397], [-74.138496, 40.544024], [-74.138512, 40.544024], [-74.138785, 40.543801], [-74.138797, 40.543803], [-74.138823, 40.543784], [-74.13854, 40.543588], [-74.138521, 40.543604], [-74.138523, 40.543615], [-74.138461, 40.543664], [-74.138448, 40.543679], [-74.138449, 40.543686], [-74.138474, 40.543705], [-74.138462, 40.543715], [-74.138378, 40.54365], [-74.138356, 40.543652], [-74.138207, 40.543774], [-74.138206, 40.543789], [-74.138293, 40.543854], [-74.13828, 40.543867], [-74.138151, 40.543772], [-74.138365, 40.543602], [-74.138418, 40.543641], [-74.138439, 40.543642], [-74.138456, 40.543624], [-74.138466, 40.543629], [-74.138526, 40.543579], [-74.138507, 40.543566], [-74.138441, 40.54362], [-74.138411, 40.543598], [-74.138483, 40.543539], [-74.138447, 40.543516], [-74.138375, 40.543577], [-74.138342, 40.543552], [-74.138523, 40.543402], [-74.138556, 40.543424], [-74.13846, 40.543506], [-74.138493, 40.543531], [-74.13859, 40.54345], [-74.13862, 40.543473], [-74.138533, 40.543544], [-74.13957, 40.544272], [-74.139729, 40.544141], [-74.139837, 40.544052], [-74.138946, 40.543407], [-74.13891, 40.543432], [-74.138706, 40.543291], [-74.138906, 40.543132], [-74.13893, 40.54315], [-74.138771, 40.543291], [-74.138861, 40.543366], [-74.139037, 40.543227], [-74.139061, 40.543245], [-74.138944, 40.543339], [-74.138996, 40.543373], [-74.138984, 40.543384], [-74.139676, 40.543889], [-74.139865, 40.543737], [-74.139889, 40.543752], [-74.139704, 40.543909], [-74.139864, 40.544027], [-74.140041, 40.543884], [-74.139993, 40.543846], [-74.140013, 40.54383], [-74.140311, 40.54405], [-74.140359, 40.544017], [-74.140386, 40.544033], [-74.140418, 40.544003], [-74.140395, 40.543989], [-74.140461, 40.543932], [-74.140309, 40.543825], [-74.140329, 40.543808], [-74.140328, 40.543802], [-74.140314, 40.543794], [-74.140297, 40.543793], [-74.140248, 40.543834], [-74.140235, 40.543826], [-74.140285, 40.543785], [-74.140285, 40.543772], [-74.13935, 40.543096], [-74.139242, 40.543182], [-74.13922, 40.543166], [-74.139408, 40.543017], [-74.139434, 40.543036], [-74.139384, 40.543077], [-74.139385, 40.543089], [-74.140226, 40.543696], [-74.140296, 40.54364], [-74.140209, 40.543579], [-74.140214, 40.543575], [-74.140126, 40.543513], [-74.14013, 40.543511], [-74.140287, 40.543385], [-74.139458, 40.542786], [-74.139387, 40.542844], [-74.139361, 40.542826], [-74.139537, 40.542682], [-74.139564, 40.5427], [-74.139479, 40.542768], [-74.140306, 40.543367], [-74.140627, 40.543113], [-74.140479, 40.543006], [-74.139756, 40.542481], [-74.139659, 40.542561], [-74.139632, 40.542541], [-74.139859, 40.542357], [-74.139886, 40.542376], [-74.139775, 40.542464], [-74.140501, 40.542989], [-74.140646, 40.543094], [-74.140845, 40.542939], [-74.141044, 40.543087], [-74.141091, 40.543052], [-74.140967, 40.542963], [-74.140984, 40.542949], [-74.141105, 40.543042], [-74.141257, 40.54315], [-74.141324, 40.543094], [-74.141288, 40.54307], [-74.141283, 40.543074], [-74.140385, 40.542421], [-74.140438, 40.542382], [-74.140407, 40.542361], [-74.140287, 40.542456], [-74.140165, 40.542366], [-74.140335, 40.542228], [-74.140359, 40.542245], [-74.140207, 40.542365], [-74.140286, 40.542422], [-74.140407, 40.542327], [-74.140481, 40.542382], [-74.140427, 40.542425], [-74.141305, 40.543055], [-74.141297, 40.543061], [-74.141334, 40.543086], [-74.141411, 40.543022], [-74.141079, 40.542791], [-74.141161, 40.542719], [-74.141067, 40.542654], [-74.141084, 40.542639], [-74.141179, 40.542703], [-74.141187, 40.542696], [-74.141295, 40.542769], [-74.141327, 40.542747], [-74.141124, 40.542605], [-74.141143, 40.542588], [-74.141249, 40.54266], [-74.141335, 40.542589], [-74.141316, 40.542575], [-74.141286, 40.542599], [-74.14122, 40.542556], [-74.14125, 40.542531], [-74.140569, 40.542053], [-74.140541, 40.542058], [-74.140464, 40.542127], [-74.140413, 40.542091], [-74.140405, 40.542061], [-74.140263, 40.541962], [-74.140295, 40.541934], [-74.140475, 40.54206], [-74.140496, 40.542061], [-74.140556, 40.542011], [-74.14068, 40.541909], [-74.140704, 40.541925], [-74.140595, 40.542017], [-74.140634, 40.542042], [-74.140619, 40.542056], [-74.141343, 40.542564], [-74.141338, 40.542569], [-74.141349, 40.542578], [-74.141462, 40.542484], [-74.141277, 40.542353], [-74.141294, 40.542336], [-74.141481, 40.542468], [-74.141531, 40.542426], [-74.141349, 40.54229], [-74.141363, 40.542278], [-74.14155, 40.542411], [-74.141649, 40.542322], [-74.141797, 40.5422], [-74.140895, 40.541571], [-74.140887, 40.541584], [-74.140846, 40.541556], [-74.140661, 40.541709], [-74.14064, 40.541695], [-74.140958, 40.541432], [-74.14098, 40.541448], [-74.140896, 40.541517], [-74.140895, 40.541537], [-74.141813, 40.542187], [-74.141852, 40.542152], [-74.141873, 40.542167], [-74.141672, 40.542335], [-74.141705, 40.542355], [-74.141811, 40.542362], [-74.141911, 40.542345], [-74.14212, 40.542246], [-74.142153, 40.542244], [-74.142257, 40.542295], [-74.142299, 40.542252], [-74.142189, 40.542068], [-74.142183, 40.542018], [-74.142477, 40.541334], [-74.141786, 40.540106], [-74.141777, 40.540088], [-74.141784, 40.540072], [-74.142005, 40.539568], [-74.141729, 40.53934], [-74.141729, 40.539339], [-74.142146, 40.539144], [-74.142228, 40.539316], [-74.143591, 40.54051], [-74.144348, 40.541173], [-74.147465, 40.543497], [-74.148011, 40.544114], [-74.150431, 40.548195], [-74.150839, 40.549963], [-74.151607, 40.551113], [-74.15395, 40.550143], [-74.15408, 40.55045], [-74.156752, 40.549077], [-74.157235, 40.550218], [-74.161168, 40.549191], [-74.166154, 40.548605], [-74.167099, 40.548448], [-74.169823, 40.561057], [-74.169827, 40.561078], [-74.164941, 40.560112], [-74.163779, 40.560317], [-74.16153, 40.561269], [-74.157103, 40.562627], [-74.157029, 40.562695], [-74.155851, 40.563774], [-74.154767, 40.565419], [-74.152956, 40.566776], [-74.149798, 40.563643], [-74.148306, 40.564919]]]]
    },
    "properties": {
      "neighbourhood": "Great Kills",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.151262, 40.532666], [-74.151758, 40.532402], [-74.151682, 40.532276], [-74.151853, 40.532164], [-74.152457, 40.532068], [-74.15398, 40.530844], [-74.154131, 40.530723], [-74.154051, 40.530624], [-74.154047, 40.530595], [-74.154083, 40.530586], [-74.154215, 40.530665], [-74.154383, 40.530529], [-74.154345, 40.530481], [-74.154535, 40.530305], [-74.154641, 40.530335], [-74.154698, 40.530249], [-74.154497, 40.530102], [-74.154544, 40.530062], [-74.154929, 40.530225], [-74.155648, 40.529643], [-74.155471, 40.529478], [-74.155504, 40.529438], [-74.155732, 40.529601], [-74.15599, 40.52942], [-74.156449, 40.528932], [-74.156134, 40.528649], [-74.156187, 40.528611], [-74.156671, 40.528993], [-74.156769, 40.529023], [-74.157019, 40.528978], [-74.157209, 40.528842], [-74.158261, 40.5283], [-74.157949, 40.528085], [-74.157972, 40.528067], [-74.158326, 40.528278], [-74.159395, 40.527428], [-74.159701, 40.527296], [-74.159876, 40.527371], [-74.159944, 40.527365], [-74.160011, 40.527343], [-74.160056, 40.527345], [-74.160084, 40.527361], [-74.160226, 40.527524], [-74.160265, 40.527553], [-74.160341, 40.52755], [-74.161527, 40.527029], [-74.161582, 40.527013], [-74.161691, 40.527024], [-74.162272, 40.527194], [-74.162275, 40.527192], [-74.163564, 40.526452], [-74.16372, 40.52635], [-74.163791, 40.526331], [-74.164747, 40.52608], [-74.165161, 40.525744], [-74.168844, 40.523591], [-74.169997, 40.523046], [-74.170489, 40.523084], [-74.171103, 40.52355], [-74.172063, 40.523321], [-74.175083, 40.521451], [-74.176012, 40.520876], [-74.176821, 40.520029], [-74.177583, 40.519231], [-74.177845, 40.519486], [-74.177952, 40.51959], [-74.179554, 40.522875], [-74.179529, 40.524854], [-74.180311, 40.526089], [-74.18092, 40.527455], [-74.18182, 40.528342], [-74.186298, 40.534095], [-74.185004, 40.534535], [-74.18083, 40.535925], [-74.178731, 40.537905], [-74.177618, 40.538976], [-74.177348, 40.539346], [-74.177231, 40.539844], [-74.177282, 40.54063], [-74.169924, 40.542225], [-74.165296, 40.544273], [-74.15793, 40.536618], [-74.157818, 40.536532], [-74.157581, 40.53636], [-74.157043, 40.535967], [-74.151262, 40.532666]]]]
    },
    "properties": {
      "neighbourhood": "Huguenot",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.962263, 40.732916], [-73.96236, 40.732913], [-73.963326, 40.732831], [-73.963337, 40.732839], [-73.963521, 40.732827], [-73.963531, 40.73285], [-73.963557, 40.732849], [-73.963566, 40.732894], [-73.963575, 40.732895], [-73.963578, 40.732912], [-73.963589, 40.732912], [-73.963587, 40.732922], [-73.963677, 40.73292], [-73.963661, 40.732799], [-73.964031, 40.732758], [-73.964049, 40.732762], [-73.964065, 40.732779], [-73.964088, 40.732919], [-73.964079, 40.732933], [-73.96406, 40.732945], [-73.963652, 40.732987], [-73.963653, 40.732992], [-73.963577, 40.732998], [-73.963574, 40.732995], [-73.963539, 40.732997], [-73.963537, 40.733], [-73.962357, 40.73311], [-73.962304, 40.733114], [-73.962341, 40.733389], [-73.962308, 40.733532], [-73.962355, 40.733713], [-73.962325, 40.733908], [-73.962285, 40.734048], [-73.96209, 40.734508], [-73.96191, 40.734751], [-73.961575, 40.73518], [-73.961351, 40.735421], [-73.960519, 40.736342], [-73.959829, 40.737061], [-73.959306, 40.737452], [-73.958501, 40.738007], [-73.958375, 40.738097], [-73.957765, 40.738464], [-73.95693, 40.738887], [-73.95564, 40.739044], [-73.954663, 40.739128], [-73.954396, 40.739115], [-73.953233, 40.738993], [-73.951988, 40.738748], [-73.950387, 40.738285], [-73.948844, 40.737686], [-73.948123, 40.737397], [-73.948092, 40.737468], [-73.947162, 40.737155], [-73.946524, 40.736927], [-73.946454, 40.73681], [-73.946724, 40.736264], [-73.946901, 40.735901], [-73.9472, 40.735355], [-73.947143, 40.734956], [-73.947065, 40.734402], [-73.946598, 40.734442], [-73.946655, 40.734792], [-73.946737, 40.735295], [-73.946757, 40.735258], [-73.946929, 40.735313], [-73.946627, 40.735866], [-73.946443, 40.735813], [-73.946247, 40.736166], [-73.946172, 40.736203], [-73.945873, 40.736102], [-73.94557, 40.736612], [-73.945533, 40.736605], [-73.94552, 40.736591], [-73.945545, 40.736538], [-73.945416, 40.736502], [-73.9454, 40.736538], [-73.945359, 40.73655], [-73.945207, 40.736509], [-73.945201, 40.736487], [-73.94522, 40.736444], [-73.945078, 40.736393], [-73.945059, 40.736439], [-73.945034, 40.736449], [-73.944999, 40.736437], [-73.944999, 40.736417], [-73.945255, 40.735893], [-73.945185, 40.735479], [-73.945033, 40.735429], [-73.945006, 40.735531], [-73.944961, 40.735634], [-73.944923, 40.735703], [-73.944773, 40.735986], [-73.94474, 40.736024], [-73.94455, 40.736225], [-73.944539, 40.736229], [-73.944517, 40.736235], [-73.944523, 40.736245], [-73.944537, 40.736251], [-73.944543, 40.736255], [-73.944544, 40.736264], [-73.944533, 40.736277], [-73.944515, 40.736284], [-73.944492, 40.736283], [-73.944448, 40.736275], [-73.94438, 40.736252], [-73.944146, 40.736157], [-73.943956, 40.736082], [-73.943807, 40.736023], [-73.943742, 40.735998], [-73.943213, 40.735791], [-73.942394, 40.735426], [-73.942086, 40.735203], [-73.941738, 40.734951], [-73.941792, 40.734913], [-73.941607, 40.734688], [-73.941546, 40.734734], [-73.941147, 40.734153], [-73.940997, 40.73379], [-73.941156, 40.733749], [-73.941038, 40.733488], [-73.940929, 40.733511], [-73.940818, 40.733249], [-73.940726, 40.733291], [-73.940569, 40.733058], [-73.940685, 40.733017], [-73.940367, 40.732213], [-73.939813, 40.731153], [-73.938103, 40.729729], [-73.938089, 40.729747], [-73.936931, 40.729108], [-73.936328, 40.728952], [-73.934929, 40.728544], [-73.932347, 40.728192], [-73.932004, 40.728145], [-73.930326, 40.727795], [-73.929663, 40.727543], [-73.929632, 40.727565], [-73.929624, 40.727578], [-73.929627, 40.7276], [-73.929612, 40.727611], [-73.92958, 40.727613], [-73.929243, 40.727398], [-73.929269, 40.727365], [-73.92887, 40.727003], [-73.928494, 40.726615], [-73.928131, 40.726173], [-73.927939, 40.725884], [-73.927872, 40.725854], [-73.927834, 40.725422], [-73.927797, 40.724926], [-73.926543, 40.72216], [-73.925615, 40.720062], [-73.924818, 40.720265], [-73.924631, 40.719855], [-73.934704, 40.717209], [-73.936209, 40.720576], [-73.940624, 40.719435], [-73.940796, 40.720457], [-73.942678, 40.720277], [-73.943899, 40.719604], [-73.944926, 40.720774], [-73.947516, 40.719267], [-73.952402, 40.718797], [-73.952803, 40.718462], [-73.955348, 40.720049], [-73.952998, 40.722253], [-73.957572, 40.725097], [-73.95772, 40.724271], [-73.958749, 40.723085], [-73.961611, 40.724951], [-73.96166, 40.72486], [-73.962115, 40.725148], [-73.961902, 40.725321], [-73.961605, 40.725148], [-73.961537, 40.725109], [-73.961413, 40.725177], [-73.961164, 40.725265], [-73.960432, 40.725114], [-73.960367, 40.725047], [-73.958331, 40.724412], [-73.958039, 40.724427], [-73.957942, 40.724649], [-73.957951, 40.725036], [-73.958352, 40.725198], [-73.958426, 40.725401], [-73.960125, 40.72532], [-73.960285, 40.725948], [-73.961063, 40.725845], [-73.961615, 40.725866], [-73.961653, 40.726204], [-73.961617, 40.726661], [-73.961499, 40.726751], [-73.961418, 40.727356], [-73.961328, 40.727644], [-73.960996, 40.728769], [-73.961061, 40.728777], [-73.961071, 40.72922], [-73.96114, 40.729416], [-73.961195, 40.729416], [-73.961349, 40.730162], [-73.961284, 40.730162], [-73.961432, 40.730965], [-73.961716, 40.73157], [-73.961826, 40.731608], [-73.961909, 40.731651], [-73.962263, 40.732916]]]]
    },
    "properties": {
      "neighbourhood": "Greenpoint",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.99146, 40.731738], [-73.992854, 40.730083], [-73.996772, 40.725432], [-73.997635, 40.725786], [-74.002856, 40.728347], [-74.001413, 40.731065], [-73.996797, 40.737364], [-73.991725, 40.735245], [-73.990704, 40.734782], [-73.99146, 40.731738]]]]
    },
    "properties": {
      "neighbourhood": "Greenwich Village",
      "neighbourhood_group": "Manhattan"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.085899, 40.619909], [-74.085998, 40.619146], [-74.08608, 40.618515], [-74.086187, 40.618221], [-74.086418, 40.61759], [-74.086571, 40.61717], [-74.08783, 40.615318], [-74.08778, 40.614943], [-74.087429, 40.614419], [-74.08721, 40.613307], [-74.089588, 40.609848], [-74.090109, 40.609403], [-74.09427, 40.610806], [-74.09818, 40.610742], [-74.099068, 40.612015], [-74.09935, 40.612419], [-74.099623, 40.612635], [-74.10209, 40.6146], [-74.103511, 40.616414], [-74.102549, 40.616853], [-74.099685, 40.619653], [-74.097702, 40.618809], [-74.094624, 40.619654], [-74.094263, 40.620108], [-74.0939, 40.620255], [-74.09105, 40.619718], [-74.090224, 40.619409], [-74.08942, 40.620307], [-74.089385, 40.620287], [-74.088208, 40.61963], [-74.087627, 40.619543], [-74.088028, 40.620243], [-74.087745, 40.620114], [-74.087011, 40.620501], [-74.087071, 40.62008], [-74.086488, 40.620449], [-74.086391, 40.619998], [-74.085899, 40.619909]]]]
    },
    "properties": {
      "neighbourhood": "Grymes Hill",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.934568, 40.828149], [-73.934424, 40.827043], [-73.934346, 40.825777], [-73.934326, 40.825455], [-73.934129, 40.822262], [-73.934104, 40.821855], [-73.933972, 40.81973], [-73.93383, 40.81972], [-73.93383, 40.819521], [-73.934289, 40.819569], [-73.933992, 40.817786], [-73.942754, 40.805744], [-73.941166, 40.805063], [-73.942993, 40.802561], [-73.944597, 40.803228], [-73.949073, 40.797094], [-73.949228, 40.797149], [-73.949374, 40.797158], [-73.949657, 40.797069], [-73.95785, 40.800528], [-73.958074, 40.800359], [-73.958358, 40.800369], [-73.958533, 40.800491], [-73.958509, 40.800682], [-73.959647, 40.801156], [-73.959642, 40.801163], [-73.958249, 40.803107], [-73.958181, 40.805565], [-73.954288, 40.810992], [-73.961038, 40.818704], [-73.96179, 40.818025], [-73.962054, 40.818095], [-73.962029, 40.818123], [-73.961901, 40.818265], [-73.961055, 40.819208], [-73.960839, 40.819447], [-73.960543, 40.819777], [-73.960242, 40.820112], [-73.959999, 40.820383], [-73.959949, 40.82036], [-73.959815, 40.820298], [-73.959283, 40.820995], [-73.959131, 40.821169], [-73.959263, 40.821236], [-73.959303, 40.82119], [-73.959426, 40.821252], [-73.959147, 40.821571], [-73.959033, 40.821514], [-73.959235, 40.821278], [-73.959147, 40.821235], [-73.95909, 40.821206], [-73.958819, 40.821519], [-73.958887, 40.821547], [-73.958942, 40.821569], [-73.958745, 40.821806], [-73.958964, 40.822374], [-73.959, 40.82241], [-73.959113, 40.822455], [-73.95923, 40.822287], [-73.95991, 40.822571], [-73.959603, 40.822995], [-73.958926, 40.822712], [-73.95905, 40.822541], [-73.958917, 40.822486], [-73.958867, 40.82245], [-73.958838, 40.822405], [-73.958646, 40.821904], [-73.958527, 40.821844], [-73.9582, 40.822283], [-73.958168, 40.822458], [-73.958075, 40.822611], [-73.957939, 40.822774], [-73.958228, 40.822888], [-73.958143, 40.823021], [-73.959483, 40.823579], [-73.959538, 40.823629], [-73.959556, 40.823694], [-73.959016, 40.824504], [-73.957259, 40.827117], [-73.956949, 40.827001], [-73.956318, 40.827944], [-73.955039, 40.827413], [-73.954706, 40.827906], [-73.954697, 40.827918], [-73.954545, 40.827863], [-73.954542, 40.827861], [-73.954526, 40.827884], [-73.952928, 40.830158], [-73.952345, 40.83102], [-73.951732, 40.831859], [-73.951316, 40.832451], [-73.951059, 40.832898], [-73.950936, 40.833294], [-73.950664, 40.833636], [-73.950423, 40.834047], [-73.95022, 40.834305], [-73.949342, 40.833982], [-73.948905, 40.834066], [-73.940346, 40.830458], [-73.934568, 40.828149]]]]
    },
    "properties": {
      "neighbourhood": "Harlem",
      "neighbourhood_group": "Manhattan"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.730326, 40.722157], [-73.729652, 40.720456], [-73.729176, 40.719167], [-73.728462, 40.716555], [-73.72736, 40.712389], [-73.727189, 40.711693], [-73.726833, 40.710102], [-73.727047, 40.709499], [-73.726954, 40.707345], [-73.726895, 40.7058], [-73.726764, 40.702976], [-73.741624, 40.703532], [-73.748579, 40.701605], [-73.752435, 40.71023], [-73.754037, 40.71388], [-73.760014, 40.721767], [-73.760694, 40.722422], [-73.761656, 40.723063], [-73.764273, 40.724375], [-73.76478, 40.724691], [-73.764203, 40.725065], [-73.764106, 40.725359], [-73.763586, 40.72627], [-73.760541, 40.72584], [-73.758343, 40.725889], [-73.756694, 40.726239], [-73.753895, 40.72723], [-73.747395, 40.732016], [-73.74681, 40.732505], [-73.746807, 40.732484], [-73.746641, 40.731763], [-73.746264, 40.731201], [-73.745507, 40.730656], [-73.731492, 40.727419], [-73.72987, 40.723276], [-73.729529, 40.722549], [-73.730326, 40.722157]]]]
    },
    "properties": {
      "neighbourhood": "Queens Village",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.990724, 40.75595], [-73.990726, 40.755951], [-73.993464, 40.75219], [-74.004927, 40.757023], [-74.005567, 40.757118], [-74.005419, 40.757323], [-74.005212, 40.757232], [-74.004804, 40.75781], [-74.005279, 40.758029], [-74.005235, 40.758087], [-74.005031, 40.758357], [-74.006964, 40.75916], [-74.006994, 40.759176], [-74.00701, 40.759204], [-74.007004, 40.759232], [-74.00653, 40.759875], [-74.006507, 40.759892], [-74.006476, 40.759894], [-74.006444, 40.75989], [-74.006315, 40.759843], [-74.004505, 40.759085], [-74.004307, 40.759361], [-74.004206, 40.759502], [-74.003907, 40.759376], [-74.003807, 40.759511], [-74.004155, 40.75966], [-74.004247, 40.759699], [-74.004165, 40.759813], [-74.004149, 40.759836], [-74.004245, 40.759887], [-74.00426, 40.759875], [-74.004319, 40.759911], [-74.004269, 40.759959], [-74.004211, 40.759925], [-74.004223, 40.759913], [-74.004132, 40.759862], [-74.004112, 40.759893], [-74.003669, 40.759706], [-74.003573, 40.759846], [-74.003573, 40.759847], [-74.003687, 40.759897], [-74.003929, 40.760003], [-74.003927, 40.760005], [-74.003882, 40.760066], [-74.003171, 40.761027], [-74.003133, 40.761078], [-74.002787, 40.760929], [-74.002669, 40.76109], [-74.002335, 40.761544], [-74.004545, 40.762493], [-74.004558, 40.762508], [-74.004556, 40.762524], [-74.00445, 40.762665], [-74.004427, 40.762676], [-74.0044, 40.762671], [-74.002201, 40.761728], [-74.001533, 40.762645], [-74.003757, 40.763582], [-74.003612, 40.763777], [-74.00334, 40.763664], [-74.001386, 40.76285], [-74.000973, 40.76342], [-74.00315, 40.764333], [-74.002948, 40.764617], [-74.003062, 40.764666], [-74.003135, 40.76465], [-74.003162, 40.764613], [-74.003223, 40.764638], [-74.003156, 40.764731], [-74.003147, 40.764736], [-74.003136, 40.764741], [-74.003125, 40.764744], [-74.003113, 40.764746], [-74.003101, 40.764746], [-74.003089, 40.764744], [-73.999927, 40.763407], [-73.999639, 40.763569], [-73.999623, 40.763559], [-73.999151, 40.764205], [-73.999314, 40.764272], [-73.99952, 40.763974], [-74.001411, 40.764772], [-74.001498, 40.764675], [-74.001939, 40.764867], [-74.00186, 40.764962], [-74.002457, 40.765214], [-74.002221, 40.765501], [-74.002274, 40.765525], [-74.002288, 40.765562], [-74.002057, 40.765877], [-74.002025, 40.765893], [-73.998885, 40.764569], [-73.998576, 40.764999], [-73.9986, 40.765073], [-73.998635, 40.765086], [-73.998665, 40.765104], [-73.998686, 40.765137], [-73.998696, 40.765175], [-73.998689, 40.765209], [-73.998668, 40.765237], [-73.998634, 40.76526], [-73.998589, 40.765276], [-73.998483, 40.765298], [-73.998438, 40.765316], [-73.998402, 40.765351], [-73.998291, 40.765521], [-73.998271, 40.765552], [-73.998282, 40.765568], [-74.001542, 40.766945], [-74.001573, 40.766977], [-74.001562, 40.766996], [-74.001394, 40.76723], [-74.001364, 40.767249], [-74.001315, 40.767251], [-73.998157, 40.765894], [-73.998148, 40.765906], [-73.998067, 40.765872], [-73.997382, 40.766818], [-73.997378, 40.766823], [-74.000628, 40.768203], [-74.00065, 40.76822], [-74.00065, 40.768245], [-74.000455, 40.768504], [-74.000418, 40.768512], [-74.000386, 40.768504], [-73.997156, 40.767129], [-73.996457, 40.768099], [-73.999728, 40.769474], [-73.999736, 40.769506], [-73.999555, 40.769751], [-73.999516, 40.769768], [-73.999473, 40.769764], [-73.997072, 40.768733], [-73.997026, 40.768796], [-73.99715, 40.768847], [-73.997145, 40.768853], [-73.997011, 40.769029], [-73.996893, 40.76898], [-73.996571, 40.769425], [-73.999027, 40.770463], [-73.998762, 40.770825], [-73.996313, 40.769799], [-73.99588, 40.770401], [-73.996017, 40.770455], [-73.995901, 40.770613], [-73.995767, 40.770555], [-73.995425, 40.771032], [-73.995756, 40.771161], [-73.995709, 40.771226], [-73.995798, 40.771283], [-73.995817, 40.771257], [-73.995913, 40.771298], [-73.995928, 40.771275], [-73.996002, 40.771307], [-73.9959, 40.77145], [-73.995893, 40.771447], [-73.995854, 40.771499], [-73.995791, 40.771476], [-73.995828, 40.771422], [-73.99573, 40.771379], [-73.995751, 40.771354], [-73.99563, 40.771325], [-73.995623, 40.771337], [-73.995306, 40.771196], [-73.995124, 40.771451], [-73.99499, 40.771441], [-73.994957, 40.771449], [-73.994935, 40.771468], [-73.994924, 40.771486], [-73.994926, 40.771516], [-73.995009, 40.771607], [-73.994978, 40.771645], [-73.994977, 40.771659], [-73.997112, 40.772553], [-73.996909, 40.772833], [-73.994774, 40.77193], [-73.994532, 40.772259], [-73.994445, 40.772377], [-73.995455, 40.772803], [-73.995545, 40.772675], [-73.996449, 40.773057], [-73.996356, 40.773179], [-73.99623, 40.773129], [-73.996143, 40.773248], [-73.996562, 40.773411], [-73.996685, 40.773504], [-73.996677, 40.77351], [-73.994342, 40.772525], [-73.99425, 40.772526], [-73.994163, 40.772487], [-73.994159, 40.772493], [-73.99365, 40.772146], [-73.982389, 40.767411], [-73.984726, 40.764167], [-73.990724, 40.75595]]]]
    },
    "properties": {
      "neighbourhood": "Hell's Kitchen",
      "neighbourhood_group": "Manhattan"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.922661, 40.844632], [-73.9228, 40.844305], [-73.9228, 40.842775], [-73.92242, 40.841837], [-73.921314, 40.840005], [-73.92164, 40.838888], [-73.92222, 40.837986], [-73.922369, 40.836147], [-73.923967, 40.835082], [-73.925364, 40.832625], [-73.928756, 40.829186], [-73.929772, 40.82868], [-73.930964, 40.828352], [-73.93102, 40.82835], [-73.931022, 40.82835], [-73.933006, 40.828279], [-73.93309, 40.82829], [-73.933369, 40.830723], [-73.933389, 40.830893], [-73.933606, 40.83279], [-73.933143, 40.835194], [-73.93304, 40.835464], [-73.932876, 40.835895], [-73.932656, 40.836473], [-73.930567, 40.83985], [-73.930516, 40.839934], [-73.930503, 40.840132], [-73.930483, 40.84046], [-73.930391, 40.840628], [-73.929227, 40.842759], [-73.929194, 40.842818], [-73.929185, 40.843204], [-73.928616, 40.844677], [-73.928129, 40.845328], [-73.925934, 40.844851], [-73.922661, 40.844632]]]]
    },
    "properties": {
      "neighbourhood": "Highbridge",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.752435, 40.71023], [-73.76409, 40.70752], [-73.767344, 40.706636], [-73.767251, 40.706313], [-73.77418, 40.705087], [-73.77582, 40.705376], [-73.776781, 40.707823], [-73.779975, 40.707051], [-73.782625, 40.712938], [-73.773571, 40.71512], [-73.768991, 40.716709], [-73.767332, 40.71729], [-73.764469, 40.71889], [-73.759459, 40.721055], [-73.754037, 40.71388], [-73.752435, 40.71023]]]]
    },
    "properties": {
      "neighbourhood": "Hollis",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.740155, 40.738531], [-73.742962, 40.735547], [-73.74681, 40.732505], [-73.747395, 40.732016], [-73.753895, 40.72723], [-73.754186, 40.727807], [-73.757196, 40.727827], [-73.758687, 40.728087], [-73.759956, 40.729103], [-73.763682, 40.732833], [-73.765182, 40.7346], [-73.762754, 40.735297], [-73.756287, 40.736575], [-73.743333, 40.738883], [-73.743032, 40.738442], [-73.741287, 40.738814], [-73.740155, 40.738531]]]]
    },
    "properties": {
      "neighbourhood": "Hollis Hills",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.763586, 40.72627], [-73.764106, 40.725359], [-73.764203, 40.725065], [-73.76478, 40.724691], [-73.764273, 40.724375], [-73.761656, 40.723063], [-73.760694, 40.722422], [-73.760014, 40.721767], [-73.759459, 40.721055], [-73.764469, 40.71889], [-73.767332, 40.71729], [-73.768991, 40.716709], [-73.773571, 40.71512], [-73.776815, 40.721857], [-73.777292, 40.722348], [-73.775917, 40.723395], [-73.774319, 40.724266], [-73.772235, 40.725078], [-73.769462, 40.725842], [-73.766204, 40.726343], [-73.764912, 40.726416], [-73.763586, 40.72627]]]]
    },
    "properties": {
      "neighbourhood": "Holliswood",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.829889, 40.655523], [-73.829946, 40.655424], [-73.830327, 40.655133], [-73.830378, 40.655128], [-73.830413, 40.655158], [-73.830412, 40.655216], [-73.8304, 40.655257], [-73.830358, 40.655322], [-73.830331, 40.65537], [-73.830266, 40.655429], [-73.83019, 40.655479], [-73.830126, 40.655511], [-73.830003, 40.655552], [-73.829926, 40.655542], [-73.829889, 40.655523]]]]
    },
    "properties": {
      "neighbourhood": "Howard Beach",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.861273, 40.658265], [-73.860959, 40.658061], [-73.860537, 40.658092], [-73.860388, 40.658237], [-73.860146, 40.65832], [-73.860042, 40.658328], [-73.859804, 40.658298], [-73.859768, 40.658282], [-73.859778, 40.65824], [-73.859957, 40.65813], [-73.860034, 40.658044], [-73.860214, 40.657913], [-73.860272, 40.657894], [-73.860368, 40.657889], [-73.86041, 40.657854], [-73.86045, 40.657842], [-73.860563, 40.657841], [-73.860576, 40.657836], [-73.860575, 40.657825], [-73.860529, 40.657816], [-73.860444, 40.657784], [-73.860407, 40.657761], [-73.860405, 40.657606], [-73.860324, 40.657462], [-73.86031, 40.657418], [-73.860342, 40.657248], [-73.86035, 40.657226], [-73.860374, 40.65721], [-73.860457, 40.657207], [-73.860588, 40.65716], [-73.860609, 40.657155], [-73.86062, 40.657162], [-73.86061, 40.657205], [-73.860624, 40.657205], [-73.860658, 40.657174], [-73.860663, 40.657157], [-73.860662, 40.657123], [-73.860659, 40.657111], [-73.860669, 40.657099], [-73.860684, 40.657096], [-73.860721, 40.657092], [-73.860753, 40.65708], [-73.860843, 40.656931], [-73.860859, 40.656913], [-73.860888, 40.656909], [-73.861275, 40.657001], [-73.861614, 40.656997], [-73.861638, 40.6571], [-73.861703, 40.658025], [-73.862698, 40.657618], [-73.862701, 40.657617], [-73.863149, 40.658247], [-73.863171, 40.658277], [-73.863171, 40.658277], [-73.863157, 40.658283], [-73.861748, 40.658938], [-73.861222, 40.659221], [-73.86036, 40.659646], [-73.86036, 40.659646], [-73.859387, 40.659773], [-73.858514, 40.659899], [-73.857615, 40.660119], [-73.85843, 40.663453], [-73.855685, 40.663867], [-73.85763, 40.671656], [-73.857633, 40.671656], [-73.859203, 40.671436], [-73.860389, 40.671269], [-73.86107, 40.674021], [-73.857944, 40.673066], [-73.855717, 40.672534], [-73.84214, 40.668269], [-73.840313, 40.66763], [-73.83914, 40.666688], [-73.83806, 40.666852], [-73.834858, 40.666457], [-73.833216, 40.666092], [-73.832717, 40.665693], [-73.832547, 40.665378], [-73.832644, 40.665184], [-73.832246, 40.664982], [-73.831781, 40.663674], [-73.82849, 40.657253], [-73.826648, 40.650436], [-73.826523, 40.648846], [-73.82643, 40.648331], [-73.826498, 40.648357], [-73.826553, 40.648397], [-73.826581, 40.64852], [-73.826649, 40.648602], [-73.826691, 40.648649], [-73.826757, 40.648749], [-73.82687, 40.648799], [-73.826995, 40.648824], [-73.827193, 40.648913], [-73.827521, 40.648966], [-73.827627, 40.648928], [-73.827877, 40.649019], [-73.828111, 40.649009], [-73.828367, 40.649067], [-73.828599, 40.64917], [-73.828915, 40.649379], [-73.82908, 40.649662], [-73.829339, 40.649947], [-73.829451, 40.650044], [-73.829681, 40.650229], [-73.829869, 40.65043], [-73.830365, 40.651138], [-73.830699, 40.651404], [-73.830937, 40.651626], [-73.831332, 40.652748], [-73.831292, 40.653471], [-73.831399, 40.653514], [-73.83156, 40.653603], [-73.831592, 40.653647], [-73.831613, 40.653749], [-73.831583, 40.653814], [-73.831202, 40.65419], [-73.830425, 40.654831], [-73.830157, 40.655001], [-73.830135, 40.655029], [-73.830148, 40.655035], [-73.830169, 40.655009], [-73.830209, 40.65503], [-73.830183, 40.655064], [-73.83013, 40.65504], [-73.830112, 40.655097], [-73.830082, 40.655144], [-73.829901, 40.655297], [-73.829345, 40.65571], [-73.829173, 40.655865], [-73.829041, 40.656022], [-73.829024, 40.656049], [-73.829014, 40.656108], [-73.82904, 40.656123], [-73.82907, 40.656123], [-73.829108, 40.656116], [-73.829153, 40.656096], [-73.829188, 40.656072], [-73.829214, 40.656037], [-73.829349, 40.655924], [-73.82939, 40.655899], [-73.829456, 40.655834], [-73.829433, 40.655819], [-73.829667, 40.655599], [-73.829851, 40.655645], [-73.830023, 40.655637], [-73.830024, 40.655644], [-73.830065, 40.655659], [-73.830086, 40.655663], [-73.83015, 40.655665], [-73.8302, 40.655656], [-73.830308, 40.65562], [-73.83037, 40.655572], [-73.830443, 40.655519], [-73.830554, 40.655395], [-73.830582, 40.655324], [-73.830572, 40.655157], [-73.830557, 40.655155], [-73.830556, 40.655306], [-73.830551, 40.655359], [-73.830531, 40.655358], [-73.830535, 40.65532], [-73.830538, 40.654912], [-73.83055, 40.654912], [-73.830558, 40.65514], [-73.830569, 40.655142], [-73.830556, 40.654893], [-73.830569, 40.654861], [-73.830602, 40.654807], [-73.831357, 40.654181], [-73.831344, 40.654168], [-73.831448, 40.654103], [-73.831469, 40.654116], [-73.831708, 40.653931], [-73.831953, 40.654031], [-73.831997, 40.654002], [-73.832054, 40.654046], [-73.832123, 40.654273], [-73.832001, 40.654441], [-73.832161, 40.65451], [-73.832198, 40.654454], [-73.832217, 40.65446], [-73.832166, 40.65453], [-73.832046, 40.654481], [-73.831905, 40.654631], [-73.831858, 40.654612], [-73.831602, 40.654842], [-73.831508, 40.654969], [-73.831493, 40.65498], [-73.831412, 40.655194], [-73.831358, 40.655471], [-73.831308, 40.655599], [-73.831161, 40.655919], [-73.830929, 40.656031], [-73.830833, 40.656043], [-73.83075, 40.656071], [-73.830405, 40.656252], [-73.83035, 40.656283], [-73.830212, 40.656337], [-73.830079, 40.656469], [-73.830088, 40.656506], [-73.830055, 40.656554], [-73.829985, 40.656583], [-73.829889, 40.656556], [-73.8298, 40.656492], [-73.829658, 40.656447], [-73.829609, 40.656432], [-73.829606, 40.656444], [-73.829553, 40.656438], [-73.829554, 40.656424], [-73.829532, 40.656427], [-73.829376, 40.656506], [-73.829308, 40.656554], [-73.829258, 40.656607], [-73.829258, 40.656706], [-73.829303, 40.656873], [-73.82931, 40.656932], [-73.829285, 40.656966], [-73.829266, 40.656984], [-73.829238, 40.657007], [-73.829205, 40.657036], [-73.829115, 40.657118], [-73.8291, 40.657131], [-73.829086, 40.657141], [-73.82903, 40.657165], [-73.829004, 40.657174], [-73.828983, 40.657186], [-73.828968, 40.657205], [-73.828961, 40.657226], [-73.828965, 40.657263], [-73.828981, 40.657295], [-73.829013, 40.657425], [-73.829077, 40.657581], [-73.829132, 40.657703], [-73.829179, 40.6578], [-73.829258, 40.657854], [-73.829324, 40.657881], [-73.829418, 40.657883], [-73.829514, 40.657915], [-73.829528, 40.657929], [-73.829554, 40.657978], [-73.829655, 40.658088], [-73.829728, 40.658121], [-73.829753, 40.658136], [-73.829776, 40.658161], [-73.829792, 40.658185], [-73.829864, 40.65823], [-73.829917, 40.658249], [-73.82993, 40.65826], [-73.830009, 40.658324], [-73.830053, 40.658339], [-73.830118, 40.658379], [-73.83013, 40.658403], [-73.830123, 40.65845], [-73.830076, 40.658483], [-73.830023, 40.658492], [-73.829955, 40.658488], [-73.829883, 40.658469], [-73.829732, 40.658499], [-73.829668, 40.658523], [-73.829627, 40.658557], [-73.829607, 40.6586], [-73.8296, 40.658657], [-73.829613, 40.65871], [-73.829671, 40.658795], [-73.829723, 40.658894], [-73.829755, 40.658949], [-73.829814, 40.659017], [-73.829915, 40.659155], [-73.829928, 40.659181], [-73.829962, 40.659304], [-73.83001, 40.659501], [-73.830014, 40.659523], [-73.83005, 40.659632], [-73.830117, 40.659788], [-73.830131, 40.659807], [-73.83015, 40.659809], [-73.830162, 40.659804], [-73.830177, 40.659776], [-73.830166, 40.659737], [-73.830141, 40.659709], [-73.830134, 40.659694], [-73.830116, 40.659643], [-73.830073, 40.659477], [-73.830012, 40.659163], [-73.829947, 40.659106], [-73.829826, 40.658961], [-73.829786, 40.65888], [-73.829764, 40.658825], [-73.829725, 40.658744], [-73.829695, 40.658656], [-73.829707, 40.658602], [-73.829792, 40.658568], [-73.829871, 40.658571], [-73.830001, 40.658594], [-73.830158, 40.658517], [-73.830199, 40.658509], [-73.830244, 40.65843], [-73.830244, 40.65835], [-73.83017, 40.658316], [-73.830006, 40.658176], [-73.829827, 40.658116], [-73.829701, 40.657926], [-73.82963, 40.657846], [-73.829515, 40.657798], [-73.829459, 40.657803], [-73.829373, 40.657795], [-73.829224, 40.657707], [-73.829105, 40.657544], [-73.829064, 40.657442], [-73.829094, 40.657334], [-73.829173, 40.657243], [-73.829244, 40.657181], [-73.829347, 40.657103], [-73.829427, 40.657014], [-73.829498, 40.656906], [-73.829495, 40.656858], [-73.829461, 40.65677], [-73.829462, 40.65669], [-73.829503, 40.656647], [-73.829585, 40.656656], [-73.829682, 40.65669], [-73.829778, 40.65671], [-73.829892, 40.656729], [-73.83001, 40.656736], [-73.830185, 40.656694], [-73.830327, 40.656507], [-73.830391, 40.656436], [-73.830505, 40.656342], [-73.831067, 40.656138], [-73.831271, 40.656003], [-73.831372, 40.655892], [-73.831442, 40.655767], [-73.831476, 40.655633], [-73.83147, 40.655553], [-73.831516, 40.655464], [-73.831559, 40.655355], [-73.831553, 40.655243], [-73.831687, 40.655091], [-73.831753, 40.654962], [-73.831852, 40.654885], [-73.831917, 40.654883], [-73.832007, 40.654901], [-73.832129, 40.654875], [-73.832182, 40.654895], [-73.832852, 40.657062], [-73.832903, 40.657484], [-73.832782, 40.657548], [-73.832085, 40.656131], [-73.832, 40.656158], [-73.832671, 40.657592], [-73.8326, 40.657827], [-73.832015, 40.658078], [-73.830969, 40.65823], [-73.831284, 40.658407], [-73.831946, 40.658274], [-73.832844, 40.658138], [-73.833384, 40.658052], [-73.833061, 40.656688], [-73.832569, 40.655028], [-73.831112, 40.64942], [-73.831046, 40.649089], [-73.831065, 40.648559], [-73.831281, 40.648214], [-73.831669, 40.647972], [-73.834342, 40.6481], [-73.834618, 40.648124], [-73.834889, 40.648171], [-73.835152, 40.648241], [-73.835403, 40.648332], [-73.835567, 40.648457], [-73.835647, 40.648558], [-73.835699, 40.648669], [-73.835722, 40.648786], [-73.835702, 40.648951], [-73.835712, 40.649006], [-73.835788, 40.649162], [-73.836134, 40.649444], [-73.83912, 40.661539], [-73.838333, 40.661648], [-73.838448, 40.662117], [-73.839858, 40.661932], [-73.836748, 40.649362], [-73.835923, 40.6455], [-73.836331, 40.645321], [-73.840006, 40.645136], [-73.840584, 40.644863], [-73.840893, 40.644969], [-73.845996, 40.644568], [-73.849507, 40.644134], [-73.851833, 40.64586], [-73.852287, 40.646588], [-73.852417, 40.647388], [-73.851965, 40.64851], [-73.851591, 40.649096], [-73.851337, 40.649182], [-73.850985, 40.649114], [-73.850912, 40.649466], [-73.850782, 40.649806], [-73.850597, 40.64981], [-73.850587, 40.650338], [-73.85052, 40.650382], [-73.850428, 40.650292], [-73.850396, 40.650273], [-73.850377, 40.650274], [-73.850377, 40.65029], [-73.850422, 40.650335], [-73.850436, 40.650369], [-73.850445, 40.650456], [-73.849684, 40.650924], [-73.849374, 40.650969], [-73.849214, 40.651106], [-73.849334, 40.651295], [-73.849361, 40.651394], [-73.849923, 40.651658], [-73.850241, 40.651577], [-73.850449, 40.651597], [-73.850681, 40.651506], [-73.850897, 40.6515], [-73.851491, 40.651198], [-73.851786, 40.650816], [-73.852456, 40.650555], [-73.854033, 40.65066], [-73.855442, 40.651204], [-73.855919, 40.651309], [-73.856276, 40.651655], [-73.856328, 40.652128], [-73.856713, 40.652802], [-73.857054, 40.652967], [-73.857723, 40.652726], [-73.858281, 40.652995], [-73.85852, 40.653311], [-73.859155, 40.654402], [-73.859266, 40.654639], [-73.859294, 40.654794], [-73.859306, 40.654972], [-73.859612, 40.655147], [-73.86073, 40.656047], [-73.86084, 40.656172], [-73.861062, 40.656252], [-73.861255, 40.656363], [-73.861352, 40.656395], [-73.861369, 40.656435], [-73.861353, 40.656481], [-73.861389, 40.656543], [-73.861401, 40.656568], [-73.861401, 40.656578], [-73.861392, 40.656587], [-73.86136, 40.656594], [-73.861237, 40.656584], [-73.861088, 40.65656], [-73.860989, 40.656537], [-73.860909, 40.656568], [-73.860831, 40.656561], [-73.860723, 40.656589], [-73.860674, 40.656585], [-73.860637, 40.656472], [-73.860617, 40.656465], [-73.860607, 40.656518], [-73.860623, 40.656628], [-73.860603, 40.656656], [-73.860581, 40.656669], [-73.860494, 40.656684], [-73.860443, 40.656697], [-73.86044, 40.656717], [-73.860481, 40.65674], [-73.86051, 40.656747], [-73.860514, 40.656753], [-73.860515, 40.656767], [-73.860447, 40.656837], [-73.860306, 40.656899], [-73.860244, 40.656953], [-73.860208, 40.65701], [-73.860193, 40.657018], [-73.860159, 40.657012], [-73.86015, 40.656995], [-73.8601, 40.656793], [-73.860068, 40.65678], [-73.860042, 40.656794], [-73.860069, 40.656939], [-73.860062, 40.656964], [-73.860056, 40.656972], [-73.859846, 40.656968], [-73.859834, 40.656977], [-73.859846, 40.656997], [-73.86, 40.65705], [-73.860054, 40.657041], [-73.860075, 40.657049], [-73.859939, 40.657223], [-73.85981, 40.657322], [-73.859791, 40.657432], [-73.859923, 40.65767], [-73.859939, 40.65772], [-73.859666, 40.657886], [-73.859559, 40.658084], [-73.859606, 40.658395], [-73.859836, 40.658571], [-73.8602, 40.658609], [-73.860258, 40.65863], [-73.860311, 40.658784], [-73.860201, 40.658857], [-73.860232, 40.658897], [-73.860452, 40.658797], [-73.860402, 40.658598], [-73.860512, 40.658498], [-73.86072, 40.658416], [-73.860924, 40.658352], [-73.860981, 40.658381], [-73.860998, 40.658444], [-73.860981, 40.658523], [-73.860858, 40.65872], [-73.860617, 40.658832], [-73.86049, 40.658994], [-73.860485, 40.659182], [-73.860612, 40.659327], [-73.860685, 40.659312], [-73.860773, 40.659258], [-73.860814, 40.659169], [-73.860841, 40.659019], [-73.861025, 40.658914], [-73.861249, 40.658721], [-73.861323, 40.658515], [-73.861273, 40.658265]]]]
    },
    "properties": {
      "neighbourhood": "Howard Beach",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.186157, 40.643291], [-74.180805, 40.640818], [-74.175895, 40.641193], [-74.1748, 40.641032], [-74.174062, 40.640923], [-74.172598, 40.640315], [-74.171287, 40.640518], [-74.171113, 40.633467], [-74.16627, 40.63365], [-74.166559, 40.627367], [-74.1676, 40.623125], [-74.167934, 40.622401], [-74.16848, 40.621562], [-74.173366, 40.623677], [-74.177624, 40.625774], [-74.178845, 40.626106], [-74.18173, 40.627922], [-74.195655, 40.635003], [-74.195577, 40.635004], [-74.195307, 40.635234], [-74.195201, 40.635708], [-74.194423, 40.636582], [-74.194542, 40.63707], [-74.194625, 40.637091], [-74.194787, 40.637132], [-74.194623, 40.637391], [-74.194429, 40.637367], [-74.193973, 40.637309], [-74.193887, 40.637344], [-74.193583, 40.637469], [-74.19372, 40.637567], [-74.188834, 40.64152], [-74.188566, 40.641737], [-74.187638, 40.642488], [-74.187058, 40.642957], [-74.186525, 40.643389], [-74.18638, 40.643289], [-74.186232, 40.643187], [-74.186157, 40.643291]]]]
    },
    "properties": {
      "neighbourhood": "Howland Hook",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.829119, 40.861587], [-73.828015, 40.860703], [-73.827098, 40.859073], [-73.830092, 40.858151], [-73.836463, 40.856192], [-73.843753, 40.857185], [-73.846551, 40.857524], [-73.849335, 40.857587], [-73.857112, 40.857036], [-73.856389, 40.857594], [-73.854665, 40.859586], [-73.854559, 40.859954], [-73.845823, 40.870239], [-73.841224, 40.867858], [-73.831602, 40.862628], [-73.830927, 40.86224], [-73.829824, 40.861974], [-73.829119, 40.861587]]]]
    },
    "properties": {
      "neighbourhood": "Pelham Gardens",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.883187, 40.820281], [-73.882909, 40.819536], [-73.881272, 40.818006], [-73.878704, 40.816279], [-73.878518, 40.815799], [-73.876708, 40.815228], [-73.874464, 40.814645], [-73.872501, 40.813888], [-73.872394, 40.813974], [-73.87233, 40.813922], [-73.872437, 40.813851], [-73.87219, 40.813674], [-73.872097, 40.813738], [-73.872037, 40.813686], [-73.872129, 40.813621], [-73.871805, 40.813315], [-73.871658, 40.813254], [-73.870958, 40.812146], [-73.870568, 40.812087], [-73.870471, 40.811458], [-73.870553, 40.811243], [-73.868885, 40.808174], [-73.868112, 40.806752], [-73.868484, 40.805908], [-73.871519, 40.801874], [-73.871611, 40.801914], [-73.871699, 40.801805], [-73.871603, 40.801752], [-73.871745, 40.801547], [-73.872381, 40.80129], [-73.872469, 40.800789], [-73.872237, 40.800762], [-73.872347, 40.800175], [-73.872979, 40.800251], [-73.872902, 40.800695], [-73.872877, 40.80084], [-73.872627, 40.800792], [-73.872586, 40.800961], [-73.872576, 40.801014], [-73.872585, 40.801061], [-73.872611, 40.801104], [-73.872661, 40.801148], [-73.872705, 40.801167], [-73.873551, 40.800853], [-73.874677, 40.800979], [-73.874731, 40.801257], [-73.875265, 40.801398], [-73.875858, 40.801456], [-73.875878, 40.801351], [-73.87593, 40.801084], [-73.878142, 40.801319], [-73.878077, 40.801667], [-73.877986, 40.801657], [-73.877969, 40.801711], [-73.878063, 40.802194], [-73.877914, 40.802268], [-73.877906, 40.802272], [-73.878114, 40.802368], [-73.878166, 40.802552], [-73.878235, 40.802647], [-73.878925, 40.802772], [-73.879743, 40.802743], [-73.881069, 40.802536], [-73.881821, 40.802432], [-73.882193, 40.802372], [-73.882321, 40.802352], [-73.882448, 40.802351], [-73.88243, 40.802266], [-73.882519, 40.802252], [-73.882541, 40.802336], [-73.883204, 40.802228], [-73.883695, 40.802162], [-73.883838, 40.802107], [-73.883938, 40.802031], [-73.883965, 40.801965], [-73.883784, 40.801929], [-73.883777, 40.80194], [-73.883738, 40.801956], [-73.88369, 40.801945], [-73.883669, 40.801913], [-73.88368, 40.801881], [-73.883723, 40.801863], [-73.883775, 40.801873], [-73.883793, 40.801907], [-73.883785, 40.80192], [-73.883968, 40.801957], [-73.883989, 40.801904], [-73.885052, 40.802131], [-73.885146, 40.80226], [-73.885267, 40.802284], [-73.885273, 40.802274], [-73.885311, 40.802253], [-73.885365, 40.802261], [-73.885397, 40.802302], [-73.88538, 40.802334], [-73.885331, 40.802353], [-73.885283, 40.802342], [-73.885258, 40.802308], [-73.885262, 40.802297], [-73.885155, 40.802272], [-73.885256, 40.80241], [-73.8856, 40.802565], [-73.885781, 40.80268], [-73.885914, 40.802799], [-73.886164, 40.803176], [-73.886724, 40.80353], [-73.887086, 40.803809], [-73.887271, 40.803947], [-73.887381, 40.804111], [-73.887247, 40.804186], [-73.887402, 40.804374], [-73.887529, 40.804402], [-73.887711, 40.804615], [-73.887631, 40.804671], [-73.887959, 40.804998], [-73.888195, 40.80492], [-73.888592, 40.804789], [-73.888826, 40.804853], [-73.889073, 40.805014], [-73.889279, 40.805182], [-73.889383, 40.80531], [-73.889441, 40.80544], [-73.889407, 40.805582], [-73.889224, 40.805845], [-73.889242, 40.805937], [-73.889146, 40.806118], [-73.89004, 40.809629], [-73.894869, 40.808905], [-73.8956, 40.811681], [-73.895395, 40.811898], [-73.897958, 40.812968], [-73.897955, 40.81297], [-73.896411, 40.814218], [-73.890422, 40.819984], [-73.888756, 40.821232], [-73.887149, 40.822332], [-73.884328, 40.822614], [-73.883941, 40.821989], [-73.88365, 40.82152], [-73.883187, 40.820281]]]]
    },
    "properties": {
      "neighbourhood": "Hunts Point",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.922298, 40.855599], [-73.922531, 40.85568], [-73.922906, 40.855912], [-73.92293, 40.858941], [-73.92471, 40.861552], [-73.927091, 40.85976], [-73.927625, 40.859012], [-73.930122, 40.858744], [-73.931313, 40.859328], [-73.933053, 40.859828], [-73.935532, 40.858918], [-73.937789, 40.859812], [-73.937815, 40.859834], [-73.937704, 40.859936], [-73.937529, 40.860097], [-73.937581, 40.860203], [-73.937177, 40.860709], [-73.937042, 40.861058], [-73.936969, 40.861143], [-73.936811, 40.861258], [-73.936803, 40.861279], [-73.936819, 40.861316], [-73.93681, 40.861363], [-73.936476, 40.861927], [-73.936228, 40.862239], [-73.935529, 40.863124], [-73.934434, 40.864504], [-73.934356, 40.864733], [-73.934017, 40.865036], [-73.934016, 40.865196], [-73.93395, 40.865347], [-73.933402, 40.866136], [-73.933323, 40.866238], [-73.933257, 40.866242], [-73.932663, 40.867237], [-73.932756, 40.867264], [-73.932763, 40.867252], [-73.932902, 40.867293], [-73.93284, 40.867415], [-73.932646, 40.867358], [-73.93266, 40.86733], [-73.932598, 40.867311], [-73.932548, 40.867414], [-73.932519, 40.867411], [-73.932425, 40.867568], [-73.932373, 40.868063], [-73.932274, 40.868477], [-73.932281, 40.868533], [-73.932268, 40.868562], [-73.932323, 40.868578], [-73.932315, 40.868604], [-73.932492, 40.868678], [-73.932625, 40.868456], [-73.932651, 40.868465], [-73.932545, 40.86864], [-73.932568, 40.868648], [-73.932524, 40.868722], [-73.932501, 40.868714], [-73.932506, 40.868706], [-73.932306, 40.868629], [-73.932298, 40.868647], [-73.93225, 40.86864], [-73.932254, 40.868683], [-73.932278, 40.868711], [-73.932314, 40.868924], [-73.93236, 40.86895], [-73.932537, 40.868968], [-73.932569, 40.868979], [-73.932568, 40.869044], [-73.932505, 40.86913], [-73.93239, 40.869187], [-73.932293, 40.8692], [-73.932189, 40.869367], [-73.932469, 40.869476], [-73.932354, 40.869755], [-73.932266, 40.869735], [-73.932359, 40.869507], [-73.932133, 40.869416], [-73.932053, 40.869601], [-73.932096, 40.86976], [-73.932199, 40.869845], [-73.932206, 40.870096], [-73.932032, 40.870757], [-73.931914, 40.871129], [-73.931377, 40.872109], [-73.931063, 40.872667], [-73.929977, 40.874339], [-73.929013, 40.875739], [-73.928146, 40.876523], [-73.927966, 40.876618], [-73.927531, 40.876711], [-73.92708, 40.877075], [-73.926531, 40.877584], [-73.926482, 40.877618], [-73.926416, 40.87761], [-73.926406, 40.877621], [-73.926297, 40.877565], [-73.92631, 40.877551], [-73.926303, 40.877537], [-73.926297, 40.877524], [-73.926295, 40.877506], [-73.926295, 40.877488], [-73.9263, 40.877471], [-73.926309, 40.877455], [-73.92632, 40.87744], [-73.926335, 40.877426], [-73.926353, 40.877414], [-73.926373, 40.877405], [-73.926394, 40.877399], [-73.926441, 40.877332], [-73.926458, 40.877258], [-73.926414, 40.877181], [-73.926341, 40.877119], [-73.926193, 40.877064], [-73.925553, 40.877103], [-73.925176, 40.877255], [-73.925169, 40.877283], [-73.925158, 40.877311], [-73.925138, 40.877342], [-73.925113, 40.877372], [-73.925082, 40.877398], [-73.925027, 40.877372], [-73.924962, 40.877394], [-73.924896, 40.877411], [-73.924742, 40.877432], [-73.92457, 40.877429], [-73.923295, 40.877264], [-73.922447, 40.876807], [-73.922398, 40.87678], [-73.922388, 40.876763], [-73.922377, 40.876759], [-73.922375, 40.876557], [-73.922381, 40.876366], [-73.922435, 40.875912], [-73.922445, 40.875692], [-73.922668, 40.874982], [-73.922667, 40.874968], [-73.922614, 40.874407], [-73.922177, 40.873675], [-73.921255, 40.873082], [-73.920556, 40.872999], [-73.920134, 40.873193], [-73.919927, 40.873595], [-73.919905, 40.873611], [-73.919793, 40.873607], [-73.919793, 40.873646], [-73.9199, 40.873649], [-73.919925, 40.873654], [-73.919958, 40.873679], [-73.92013, 40.873923], [-73.920145, 40.873905], [-73.920241, 40.873963], [-73.920223, 40.873979], [-73.920441, 40.874107], [-73.9205, 40.87416], [-73.920544, 40.874145], [-73.920606, 40.874207], [-73.920627, 40.874235], [-73.92077, 40.874177], [-73.920788, 40.874179], [-73.920803, 40.874194], [-73.920808, 40.874215], [-73.920661, 40.874279], [-73.920686, 40.874323], [-73.920711, 40.874387], [-73.9207, 40.874392], [-73.920716, 40.874406], [-73.920725, 40.874431], [-73.920758, 40.874466], [-73.92114, 40.875048], [-73.921175, 40.875106], [-73.921182, 40.875138], [-73.92117, 40.875183], [-73.92116, 40.875196], [-73.921127, 40.875235], [-73.921111, 40.875238], [-73.921104, 40.875253], [-73.921113, 40.875267], [-73.921107, 40.875276], [-73.921105, 40.875285], [-73.92108, 40.875293], [-73.921062, 40.875309], [-73.921057, 40.875319], [-73.921036, 40.875344], [-73.921024, 40.875368], [-73.921011, 40.875377], [-73.92099, 40.875385], [-73.920978, 40.8754], [-73.920969, 40.875419], [-73.920955, 40.875429], [-73.92093, 40.875437], [-73.920929, 40.875446], [-73.920918, 40.875453], [-73.920913, 40.875465], [-73.920903, 40.875466], [-73.920894, 40.875458], [-73.920876, 40.875464], [-73.92081, 40.875454], [-73.920665, 40.875394], [-73.920601, 40.875411], [-73.920525, 40.875409], [-73.92048, 40.875375], [-73.920481, 40.875339], [-73.919701, 40.874994], [-73.919554, 40.874952], [-73.919411, 40.874903], [-73.919271, 40.874849], [-73.919135, 40.874789], [-73.919003, 40.874723], [-73.918877, 40.874653], [-73.918862, 40.874643], [-73.91885, 40.874622], [-73.918855, 40.874593], [-73.918944, 40.874521], [-73.919064, 40.8744], [-73.919114, 40.874334], [-73.919193, 40.874195], [-73.919242, 40.874048], [-73.91927, 40.87381], [-73.919271, 40.87369], [-73.919271, 40.873677], [-73.919277, 40.873664], [-73.919288, 40.873654], [-73.919295, 40.87365], [-73.919281, 40.873633], [-73.919265, 40.873641], [-73.919247, 40.873645], [-73.919223, 40.873641], [-73.919201, 40.873634], [-73.91918, 40.873625], [-73.919169, 40.87362], [-73.91916, 40.873613], [-73.919153, 40.873605], [-73.919147, 40.873596], [-73.919143, 40.873587], [-73.919141, 40.873577], [-73.919142, 40.873567], [-73.919141, 40.873546], [-73.919136, 40.873526], [-73.919127, 40.873506], [-73.919114, 40.873487], [-73.919098, 40.873471], [-73.919098, 40.873469], [-73.919096, 40.873466], [-73.919092, 40.873465], [-73.91909, 40.873464], [-73.919087, 40.873465], [-73.919086, 40.873465], [-73.919085, 40.873466], [-73.919082, 40.873467], [-73.919078, 40.873468], [-73.919075, 40.873469], [-73.919071, 40.873469], [-73.919068, 40.873469], [-73.919064, 40.873468], [-73.919061, 40.873467], [-73.919058, 40.873466], [-73.919059, 40.873464], [-73.919059, 40.873463], [-73.919058, 40.873462], [-73.919058, 40.873461], [-73.919057, 40.87346], [-73.919056, 40.873459], [-73.919055, 40.873458], [-73.919054, 40.873458], [-73.919052, 40.873457], [-73.919051, 40.873457], [-73.919049, 40.873457], [-73.919048, 40.873457], [-73.919046, 40.873457], [-73.919045, 40.873458], [-73.919044, 40.873459], [-73.919036, 40.873458], [-73.919029, 40.873457], [-73.919022, 40.873455], [-73.919016, 40.873452], [-73.91901, 40.873449], [-73.919005, 40.873444], [-73.919, 40.873438], [-73.918994, 40.873432], [-73.918986, 40.873428], [-73.918978, 40.873424], [-73.918969, 40.873421], [-73.91896, 40.873419], [-73.91895, 40.873418], [-73.918944, 40.873417], [-73.918937, 40.873415], [-73.918931, 40.873413], [-73.918926, 40.87341], [-73.918921, 40.873406], [-73.918918, 40.873402], [-73.918916, 40.873394], [-73.918917, 40.873387], [-73.918918, 40.873379], [-73.918922, 40.873372], [-73.918926, 40.873366], [-73.918932, 40.87336], [-73.918939, 40.873355], [-73.918947, 40.87335], [-73.918951, 40.873349], [-73.918955, 40.873346], [-73.918957, 40.873342], [-73.918957, 40.873339], [-73.918954, 40.873335], [-73.918948, 40.873333], [-73.918943, 40.873331], [-73.918938, 40.873328], [-73.918934, 40.873324], [-73.918931, 40.873321], [-73.918929, 40.873317], [-73.918916, 40.873324], [-73.918897, 40.873327], [-73.918871, 40.873328], [-73.918864, 40.873334], [-73.91886, 40.873341], [-73.918848, 40.873344], [-73.918839, 40.873346], [-73.918829, 40.873345], [-73.918821, 40.873346], [-73.918811, 40.873348], [-73.9188, 40.873349], [-73.918788, 40.873347], [-73.918776, 40.873344], [-73.918766, 40.873338], [-73.918758, 40.873328], [-73.918748, 40.87332], [-73.918725, 40.873312], [-73.91872, 40.873307], [-73.918713, 40.873305], [-73.918698, 40.873278], [-73.918699, 40.873271], [-73.918723, 40.873249], [-73.918713, 40.873246], [-73.918708, 40.873248], [-73.918696, 40.873252], [-73.918672, 40.873254], [-73.91866, 40.873261], [-73.918649, 40.873279], [-73.918632, 40.873284], [-73.918617, 40.873286], [-73.918603, 40.873286], [-73.918587, 40.873278], [-73.91857, 40.873263], [-73.918565, 40.873251], [-73.918566, 40.873238], [-73.918551, 40.873222], [-73.918531, 40.873213], [-73.918516, 40.873214], [-73.918508, 40.873207], [-73.9185, 40.873192], [-73.918481, 40.873196], [-73.918409, 40.873197], [-73.918391, 40.873209], [-73.918397, 40.873232], [-73.918417, 40.87327], [-73.918532, 40.873325], [-73.918594, 40.873357], [-73.918613, 40.873371], [-73.918629, 40.873405], [-73.918628, 40.87344], [-73.918612, 40.873473], [-73.918597, 40.873495], [-73.918573, 40.873496], [-73.918561, 40.87351], [-73.918496, 40.873548], [-73.918469, 40.873571], [-73.918454, 40.873568], [-73.918439, 40.873554], [-73.918412, 40.873551], [-73.918401, 40.873563], [-73.918425, 40.873586], [-73.918425, 40.873602], [-73.918411, 40.873637], [-73.918328, 40.873694], [-73.918295, 40.873715], [-73.918246, 40.873737], [-73.918199, 40.873753], [-73.918179, 40.873769], [-73.918162, 40.873791], [-73.918147, 40.873822], [-73.918104, 40.873847], [-73.918059, 40.87385], [-73.918037, 40.873897], [-73.917941, 40.873983], [-73.917929, 40.873979], [-73.917755, 40.874249], [-73.91777, 40.874254], [-73.917577, 40.874549], [-73.917499, 40.87452], [-73.917691, 40.874225], [-73.917709, 40.874232], [-73.91789, 40.873962], [-73.917885, 40.87396], [-73.917871, 40.873905], [-73.917847, 40.873931], [-73.917814, 40.873946], [-73.917808, 40.873957], [-73.917793, 40.873953], [-73.917778, 40.873963], [-73.917781, 40.87398], [-73.917768, 40.873992], [-73.91774, 40.874007], [-73.917396, 40.87416], [-73.916981, 40.874327], [-73.916713, 40.874355], [-73.91658, 40.874436], [-73.916448, 40.874495], [-73.916343, 40.874524], [-73.915685, 40.874528], [-73.915224, 40.874487], [-73.912729, 40.873807], [-73.912502, 40.873728], [-73.911942, 40.873458], [-73.911578, 40.873272], [-73.911175, 40.872985], [-73.910649, 40.872296], [-73.910541, 40.872058], [-73.910538, 40.872034], [-73.910553, 40.872018], [-73.910518, 40.871906], [-73.910495, 40.871826], [-73.910473, 40.871696], [-73.910461, 40.871642], [-73.910448, 40.871502], [-73.910443, 40.87149], [-73.910426, 40.871485], [-73.910429, 40.871466], [-73.910444, 40.871464], [-73.910434, 40.871381], [-73.910678, 40.870873], [-73.910748, 40.870265], [-73.910853, 40.869649], [-73.910919, 40.869524], [-73.910941, 40.869489], [-73.910947, 40.869452], [-73.910925, 40.869437], [-73.910956, 40.869411], [-73.910987, 40.869405], [-73.911009, 40.869419], [-73.911039, 40.869422], [-73.911058, 40.869409], [-73.911132, 40.869442], [-73.911189, 40.869459], [-73.911256, 40.869487], [-73.911304, 40.86951], [-73.911346, 40.869524], [-73.911382, 40.869523], [-73.91144, 40.869495], [-73.911464, 40.869477], [-73.911474, 40.869455], [-73.911472, 40.869413], [-73.911463, 40.869377], [-73.911424, 40.869364], [-73.911417, 40.869355], [-73.9114, 40.869352], [-73.911394, 40.869344], [-73.911358, 40.869336], [-73.911355, 40.869313], [-73.911122, 40.869214], [-73.911117, 40.869179], [-73.911097, 40.869179], [-73.911031, 40.869155], [-73.911076, 40.869043], [-73.911129, 40.86892], [-73.911149, 40.86888], [-73.9112, 40.868864], [-73.911251, 40.868861], [-73.911283, 40.868848], [-73.911328, 40.868802], [-73.911337, 40.868774], [-73.91133, 40.868759], [-73.911325, 40.868718], [-73.911326, 40.868676], [-73.911364, 40.868583], [-73.911505, 40.868303], [-73.911848, 40.867673], [-73.912732, 40.866605], [-73.912548, 40.866515], [-73.913612, 40.865142], [-73.913919, 40.864746], [-73.914312, 40.864625], [-73.914924, 40.86458], [-73.914929, 40.86457], [-73.91454, 40.864412], [-73.914474, 40.864311], [-73.914411, 40.864174], [-73.915086, 40.864448], [-73.915432, 40.864418], [-73.915429, 40.864408], [-73.915434, 40.864387], [-73.915459, 40.864384], [-73.915453, 40.864334], [-73.915632, 40.864309], [-73.915639, 40.864349], [-73.915664, 40.86435], [-73.915712, 40.864343], [-73.915817, 40.864335], [-73.915899, 40.864308], [-73.915936, 40.864242], [-73.915926, 40.864173], [-73.915871, 40.864129], [-73.91579, 40.864103], [-73.915667, 40.864087], [-73.915584, 40.864071], [-73.915493, 40.864066], [-73.91544, 40.864078], [-73.915384, 40.86408], [-73.915346, 40.864073], [-73.915311, 40.864051], [-73.915298, 40.864035], [-73.915267, 40.86402], [-73.915241, 40.863996], [-73.915216, 40.863976], [-73.915196, 40.863945], [-73.915182, 40.86386], [-73.915175, 40.863708], [-73.915176, 40.86368], [-73.915201, 40.863652], [-73.915254, 40.863618], [-73.915308, 40.86359], [-73.915362, 40.863547], [-73.915477, 40.863346], [-73.915485, 40.863301], [-73.91546, 40.863257], [-73.915451, 40.863233], [-73.915455, 40.863208], [-73.915423, 40.863194], [-73.915411, 40.863195], [-73.915345, 40.863165], [-73.915411, 40.863095], [-73.915387, 40.863084], [-73.91552, 40.86291], [-73.915566, 40.862931], [-73.915576, 40.862916], [-73.915563, 40.862909], [-73.91558, 40.862896], [-73.915589, 40.862901], [-73.9156, 40.862892], [-73.915594, 40.862889], [-73.915604, 40.86288], [-73.915618, 40.862879], [-73.915672, 40.862902], [-73.915682, 40.862894], [-73.91578, 40.862789], [-73.915952, 40.862631], [-73.916105, 40.862488], [-73.916276, 40.862366], [-73.916492, 40.862198], [-73.916795, 40.861978], [-73.917295, 40.861679], [-73.91741, 40.861486], [-73.917481, 40.861399], [-73.917825, 40.86098], [-73.917821, 40.860949], [-73.917841, 40.860931], [-73.917861, 40.860901], [-73.917865, 40.860884], [-73.917877, 40.860884], [-73.917882, 40.860874], [-73.917905, 40.86085], [-73.917902, 40.86084], [-73.917922, 40.860825], [-73.917922, 40.860814], [-73.917884, 40.860802], [-73.918434, 40.860222], [-73.918393, 40.86008], [-73.918423, 40.860039], [-73.918778, 40.859547], [-73.919371, 40.858926], [-73.919502, 40.858791], [-73.919524, 40.858783], [-73.919546, 40.858792], [-73.919547, 40.858799], [-73.92029, 40.859106], [-73.920281, 40.859115], [-73.920361, 40.859149], [-73.920412, 40.859148], [-73.920435, 40.859121], [-73.920445, 40.859124], [-73.920461, 40.859103], [-73.919847, 40.858844], [-73.919772, 40.858802], [-73.919774, 40.858795], [-73.920479, 40.859104], [-73.920431, 40.859155], [-73.920441, 40.859161], [-73.920434, 40.859172], [-73.920509, 40.859205], [-73.920508, 40.859212], [-73.92062, 40.859259], [-73.920653, 40.859263], [-73.920698, 40.859324], [-73.920693, 40.859351], [-73.920748, 40.859398], [-73.920902, 40.859683], [-73.921044, 40.859877], [-73.921271, 40.860188], [-73.921322, 40.860214], [-73.92134, 40.860217], [-73.921346, 40.860213], [-73.921364, 40.860211], [-73.921394, 40.860191], [-73.921459, 40.860163], [-73.921516, 40.860131], [-73.921516, 40.860123], [-73.921543, 40.860099], [-73.921557, 40.860099], [-73.92159, 40.860073], [-73.921661, 40.859891], [-73.921688, 40.85984], [-73.921718, 40.859712], [-73.921701, 40.859694], [-73.92171, 40.859672], [-73.921737, 40.859672], [-73.921738, 40.859647], [-73.921723, 40.859634], [-73.921704, 40.859631], [-73.921686, 40.859636], [-73.921697, 40.859612], [-73.921681, 40.859609], [-73.921665, 40.859592], [-73.921671, 40.859581], [-73.921669, 40.859572], [-73.921648, 40.859571], [-73.921649, 40.859551], [-73.92169, 40.859548], [-73.921731, 40.859556], [-73.92172, 40.859568], [-73.921754, 40.859569], [-73.92174, 40.85958], [-73.921759, 40.859579], [-73.921769, 40.859559], [-73.921803, 40.859559], [-73.921803, 40.859548], [-73.921817, 40.859542], [-73.921816, 40.85956], [-73.921833, 40.859555], [-73.92184, 40.859522], [-73.921826, 40.859508], [-73.921801, 40.859495], [-73.921784, 40.859497], [-73.921784, 40.85948], [-73.92179, 40.859476], [-73.921791, 40.859467], [-73.921783, 40.85946], [-73.921778, 40.859437], [-73.921755, 40.859411], [-73.921745, 40.859412], [-73.921728, 40.859395], [-73.921739, 40.859391], [-73.921742, 40.859378], [-73.921781, 40.859376], [-73.921801, 40.859384], [-73.921814, 40.859395], [-73.921846, 40.859383], [-73.921793, 40.859353], [-73.921806, 40.859329], [-73.921836, 40.859323], [-73.921842, 40.8593], [-73.921857, 40.859291], [-73.921856, 40.859271], [-73.921872, 40.8592], [-73.921866, 40.859181], [-73.921849, 40.859163], [-73.92181, 40.859141], [-73.921829, 40.859129], [-73.921818, 40.859115], [-73.921795, 40.859104], [-73.921754, 40.859094], [-73.921713, 40.859096], [-73.9217, 40.859084], [-73.921671, 40.859067], [-73.921656, 40.859076], [-73.921641, 40.859068], [-73.921623, 40.859056], [-73.921576, 40.859055], [-73.921563, 40.859038], [-73.921537, 40.859028], [-73.921517, 40.859012], [-73.921496, 40.859006], [-73.921415, 40.858952], [-73.921407, 40.858939], [-73.921395, 40.85894], [-73.921362, 40.858919], [-73.921323, 40.858907], [-73.921307, 40.858899], [-73.921296, 40.85888], [-73.921314, 40.858875], [-73.921345, 40.858885], [-73.92137, 40.858897], [-73.921388, 40.858897], [-73.92137, 40.858879], [-73.921333, 40.858867], [-73.921309, 40.858864], [-73.921278, 40.858869], [-73.921256, 40.858847], [-73.921239, 40.858815], [-73.921239, 40.858794], [-73.92125, 40.858784], [-73.921264, 40.858737], [-73.921257, 40.858715], [-73.921239, 40.858694], [-73.92121, 40.858689], [-73.921173, 40.858646], [-73.921133, 40.858639], [-73.921104, 40.858616], [-73.921109, 40.858598], [-73.921121, 40.858588], [-73.921103, 40.858572], [-73.921089, 40.858567], [-73.921086, 40.858556], [-73.921072, 40.858553], [-73.921102, 40.858513], [-73.921122, 40.858445], [-73.921092, 40.858441], [-73.921068, 40.858417], [-73.921059, 40.858375], [-73.921079, 40.85833], [-73.921059, 40.858317], [-73.921079, 40.858312], [-73.921088, 40.8583], [-73.921064, 40.858294], [-73.920997, 40.858304], [-73.920987, 40.85829], [-73.920942, 40.858284], [-73.920915, 40.858219], [-73.920938, 40.858121], [-73.920812, 40.858082], [-73.920664, 40.858036], [-73.92066, 40.858027], [-73.920624, 40.858017], [-73.920609, 40.858019], [-73.920484, 40.858233], [-73.920351, 40.858195], [-73.920365, 40.858165], [-73.920473, 40.858195], [-73.920483, 40.858172], [-73.920425, 40.858147], [-73.920431, 40.858137], [-73.920494, 40.858165], [-73.920508, 40.858142], [-73.920508, 40.858135], [-73.920474, 40.858126], [-73.920479, 40.858112], [-73.920519, 40.858126], [-73.920557, 40.858058], [-73.920524, 40.85805], [-73.920531, 40.85804], [-73.920559, 40.858049], [-73.920583, 40.858011], [-73.920544, 40.858001], [-73.920566, 40.857964], [-73.920531, 40.857953], [-73.920536, 40.857945], [-73.920568, 40.857956], [-73.920599, 40.857899], [-73.920581, 40.857884], [-73.92057, 40.857889], [-73.920565, 40.857883], [-73.920583, 40.857874], [-73.920612, 40.857896], [-73.920612, 40.857904], [-73.920773, 40.857941], [-73.920776, 40.857903], [-73.920724, 40.857885], [-73.920751, 40.857832], [-73.920758, 40.857811], [-73.920714, 40.857795], [-73.920718, 40.857783], [-73.920706, 40.857778], [-73.92068, 40.85782], [-73.920673, 40.857817], [-73.920695, 40.857781], [-73.920631, 40.857796], [-73.920629, 40.857785], [-73.920694, 40.857768], [-73.920694, 40.857757], [-73.920679, 40.857753], [-73.920674, 40.857744], [-73.920683, 40.857728], [-73.920706, 40.857701], [-73.920715, 40.85771], [-73.920726, 40.857712], [-73.920741, 40.8577], [-73.92074, 40.857712], [-73.920712, 40.857756], [-73.920708, 40.857767], [-73.920718, 40.857772], [-73.920721, 40.857767], [-73.920746, 40.857775], [-73.92075, 40.857763], [-73.920859, 40.857796], [-73.920855, 40.857808], [-73.920825, 40.857801], [-73.920819, 40.857813], [-73.920909, 40.857844], [-73.920918, 40.857817], [-73.920959, 40.857827], [-73.920955, 40.857835], [-73.921008, 40.857848], [-73.921014, 40.857839], [-73.921002, 40.857818], [-73.920983, 40.857802], [-73.920988, 40.857776], [-73.92096, 40.857787], [-73.92095, 40.85781], [-73.920824, 40.857752], [-73.92084, 40.857721], [-73.920963, 40.857779], [-73.920985, 40.857764], [-73.920989, 40.85775], [-73.920976, 40.857736], [-73.920963, 40.857742], [-73.920929, 40.857727], [-73.920931, 40.857723], [-73.920921, 40.857716], [-73.920917, 40.857721], [-73.920911, 40.857719], [-73.920915, 40.857714], [-73.920905, 40.85771], [-73.920902, 40.857714], [-73.920892, 40.857713], [-73.920894, 40.857707], [-73.920875, 40.857701], [-73.920872, 40.857707], [-73.920864, 40.857706], [-73.92087, 40.857694], [-73.920897, 40.857702], [-73.920904, 40.857694], [-73.920911, 40.857695], [-73.920907, 40.857703], [-73.920917, 40.857707], [-73.920924, 40.8577], [-73.920932, 40.857703], [-73.920926, 40.857711], [-73.920936, 40.857715], [-73.920959, 40.857685], [-73.92089, 40.857664], [-73.920914, 40.857619], [-73.920892, 40.857613], [-73.920885, 40.857624], [-73.920814, 40.857607], [-73.920788, 40.857654], [-73.920773, 40.85765], [-73.920798, 40.857604], [-73.920776, 40.857598], [-73.920789, 40.857572], [-73.920784, 40.85757], [-73.920719, 40.857633], [-73.920697, 40.857621], [-73.920755, 40.857557], [-73.920772, 40.857549], [-73.920789, 40.857562], [-73.920794, 40.857553], [-73.920901, 40.857582], [-73.920894, 40.857598], [-73.920919, 40.857606], [-73.92093, 40.857592], [-73.920982, 40.857612], [-73.921002, 40.857585], [-73.920946, 40.857564], [-73.920951, 40.857557], [-73.92101, 40.857578], [-73.921015, 40.857574], [-73.921011, 40.857571], [-73.921017, 40.857562], [-73.921025, 40.857564], [-73.921032, 40.857555], [-73.9209, 40.857494], [-73.920909, 40.857479], [-73.920937, 40.857487], [-73.920945, 40.85747], [-73.920997, 40.857484], [-73.921036, 40.857439], [-73.921014, 40.857429], [-73.921049, 40.857382], [-73.921069, 40.857394], [-73.921094, 40.857383], [-73.921164, 40.857437], [-73.921132, 40.857455], [-73.921073, 40.857517], [-73.921121, 40.857537], [-73.921184, 40.857524], [-73.921223, 40.857522], [-73.921305, 40.857421], [-73.92152, 40.857349], [-73.921584, 40.85729], [-73.921558, 40.857153], [-73.921559, 40.857089], [-73.921592, 40.857065], [-73.921703, 40.857021], [-73.921837, 40.856993], [-73.921863, 40.856992], [-73.92197, 40.856911], [-73.922045, 40.856854], [-73.922075, 40.856779], [-73.922157, 40.856766], [-73.922169, 40.856738], [-73.922146, 40.856726], [-73.92211, 40.85672], [-73.922167, 40.856663], [-73.922247, 40.856614], [-73.922293, 40.856627], [-73.922377, 40.856584], [-73.922345, 40.856253], [-73.922376, 40.855978], [-73.922345, 40.855682], [-73.922345, 40.855682], [-73.922345, 40.855682], [-73.922179, 40.855897], [-73.922181, 40.8559], [-73.922183, 40.855903], [-73.922184, 40.855907], [-73.922184, 40.85591], [-73.922184, 40.855914], [-73.922183, 40.855917], [-73.922181, 40.85592], [-73.922179, 40.855923], [-73.922176, 40.855926], [-73.922172, 40.855928], [-73.922168, 40.85593], [-73.922164, 40.855931], [-73.922159, 40.855932], [-73.922155, 40.855932], [-73.92215, 40.855932], [-73.922063, 40.856054], [-73.922077, 40.856059], [-73.921873, 40.85635], [-73.921888, 40.856355], [-73.921818, 40.856454], [-73.921835, 40.856462], [-73.921765, 40.856566], [-73.92177, 40.856568], [-73.921698, 40.856672], [-73.921519, 40.856601], [-73.921591, 40.856497], [-73.921597, 40.856499], [-73.921672, 40.856394], [-73.92169, 40.856401], [-73.92176, 40.856305], [-73.921823, 40.856329], [-73.92203, 40.85604], [-73.922042, 40.856045], [-73.922129, 40.855923], [-73.922127, 40.855919], [-73.922126, 40.855916], [-73.922125, 40.855912], [-73.922125, 40.855909], [-73.922126, 40.855905], [-73.922127, 40.855902], [-73.92213, 40.855899], [-73.922133, 40.855896], [-73.922136, 40.855893], [-73.92214, 40.855891], [-73.922144, 40.85589], [-73.922149, 40.855889], [-73.922153, 40.855889], [-73.922158, 40.855889], [-73.922236, 40.855771], [-73.922296, 40.855664], [-73.922279, 40.855655], [-73.922298, 40.855599]]]]
    },
    "properties": {
      "neighbourhood": "Inwood",
      "neighbourhood_group": "Manhattan"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.869411, 40.749165], [-73.869482, 40.749143], [-73.88081, 40.747975], [-73.891457, 40.74687], [-73.894338, 40.74658], [-73.896938, 40.750501], [-73.89728, 40.750418], [-73.897699, 40.752365], [-73.898697, 40.75411], [-73.873641, 40.756774], [-73.865056, 40.757652], [-73.858269, 40.757965], [-73.856058, 40.758256], [-73.854633, 40.758466], [-73.853761, 40.757067], [-73.852191, 40.752639], [-73.861666, 40.749945], [-73.869411, 40.749165]]]]
    },
    "properties": {
      "neighbourhood": "Jackson Heights",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.77582, 40.705376], [-73.775922, 40.704291], [-73.775477, 40.702724], [-73.773958, 40.699831], [-73.777346, 40.698223], [-73.778546, 40.699767], [-73.784466, 40.69739], [-73.782771, 40.695995], [-73.78211, 40.695237], [-73.77662, 40.688364], [-73.7724, 40.68528], [-73.76974, 40.683778], [-73.769637, 40.684329], [-73.761169, 40.686443], [-73.760424, 40.683376], [-73.760731, 40.682846], [-73.761832, 40.679053], [-73.76289, 40.677502], [-73.763468, 40.676068], [-73.763494, 40.676003], [-73.76383, 40.67364], [-73.764353, 40.671853], [-73.76696, 40.667035], [-73.771137, 40.667446], [-73.772951, 40.667436], [-73.783673, 40.66673], [-73.785118, 40.666784], [-73.789418, 40.666322], [-73.789489, 40.666314], [-73.789307, 40.667181], [-73.788085, 40.67301], [-73.790474, 40.673391], [-73.801216, 40.674344], [-73.80323, 40.677681], [-73.805832, 40.682914], [-73.807454, 40.686175], [-73.808704, 40.688579], [-73.814144, 40.697931], [-73.81702, 40.704041], [-73.814439, 40.704402], [-73.802787, 40.707716], [-73.800222, 40.708446], [-73.795534, 40.709783], [-73.793532, 40.710507], [-73.79304, 40.710711], [-73.789321, 40.71203], [-73.787718, 40.711865], [-73.782713, 40.712919], [-73.782625, 40.712938], [-73.779975, 40.707051], [-73.776781, 40.707823], [-73.77582, 40.705376]]]]
    },
    "properties": {
      "neighbourhood": "Jamaica",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.85521, 40.842975], [-73.857389, 40.843676], [-73.858665, 40.845275], [-73.859445, 40.846659], [-73.860259, 40.848088], [-73.860497, 40.848289], [-73.862278, 40.84906], [-73.865477, 40.850284], [-73.862975, 40.852344], [-73.86008, 40.854751], [-73.857112, 40.857036], [-73.849335, 40.857587], [-73.846551, 40.857524], [-73.843753, 40.857185], [-73.836463, 40.856192], [-73.837969, 40.854731], [-73.837969, 40.854731], [-73.840232, 40.852155], [-73.841087, 40.851122], [-73.841558, 40.849906], [-73.842941, 40.846404], [-73.844622, 40.846386], [-73.844904, 40.848121], [-73.845927, 40.84682], [-73.847395, 40.845592], [-73.849009, 40.844734], [-73.85521, 40.842975]]]]
    },
    "properties": {
      "neighbourhood": "Morris Park",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.830551, 40.726275], [-73.831836, 40.728092], [-73.833159, 40.7299], [-73.833833, 40.730465], [-73.825665, 40.732273], [-73.825244, 40.735098], [-73.821666, 40.735447], [-73.821859, 40.734433], [-73.8148, 40.733776], [-73.815231, 40.728794], [-73.81444, 40.728087], [-73.810744, 40.726265], [-73.81063, 40.72442], [-73.809342, 40.720957], [-73.809023, 40.719918], [-73.809023, 40.719918], [-73.809021, 40.719911], [-73.807684, 40.715554], [-73.807669, 40.715506], [-73.807769, 40.715525], [-73.808859, 40.715726], [-73.817833, 40.715708], [-73.821393, 40.716316], [-73.822911, 40.716289], [-73.826007, 40.7156], [-73.825426, 40.717426], [-73.825535, 40.719796], [-73.826127, 40.721005], [-73.827218, 40.724527], [-73.827559, 40.724951], [-73.828301, 40.725479], [-73.829586, 40.72578], [-73.830551, 40.726275]]]]
    },
    "properties": {
      "neighbourhood": "Kew Gardens Hills",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.899685, 40.886612], [-73.896741, 40.886059], [-73.894643, 40.885691], [-73.892872, 40.885317], [-73.887544, 40.884266], [-73.887029, 40.884411], [-73.887031, 40.883736], [-73.885884, 40.881308], [-73.885668, 40.88074], [-73.885408, 40.880407], [-73.884656, 40.879807], [-73.885657, 40.878926], [-73.887808, 40.87697], [-73.888308, 40.875971], [-73.888665, 40.874686], [-73.889414, 40.873437], [-73.889807, 40.87258], [-73.890378, 40.871652], [-73.891816, 40.871785], [-73.895196, 40.870296], [-73.897267, 40.867726], [-73.899515, 40.864549], [-73.90108, 40.862756], [-73.907586, 40.862816], [-73.90904, 40.862679], [-73.909867, 40.86231], [-73.910756, 40.861651], [-73.913109, 40.861996], [-73.914257, 40.862486], [-73.913415, 40.863367], [-73.912763, 40.863029], [-73.912273, 40.863632], [-73.912744, 40.863893], [-73.912761, 40.863877], [-73.912798, 40.863899], [-73.912752, 40.863945], [-73.912716, 40.863926], [-73.912731, 40.86391], [-73.912526, 40.863795], [-73.912676, 40.864021], [-73.912105, 40.864666], [-73.910418, 40.86657], [-73.91036, 40.866877], [-73.909497, 40.868831], [-73.90944, 40.869053], [-73.909346, 40.869421], [-73.90919, 40.870031], [-73.908937, 40.87102], [-73.908649, 40.871386], [-73.908756, 40.871677], [-73.908932, 40.872157], [-73.90872, 40.872229], [-73.908464, 40.872621], [-73.907743, 40.872846], [-73.906651, 40.875753], [-73.906828, 40.876632], [-73.907037, 40.876895], [-73.90779, 40.877524], [-73.908593, 40.878109], [-73.909062, 40.878487], [-73.909498, 40.878777], [-73.910332, 40.879038], [-73.911489, 40.879019], [-73.912058, 40.878119], [-73.914198, 40.876997], [-73.914874, 40.876642], [-73.915786, 40.875717], [-73.91726, 40.875809], [-73.917333, 40.875802], [-73.917474, 40.875762], [-73.917689, 40.875681], [-73.917757, 40.875664], [-73.917789, 40.875677], [-73.917839, 40.875738], [-73.917919, 40.875778], [-73.917992, 40.875804], [-73.918085, 40.875795], [-73.91825, 40.875818], [-73.91826, 40.875845], [-73.91828, 40.875856], [-73.91833, 40.875837], [-73.919083, 40.876065], [-73.91924, 40.876145], [-73.918932, 40.876388], [-73.918009, 40.877119], [-73.916287, 40.877793], [-73.914995, 40.877933], [-73.912556, 40.879242], [-73.910327, 40.883441], [-73.907465, 40.884434], [-73.905729, 40.885724], [-73.904135, 40.887089], [-73.902859, 40.889165], [-73.901851, 40.889223], [-73.901012, 40.888896], [-73.899812, 40.889677], [-73.898236, 40.889522], [-73.899685, 40.886612]]]]
    },
    "properties": {
      "neighbourhood": "Kingsbridge",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.971682, 40.743041], [-73.971889, 40.742725], [-73.971741, 40.742664], [-73.97196, 40.742338], [-73.97229, 40.740721], [-73.972196, 40.74071], [-73.972183, 40.740706], [-73.972168, 40.740693], [-73.972165, 40.740676], [-73.972196, 40.740403], [-73.972217, 40.740308], [-73.9723, 40.740035], [-73.97231, 40.740019], [-73.972331, 40.740011], [-73.972439, 40.740022], [-73.972657, 40.739223], [-73.972657, 40.739221], [-73.972657, 40.739221], [-73.972568, 40.737404], [-73.97249, 40.735803], [-73.97251, 40.735787], [-73.972869, 40.735771], [-73.974414, 40.736414], [-73.97446, 40.736294], [-73.974417, 40.736278], [-73.974412, 40.736285], [-73.9744, 40.736284], [-73.974027, 40.736126], [-73.974047, 40.7361], [-73.974429, 40.736261], [-73.974428, 40.736266], [-73.974466, 40.736278], [-73.974504, 40.736065], [-73.974504, 40.736065], [-73.974475, 40.736062], [-73.974441, 40.73605], [-73.974434, 40.736054], [-73.974141, 40.735956], [-73.974151, 40.735934], [-73.974447, 40.736033], [-73.974448, 40.736038], [-73.974478, 40.736044], [-73.974505, 40.736042], [-73.974515, 40.735895], [-73.974515, 40.735895], [-73.974515, 40.735893], [-73.974508, 40.735797], [-73.974487, 40.735877], [-73.97445, 40.73587], [-73.974461, 40.735832], [-73.974249, 40.735798], [-73.974245, 40.735781], [-73.974258, 40.735767], [-73.974469, 40.735799], [-73.974469, 40.735789], [-73.974477, 40.735789], [-73.974465, 40.735668], [-73.974391, 40.735669], [-73.974391, 40.735673], [-73.974263, 40.735673], [-73.974264, 40.735677], [-73.974192, 40.735681], [-73.974189, 40.735661], [-73.974157, 40.735659], [-73.974145, 40.735673], [-73.974092, 40.735642], [-73.974089, 40.735646], [-73.973419, 40.735368], [-73.973439, 40.735341], [-73.973057, 40.735177], [-73.972807, 40.735524], [-73.972937, 40.735599], [-73.97293, 40.735608], [-73.972763, 40.735505], [-73.972997, 40.735187], [-73.972964, 40.735169], [-73.972932, 40.735205], [-73.972885, 40.73518], [-73.972864, 40.735212], [-73.972837, 40.7352], [-73.972945, 40.735065], [-73.972967, 40.735078], [-73.972945, 40.735108], [-73.972996, 40.735128], [-73.972971, 40.735157], [-73.973003, 40.735173], [-73.973037, 40.735128], [-73.973299, 40.735242], [-73.973299, 40.735241], [-73.973322, 40.735202], [-73.973299, 40.735177], [-73.973279, 40.735148], [-73.973272, 40.735119], [-73.973277, 40.735079], [-73.973296, 40.735041], [-73.973329, 40.735011], [-73.973369, 40.734989], [-73.973418, 40.734971], [-73.973459, 40.734968], [-73.973523, 40.734975], [-73.973545, 40.734944], [-73.974437, 40.735316], [-73.974437, 40.735315], [-73.974437, 40.735315], [-73.974378, 40.735081], [-73.974378, 40.73508], [-73.974648, 40.735082], [-73.974907, 40.735313], [-73.978527, 40.736854], [-73.978527, 40.736855], [-73.978527, 40.736856], [-73.97852, 40.736858], [-73.984742, 40.739503], [-73.983381, 40.741375], [-73.979711, 40.746385], [-73.971682, 40.743041]]]]
    },
    "properties": {
      "neighbourhood": "Kips Bay",
      "neighbourhood_group": "Manhattan"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.125934, 40.57577], [-74.133159, 40.573479], [-74.141883, 40.572233], [-74.141536, 40.570783], [-74.141999, 40.570725], [-74.141883, 40.570465], [-74.14197, 40.570204], [-74.140463, 40.569537], [-74.141304, 40.568378], [-74.138929, 40.567264], [-74.13963, 40.566206], [-74.14252, 40.563893], [-74.146874, 40.566426], [-74.148306, 40.564919], [-74.149798, 40.563643], [-74.152956, 40.566776], [-74.147264, 40.571403], [-74.146898, 40.572241], [-74.147013, 40.573216], [-74.147251, 40.573632], [-74.146844, 40.574227], [-74.147995, 40.575685], [-74.147073, 40.575744], [-74.146686, 40.575952], [-74.14627, 40.575982], [-74.145466, 40.575685], [-74.143295, 40.575863], [-74.143444, 40.576607], [-74.135532, 40.578451], [-74.135116, 40.578748], [-74.135265, 40.579819], [-74.133212, 40.580027], [-74.133718, 40.581782], [-74.132826, 40.582258], [-74.131547, 40.58202], [-74.130357, 40.582883], [-74.129167, 40.583953], [-74.127829, 40.58315], [-74.127026, 40.582496], [-74.126383, 40.58249], [-74.126083, 40.580577], [-74.127425, 40.579792], [-74.126925, 40.57895], [-74.12684, 40.578636], [-74.127068, 40.578164], [-74.12714, 40.577622], [-74.126983, 40.576394], [-74.126697, 40.576237], [-74.126469, 40.576979], [-74.125626, 40.576865], [-74.125934, 40.57577]]]]
    },
    "properties": {
      "neighbourhood": "Lighthouse Hill",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.994393, 40.719525], [-73.994378, 40.719519], [-73.994808, 40.718457], [-73.996478, 40.719048], [-73.997791, 40.716793], [-73.998636, 40.717077], [-73.999991, 40.717977], [-73.99767, 40.72082], [-73.994393, 40.719525]]]]
    },
    "properties": {
      "neighbourhood": "Little Italy",
      "neighbourhood_group": "Manhattan"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.750816, 40.782886], [-73.750806, 40.782893], [-73.739376, 40.776014], [-73.728707, 40.769461], [-73.725546, 40.767495], [-73.72356, 40.766129], [-73.723059, 40.766144], [-73.722484, 40.765527], [-73.722484, 40.765527], [-73.722482, 40.765526], [-73.721143, 40.764873], [-73.720975, 40.764763], [-73.720809, 40.764648], [-73.713012, 40.759556], [-73.714804, 40.759649], [-73.716499, 40.759448], [-73.717975, 40.759027], [-73.71916, 40.758484], [-73.719326, 40.758375], [-73.719581, 40.758208], [-73.720181, 40.757815], [-73.721178, 40.756871], [-73.722917, 40.754098], [-73.725656, 40.752045], [-73.72589, 40.752291], [-73.72792, 40.754657], [-73.729908, 40.757378], [-73.731389, 40.759625], [-73.7318, 40.76066], [-73.73213, 40.760878], [-73.73527, 40.764571], [-73.736864, 40.767441], [-73.738549, 40.769668], [-73.738881, 40.770791], [-73.740774, 40.772791], [-73.741839, 40.773629], [-73.744378, 40.773204], [-73.744862, 40.773634], [-73.744996, 40.774215], [-73.745374, 40.774608], [-73.745833, 40.775817], [-73.745955, 40.777239], [-73.746216, 40.777986], [-73.747046, 40.778232], [-73.747561, 40.778654], [-73.748535, 40.778857], [-73.7492, 40.779818], [-73.74999, 40.781649], [-73.750816, 40.782886]]]]
    },
    "properties": {
      "neighbourhood": "Little Neck",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.896937, 40.834361], [-73.896302, 40.833543], [-73.895274, 40.834034], [-73.894692, 40.830619], [-73.897001, 40.828051], [-73.899797, 40.827685], [-73.903461, 40.828533], [-73.903852, 40.828194], [-73.90509, 40.829014], [-73.907647, 40.826695], [-73.90941, 40.822869], [-73.916309, 40.824903], [-73.910307, 40.828773], [-73.90896, 40.830226], [-73.907069, 40.833437], [-73.90343, 40.832216], [-73.901212, 40.835498], [-73.896937, 40.834361]]]]
    },
    "properties": {
      "neighbourhood": "Morrisania",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.967919, 40.747961], [-73.968174, 40.747667], [-73.968365, 40.747433], [-73.968232, 40.747368], [-73.968296, 40.747296], [-73.968302, 40.747273], [-73.968316, 40.747274], [-73.968326, 40.747252], [-73.968943, 40.746518], [-73.969624, 40.745747], [-73.969697, 40.745657], [-73.969876, 40.745445], [-73.969906, 40.745458], [-73.969912, 40.745452], [-73.969931, 40.745463], [-73.969927, 40.745468], [-73.969974, 40.745496], [-73.970048, 40.745403], [-73.970339, 40.74505], [-73.970326, 40.745037], [-73.970326, 40.745023], [-73.970378, 40.744952], [-73.970443, 40.74487], [-73.970461, 40.744865], [-73.970472, 40.744866], [-73.970788, 40.744406], [-73.970941, 40.744471], [-73.971125, 40.74419], [-73.971111, 40.744184], [-73.971092, 40.744182], [-73.971075, 40.744176], [-73.970905, 40.744103], [-73.970758, 40.744039], [-73.970751, 40.74403], [-73.970718, 40.744017], [-73.970706, 40.744003], [-73.970703, 40.74399], [-73.970743, 40.743948], [-73.970751, 40.743949], [-73.970761, 40.743942], [-73.970792, 40.743956], [-73.970799, 40.743953], [-73.971173, 40.744108], [-73.971358, 40.743838], [-73.971205, 40.743772], [-73.971281, 40.743652], [-73.971241, 40.743638], [-73.971208, 40.743699], [-73.9712, 40.743706], [-73.971188, 40.743707], [-73.971098, 40.743678], [-73.971085, 40.743664], [-73.971233, 40.743415], [-73.971246, 40.743402], [-73.971256, 40.743402], [-73.971267, 40.74339], [-73.971354, 40.743425], [-73.97135, 40.743432], [-73.971357, 40.743437], [-73.971361, 40.743444], [-73.971311, 40.743524], [-73.971356, 40.74354], [-73.971681, 40.743042], [-73.971682, 40.743041], [-73.979711, 40.746385], [-73.982955, 40.747744], [-73.979287, 40.752801], [-73.967919, 40.747961]]]]
    },
    "properties": {
      "neighbourhood": "Murray Hill",
      "neighbourhood_group": "Manhattan"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.926353, 40.747551], [-73.92732, 40.747485], [-73.934401, 40.746035], [-73.93347, 40.745152], [-73.934576, 40.739677], [-73.934829, 40.739797], [-73.934629, 40.73943], [-73.934996, 40.737869], [-73.924879, 40.736032], [-73.923118, 40.735458], [-73.920447, 40.73485], [-73.921271, 40.734784], [-73.922726, 40.734356], [-73.925244, 40.732442], [-73.925922, 40.731537], [-73.926517, 40.730587], [-73.927486, 40.729452], [-73.927697, 40.72917], [-73.927945, 40.728914], [-73.928414, 40.728364], [-73.928801, 40.728025], [-73.928803, 40.728026], [-73.929235, 40.72826], [-73.930709, 40.728607], [-73.930992, 40.728618], [-73.931193, 40.728643], [-73.931263, 40.728677], [-73.931302, 40.728705], [-73.931315, 40.728729], [-73.932193, 40.728832], [-73.934532, 40.729105], [-73.935888, 40.729465], [-73.936446, 40.729672], [-73.938045, 40.73051], [-73.939111, 40.73138], [-73.93941, 40.731935], [-73.939496, 40.732199], [-73.939412, 40.732236], [-73.939464, 40.732302], [-73.93991, 40.733276], [-73.940032, 40.733245], [-73.940165, 40.733486], [-73.940018, 40.73354], [-73.940104, 40.733753], [-73.940067, 40.733762], [-73.940865, 40.73507], [-73.941622, 40.735799], [-73.941636, 40.735819], [-73.941623, 40.735824], [-73.941617, 40.735833], [-73.941625, 40.735841], [-73.941801, 40.735963], [-73.943577, 40.736698], [-73.945921, 40.737494], [-73.945929, 40.737496], [-73.945935, 40.737499], [-73.945939, 40.737503], [-73.945942, 40.737507], [-73.945945, 40.737518], [-73.945947, 40.737533], [-73.945937, 40.737556], [-73.945918, 40.737568], [-73.945906, 40.737573], [-73.945897, 40.737575], [-73.945892, 40.737576], [-73.945887, 40.737575], [-73.945857, 40.737569], [-73.945839, 40.737556], [-73.945825, 40.737549], [-73.945794, 40.737549], [-73.945625, 40.737659], [-73.945585, 40.737684], [-73.945488, 40.737737], [-73.944755, 40.738011], [-73.944682, 40.738108], [-73.944658, 40.73813], [-73.944639, 40.738138], [-73.944631, 40.738139], [-73.944624, 40.738139], [-73.944608, 40.738135], [-73.944567, 40.738116], [-73.942579, 40.738816], [-73.942804, 40.738862], [-73.942801, 40.738881], [-73.942556, 40.739021], [-73.942153, 40.73908], [-73.941462, 40.739249], [-73.940778, 40.739922], [-73.940509, 40.740114], [-73.940362, 40.740335], [-73.940561, 40.740418], [-73.939109, 40.742617], [-73.93867, 40.742534], [-73.938588, 40.742931], [-73.940019, 40.743208], [-73.940149, 40.742832], [-73.939653, 40.742731], [-73.940048, 40.742071], [-73.940084, 40.742063], [-73.941188, 40.74029], [-73.941595, 40.739864], [-73.94165, 40.739864], [-73.941835, 40.739693], [-73.942034, 40.739657], [-73.942087, 40.739593], [-73.94238, 40.73943], [-73.942448, 40.739414], [-73.942597, 40.739395], [-73.942649, 40.739323], [-73.942728, 40.739232], [-73.94279, 40.739194], [-73.942696, 40.739134], [-73.942706, 40.739115], [-73.942901, 40.739004], [-73.94329, 40.739009], [-73.943532, 40.738923], [-73.943823, 40.738872], [-73.94397, 40.738782], [-73.944339, 40.738646], [-73.945239, 40.738357], [-73.945358, 40.738269], [-73.945482, 40.738207], [-73.947151, 40.7379], [-73.950336, 40.739007], [-73.952297, 40.739519], [-73.953799, 40.73982], [-73.955366, 40.739765], [-73.956824, 40.739615], [-73.957655, 40.739435], [-73.959251, 40.738736], [-73.959783, 40.738512], [-73.959837, 40.738494], [-73.959873, 40.738487], [-73.959932, 40.738485], [-73.959953, 40.738485], [-73.960005, 40.738491], [-73.960068, 40.738484], [-73.960106, 40.738461], [-73.960137, 40.738419], [-73.960138, 40.73838], [-73.960143, 40.738361], [-73.960154, 40.738347], [-73.960169, 40.738339], [-73.960224, 40.738314], [-73.960285, 40.738244], [-73.960726, 40.73808], [-73.9621, 40.73826], [-73.962164, 40.738272], [-73.962165, 40.738273], [-73.962166, 40.738273], [-73.962166, 40.738273], [-73.962167, 40.738274], [-73.962167, 40.738275], [-73.962168, 40.738275], [-73.962168, 40.738277], [-73.962168, 40.738279], [-73.962127, 40.738415], [-73.962131, 40.738451], [-73.962451, 40.738612], [-73.962535, 40.738681], [-73.962592, 40.738768], [-73.962608, 40.738796], [-73.96262, 40.739033], [-73.962431, 40.739671], [-73.96243, 40.739673], [-73.962209, 40.740006], [-73.961592, 40.740004], [-73.96145, 40.740338], [-73.961642, 40.740356], [-73.96163, 40.740459], [-73.961293, 40.740433], [-73.961266, 40.740537], [-73.961518, 40.740607], [-73.961727, 40.74067], [-73.96185, 40.740724], [-73.961909, 40.740868], [-73.961888, 40.740982], [-73.961804, 40.741098], [-73.961653, 40.741133], [-73.961459, 40.741138], [-73.961219, 40.741108], [-73.961118, 40.741537], [-73.961075, 40.741628], [-73.961077, 40.741697], [-73.961115, 40.741798], [-73.961272, 40.741833], [-73.961292, 40.741796], [-73.961363, 40.741811], [-73.961365, 40.741823], [-73.961365, 40.741835], [-73.961362, 40.741847], [-73.961356, 40.741858], [-73.961349, 40.741869], [-73.961339, 40.741878], [-73.961108, 40.741828], [-73.961173, 40.741886], [-73.961553, 40.741993], [-73.96119, 40.742645], [-73.961095, 40.742782], [-73.960972, 40.742754], [-73.960646, 40.743393], [-73.960568, 40.743466], [-73.960466, 40.74352], [-73.960409, 40.743539], [-73.960288, 40.743558], [-73.960164, 40.743551], [-73.959785, 40.743498], [-73.95972, 40.743693], [-73.959805, 40.743707], [-73.959744, 40.743873], [-73.959751, 40.743902], [-73.96051, 40.744047], [-73.960521, 40.74402], [-73.960672, 40.744051], [-73.960649, 40.74413], [-73.96012, 40.74403], [-73.960106, 40.744059], [-73.959923, 40.744027], [-73.959933, 40.743995], [-73.959632, 40.743935], [-73.959362, 40.744214], [-73.959404, 40.744226], [-73.959391, 40.744283], [-73.95946, 40.744293], [-73.959469, 40.744268], [-73.959713, 40.744315], [-73.959729, 40.744272], [-73.960155, 40.744369], [-73.960126, 40.744444], [-73.960011, 40.744423], [-73.960026, 40.744374], [-73.959802, 40.744329], [-73.959791, 40.744356], [-73.959543, 40.744309], [-73.959524, 40.744355], [-73.959369, 40.744325], [-73.9593, 40.744324], [-73.959234, 40.74431], [-73.959216, 40.744326], [-73.9591, 40.744404], [-73.958976, 40.744452], [-73.958854, 40.74447], [-73.958775, 40.744556], [-73.959187, 40.744621], [-73.959222, 40.744554], [-73.959411, 40.744591], [-73.959425, 40.744595], [-73.959437, 40.744601], [-73.959447, 40.744608], [-73.959455, 40.744617], [-73.959461, 40.744627], [-73.959464, 40.744638], [-73.959464, 40.744649], [-73.959462, 40.744661], [-73.95946, 40.744667], [-73.959454, 40.744678], [-73.959445, 40.744688], [-73.959433, 40.744697], [-73.95942, 40.744703], [-73.959405, 40.744708], [-73.959389, 40.74471], [-73.959373, 40.74471], [-73.958879, 40.744624], [-73.958883, 40.744613], [-73.958764, 40.744593], [-73.958641, 40.744948], [-73.958748, 40.74497], [-73.958759, 40.744954], [-73.959649, 40.745144], [-73.959652, 40.745217], [-73.959055, 40.745108], [-73.959076, 40.745092], [-73.958494, 40.744988], [-73.958453, 40.745119], [-73.958625, 40.745149], [-73.958625, 40.745168], [-73.95914, 40.745292], [-73.959198, 40.745297], [-73.959251, 40.745316], [-73.959294, 40.745345], [-73.95933, 40.745397], [-73.959343, 40.745471], [-73.959324, 40.745543], [-73.959303, 40.745577], [-73.959243, 40.745645], [-73.959162, 40.745709], [-73.959059, 40.745753], [-73.958947, 40.745771], [-73.958569, 40.745689], [-73.958476, 40.745689], [-73.958399, 40.745719], [-73.95838, 40.745755], [-73.95837, 40.745792], [-73.958367, 40.745829], [-73.958371, 40.745867], [-73.958383, 40.745904], [-73.958379, 40.745953], [-73.958994, 40.746065], [-73.958647, 40.746545], [-73.958671, 40.746643], [-73.958317, 40.747072], [-73.957886, 40.747561], [-73.956795, 40.74884], [-73.954854, 40.748041], [-73.954733, 40.748019], [-73.954677, 40.748134], [-73.954709, 40.74815], [-73.954652, 40.748233], [-73.95432, 40.748104], [-73.95439, 40.748019], [-73.954645, 40.748128], [-73.954706, 40.748014], [-73.953184, 40.747735], [-73.953054, 40.748087], [-73.954784, 40.748428], [-73.956322, 40.749082], [-73.95638, 40.749034], [-73.956486, 40.749112], [-73.956256, 40.749335], [-73.956135, 40.749265], [-73.95576, 40.749597], [-73.956174, 40.749665], [-73.9562, 40.749671], [-73.956201, 40.749686], [-73.956121, 40.74976], [-73.956088, 40.749769], [-73.956062, 40.749764], [-73.955595, 40.749684], [-73.955464, 40.749674], [-73.955349, 40.750014], [-73.955215, 40.749992], [-73.955228, 40.749943], [-73.955132, 40.749926], [-73.955203, 40.749677], [-73.955067, 40.749633], [-73.954516, 40.750587], [-73.95465, 40.750831], [-73.95394, 40.751746], [-73.953994, 40.751786], [-73.953802, 40.751958], [-73.953679, 40.752047], [-73.953641, 40.752037], [-73.952972, 40.752747], [-73.953009, 40.752775], [-73.952173, 40.753703], [-73.951018, 40.755087], [-73.948059, 40.758703], [-73.945964, 40.761293], [-73.944676, 40.76293], [-73.943503, 40.764499], [-73.942594, 40.765503], [-73.941312, 40.766918], [-73.940351, 40.767653], [-73.939836, 40.767988], [-73.939366, 40.76816], [-73.938955, 40.767958], [-73.938204, 40.768728], [-73.938064, 40.768771], [-73.93779, 40.7687], [-73.937153, 40.768335], [-73.928425, 40.763416], [-73.92538, 40.76197], [-73.929751, 40.756581], [-73.923372, 40.753594], [-73.920865, 40.756678], [-73.914467, 40.753661], [-73.913519, 40.753496], [-73.91058, 40.752984], [-73.909556, 40.75104], [-73.909483, 40.75056], [-73.90971, 40.749755], [-73.911625, 40.74998], [-73.913484, 40.750199], [-73.915406, 40.75011], [-73.920342, 40.74916], [-73.920798, 40.746891], [-73.926353, 40.747551]]]]
    },
    "properties": {
      "neighbourhood": "Long Island City",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.897001, 40.828051], [-73.897002, 40.82805], [-73.895485, 40.828249], [-73.895292, 40.828143], [-73.893843, 40.828392], [-73.888063, 40.82887], [-73.888051, 40.828698], [-73.8864, 40.827503], [-73.885635, 40.828031], [-73.883817, 40.82833], [-73.884531, 40.825647], [-73.88457, 40.82316], [-73.884328, 40.822614], [-73.887149, 40.822332], [-73.888756, 40.821232], [-73.890422, 40.819984], [-73.896411, 40.814218], [-73.897955, 40.81297], [-73.897958, 40.812968], [-73.898448, 40.813177], [-73.900905, 40.811429], [-73.902718, 40.810917], [-73.904466, 40.812282], [-73.910948, 40.813621], [-73.914954, 40.814937], [-73.917625, 40.816055], [-73.917623, 40.816056], [-73.916764, 40.816557], [-73.914031, 40.818956], [-73.911745, 40.822107], [-73.909785, 40.82252], [-73.90941, 40.822869], [-73.907647, 40.826695], [-73.90509, 40.829014], [-73.903852, 40.828194], [-73.903461, 40.828533], [-73.899797, 40.827685], [-73.897001, 40.828051]]]]
    },
    "properties": {
      "neighbourhood": "Longwood",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.974893, 40.715152], [-73.97605, 40.712604], [-73.976712, 40.711536], [-73.977057, 40.711198], [-73.977377, 40.710954], [-73.977527, 40.710843], [-73.977721, 40.71071], [-73.977821, 40.710645], [-73.977997, 40.710561], [-73.978182, 40.710507], [-73.979373, 40.710417], [-73.980283, 40.710362], [-73.980299, 40.710343], [-73.980314, 40.710333], [-73.980331, 40.710324], [-73.98033, 40.710287], [-73.98118, 40.710227], [-73.981277, 40.710217], [-73.981237, 40.709823], [-73.981333, 40.709814], [-73.988165, 40.709157], [-73.988173, 40.709148], [-73.98839, 40.709127], [-73.988391, 40.709127], [-73.988447, 40.709134], [-73.98848, 40.709156], [-73.988497, 40.709176], [-73.988637, 40.709912], [-73.988645, 40.709917], [-73.98867, 40.70992], [-73.988696, 40.709928], [-73.988718, 40.709947], [-73.988737, 40.709971], [-73.988797, 40.709967], [-73.989358, 40.709901], [-73.990158, 40.70979], [-73.990789, 40.70969], [-73.991898, 40.709541], [-73.992457, 40.711754], [-73.992623, 40.713168], [-73.99012, 40.713382], [-73.9902, 40.714665], [-73.989155, 40.716708], [-73.994808, 40.718457], [-73.994378, 40.719519], [-73.994393, 40.719525], [-73.992604, 40.724136], [-73.978753, 40.719934], [-73.977224, 40.71931], [-73.975452, 40.718947], [-73.974739, 40.718801], [-73.973576, 40.718589], [-73.974893, 40.715152]]]]
    },
    "properties": {
      "neighbourhood": "Lower East Side",
      "neighbourhood_group": "Manhattan"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.953419, 40.582609], [-73.953301, 40.582003], [-73.950388, 40.582259], [-73.949697, 40.582319], [-73.943499, 40.58114], [-73.943494, 40.581139], [-73.942741, 40.580996], [-73.933813, 40.581133], [-73.933814, 40.581214], [-73.933836, 40.581214], [-73.933836, 40.581204], [-73.935134, 40.581184], [-73.935138, 40.581303], [-73.935109, 40.581304], [-73.935106, 40.581221], [-73.935095, 40.581211], [-73.933836, 40.58123], [-73.933836, 40.58122], [-73.933813, 40.581221], [-73.933813, 40.581233], [-73.933764, 40.581233], [-73.933763, 40.581194], [-73.933663, 40.581195], [-73.933663, 40.581213], [-73.9334, 40.581215], [-73.933399, 40.581165], [-73.933662, 40.581162], [-73.933663, 40.581185], [-73.933763, 40.581183], [-73.933758, 40.581132], [-73.933003, 40.581145], [-73.933003, 40.581281], [-73.932972, 40.581284], [-73.932964, 40.581145], [-73.93291, 40.581146], [-73.932913, 40.581284], [-73.932873, 40.581286], [-73.932869, 40.581148], [-73.932806, 40.581147], [-73.932749, 40.581237], [-73.932698, 40.581269], [-73.932641, 40.581277], [-73.93258, 40.581265], [-73.932553, 40.58124], [-73.932524, 40.581196], [-73.932503, 40.581147], [-73.932405, 40.580818], [-73.932224, 40.580218], [-73.932021, 40.579542], [-73.931996, 40.579521], [-73.931815, 40.578959], [-73.931827, 40.57868], [-73.93169, 40.578179], [-73.931641, 40.578171], [-73.93106, 40.576266], [-73.931063, 40.576163], [-73.931442, 40.575701], [-73.931503, 40.575661], [-73.931826, 40.575648], [-73.934861, 40.575528], [-73.934891, 40.575515], [-73.934902, 40.575485], [-73.934894, 40.575222], [-73.934995, 40.575226], [-73.935002, 40.575436], [-73.935079, 40.575509], [-73.936234, 40.575842], [-73.936471, 40.57586], [-73.936562, 40.575819], [-73.936604, 40.575772], [-73.936651, 40.575623], [-73.936672, 40.575428], [-73.936695, 40.57542], [-73.93672, 40.575418], [-73.936757, 40.575428], [-73.936793, 40.575538], [-73.936813, 40.575556], [-73.93685, 40.575556], [-73.942509, 40.575374], [-73.942519, 40.575382], [-73.942527, 40.575392], [-73.942533, 40.575402], [-73.942537, 40.575414], [-73.942539, 40.575425], [-73.942538, 40.575437], [-73.942534, 40.575447], [-73.942529, 40.575458], [-73.942522, 40.575467], [-73.942513, 40.575476], [-73.942502, 40.575483], [-73.94249, 40.57549], [-73.942476, 40.575494], [-73.942505, 40.575537], [-73.942557, 40.575564], [-73.943641, 40.575773], [-73.944393, 40.575789], [-73.944543, 40.575757], [-73.944633, 40.575691], [-73.944553, 40.575293], [-73.944569, 40.575264], [-73.944583, 40.575251], [-73.944596, 40.575246], [-73.944619, 40.575245], [-73.944644, 40.575256], [-73.944687, 40.575351], [-73.944682, 40.575445], [-73.944699, 40.575482], [-73.944748, 40.575512], [-73.945275, 40.575568], [-73.945724, 40.575559], [-73.946036, 40.575466], [-73.946182, 40.575299], [-73.946206, 40.575199], [-73.946159, 40.57519], [-73.945953, 40.575212], [-73.945921, 40.575199], [-73.945909, 40.575139], [-73.945924, 40.575115], [-73.946651, 40.575019], [-73.949919, 40.574552], [-73.951325, 40.574424], [-73.952078, 40.574399], [-73.952363, 40.574292], [-73.952426, 40.574559], [-73.953641, 40.580605], [-73.95408, 40.582793], [-73.953419, 40.582609]]]]
    },
    "properties": {
      "neighbourhood": "Manhattan Beach",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.908932, 40.872157], [-73.908932, 40.872157], [-73.909748, 40.873218], [-73.910095, 40.873537], [-73.910904, 40.874133], [-73.910921, 40.874146], [-73.912944, 40.874849], [-73.913501, 40.875018], [-73.913653, 40.875058], [-73.914075, 40.875183], [-73.914069, 40.875208], [-73.915383, 40.875593], [-73.915786, 40.875717], [-73.914874, 40.876642], [-73.914198, 40.876997], [-73.912058, 40.878119], [-73.911489, 40.879019], [-73.910332, 40.879038], [-73.909498, 40.878777], [-73.909062, 40.878487], [-73.908593, 40.878109], [-73.90779, 40.877524], [-73.907037, 40.876895], [-73.906828, 40.876632], [-73.906651, 40.875753], [-73.907743, 40.872846], [-73.908464, 40.872621], [-73.90872, 40.872229], [-73.908932, 40.872157]]]]
    },
    "properties": {
      "neighbourhood": "Marble Hill",
      "neighbourhood_group": "Manhattan"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.962231, 40.754522], [-73.967919, 40.747961], [-73.979287, 40.752801], [-73.982955, 40.747744], [-73.979711, 40.746385], [-73.983381, 40.741375], [-73.991356, 40.744763], [-73.987973, 40.749467], [-73.987933, 40.749853], [-73.993464, 40.75219], [-73.990724, 40.75595], [-73.985043, 40.753554], [-73.979057, 40.761747], [-73.984726, 40.764167], [-73.982389, 40.767411], [-73.982156, 40.767756], [-73.982321, 40.767894], [-73.982385, 40.768097], [-73.982268, 40.768299], [-73.982039, 40.768388], [-73.981754, 40.7684], [-73.981565, 40.768307], [-73.981468, 40.76815], [-73.981451, 40.767983], [-73.98115, 40.767754], [-73.973015, 40.764279], [-73.958788, 40.758213], [-73.959181, 40.757856], [-73.960656, 40.755923], [-73.962231, 40.754522]]]]
    },
    "properties": {
      "neighbourhood": "Midtown",
      "neighbourhood_group": "Manhattan"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.947458, 40.63059], [-73.944827, 40.616046], [-73.944059, 40.61199], [-73.953652, 40.610948], [-73.967666, 40.609394], [-73.96767, 40.609404], [-73.972993, 40.608818], [-73.972989, 40.608828], [-73.972998, 40.608833], [-73.976569, 40.627579], [-73.976569, 40.627579], [-73.96678, 40.632295], [-73.9659, 40.628648], [-73.957124, 40.629586], [-73.947458, 40.63059]]]]
    },
    "properties": {
      "neighbourhood": "Midwood",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.869286, 40.880249], [-73.870072, 40.8783], [-73.870944, 40.878513], [-73.872193, 40.875804], [-73.873036, 40.874562], [-73.876158, 40.870475], [-73.879859, 40.868394], [-73.88303, 40.86663], [-73.884525, 40.868547], [-73.884953, 40.869796], [-73.889414, 40.873437], [-73.888665, 40.874686], [-73.888308, 40.875971], [-73.887808, 40.87697], [-73.885657, 40.878926], [-73.884656, 40.879807], [-73.885408, 40.880407], [-73.885668, 40.88074], [-73.885884, 40.881308], [-73.887031, 40.883736], [-73.887029, 40.884411], [-73.884053, 40.883141], [-73.882638, 40.883411], [-73.88132, 40.882745], [-73.879351, 40.885226], [-73.877876, 40.887244], [-73.87761, 40.88452], [-73.87773, 40.88345], [-73.878126, 40.88215], [-73.874675, 40.881563], [-73.87475, 40.880011], [-73.871953, 40.880285], [-73.870835, 40.880673], [-73.869286, 40.880249]]]]
    },
    "properties": {
      "neighbourhood": "Norwood",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.116379, 40.563898], [-74.11226, 40.561458], [-74.110821, 40.563421], [-74.11014, 40.564311], [-74.105576, 40.56199], [-74.100337, 40.55908], [-74.099929, 40.559071], [-74.1008, 40.558322], [-74.101244, 40.557661], [-74.101693, 40.556584], [-74.101846, 40.556217], [-74.10184, 40.555945], [-74.101375, 40.555692], [-74.101346, 40.555626], [-74.101354, 40.555583], [-74.101405, 40.555539], [-74.101474, 40.555534], [-74.102651, 40.556134], [-74.102863, 40.556026], [-74.103098, 40.555905], [-74.104659, 40.55412], [-74.105089, 40.553235], [-74.104862, 40.55308], [-74.104844, 40.553026], [-74.104915, 40.553016], [-74.106428, 40.553853], [-74.106434, 40.55397], [-74.106401, 40.554061], [-74.106482, 40.554157], [-74.106677, 40.554188], [-74.107047, 40.554195], [-74.107348, 40.554148], [-74.108539, 40.553258], [-74.110285, 40.551496], [-74.111222, 40.550144], [-74.112788, 40.547884], [-74.11301, 40.54778], [-74.113383, 40.548073], [-74.113596, 40.548061], [-74.11464, 40.549112], [-74.11606, 40.548653], [-74.116507, 40.548647], [-74.119438, 40.551352], [-74.11964, 40.551817], [-74.119528, 40.552267], [-74.1273, 40.557295], [-74.128117, 40.556535], [-74.128203, 40.55659], [-74.129607, 40.557485], [-74.134808, 40.560799], [-74.133407, 40.56213], [-74.13311, 40.562868], [-74.132614, 40.563453], [-74.131852, 40.564351], [-74.131826, 40.564382], [-74.13156, 40.564692], [-74.131515, 40.564716], [-74.131371, 40.564788], [-74.13047, 40.564972], [-74.127144, 40.567579], [-74.124917, 40.568963], [-74.1249, 40.568949], [-74.116379, 40.563898]]]]
    },
    "properties": {
      "neighbourhood": "Oakwood",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.907333, 40.853816], [-73.910582, 40.850182], [-73.91315, 40.846577], [-73.913236, 40.846241], [-73.913975, 40.84543], [-73.914199, 40.845115], [-73.922661, 40.844632], [-73.925934, 40.844851], [-73.928129, 40.845328], [-73.927095, 40.84671], [-73.926935, 40.846924], [-73.92683, 40.84729], [-73.926415, 40.847766], [-73.924654, 40.849785], [-73.923848, 40.851183], [-73.923948, 40.851222], [-73.922717, 40.852969], [-73.922562, 40.853189], [-73.92174, 40.854221], [-73.9216, 40.854147], [-73.921543, 40.854117], [-73.921342, 40.854317], [-73.92143, 40.854416], [-73.921515, 40.85451], [-73.921009, 40.855127], [-73.920895, 40.855266], [-73.920801, 40.855381], [-73.920372, 40.855173], [-73.9203, 40.855246], [-73.920567, 40.855514], [-73.92055, 40.855618], [-73.920527, 40.855687], [-73.920441, 40.855746], [-73.92035, 40.855785], [-73.920294, 40.855845], [-73.920306, 40.855927], [-73.919566, 40.85684], [-73.919286, 40.85713], [-73.919045, 40.857379], [-73.917592, 40.856812], [-73.917364, 40.856095], [-73.9168, 40.855665], [-73.91679, 40.854873], [-73.916935, 40.854609], [-73.916539, 40.854715], [-73.915, 40.854078], [-73.914675, 40.853943], [-73.914291, 40.853914], [-73.912273, 40.853759], [-73.9112, 40.854822], [-73.910072, 40.854469], [-73.90943, 40.85396], [-73.907333, 40.853816]]]]
    },
    "properties": {
      "neighbourhood": "Morris Heights",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.22414, 40.532292], [-74.22389, 40.531113], [-74.222278, 40.529212], [-74.221916, 40.528899], [-74.2217, 40.528712], [-74.221576, 40.528605], [-74.220868, 40.528333], [-74.22022, 40.528037], [-74.220035, 40.528014], [-74.219821, 40.527986], [-74.21925, 40.527914], [-74.218167, 40.528004], [-74.218295, 40.527715], [-74.221183, 40.526922], [-74.221534, 40.526263], [-74.222128, 40.525814], [-74.222249, 40.525774], [-74.222454, 40.525707], [-74.22288, 40.525567], [-74.22366, 40.525543], [-74.22397, 40.523383], [-74.225043, 40.52054], [-74.219479, 40.522147], [-74.213909, 40.523015], [-74.213546, 40.521235], [-74.212156, 40.516468], [-74.211785, 40.515447], [-74.21044, 40.511751], [-74.210435, 40.511736], [-74.210435, 40.511736], [-74.211813, 40.51103], [-74.213735, 40.51041], [-74.223215, 40.508659], [-74.222903, 40.508936], [-74.226634, 40.517251], [-74.22691, 40.519172], [-74.229299, 40.519984], [-74.231597, 40.520879], [-74.233537, 40.52064], [-74.235112, 40.520917], [-74.23946, 40.521279], [-74.239823, 40.520091], [-74.240733, 40.520569], [-74.241173, 40.52106], [-74.241332, 40.520895], [-74.242932, 40.521227], [-74.242584, 40.522199], [-74.242762, 40.522727], [-74.242614, 40.523081], [-74.242754, 40.52377], [-74.242802, 40.524007], [-74.243358, 40.524819], [-74.243635, 40.524858], [-74.243965, 40.524905], [-74.243425, 40.525723], [-74.243385, 40.525784], [-74.243339, 40.525854], [-74.242829, 40.527419], [-74.242844, 40.527619], [-74.242887, 40.5282], [-74.24261, 40.528381], [-74.242564, 40.528411], [-74.228563, 40.527566], [-74.227853, 40.527631], [-74.227581, 40.527776], [-74.227336, 40.527828], [-74.226939, 40.528117], [-74.225693, 40.529911], [-74.224846, 40.5324], [-74.22414, 40.532292]]]]
    },
    "properties": {
      "neighbourhood": "Pleasant Plains",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.160905, 40.639386], [-74.160737, 40.639351], [-74.161064, 40.638681], [-74.161082, 40.638568], [-74.160892, 40.638541], [-74.160811, 40.638633], [-74.160762, 40.638624], [-74.160751, 40.638518], [-74.160422, 40.638465], [-74.160348, 40.638444], [-74.159949, 40.63994], [-74.159864, 40.639928], [-74.160207, 40.63861], [-74.160225, 40.638339], [-74.160165, 40.638565], [-74.160058, 40.638722], [-74.159958, 40.638744], [-74.159857, 40.638729], [-74.15973, 40.638578], [-74.159641, 40.638414], [-74.159577, 40.637993], [-74.159448, 40.637928], [-74.15932, 40.63781], [-74.159056, 40.638039], [-74.158989, 40.638579], [-74.159025, 40.638584], [-74.15901, 40.638823], [-74.158895, 40.638815], [-74.158933, 40.638264], [-74.158646, 40.638249], [-74.158635, 40.638128], [-74.158153, 40.63811], [-74.158149, 40.637968], [-74.157893, 40.637965], [-74.157841, 40.638874], [-74.157734, 40.638879], [-74.157774, 40.637957], [-74.157188, 40.637951], [-74.157101, 40.639278], [-74.156977, 40.639275], [-74.157071, 40.637947], [-74.156368, 40.637906], [-74.156366, 40.637951], [-74.156103, 40.63794], [-74.156115, 40.637531], [-74.155699, 40.637518], [-74.155685, 40.637787], [-74.155618, 40.63847], [-74.155493, 40.638467], [-74.155553, 40.637784], [-74.155589, 40.637786], [-74.155586, 40.637731], [-74.154829, 40.637724], [-74.154759, 40.639196], [-74.154693, 40.639193], [-74.154693, 40.639194], [-74.154693, 40.639193], [-74.154778, 40.637722], [-74.154597, 40.637343], [-74.154549, 40.637296], [-74.154454, 40.63723], [-74.154383, 40.637194], [-74.154253, 40.637172], [-74.154158, 40.637174], [-74.15403, 40.637182], [-74.153881, 40.637198], [-74.153765, 40.637213], [-74.15363, 40.637249], [-74.153511, 40.637273], [-74.153414, 40.637273], [-74.153276, 40.637267], [-74.153137, 40.637206], [-74.15303, 40.637181], [-74.152921, 40.63714], [-74.152797, 40.637133], [-74.152701, 40.637192], [-74.152696, 40.637266], [-74.152725, 40.637384], [-74.152725, 40.63757], [-74.152697, 40.637642], [-74.152218, 40.637693], [-74.152298, 40.638274], [-74.152137, 40.638291], [-74.152046, 40.637667], [-74.151195, 40.637731], [-74.15134, 40.638934], [-74.151395, 40.639397], [-74.151248, 40.639409], [-74.151188, 40.638944], [-74.15113, 40.638501], [-74.150744, 40.63854], [-74.150556, 40.638559], [-74.150439, 40.638427], [-74.150393, 40.638338], [-74.150309, 40.638281], [-74.150114, 40.638267], [-74.149968, 40.63815], [-74.149794, 40.637893], [-74.149679, 40.637518], [-74.149458, 40.63741], [-74.149378, 40.637412], [-74.149312, 40.637526], [-74.149452, 40.637885], [-74.149419, 40.638292], [-74.149317, 40.63839], [-74.149291, 40.638504], [-74.149282, 40.638571], [-74.149194, 40.638668], [-74.148882, 40.638705], [-74.148558, 40.637438], [-74.148528, 40.637445], [-74.148516, 40.637547], [-74.148778, 40.638876], [-74.147612, 40.639037], [-74.147499, 40.63891], [-74.146022, 40.639095], [-74.146057, 40.639229], [-74.145855, 40.639264], [-74.145193, 40.639378], [-74.144842, 40.639354], [-74.144671, 40.639304], [-74.144176, 40.63905], [-74.143862, 40.638888], [-74.14375, 40.638962], [-74.143842, 40.639088], [-74.143817, 40.639207], [-74.143573, 40.639227], [-74.143361, 40.63971], [-74.143137, 40.639659], [-74.143734, 40.638187], [-74.143563, 40.637957], [-74.144363, 40.635959], [-74.14471, 40.635797], [-74.144801, 40.635581], [-74.145801, 40.632194], [-74.145622, 40.631421], [-74.145916, 40.630968], [-74.145706, 40.627176], [-74.14612, 40.624931], [-74.146127, 40.624931], [-74.152423, 40.625536], [-74.1578, 40.626172], [-74.1605, 40.62653], [-74.163733, 40.626874], [-74.166559, 40.627367], [-74.16627, 40.63365], [-74.171113, 40.633467], [-74.171287, 40.640518], [-74.171193, 40.641741], [-74.171193, 40.64174], [-74.171185, 40.64174], [-74.171034, 40.641746], [-74.170286, 40.641775], [-74.170079, 40.642086], [-74.169941, 40.642054], [-74.169153, 40.641873], [-74.169064, 40.64213], [-74.168402, 40.641991], [-74.168243, 40.641941], [-74.168125, 40.641825], [-74.168017, 40.641838], [-74.167741, 40.641728], [-74.16764, 40.641799], [-74.167576, 40.641845], [-74.16752, 40.641822], [-74.166774, 40.641582], [-74.166717, 40.641479], [-74.166534, 40.641423], [-74.16648, 40.641435], [-74.166216, 40.642424], [-74.1661, 40.642407], [-74.166319, 40.641437], [-74.166116, 40.641371], [-74.166045, 40.641301], [-74.165801, 40.641225], [-74.165634, 40.641214], [-74.165443, 40.642281], [-74.164941, 40.642209], [-74.16519, 40.640642], [-74.164734, 40.640391], [-74.164589, 40.641306], [-74.164571, 40.641419], [-74.164415, 40.641397], [-74.164482, 40.640995], [-74.164597, 40.640316], [-74.164169, 40.639994], [-74.164107, 40.640389], [-74.164002, 40.641066], [-74.163862, 40.641053], [-74.163995, 40.640262], [-74.164047, 40.639947], [-74.16385, 40.639892], [-74.163536, 40.639864], [-74.163454, 40.639857], [-74.163246, 40.640957], [-74.162871, 40.640937], [-74.162858, 40.641028], [-74.162805, 40.641038], [-74.162752, 40.641025], [-74.162646, 40.640967], [-74.16251, 40.64093], [-74.162435, 40.64093], [-74.162069, 40.640788], [-74.162069, 40.640728], [-74.161675, 40.640611], [-74.162285, 40.638766], [-74.161819, 40.638646], [-74.161449, 40.639428], [-74.161302, 40.639394], [-74.16166, 40.638665], [-74.16124, 40.638595], [-74.161158, 40.638694], [-74.160905, 40.639386]]]]
    },
    "properties": {
      "neighbourhood": "Mariners Harbor",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.890157, 40.739192], [-73.887702, 40.734291], [-73.888523, 40.734531], [-73.88806, 40.730087], [-73.88756, 40.730197], [-73.8872, 40.728612], [-73.887018, 40.723738], [-73.885641, 40.722022], [-73.886259, 40.721733], [-73.901158, 40.714622], [-73.900597, 40.712699], [-73.900596, 40.712697], [-73.908903, 40.71306], [-73.92392, 40.714074], [-73.923928, 40.714102], [-73.923684, 40.714083], [-73.924122, 40.715138], [-73.923525, 40.715617], [-73.92233, 40.716077], [-73.920643, 40.715773], [-73.920569, 40.716004], [-73.922238, 40.716382], [-73.922382, 40.716682], [-73.922794, 40.717535], [-73.922801, 40.71754], [-73.923466, 40.71813], [-73.923939, 40.719043], [-73.923836, 40.720148], [-73.924227, 40.720887], [-73.924244, 40.721429], [-73.924524, 40.721662], [-73.924557, 40.721706], [-73.92458, 40.721784], [-73.924665, 40.721856], [-73.924882, 40.721933], [-73.924976, 40.722051], [-73.92511, 40.722231], [-73.925154, 40.72232], [-73.925129, 40.722388], [-73.925029, 40.722539], [-73.924572, 40.723469], [-73.924527, 40.723541], [-73.924484, 40.723572], [-73.924423, 40.72359], [-73.924314, 40.723605], [-73.923468, 40.723639], [-73.922961, 40.723669], [-73.922565, 40.72361], [-73.922464, 40.723609], [-73.922311, 40.72362], [-73.92225, 40.723682], [-73.922195, 40.723704], [-73.922143, 40.723708], [-73.922008, 40.723679], [-73.921865, 40.723644], [-73.921665, 40.723586], [-73.921438, 40.723507], [-73.921354, 40.723469], [-73.921291, 40.723429], [-73.92121, 40.723402], [-73.921076, 40.723378], [-73.920942, 40.723349], [-73.920836, 40.723324], [-73.920799, 40.723314], [-73.920734, 40.72331], [-73.920701, 40.72333], [-73.920682, 40.723354], [-73.920659, 40.723393], [-73.920648, 40.723431], [-73.920633, 40.723463], [-73.920616, 40.723484], [-73.9206, 40.723502], [-73.920584, 40.723519], [-73.920567, 40.72353], [-73.920559, 40.723533], [-73.920543, 40.723533], [-73.920525, 40.723532], [-73.920512, 40.723527], [-73.920507, 40.723527], [-73.920439, 40.723554], [-73.920426, 40.723554], [-73.920397, 40.723605], [-73.920371, 40.723681], [-73.920441, 40.723695], [-73.920508, 40.723713], [-73.92064, 40.723755], [-73.920716, 40.723768], [-73.920816, 40.723775], [-73.920946, 40.72378], [-73.921006, 40.723791], [-73.921069, 40.723807], [-73.921121, 40.723825], [-73.921223, 40.723872], [-73.921381, 40.723907], [-73.921563, 40.723994], [-73.921634, 40.724043], [-73.921686, 40.724061], [-73.921775, 40.724082], [-73.921815, 40.724084], [-73.921861, 40.724082], [-73.921877, 40.724082], [-73.921913, 40.724086], [-73.921946, 40.72411], [-73.922219, 40.724158], [-73.922286, 40.724181], [-73.922356, 40.724169], [-73.922441, 40.724172], [-73.9225, 40.72418], [-73.922563, 40.724193], [-73.922642, 40.724225], [-73.922727, 40.724246], [-73.922783, 40.724246], [-73.922879, 40.724256], [-73.922931, 40.724259], [-73.922963, 40.724261], [-73.923209, 40.724263], [-73.923214, 40.724252], [-73.923463, 40.724249], [-73.923687, 40.724269], [-73.923738, 40.724285], [-73.924127, 40.724293], [-73.924192, 40.724276], [-73.924357, 40.724307], [-73.924557, 40.724359], [-73.924688, 40.724404], [-73.924903, 40.724507], [-73.925137, 40.724634], [-73.925395, 40.7248], [-73.926557, 40.725669], [-73.926711, 40.725842], [-73.927234, 40.726412], [-73.927217, 40.726461], [-73.927853, 40.726999], [-73.92811, 40.727261], [-73.928557, 40.727845], [-73.928538, 40.727882], [-73.928611, 40.72792], [-73.928655, 40.727891], [-73.928801, 40.728025], [-73.928414, 40.728364], [-73.927945, 40.728914], [-73.927697, 40.72917], [-73.927486, 40.729452], [-73.926517, 40.730587], [-73.925922, 40.731537], [-73.925244, 40.732442], [-73.922726, 40.734356], [-73.91898, 40.731729], [-73.91742, 40.731132], [-73.91797, 40.728501], [-73.9121, 40.727609], [-73.911869, 40.729553], [-73.912008, 40.729945], [-73.910689, 40.733471], [-73.90855, 40.73793], [-73.907506, 40.741862], [-73.907506, 40.741862], [-73.900509, 40.741074], [-73.899296, 40.740854], [-73.89866, 40.740773], [-73.891471, 40.739437], [-73.89016, 40.739199], [-73.890157, 40.739192]]]]
    },
    "properties": {
      "neighbourhood": "Maspeth",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.90941, 40.822869], [-73.909785, 40.82252], [-73.911745, 40.822107], [-73.914031, 40.818956], [-73.916764, 40.816557], [-73.917623, 40.816056], [-73.917625, 40.816055], [-73.92538, 40.818066], [-73.925382, 40.818069], [-73.92294, 40.820598], [-73.920704, 40.822227], [-73.92047, 40.822374], [-73.920063, 40.822667], [-73.918991, 40.823306], [-73.916309, 40.824903], [-73.90941, 40.822869]]]]
    },
    "properties": {
      "neighbourhood": "Melrose",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.86501, 40.710777], [-73.86662, 40.710402], [-73.86893, 40.709697], [-73.870155, 40.709222], [-73.872504, 40.708227], [-73.874887, 40.707003], [-73.88091, 40.706405], [-73.885984, 40.706282], [-73.891165, 40.708598], [-73.90031, 40.712686], [-73.900596, 40.712697], [-73.900597, 40.712699], [-73.901158, 40.714622], [-73.886259, 40.721733], [-73.885641, 40.722022], [-73.883048, 40.723021], [-73.880478, 40.724235], [-73.87698, 40.725734], [-73.874196, 40.727161], [-73.871429, 40.729248], [-73.870876, 40.728051], [-73.870091, 40.726053], [-73.869293, 40.724436], [-73.864123, 40.718845], [-73.860035, 40.714975], [-73.859684, 40.714362], [-73.859637, 40.713401], [-73.86501, 40.710777]]]]
    },
    "properties": {
      "neighbourhood": "Middle Village",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.080803, 40.574723], [-74.080803, 40.574723], [-74.083136, 40.572718], [-74.085953, 40.570298], [-74.086913, 40.568986], [-74.086192, 40.568565], [-74.086216, 40.568533], [-74.087251, 40.569082], [-74.088301, 40.568308], [-74.088357, 40.568267], [-74.089249, 40.567016], [-74.089983, 40.56738], [-74.090999, 40.566737], [-74.091064, 40.566657], [-74.091164, 40.566718], [-74.092686, 40.568065], [-74.093873, 40.568409], [-74.104699, 40.57402], [-74.105678, 40.574527], [-74.105646, 40.574559], [-74.10167, 40.578623], [-74.100345, 40.579728], [-74.098909, 40.578977], [-74.095212, 40.577045], [-74.093443, 40.579049], [-74.091492, 40.578007], [-74.091123, 40.578323], [-74.088974, 40.577145], [-74.087152, 40.579358], [-74.085106, 40.578288], [-74.080933, 40.574833], [-74.080803, 40.574723], [-74.080803, 40.574723]]]]
    },
    "properties": {
      "neighbourhood": "Midland Beach",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.907856, 40.615206], [-73.907406, 40.614753], [-73.907302, 40.614809], [-73.906872, 40.614263], [-73.906745, 40.614302], [-73.905444, 40.613015], [-73.905355, 40.613066], [-73.905051, 40.612903], [-73.905095, 40.612863], [-73.904962, 40.612794], [-73.90491, 40.612821], [-73.904241, 40.612362], [-73.904374, 40.612225], [-73.904317, 40.612188], [-73.904288, 40.612156], [-73.90427, 40.6121], [-73.904291, 40.612015], [-73.904208, 40.611955], [-73.904106, 40.612042], [-73.904043, 40.611999], [-73.904068, 40.611978], [-73.904116, 40.612011], [-73.904161, 40.611973], [-73.904099, 40.611928], [-73.904141, 40.611896], [-73.903849, 40.611689], [-73.90351, 40.611406], [-73.903395, 40.61148], [-73.903405, 40.61149], [-73.90331, 40.611547], [-73.903283, 40.61152], [-73.903374, 40.611466], [-73.903376, 40.61147], [-73.903494, 40.611389], [-73.903422, 40.611311], [-73.903339, 40.611271], [-73.903136, 40.610968], [-73.902865, 40.610882], [-73.902745, 40.610931], [-73.902629, 40.61081], [-73.902683, 40.610753], [-73.902391, 40.610482], [-73.902324, 40.610504], [-73.902259, 40.610423], [-73.902214, 40.610343], [-73.902225, 40.610256], [-73.902274, 40.610246], [-73.902205, 40.609553], [-73.902075, 40.609549], [-73.902146, 40.609043], [-73.902103, 40.609038], [-73.901962, 40.60862], [-73.901962, 40.608399], [-73.901991, 40.608379], [-73.902014, 40.608351], [-73.902004, 40.608314], [-73.901997, 40.6083], [-73.901973, 40.608288], [-73.901971, 40.60828], [-73.901947, 40.60806], [-73.901916, 40.60806], [-73.901878, 40.607808], [-73.901914, 40.607807], [-73.901876, 40.607345], [-73.901908, 40.607345], [-73.901897, 40.607233], [-73.901869, 40.607233], [-73.901677, 40.606095], [-73.901712, 40.606097], [-73.901701, 40.605872], [-73.901659, 40.605857], [-73.901642, 40.605763], [-73.901777, 40.605675], [-73.901813, 40.605668], [-73.90185, 40.60571], [-73.901874, 40.605704], [-73.901897, 40.60573], [-73.902727, 40.605524], [-73.905205, 40.604908], [-73.905243, 40.60491], [-73.905288, 40.604935], [-73.905392, 40.605227], [-73.905335, 40.605324], [-73.905424, 40.60554], [-73.905547, 40.605781], [-73.905975, 40.606384], [-73.906234, 40.606354], [-73.907539, 40.606369], [-73.90811, 40.606273], [-73.908188, 40.606354], [-73.908217, 40.606373], [-73.908286, 40.606403], [-73.908374, 40.606397], [-73.908448, 40.606617], [-73.908481, 40.606635], [-73.908615, 40.606661], [-73.908705, 40.606647], [-73.908746, 40.606609], [-73.908829, 40.606565], [-73.908787, 40.606463], [-73.908809, 40.606457], [-73.908772, 40.606384], [-73.908594, 40.606001], [-73.908572, 40.606007], [-73.908511, 40.605884], [-73.908534, 40.605877], [-73.908492, 40.605772], [-73.908467, 40.605779], [-73.908434, 40.605729], [-73.908456, 40.605722], [-73.908442, 40.605693], [-73.908424, 40.605698], [-73.908394, 40.605654], [-73.908419, 40.605646], [-73.908404, 40.605614], [-73.908391, 40.605618], [-73.90836, 40.605561], [-73.908382, 40.605554], [-73.908365, 40.605522], [-73.908364, 40.605511], [-73.908352, 40.605489], [-73.908334, 40.605484], [-73.908307, 40.605492], [-73.908261, 40.605406], [-73.908276, 40.605401], [-73.908258, 40.605367], [-73.908256, 40.605367], [-73.908256, 40.605357], [-73.908241, 40.605323], [-73.908046, 40.605381], [-73.908033, 40.605359], [-73.908404, 40.605243], [-73.908418, 40.605268], [-73.908296, 40.605306], [-73.908312, 40.605338], [-73.90833, 40.605332], [-73.908414, 40.605508], [-73.908388, 40.605516], [-73.908404, 40.605548], [-73.908429, 40.60554], [-73.908468, 40.605633], [-73.908491, 40.605627], [-73.908513, 40.60568], [-73.908493, 40.605684], [-73.908678, 40.60606], [-73.908661, 40.606065], [-73.908684, 40.606109], [-73.908706, 40.606103], [-73.908734, 40.606153], [-73.908717, 40.606158], [-73.908793, 40.606327], [-73.908767, 40.606335], [-73.908777, 40.606359], [-73.908828, 40.606446], [-73.908843, 40.606464], [-73.908867, 40.606471], [-73.908921, 40.606459], [-73.908925, 40.606467], [-73.908871, 40.606483], [-73.908873, 40.60649], [-73.908855, 40.606495], [-73.908886, 40.606537], [-73.909063, 40.606466], [-73.909087, 40.606466], [-73.909133, 40.606484], [-73.909187, 40.606494], [-73.909234, 40.606484], [-73.909273, 40.606453], [-73.909338, 40.606478], [-73.909845, 40.606168], [-73.909809, 40.606081], [-73.909855, 40.606027], [-73.909852, 40.606], [-73.909777, 40.605823], [-73.909609, 40.605658], [-73.909591, 40.605665], [-73.908985, 40.605151], [-73.908945, 40.605049], [-73.908857, 40.60506], [-73.908725, 40.60474], [-73.908743, 40.604729], [-73.908614, 40.604517], [-73.908578, 40.604525], [-73.908544, 40.604446], [-73.908458, 40.604461], [-73.90831, 40.604129], [-73.908325, 40.604073], [-73.908899, 40.603914], [-73.908934, 40.603977], [-73.909125, 40.603927], [-73.909135, 40.603944], [-73.910923, 40.603505], [-73.910996, 40.603518], [-73.913651, 40.603983], [-73.913625, 40.604016], [-73.913778, 40.604206], [-73.913841, 40.604158], [-73.914693, 40.604939], [-73.914978, 40.605204], [-73.914913, 40.605245], [-73.915044, 40.605356], [-73.915096, 40.605324], [-73.916335, 40.606447], [-73.916736, 40.606815], [-73.916604, 40.607089], [-73.916721, 40.607625], [-73.916436, 40.608376], [-73.916388, 40.608503], [-73.916322, 40.608676], [-73.916784, 40.608774], [-73.916571, 40.609424], [-73.916626, 40.609437], [-73.91684, 40.60876], [-73.916487, 40.608699], [-73.916509, 40.60863], [-73.91689, 40.60871], [-73.916855, 40.608761], [-73.916874, 40.608763], [-73.916828, 40.608906], [-73.916999, 40.608937], [-73.917052, 40.608814], [-73.917088, 40.608821], [-73.917028, 40.608975], [-73.91682, 40.608931], [-73.916657, 40.609437], [-73.91681, 40.609467], [-73.9168, 40.609494], [-73.916704, 40.609473], [-73.916681, 40.609551], [-73.916641, 40.609545], [-73.916664, 40.609457], [-73.916566, 40.609438], [-73.916386, 40.610089], [-73.916061, 40.610431], [-73.916165, 40.610516], [-73.915546, 40.610928], [-73.91492, 40.611267], [-73.915, 40.611336], [-73.91489, 40.611393], [-73.914818, 40.611342], [-73.914649, 40.611455], [-73.914495, 40.611653], [-73.914581, 40.611895], [-73.914863, 40.613299], [-73.914763, 40.61337], [-73.914793, 40.613533], [-73.91487, 40.613493], [-73.914934, 40.613958], [-73.913861, 40.614642], [-73.913967, 40.614761], [-73.91408, 40.614888], [-73.914182, 40.614805], [-73.914164, 40.614792], [-73.914184, 40.614779], [-73.914226, 40.614803], [-73.914112, 40.614901], [-73.914222, 40.614932], [-73.914281, 40.614939], [-73.91434, 40.614939], [-73.914397, 40.614919], [-73.914501, 40.614865], [-73.914546, 40.614832], [-73.914604, 40.614773], [-73.914619, 40.614722], [-73.914669, 40.614675], [-73.914778, 40.614677], [-73.916421, 40.613569], [-73.916404, 40.613552], [-73.916146, 40.61373], [-73.915929, 40.613859], [-73.915915, 40.613845], [-73.915956, 40.61382], [-73.915725, 40.613618], [-73.915768, 40.61354], [-73.91575, 40.613617], [-73.915972, 40.613808], [-73.916248, 40.613626], [-73.915928, 40.613364], [-73.915885, 40.613329], [-73.915765, 40.613403], [-73.915746, 40.613385], [-73.915966, 40.613236], [-73.915983, 40.613252], [-73.915889, 40.61331], [-73.915944, 40.613353], [-73.916265, 40.613606], [-73.916387, 40.61353], [-73.916338, 40.613484], [-73.916396, 40.613447], [-73.916208, 40.613183], [-73.915993, 40.612882], [-73.915881, 40.612925], [-73.915871, 40.61291], [-73.916003, 40.61286], [-73.916234, 40.613167], [-73.916418, 40.61345], [-73.916459, 40.613425], [-73.916506, 40.613469], [-73.91647, 40.61349], [-73.916499, 40.613521], [-73.916628, 40.613444], [-73.916411, 40.613052], [-73.915732, 40.611831], [-73.916747, 40.611178], [-73.916692, 40.611128], [-73.916671, 40.611143], [-73.916589, 40.611091], [-73.916621, 40.611075], [-73.916651, 40.611094], [-73.916716, 40.61104], [-73.916673, 40.611006], [-73.916692, 40.610996], [-73.916788, 40.611065], [-73.916781, 40.611074], [-73.916829, 40.611118], [-73.91811, 40.610208], [-73.917732, 40.609783], [-73.917729, 40.609757], [-73.917783, 40.609588], [-73.917866, 40.609327], [-73.917817, 40.609317], [-73.917704, 40.609668], [-73.917679, 40.609663], [-73.917963, 40.608786], [-73.917985, 40.608792], [-73.91782, 40.609304], [-73.917874, 40.609311], [-73.918016, 40.608867], [-73.91803, 40.608847], [-73.918557, 40.608498], [-73.918099, 40.608093], [-73.918005, 40.60815], [-73.918187, 40.608025], [-73.918123, 40.608081], [-73.918574, 40.608488], [-73.918899, 40.608289], [-73.919007, 40.608267], [-73.918249, 40.607589], [-73.918148, 40.607654], [-73.918138, 40.607645], [-73.918362, 40.607501], [-73.91841, 40.607545], [-73.918308, 40.607611], [-73.919023, 40.608257], [-73.919354, 40.608043], [-73.918378, 40.607174], [-73.918272, 40.607243], [-73.918253, 40.607229], [-73.918503, 40.607071], [-73.918517, 40.607085], [-73.918402, 40.607155], [-73.919371, 40.608033], [-73.919423, 40.607999], [-73.919475, 40.607981], [-73.919504, 40.607975], [-73.919505, 40.607922], [-73.919522, 40.607739], [-73.919052, 40.607217], [-73.918877, 40.607113], [-73.918685, 40.606966], [-73.918581, 40.606794], [-73.918583, 40.606772], [-73.917106, 40.605465], [-73.917018, 40.605382], [-73.917125, 40.60531], [-73.915601, 40.603936], [-73.915499, 40.603914], [-73.915416, 40.60395], [-73.914769, 40.60336], [-73.914894, 40.603289], [-73.914428, 40.602864], [-73.913996, 40.602786], [-73.913952, 40.602768], [-73.913894, 40.602704], [-73.91386, 40.602759], [-73.913849, 40.602756], [-73.913801, 40.602873], [-73.913821, 40.602878], [-73.91382, 40.602888], [-73.913687, 40.60285], [-73.913693, 40.602839], [-73.913788, 40.602868], [-73.913835, 40.602756], [-73.913821, 40.602751], [-73.913855, 40.60269], [-73.913829, 40.602668], [-73.913838, 40.602664], [-73.913752, 40.602597], [-73.913735, 40.602608], [-73.913641, 40.602524], [-73.913327, 40.602764], [-73.913489, 40.602899], [-73.913471, 40.602912], [-73.913297, 40.602766], [-73.913638, 40.602502], [-73.913631, 40.602494], [-73.913661, 40.602469], [-73.91365, 40.602457], [-73.913578, 40.602425], [-73.913498, 40.602367], [-73.913384, 40.602447], [-73.913376, 40.602442], [-73.913338, 40.602476], [-73.913352, 40.602487], [-73.913271, 40.602553], [-73.913387, 40.602635], [-73.913199, 40.602785], [-73.913184, 40.602769], [-73.913354, 40.602644], [-73.913356, 40.602636], [-73.913264, 40.602568], [-73.913249, 40.602567], [-73.913017, 40.602754], [-73.913, 40.60274], [-73.913298, 40.602509], [-73.913282, 40.602496], [-73.913319, 40.602461], [-73.913324, 40.602463], [-73.913363, 40.602439], [-73.913357, 40.602431], [-73.913475, 40.602349], [-73.913455, 40.602342], [-73.914281, 40.602257], [-73.919693, 40.607311], [-73.924359, 40.611466], [-73.916903, 40.616274], [-73.917253, 40.619549], [-73.912525, 40.619831], [-73.910245, 40.617783], [-73.909205, 40.616814], [-73.90943, 40.616671], [-73.909454, 40.616686], [-73.909644, 40.616575], [-73.909636, 40.616565], [-73.909597, 40.616393], [-73.909008, 40.615773], [-73.90865, 40.615485], [-73.908575, 40.61544], [-73.908405, 40.615437], [-73.908343, 40.615373], [-73.907856, 40.615206]]]]
    },
    "properties": {
      "neighbourhood": "Mill Basin",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.959647, 40.801156], [-73.966701, 40.804169], [-73.971037, 40.805918], [-73.969331, 40.808107], [-73.968463, 40.809319], [-73.967402, 40.811022], [-73.964325, 40.815513], [-73.963485, 40.816584], [-73.962054, 40.818095], [-73.96179, 40.818025], [-73.961038, 40.818704], [-73.954288, 40.810992], [-73.958181, 40.805565], [-73.958249, 40.803107], [-73.959642, 40.801163], [-73.959647, 40.801156]]]]
    },
    "properties": {
      "neighbourhood": "Morningside Heights",
      "neighbourhood_group": "Manhattan"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.86164, 40.885693], [-73.865223, 40.879204], [-73.86701, 40.876133], [-73.867216, 40.86969], [-73.870555, 40.869703], [-73.870296, 40.875349], [-73.870285, 40.876102], [-73.869398, 40.878113], [-73.870072, 40.8783], [-73.869286, 40.880249], [-73.8662, 40.88714], [-73.86164, 40.885693]]]]
    },
    "properties": {
      "neighbourhood": "Olinville",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.967477, 40.70395], [-73.96721, 40.704256], [-73.9617, 40.699925], [-73.962067, 40.698869], [-73.961899, 40.698188], [-73.965418, 40.697628], [-73.970773, 40.69784], [-73.980544, 40.698246], [-73.98045, 40.700852], [-73.98065, 40.701561], [-73.98022, 40.703063], [-73.97933, 40.704746], [-73.979245, 40.705548], [-73.978964, 40.705502], [-73.978865, 40.705868], [-73.978819, 40.705862], [-73.978928, 40.705496], [-73.978738, 40.705463], [-73.978639, 40.705831], [-73.978602, 40.705823], [-73.978697, 40.705456], [-73.978684, 40.705454], [-73.978645, 40.705591], [-73.978466, 40.705562], [-73.978432, 40.705679], [-73.978457, 40.705685], [-73.978449, 40.705717], [-73.978422, 40.705713], [-73.978389, 40.70583], [-73.978422, 40.705838], [-73.978413, 40.705871], [-73.978381, 40.705866], [-73.978392, 40.705971], [-73.978401, 40.705972], [-73.978399, 40.705983], [-73.978856, 40.70606], [-73.978853, 40.706066], [-73.978392, 40.705989], [-73.978388, 40.706006], [-73.978345, 40.706], [-73.978352, 40.705966], [-73.978374, 40.705968], [-73.978363, 40.705864], [-73.978341, 40.70586], [-73.978347, 40.705825], [-73.978374, 40.70583], [-73.978406, 40.705711], [-73.978386, 40.705705], [-73.978391, 40.705673], [-73.978416, 40.705676], [-73.978454, 40.70556], [-73.978427, 40.705557], [-73.978593, 40.704979], [-73.978532, 40.704877], [-73.978442, 40.704871], [-73.978162, 40.704528], [-73.978177, 40.704468], [-73.978021, 40.704291], [-73.977356, 40.704178], [-73.977339, 40.70423], [-73.977212, 40.704214], [-73.977512, 40.703197], [-73.977361, 40.70314], [-73.977295, 40.703189], [-73.977136, 40.703006], [-73.976239, 40.704776], [-73.975961, 40.704716], [-73.976927, 40.702798], [-73.976641, 40.702497], [-73.976159, 40.702171], [-73.975535, 40.703043], [-73.97533, 40.702952], [-73.975947, 40.702011], [-73.976006, 40.701946], [-73.975896, 40.7019], [-73.975812, 40.701895], [-73.975593, 40.701814], [-73.975611, 40.701797], [-73.975501, 40.701758], [-73.975403, 40.701911], [-73.97455, 40.70159], [-73.975817, 40.699737], [-73.975804, 40.699646], [-73.975735, 40.69957], [-73.975628, 40.699529], [-73.975547, 40.699526], [-73.975469, 40.699543], [-73.975376, 40.699601], [-73.974319, 40.701195], [-73.974115, 40.701305], [-73.973889, 40.701085], [-73.973762, 40.701081], [-73.973544, 40.700892], [-73.973556, 40.700868], [-73.972926, 40.700295], [-73.972654, 40.700131], [-73.972573, 40.700082], [-73.972392, 40.700166], [-73.972621, 40.700466], [-73.973757, 40.701534], [-73.973187, 40.70167], [-73.972884, 40.701417], [-73.972846, 40.701435], [-73.971138, 40.699918], [-73.970979, 40.699856], [-73.970782, 40.699979], [-73.970805, 40.700098], [-73.972542, 40.701636], [-73.972508, 40.701662], [-73.973325, 40.702413], [-73.972835, 40.702729], [-73.969826, 40.700245], [-73.969487, 40.700519], [-73.972839, 40.703346], [-73.972669, 40.703501], [-73.969245, 40.701365], [-73.968935, 40.701616], [-73.968985, 40.701747], [-73.972312, 40.703845], [-73.972158, 40.70397], [-73.971457, 40.703509], [-73.971103, 40.70346], [-73.970933, 40.703625], [-73.97102, 40.703816], [-73.974656, 40.706074], [-73.974391, 40.706326], [-73.973476, 40.705686], [-73.972549, 40.706204], [-73.973299, 40.706698], [-73.97463, 40.707681], [-73.974236, 40.708024], [-73.973106, 40.707136], [-73.972218, 40.706505], [-73.971225, 40.70579], [-73.971097, 40.70585], [-73.971004, 40.706828], [-73.971057, 40.706946], [-73.972758, 40.708831], [-73.97232, 40.709083], [-73.97067, 40.70726], [-73.970541, 40.707316], [-73.970262, 40.706888], [-73.970489, 40.705401], [-73.97017, 40.705362], [-73.970169, 40.705362], [-73.970181, 40.704929], [-73.967888, 40.703514], [-73.967621, 40.703349], [-73.967515, 40.703437], [-73.967477, 40.70395]]]]
    },
    "properties": {
      "neighbourhood": "Navy Yard",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.856007, 40.569549], [-73.857134, 40.569127], [-73.85917, 40.568332], [-73.859612, 40.56816], [-73.860223, 40.567921], [-73.862553, 40.56681], [-73.862659, 40.5668], [-73.863088, 40.567598], [-73.863754, 40.56858], [-73.864963, 40.567895], [-73.865387, 40.568863], [-73.864628, 40.569257], [-73.866785, 40.572368], [-73.866685, 40.57319], [-73.864493, 40.573543], [-73.863615, 40.57383], [-73.8632, 40.574127], [-73.864129, 40.575391], [-73.863572, 40.575686], [-73.861219, 40.576932], [-73.860614, 40.577252], [-73.856007, 40.569549]]]]
    },
    "properties": {
      "neighbourhood": "Neponsit",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.087279, 40.637812], [-74.08813, 40.637626], [-74.088917, 40.636528], [-74.092449, 40.635619], [-74.09339, 40.6366], [-74.09386, 40.638025], [-74.094306, 40.640156], [-74.09475, 40.64077], [-74.09557, 40.643423], [-74.095999, 40.645382], [-74.092988, 40.645973], [-74.093005, 40.646076], [-74.09281, 40.64615], [-74.092628, 40.646219], [-74.091357, 40.646701], [-74.089559, 40.647258], [-74.089554, 40.647221], [-74.0892, 40.647032], [-74.08652, 40.643897], [-74.08652, 40.642564], [-74.087542, 40.638449], [-74.087279, 40.637812]]]]
    },
    "properties": {
      "neighbourhood": "New Brighton",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.114826, 40.579181], [-74.105833, 40.574373], [-74.105678, 40.574527], [-74.104699, 40.57402], [-74.10543, 40.573206], [-74.105795, 40.572541], [-74.106494, 40.572112], [-74.108739, 40.569992], [-74.10976, 40.570468], [-74.1155, 40.564775], [-74.116379, 40.563898], [-74.1249, 40.568949], [-74.124917, 40.568963], [-74.124542, 40.569209], [-74.122689, 40.570561], [-74.122013, 40.571155], [-74.121315, 40.572078], [-74.121423, 40.572946], [-74.121889, 40.574159], [-74.121799, 40.575025], [-74.123048, 40.575669], [-74.123119, 40.575678], [-74.123206, 40.575721], [-74.124064, 40.5758], [-74.124113, 40.575805], [-74.123722, 40.577105], [-74.123818, 40.577833], [-74.123323, 40.578639], [-74.12144, 40.580159], [-74.120996, 40.579526], [-74.118891, 40.580478], [-74.118289, 40.578192], [-74.117587, 40.577581], [-74.117021, 40.578197], [-74.115423, 40.578631], [-74.114826, 40.579181]]]]
    },
    "properties": {
      "neighbourhood": "New Dorp",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.091064, 40.566657], [-74.091117, 40.566592], [-74.092076, 40.565411], [-74.09292, 40.564372], [-74.09405, 40.562982], [-74.094071, 40.562732], [-74.094582, 40.562949], [-74.095111, 40.563173], [-74.095424, 40.563155], [-74.095672, 40.562776], [-74.096118, 40.562588], [-74.096614, 40.562087], [-74.097025, 40.561336], [-74.097523, 40.560727], [-74.097993, 40.559967], [-74.098198, 40.559836], [-74.09829, 40.559333], [-74.098087, 40.559203], [-74.097998, 40.559186], [-74.097832, 40.55912], [-74.097797, 40.559087], [-74.09782, 40.559053], [-74.097848, 40.559034], [-74.097932, 40.559041], [-74.098659, 40.559408], [-74.098801, 40.559396], [-74.099328, 40.559097], [-74.099296, 40.559005], [-74.09938, 40.558964], [-74.099718, 40.559141], [-74.099929, 40.559071], [-74.100337, 40.55908], [-74.105576, 40.56199], [-74.11014, 40.564311], [-74.110821, 40.563421], [-74.11226, 40.561458], [-74.116379, 40.563898], [-74.1155, 40.564775], [-74.10976, 40.570468], [-74.108739, 40.569992], [-74.106494, 40.572112], [-74.105795, 40.572541], [-74.10543, 40.573206], [-74.104699, 40.57402], [-74.093873, 40.568409], [-74.092686, 40.568065], [-74.091164, 40.566718], [-74.091064, 40.566657]]]]
    },
    "properties": {
      "neighbourhood": "New Dorp Beach",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.145845, 40.588507], [-74.146351, 40.586012], [-74.149632, 40.58337], [-74.152528, 40.580617], [-74.169835, 40.570879], [-74.169779, 40.577438], [-74.168872, 40.585419], [-74.170349, 40.585686], [-74.169834, 40.58741], [-74.169001, 40.58725], [-74.168874, 40.587439], [-74.168522, 40.587282], [-74.168257, 40.588083], [-74.1684, 40.58811], [-74.168339, 40.588314], [-74.169285, 40.588496], [-74.169056, 40.589182], [-74.168582, 40.589092], [-74.168428, 40.589585], [-74.168031, 40.589512], [-74.168103, 40.589232], [-74.167747, 40.589174], [-74.165945, 40.590855], [-74.163677, 40.592488], [-74.16344, 40.59298], [-74.1636, 40.593374], [-74.162604, 40.593157], [-74.161999, 40.594342], [-74.1619, 40.595299], [-74.160355, 40.595342], [-74.160174, 40.59617], [-74.159715, 40.596113], [-74.159652, 40.596467], [-74.155246, 40.595479], [-74.145667, 40.589966], [-74.145834, 40.588564], [-74.145845, 40.588507]]]]
    },
    "properties": {
      "neighbourhood": "New Springville",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.992604, 40.724136], [-73.995395, 40.725004], [-73.996772, 40.725432], [-73.992854, 40.730083], [-73.990757, 40.729741], [-73.991285, 40.727762], [-73.992604, 40.724136]]]]
    },
    "properties": {
      "neighbourhood": "NoHo",
      "neighbourhood_group": "Manhattan"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.992604, 40.724136], [-73.994393, 40.719525], [-73.99767, 40.72082], [-73.997124, 40.72229], [-73.996661, 40.723467], [-73.995395, 40.725004], [-73.992604, 40.724136]]]]
    },
    "properties": {
      "neighbourhood": "Nolita",
      "neighbourhood_group": "Manhattan"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.896627, 40.91147], [-73.896409, 40.902961], [-73.896667, 40.902007], [-73.897033, 40.900279], [-73.899059, 40.900911], [-73.901938, 40.90121], [-73.901837, 40.901556], [-73.904113, 40.901819], [-73.90611, 40.90167], [-73.9102, 40.903063], [-73.914008, 40.903849], [-73.91422, 40.904138], [-73.914184, 40.904139], [-73.912865, 40.907535], [-73.912903, 40.907611], [-73.912998, 40.907676], [-73.913076, 40.90774], [-73.913112, 40.90779], [-73.913109, 40.907844], [-73.913078, 40.907879], [-73.91291, 40.907949], [-73.912727, 40.907995], [-73.911579, 40.912136], [-73.911505, 40.91217], [-73.911492, 40.912234], [-73.911536, 40.912302], [-73.911432, 40.912824], [-73.91155, 40.91307], [-73.911655, 40.913418], [-73.9115, 40.913767], [-73.911134, 40.914331], [-73.910959, 40.914529], [-73.910669, 40.914799], [-73.910455, 40.915265], [-73.910333, 40.915533], [-73.908512, 40.915002], [-73.896627, 40.91147]]]]
    },
    "properties": {
      "neighbourhood": "North Riverdale",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.977431, 40.684043], [-73.97105, 40.675237], [-73.971294, 40.674891], [-73.971448, 40.674515], [-73.971533, 40.674132], [-73.971479, 40.673738], [-73.971261, 40.673214], [-73.970923, 40.672787], [-73.970702, 40.672667], [-73.970437, 40.672621], [-73.970475, 40.672351], [-73.97686, 40.664614], [-73.988726, 40.670342], [-73.9839, 40.676148], [-73.980051, 40.68186], [-73.978033, 40.684853], [-73.978026, 40.684864], [-73.977431, 40.684043]]]]
    },
    "properties": {
      "neighbourhood": "Park Slope",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.897958, 40.812968], [-73.895395, 40.811898], [-73.8956, 40.811681], [-73.894869, 40.808905], [-73.89004, 40.809629], [-73.889146, 40.806118], [-73.889242, 40.805937], [-73.889224, 40.805845], [-73.889996, 40.804886], [-73.890151, 40.804958], [-73.889374, 40.805925], [-73.889545, 40.805807], [-73.889753, 40.805875], [-73.889813, 40.805877], [-73.88985, 40.805857], [-73.889899, 40.805785], [-73.889928, 40.805748], [-73.889961, 40.805715], [-73.889991, 40.805704], [-73.890059, 40.805704], [-73.890136, 40.805715], [-73.890233, 40.805737], [-73.890437, 40.805794], [-73.890514, 40.805848], [-73.890582, 40.805868], [-73.891499, 40.805931], [-73.891441, 40.805662], [-73.891786, 40.805623], [-73.891979, 40.806385], [-73.892707, 40.806344], [-73.892532, 40.805657], [-73.892273, 40.805702], [-73.892164, 40.805303], [-73.891813, 40.805187], [-73.89181, 40.805194], [-73.891676, 40.805151], [-73.891687, 40.80513], [-73.891564, 40.805094], [-73.89156, 40.8051], [-73.8915, 40.805082], [-73.891508, 40.80507], [-73.891304, 40.805007], [-73.891299, 40.805016], [-73.891267, 40.80501], [-73.891284, 40.804976], [-73.891314, 40.804985], [-73.891311, 40.80499], [-73.891696, 40.805116], [-73.891732, 40.805049], [-73.891867, 40.80509], [-73.891829, 40.805166], [-73.892198, 40.805285], [-73.8923, 40.805661], [-73.892337, 40.805656], [-73.892335, 40.805649], [-73.892398, 40.805638], [-73.8924, 40.805645], [-73.892567, 40.805621], [-73.892748, 40.80634], [-73.892898, 40.806327], [-73.893047, 40.806315], [-73.893157, 40.806312], [-73.893305, 40.806344], [-73.893377, 40.806298], [-73.893548, 40.806276], [-73.893622, 40.806276], [-73.89372, 40.806254], [-73.893836, 40.806244], [-73.894037, 40.806252], [-73.894104, 40.806269], [-73.894633, 40.806232], [-73.894574, 40.806046], [-73.894726, 40.806026], [-73.894777, 40.806214], [-73.894803, 40.806208], [-73.894854, 40.806215], [-73.89473, 40.805741], [-73.894843, 40.805724], [-73.894969, 40.806231], [-73.895098, 40.806864], [-73.895286, 40.806843], [-73.895373, 40.806704], [-73.895459, 40.806603], [-73.895506, 40.806595], [-73.895486, 40.80652], [-73.895302, 40.805901], [-73.895312, 40.805869], [-73.89528, 40.805766], [-73.895312, 40.805769], [-73.895344, 40.805869], [-73.895405, 40.80596], [-73.895565, 40.806514], [-73.895591, 40.806581], [-73.895723, 40.80656], [-73.89567, 40.80629], [-73.895748, 40.80628], [-73.895832, 40.806455], [-73.895838, 40.806541], [-73.895978, 40.806518], [-73.895942, 40.806391], [-73.895936, 40.806288], [-73.895791, 40.805831], [-73.895875, 40.805809], [-73.896013, 40.806268], [-73.896108, 40.806496], [-73.896224, 40.806477], [-73.896207, 40.806416], [-73.896196, 40.806324], [-73.896196, 40.806241], [-73.89623, 40.80621], [-73.897087, 40.806124], [-73.897151, 40.806093], [-73.897174, 40.806045], [-73.89726, 40.806041], [-73.897313, 40.806082], [-73.897386, 40.806225], [-73.897497, 40.806214], [-73.897476, 40.805999], [-73.897415, 40.8058], [-73.897486, 40.805788], [-73.897547, 40.805994], [-73.897638, 40.806201], [-73.897761, 40.80619], [-73.897728, 40.805967], [-73.897799, 40.805963], [-73.897867, 40.806113], [-73.897874, 40.80618], [-73.898013, 40.806167], [-73.89799, 40.805931], [-73.897871, 40.805535], [-73.897936, 40.80552], [-73.898161, 40.806138], [-73.898295, 40.806098], [-73.898282, 40.806051], [-73.898273, 40.805917], [-73.898263, 40.805891], [-73.898258, 40.805871], [-73.898272, 40.80587], [-73.898275, 40.80586], [-73.898244, 40.805826], [-73.898193, 40.805811], [-73.898117, 40.805756], [-73.89812, 40.805672], [-73.89812, 40.805665], [-73.898122, 40.805658], [-73.898125, 40.805651], [-73.898209, 40.805553], [-73.898246, 40.805539], [-73.898527, 40.805434], [-73.900973, 40.804876], [-73.901803, 40.80479], [-73.90205, 40.804784], [-73.902069, 40.804791], [-73.902078, 40.804797], [-73.902085, 40.804803], [-73.902095, 40.804818], [-73.902098, 40.804835], [-73.90212, 40.80484], [-73.902115, 40.804851], [-73.90214, 40.804884], [-73.90215, 40.804891], [-73.902158, 40.804899], [-73.902164, 40.804909], [-73.902169, 40.804926], [-73.902168, 40.804942], [-73.90218, 40.804954], [-73.902223, 40.804948], [-73.902239, 40.804934], [-73.902238, 40.804924], [-73.90223, 40.804916], [-73.902212, 40.804883], [-73.902192, 40.804823], [-73.902194, 40.804789], [-73.90232, 40.804598], [-73.902303, 40.804588], [-73.90229, 40.804573], [-73.902292, 40.804565], [-73.902445, 40.804417], [-73.902523, 40.804464], [-73.902928, 40.804197], [-73.902878, 40.804158], [-73.902713, 40.804177], [-73.90271, 40.804164], [-73.902895, 40.804144], [-73.90306, 40.804017], [-73.902973, 40.803937], [-73.903003, 40.803917], [-73.903086, 40.803997], [-73.903213, 40.8039], [-73.903256, 40.803928], [-73.903339, 40.803855], [-73.903317, 40.803775], [-73.903339, 40.803774], [-73.903356, 40.803861], [-73.903399, 40.803875], [-73.903733, 40.803773], [-73.90453, 40.80317], [-73.90513, 40.802473], [-73.905522, 40.80202], [-73.906014, 40.801553], [-73.906063, 40.801583], [-73.906204, 40.801493], [-73.906399, 40.801298], [-73.90652, 40.801176], [-73.90639, 40.801091], [-73.906452, 40.801037], [-73.906586, 40.801107], [-73.906814, 40.800891], [-73.906701, 40.80082], [-73.90747, 40.800003], [-73.908074, 40.799573], [-73.907694, 40.799394], [-73.907682, 40.799388], [-73.907695, 40.799393], [-73.908102, 40.79954], [-73.908026, 40.799238], [-73.908422, 40.799442], [-73.90855, 40.799307], [-73.908322, 40.799141], [-73.908256, 40.799093], [-73.908303, 40.798959], [-73.910892, 40.797018], [-73.911098, 40.796888], [-73.911268, 40.796815], [-73.911416, 40.796746], [-73.911494, 40.7967], [-73.911688, 40.796624], [-73.913723, 40.796789], [-73.914015, 40.79691], [-73.916853, 40.798104], [-73.918804, 40.79888], [-73.91909, 40.799015], [-73.920241, 40.799614], [-73.920441, 40.799804], [-73.920781, 40.800275], [-73.921327, 40.801285], [-73.922038, 40.801877], [-73.922927, 40.802373], [-73.923587, 40.802516], [-73.924227, 40.802545], [-73.925969, 40.802448], [-73.926658, 40.80241], [-73.927488, 40.802655], [-73.927628, 40.802696], [-73.927579, 40.80281], [-73.927283, 40.803508], [-73.927638, 40.803977], [-73.927661, 40.804007], [-73.928341, 40.804032], [-73.928367, 40.804033], [-73.928483, 40.804193], [-73.928726, 40.804104], [-73.930374, 40.806392], [-73.930498, 40.806564], [-73.930518, 40.806591], [-73.930541, 40.806614], [-73.93227, 40.80834], [-73.932643, 40.809383], [-73.932594, 40.810054], [-73.932864, 40.810124], [-73.932874, 40.810414], [-73.932565, 40.810886], [-73.932632, 40.811905], [-73.932444, 40.811786], [-73.932239, 40.811657], [-73.929508, 40.809329], [-73.926857, 40.807709], [-73.921615, 40.805799], [-73.916281, 40.803263], [-73.914429, 40.803845], [-73.909127, 40.806166], [-73.90627, 40.807451], [-73.900905, 40.811429], [-73.898448, 40.813177], [-73.897958, 40.812968]]]]
    },
    "properties": {
      "neighbourhood": "Port Morris",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.130935, 40.641068], [-74.131563, 40.640356], [-74.130431, 40.639997], [-74.129523, 40.639181], [-74.12867, 40.637348], [-74.129001, 40.634334], [-74.130166, 40.632371], [-74.13061, 40.63132], [-74.130247, 40.629609], [-74.13131, 40.626328], [-74.13333, 40.626393], [-74.13473, 40.625772], [-74.137227, 40.624296], [-74.138266, 40.624248], [-74.14128, 40.624594], [-74.144025, 40.624992], [-74.14612, 40.624931], [-74.145706, 40.627176], [-74.145916, 40.630968], [-74.145622, 40.631421], [-74.145801, 40.632194], [-74.144801, 40.635581], [-74.14471, 40.635797], [-74.144363, 40.635959], [-74.143563, 40.637957], [-74.143734, 40.638187], [-74.143137, 40.639659], [-74.142937, 40.639632], [-74.14286, 40.639569], [-74.142578, 40.639534], [-74.142388, 40.639641], [-74.14232, 40.639792], [-74.142347, 40.6399], [-74.142386, 40.640055], [-74.142405, 40.640198], [-74.142381, 40.640252], [-74.142298, 40.640306], [-74.142154, 40.640343], [-74.142099, 40.640328], [-74.142054, 40.640297], [-74.141556, 40.640367], [-74.14148, 40.640092], [-74.141286, 40.640145], [-74.141192, 40.640389], [-74.141024, 40.640507], [-74.140763, 40.640589], [-74.139183, 40.640855], [-74.137642, 40.640993], [-74.137438, 40.641055], [-74.137344, 40.641148], [-74.13737, 40.641295], [-74.134513, 40.641855], [-74.134353, 40.641887], [-74.134303, 40.641754], [-74.133497, 40.641717], [-74.133415, 40.641547], [-74.132992, 40.641417], [-74.132403, 40.641704], [-74.131256, 40.641597], [-74.131462, 40.64131], [-74.130935, 40.641068]]]]
    },
    "properties": {
      "neighbourhood": "Port Richmond",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.186298, 40.534095], [-74.18182, 40.528342], [-74.18092, 40.527455], [-74.180311, 40.526089], [-74.179529, 40.524854], [-74.179554, 40.522875], [-74.177952, 40.51959], [-74.178319, 40.519946], [-74.179244, 40.519984], [-74.179391, 40.520278], [-74.17981, 40.520552], [-74.181041, 40.520705], [-74.182129, 40.520409], [-74.182336, 40.520352], [-74.183083, 40.519909], [-74.183148, 40.519871], [-74.18319, 40.519874], [-74.183424, 40.51989], [-74.184831, 40.519341], [-74.186567, 40.518116], [-74.188494, 40.51634], [-74.189269, 40.515345], [-74.188846, 40.515105], [-74.188843, 40.515087], [-74.188858, 40.515082], [-74.189495, 40.515358], [-74.189712, 40.51532], [-74.191789, 40.513052], [-74.193443, 40.511567], [-74.194096, 40.510641], [-74.195213, 40.509978], [-74.196086, 40.509941], [-74.196499, 40.509924], [-74.198608, 40.511197], [-74.199672, 40.511427], [-74.199675, 40.511436], [-74.199744, 40.511675], [-74.19996, 40.512413], [-74.200037, 40.512678], [-74.19973, 40.512705], [-74.199719, 40.512706], [-74.198926, 40.512777], [-74.199361, 40.51301], [-74.200829, 40.513031], [-74.206843, 40.511968], [-74.206907, 40.511957], [-74.207597, 40.511835], [-74.208619, 40.511448], [-74.209446, 40.510944], [-74.209688, 40.510797], [-74.20919, 40.510499], [-74.209322, 40.510399], [-74.209714, 40.510778], [-74.209853, 40.510672], [-74.210155, 40.510364], [-74.210085, 40.51079], [-74.210404, 40.511652], [-74.210435, 40.511736], [-74.21044, 40.511751], [-74.211785, 40.515447], [-74.212156, 40.516468], [-74.213546, 40.521235], [-74.213909, 40.523015], [-74.219479, 40.522147], [-74.225043, 40.52054], [-74.22397, 40.523383], [-74.22366, 40.525543], [-74.22288, 40.525567], [-74.222454, 40.525707], [-74.222249, 40.525774], [-74.222128, 40.525814], [-74.221534, 40.526263], [-74.221183, 40.526922], [-74.218295, 40.527715], [-74.21468, 40.528707], [-74.214678, 40.528597], [-74.21328, 40.528818], [-74.20289, 40.531712], [-74.20302, 40.532206], [-74.19557, 40.534304], [-74.193418, 40.535127], [-74.191744, 40.531917], [-74.189465, 40.533092], [-74.186298, 40.534095]]]]
    },
    "properties": {
      "neighbourhood": "Prince's Bay",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.967477, 40.68175], [-73.964389, 40.681105], [-73.963331, 40.675561], [-73.96277, 40.672651], [-73.962596, 40.67163], [-73.967474, 40.672863], [-73.968889, 40.672961], [-73.968822, 40.673133], [-73.968746, 40.673486], [-73.968709, 40.673938], [-73.96881, 40.674342], [-73.969, 40.674716], [-73.969281, 40.675098], [-73.969697, 40.675399], [-73.970037, 40.675522], [-73.97043, 40.675539], [-73.970776, 40.675445], [-73.97105, 40.675237], [-73.977431, 40.684043], [-73.97593, 40.683505], [-73.97378, 40.683061], [-73.967477, 40.68175]]]]
    },
    "properties": {
      "neighbourhood": "Prospect Heights",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.095999, 40.645382], [-74.09557, 40.643423], [-74.09475, 40.64077], [-74.094306, 40.640156], [-74.09386, 40.638025], [-74.09339, 40.6366], [-74.092449, 40.635619], [-74.09348, 40.634944], [-74.095889, 40.635644], [-74.096454, 40.635334], [-74.097267, 40.633998], [-74.099414, 40.634106], [-74.10253, 40.634663], [-74.114538, 40.634763], [-74.12596, 40.633859], [-74.125474, 40.632637], [-74.123169, 40.629212], [-74.123034, 40.629011], [-74.121257, 40.627823], [-74.122162, 40.627477], [-74.13131, 40.626328], [-74.130247, 40.629609], [-74.13061, 40.63132], [-74.130166, 40.632371], [-74.129001, 40.634334], [-74.12867, 40.637348], [-74.129523, 40.639181], [-74.130431, 40.639997], [-74.131563, 40.640356], [-74.130935, 40.641068], [-74.130184, 40.640724], [-74.129678, 40.641385], [-74.129491, 40.641355], [-74.129977, 40.64073], [-74.129878, 40.640687], [-74.129921, 40.640629], [-74.129307, 40.640337], [-74.12923, 40.640484], [-74.128933, 40.640414], [-74.128995, 40.641189], [-74.128907, 40.641195], [-74.128812, 40.640227], [-74.128132, 40.64025], [-74.128109, 40.64014], [-74.127527, 40.640155], [-74.127396, 40.639975], [-74.127391, 40.63983], [-74.127348, 40.639801], [-74.127245, 40.639767], [-74.127148, 40.639311], [-74.127027, 40.639319], [-74.127099, 40.639627], [-74.127124, 40.639863], [-74.127082, 40.640161], [-74.127054, 40.640242], [-74.126515, 40.640372], [-74.126448, 40.640378], [-74.126346, 40.640376], [-74.126275, 40.640355], [-74.126192, 40.640328], [-74.12607, 40.640254], [-74.1262, 40.641264], [-74.126342, 40.641253], [-74.126368, 40.641332], [-74.12564, 40.641418], [-74.125633, 40.641342], [-74.126133, 40.641264], [-74.125995, 40.640231], [-74.125808, 40.64018], [-74.125698, 40.640156], [-74.125462, 40.640155], [-74.125331, 40.640182], [-74.125084, 40.640211], [-74.124878, 40.64024], [-74.124697, 40.640239], [-74.124156, 40.640135], [-74.123544, 40.640406], [-74.12354, 40.640451], [-74.123548, 40.640491], [-74.123514, 40.640522], [-74.123407, 40.640589], [-74.122856, 40.640821], [-74.12278, 40.640771], [-74.122652, 40.640627], [-74.122604, 40.640597], [-74.122573, 40.640622], [-74.122797, 40.640901], [-74.12288, 40.640956], [-74.122907, 40.641019], [-74.122906, 40.641073], [-74.122857, 40.641138], [-74.122866, 40.641188], [-74.122859, 40.64123], [-74.122824, 40.641295], [-74.122794, 40.641332], [-74.122782, 40.641339], [-74.122721, 40.641348], [-74.122726, 40.641375], [-74.122746, 40.641373], [-74.122762, 40.641427], [-74.122711, 40.641434], [-74.122695, 40.641377], [-74.122703, 40.641377], [-74.122696, 40.641353], [-74.121959, 40.641447], [-74.121941, 40.641442], [-74.121902, 40.641401], [-74.121841, 40.641406], [-74.121844, 40.641465], [-74.121866, 40.641556], [-74.121948, 40.641546], [-74.121943, 40.641506], [-74.121981, 40.641501], [-74.121991, 40.641555], [-74.121872, 40.64157], [-74.121874, 40.641578], [-74.121853, 40.641581], [-74.121846, 40.641549], [-74.121834, 40.641552], [-74.121807, 40.641412], [-74.121758, 40.641423], [-74.121788, 40.641557], [-74.121771, 40.64156], [-74.121779, 40.641593], [-74.121764, 40.641595], [-74.12176, 40.641588], [-74.121559, 40.641622], [-74.121553, 40.641612], [-74.121761, 40.641574], [-74.121724, 40.641429], [-74.121448, 40.641503], [-74.121387, 40.641485], [-74.121326, 40.641607], [-74.121305, 40.641601], [-74.121373, 40.641476], [-74.121312, 40.641453], [-74.121195, 40.641675], [-74.121172, 40.641669], [-74.121281, 40.641432], [-74.121215, 40.641397], [-74.121101, 40.641613], [-74.121077, 40.641607], [-74.12118, 40.641383], [-74.12084, 40.641138], [-74.120713, 40.641046], [-74.119935, 40.641198], [-74.119971, 40.641315], [-74.119607, 40.64138], [-74.119957, 40.642209], [-74.119854, 40.642236], [-74.11953, 40.64147], [-74.119466, 40.641479], [-74.119426, 40.641424], [-74.119097, 40.641473], [-74.119481, 40.642355], [-74.1194, 40.642379], [-74.119003, 40.641465], [-74.118616, 40.64153], [-74.118605, 40.641563], [-74.118688, 40.641798], [-74.118652, 40.641809], [-74.118875, 40.642387], [-74.118899, 40.642384], [-74.118961, 40.642505], [-74.118836, 40.642542], [-74.118645, 40.64204], [-74.118584, 40.641997], [-74.118402, 40.64153], [-74.118155, 40.641594], [-74.118208, 40.64175], [-74.118008, 40.641805], [-74.118156, 40.642131], [-74.118049, 40.642157], [-74.117917, 40.641826], [-74.117855, 40.641838], [-74.117802, 40.641809], [-74.117735, 40.641797], [-74.117628, 40.641622], [-74.117457, 40.641645], [-74.117303, 40.641609], [-74.117288, 40.641594], [-74.117171, 40.641624], [-74.117112, 40.641656], [-74.117507, 40.64242], [-74.117419, 40.642448], [-74.117137, 40.641898], [-74.116722, 40.642032], [-74.117225, 40.643027], [-74.117149, 40.64305], [-74.11674, 40.642282], [-74.116666, 40.642107], [-74.11661, 40.642125], [-74.1166, 40.64211], [-74.1163, 40.642203], [-74.116332, 40.642271], [-74.116305, 40.64228], [-74.116753, 40.643162], [-74.11667, 40.64319], [-74.116246, 40.642347], [-74.116219, 40.642355], [-74.116142, 40.642216], [-74.115719, 40.642352], [-74.116227, 40.643307], [-74.116148, 40.643331], [-74.115648, 40.642375], [-74.115351, 40.642471], [-74.115117, 40.642785], [-74.114807, 40.642977], [-74.114781, 40.642958], [-74.113797, 40.64361], [-74.114041, 40.644043], [-74.113951, 40.644137], [-74.112888, 40.644532], [-74.11283, 40.644462], [-74.113792, 40.644075], [-74.113805, 40.644043], [-74.113852, 40.644041], [-74.11389, 40.64399], [-74.113816, 40.643896], [-74.113767, 40.643891], [-74.11369, 40.643923], [-74.113639, 40.643913], [-74.113545, 40.643954], [-74.11333, 40.643723], [-74.111808, 40.644611], [-74.111903, 40.644706], [-74.111161, 40.645096], [-74.111116, 40.645047], [-74.111766, 40.644706], [-74.111725, 40.644659], [-74.111011, 40.645053], [-74.109739, 40.645464], [-74.108865, 40.645579], [-74.104722, 40.645564], [-74.104646, 40.64563], [-74.104396, 40.64567], [-74.104341, 40.645721], [-74.104124, 40.64574], [-74.104022, 40.645638], [-74.103986, 40.645623], [-74.103915, 40.645614], [-74.103764, 40.645609], [-74.103728, 40.645616], [-74.103699, 40.645637], [-74.10365, 40.645655], [-74.103073, 40.645638], [-74.102317, 40.645543], [-74.101683, 40.645407], [-74.101679, 40.645416], [-74.101665, 40.645415], [-74.101629, 40.645489], [-74.101708, 40.645519], [-74.101699, 40.645536], [-74.101625, 40.64551], [-74.101618, 40.645527], [-74.101578, 40.645514], [-74.101644, 40.645408], [-74.101638, 40.645406], [-74.101643, 40.645397], [-74.100605, 40.645132], [-74.1001, 40.645059], [-74.09952, 40.645054], [-74.098801, 40.645047], [-74.0985, 40.64537], [-74.096046, 40.645373], [-74.095999, 40.645382]]]]
    },
    "properties": {
      "neighbourhood": "Randall Manor",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.901938, 40.90121], [-73.90416, 40.901109], [-73.905733, 40.90045], [-73.907257, 40.899389], [-73.907939, 40.897675], [-73.908054, 40.893639], [-73.908119, 40.88936], [-73.907388, 40.88782], [-73.906899, 40.885999], [-73.907465, 40.884434], [-73.910327, 40.883441], [-73.921063, 40.88621], [-73.920393, 40.887649], [-73.919964, 40.888779], [-73.917822, 40.894422], [-73.917909, 40.894677], [-73.917635, 40.894942], [-73.916942, 40.896645], [-73.915277, 40.901325], [-73.915185, 40.901584], [-73.915432, 40.901813], [-73.915014, 40.903081], [-73.914842, 40.903504], [-73.91459, 40.904119], [-73.914291, 40.904093], [-73.91422, 40.904138], [-73.914008, 40.903849], [-73.9102, 40.903063], [-73.90611, 40.90167], [-73.904113, 40.901819], [-73.901837, 40.901556], [-73.901938, 40.90121]]]]
    },
    "properties": {
      "neighbourhood": "Riverdale",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.08942, 40.620307], [-74.090224, 40.619409], [-74.09105, 40.619718], [-74.0939, 40.620255], [-74.094263, 40.620108], [-74.094624, 40.619654], [-74.097702, 40.618809], [-74.099685, 40.619653], [-74.102549, 40.616853], [-74.103511, 40.616414], [-74.1058, 40.618829], [-74.107722, 40.619677], [-74.110015, 40.620688], [-74.109916, 40.620722], [-74.10682, 40.621794], [-74.104453, 40.622913], [-74.102285, 40.623245], [-74.101802, 40.623147], [-74.10203, 40.623796], [-74.100064, 40.624173], [-74.100844, 40.628444], [-74.099022, 40.628684], [-74.099257, 40.629933], [-74.098177, 40.630007], [-74.098421, 40.631598], [-74.097155, 40.631898], [-74.0889, 40.630292], [-74.088077, 40.631081], [-74.086823, 40.630318], [-74.08851, 40.628913], [-74.08872, 40.625899], [-74.08851, 40.623661], [-74.088526, 40.623353], [-74.088597, 40.622053], [-74.088675, 40.621031], [-74.08942, 40.620307]]]]
    },
    "properties": {
      "neighbourhood": "Silver Lake",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.002856, 40.728347], [-73.997635, 40.725786], [-73.996772, 40.725432], [-73.995395, 40.725004], [-73.996661, 40.723467], [-73.997124, 40.72229], [-73.99767, 40.72082], [-73.999991, 40.717977], [-74.001886, 40.719395], [-74.008302, 40.723977], [-74.01106, 40.725744], [-74.011376, 40.72428], [-74.011965, 40.724332], [-74.011963, 40.724342], [-74.011653, 40.725872], [-74.01166, 40.725873], [-74.011958, 40.725978], [-74.012316, 40.726034], [-74.015163, 40.72632], [-74.015204, 40.726362], [-74.015124, 40.726794], [-74.011542, 40.726447], [-74.011383, 40.728229], [-74.010799, 40.728196], [-74.010659, 40.729832], [-74.009208, 40.729706], [-74.00935, 40.728988], [-74.002856, 40.728347]]]]
    },
    "properties": {
      "neighbourhood": "SoHo",
      "neighbourhood_group": "Manhattan"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.177282, 40.54063], [-74.177231, 40.539844], [-74.177348, 40.539346], [-74.177618, 40.538976], [-74.178731, 40.537905], [-74.18083, 40.535925], [-74.185004, 40.534535], [-74.186298, 40.534095], [-74.189465, 40.533092], [-74.191744, 40.531917], [-74.193418, 40.535127], [-74.19557, 40.534304], [-74.20302, 40.532206], [-74.20289, 40.531712], [-74.21328, 40.528818], [-74.214678, 40.528597], [-74.21468, 40.528707], [-74.218295, 40.527715], [-74.218167, 40.528004], [-74.21925, 40.527914], [-74.219821, 40.527986], [-74.220035, 40.528014], [-74.22022, 40.528037], [-74.220868, 40.528333], [-74.221576, 40.528605], [-74.2217, 40.528712], [-74.221916, 40.528899], [-74.222278, 40.529212], [-74.22389, 40.531113], [-74.22414, 40.532292], [-74.224583, 40.537017], [-74.224397, 40.537318], [-74.223956, 40.540778], [-74.22104, 40.540748], [-74.21579, 40.54131], [-74.212813, 40.541322], [-74.2045, 40.541962], [-74.20024, 40.542847], [-74.197308, 40.543262], [-74.195862, 40.544318], [-74.19153, 40.546908], [-74.19029, 40.547765], [-74.188588, 40.548944], [-74.187573, 40.550147], [-74.188576, 40.550714], [-74.187074, 40.552424], [-74.18781, 40.552821], [-74.188265, 40.553275], [-74.186093, 40.554549], [-74.185657, 40.554096], [-74.185508, 40.55424], [-74.18464, 40.553807], [-74.183181, 40.555201], [-74.18209, 40.551104], [-74.17933, 40.549888], [-74.178814, 40.54966], [-74.17959, 40.548066], [-74.180721, 40.546673], [-74.176498, 40.544487], [-74.177403, 40.542479], [-74.177331, 40.540619], [-74.177282, 40.54063]]]]
    },
    "properties": {
      "neighbourhood": "Woodrow",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.003414, 40.679705], [-73.99896, 40.67218], [-73.99866, 40.671705], [-73.998769, 40.671602], [-73.998926, 40.671415], [-73.999311, 40.670773], [-73.999628, 40.670113], [-73.999911, 40.669499], [-74.000303, 40.668717], [-74.000766, 40.668857], [-74.000782, 40.668862], [-74.001057, 40.668946], [-74.001057, 40.668945], [-74.001415, 40.668359], [-74.002134, 40.668556], [-74.002215, 40.668579], [-74.002251, 40.668514], [-74.002895, 40.667348], [-74.003191, 40.667263], [-74.003695, 40.667428], [-74.00363, 40.667568], [-74.004334, 40.667763], [-74.005102, 40.667976], [-74.00547, 40.667951], [-74.005527, 40.667899], [-74.005864, 40.667994], [-74.005972, 40.667882], [-74.006002, 40.66789], [-74.006255, 40.667338], [-74.006225, 40.667336], [-74.006771, 40.666189], [-74.006831, 40.666209], [-74.006867, 40.666129], [-74.006834, 40.666106], [-74.006824, 40.666078], [-74.006832, 40.66605], [-74.006882, 40.666021], [-74.006932, 40.666025], [-74.006967, 40.666052], [-74.006962, 40.666108], [-74.006922, 40.666131], [-74.006881, 40.666132], [-74.006845, 40.666212], [-74.006896, 40.666223], [-74.006257, 40.667596], [-74.006046, 40.668053], [-74.004754, 40.670721], [-74.004754, 40.670721], [-74.005439, 40.670921], [-74.006616, 40.668623], [-74.006803, 40.668591], [-74.007548, 40.667052], [-74.007797, 40.66716], [-74.007087, 40.668591], [-74.00795, 40.66857], [-74.009854, 40.668524], [-74.011274, 40.665628], [-74.01143, 40.66531], [-74.01154, 40.665086], [-74.012345, 40.664987], [-74.015749, 40.664568], [-74.016903, 40.664847], [-74.017444, 40.665268], [-74.017887, 40.66585], [-74.017887, 40.66585], [-74.018576, 40.670392], [-74.018625, 40.670571], [-74.018763, 40.671076], [-74.019045, 40.671344], [-74.019339, 40.671625], [-74.019339, 40.671625], [-74.019339, 40.671625], [-74.018883, 40.671602], [-74.01751, 40.671035], [-74.016688, 40.665437], [-74.016688, 40.665437], [-74.016575, 40.665039], [-74.016487, 40.664931], [-74.016026, 40.664863], [-74.015938, 40.665467], [-74.015937, 40.665471], [-74.01228, 40.665732], [-74.010877, 40.668602], [-74.01084, 40.668605], [-74.010357, 40.668643], [-74.010338, 40.669078], [-74.01056, 40.669191], [-74.01091, 40.66919], [-74.010873, 40.66971], [-74.011542, 40.669784], [-74.011543, 40.669784], [-74.011543, 40.669785], [-74.011622, 40.670114], [-74.011514, 40.670407], [-74.011625, 40.670581], [-74.014062, 40.669706], [-74.014249, 40.669729], [-74.014242, 40.669808], [-74.011754, 40.670658], [-74.012078, 40.670934], [-74.01262, 40.670842], [-74.012621, 40.670843], [-74.013552, 40.671257], [-74.013598, 40.671227], [-74.01365, 40.671203], [-74.013706, 40.671185], [-74.013763, 40.671174], [-74.013821, 40.671169], [-74.013879, 40.671171], [-74.013936, 40.671179], [-74.013991, 40.671194], [-74.014274, 40.671379], [-74.01508, 40.670686], [-74.0152, 40.670754], [-74.013873, 40.671881], [-74.014233, 40.67213], [-74.015596, 40.67097], [-74.015686, 40.671039], [-74.014287, 40.672241], [-74.014229, 40.672207], [-74.012976, 40.673328], [-74.013364, 40.673592], [-74.015075, 40.672193], [-74.015119, 40.672157], [-74.015926, 40.672661], [-74.016321, 40.672908], [-74.014579, 40.674414], [-74.014964, 40.674678], [-74.016776, 40.673129], [-74.018168, 40.671939], [-74.018801, 40.672251], [-74.017407, 40.673489], [-74.017271, 40.673609], [-74.017752, 40.674048], [-74.017798, 40.674016], [-74.017815, 40.67403], [-74.017893, 40.673965], [-74.01788, 40.673957], [-74.017944, 40.673883], [-74.018011, 40.673913], [-74.017958, 40.673987], [-74.017923, 40.673975], [-74.017836, 40.67404], [-74.017857, 40.674058], [-74.017802, 40.674095], [-74.018115, 40.674343], [-74.018136, 40.674359], [-74.018154, 40.674377], [-74.018166, 40.674397], [-74.018175, 40.674419], [-74.018178, 40.674442], [-74.018176, 40.674464], [-74.018045, 40.674768], [-74.018024, 40.674853], [-74.01803, 40.674924], [-74.018036, 40.674959], [-74.018009, 40.674994], [-74.018017, 40.675009], [-74.017924, 40.675076], [-74.017986, 40.675125], [-74.017834, 40.675258], [-74.01815, 40.675468], [-74.018195, 40.67544], [-74.01823, 40.675462], [-74.018298, 40.675459], [-74.018412, 40.675365], [-74.018325, 40.675304], [-74.01827, 40.675349], [-74.018182, 40.675291], [-74.018393, 40.675108], [-74.018477, 40.675163], [-74.018425, 40.675215], [-74.018519, 40.675274], [-74.018753, 40.675062], [-74.018881, 40.675092], [-74.01888, 40.675123], [-74.018409, 40.675524], [-74.018481, 40.675605], [-74.018503, 40.675842], [-74.018018, 40.67589], [-74.017912, 40.67651], [-74.017976, 40.676517], [-74.01798, 40.676572], [-74.01911, 40.676546], [-74.019123, 40.676617], [-74.019769, 40.676613], [-74.019952, 40.677103], [-74.019083, 40.67714], [-74.019142, 40.677723], [-74.019189, 40.677741], [-74.019219, 40.677777], [-74.019177, 40.677827], [-74.019088, 40.677831], [-74.019065, 40.67785], [-74.019041, 40.677877], [-74.019034, 40.677877], [-74.01843, 40.677908], [-74.018411, 40.678407], [-74.018595, 40.678398], [-74.018625, 40.67837], [-74.01863, 40.67837], [-74.018662, 40.678394], [-74.018954, 40.678381], [-74.018983, 40.678352], [-74.01899, 40.678353], [-74.019021, 40.678377], [-74.019472, 40.678358], [-74.019539, 40.678302], [-74.019662, 40.678386], [-74.019663, 40.678388], [-74.019552, 40.678482], [-74.019429, 40.6784], [-74.019279, 40.678404], [-74.019247, 40.678432], [-74.019242, 40.678432], [-74.019207, 40.678408], [-74.019064, 40.678416], [-74.019033, 40.678443], [-74.019026, 40.678442], [-74.018994, 40.67842], [-74.018851, 40.678423], [-74.018816, 40.678452], [-74.018812, 40.678452], [-74.01878, 40.67843], [-74.018633, 40.678434], [-74.018602, 40.678461], [-74.018595, 40.678461], [-74.018565, 40.67844], [-74.018405, 40.678442], [-74.018418, 40.67855], [-74.018253, 40.678553], [-74.018283, 40.678728], [-74.018322, 40.678722], [-74.018383, 40.678745], [-74.018579, 40.678983], [-74.019214, 40.678963], [-74.01944, 40.678933], [-74.019456, 40.678932], [-74.019473, 40.678934], [-74.019489, 40.678937], [-74.019504, 40.678942], [-74.019518, 40.678949], [-74.01953, 40.678958], [-74.01954, 40.678968], [-74.019548, 40.678979], [-74.019553, 40.678992], [-74.019556, 40.679004], [-74.019556, 40.679017], [-74.019553, 40.679029], [-74.019281, 40.679648], [-74.019068, 40.679761], [-74.018928, 40.679844], [-74.018991, 40.679905], [-74.017725, 40.680662], [-74.017647, 40.680602], [-74.01757, 40.680651], [-74.017469, 40.680615], [-74.015387, 40.681867], [-74.01439, 40.681341], [-74.013883, 40.6808], [-74.0123, 40.679731], [-74.009543, 40.681745], [-74.00756, 40.683737], [-74.00701, 40.683729], [-74.006831, 40.683622], [-74.005675, 40.68293], [-74.004473, 40.68099], [-74.003414, 40.679705]]]]
    },
    "properties": {
      "neighbourhood": "Red Hook",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.859684, 40.714362], [-73.860035, 40.714975], [-73.864123, 40.718845], [-73.869293, 40.724436], [-73.870091, 40.726053], [-73.870876, 40.728051], [-73.871429, 40.729248], [-73.871341, 40.730231], [-73.871344, 40.731837], [-73.870813, 40.732684], [-73.8692, 40.733372], [-73.867915, 40.733943], [-73.86663, 40.734014], [-73.86563, 40.733729], [-73.864427, 40.733905], [-73.864424, 40.733905], [-73.8585, 40.735663], [-73.856492, 40.736273], [-73.856152, 40.735648], [-73.854715, 40.732863], [-73.854207, 40.733043], [-73.85326, 40.731103], [-73.85173, 40.728478], [-73.852008, 40.726866], [-73.852724, 40.726639], [-73.853721, 40.726962], [-73.857268, 40.721504], [-73.856652, 40.719869], [-73.857479, 40.719677], [-73.856448, 40.711338], [-73.859771, 40.711843], [-73.859637, 40.713401], [-73.859684, 40.714362]]]]
    },
    "properties": {
      "neighbourhood": "Rego Park",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.818459, 40.705663], [-73.817769, 40.70548], [-73.81702, 40.704041], [-73.814144, 40.697931], [-73.808704, 40.688579], [-73.807454, 40.686175], [-73.805832, 40.682914], [-73.825781, 40.677207], [-73.830875, 40.678109], [-73.831083, 40.678151], [-73.83754, 40.691364], [-73.845026, 40.689238], [-73.847735, 40.694954], [-73.848928, 40.697471], [-73.849478, 40.698196], [-73.847013, 40.698856], [-73.845021, 40.69935], [-73.842947, 40.700555], [-73.842133, 40.700916], [-73.841549, 40.701074], [-73.838562, 40.703316], [-73.8353, 40.70201], [-73.82576, 40.704428], [-73.824441, 40.704062], [-73.8251, 40.707449], [-73.824065, 40.706944], [-73.822938, 40.706198], [-73.82202, 40.705212], [-73.82063, 40.705842], [-73.82008, 40.705031], [-73.818459, 40.705663]]]]
    },
    "properties": {
      "neighbourhood": "Richmond Hill",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.124113, 40.575805], [-74.124064, 40.5758], [-74.123206, 40.575721], [-74.123119, 40.575678], [-74.123048, 40.575669], [-74.121799, 40.575025], [-74.121889, 40.574159], [-74.121423, 40.572946], [-74.121315, 40.572078], [-74.122013, 40.571155], [-74.122689, 40.570561], [-74.124542, 40.569209], [-74.124917, 40.568963], [-74.127144, 40.567579], [-74.13047, 40.564972], [-74.131371, 40.564788], [-74.131515, 40.564716], [-74.13156, 40.564692], [-74.131826, 40.564382], [-74.131852, 40.564351], [-74.132614, 40.563453], [-74.134768, 40.564514], [-74.134617, 40.565247], [-74.138929, 40.567264], [-74.141304, 40.568378], [-74.140463, 40.569537], [-74.14197, 40.570204], [-74.141883, 40.570465], [-74.141999, 40.570725], [-74.141536, 40.570783], [-74.141883, 40.572233], [-74.133159, 40.573479], [-74.125934, 40.57577], [-74.125651, 40.57586], [-74.124113, 40.575805]]]]
    },
    "properties": {
      "neighbourhood": "Richmondtown",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.900596, 40.712697], [-73.90031, 40.712686], [-73.891165, 40.708598], [-73.892385, 40.707171], [-73.896722, 40.706093], [-73.894388, 40.700784], [-73.900394, 40.69333], [-73.90158, 40.691766], [-73.905822, 40.694114], [-73.904263, 40.695682], [-73.911769, 40.699974], [-73.91169, 40.700054], [-73.910691, 40.701053], [-73.910672, 40.701072], [-73.913078, 40.702422], [-73.91202, 40.703561], [-73.91198, 40.703603], [-73.921676, 40.709471], [-73.92073, 40.710461], [-73.920779, 40.710496], [-73.921326, 40.710859], [-73.921348, 40.710916], [-73.92166, 40.711734], [-73.921792, 40.71208], [-73.922116, 40.712928], [-73.92392, 40.714074], [-73.908903, 40.71306], [-73.900596, 40.712697]]]]
    },
    "properties": {
      "neighbourhood": "Ridgewood",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.00388, 40.581635], [-74.003948, 40.581366], [-74.003937, 40.580598], [-74.002546, 40.573301], [-74.002439, 40.571787], [-74.002487, 40.571738], [-74.002574, 40.571809], [-74.003032, 40.572186], [-74.003645, 40.572263], [-74.003734, 40.572287], [-74.00381, 40.572331], [-74.004402, 40.572798], [-74.004822, 40.57289], [-74.006116, 40.573248], [-74.006669, 40.573394], [-74.008709, 40.57376], [-74.010074, 40.573831], [-74.011157, 40.574167], [-74.012015, 40.574885], [-74.012322, 40.575653], [-74.012405, 40.576062], [-74.01246, 40.576682], [-74.012924, 40.577641], [-74.013022, 40.577804], [-74.013031, 40.57791], [-74.012794, 40.578425], [-74.012684, 40.578667], [-74.01235, 40.579222], [-74.011893, 40.579735], [-74.011329, 40.580184], [-74.010704, 40.580541], [-74.009593, 40.58086], [-74.008727, 40.581344], [-74.00812, 40.581622], [-74.007454, 40.581804], [-74.006047, 40.581984], [-74.005092, 40.581882], [-74.004607, 40.581819], [-74.00388, 40.581635]]]]
    },
    "properties": {
      "neighbourhood": "Sea Gate",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.805279, 40.591682], [-73.80533, 40.59052], [-73.804521, 40.590487], [-73.801246, 40.590868], [-73.800677, 40.586758], [-73.800408, 40.586548], [-73.800451, 40.586008], [-73.796865, 40.586538], [-73.796866, 40.586466], [-73.796871, 40.586384], [-73.796876, 40.586315], [-73.798466, 40.585844], [-73.799492, 40.585814], [-73.800915, 40.585407], [-73.80184, 40.585352], [-73.803302, 40.584886], [-73.803741, 40.585005], [-73.803776, 40.585015], [-73.805623, 40.584511], [-73.806518, 40.584465], [-73.807835, 40.584015], [-73.80887, 40.584024], [-73.809515, 40.583823], [-73.811607, 40.583641], [-73.813065, 40.583513], [-73.813524, 40.583473], [-73.816409, 40.582619], [-73.816902, 40.583431], [-73.81936, 40.587349], [-73.819326, 40.587903], [-73.818837, 40.588251], [-73.817416, 40.588917], [-73.817466, 40.589042], [-73.817638, 40.589286], [-73.817623, 40.589292], [-73.817608, 40.58927], [-73.817502, 40.589313], [-73.817512, 40.58933], [-73.81751, 40.589333], [-73.81742, 40.589359], [-73.817368, 40.589255], [-73.817219, 40.589319], [-73.817207, 40.589339], [-73.817166, 40.589366], [-73.81713, 40.589368], [-73.817003, 40.58934], [-73.816916, 40.589312], [-73.81683, 40.589305], [-73.816742, 40.589319], [-73.816579, 40.589434], [-73.816539, 40.589424], [-73.816473, 40.589432], [-73.816444, 40.589441], [-73.816419, 40.589453], [-73.816397, 40.589473], [-73.81636, 40.589518], [-73.816318, 40.589555], [-73.816297, 40.589565], [-73.815248, 40.589989], [-73.815044, 40.590278], [-73.814969, 40.590372], [-73.814882, 40.590471], [-73.814844, 40.590513], [-73.814748, 40.590588], [-73.814701, 40.590611], [-73.814594, 40.590654], [-73.81455, 40.590666], [-73.814519, 40.590674], [-73.814481, 40.590679], [-73.814448, 40.59068], [-73.814417, 40.590677], [-73.814383, 40.590672], [-73.814351, 40.590662], [-73.814261, 40.590627], [-73.814058, 40.590624], [-73.81341, 40.590918], [-73.813257, 40.591046], [-73.813589, 40.591698], [-73.813554, 40.591709], [-73.813235, 40.591071], [-73.81313, 40.591247], [-73.812815, 40.591284], [-73.812624, 40.591332], [-73.812587, 40.591363], [-73.812546, 40.591381], [-73.812494, 40.591387], [-73.812443, 40.591384], [-73.812389, 40.591369], [-73.812243, 40.591326], [-73.812144, 40.591359], [-73.81201, 40.591451], [-73.811834, 40.591524], [-73.811703, 40.591594], [-73.811573, 40.591686], [-73.811513, 40.591783], [-73.811513, 40.591958], [-73.811535, 40.592089], [-73.811567, 40.592149], [-73.811504, 40.592191], [-73.811532, 40.592259], [-73.811517, 40.592315], [-73.811529, 40.592493], [-73.811574, 40.592829], [-73.811562, 40.59285], [-73.811527, 40.592882], [-73.811494, 40.592901], [-73.81148, 40.592902], [-73.811473, 40.592854], [-73.811479, 40.592742], [-73.811466, 40.592628], [-73.811436, 40.592508], [-73.81143, 40.592255], [-73.811399, 40.592101], [-73.811361, 40.591981], [-73.811326, 40.591746], [-73.811008, 40.591768], [-73.810945, 40.591824], [-73.81088, 40.591997], [-73.810909, 40.592058], [-73.810821, 40.59208], [-73.810825, 40.592088], [-73.810818, 40.59209], [-73.81083, 40.592129], [-73.810838, 40.592129], [-73.81095, 40.592503], [-73.810957, 40.592502], [-73.810954, 40.592489], [-73.811098, 40.592469], [-73.8111, 40.592478], [-73.811107, 40.592476], [-73.811259, 40.592454], [-73.811386, 40.592442], [-73.811387, 40.59246], [-73.81138, 40.592461], [-73.811408, 40.592871], [-73.811377, 40.592872], [-73.811379, 40.592877], [-73.811073, 40.593022], [-73.811061, 40.593007], [-73.811047, 40.593013], [-73.811028, 40.592987], [-73.811096, 40.592958], [-73.8111, 40.59296], [-73.811165, 40.592936], [-73.811173, 40.592943], [-73.811219, 40.592927], [-73.811227, 40.592931], [-73.811374, 40.592861], [-73.811373, 40.592703], [-73.810757, 40.592811], [-73.81075, 40.592792], [-73.811373, 40.592684], [-73.811358, 40.592463], [-73.81124, 40.592472], [-73.811243, 40.592491], [-73.811175, 40.592498], [-73.811178, 40.592502], [-73.810979, 40.592529], [-73.810976, 40.592514], [-73.810953, 40.592517], [-73.810964, 40.592541], [-73.81094, 40.592547], [-73.810836, 40.592216], [-73.810816, 40.592133], [-73.81082, 40.592133], [-73.810805, 40.592092], [-73.810795, 40.592094], [-73.810792, 40.592087], [-73.810202, 40.592226], [-73.810166, 40.592219], [-73.810131, 40.592203], [-73.810078, 40.592205], [-73.809976, 40.592227], [-73.809911, 40.592254], [-73.810062, 40.593078], [-73.809998, 40.593082], [-73.809903, 40.593081], [-73.809778, 40.592399], [-73.809731, 40.592404], [-73.809764, 40.592646], [-73.809803, 40.592649], [-73.809807, 40.59271], [-73.809787, 40.592711], [-73.809786, 40.592693], [-73.809743, 40.592695], [-73.80971, 40.59244], [-73.809634, 40.592495], [-73.809616, 40.592537], [-73.809506, 40.592775], [-73.809503, 40.592876], [-73.809528, 40.593009], [-73.809701, 40.593534], [-73.809617, 40.593576], [-73.809592, 40.593581], [-73.809572, 40.593583], [-73.809558, 40.593583], [-73.809537, 40.593581], [-73.809523, 40.593578], [-73.809512, 40.593573], [-73.809502, 40.593566], [-73.809488, 40.593551], [-73.809476, 40.593532], [-73.809466, 40.593512], [-73.809435, 40.593446], [-73.809422, 40.593428], [-73.809407, 40.593414], [-73.809376, 40.593384], [-73.809354, 40.593368], [-73.809337, 40.593363], [-73.809318, 40.593364], [-73.809306, 40.593367], [-73.809254, 40.593387], [-73.809241, 40.593391], [-73.809229, 40.593393], [-73.809197, 40.593395], [-73.809174, 40.593396], [-73.809154, 40.593394], [-73.809136, 40.59339], [-73.809102, 40.59338], [-73.809071, 40.593369], [-73.807938, 40.592838], [-73.807241, 40.592463], [-73.806928, 40.592305], [-73.806875, 40.592265], [-73.806849, 40.592258], [-73.806818, 40.59226], [-73.806795, 40.592267], [-73.806767, 40.592268], [-73.80673, 40.592269], [-73.806679, 40.592269], [-73.806646, 40.592263], [-73.806062, 40.592029], [-73.806045, 40.592021], [-73.806028, 40.592009], [-73.806006, 40.591992], [-73.805991, 40.59198], [-73.805978, 40.591966], [-73.805967, 40.591952], [-73.805958, 40.591936], [-73.805947, 40.59191], [-73.805938, 40.591883], [-73.805933, 40.591856], [-73.80593, 40.591827], [-73.80593, 40.591807], [-73.805885, 40.591293], [-73.80588, 40.591277], [-73.805871, 40.591261], [-73.805859, 40.591247], [-73.805845, 40.591235], [-73.805796, 40.591127], [-73.805792, 40.591115], [-73.805789, 40.591101], [-73.805787, 40.591086], [-73.805787, 40.591069], [-73.805796, 40.590825], [-73.805792, 40.590789], [-73.805787, 40.590766], [-73.805784, 40.590763], [-73.805779, 40.590759], [-73.805774, 40.590758], [-73.805768, 40.590756], [-73.805761, 40.590755], [-73.805758, 40.590755], [-73.805749, 40.590758], [-73.805746, 40.590756], [-73.805741, 40.590756], [-73.805728, 40.590759], [-73.805721, 40.590762], [-73.805716, 40.590766], [-73.805709, 40.590775], [-73.805704, 40.590787], [-73.805701, 40.5908], [-73.805701, 40.590815], [-73.805828, 40.591735], [-73.80583, 40.59175], [-73.80583, 40.591761], [-73.805828, 40.591773], [-73.805825, 40.591789], [-73.805826, 40.591804], [-73.80583, 40.591839], [-73.80583, 40.591854], [-73.805827, 40.59186], [-73.805822, 40.591865], [-73.805813, 40.591869], [-73.805803, 40.591872], [-73.805789, 40.591874], [-73.805774, 40.591874], [-73.805758, 40.591874], [-73.805741, 40.591872], [-73.805714, 40.591867], [-73.805687, 40.59186], [-73.805659, 40.591851], [-73.805632, 40.59184], [-73.805279, 40.591682]]]]
    },
    "properties": {
      "neighbourhood": "Rockaway Beach",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.9449, 40.769484], [-73.944724, 40.769734], [-73.944725, 40.769786], [-73.944562, 40.769886], [-73.94427, 40.770141], [-73.944004, 40.770294], [-73.943204, 40.770992], [-73.942578, 40.771702], [-73.942127, 40.772035], [-73.94137, 40.772309], [-73.940887, 40.772373], [-73.94057, 40.772615], [-73.940457, 40.772741], [-73.940275, 40.772947], [-73.94018, 40.772959], [-73.940077, 40.772926], [-73.940012, 40.772842], [-73.940086, 40.772722], [-73.940185, 40.772565], [-73.940282, 40.772301], [-73.94028, 40.772079], [-73.940279, 40.77183], [-73.9402, 40.771128], [-73.940214, 40.770996], [-73.940229, 40.770852], [-73.94028, 40.770671], [-73.940355, 40.770497], [-73.940826, 40.769912], [-73.941118, 40.769414], [-73.941219, 40.769334], [-73.941533, 40.769177], [-73.9418, 40.769047], [-73.942855, 40.768303], [-73.94484, 40.765824], [-73.949432, 40.760549], [-73.95037, 40.759816], [-73.95126, 40.75881], [-73.951581, 40.758581], [-73.951915, 40.758225], [-73.952177, 40.757831], [-73.952211, 40.757584], [-73.95234, 40.757393], [-73.952541, 40.757095], [-73.952903, 40.756739], [-73.955073, 40.754799], [-73.955195, 40.754775], [-73.956924, 40.752961], [-73.957915, 40.75211], [-73.958608, 40.751613], [-73.95904, 40.751392], [-73.959028, 40.751297], [-73.959643, 40.750752], [-73.96004, 40.750473], [-73.960392, 40.750256], [-73.960829, 40.749911], [-73.961174, 40.749498], [-73.961425, 40.749401], [-73.961583, 40.749414], [-73.961608, 40.749564], [-73.961551, 40.749774], [-73.96132, 40.750075], [-73.961111, 40.7506], [-73.9608, 40.751025], [-73.960799, 40.751026], [-73.960709, 40.751148], [-73.960546, 40.751308], [-73.960011, 40.751832], [-73.959685, 40.752552], [-73.959501, 40.752956], [-73.959016, 40.753595], [-73.958927, 40.753562], [-73.958477, 40.753937], [-73.958458, 40.753949], [-73.958183, 40.754267], [-73.955348, 40.757538], [-73.955274, 40.757624], [-73.953662, 40.75948], [-73.953323, 40.759746], [-73.953391, 40.759797], [-73.953125, 40.760053], [-73.952978, 40.759962], [-73.952086, 40.760862], [-73.951625, 40.761679], [-73.950937, 40.76257], [-73.949972, 40.763646], [-73.949204, 40.76427], [-73.949086, 40.764264], [-73.947964, 40.765688], [-73.945915, 40.768214], [-73.945851, 40.768248], [-73.945845, 40.768321], [-73.945754, 40.768302], [-73.945704, 40.768328], [-73.945504, 40.768594], [-73.945481, 40.768625], [-73.945627, 40.768693], [-73.945563, 40.768802], [-73.945405, 40.768732], [-73.945382, 40.768763], [-73.945245, 40.768773], [-73.945157, 40.769118], [-73.9449, 40.769484]]]]
    },
    "properties": {
      "neighbourhood": "Roosevelt Island",
      "neighbourhood_group": "Manhattan"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.062815, 40.615671], [-74.07415, 40.610014], [-74.07497, 40.609513], [-74.075769, 40.608742], [-74.07609, 40.608188], [-74.076138, 40.607982], [-74.076254, 40.607743], [-74.076443, 40.606774], [-74.077538, 40.606886], [-74.078339, 40.606877], [-74.079995, 40.606503], [-74.081323, 40.606588], [-74.0813, 40.606619], [-74.081297, 40.606619], [-74.079429, 40.609099], [-74.077557, 40.612137], [-74.0774, 40.612084], [-74.076156, 40.613572], [-74.075784, 40.613826], [-74.075592, 40.614033], [-74.073454, 40.615416], [-74.068656, 40.617517], [-74.066667, 40.619021], [-74.066493, 40.618898], [-74.065961, 40.619359], [-74.06591, 40.619316], [-74.06641, 40.618864], [-74.066199, 40.618722], [-74.065573, 40.619275], [-74.065446, 40.619203], [-74.066682, 40.618067], [-74.066416, 40.617872], [-74.06605, 40.618195], [-74.065699, 40.617956], [-74.065465, 40.618107], [-74.065011, 40.617805], [-74.064962, 40.617772], [-74.064762, 40.617929], [-74.064357, 40.618246], [-74.064262, 40.618175], [-74.064257, 40.618172], [-74.064275, 40.618158], [-74.064333, 40.618112], [-74.065099, 40.617511], [-74.065028, 40.617463], [-74.064437, 40.617062], [-74.064012, 40.617402], [-74.063909, 40.617329], [-74.064327, 40.616989], [-74.064324, 40.616987], [-74.064198, 40.616901], [-74.063911, 40.616868], [-74.063868, 40.616858], [-74.063828, 40.616843], [-74.063792, 40.616823], [-74.063761, 40.616799], [-74.063736, 40.616771], [-74.06373, 40.616728], [-74.063734, 40.616685], [-74.063746, 40.616644], [-74.063767, 40.616604], [-74.06356, 40.616444], [-74.062815, 40.615671]]]]
    },
    "properties": {
      "neighbourhood": "Rosebank",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.72587, 40.683226], [-73.725754, 40.680946], [-73.72563, 40.679588], [-73.726011, 40.678078], [-73.726198, 40.677381], [-73.726543, 40.676487], [-73.727556, 40.674162], [-73.727535, 40.67393], [-73.727834, 40.663976], [-73.727814, 40.663224], [-73.728085, 40.663071], [-73.72833, 40.663041], [-73.726445, 40.659163], [-73.726444, 40.659162], [-73.725927, 40.657731], [-73.725759, 40.656998], [-73.725553, 40.65504], [-73.725056, 40.653508], [-73.725099, 40.652346], [-73.725226, 40.652001], [-73.726498, 40.651664], [-73.730287, 40.650369], [-73.730515, 40.65031], [-73.732082, 40.650064], [-73.735135, 40.649732], [-73.739179, 40.648128], [-73.741437, 40.646889], [-73.741661, 40.642198], [-73.74188, 40.641791], [-73.742051, 40.641474], [-73.741534, 40.640676], [-73.741423, 40.640503], [-73.742274, 40.640123], [-73.741432, 40.639107], [-73.741259, 40.638897], [-73.740269, 40.637148], [-73.739471, 40.635706], [-73.73996, 40.635144], [-73.740014, 40.635346], [-73.740205, 40.635264], [-73.740668, 40.635204], [-73.740664, 40.635183], [-73.740773, 40.635163], [-73.74076, 40.635127], [-73.740744, 40.63513], [-73.740751, 40.635156], [-73.740655, 40.635169], [-73.740656, 40.635183], [-73.740531, 40.635204], [-73.740529, 40.635171], [-73.740442, 40.635183], [-73.74042, 40.635179], [-73.74042, 40.635144], [-73.740437, 40.635142], [-73.74044, 40.635153], [-73.740914, 40.635061], [-73.740974, 40.635048], [-73.740984, 40.635056], [-73.740993, 40.635081], [-73.740989, 40.635101], [-73.740924, 40.635115], [-73.740915, 40.63509], [-73.740899, 40.635093], [-73.74091, 40.635125], [-73.740805, 40.635147], [-73.740795, 40.635118], [-73.740774, 40.635123], [-73.740788, 40.635161], [-73.741021, 40.635163], [-73.741649, 40.635054], [-73.741636, 40.635014], [-73.741696, 40.635002], [-73.741679, 40.634956], [-73.741632, 40.634962], [-73.741631, 40.634947], [-73.741449, 40.634978], [-73.741442, 40.634964], [-73.741709, 40.634926], [-73.74171, 40.634937], [-73.741769, 40.634926], [-73.741773, 40.634942], [-73.741706, 40.634956], [-73.741719, 40.634997], [-73.741769, 40.634989], [-73.74179, 40.635021], [-73.742, 40.634983], [-73.742213, 40.635016], [-73.742312, 40.635044], [-73.742466, 40.635119], [-73.742529, 40.635221], [-73.742552, 40.635292], [-73.742535, 40.635321], [-73.742482, 40.635339], [-73.74244, 40.635371], [-73.742365, 40.635554], [-73.742416, 40.635569], [-73.742391, 40.63563], [-73.742437, 40.635641], [-73.742553, 40.635441], [-73.742585, 40.635453], [-73.742436, 40.635713], [-73.742399, 40.635698], [-73.742427, 40.635655], [-73.742383, 40.635641], [-73.742366, 40.635696], [-73.742313, 40.635688], [-73.742171, 40.635965], [-73.742081, 40.636097], [-73.741943, 40.636262], [-73.741764, 40.636439], [-73.741733, 40.636429], [-73.741457, 40.636687], [-73.741243, 40.636934], [-73.741133, 40.637155], [-73.740965, 40.637305], [-73.741094, 40.637646], [-73.741153, 40.637743], [-73.741306, 40.6379], [-73.741372, 40.637942], [-73.741397, 40.637943], [-73.741413, 40.637937], [-73.741425, 40.637934], [-73.741454, 40.637937], [-73.741485, 40.637945], [-73.74189, 40.638122], [-73.742284, 40.638173], [-73.74273, 40.63827], [-73.743024, 40.638213], [-73.743344, 40.638172], [-73.743739, 40.637969], [-73.743971, 40.63788], [-73.744038, 40.637986], [-73.743902, 40.638225], [-73.743522, 40.638889], [-73.743564, 40.638942], [-73.743647, 40.638989], [-73.743734, 40.639022], [-73.743766, 40.63902], [-73.743787, 40.639006], [-73.743831, 40.63896], [-73.743846, 40.638955], [-73.74403, 40.638653], [-73.743959, 40.638629], [-73.743957, 40.63862], [-73.744036, 40.638441], [-73.744045, 40.638435], [-73.744062, 40.638433], [-73.744091, 40.638435], [-73.744183, 40.638195], [-73.744156, 40.638184], [-73.744221, 40.63802], [-73.744505, 40.637581], [-73.744603, 40.637541], [-73.744731, 40.63738], [-73.744728, 40.637332], [-73.744676, 40.637314], [-73.744687, 40.637296], [-73.744674, 40.637285], [-73.744796, 40.637075], [-73.744796, 40.637075], [-73.744839, 40.637087], [-73.744713, 40.637307], [-73.744734, 40.637313], [-73.74478, 40.637236], [-73.744811, 40.637203], [-73.744865, 40.637176], [-73.744933, 40.637164], [-73.745001, 40.637161], [-73.74503, 40.637165], [-73.745056, 40.637172], [-73.745118, 40.637198], [-73.745137, 40.637202], [-73.745164, 40.637201], [-73.745195, 40.637192], [-73.745226, 40.637164], [-73.745634, 40.636953], [-73.745761, 40.636867], [-73.745867, 40.636805], [-73.745978, 40.636726], [-73.746188, 40.636508], [-73.746264, 40.636442], [-73.746292, 40.636437], [-73.746431, 40.636481], [-73.746495, 40.63651], [-73.746612, 40.636582], [-73.746743, 40.636717], [-73.746791, 40.636778], [-73.746798, 40.636826], [-73.746784, 40.636873], [-73.746652, 40.637033], [-73.74659, 40.637113], [-73.74646, 40.637228], [-73.746454, 40.63726], [-73.74635, 40.637329], [-73.746207, 40.637405], [-73.746195, 40.6374], [-73.746139, 40.637434], [-73.746149, 40.63745], [-73.746036, 40.637522], [-73.745987, 40.637537], [-73.745967, 40.637521], [-73.74572, 40.637652], [-73.745492, 40.637796], [-73.745455, 40.637799], [-73.745271, 40.637916], [-73.745271, 40.637939], [-73.745238, 40.637962], [-73.745245, 40.637986], [-73.745194, 40.638009], [-73.745168, 40.638043], [-73.745159, 40.638077], [-73.745162, 40.638112], [-73.745216, 40.63817], [-73.745247, 40.638237], [-73.745262, 40.638303], [-73.745296, 40.63833], [-73.745328, 40.638372], [-73.74538, 40.638292], [-73.745673, 40.638125], [-73.745511, 40.637944], [-73.745665, 40.637836], [-73.745719, 40.637824], [-73.74602, 40.637644], [-73.746143, 40.637581], [-73.746185, 40.637579], [-73.74644, 40.63743], [-73.746652, 40.637186], [-73.746914, 40.636916], [-73.746928, 40.636907], [-73.746943, 40.6369], [-73.74696, 40.636894], [-73.746977, 40.636892], [-73.746995, 40.636891], [-73.74701, 40.636899], [-73.747023, 40.636909], [-73.747034, 40.63692], [-73.747042, 40.636932], [-73.747048, 40.636946], [-73.747051, 40.636959], [-73.747051, 40.636973], [-73.747051, 40.637014], [-73.747042, 40.637053], [-73.747025, 40.637091], [-73.747, 40.637127], [-73.747068, 40.637137], [-73.747067, 40.637143], [-73.747121, 40.637151], [-73.747136, 40.637058], [-73.747158, 40.637061], [-73.747149, 40.637126], [-73.747154, 40.637126], [-73.747154, 40.637126], [-73.74713, 40.637217], [-73.747104, 40.637211], [-73.747122, 40.637162], [-73.747067, 40.637154], [-73.747065, 40.637161], [-73.746994, 40.637151], [-73.747, 40.637354], [-73.746943, 40.637529], [-73.747049, 40.637545], [-73.747043, 40.637566], [-73.74694, 40.637554], [-73.746919, 40.637581], [-73.746906, 40.637698], [-73.746875, 40.637767], [-73.746777, 40.637846], [-73.746837, 40.637913], [-73.746866, 40.63796], [-73.746872, 40.638011], [-73.746867, 40.638036], [-73.746746, 40.638248], [-73.746694, 40.638278], [-73.746633, 40.638298], [-73.746597, 40.638355], [-73.746541, 40.638697], [-73.7466, 40.638697], [-73.746596, 40.63868], [-73.746643, 40.638662], [-73.746669, 40.638706], [-73.74661, 40.638725], [-73.746603, 40.63871], [-73.74654, 40.638711], [-73.746516, 40.638794], [-73.746509, 40.638914], [-73.746474, 40.639031], [-73.746402, 40.639241], [-73.746371, 40.639426], [-73.746347, 40.63988], [-73.746269, 40.640176], [-73.746171, 40.640397], [-73.746293, 40.640523], [-73.746355, 40.640679], [-73.746365, 40.641244], [-73.746354, 40.641408], [-73.746543, 40.641691], [-73.746886, 40.642415], [-73.747009, 40.642623], [-73.747188, 40.642879], [-73.747292, 40.643187], [-73.747494, 40.643342], [-73.747829, 40.643709], [-73.748074, 40.643939], [-73.748751, 40.644471], [-73.748769, 40.6446], [-73.748699, 40.644791], [-73.748693, 40.644904], [-73.748721, 40.645015], [-73.748747, 40.645068], [-73.748781, 40.645119], [-73.748805, 40.645098], [-73.74887, 40.645142], [-73.74885, 40.645169], [-73.748897, 40.645165], [-73.748959, 40.645169], [-73.749014, 40.645164], [-73.749059, 40.645148], [-73.749096, 40.645123], [-73.749129, 40.645072], [-73.749217, 40.645026], [-73.749287, 40.644952], [-73.74931, 40.64494], [-73.749391, 40.644923], [-73.749453, 40.644931], [-73.749772, 40.645176], [-73.751151, 40.646074], [-73.751666, 40.646423], [-73.751676, 40.64647], [-73.751866, 40.64658], [-73.751967, 40.646598], [-73.752526, 40.646935], [-73.752694, 40.647008], [-73.752779, 40.647045], [-73.752875, 40.6471], [-73.753271, 40.647334], [-73.753404, 40.647162], [-73.753211, 40.647072], [-73.753233, 40.647052], [-73.753542, 40.647196], [-73.753526, 40.647214], [-73.753422, 40.647171], [-73.753292, 40.647343], [-73.753406, 40.647376], [-73.753458, 40.647401], [-73.753543, 40.647467], [-73.753617, 40.647501], [-73.753778, 40.647512], [-73.75389, 40.647543], [-73.754062, 40.647757], [-73.754278, 40.647886], [-73.754391, 40.647888], [-73.754504, 40.647935], [-73.754763, 40.647803], [-73.756284, 40.649938], [-73.745368, 40.6664], [-73.74118, 40.666403], [-73.740804, 40.666844], [-73.7385, 40.669285], [-73.737242, 40.670956], [-73.736249, 40.672631], [-73.736011, 40.67261], [-73.733283, 40.676145], [-73.731874, 40.677569], [-73.730527, 40.679364], [-73.729506, 40.680056], [-73.728102, 40.681766], [-73.727183, 40.683597], [-73.72587, 40.683226]]]]
    },
    "properties": {
      "neighbourhood": "Rosedale",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.19769, 40.558887], [-74.192417, 40.553754], [-74.190568, 40.552002], [-74.189318, 40.551133], [-74.188576, 40.550714], [-74.187573, 40.550147], [-74.188588, 40.548944], [-74.19029, 40.547765], [-74.19153, 40.546908], [-74.195862, 40.544318], [-74.197308, 40.543262], [-74.20024, 40.542847], [-74.2045, 40.541962], [-74.212813, 40.541322], [-74.21579, 40.54131], [-74.22104, 40.540748], [-74.223956, 40.540778], [-74.22188, 40.54628], [-74.220544, 40.548324], [-74.221315, 40.550253], [-74.21777, 40.553245], [-74.21784, 40.554432], [-74.217209, 40.554715], [-74.217537, 40.555073], [-74.217451, 40.555101], [-74.216042, 40.555544], [-74.215115, 40.556042], [-74.214741, 40.556242], [-74.214766, 40.556299], [-74.214993, 40.556795], [-74.214857, 40.556839], [-74.214623, 40.556913], [-74.214227, 40.556557], [-74.214102, 40.556603], [-74.213955, 40.556657], [-74.213765, 40.556397], [-74.213275, 40.556625], [-74.213141, 40.557044], [-74.212643, 40.55729], [-74.212673, 40.557648], [-74.212367, 40.557945], [-74.211822, 40.557247], [-74.211585, 40.557169], [-74.211287, 40.557219], [-74.210457, 40.557575], [-74.207873, 40.558111], [-74.206133, 40.558203], [-74.205696, 40.558516], [-74.20478, 40.558923], [-74.201938, 40.559507], [-74.20089, 40.56001], [-74.199907, 40.560854], [-74.19938, 40.560408], [-74.19769, 40.558887]]]]
    },
    "properties": {
      "neighbourhood": "Rossville",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.826013, 40.834021], [-73.828189, 40.832951], [-73.83361, 40.829582], [-73.834767, 40.829002], [-73.83561, 40.828648], [-73.836943, 40.82815], [-73.837108, 40.828817], [-73.837465, 40.829865], [-73.83811, 40.83201], [-73.838231, 40.833748], [-73.838549, 40.835026], [-73.838657, 40.838366], [-73.838808, 40.840763], [-73.839364, 40.840878], [-73.840065, 40.841687], [-73.839126, 40.842158], [-73.836889, 40.843375], [-73.833001, 40.84354], [-73.830432, 40.843858], [-73.827575, 40.844732], [-73.826113, 40.845339], [-73.82557, 40.842817], [-73.825485, 40.839697], [-73.82577, 40.838127], [-73.825254, 40.836661], [-73.825194, 40.835225], [-73.826124, 40.834214], [-73.826013, 40.834021]]]]
    },
    "properties": {
      "neighbourhood": "Schuylerville",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.932677, 40.594236], [-73.932351, 40.593868], [-73.932001, 40.593288], [-73.931906, 40.593086], [-73.931825, 40.592991], [-73.931759, 40.59283], [-73.931674, 40.592854], [-73.931761, 40.593037], [-73.931711, 40.59305], [-73.931535, 40.592693], [-73.931551, 40.59269], [-73.931625, 40.592828], [-73.931741, 40.592794], [-73.931667, 40.592635], [-73.931616, 40.592602], [-73.931565, 40.592552], [-73.931532, 40.59248], [-73.931489, 40.592301], [-73.931454, 40.592238], [-73.931432, 40.592225], [-73.931437, 40.592167], [-73.931309, 40.592161], [-73.931272, 40.592131], [-73.93114, 40.592009], [-73.931364, 40.591928], [-73.9314, 40.591805], [-73.93101, 40.591931], [-73.931005, 40.591831], [-73.931, 40.591831], [-73.930995, 40.591818], [-73.931057, 40.591808], [-73.93106, 40.591827], [-73.931151, 40.59183], [-73.931154, 40.591855], [-73.931353, 40.591791], [-73.931301, 40.591693], [-73.931393, 40.591654], [-73.931408, 40.591644], [-73.931426, 40.591604], [-73.931237, 40.591654], [-73.931243, 40.591663], [-73.9312, 40.591678], [-73.931193, 40.591671], [-73.931073, 40.591705], [-73.93107, 40.591729], [-73.931048, 40.591726], [-73.931076, 40.591598], [-73.931098, 40.5916], [-73.931077, 40.591689], [-73.931231, 40.591642], [-73.931227, 40.591634], [-73.931285, 40.591361], [-73.931305, 40.59136], [-73.931246, 40.591637], [-73.931423, 40.591589], [-73.931446, 40.59157], [-73.931422, 40.591507], [-73.931493, 40.591481], [-73.931481, 40.591432], [-73.931513, 40.591413], [-73.931543, 40.59135], [-73.931481, 40.591353], [-73.931486, 40.591396], [-73.931467, 40.591399], [-73.931433, 40.591239], [-73.931457, 40.591237], [-73.931476, 40.591342], [-73.931547, 40.591338], [-73.931559, 40.591293], [-73.931553, 40.5912], [-73.931429, 40.591136], [-73.931396, 40.590809], [-73.931416, 40.590609], [-73.931341, 40.590615], [-73.931133, 40.589546], [-73.931213, 40.589531], [-73.931092, 40.589327], [-73.931053, 40.58933], [-73.931012, 40.589312], [-73.930927, 40.589256], [-73.930889, 40.589207], [-73.930705, 40.588942], [-73.930686, 40.588822], [-73.930624, 40.588849], [-73.930569, 40.588778], [-73.930101, 40.588969], [-73.930091, 40.588989], [-73.93007, 40.588954], [-73.930536, 40.588762], [-73.930545, 40.588771], [-73.930586, 40.588751], [-73.930534, 40.58868], [-73.93065, 40.58867], [-73.930635, 40.588624], [-73.930547, 40.588629], [-73.930507, 40.588593], [-73.930437, 40.588514], [-73.9304, 40.588466], [-73.93038, 40.588471], [-73.930383, 40.588477], [-73.929744, 40.588641], [-73.929728, 40.588614], [-73.930365, 40.588443], [-73.930368, 40.588449], [-73.930385, 40.588442], [-73.93036, 40.588404], [-73.930371, 40.588361], [-73.930362, 40.588279], [-73.930337, 40.588258], [-73.930263, 40.58823], [-73.929703, 40.587607], [-73.929722, 40.58756], [-73.930733, 40.587407], [-73.931349, 40.587328], [-73.931366, 40.587169], [-73.931351, 40.587125], [-73.931303, 40.587048], [-73.931278, 40.586893], [-73.931252, 40.58685], [-73.931181, 40.586799], [-73.931045, 40.586814], [-73.931058, 40.586907], [-73.930814, 40.586923], [-73.930806, 40.586896], [-73.929643, 40.587031], [-73.929642, 40.587014], [-73.93082, 40.586876], [-73.930829, 40.586908], [-73.930911, 40.586903], [-73.930913, 40.586888], [-73.930957, 40.586882], [-73.930954, 40.586891], [-73.931017, 40.586886], [-73.931012, 40.58683], [-73.929669, 40.586955], [-73.929616, 40.58698], [-73.929563, 40.587036], [-73.929194, 40.587088], [-73.929089, 40.587095], [-73.928792, 40.587091], [-73.928574, 40.587062], [-73.928432, 40.587001], [-73.928297, 40.586918], [-73.928186, 40.586825], [-73.928143, 40.586782], [-73.928115, 40.586699], [-73.928082, 40.586698], [-73.928063, 40.586569], [-73.928076, 40.58648], [-73.9281, 40.586404], [-73.928105, 40.586362], [-73.92812, 40.586329], [-73.928039, 40.586324], [-73.928044, 40.586294], [-73.928097, 40.586299], [-73.92811, 40.586295], [-73.92815, 40.586178], [-73.928138, 40.586156], [-73.927919, 40.586136], [-73.927925, 40.586094], [-73.928166, 40.586113], [-73.928162, 40.586152], [-73.928173, 40.586173], [-73.928196, 40.586134], [-73.928277, 40.586107], [-73.928157, 40.585865], [-73.928016, 40.585871], [-73.92786, 40.585917], [-73.927743, 40.58605], [-73.927641, 40.586045], [-73.927444, 40.586016], [-73.927405, 40.585992], [-73.927388, 40.586015], [-73.92737, 40.586007], [-73.927337, 40.58604], [-73.927533, 40.586259], [-73.927586, 40.586254], [-73.927596, 40.5864], [-73.927516, 40.586398], [-73.927512, 40.58627], [-73.927281, 40.586044], [-73.927307, 40.586021], [-73.927321, 40.586026], [-73.927351, 40.586001], [-73.927339, 40.585994], [-73.927372, 40.585959], [-73.927359, 40.585921], [-73.92732, 40.585893], [-73.927304, 40.585866], [-73.927213, 40.585812], [-73.927141, 40.585812], [-73.927112, 40.585804], [-73.926763, 40.5856], [-73.926691, 40.585547], [-73.926663, 40.585502], [-73.926663, 40.585467], [-73.92638, 40.585296], [-73.926306, 40.585362], [-73.926602, 40.585529], [-73.926548, 40.585575], [-73.925494, 40.585019], [-73.925529, 40.584978], [-73.926275, 40.585353], [-73.926345, 40.585276], [-73.926162, 40.585166], [-73.926163, 40.585163], [-73.926215, 40.585096], [-73.926426, 40.584818], [-73.92651, 40.584451], [-73.929333, 40.583453], [-73.929448, 40.583412], [-73.929632, 40.583399], [-73.930158, 40.583278], [-73.930672, 40.58316], [-73.930891, 40.58293], [-73.930871, 40.582908], [-73.930741, 40.582759], [-73.93096, 40.582729], [-73.931714, 40.582812], [-73.931725, 40.582877], [-73.931745, 40.582877], [-73.931772, 40.582885], [-73.931797, 40.582897], [-73.931819, 40.582912], [-73.931828, 40.582922], [-73.931835, 40.582933], [-73.931839, 40.582945], [-73.93184, 40.582958], [-73.931839, 40.58297], [-73.931836, 40.582982], [-73.93183, 40.582993], [-73.931821, 40.583004], [-73.931811, 40.583013], [-73.931794, 40.58302], [-73.931786, 40.583028], [-73.931781, 40.583043], [-73.931863, 40.583083], [-73.931943, 40.58311], [-73.931977, 40.583111], [-73.931928, 40.58287], [-73.932377, 40.582919], [-73.932372, 40.582961], [-73.932014, 40.582926], [-73.931989, 40.582944], [-73.932018, 40.583111], [-73.932331, 40.583021], [-73.932513, 40.582938], [-73.932553, 40.582926], [-73.932599, 40.582919], [-73.932645, 40.582918], [-73.932691, 40.582921], [-73.932736, 40.582928], [-73.93292, 40.582939], [-73.93298, 40.582938], [-73.93304, 40.582941], [-73.9331, 40.582951], [-73.933303, 40.583015], [-73.933393, 40.583031], [-73.933491, 40.583059], [-73.93349, 40.582965], [-73.93421, 40.58298], [-73.934208, 40.583094], [-73.93437, 40.58311], [-73.93438, 40.583139], [-73.93456, 40.583165], [-73.934561, 40.58302], [-73.935282, 40.583097], [-73.935276, 40.583243], [-73.935691, 40.583275], [-73.93569, 40.583255], [-73.935724, 40.583254], [-73.935719, 40.583153], [-73.935677, 40.583154], [-73.935674, 40.583019], [-73.935825, 40.583021], [-73.935827, 40.583152], [-73.935761, 40.583156], [-73.935767, 40.583278], [-73.936132, 40.583314], [-73.936152, 40.583313], [-73.93619, 40.583304], [-73.936222, 40.583286], [-73.936245, 40.583261], [-73.936253, 40.583247], [-73.936254, 40.583184], [-73.936274, 40.583181], [-73.93627, 40.583059], [-73.936289, 40.58306], [-73.936287, 40.583001], [-73.936245, 40.583], [-73.936242, 40.582976], [-73.936128, 40.582979], [-73.936129, 40.583011], [-73.936098, 40.583012], [-73.936097, 40.582949], [-73.93624, 40.582947], [-73.93624, 40.582952], [-73.936351, 40.58295], [-73.936352, 40.58295], [-73.936566, 40.582958], [-73.936564, 40.582987], [-73.936351, 40.58298], [-73.936349, 40.583005], [-73.9363, 40.583003], [-73.936304, 40.583019], [-73.936309, 40.58302], [-73.936317, 40.583179], [-73.936539, 40.583164], [-73.936549, 40.583221], [-73.936576, 40.583241], [-73.936974, 40.58323], [-73.936977, 40.583066], [-73.936987, 40.583066], [-73.936988, 40.583016], [-73.936931, 40.583016], [-73.936931, 40.582995], [-73.936633, 40.582991], [-73.936633, 40.582972], [-73.937059, 40.582978], [-73.937053, 40.583085], [-73.937631, 40.583096], [-73.937632, 40.583115], [-73.937054, 40.583104], [-73.937051, 40.583126], [-73.937027, 40.583126], [-73.937031, 40.583017], [-73.937006, 40.583016], [-73.937004, 40.583066], [-73.937014, 40.583066], [-73.937015, 40.583233], [-73.937051, 40.583235], [-73.937077, 40.58333], [-73.937125, 40.583347], [-73.937297, 40.583349], [-73.93732, 40.58334], [-73.937325, 40.583293], [-73.937832, 40.583293], [-73.937887, 40.583344], [-73.938119, 40.58334], [-73.938094, 40.583117], [-73.93824, 40.583117], [-73.938257, 40.58328], [-73.938331, 40.583341], [-73.938553, 40.583338], [-73.938477, 40.583178], [-73.938668, 40.583164], [-73.93866, 40.583142], [-73.938663, 40.583141], [-73.938647, 40.583106], [-73.938622, 40.583103], [-73.938628, 40.583067], [-73.938787, 40.583071], [-73.938783, 40.583095], [-73.938669, 40.583084], [-73.938663, 40.583105], [-73.938678, 40.583138], [-73.938687, 40.583139], [-73.938697, 40.583165], [-73.939296, 40.583167], [-73.939302, 40.583333], [-73.939825, 40.583331], [-73.939829, 40.583171], [-73.939857, 40.583175], [-73.939859, 40.583331], [-73.940577, 40.583328], [-73.940566, 40.583087], [-73.940542, 40.583088], [-73.940542, 40.583094], [-73.940474, 40.583094], [-73.940474, 40.583087], [-73.94011, 40.583093], [-73.940109, 40.583075], [-73.940677, 40.583066], [-73.940677, 40.583086], [-73.940586, 40.583086], [-73.940589, 40.583207], [-73.940629, 40.583205], [-73.940636, 40.583328], [-73.9407, 40.583328], [-73.940697, 40.583302], [-73.940916, 40.583302], [-73.940897, 40.583088], [-73.940739, 40.583091], [-73.940738, 40.583076], [-73.941025, 40.58307], [-73.941026, 40.583085], [-73.940915, 40.583088], [-73.940934, 40.583302], [-73.941157, 40.583299], [-73.941163, 40.583275], [-73.941137, 40.583165], [-73.941131, 40.583163], [-73.941109, 40.583141], [-73.941098, 40.583095], [-73.941145, 40.5831], [-73.941151, 40.583104], [-73.941202, 40.58309], [-73.941206, 40.583099], [-73.941154, 40.583113], [-73.941194, 40.583264], [-73.941209, 40.583299], [-73.941247, 40.583301], [-73.941264, 40.583337], [-73.941441, 40.58334], [-73.941488, 40.583529], [-73.941544, 40.583518], [-73.941574, 40.583608], [-73.942551, 40.583514], [-73.94202, 40.58311], [-73.942149, 40.583107], [-73.942702, 40.583509], [-73.943047, 40.583492], [-73.942563, 40.583127], [-73.942688, 40.583123], [-73.943195, 40.58349], [-73.943545, 40.583471], [-73.943093, 40.583135], [-73.943228, 40.583131], [-73.943692, 40.583468], [-73.944068, 40.583472], [-73.943636, 40.583146], [-73.943765, 40.583145], [-73.944234, 40.58348], [-73.944618, 40.583497], [-73.944175, 40.583158], [-73.944321, 40.583159], [-73.944775, 40.583508], [-73.945175, 40.583521], [-73.944713, 40.583165], [-73.944845, 40.583164], [-73.94535, 40.583529], [-73.94573, 40.583545], [-73.945267, 40.583183], [-73.945376, 40.583182], [-73.945899, 40.583553], [-73.946286, 40.583569], [-73.945799, 40.583195], [-73.945924, 40.583194], [-73.946434, 40.583563], [-73.946789, 40.58355], [-73.946316, 40.583207], [-73.946455, 40.583205], [-73.946918, 40.583546], [-73.947268, 40.583533], [-73.946822, 40.583191], [-73.947014, 40.583188], [-73.947469, 40.583528], [-73.950587, 40.583249], [-73.953493, 40.582988], [-73.953419, 40.582609], [-73.95408, 40.582793], [-73.954143, 40.583105], [-73.956536, 40.582659], [-73.957353, 40.583023], [-73.959007, 40.582838], [-73.96207, 40.584203], [-73.965211, 40.583788], [-73.966614, 40.584575], [-73.964638, 40.593328], [-73.967666, 40.609394], [-73.953652, 40.610948], [-73.944059, 40.61199], [-73.943547, 40.609346], [-73.935032, 40.601734], [-73.934227, 40.60101], [-73.933056, 40.594887], [-73.932827, 40.594804], [-73.932677, 40.594236]]]]
    },
    "properties": {
      "neighbourhood": "Sheepshead Bay",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.085875, 40.59589], [-74.083752, 40.595491], [-74.08241, 40.593207], [-74.08024, 40.590067], [-74.070485, 40.585079], [-74.069416, 40.584651], [-74.06942, 40.584648], [-74.070963, 40.583182], [-74.071448, 40.582434], [-74.071492, 40.582169], [-74.07135, 40.582093], [-74.070595, 40.581691], [-74.070658, 40.581626], [-74.071467, 40.582027], [-74.071643, 40.581941], [-74.071776, 40.581877], [-74.071977, 40.581712], [-74.073723, 40.580369], [-74.074893, 40.579317], [-74.074994, 40.579237], [-74.074929, 40.579171], [-74.074823, 40.579099], [-74.074702, 40.579062], [-74.074661, 40.579054], [-74.074624, 40.579041], [-74.0746, 40.57903], [-74.074589, 40.579024], [-74.074579, 40.579017], [-74.074559, 40.579002], [-74.074504, 40.578945], [-74.07444, 40.578895], [-74.074362, 40.578857], [-74.074311, 40.57884], [-74.074261, 40.57883], [-74.074217, 40.57882], [-74.074176, 40.578805], [-74.07415, 40.578792], [-74.074138, 40.578784], [-74.074104, 40.578757], [-74.074084, 40.578738], [-74.074032, 40.578685], [-74.073939, 40.578631], [-74.073863, 40.578603], [-74.073823, 40.578593], [-74.07376, 40.578582], [-74.073721, 40.578566], [-74.073698, 40.578552], [-74.073676, 40.578536], [-74.073657, 40.578518], [-74.073603, 40.578464], [-74.073563, 40.578434], [-74.073506, 40.578402], [-74.073452, 40.578381], [-74.073408, 40.578425], [-74.073382, 40.578456], [-74.073372, 40.578462], [-74.073361, 40.578465], [-74.073348, 40.578466], [-74.073336, 40.578464], [-74.073331, 40.578462], [-74.07332, 40.578457], [-74.073312, 40.578451], [-74.073306, 40.578442], [-74.073303, 40.578433], [-74.073303, 40.578424], [-74.073305, 40.578419], [-74.073314, 40.578405], [-74.073325, 40.57839], [-74.073348, 40.578363], [-74.07334, 40.578321], [-74.073341, 40.578309], [-74.073345, 40.578297], [-74.073352, 40.578285], [-74.073361, 40.578275], [-74.073373, 40.578267], [-74.07338, 40.578264], [-74.073395, 40.578258], [-74.073426, 40.578254], [-74.073442, 40.57825], [-74.07346, 40.578233], [-74.073497, 40.578199], [-74.073509, 40.578195], [-74.073515, 40.578193], [-74.073527, 40.578193], [-74.07354, 40.578194], [-74.073551, 40.578198], [-74.073557, 40.578201], [-74.073566, 40.578208], [-74.073572, 40.578217], [-74.073575, 40.578226], [-74.073575, 40.578236], [-74.073556, 40.578264], [-74.073534, 40.57829], [-74.073497, 40.578328], [-74.075083, 40.57916], [-74.075798, 40.578309], [-74.075235, 40.577999], [-74.075346, 40.577888], [-74.076016, 40.578245], [-74.076031, 40.578301], [-74.100931, 40.591033], [-74.10098, 40.591832], [-74.10083, 40.592632], [-74.10041, 40.593343], [-74.099796, 40.593871], [-74.09722, 40.595365], [-74.094276, 40.596449], [-74.093364, 40.597033], [-74.090292, 40.596196], [-74.085875, 40.59589]]]]
    },
    "properties": {
      "neighbourhood": "South Beach",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.789418, 40.666322], [-73.789481, 40.665833], [-73.789727, 40.665188], [-73.790099, 40.664316], [-73.800871, 40.665368], [-73.804548, 40.665259], [-73.80614, 40.664913], [-73.80664, 40.664329], [-73.808177, 40.664525], [-73.812103, 40.663083], [-73.814945, 40.662759], [-73.823103, 40.663654], [-73.82427, 40.663577], [-73.82818, 40.664079], [-73.831742, 40.665182], [-73.83264, 40.665184], [-73.832547, 40.665378], [-73.832717, 40.665693], [-73.833216, 40.666092], [-73.83291, 40.666651], [-73.835867, 40.672212], [-73.836175, 40.67315], [-73.836981, 40.674678], [-73.83633, 40.674922], [-73.835896, 40.675754], [-73.83376, 40.675226], [-73.83305, 40.675412], [-73.83208, 40.675261], [-73.83094, 40.67812], [-73.830875, 40.678109], [-73.825781, 40.677207], [-73.805832, 40.682914], [-73.80323, 40.677681], [-73.801216, 40.674344], [-73.790474, 40.673391], [-73.788085, 40.67301], [-73.789307, 40.667181], [-73.789489, 40.666314], [-73.789418, 40.666322]]]]
    },
    "properties": {
      "neighbourhood": "South Ozone Park",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.97686, 40.664614], [-73.976846, 40.664607], [-73.979676, 40.661239], [-73.979853, 40.661265], [-73.980044, 40.661233], [-73.980173, 40.661135], [-73.980235, 40.660998], [-73.980192, 40.66087], [-73.980061, 40.660753], [-73.98091, 40.659775], [-73.983224, 40.660994], [-73.983902, 40.660142], [-73.985077, 40.659021], [-73.987209, 40.6604], [-73.988695, 40.662504], [-73.990763, 40.663963], [-73.993003, 40.665288], [-73.992801, 40.665527], [-73.989229, 40.669747], [-73.988726, 40.670342], [-73.97686, 40.664614]]]]
    },
    "properties": {
      "neighbourhood": "South Slope",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.746189, 40.691272], [-73.750236, 40.685649], [-73.752258, 40.681491], [-73.75485, 40.677929], [-73.755657, 40.676157], [-73.753546, 40.673497], [-73.751974, 40.671179], [-73.750772, 40.669796], [-73.75038, 40.668696], [-73.74787, 40.667025], [-73.746086, 40.6664], [-73.745368, 40.6664], [-73.756284, 40.649938], [-73.767779, 40.656451], [-73.77383, 40.659651], [-73.78074, 40.662447], [-73.785053, 40.663443], [-73.790099, 40.664316], [-73.789727, 40.665188], [-73.789481, 40.665833], [-73.789418, 40.666322], [-73.785118, 40.666784], [-73.783673, 40.66673], [-73.772951, 40.667436], [-73.771137, 40.667446], [-73.76696, 40.667035], [-73.764353, 40.671853], [-73.76383, 40.67364], [-73.763494, 40.676003], [-73.763468, 40.676068], [-73.76289, 40.677502], [-73.761832, 40.679053], [-73.760731, 40.682846], [-73.760424, 40.683376], [-73.761169, 40.686443], [-73.747391, 40.691518], [-73.746189, 40.691272]]]]
    },
    "properties": {
      "neighbourhood": "Springfield Gardens",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.910327, 40.883441], [-73.912556, 40.879242], [-73.914995, 40.877933], [-73.916287, 40.877793], [-73.918009, 40.877119], [-73.918932, 40.876388], [-73.91924, 40.876145], [-73.919784, 40.876421], [-73.919969, 40.876549], [-73.920069, 40.876627], [-73.921659, 40.878187], [-73.921925, 40.878439], [-73.922067, 40.878572], [-73.922488, 40.878707], [-73.922727, 40.878878], [-73.922873, 40.878951], [-73.922951, 40.878955], [-73.923093, 40.878906], [-73.923186, 40.878936], [-73.923304, 40.878908], [-73.923592, 40.878952], [-73.923612, 40.878901], [-73.923597, 40.878899], [-73.923617, 40.878853], [-73.923624, 40.878855], [-73.923637, 40.878815], [-73.923679, 40.878826], [-73.923666, 40.878863], [-73.923678, 40.878866], [-73.923662, 40.878912], [-73.923652, 40.878912], [-73.92363, 40.878964], [-73.923794, 40.878994], [-73.923827, 40.87898], [-73.923902, 40.878977], [-73.923942, 40.878984], [-73.92397, 40.878999], [-73.923987, 40.879015], [-73.924037, 40.879022], [-73.924057, 40.87902], [-73.924065, 40.879007], [-73.92418, 40.879005], [-73.924313, 40.879019], [-73.92449, 40.879047], [-73.924518, 40.879059], [-73.924535, 40.879051], [-73.924538, 40.879021], [-73.924581, 40.879004], [-73.924616, 40.879019], [-73.924656, 40.879015], [-73.924681, 40.878962], [-73.924723, 40.87893], [-73.924779, 40.878905], [-73.924903, 40.878888], [-73.924736, 40.879107], [-73.923983, 40.880092], [-73.923805, 40.880325], [-73.92225, 40.883664], [-73.921063, 40.88621], [-73.910327, 40.883441]]]]
    },
    "properties": {
      "neighbourhood": "Spuyten Duyvil",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.748579, 40.701605], [-73.748643, 40.701587], [-73.748579, 40.701604], [-73.744823, 40.693171], [-73.746189, 40.691272], [-73.747391, 40.691518], [-73.761169, 40.686443], [-73.769637, 40.684329], [-73.76974, 40.683778], [-73.7724, 40.68528], [-73.77662, 40.688364], [-73.78211, 40.695237], [-73.782771, 40.695995], [-73.784466, 40.69739], [-73.778546, 40.699767], [-73.777346, 40.698223], [-73.773958, 40.699831], [-73.775477, 40.702724], [-73.775922, 40.704291], [-73.77582, 40.705376], [-73.77418, 40.705087], [-73.767251, 40.706313], [-73.767344, 40.706636], [-73.76409, 40.70752], [-73.752435, 40.71023], [-73.748579, 40.701605]]]]
    },
    "properties": {
      "neighbourhood": "St. Albans",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.078132, 40.638172], [-74.078088, 40.638083], [-74.077982, 40.637864], [-74.078303, 40.635287], [-74.07936, 40.632225], [-74.08303, 40.628725], [-74.083577, 40.627927], [-74.084154, 40.626267], [-74.084962, 40.624625], [-74.08533, 40.622771], [-74.085899, 40.619909], [-74.086391, 40.619998], [-74.086488, 40.620449], [-74.087071, 40.62008], [-74.087011, 40.620501], [-74.087745, 40.620114], [-74.088028, 40.620243], [-74.087627, 40.619543], [-74.088208, 40.61963], [-74.089385, 40.620287], [-74.08942, 40.620307], [-74.088675, 40.621031], [-74.088597, 40.622053], [-74.088526, 40.623353], [-74.08851, 40.623661], [-74.08872, 40.625899], [-74.08851, 40.628913], [-74.086823, 40.630318], [-74.088077, 40.631081], [-74.0889, 40.630292], [-74.097155, 40.631898], [-74.097267, 40.633998], [-74.096454, 40.635334], [-74.095889, 40.635644], [-74.09348, 40.634944], [-74.092449, 40.635619], [-74.088917, 40.636528], [-74.08813, 40.637626], [-74.087279, 40.637812], [-74.085879, 40.636692], [-74.083734, 40.635737], [-74.082561, 40.636269], [-74.08178, 40.636623], [-74.07879, 40.638269], [-74.078132, 40.638172]]]]
    },
    "properties": {
      "neighbourhood": "Tompkinsville",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.072582, 40.637947], [-74.07684, 40.63775], [-74.078132, 40.638172], [-74.07879, 40.638269], [-74.08178, 40.636623], [-74.082561, 40.636269], [-74.083734, 40.635737], [-74.085879, 40.636692], [-74.087279, 40.637812], [-74.087542, 40.638449], [-74.08652, 40.642564], [-74.08652, 40.643897], [-74.0892, 40.647032], [-74.089554, 40.647221], [-74.089559, 40.647258], [-74.089404, 40.647306], [-74.087674, 40.648235], [-74.086373, 40.648662], [-74.085708, 40.648881], [-74.084844, 40.648891], [-74.082213, 40.64828], [-74.081422, 40.648505], [-74.080728, 40.648275], [-74.07981, 40.648383], [-74.078995, 40.648143], [-74.076507, 40.646969], [-74.075627, 40.646211], [-74.074453, 40.645067], [-74.074078, 40.645084], [-74.073958, 40.645193], [-74.073591, 40.644999], [-74.073499, 40.645083], [-74.073759, 40.645313], [-74.073801, 40.645286], [-74.073829, 40.645312], [-74.073779, 40.645356], [-74.073857, 40.645425], [-74.073338, 40.645783], [-74.073245, 40.645705], [-74.073487, 40.64555], [-74.073418, 40.645488], [-74.07369, 40.645306], [-74.073464, 40.645108], [-74.073333, 40.645034], [-74.073349, 40.645022], [-74.073239, 40.644964], [-74.073057, 40.645145], [-74.073025, 40.645131], [-74.073202, 40.644944], [-74.073012, 40.644839], [-74.073056, 40.644808], [-74.073414, 40.645016], [-74.073426, 40.645001], [-74.073273, 40.644916], [-74.073345, 40.64485], [-74.073122, 40.644715], [-74.072926, 40.644864], [-74.07288, 40.644844], [-74.072799, 40.64491], [-74.072588, 40.644791], [-74.072703, 40.644646], [-74.072692, 40.644637], [-74.072596, 40.644735], [-74.072565, 40.64472], [-74.072612, 40.644675], [-74.072599, 40.644667], [-74.072573, 40.644694], [-74.072526, 40.64467], [-74.072576, 40.644618], [-74.072627, 40.644644], [-74.072617, 40.644651], [-74.072623, 40.644654], [-74.072666, 40.644621], [-74.072554, 40.64456], [-74.072543, 40.644563], [-74.072532, 40.644557], [-74.072586, 40.64453], [-74.072599, 40.644537], [-74.072584, 40.644547], [-74.072725, 40.644621], [-74.07279, 40.644552], [-74.072746, 40.644524], [-74.072783, 40.644492], [-74.072698, 40.644441], [-74.072331, 40.6446], [-74.071707, 40.645023], [-74.071716, 40.645032], [-74.071687, 40.64505], [-74.071658, 40.645034], [-74.071682, 40.645004], [-74.071687, 40.645013], [-74.072309, 40.644578], [-74.072256, 40.644546], [-74.072161, 40.644582], [-74.072018, 40.644412], [-74.072113, 40.644364], [-74.072098, 40.644338], [-74.072292, 40.644266], [-74.072185, 40.64411], [-74.071977, 40.644181], [-74.071962, 40.64417], [-74.071861, 40.644202], [-74.071756, 40.644012], [-74.07187, 40.643975], [-74.071863, 40.643958], [-74.071938, 40.643927], [-74.071948, 40.643936], [-74.072058, 40.6439], [-74.072001, 40.643781], [-74.071793, 40.643816], [-74.071771, 40.643772], [-74.07165, 40.643787], [-74.071589, 40.643591], [-74.071628, 40.643578], [-74.071597, 40.64346], [-74.071356, 40.643497], [-74.071341, 40.643456], [-74.071491, 40.643429], [-74.071473, 40.64336], [-74.071502, 40.643355], [-74.071482, 40.643293], [-74.071253, 40.643331], [-74.071258, 40.643344], [-74.070983, 40.643389], [-74.070972, 40.643364], [-74.070951, 40.643366], [-74.070938, 40.643346], [-74.070968, 40.643334], [-74.070959, 40.64331], [-74.071258, 40.643259], [-74.071273, 40.643296], [-74.071443, 40.643271], [-74.071417, 40.643193], [-74.071305, 40.643212], [-74.071308, 40.643221], [-74.071143, 40.643251], [-74.071131, 40.643205], [-74.071503, 40.643129], [-74.071478, 40.642808], [-74.071645, 40.6428], [-74.071649, 40.64268], [-74.071703, 40.64268], [-74.071704, 40.642796], [-74.072184, 40.642714], [-74.07211, 40.642463], [-74.070374, 40.642691], [-74.070329, 40.642526], [-74.073238, 40.642185], [-74.073144, 40.641853], [-74.070247, 40.642207], [-74.070194, 40.642008], [-74.073087, 40.641637], [-74.07289, 40.640923], [-74.071963, 40.640996], [-74.071982, 40.641012], [-74.071805, 40.641029], [-74.071811, 40.641123], [-74.070018, 40.641278], [-74.069984, 40.641069], [-74.071776, 40.640926], [-74.071777, 40.64092], [-74.071778, 40.640915], [-74.071781, 40.64091], [-74.071784, 40.640905], [-74.071789, 40.6409], [-74.071794, 40.640897], [-74.071801, 40.640894], [-74.071808, 40.640892], [-74.071815, 40.64089], [-74.071822, 40.64089], [-74.071829, 40.640891], [-74.071836, 40.640892], [-74.071836, 40.640902], [-74.07285, 40.640804], [-74.072807, 40.640643], [-74.072777, 40.640529], [-74.073077, 40.640513], [-74.07309, 40.638619], [-74.073033, 40.638591], [-74.072929, 40.638593], [-74.072926, 40.638441], [-74.073016, 40.638427], [-74.073014, 40.638409], [-74.072932, 40.638414], [-74.072923, 40.638376], [-74.072793, 40.638386], [-74.072721, 40.638386], [-74.07267, 40.638376], [-74.072613, 40.638336], [-74.072588, 40.638302], [-74.072582, 40.638259], [-74.072609, 40.638227], [-74.072389, 40.638245], [-74.072379, 40.638163], [-74.072606, 40.638136], [-74.072582, 40.637947]]]]
    },
    "properties": {
      "neighbourhood": "St. George",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.072582, 40.637947], [-74.072573, 40.637872], [-74.073484, 40.637787], [-74.073456, 40.637654], [-74.073534, 40.637642], [-74.073487, 40.637234], [-74.07054, 40.637471], [-74.070494, 40.637162], [-74.070527, 40.637132], [-74.073416, 40.636894], [-74.073373, 40.636611], [-74.07324, 40.636619], [-74.073239, 40.636633], [-74.07251, 40.636693], [-74.072504, 40.636677], [-74.072396, 40.636684], [-74.072396, 40.636698], [-74.072104, 40.636725], [-74.072095, 40.636647], [-74.072411, 40.636617], [-74.072411, 40.636629], [-74.072507, 40.636626], [-74.072504, 40.63661], [-74.072823, 40.63658], [-74.072829, 40.636599], [-74.072901, 40.636589], [-74.072901, 40.636573], [-74.073223, 40.636546], [-74.073231, 40.636566], [-74.073316, 40.636559], [-74.073358, 40.636536], [-74.073116, 40.635216], [-74.072832, 40.633666], [-74.073328, 40.632058], [-74.072985, 40.630309], [-74.068022, 40.628788], [-74.06813, 40.628539], [-74.072912, 40.629996], [-74.072838, 40.629659], [-74.072292, 40.627152], [-74.072784, 40.627049], [-74.072766, 40.626968], [-74.074152, 40.626816], [-74.073976, 40.626114], [-74.07524, 40.626006], [-74.075031, 40.625603], [-74.077413, 40.625288], [-74.08533, 40.622771], [-74.084962, 40.624625], [-74.084154, 40.626267], [-74.083577, 40.627927], [-74.08303, 40.628725], [-74.07936, 40.632225], [-74.078303, 40.635287], [-74.077982, 40.637864], [-74.078088, 40.638083], [-74.078132, 40.638172], [-74.07684, 40.63775], [-74.072582, 40.637947]]]]
    },
    "properties": {
      "neighbourhood": "Stapleton",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.974378, 40.735081], [-73.974378, 40.735081], [-73.973959, 40.733421], [-73.973943, 40.733403], [-73.973907, 40.73335], [-73.973866, 40.733311], [-73.973845, 40.733265], [-73.973865, 40.733246], [-73.973857, 40.733216], [-73.973841, 40.73322], [-73.973849, 40.733233], [-73.973831, 40.733246], [-73.97381, 40.733249], [-73.973784, 40.733227], [-73.973803, 40.733212], [-73.973784, 40.7332], [-73.973765, 40.733213], [-73.973727, 40.73322], [-73.97369, 40.733219], [-73.973676, 40.733206], [-73.973692, 40.733174], [-73.973737, 40.733143], [-73.973819, 40.733099], [-73.973872, 40.733095], [-73.973868, 40.733066], [-73.973659, 40.732245], [-73.973515, 40.73168], [-73.973431, 40.731351], [-73.973413, 40.731282], [-73.971963, 40.73], [-73.971956, 40.729988], [-73.97148, 40.72925], [-73.971427, 40.728486], [-73.971556, 40.727703], [-73.971569, 40.727694], [-73.971573, 40.727646], [-73.97159, 40.72764], [-73.971619, 40.727651], [-73.971652, 40.727643], [-73.971685, 40.727406], [-73.971537, 40.727393], [-73.971521, 40.727386], [-73.971513, 40.727374], [-73.971493, 40.727373], [-73.97149, 40.72735], [-73.971629, 40.726761], [-73.982553, 40.731375], [-73.982022, 40.732012], [-73.978527, 40.736855], [-73.978527, 40.736854], [-73.974907, 40.735313], [-73.974648, 40.735082], [-73.974378, 40.73508], [-73.974378, 40.735081]]]]
    },
    "properties": {
      "neighbourhood": "Stuyvesant Town",
      "neighbourhood_group": "Manhattan"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.91189, 40.748715], [-73.911642, 40.748685], [-73.912449, 40.74592], [-73.912131, 40.745887], [-73.912822, 40.742486], [-73.907506, 40.741862], [-73.90855, 40.73793], [-73.910689, 40.733471], [-73.912008, 40.729945], [-73.911869, 40.729553], [-73.9121, 40.727609], [-73.91797, 40.728501], [-73.91742, 40.731132], [-73.91898, 40.731729], [-73.922726, 40.734356], [-73.921271, 40.734784], [-73.920447, 40.73485], [-73.923118, 40.735458], [-73.924879, 40.736032], [-73.934996, 40.737869], [-73.93463, 40.73943], [-73.93483, 40.739797], [-73.934576, 40.739677], [-73.93347, 40.745152], [-73.934401, 40.746035], [-73.92732, 40.747485], [-73.926353, 40.747551], [-73.920798, 40.746891], [-73.920342, 40.749159], [-73.915406, 40.75011], [-73.913484, 40.750199], [-73.911625, 40.74998], [-73.91189, 40.748715]]]]
    },
    "properties": {
      "neighbourhood": "Sunnyside",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.865127, 40.841218], [-73.868126, 40.840106], [-73.869974, 40.839455], [-73.870495, 40.839846], [-73.872808, 40.840895], [-73.874519, 40.841556], [-73.871654, 40.843732], [-73.869309, 40.847469], [-73.868365, 40.848971], [-73.869201, 40.849234], [-73.868235, 40.850913], [-73.868609, 40.85209], [-73.866129, 40.850537], [-73.865477, 40.850284], [-73.862278, 40.84906], [-73.860497, 40.848289], [-73.860259, 40.848088], [-73.859445, 40.846659], [-73.858665, 40.845275], [-73.857389, 40.843676], [-73.85521, 40.842975], [-73.865127, 40.841218]]]]
    },
    "properties": {
      "neighbourhood": "Van Nest",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.992801, 40.665527], [-73.993003, 40.665288], [-73.990763, 40.663963], [-73.988695, 40.662504], [-73.987209, 40.6604], [-73.988428, 40.65925], [-73.99019, 40.657601], [-73.99238, 40.658899], [-73.992964, 40.658337], [-73.995169, 40.659669], [-74.00214, 40.652956], [-73.997818, 40.650282], [-73.998276, 40.649734], [-73.996088, 40.648307], [-74.012536, 40.632632], [-74.014752, 40.633967], [-74.01918, 40.636631], [-74.021328, 40.638008], [-74.023533, 40.63932], [-74.025774, 40.640607], [-74.028809, 40.641333], [-74.030271, 40.641613], [-74.031879, 40.64167], [-74.033227, 40.64149], [-74.034509, 40.641087], [-74.035366, 40.640502], [-74.035993, 40.639694], [-74.036344, 40.639798], [-74.035966, 40.64033], [-74.035713, 40.64064], [-74.03598, 40.64094], [-74.036347, 40.641143], [-74.036608, 40.641355], [-74.036734, 40.641458], [-74.036765, 40.641499], [-74.036777, 40.641544], [-74.036758, 40.641612], [-74.034452, 40.643827], [-74.034538, 40.643876], [-74.034073, 40.644314], [-74.032843, 40.643564], [-74.032621, 40.643765], [-74.032311, 40.643575], [-74.032235, 40.643643], [-74.032542, 40.643825], [-74.032269, 40.644074], [-74.031979, 40.643893], [-74.031897, 40.643889], [-74.031433, 40.644356], [-74.030518, 40.645274], [-74.029081, 40.644404], [-74.028998, 40.644472], [-74.029154, 40.644581], [-74.028862, 40.644866], [-74.028822, 40.644842], [-74.029091, 40.644601], [-74.029087, 40.644583], [-74.028501, 40.644178], [-74.028231, 40.644438], [-74.028191, 40.644414], [-74.028457, 40.644156], [-74.028206, 40.644016], [-74.026049, 40.646261], [-74.029741, 40.648486], [-74.02939, 40.648804], [-74.025718, 40.646615], [-74.025162, 40.647139], [-74.02484, 40.646944], [-74.024615, 40.647151], [-74.026297, 40.648169], [-74.026221, 40.648248], [-74.024883, 40.647411], [-74.024684, 40.647606], [-74.024355, 40.647399], [-74.024146, 40.647615], [-74.025127, 40.648321], [-74.025129, 40.648323], [-74.025129, 40.648323], [-74.024968, 40.648606], [-74.025394, 40.649485], [-74.025539, 40.649782], [-74.025175, 40.650211], [-74.024844, 40.6506], [-74.025206, 40.650818], [-74.025416, 40.650619], [-74.026051, 40.650994], [-74.025871, 40.651161], [-74.025928, 40.651197], [-74.025776, 40.651334], [-74.025691, 40.65132], [-74.02553, 40.651479], [-74.024911, 40.651106], [-74.02509, 40.650924], [-74.025077, 40.650914], [-74.025103, 40.650893], [-74.024772, 40.650688], [-74.024523, 40.650938], [-74.024488, 40.650918], [-74.024289, 40.651112], [-74.024272, 40.651103], [-74.02424, 40.651134], [-74.025501, 40.65184], [-74.025416, 40.651934], [-74.024181, 40.651194], [-74.024178, 40.651192], [-74.023823, 40.651354], [-74.023654, 40.651256], [-74.023594, 40.651316], [-74.02306, 40.650974], [-74.022851, 40.651169], [-74.025369, 40.652721], [-74.025227, 40.65283], [-74.022724, 40.651297], [-74.022622, 40.651312], [-74.021541, 40.650672], [-74.021345, 40.650852], [-74.021282, 40.650817], [-74.021247, 40.650835], [-74.021276, 40.650862], [-74.021276, 40.650892], [-74.021392, 40.650968], [-74.02136, 40.650997], [-74.021243, 40.650926], [-74.021185, 40.650978], [-74.021127, 40.650943], [-74.021052, 40.651098], [-74.021576, 40.651412], [-74.022337, 40.651911], [-74.022252, 40.651982], [-74.020983, 40.651157], [-74.020899, 40.651247], [-74.023807, 40.653045], [-74.023803, 40.653048], [-74.023594, 40.653216], [-74.023534, 40.653096], [-74.023332, 40.652942], [-74.023099, 40.652919], [-74.022942, 40.652879], [-74.022889, 40.652822], [-74.022852, 40.652742], [-74.021959, 40.652223], [-74.021869, 40.652223], [-74.021712, 40.652274], [-74.021622, 40.65232], [-74.021232, 40.652697], [-74.021187, 40.65284], [-74.023205, 40.654096], [-74.023062, 40.654233], [-74.022102, 40.653588], [-74.021937, 40.653577], [-74.021877, 40.653548], [-74.021629, 40.653645], [-74.021285, 40.653965], [-74.02124, 40.654131], [-74.02115, 40.654211], [-74.021825, 40.654656], [-74.021645, 40.654879], [-74.020895, 40.654434], [-74.02064, 40.654439], [-74.020602, 40.654411], [-74.020602, 40.654291], [-74.020475, 40.654217], [-74.020242, 40.654222], [-74.01962, 40.654165], [-74.019417, 40.654], [-74.019252, 40.654034], [-74.019192, 40.654023], [-74.019245, 40.653943], [-74.019177, 40.653886], [-74.018967, 40.653868], [-74.018727, 40.653474], [-74.018622, 40.653491], [-74.018119, 40.653885], [-74.020256, 40.655118], [-74.020052, 40.655336], [-74.017874, 40.654062], [-74.017153, 40.654775], [-74.017466, 40.654927], [-74.017419, 40.654992], [-74.019801, 40.656487], [-74.019706, 40.656581], [-74.017267, 40.655194], [-74.016916, 40.655483], [-74.01665, 40.655339], [-74.016394, 40.655621], [-74.019108, 40.657369], [-74.018606, 40.657846], [-74.015854, 40.656213], [-74.015436, 40.656632], [-74.017742, 40.658099], [-74.017666, 40.658186], [-74.017866, 40.658308], [-74.017685, 40.658453], [-74.017486, 40.658337], [-74.017505, 40.658272], [-74.015047, 40.65695], [-74.014421, 40.657608], [-74.017458, 40.65945], [-74.017447, 40.659458], [-74.015542, 40.660758], [-74.014004, 40.659812], [-74.013663, 40.660029], [-74.011839, 40.658913], [-74.011108, 40.659706], [-74.014022, 40.66153], [-74.013156, 40.661982], [-74.012654, 40.661982], [-74.0086, 40.659521], [-74.007459, 40.660558], [-74.010372, 40.662399], [-74.010463, 40.662642], [-74.009551, 40.663268], [-74.008964, 40.663338], [-74.008684, 40.663372], [-74.006161, 40.661845], [-74.005691, 40.66227], [-74.005686, 40.662275], [-74.004284, 40.661445], [-74.004146, 40.661562], [-74.004952, 40.662042], [-74.005124, 40.662145], [-74.005141, 40.662184], [-74.005266, 40.66227], [-74.00562, 40.662494], [-74.005785, 40.662583], [-74.005827, 40.66259], [-74.005859, 40.662575], [-74.006227, 40.662788], [-74.005924, 40.663108], [-74.005458, 40.662861], [-74.004225, 40.662177], [-74.003808, 40.661908], [-74.003488, 40.662241], [-74.004239, 40.662658], [-74.004366, 40.662736], [-74.004388, 40.662714], [-74.004555, 40.662816], [-74.004602, 40.662768], [-74.00459, 40.662734], [-74.004606, 40.662719], [-74.004544, 40.66268], [-74.004733, 40.662497], [-74.005358, 40.662869], [-74.005156, 40.663047], [-74.005062, 40.662992], [-74.004972, 40.663068], [-74.005192, 40.663202], [-74.005244, 40.663155], [-74.005232, 40.663118], [-74.005249, 40.663106], [-74.005186, 40.66307], [-74.00538, 40.662884], [-74.005997, 40.663259], [-74.005795, 40.663436], [-74.0057, 40.663377], [-74.005613, 40.663458], [-74.005908, 40.663638], [-74.006306, 40.663863], [-74.006728, 40.664119], [-74.007721, 40.664719], [-74.007725, 40.664743], [-74.007674, 40.664791], [-74.007639, 40.664796], [-74.007305, 40.664598], [-74.007257, 40.664643], [-74.007266, 40.664673], [-74.007253, 40.66469], [-74.007319, 40.66473], [-74.007125, 40.664915], [-74.006525, 40.664547], [-74.006707, 40.664363], [-74.006799, 40.664418], [-74.006882, 40.66434], [-74.006629, 40.664188], [-74.006536, 40.664257], [-74.006642, 40.66432], [-74.00645, 40.664506], [-74.005842, 40.664138], [-74.006029, 40.663959], [-74.006119, 40.664011], [-74.006203, 40.66393], [-74.006046, 40.66384], [-74.005993, 40.663891], [-74.005921, 40.66385], [-74.005898, 40.663876], [-74.00581, 40.663874], [-74.005758, 40.663923], [-74.00578, 40.663988], [-74.005748, 40.664012], [-74.005823, 40.664055], [-74.005758, 40.664114], [-74.005893, 40.66419], [-74.005749, 40.664327], [-74.005741, 40.664382], [-74.00577, 40.664397], [-74.005745, 40.664418], [-74.005835, 40.66447], [-74.005808, 40.664478], [-74.005849, 40.664503], [-74.005822, 40.664529], [-74.005641, 40.664531], [-74.00565, 40.6639], [-74.004295, 40.663096], [-74.004266, 40.663115], [-74.003629, 40.662735], [-74.003512, 40.662865], [-74.003403, 40.662986], [-74.004592, 40.663735], [-74.004323, 40.664052], [-74.005154, 40.664577], [-74.005281, 40.664657], [-74.005198, 40.664738], [-74.004862, 40.665065], [-74.001135, 40.662902], [-74.000944, 40.663076], [-74.000834, 40.663006], [-74.000494, 40.663314], [-74.000538, 40.663333], [-74.00003, 40.663821], [-74.000099, 40.663856], [-73.999532, 40.664397], [-74.001707, 40.665721], [-74.00287, 40.666429], [-74.002925, 40.666462], [-74.00224, 40.666794], [-74.002131, 40.666789], [-74.00162, 40.666766], [-74.001206, 40.667018], [-74.001413, 40.667139], [-74.001465, 40.66717], [-74.000688, 40.667546], [-74.000601, 40.667534], [-74.000112, 40.667468], [-73.999981, 40.66745], [-73.999872, 40.667564], [-73.999859, 40.667577], [-73.999026, 40.668443], [-73.999054, 40.668852], [-73.998945, 40.668974], [-73.999026, 40.669008], [-73.99905, 40.668922], [-73.999036, 40.668917], [-73.999043, 40.66888], [-73.999064, 40.668873], [-73.99918, 40.668297], [-73.99924, 40.668306], [-73.999079, 40.669038], [-73.998902, 40.669238], [-73.998656, 40.669515], [-73.998737, 40.669557], [-73.998912, 40.669649], [-73.998917, 40.669805], [-73.998892, 40.669938], [-73.99875, 40.670533], [-73.998713, 40.67069], [-73.998558, 40.671336], [-73.998769, 40.671602], [-73.99866, 40.671705], [-73.99827, 40.671153], [-73.997092, 40.669267], [-73.995193, 40.667025], [-73.992801, 40.665527]]]]
    },
    "properties": {
      "neighbourhood": "Sunset Park",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.985043, 40.753554], [-73.990724, 40.75595], [-73.984726, 40.764167], [-73.979057, 40.761747], [-73.985043, 40.753554]]]]
    },
    "properties": {
      "neighbourhood": "Theater District",
      "neighbourhood_group": "Manhattan"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.826236, 40.811283], [-73.828362, 40.814903], [-73.823195, 40.816723], [-73.825384, 40.820198], [-73.826723, 40.821802], [-73.828304, 40.821081], [-73.831836, 40.81949], [-73.831679, 40.819267], [-73.833227, 40.818569], [-73.83402, 40.819297], [-73.835751, 40.817718], [-73.835804, 40.816231], [-73.839741, 40.816287], [-73.839966, 40.816704], [-73.84019, 40.817188], [-73.840166, 40.817341], [-73.840093, 40.817799], [-73.840053, 40.817921], [-73.839935, 40.818087], [-73.839677, 40.818347], [-73.83921, 40.818888], [-73.838927, 40.819001], [-73.838791, 40.819529], [-73.839064, 40.819802], [-73.839012, 40.82195], [-73.838882, 40.82214], [-73.839071, 40.822253], [-73.839049, 40.822689], [-73.839213, 40.822876], [-73.839454, 40.822923], [-73.839528, 40.823038], [-73.839499, 40.823219], [-73.83958, 40.823427], [-73.839633, 40.823686], [-73.839612, 40.823863], [-73.839682, 40.823964], [-73.83974, 40.82411], [-73.839999, 40.824206], [-73.840078, 40.824253], [-73.840131, 40.824317], [-73.840995, 40.825981], [-73.841108, 40.826153], [-73.842008, 40.827978], [-73.84025, 40.828236], [-73.838146, 40.828627], [-73.837108, 40.828817], [-73.836943, 40.82815], [-73.83561, 40.828648], [-73.834767, 40.829002], [-73.833607, 40.829582], [-73.828189, 40.832951], [-73.826013, 40.834021], [-73.825188, 40.834588], [-73.824444, 40.835741], [-73.823335, 40.834415], [-73.822477, 40.834495], [-73.816408, 40.835932], [-73.816061, 40.83603], [-73.81598, 40.835997], [-73.815851, 40.835904], [-73.815785, 40.835921], [-73.81566, 40.83594], [-73.815625, 40.835963], [-73.815568, 40.835976], [-73.815525, 40.835976], [-73.815503, 40.835953], [-73.815503, 40.835924], [-73.815543, 40.835897], [-73.815612, 40.835888], [-73.81572, 40.835871], [-73.816063, 40.835773], [-73.816045, 40.835553], [-73.816008, 40.835513], [-73.815982, 40.835503], [-73.815925, 40.835503], [-73.815878, 40.835512], [-73.815721, 40.835512], [-73.815678, 40.835532], [-73.8156, 40.835532], [-73.815574, 40.835525], [-73.815578, 40.835505], [-73.815609, 40.835476], [-73.815756, 40.835473], [-73.815852, 40.83546], [-73.81596, 40.835433], [-73.81604, 40.835393], [-73.816027, 40.835006], [-73.816001, 40.834976], [-73.816001, 40.834923], [-73.816041, 40.834518], [-73.81592, 40.834475], [-73.815833, 40.834485], [-73.815772, 40.834488], [-73.815711, 40.834507], [-73.815681, 40.834507], [-73.815664, 40.834491], [-73.815664, 40.834478], [-73.815703, 40.834458], [-73.815889, 40.834422], [-73.815993, 40.834396], [-73.816037, 40.834169], [-73.815992, 40.83392], [-73.815895, 40.83394], [-73.815888, 40.833925], [-73.815987, 40.833902], [-73.815939, 40.833677], [-73.81583, 40.833501], [-73.815811, 40.833481], [-73.815784, 40.833474], [-73.81576, 40.833488], [-73.815733, 40.833498], [-73.815708, 40.833488], [-73.815699, 40.833462], [-73.815711, 40.833447], [-73.81574, 40.833438], [-73.815779, 40.833411], [-73.815806, 40.833356], [-73.815454, 40.832253], [-73.815368, 40.8322], [-73.815345, 40.832122], [-73.815336, 40.832027], [-73.815318, 40.831958], [-73.815287, 40.831876], [-73.815031, 40.831682], [-73.814975, 40.831421], [-73.814853, 40.831008], [-73.814492, 40.831171], [-73.81447, 40.831141], [-73.814843, 40.830986], [-73.81452, 40.830623], [-73.813914, 40.830924], [-73.813898, 40.830908], [-73.81451, 40.830614], [-73.814294, 40.830505], [-73.814287, 40.830482], [-73.814309, 40.830359], [-73.813866, 40.830567], [-73.813857, 40.830561], [-73.8143, 40.83035], [-73.813904, 40.830068], [-73.813821, 40.829968], [-73.813831, 40.829903], [-73.813868, 40.829857], [-73.813703, 40.829933], [-73.813668, 40.829891], [-73.813729, 40.829865], [-73.813736, 40.82989], [-73.813887, 40.829821], [-73.813828, 40.829641], [-73.813763, 40.829617], [-73.813711, 40.829582], [-73.813697, 40.829552], [-73.813585, 40.829608], [-73.813567, 40.82959], [-73.813689, 40.829535], [-73.813611, 40.829377], [-73.813461, 40.829394], [-73.813377, 40.829391], [-73.81339, 40.82932], [-73.813504, 40.829221], [-73.813388, 40.829023], [-73.813342, 40.828983], [-73.81329, 40.828956], [-73.813245, 40.828939], [-73.813144, 40.828926], [-73.812984, 40.828983], [-73.812952, 40.828983], [-73.812926, 40.828978], [-73.812903, 40.828953], [-73.812931, 40.828918], [-73.812995, 40.828879], [-73.813082, 40.828842], [-73.813161, 40.828828], [-73.81318, 40.828803], [-73.813157, 40.828778], [-73.813099, 40.828781], [-73.813076, 40.8288], [-73.813053, 40.8288], [-73.81305, 40.828785], [-73.813063, 40.828758], [-73.813118, 40.828743], [-73.813148, 40.828716], [-73.813132, 40.828692], [-73.813086, 40.828674], [-73.813037, 40.828669], [-73.812979, 40.828694], [-73.81294, 40.828701], [-73.812881, 40.828686], [-73.812839, 40.828647], [-73.8128, 40.828592], [-73.812821, 40.828502], [-73.812875, 40.828407], [-73.812798, 40.828301], [-73.812755, 40.828248], [-73.81208, 40.828283], [-73.811065, 40.828293], [-73.810248, 40.828265], [-73.810016, 40.828254], [-73.809928, 40.828193], [-73.809945, 40.828043], [-73.810014, 40.827864], [-73.810096, 40.827819], [-73.810194, 40.827875], [-73.810297, 40.827991], [-73.810493, 40.82801], [-73.811056, 40.827985], [-73.811043, 40.82784], [-73.810253, 40.827834], [-73.810254, 40.827797], [-73.810039, 40.827797], [-73.810039, 40.827778], [-73.810276, 40.827779], [-73.810276, 40.827818], [-73.811822, 40.827826], [-73.811822, 40.827845], [-73.811063, 40.827844], [-73.811073, 40.827984], [-73.811391, 40.827985], [-73.811707, 40.828007], [-73.812272, 40.827867], [-73.812603, 40.827835], [-73.81272, 40.827701], [-73.812652, 40.827559], [-73.813372, 40.827151], [-73.813548, 40.826942], [-73.813649, 40.826882], [-73.813826, 40.826821], [-73.81385, 40.826804], [-73.813894, 40.826736], [-73.813891, 40.82666], [-73.813702, 40.82649], [-73.81368, 40.826399], [-73.813722, 40.826272], [-73.813284, 40.826325], [-73.813285, 40.826334], [-73.812923, 40.826376], [-73.812918, 40.82635], [-73.813274, 40.826305], [-73.813278, 40.826314], [-73.813728, 40.826261], [-73.813821, 40.826163], [-73.813991, 40.82607], [-73.814035, 40.825926], [-73.813951, 40.825729], [-73.813429, 40.825935], [-73.813421, 40.825925], [-73.813942, 40.825717], [-73.81391, 40.825679], [-73.813879, 40.825665], [-73.813828, 40.825626], [-73.813809, 40.825602], [-73.813789, 40.825549], [-73.813788, 40.825522], [-73.813803, 40.825468], [-73.813829, 40.825426], [-73.813842, 40.82539], [-73.813829, 40.825348], [-73.813796, 40.8253], [-73.813795, 40.825298], [-73.813736, 40.825265], [-73.813491, 40.825224], [-73.813335, 40.825171], [-73.813031, 40.825259], [-73.813034, 40.825276], [-73.812966, 40.825294], [-73.812956, 40.825273], [-73.812126, 40.825569], [-73.812114, 40.825553], [-73.812882, 40.825266], [-73.812891, 40.825273], [-73.812947, 40.825252], [-73.812938, 40.825235], [-73.813, 40.825219], [-73.813012, 40.825235], [-73.813277, 40.825161], [-73.813179, 40.825118], [-73.813104, 40.82504], [-73.813082, 40.824945], [-73.813235, 40.824812], [-73.813487, 40.824689], [-73.813827, 40.824558], [-73.814037, 40.824483], [-73.813971, 40.82419], [-73.813781, 40.824], [-73.813294, 40.823968], [-73.813274, 40.823967], [-73.813076, 40.824126], [-73.81292, 40.824251], [-73.81281, 40.824339], [-73.812823, 40.82468], [-73.812733, 40.824778], [-73.812397, 40.824479], [-73.81232, 40.824411], [-73.812019, 40.824326], [-73.811897, 40.824341], [-73.811773, 40.82434], [-73.811657, 40.824446], [-73.811588, 40.824493], [-73.811644, 40.824602], [-73.811611, 40.824611], [-73.811558, 40.824512], [-73.811455, 40.824551], [-73.811221, 40.824586], [-73.811187, 40.824626], [-73.811212, 40.824692], [-73.811212, 40.824768], [-73.811199, 40.824791], [-73.811166, 40.82479], [-73.81114, 40.824777], [-73.811121, 40.824753], [-73.811103, 40.824718], [-73.811059, 40.824704], [-73.811031, 40.824708], [-73.811022, 40.824741], [-73.810975, 40.824798], [-73.810917, 40.82484], [-73.810847, 40.824872], [-73.810875, 40.825114], [-73.810785, 40.825114], [-73.810762, 40.824902], [-73.810369, 40.825047], [-73.810331, 40.825101], [-73.810319, 40.825137], [-73.810297, 40.825165], [-73.81025, 40.825167], [-73.81016, 40.825151], [-73.810061, 40.825143], [-73.809655, 40.825276], [-73.809572, 40.825376], [-73.809441, 40.825494], [-73.809248, 40.825635], [-73.809198, 40.825812], [-73.809167, 40.825843], [-73.809092, 40.825873], [-73.808987, 40.825854], [-73.808785, 40.8258], [-73.808592, 40.825854], [-73.808469, 40.82586], [-73.808384, 40.825818], [-73.808275, 40.825801], [-73.808163, 40.825803], [-73.807998, 40.82579], [-73.807984, 40.825828], [-73.807952, 40.825826], [-73.807963, 40.825782], [-73.807834, 40.825767], [-73.80776, 40.825791], [-73.807725, 40.825843], [-73.80771, 40.825888], [-73.807666, 40.825897], [-73.807647, 40.825869], [-73.807638, 40.825833], [-73.807573, 40.825798], [-73.80752, 40.825762], [-73.807415, 40.825672], [-73.807347, 40.82563], [-73.80731, 40.825559], [-73.807276, 40.825502], [-73.807161, 40.825455], [-73.807102, 40.825431], [-73.807021, 40.825417], [-73.806978, 40.825388], [-73.806978, 40.82536], [-73.806997, 40.825322], [-73.806972, 40.825244], [-73.806919, 40.825183], [-73.806817, 40.824996], [-73.806734, 40.824685], [-73.806694, 40.824637], [-73.806651, 40.824628], [-73.806598, 40.824628], [-73.806564, 40.824606], [-73.806573, 40.824576], [-73.806633, 40.824552], [-73.806716, 40.824536], [-73.806753, 40.824503], [-73.806708, 40.82426], [-73.806593, 40.824231], [-73.80654, 40.824226], [-73.806521, 40.824215], [-73.806518, 40.824198], [-73.80653, 40.824174], [-73.806588, 40.824172], [-73.8067, 40.824156], [-73.806731, 40.824135], [-73.806751, 40.823828], [-73.806707, 40.823804], [-73.806539, 40.823823], [-73.806483, 40.823818], [-73.806465, 40.823799], [-73.806465, 40.823778], [-73.806508, 40.823757], [-73.806664, 40.823726], [-73.806692, 40.823679], [-73.8066, 40.823337], [-73.80651, 40.823294], [-73.806264, 40.823341], [-73.806236, 40.823308], [-73.80646, 40.823221], [-73.80651, 40.823153], [-73.8063, 40.822836], [-73.806129, 40.822897], [-73.806048, 40.822911], [-73.805967, 40.822911], [-73.805952, 40.822883], [-73.806148, 40.822817], [-73.806222, 40.822741], [-73.805825, 40.821768], [-73.805992, 40.820824], [-73.805728, 40.820177], [-73.805728, 40.820177], [-73.805724, 40.820173], [-73.804619, 40.819027], [-73.803483, 40.818277], [-73.802674, 40.818239], [-73.802522, 40.818526], [-73.802079, 40.818557], [-73.801885, 40.818359], [-73.800708, 40.818045], [-73.800583, 40.817911], [-73.800573, 40.8177], [-73.798095, 40.816796], [-73.79759, 40.816508], [-73.797381, 40.815764], [-73.797715, 40.815513], [-73.798119, 40.815699], [-73.798642, 40.815464], [-73.799028, 40.815541], [-73.80011, 40.814029], [-73.800111, 40.814025], [-73.800488, 40.813867], [-73.800916, 40.813761], [-73.80132, 40.813261], [-73.801458, 40.812941], [-73.801746, 40.812865], [-73.801426, 40.812424], [-73.801374, 40.812444], [-73.801339, 40.812394], [-73.801388, 40.812367], [-73.801404, 40.812363], [-73.801759, 40.812861], [-73.802591, 40.812509], [-73.802768, 40.812464], [-73.802861, 40.812452], [-73.803048, 40.812449], [-73.803141, 40.812457], [-73.803232, 40.812473], [-73.803407, 40.812524], [-73.80347, 40.812559], [-73.803512, 40.812559], [-73.803549, 40.81253], [-73.803579, 40.812519], [-73.803614, 40.812521], [-73.803645, 40.812557], [-73.803654, 40.81258], [-73.80364, 40.812635], [-73.80352, 40.812922], [-73.803621, 40.812965], [-73.803738, 40.812794], [-73.803779, 40.81281], [-73.803614, 40.813045], [-73.803857, 40.813277], [-73.804252, 40.81365], [-73.804344, 40.813597], [-73.804358, 40.813609], [-73.804154, 40.813731], [-73.804142, 40.813718], [-73.804229, 40.813663], [-73.803872, 40.813322], [-73.803602, 40.813056], [-73.803559, 40.813043], [-73.803615, 40.812972], [-73.803514, 40.812935], [-73.803459, 40.813051], [-73.803388, 40.81313], [-73.803297, 40.813169], [-73.803253, 40.813197], [-73.803235, 40.813296], [-73.803344, 40.81332], [-73.80335, 40.813305], [-73.803461, 40.813329], [-73.803452, 40.813352], [-73.803368, 40.813332], [-73.803364, 40.813341], [-73.803232, 40.813316], [-73.803224, 40.813359], [-73.803455, 40.813403], [-73.803967, 40.813967], [-73.804044, 40.813941], [-73.804091, 40.813952], [-73.804184, 40.81403], [-73.804191, 40.814053], [-73.804177, 40.814061], [-73.804435, 40.814293], [-73.804454, 40.814292], [-73.804522, 40.814247], [-73.804531, 40.814255], [-73.804434, 40.814319], [-73.804036, 40.813963], [-73.80396, 40.813988], [-73.80343, 40.813422], [-73.803355, 40.813406], [-73.803222, 40.813375], [-73.803222, 40.813374], [-73.803222, 40.813375], [-73.803199, 40.813505], [-73.803517, 40.813952], [-73.80418, 40.81459], [-73.804315, 40.814592], [-73.80436, 40.81457], [-73.804353, 40.814556], [-73.804392, 40.814538], [-73.80443, 40.814583], [-73.804386, 40.814604], [-73.804365, 40.814588], [-73.80433, 40.814603], [-73.804351, 40.814619], [-73.804473, 40.81489], [-73.805115, 40.815636], [-73.80596, 40.816042], [-73.806199, 40.816287], [-73.806285, 40.816268], [-73.806416, 40.816514], [-73.806545, 40.816615], [-73.806572, 40.816606], [-73.806567, 40.8166], [-73.806584, 40.816595], [-73.806547, 40.816527], [-73.806543, 40.816528], [-73.80631, 40.816147], [-73.806088, 40.815931], [-73.805453, 40.815499], [-73.80541, 40.815505], [-73.805282, 40.815411], [-73.805081, 40.815198], [-73.804804, 40.814899], [-73.804554, 40.81463], [-73.804542, 40.814608], [-73.804659, 40.814545], [-73.804684, 40.814572], [-73.804589, 40.814622], [-73.804814, 40.814877], [-73.805099, 40.815187], [-73.805279, 40.815377], [-73.805398, 40.815471], [-73.805436, 40.81546], [-73.806101, 40.81592], [-73.806329, 40.816138], [-73.806542, 40.816455], [-73.806612, 40.816578], [-73.806707, 40.816553], [-73.80672, 40.816575], [-73.806579, 40.816618], [-73.806606, 40.816664], [-73.806929, 40.816568], [-73.806536, 40.815892], [-73.806554, 40.815889], [-73.806718, 40.81616], [-73.806942, 40.816565], [-73.807046, 40.816534], [-73.806629, 40.815684], [-73.806587, 40.815699], [-73.806578, 40.81573], [-73.806402, 40.815702], [-73.806412, 40.815664], [-73.806564, 40.815688], [-73.806618, 40.815669], [-73.806593, 40.815617], [-73.806352, 40.815533], [-73.805675, 40.815212], [-73.80545, 40.81494], [-73.805319, 40.814781], [-73.805166, 40.813685], [-73.805192, 40.813144], [-73.804797, 40.812728], [-73.804387, 40.81223], [-73.804215, 40.812162], [-73.803903, 40.812144], [-73.803614, 40.811938], [-73.803332, 40.8116], [-73.802726, 40.81063], [-73.802242, 40.810197], [-73.80205, 40.810161], [-73.801356, 40.810711], [-73.801157, 40.810588], [-73.801012, 40.810713], [-73.800995, 40.810707], [-73.80124, 40.810479], [-73.801467, 40.810142], [-73.800109, 40.809711], [-73.798538, 40.809587], [-73.792289, 40.806849], [-73.791724, 40.806878], [-73.791603, 40.806894], [-73.791443, 40.806964], [-73.791342, 40.807054], [-73.791302, 40.807122], [-73.791309, 40.807195], [-73.791356, 40.807255], [-73.791441, 40.807295], [-73.791525, 40.807347], [-73.79159, 40.807412], [-73.79157, 40.807457], [-73.791541, 40.80748], [-73.791504, 40.807496], [-73.791442, 40.8075], [-73.790865, 40.807341], [-73.790759, 40.807066], [-73.790722, 40.80678], [-73.790735, 40.806589], [-73.790428, 40.806327], [-73.790253, 40.806019], [-73.790253, 40.806019], [-73.790125, 40.805772], [-73.790063, 40.805409], [-73.790152, 40.80508], [-73.790284, 40.804817], [-73.79066, 40.804486], [-73.791037, 40.804263], [-73.791694, 40.804122], [-73.792245, 40.803996], [-73.79339, 40.804204], [-73.794516, 40.805003], [-73.795778, 40.806163], [-73.795952, 40.805982], [-73.79601, 40.805921], [-73.796209, 40.805969], [-73.796503, 40.806104], [-73.796428, 40.806201], [-73.796369, 40.806277], [-73.797029, 40.806345], [-73.79792, 40.806694], [-73.798859, 40.807136], [-73.801855, 40.808968], [-73.802504, 40.809114], [-73.802959, 40.809077], [-73.803594, 40.808757], [-73.803927, 40.808528], [-73.803927, 40.808528], [-73.803927, 40.808528], [-73.805015, 40.809443], [-73.805032, 40.809418], [-73.805022, 40.809408], [-73.805061, 40.809365], [-73.805119, 40.809397], [-73.805079, 40.809439], [-73.805064, 40.80943], [-73.805036, 40.809456], [-73.806215, 40.810047], [-73.80714, 40.810662], [-73.808109, 40.811788], [-73.809212, 40.812574], [-73.80992, 40.812929], [-73.810268, 40.812999], [-73.810598, 40.812939], [-73.810669, 40.812764], [-73.810785, 40.812771], [-73.810799, 40.812815], [-73.810853, 40.812868], [-73.811019, 40.812883], [-73.811048, 40.812881], [-73.811077, 40.812882], [-73.811112, 40.812896], [-73.811143, 40.812914], [-73.81117, 40.812936], [-73.811247, 40.812993], [-73.811566, 40.813054], [-73.811773, 40.813044], [-73.811832, 40.812945], [-73.811851, 40.812939], [-73.811876, 40.812954], [-73.811895, 40.812973], [-73.811916, 40.813012], [-73.811941, 40.81303], [-73.812412, 40.813093], [-73.812766, 40.813159], [-73.813134, 40.813331], [-73.81347, 40.813393], [-73.813494, 40.813359], [-73.813562, 40.81333], [-73.813598, 40.813326], [-73.813575, 40.813364], [-73.813598, 40.813385], [-73.813552, 40.813432], [-73.813703, 40.813532], [-73.813889, 40.81359], [-73.814003, 40.813551], [-73.814157, 40.813521], [-73.814268, 40.813512], [-73.81435, 40.813512], [-73.814431, 40.813518], [-73.81446, 40.812963], [-73.814372, 40.812959], [-73.814369, 40.812936], [-73.814437, 40.812938], [-73.81447, 40.812915], [-73.81447, 40.812906], [-73.8145, 40.812908], [-73.814502, 40.812922], [-73.814525, 40.812946], [-73.814619, 40.812947], [-73.814619, 40.812967], [-73.814497, 40.812965], [-73.814477, 40.813519], [-73.814706, 40.813519], [-73.814857, 40.813541], [-73.815332, 40.813522], [-73.815514, 40.813505], [-73.815663, 40.813512], [-73.815762, 40.813572], [-73.815879, 40.813767], [-73.816201, 40.813847], [-73.81648, 40.813853], [-73.816678, 40.8138], [-73.816749, 40.813708], [-73.817041, 40.813652], [-73.817372, 40.813574], [-73.81736, 40.813376], [-73.817377, 40.813376], [-73.817389, 40.813571], [-73.817448, 40.813559], [-73.817595, 40.813548], [-73.817921, 40.813545], [-73.817931, 40.813401], [-73.817939, 40.813396], [-73.817942, 40.813356], [-73.817931, 40.813353], [-73.817935, 40.813298], [-73.817976, 40.813299], [-73.817971, 40.813357], [-73.817959, 40.813357], [-73.817956, 40.813398], [-73.817964, 40.813402], [-73.817958, 40.813541], [-73.818042, 40.813533], [-73.81808, 40.813517], [-73.818084, 40.813469], [-73.818117, 40.813468], [-73.81815, 40.813473], [-73.818201, 40.813487], [-73.818744, 40.813426], [-73.819467, 40.81324], [-73.819562, 40.813218], [-73.819816, 40.81318], [-73.820012, 40.813092], [-73.82007, 40.813045], [-73.820096, 40.812973], [-73.820108, 40.812864], [-73.820392, 40.812844], [-73.820413, 40.812972], [-73.820478, 40.813019], [-73.820555, 40.813018], [-73.82049, 40.812836], [-73.820446, 40.812845], [-73.820404, 40.812774], [-73.820462, 40.812757], [-73.820439, 40.812707], [-73.820421, 40.812711], [-73.820291, 40.812448], [-73.820258, 40.812454], [-73.820244, 40.812431], [-73.821065, 40.812204], [-73.821081, 40.812227], [-73.820324, 40.81244], [-73.820421, 40.812638], [-73.82113, 40.81245], [-73.821137, 40.812467], [-73.820442, 40.812658], [-73.820463, 40.812702], [-73.820481, 40.81275], [-73.820535, 40.812743], [-73.820563, 40.812808], [-73.820528, 40.812826], [-73.820587, 40.813019], [-73.821058, 40.812977], [-73.821238, 40.812931], [-73.821254, 40.812905], [-73.821245, 40.812885], [-73.821229, 40.81288], [-73.821217, 40.812871], [-73.821217, 40.812859], [-73.821224, 40.81285], [-73.821266, 40.812848], [-73.821301, 40.812852], [-73.821331, 40.812859], [-73.821366, 40.812875], [-73.821413, 40.812873], [-73.821394, 40.812841], [-73.821457, 40.812818], [-73.821404, 40.812709], [-73.821423, 40.812702], [-73.821517, 40.812847], [-73.82162, 40.812831], [-73.821702, 40.812753], [-73.82166, 40.812674], [-73.821695, 40.812665], [-73.821756, 40.812769], [-73.821972, 40.81275], [-73.82211, 40.812701], [-73.822091, 40.812628], [-73.822126, 40.812623], [-73.822178, 40.81268], [-73.822283, 40.812661], [-73.822134, 40.812366], [-73.822171, 40.812354], [-73.822271, 40.81254], [-73.822252, 40.812549], [-73.822309, 40.812658], [-73.822639, 40.812576], [-73.822726, 40.812505], [-73.823329, 40.812381], [-73.823451, 40.812324], [-73.823463, 40.812202], [-73.823474, 40.812191], [-73.823498, 40.812195], [-73.823523, 40.812223], [-73.823558, 40.812276], [-73.823721, 40.812261], [-73.824358, 40.812063], [-73.824536, 40.811987], [-73.824591, 40.811896], [-73.824584, 40.811818], [-73.824596, 40.81177], [-73.824711, 40.811699], [-73.824769, 40.811701], [-73.824794, 40.811719], [-73.824818, 40.811754], [-73.824831, 40.811808], [-73.824873, 40.811847], [-73.824941, 40.811857], [-73.82502, 40.811843], [-73.825058, 40.81183], [-73.824809, 40.811439], [-73.82483, 40.811432], [-73.824879, 40.81151], [-73.824928, 40.811537], [-73.824916, 40.811572], [-73.825077, 40.811823], [-73.825244, 40.811761], [-73.82493, 40.811337], [-73.824921, 40.81134], [-73.824879, 40.811273], [-73.824917, 40.811261], [-73.824963, 40.811319], [-73.824947, 40.811326], [-73.825267, 40.811752], [-73.825491, 40.811659], [-73.825208, 40.811224], [-73.825231, 40.81121], [-73.825513, 40.811649], [-73.825651, 40.811592], [-73.825409, 40.811162], [-73.825397, 40.811168], [-73.825325, 40.811038], [-73.825358, 40.811028], [-73.825672, 40.811585], [-73.825766, 40.811552], [-73.825597, 40.81124], [-73.825625, 40.811226], [-73.82559, 40.811168], [-73.825574, 40.811171], [-73.8255, 40.811028], [-73.825537, 40.811016], [-73.825623, 40.811154], [-73.825607, 40.811161], [-73.825639, 40.811217], [-73.825653, 40.811212], [-73.825716, 40.811327], [-73.825692, 40.811341], [-73.825813, 40.811534], [-73.825927, 40.811487], [-73.825767, 40.811216], [-73.825798, 40.811205], [-73.825956, 40.811474], [-73.826001, 40.811464], [-73.826042, 40.811449], [-73.826081, 40.81143], [-73.826115, 40.811406], [-73.826178, 40.811294], [-73.826236, 40.811283]]]]
    },
    "properties": {
      "neighbourhood": "Throgs Neck",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.09818, 40.610742], [-74.09427, 40.610806], [-74.090109, 40.609403], [-74.0924, 40.607072], [-74.09268, 40.605912], [-74.092609, 40.60323], [-74.092837, 40.601089], [-74.091779, 40.599239], [-74.09178, 40.598719], [-74.09272, 40.597464], [-74.093364, 40.597033], [-74.094276, 40.596449], [-74.09722, 40.595365], [-74.099796, 40.593871], [-74.10041, 40.593343], [-74.10083, 40.592632], [-74.10098, 40.591832], [-74.100931, 40.591033], [-74.100883, 40.590179], [-74.101864, 40.589], [-74.102079, 40.588741], [-74.104549, 40.5865], [-74.107974, 40.583715], [-74.109248, 40.582679], [-74.111276, 40.581792], [-74.112987, 40.580819], [-74.114235, 40.579738], [-74.114826, 40.579181], [-74.115423, 40.578631], [-74.117021, 40.578197], [-74.117587, 40.577581], [-74.118289, 40.578192], [-74.118891, 40.580478], [-74.119212, 40.581166], [-74.119227, 40.581564], [-74.120364, 40.582379], [-74.120973, 40.583206], [-74.12311, 40.585104], [-74.120203, 40.588158], [-74.120587, 40.588447], [-74.116477, 40.594595], [-74.115954, 40.595761], [-74.115429, 40.596107], [-74.114138, 40.596547], [-74.113251, 40.596103], [-74.11131, 40.597057], [-74.111331, 40.59815], [-74.114871, 40.602137], [-74.11538, 40.603984], [-74.115791, 40.606862], [-74.116563, 40.609404], [-74.116756, 40.610814], [-74.11438, 40.611193], [-74.11125, 40.610759], [-74.10998, 40.610456], [-74.109783, 40.610254], [-74.10667, 40.610418], [-74.10535, 40.610215], [-74.097658, 40.610503], [-74.09818, 40.610742]]]]
    },
    "properties": {
      "neighbourhood": "Todt Hill",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.235112, 40.520917], [-74.233537, 40.52064], [-74.231597, 40.520879], [-74.229299, 40.519984], [-74.22691, 40.519172], [-74.226634, 40.517251], [-74.222903, 40.508936], [-74.223215, 40.508659], [-74.213735, 40.51041], [-74.211813, 40.51103], [-74.210435, 40.511736], [-74.210435, 40.511736], [-74.210404, 40.511652], [-74.210085, 40.51079], [-74.210155, 40.510364], [-74.210519, 40.509991], [-74.211655, 40.508369], [-74.211792, 40.508173], [-74.211915, 40.508064], [-74.213382, 40.506766], [-74.213531, 40.506397], [-74.213855, 40.506607], [-74.214343, 40.506519], [-74.215108, 40.50606], [-74.215912, 40.505371], [-74.217582, 40.503341], [-74.217946, 40.50336], [-74.21977, 40.502743], [-74.223047, 40.502478], [-74.225002, 40.50177], [-74.227294, 40.502297], [-74.229716, 40.502086], [-74.230339, 40.501804], [-74.230554, 40.501947], [-74.231244, 40.501827], [-74.233599, 40.500913], [-74.235265, 40.500606], [-74.236351, 40.500126], [-74.236428, 40.500077], [-74.236473, 40.500113], [-74.236788, 40.500001], [-74.237689, 40.499173], [-74.237668, 40.499123], [-74.237748, 40.499101], [-74.237771, 40.49918], [-74.237987, 40.499166], [-74.238513, 40.498896], [-74.239849, 40.497583], [-74.244328, 40.497547], [-74.245489, 40.497045], [-74.246761, 40.496134], [-74.247916, 40.496185], [-74.248027, 40.49619], [-74.248135, 40.496226], [-74.249172, 40.496567], [-74.250855, 40.498006], [-74.251168, 40.498993], [-74.2521, 40.499416], [-74.2526, 40.499643], [-74.253161, 40.500125], [-74.253846, 40.501636], [-74.254088, 40.501933], [-74.254258, 40.502142], [-74.254274, 40.502161], [-74.25531, 40.504136], [-74.255309, 40.504958], [-74.255307, 40.506536], [-74.255591, 40.507713], [-74.255453, 40.508033], [-74.255248, 40.508243], [-74.255043, 40.508397], [-74.254899, 40.508434], [-74.254629, 40.508675], [-74.254703, 40.508716], [-74.254902, 40.508764], [-74.254904, 40.508756], [-74.254981, 40.508771], [-74.254973, 40.508806], [-74.254896, 40.508787], [-74.2549, 40.508777], [-74.254715, 40.508736], [-74.254684, 40.508724], [-74.254619, 40.508684], [-74.254487, 40.508804], [-74.254345, 40.508792], [-74.25412, 40.508991], [-74.2541, 40.508983], [-74.25405, 40.508953], [-74.253998, 40.50897], [-74.253977, 40.50902], [-74.254111, 40.509167], [-74.254038, 40.509253], [-74.254307, 40.509376], [-74.254349, 40.509329], [-74.254389, 40.509344], [-74.254315, 40.509414], [-74.254282, 40.509397], [-74.254291, 40.509392], [-74.254021, 40.509273], [-74.253892, 40.509424], [-74.253734, 40.509377], [-74.253689, 40.509426], [-74.253705, 40.509434], [-74.253676, 40.509467], [-74.254568, 40.50988], [-74.254623, 40.509815], [-74.254647, 40.509826], [-74.254526, 40.509973], [-74.2545, 40.509963], [-74.254553, 40.509896], [-74.253648, 40.509471], [-74.253316, 40.509862], [-74.253283, 40.51], [-74.25315, 40.510388], [-74.253127, 40.510713], [-74.253064, 40.511055], [-74.25326, 40.511079], [-74.253258, 40.511089], [-74.253063, 40.511068], [-74.253038, 40.511136], [-74.253008, 40.511194], [-74.25302, 40.511285], [-74.253082, 40.511393], [-74.253434, 40.511637], [-74.253486, 40.511595], [-74.253493, 40.511599], [-74.253459, 40.51163], [-74.253487, 40.511649], [-74.253524, 40.511619], [-74.253532, 40.511623], [-74.253495, 40.511656], [-74.253527, 40.511678], [-74.253502, 40.511701], [-74.253093, 40.511411], [-74.253036, 40.511433], [-74.253, 40.511832], [-74.253019, 40.511938], [-74.253076, 40.511998], [-74.25309, 40.512017], [-74.2531, 40.512037], [-74.253105, 40.512059], [-74.253104, 40.51208], [-74.253099, 40.512102], [-74.25309, 40.512122], [-74.253075, 40.512141], [-74.251952, 40.512997], [-74.252144, 40.513553], [-74.252126, 40.51371], [-74.251353, 40.514393], [-74.250545, 40.514717], [-74.25034, 40.514897], [-74.250193, 40.515013], [-74.250113, 40.515031], [-74.250046, 40.515109], [-74.25004, 40.515182], [-74.250181, 40.515328], [-74.250171, 40.515334], [-74.250281, 40.515441], [-74.250274, 40.515446], [-74.250286, 40.515457], [-74.250293, 40.515453], [-74.250555, 40.515716], [-74.250455, 40.515772], [-74.250196, 40.51551], [-74.250275, 40.515463], [-74.250262, 40.515451], [-74.250252, 40.515455], [-74.250156, 40.515361], [-74.249888, 40.515522], [-74.250476, 40.516117], [-74.250535, 40.516086], [-74.25056, 40.516107], [-74.250415, 40.516188], [-74.250395, 40.516164], [-74.250451, 40.516129], [-74.249844, 40.515518], [-74.249357, 40.515006], [-74.249277, 40.51505], [-74.249357, 40.515129], [-74.249338, 40.515141], [-74.249256, 40.515061], [-74.249215, 40.515085], [-74.249445, 40.515326], [-74.249525, 40.51541], [-74.249632, 40.515545], [-74.249623, 40.515575], [-74.2495, 40.515646], [-74.249533, 40.515682], [-74.249514, 40.515694], [-74.249942, 40.516137], [-74.249899, 40.51616], [-74.249482, 40.515717], [-74.249464, 40.515725], [-74.249431, 40.515688], [-74.249056, 40.515904], [-74.249031, 40.515881], [-74.248648, 40.516113], [-74.248716, 40.51617], [-74.248707, 40.516176], [-74.248843, 40.516306], [-74.24883, 40.516313], [-74.248682, 40.516182], [-74.248625, 40.516216], [-74.24876, 40.516356], [-74.248737, 40.516365], [-74.248546, 40.51617], [-74.24855, 40.516196], [-74.248512, 40.516226], [-74.248601, 40.516313], [-74.248284, 40.516487], [-74.248946, 40.517195], [-74.249378, 40.516951], [-74.249408, 40.516981], [-74.248514, 40.517476], [-74.248487, 40.51745], [-74.248919, 40.517208], [-74.247518, 40.515736], [-74.24693, 40.516066], [-74.246871, 40.516037], [-74.246595, 40.516072], [-74.24644, 40.515965], [-74.246129, 40.516137], [-74.246301, 40.516141], [-74.24653, 40.516378], [-74.246599, 40.516358], [-74.24675, 40.516496], [-74.246593, 40.516587], [-74.24651, 40.51667], [-74.246698, 40.516879], [-74.246693, 40.516882], [-74.246707, 40.516895], [-74.24671, 40.516894], [-74.246996, 40.517182], [-74.246969, 40.517198], [-74.246683, 40.516907], [-74.246695, 40.516901], [-74.246682, 40.516885], [-74.246665, 40.516892], [-74.246479, 40.516687], [-74.246377, 40.516739], [-74.246564, 40.516946], [-74.246537, 40.51696], [-74.24635, 40.516753], [-74.245982, 40.516943], [-74.245953, 40.516932], [-74.245209, 40.51729], [-74.24567, 40.51779], [-74.245599, 40.517857], [-74.245713, 40.517984], [-74.245664, 40.518049], [-74.245635, 40.518076], [-74.245569, 40.51809], [-74.245527, 40.518081], [-74.245491, 40.51806], [-74.245306, 40.518029], [-74.245088, 40.518067], [-74.244298, 40.518515], [-74.243652, 40.518295], [-74.242624, 40.518319], [-74.242325, 40.518327], [-74.24126, 40.51918], [-74.241031, 40.519543], [-74.240491, 40.519192], [-74.239823, 40.520091], [-74.23946, 40.521279], [-74.235112, 40.520917]]]]
    },
    "properties": {
      "neighbourhood": "Tottenville",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.897085, 40.851972], [-73.895563, 40.851469], [-73.884486, 40.845995], [-73.884465, 40.845985], [-73.885192, 40.845195], [-73.88601, 40.840585], [-73.886549, 40.839332], [-73.887247, 40.838151], [-73.888437, 40.838591], [-73.888395, 40.83884], [-73.888485, 40.839093], [-73.888624, 40.839164], [-73.889393, 40.83946], [-73.890166, 40.839912], [-73.896566, 40.843664], [-73.897569, 40.843848], [-73.8975, 40.844016], [-73.90084, 40.844395], [-73.902706, 40.844568], [-73.902654, 40.844753], [-73.900097, 40.849209], [-73.898104, 40.852308], [-73.897087, 40.851969], [-73.897085, 40.851972]]]]
    },
    "properties": {
      "neighbourhood": "Tremont",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.001886, 40.719395], [-74.003533, 40.717449], [-74.008614, 40.711372], [-74.013754, 40.71369], [-74.01244, 40.719058], [-74.013036, 40.719086], [-74.013031, 40.719131], [-74.012961, 40.719484], [-74.012914, 40.719708], [-74.012945, 40.719713], [-74.012946, 40.719697], [-74.013026, 40.719709], [-74.013024, 40.719726], [-74.013445, 40.719782], [-74.013447, 40.719782], [-74.013399, 40.720032], [-74.01639, 40.720379], [-74.016315, 40.720739], [-74.013963, 40.720464], [-74.012966, 40.720329], [-74.012964, 40.720335], [-74.012869, 40.720834], [-74.013239, 40.720888], [-74.015695, 40.72122], [-74.015626, 40.721551], [-74.013138, 40.721251], [-74.01308, 40.721546], [-74.013044, 40.721545], [-74.01301, 40.72156], [-74.012544, 40.721504], [-74.01254, 40.721503], [-74.012539, 40.721503], [-74.012504, 40.721672], [-74.012492, 40.72178], [-74.011965, 40.724332], [-74.011376, 40.72428], [-74.01106, 40.725744], [-74.008302, 40.723977], [-74.001886, 40.719395]]]]
    },
    "properties": {
      "neighbourhood": "Tribeca",
      "neighbourhood_group": "Manhattan"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.991898, 40.709541], [-73.992996, 40.709359], [-73.99374, 40.709246], [-73.994141, 40.709233], [-73.994378, 40.709193], [-73.994579, 40.709131], [-73.995377, 40.709006], [-73.997283, 40.708732], [-73.998084, 40.70851], [-73.99909, 40.707975], [-73.999102, 40.707968], [-73.999102, 40.707968], [-74.003337, 40.711236], [-74.002363, 40.711591], [-73.99777, 40.711971], [-73.997994, 40.712722], [-73.992623, 40.713168], [-73.992457, 40.711754], [-73.991898, 40.709541]]]]
    },
    "properties": {
      "neighbourhood": "Two Bridges",
      "neighbourhood_group": "Manhattan"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.97905, 40.705967], [-73.979058, 40.705953], [-73.978929, 40.705932], [-73.978931, 40.705925], [-73.979061, 40.705946], [-73.979124, 40.70581], [-73.979245, 40.705548], [-73.979328, 40.704746], [-73.98022, 40.703063], [-73.98065, 40.701561], [-73.980455, 40.700852], [-73.980544, 40.698246], [-73.985593, 40.698491], [-73.986784, 40.70112], [-73.986748, 40.701526], [-73.98476, 40.701446], [-73.984583, 40.704344], [-73.984535, 40.70552], [-73.983438, 40.705644], [-73.983407, 40.705466], [-73.983368, 40.705461], [-73.983264, 40.705485], [-73.983086, 40.705477], [-73.98309, 40.705512], [-73.982811, 40.70556], [-73.982742, 40.705572], [-73.982749, 40.705533], [-73.98246, 40.705509], [-73.982423, 40.705822], [-73.981024, 40.705899], [-73.980909, 40.705908], [-73.980741, 40.705855], [-73.98022, 40.705851], [-73.980237, 40.705763], [-73.979559, 40.705744], [-73.979556, 40.70577], [-73.979329, 40.705765], [-73.97928, 40.705789], [-73.979273, 40.705917], [-73.979214, 40.705907], [-73.979183, 40.705965], [-73.97905, 40.705967]]]]
    },
    "properties": {
      "neighbourhood": "Vinegar Hill",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.900866, 40.757674], [-73.90014, 40.75615], [-73.898697, 40.75411], [-73.897699, 40.752365], [-73.89728, 40.750418], [-73.896938, 40.750501], [-73.894338, 40.74658], [-73.891457, 40.74687], [-73.891095, 40.74504], [-73.890716, 40.743128], [-73.890875, 40.743106], [-73.890547, 40.741513], [-73.890212, 40.74077], [-73.889898, 40.740074], [-73.889742, 40.739115], [-73.890157, 40.739192], [-73.89016, 40.739199], [-73.891471, 40.739437], [-73.89866, 40.740773], [-73.899296, 40.740854], [-73.900509, 40.741074], [-73.907506, 40.741862], [-73.907506, 40.741862], [-73.912822, 40.742486], [-73.912131, 40.745887], [-73.912449, 40.74592], [-73.911642, 40.748685], [-73.91189, 40.748715], [-73.911625, 40.74998], [-73.90971, 40.749755], [-73.909483, 40.75056], [-73.909556, 40.751037], [-73.91058, 40.752984], [-73.913519, 40.753496], [-73.911764, 40.755573], [-73.911568, 40.75548], [-73.911294, 40.755814], [-73.910618, 40.755476], [-73.90907, 40.757565], [-73.907828, 40.756999], [-73.90737, 40.756988], [-73.900866, 40.757674]]]]
    },
    "properties": {
      "neighbourhood": "Woodside",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.838808, 40.840763], [-73.838657, 40.838366], [-73.838549, 40.835026], [-73.838231, 40.833748], [-73.83811, 40.83201], [-73.837465, 40.829865], [-73.837108, 40.828817], [-73.838146, 40.828627], [-73.84025, 40.828236], [-73.842008, 40.827978], [-73.84222, 40.828342], [-73.842292, 40.8287], [-73.842331, 40.829074], [-73.84223, 40.829831], [-73.842212, 40.829878], [-73.841886, 40.830713], [-73.841794, 40.830796], [-73.840846, 40.831749], [-73.839434, 40.832983], [-73.839181, 40.833156], [-73.838852, 40.833691], [-73.839059, 40.835444], [-73.839047, 40.835582], [-73.839092, 40.835724], [-73.839234, 40.836741], [-73.839186, 40.837107], [-73.839263, 40.837205], [-73.839221, 40.837392], [-73.839287, 40.837832], [-73.839287, 40.838042], [-73.839213, 40.838248], [-73.83916, 40.83846], [-73.839193, 40.838714], [-73.839362, 40.838802], [-73.83959, 40.838798], [-73.83972, 40.839565], [-73.840303, 40.839524], [-73.840162, 40.839066], [-73.840109, 40.838852], [-73.840031, 40.838858], [-73.840044, 40.838944], [-73.840028, 40.838948], [-73.84001, 40.838838], [-73.840099, 40.838827], [-73.840069, 40.838752], [-73.840107, 40.838628], [-73.840135, 40.838614], [-73.839956, 40.838287], [-73.840003, 40.838252], [-73.839933, 40.837902], [-73.83992, 40.837821], [-73.839851, 40.837822], [-73.839856, 40.837905], [-73.839842, 40.837905], [-73.839828, 40.837687], [-73.839847, 40.837689], [-73.839849, 40.837788], [-73.839916, 40.837783], [-73.83995, 40.837584], [-73.839887, 40.836991], [-73.839842, 40.836885], [-73.839834, 40.836766], [-73.839859, 40.836678], [-73.839838, 40.83642], [-73.839842, 40.836116], [-73.839755, 40.836132], [-73.839779, 40.836296], [-73.839759, 40.836296], [-73.839726, 40.836134], [-73.8397, 40.836136], [-73.839693, 40.836105], [-73.839683, 40.836105], [-73.839682, 40.836132], [-73.839669, 40.836131], [-73.839659, 40.836067], [-73.839672, 40.836067], [-73.839675, 40.836077], [-73.839826, 40.836054], [-73.839822, 40.836017], [-73.839715, 40.836031], [-73.839712, 40.836017], [-73.839822, 40.836003], [-73.839818, 40.835959], [-73.839725, 40.835965], [-73.839725, 40.835954], [-73.839814, 40.835944], [-73.83981, 40.83589], [-73.839759, 40.8359], [-73.839758, 40.835888], [-73.83981, 40.835874], [-73.8398, 40.835811], [-73.839652, 40.835829], [-73.839696, 40.836063], [-73.83968, 40.836063], [-73.839601, 40.835671], [-73.839617, 40.835668], [-73.839656, 40.835802], [-73.839796, 40.835788], [-73.83979, 40.835745], [-73.839661, 40.835757], [-73.839658, 40.835743], [-73.839792, 40.835726], [-73.839779, 40.835676], [-73.839686, 40.83569], [-73.839682, 40.835676], [-73.839777, 40.835659], [-73.839775, 40.835643], [-73.839795, 40.835619], [-73.839674, 40.835601], [-73.839615, 40.835611], [-73.839615, 40.835592], [-73.839699, 40.835575], [-73.839687, 40.835509], [-73.8396, 40.835518], [-73.839596, 40.8355], [-73.839668, 40.835493], [-73.839665, 40.835464], [-73.839578, 40.835467], [-73.839578, 40.83545], [-73.839665, 40.835443], [-73.839653, 40.835382], [-73.839569, 40.835396], [-73.839556, 40.835377], [-73.839637, 40.835363], [-73.839631, 40.835318], [-73.839547, 40.835325], [-73.839544, 40.835308], [-73.839616, 40.835304], [-73.839603, 40.835242], [-73.839535, 40.835256], [-73.839532, 40.83524], [-73.839619, 40.835226], [-73.839607, 40.835176], [-73.83952, 40.835186], [-73.839513, 40.835174], [-73.839604, 40.835157], [-73.839585, 40.835105], [-73.83951, 40.835115], [-73.839507, 40.835101], [-73.839594, 40.835089], [-73.839576, 40.835032], [-73.839498, 40.835042], [-73.839498, 40.835027], [-73.839458, 40.835032], [-73.839458, 40.835006], [-73.839501, 40.835006], [-73.839501, 40.83499], [-73.839567, 40.83498], [-73.839557, 40.834928], [-73.839483, 40.834931], [-73.839483, 40.834919], [-73.839551, 40.834907], [-73.839548, 40.834862], [-73.839477, 40.834869], [-73.839461, 40.834848], [-73.83962, 40.834829], [-73.83962, 40.834801], [-73.839477, 40.834817], [-73.839474, 40.834803], [-73.839614, 40.834777], [-73.839601, 40.834747], [-73.839471, 40.834763], [-73.839465, 40.834749], [-73.839605, 40.83473], [-73.839595, 40.834702], [-73.839465, 40.834721], [-73.839443, 40.834647], [-73.839415, 40.83465], [-73.839412, 40.8346], [-73.839487, 40.834591], [-73.839484, 40.834574], [-73.839593, 40.83456], [-73.839531, 40.834369], [-73.839591, 40.834042], [-73.83992, 40.833321], [-73.840182, 40.833043], [-73.840422, 40.832866], [-73.841817, 40.831726], [-73.842345, 40.8313], [-73.842703, 40.830745], [-73.842937, 40.830121], [-73.843021, 40.829962], [-73.843053, 40.829762], [-73.843107, 40.829794], [-73.843036, 40.829307], [-73.843034, 40.828935], [-73.842722, 40.828276], [-73.842565, 40.827739], [-73.842482, 40.827478], [-73.842317, 40.827185], [-73.843585, 40.827003], [-73.842898, 40.824083], [-73.857202, 40.822155], [-73.858264, 40.822015], [-73.85879, 40.824209], [-73.862702, 40.832979], [-73.860851, 40.833614], [-73.860344, 40.833294], [-73.859056, 40.833413], [-73.851663, 40.834201], [-73.848459, 40.834511], [-73.840028, 40.835663], [-73.840573, 40.836774], [-73.841566, 40.838317], [-73.840886, 40.838902], [-73.841625, 40.839399], [-73.841, 40.839908], [-73.841104, 40.840611], [-73.839364, 40.840878], [-73.838808, 40.840763]]]]
    },
    "properties": {
      "neighbourhood": "Unionport",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.90108, 40.862756], [-73.902545, 40.860578], [-73.90557, 40.855787], [-73.904727, 40.85537], [-73.906424, 40.853501], [-73.907333, 40.853816], [-73.90943, 40.85396], [-73.910072, 40.854469], [-73.9112, 40.854822], [-73.912273, 40.853759], [-73.914291, 40.853914], [-73.914675, 40.853943], [-73.915, 40.854078], [-73.916539, 40.854715], [-73.916935, 40.854609], [-73.91679, 40.854873], [-73.9168, 40.855665], [-73.917364, 40.856095], [-73.917592, 40.856812], [-73.919045, 40.857379], [-73.91776, 40.858708], [-73.917207, 40.858929], [-73.91669, 40.859497], [-73.916081, 40.860167], [-73.915805, 40.86047], [-73.915762, 40.860645], [-73.914875, 40.861692], [-73.914809, 40.861714], [-73.914723, 40.861853], [-73.914818, 40.861899], [-73.914771, 40.861946], [-73.914743, 40.861934], [-73.9147, 40.861953], [-73.914634, 40.86202], [-73.914611, 40.862053], [-73.914621, 40.862097], [-73.914257, 40.862486], [-73.913109, 40.861996], [-73.910756, 40.861651], [-73.909867, 40.86231], [-73.90904, 40.862679], [-73.907586, 40.862816], [-73.90108, 40.862756]]]]
    },
    "properties": {
      "neighbourhood": "University Heights",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.943592, 40.782748], [-73.943648, 40.782656], [-73.943871, 40.781273], [-73.943459, 40.780048], [-73.943214, 40.779318], [-73.943004, 40.779639], [-73.942716, 40.779544], [-73.942712, 40.779215], [-73.942536, 40.779091], [-73.942893, 40.778614], [-73.942438, 40.777315], [-73.942245, 40.777104], [-73.942074, 40.776918], [-73.942003, 40.776185], [-73.94262, 40.775181], [-73.942856, 40.774797], [-73.94293, 40.774676], [-73.945871, 40.771692], [-73.946619, 40.770933], [-73.948664, 40.768858], [-73.95007, 40.767025], [-73.954418, 40.762184], [-73.956508, 40.760285], [-73.958788, 40.758213], [-73.973015, 40.764279], [-73.95576, 40.787907], [-73.944023, 40.78296], [-73.943592, 40.782748]]]]
    },
    "properties": {
      "neighbourhood": "Upper East Side",
      "neighbourhood_group": "Manhattan"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.958358, 40.800369], [-73.981439, 40.768763], [-73.981549, 40.768559], [-73.981565, 40.768307], [-73.981754, 40.7684], [-73.982039, 40.768388], [-73.982268, 40.768299], [-73.982385, 40.768097], [-73.982321, 40.767894], [-73.982156, 40.767756], [-73.982389, 40.767411], [-73.99365, 40.772146], [-73.994159, 40.772493], [-73.993831, 40.772932], [-73.993891, 40.772955], [-73.993963, 40.772945], [-73.994013, 40.772883], [-73.994122, 40.772924], [-73.994137, 40.772902], [-73.994301, 40.77297], [-73.994282, 40.772994], [-73.994377, 40.77304], [-73.994294, 40.773156], [-73.995023, 40.773481], [-73.995089, 40.773388], [-73.995014, 40.773358], [-73.99505, 40.773297], [-73.996241, 40.77379], [-73.996196, 40.773852], [-73.996099, 40.773952], [-73.996179, 40.773987], [-73.996095, 40.774086], [-73.995572, 40.773871], [-73.994017, 40.773214], [-73.993936, 40.77318], [-73.993862, 40.77327], [-73.993822, 40.773382], [-73.993767, 40.773484], [-73.993698, 40.773562], [-73.993358, 40.773927], [-73.992623, 40.774974], [-73.992578, 40.774956], [-73.992528, 40.775002], [-73.99247, 40.775024], [-73.992404, 40.775018], [-73.992267, 40.775116], [-73.992178, 40.775279], [-73.992059, 40.775498], [-73.992125, 40.775509], [-73.992227, 40.775482], [-73.992329, 40.775469], [-73.992362, 40.775502], [-73.992386, 40.775557], [-73.992088, 40.775984], [-73.990927, 40.777567], [-73.990396, 40.777585], [-73.989461, 40.778875], [-73.989176, 40.779288], [-73.988869, 40.779693], [-73.988872, 40.779714], [-73.989219, 40.779698], [-73.989278, 40.779723], [-73.989409, 40.779738], [-73.989499, 40.779725], [-73.989596, 40.779698], [-73.98968, 40.779678], [-73.989753, 40.779671], [-73.989842, 40.779681], [-73.99004, 40.779708], [-73.990138, 40.7797], [-73.990336, 40.779662], [-73.990431, 40.779665], [-73.990622, 40.779676], [-73.990745, 40.779671], [-73.990872, 40.779646], [-73.990962, 40.77964], [-73.991057, 40.779652], [-73.991157, 40.77967], [-73.991243, 40.779671], [-73.991255, 40.779651], [-73.991295, 40.77963], [-73.991322, 40.779632], [-73.991359, 40.779586], [-73.991551, 40.779575], [-73.99142, 40.779755], [-73.988886, 40.779879], [-73.98894, 40.779956], [-73.988926, 40.780059], [-73.988912, 40.780096], [-73.988919, 40.780226], [-73.988381, 40.780981], [-73.988232, 40.781233], [-73.98821, 40.781225], [-73.98814, 40.781409], [-73.988041, 40.781586], [-73.9881, 40.781603], [-73.988076, 40.781651], [-73.988018, 40.781634], [-73.987961, 40.781771], [-73.985466, 40.785361], [-73.986173, 40.786068], [-73.986456, 40.785919], [-73.987072, 40.78519], [-73.987119, 40.78521], [-73.986498, 40.785951], [-73.986165, 40.786122], [-73.986128, 40.786239], [-73.986071, 40.786241], [-73.986027, 40.786229], [-73.986098, 40.786058], [-73.985429, 40.785414], [-73.985081, 40.785922], [-73.985199, 40.785967], [-73.985171, 40.786013], [-73.985216, 40.786031], [-73.985255, 40.785976], [-73.985243, 40.785973], [-73.98525, 40.785963], [-73.985282, 40.785979], [-73.98524, 40.786036], [-73.985684, 40.786222], [-73.985718, 40.786176], [-73.985766, 40.786196], [-73.985683, 40.78631], [-73.985636, 40.78629], [-73.985671, 40.786243], [-73.985205, 40.786048], [-73.985211, 40.78604], [-73.985163, 40.786021], [-73.985132, 40.78606], [-73.985017, 40.786014], [-73.984655, 40.786535], [-73.985744, 40.78657], [-73.985892, 40.786427], [-73.985943, 40.786453], [-73.98595, 40.786487], [-73.985812, 40.786617], [-73.985135, 40.786588], [-73.984619, 40.786586], [-73.981952, 40.790394], [-73.972823, 40.803428], [-73.971037, 40.805918], [-73.966701, 40.804169], [-73.959647, 40.801156], [-73.958509, 40.800682], [-73.958533, 40.800491], [-73.958358, 40.800369]]]]
    },
    "properties": {
      "neighbourhood": "Upper West Side",
      "neighbourhood_group": "Manhattan"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.980061, 40.660753], [-73.979878, 40.660711], [-73.979679, 40.660747], [-73.979563, 40.660841], [-73.97448, 40.658339], [-73.974044, 40.657347], [-73.972329, 40.65138], [-73.972631, 40.651246], [-73.972691, 40.65096], [-73.972452, 40.650694], [-73.972093, 40.650673], [-73.971397, 40.6482], [-73.97324, 40.64765], [-73.975164, 40.647864], [-73.979089, 40.647428], [-73.97925, 40.648123], [-73.98036, 40.647694], [-73.9818, 40.655246], [-73.988428, 40.65925], [-73.987209, 40.6604], [-73.985077, 40.659021], [-73.983902, 40.660142], [-73.983224, 40.660994], [-73.98091, 40.659775], [-73.980061, 40.660753]]]]
    },
    "properties": {
      "neighbourhood": "Windsor Terrace",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.838392, 40.894067], [-73.83841, 40.894061], [-73.84629, 40.892324], [-73.845232, 40.889551], [-73.845906, 40.889741], [-73.847444, 40.886978], [-73.850496, 40.882424], [-73.850651, 40.882192], [-73.86164, 40.885693], [-73.8662, 40.88714], [-73.86088, 40.896553], [-73.861113, 40.89759], [-73.85926, 40.900338], [-73.859468, 40.900517], [-73.859216, 40.900834], [-73.859077, 40.901008], [-73.859236, 40.901099], [-73.85942, 40.901393], [-73.859377, 40.901565], [-73.859206, 40.901548], [-73.859027, 40.901445], [-73.858864, 40.901712], [-73.859362, 40.901896], [-73.859464, 40.901934], [-73.859489, 40.902044], [-73.859529, 40.902223], [-73.859579, 40.902441], [-73.859264, 40.902669], [-73.859105, 40.902644], [-73.858734, 40.902293], [-73.858728, 40.902289], [-73.858726, 40.902289], [-73.858401, 40.902213], [-73.85816, 40.902306], [-73.858161, 40.902398], [-73.858165, 40.902596], [-73.857969, 40.902851], [-73.857952, 40.902854], [-73.857747, 40.902788], [-73.85756, 40.902918], [-73.857111, 40.90365], [-73.857172, 40.904082], [-73.857056, 40.904404], [-73.856992, 40.904584], [-73.857102, 40.904708], [-73.857186, 40.904692], [-73.857359, 40.904731], [-73.857435, 40.904842], [-73.857371, 40.904951], [-73.857178, 40.905287], [-73.85705, 40.905292], [-73.856654, 40.905055], [-73.856361, 40.905102], [-73.85601, 40.905306], [-73.856012, 40.905482], [-73.856355, 40.905528], [-73.856503, 40.905564], [-73.856924, 40.905974], [-73.85681, 40.906156], [-73.856557, 40.906262], [-73.855956, 40.906219], [-73.855805, 40.906264], [-73.855527, 40.90638], [-73.855138, 40.906867], [-73.854238, 40.907033], [-73.85381, 40.907684], [-73.853741, 40.907788], [-73.853834, 40.907974], [-73.854229, 40.908019], [-73.854711, 40.908006], [-73.854911, 40.908355], [-73.854589, 40.908939], [-73.853916, 40.909466], [-73.853601, 40.909607], [-73.853354, 40.910043], [-73.852956, 40.910353], [-73.85277, 40.910406], [-73.852585, 40.910311], [-73.85266, 40.910015], [-73.852457, 40.909861], [-73.852275, 40.909854], [-73.851783, 40.910161], [-73.851492, 40.910272], [-73.851448, 40.91045], [-73.851071, 40.910372], [-73.853475, 40.90753], [-73.853475, 40.90753], [-73.850921, 40.906616], [-73.850173, 40.907508], [-73.847226, 40.90622], [-73.844819, 40.90553], [-73.844893, 40.904191], [-73.841387, 40.904173], [-73.841063, 40.903214], [-73.84102, 40.902814], [-73.84068, 40.901517], [-73.840045, 40.900575], [-73.839246, 40.899501], [-73.839217, 40.899427], [-73.839195, 40.899351], [-73.839178, 40.899274], [-73.839168, 40.899197], [-73.839164, 40.899119], [-73.839166, 40.899041], [-73.839174, 40.898964], [-73.839189, 40.898887], [-73.839209, 40.898816], [-73.839236, 40.898736], [-73.839664, 40.897886], [-73.839648, 40.897331], [-73.838392, 40.894067]]]]
    },
    "properties": {
      "neighbourhood": "Wakefield",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.922298, 40.855599], [-73.924069, 40.853319], [-73.924441, 40.85284], [-73.927787, 40.848017], [-73.929719, 40.845232], [-73.930543, 40.843344], [-73.930895, 40.842538], [-73.934915, 40.835231], [-73.935157, 40.832682], [-73.934986, 40.831369], [-73.934871, 40.830482], [-73.934568, 40.828149], [-73.940346, 40.830458], [-73.948905, 40.834066], [-73.949342, 40.833982], [-73.95022, 40.834305], [-73.950155, 40.834397], [-73.94998, 40.834876], [-73.949889, 40.835285], [-73.949743, 40.835628], [-73.949739, 40.835706], [-73.949712, 40.835775], [-73.949693, 40.835863], [-73.949683, 40.835922], [-73.949691, 40.836074], [-73.949686, 40.83611], [-73.949645, 40.83622], [-73.949621, 40.836232], [-73.949601, 40.836305], [-73.949583, 40.836484], [-73.949546, 40.836604], [-73.94951, 40.836665], [-73.949457, 40.836706], [-73.949389, 40.836716], [-73.949328, 40.836719], [-73.94929, 40.836729], [-73.949283, 40.836741], [-73.949284, 40.836754], [-73.949293, 40.836764], [-73.949303, 40.836769], [-73.949377, 40.83678], [-73.949442, 40.836792], [-73.949463, 40.836798], [-73.949482, 40.836806], [-73.949497, 40.836815], [-73.949511, 40.836826], [-73.949522, 40.836838], [-73.949531, 40.836851], [-73.949537, 40.836865], [-73.94954, 40.83688], [-73.949513, 40.836952], [-73.949181, 40.837864], [-73.949152, 40.837934], [-73.949005, 40.838426], [-73.948929, 40.838643], [-73.94884, 40.838876], [-73.948758, 40.83902], [-73.948561, 40.839565], [-73.948496, 40.839668], [-73.948429, 40.839861], [-73.948334, 40.839997], [-73.948234, 40.840118], [-73.948075, 40.840466], [-73.947921, 40.840758], [-73.947709, 40.841264], [-73.947606, 40.84141], [-73.947383, 40.841941], [-73.947274, 40.842052], [-73.94721, 40.842101], [-73.947168, 40.842159], [-73.947134, 40.842259], [-73.947121, 40.842286], [-73.947107, 40.842307], [-73.94696, 40.84254], [-73.946935, 40.842619], [-73.946788, 40.842815], [-73.946755, 40.842888], [-73.94671, 40.842944], [-73.946616, 40.84302], [-73.946459, 40.843254], [-73.946369, 40.843455], [-73.946124, 40.843892], [-73.946119, 40.844005], [-73.946097, 40.844055], [-73.946094, 40.844097], [-73.946114, 40.844196], [-73.946117, 40.844225], [-73.946093, 40.844291], [-73.946105, 40.84435], [-73.946084, 40.844468], [-73.946091, 40.844499], [-73.946079, 40.844598], [-73.946109, 40.844859], [-73.946123, 40.84488], [-73.946128, 40.844912], [-73.946147, 40.84494], [-73.94616, 40.84503], [-73.946161, 40.845126], [-73.946223, 40.845259], [-73.946211, 40.845334], [-73.946172, 40.845393], [-73.946207, 40.845462], [-73.946231, 40.845577], [-73.946277, 40.845691], [-73.946308, 40.845741], [-73.946439, 40.845886], [-73.946466, 40.845881], [-73.94648, 40.84592], [-73.946445, 40.845921], [-73.946517, 40.845995], [-73.946504, 40.846028], [-73.946456, 40.846058], [-73.946426, 40.846063], [-73.946348, 40.846156], [-73.946351, 40.84624], [-73.946474, 40.846529], [-73.946517, 40.846593], [-73.946641, 40.846685], [-73.946718, 40.846825], [-73.94679, 40.846997], [-73.946824, 40.847134], [-73.946809, 40.847288], [-73.946782, 40.847353], [-73.946699, 40.847497], [-73.946686, 40.847728], [-73.946656, 40.847883], [-73.946623, 40.848146], [-73.946619, 40.848278], [-73.946644, 40.848399], [-73.946651, 40.8485], [-73.94665, 40.848668], [-73.946679, 40.848837], [-73.946636, 40.848912], [-73.946839, 40.849383], [-73.946855, 40.849428], [-73.946967, 40.849815], [-73.947013, 40.85], [-73.947028, 40.850042], [-73.94702, 40.850094], [-73.947044, 40.850255], [-73.946998, 40.850398], [-73.946964, 40.850466], [-73.946926, 40.850528], [-73.946516, 40.850968], [-73.946502, 40.850976], [-73.946472, 40.850985], [-73.946442, 40.850988], [-73.946412, 40.850985], [-73.946372, 40.85097], [-73.946339, 40.850948], [-73.946321, 40.850923], [-73.946329, 40.850904], [-73.946352, 40.850893], [-73.946352, 40.85087], [-73.946338, 40.850853], [-73.946327, 40.850846], [-73.946316, 40.850839], [-73.946297, 40.850833], [-73.946275, 40.850841], [-73.946244, 40.850885], [-73.946198, 40.850906], [-73.946173, 40.850958], [-73.946196, 40.850974], [-73.946201, 40.851031], [-73.946186, 40.851031], [-73.946172, 40.851052], [-73.946158, 40.851047], [-73.946147, 40.851031], [-73.946145, 40.851007], [-73.946134, 40.850984], [-73.94612, 40.850969], [-73.946097, 40.850966], [-73.946082, 40.850981], [-73.946087, 40.851008], [-73.946097, 40.851033], [-73.946142, 40.851094], [-73.946137, 40.851155], [-73.946117, 40.851173], [-73.946048, 40.851189], [-73.945965, 40.851172], [-73.94593, 40.85119], [-73.945896, 40.851187], [-73.945841, 40.851169], [-73.945767, 40.851169], [-73.945725, 40.851197], [-73.945728, 40.851228], [-73.945683, 40.851227], [-73.945653, 40.851211], [-73.945612, 40.85124], [-73.945556, 40.851321], [-73.94552, 40.851362], [-73.945449, 40.851428], [-73.945389, 40.851453], [-73.945266, 40.851571], [-73.944978, 40.851732], [-73.944667, 40.851921], [-73.944577, 40.851943], [-73.944504, 40.851957], [-73.944397, 40.851893], [-73.944325, 40.851823], [-73.944317, 40.851856], [-73.944197, 40.852015], [-73.943882, 40.852172], [-73.94348, 40.852282], [-73.94187, 40.853868], [-73.940293, 40.856642], [-73.939585, 40.85748], [-73.939111, 40.858041], [-73.938814, 40.858537], [-73.93831, 40.859381], [-73.937815, 40.859834], [-73.937789, 40.859812], [-73.935532, 40.858918], [-73.933053, 40.859828], [-73.931313, 40.859328], [-73.930122, 40.858744], [-73.927625, 40.859012], [-73.927091, 40.85976], [-73.92471, 40.861552], [-73.92293, 40.858941], [-73.922906, 40.855912], [-73.922531, 40.85568], [-73.922298, 40.855599]]]]
    },
    "properties": {
      "neighbourhood": "Washington Heights",
      "neighbourhood_group": "Manhattan"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.097267, 40.633998], [-74.097155, 40.631898], [-74.098421, 40.631598], [-74.098177, 40.630007], [-74.099257, 40.629933], [-74.099022, 40.628684], [-74.100844, 40.628444], [-74.100064, 40.624173], [-74.10203, 40.623796], [-74.101802, 40.623147], [-74.102285, 40.623245], [-74.104453, 40.622913], [-74.10682, 40.621794], [-74.109916, 40.620722], [-74.110015, 40.620688], [-74.110575, 40.621025], [-74.111239, 40.621425], [-74.111534, 40.621603], [-74.11331, 40.623042], [-74.11846, 40.625269], [-74.120129, 40.626536], [-74.121257, 40.627823], [-74.123034, 40.629011], [-74.123169, 40.629212], [-74.125474, 40.632637], [-74.12596, 40.633859], [-74.114538, 40.634763], [-74.10253, 40.634663], [-74.099414, 40.634106], [-74.097267, 40.633998]]]]
    },
    "properties": {
      "neighbourhood": "West Brighton",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.882576, 40.838746], [-73.88601, 40.840585], [-73.885192, 40.845195], [-73.884465, 40.845985], [-73.88379, 40.846783], [-73.883109, 40.848273], [-73.882789, 40.84787], [-73.877273, 40.844079], [-73.878116, 40.842625], [-73.876036, 40.842068], [-73.874519, 40.841556], [-73.872808, 40.840895], [-73.870495, 40.839846], [-73.869974, 40.839455], [-73.876152, 40.8365], [-73.878339, 40.836855], [-73.880681, 40.837532], [-73.882576, 40.838746]]]]
    },
    "properties": {
      "neighbourhood": "West Farms",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.86233, 40.695962], [-73.856544, 40.697075], [-73.852773, 40.697541], [-73.852717, 40.698003], [-73.852771, 40.698275], [-73.853525, 40.699473], [-73.854582, 40.700612], [-73.854165, 40.700798], [-73.852593, 40.700469], [-73.850667, 40.70021], [-73.850568, 40.699601], [-73.849478, 40.698196], [-73.848928, 40.697471], [-73.847735, 40.694954], [-73.845026, 40.689238], [-73.866246, 40.683203], [-73.866295, 40.683189], [-73.866595, 40.685248], [-73.866598, 40.68527], [-73.867456, 40.688379], [-73.868064, 40.691182], [-73.867211, 40.691308], [-73.867286, 40.691664], [-73.867571, 40.692066], [-73.868644, 40.693898], [-73.868144, 40.694026], [-73.868573, 40.6947], [-73.86233, 40.695962]]]]
    },
    "properties": {
      "neighbourhood": "Woodhaven",
      "neighbourhood_group": "Queens"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.859468, 40.900517], [-73.85926, 40.900338], [-73.861113, 40.89759], [-73.86088, 40.896553], [-73.8662, 40.88714], [-73.869286, 40.880249], [-73.870835, 40.880673], [-73.871953, 40.880285], [-73.87475, 40.880011], [-73.874675, 40.881563], [-73.878126, 40.88215], [-73.87773, 40.883454], [-73.87761, 40.88452], [-73.877876, 40.887244], [-73.878852, 40.889719], [-73.880347, 40.8929], [-73.880062, 40.895256], [-73.87712, 40.895469], [-73.876438, 40.896871], [-73.875895, 40.897559], [-73.87482, 40.898445], [-73.8701, 40.900742], [-73.868997, 40.901559], [-73.868247, 40.902329], [-73.86788, 40.902983], [-73.862799, 40.901536], [-73.861341, 40.901112], [-73.859468, 40.900517]]]]
    },
    "properties": {
      "neighbourhood": "Woodlawn",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.00881, 40.742378], [-73.996797, 40.737364], [-74.001413, 40.731065], [-74.002856, 40.728347], [-74.00935, 40.728988], [-74.009208, 40.729706], [-74.010659, 40.729832], [-74.010799, 40.728196], [-74.011383, 40.728229], [-74.014391, 40.728463], [-74.014345, 40.728622], [-74.014077, 40.73064], [-74.014087, 40.730663], [-74.014038, 40.730694], [-74.014016, 40.730683], [-74.011163, 40.730451], [-74.011162, 40.730451], [-74.011068, 40.731545], [-74.010984, 40.732522], [-74.010941, 40.73302], [-74.01166, 40.733032], [-74.014002, 40.733068], [-74.014, 40.733332], [-74.014, 40.733332], [-74.010904, 40.733298], [-74.010903, 40.733298], [-74.01087, 40.733593], [-74.010833, 40.734007], [-74.012018, 40.734064], [-74.012001, 40.734338], [-74.012001, 40.734338], [-74.010827, 40.734284], [-74.010814, 40.734283], [-74.010643, 40.736049], [-74.010677, 40.736056], [-74.01067, 40.736102], [-74.010688, 40.736114], [-74.010704, 40.736129], [-74.010717, 40.736146], [-74.010726, 40.736165], [-74.010731, 40.736184], [-74.010732, 40.736204], [-74.010728, 40.736224], [-74.01072, 40.736243], [-74.010709, 40.73626], [-74.010694, 40.736276], [-74.010676, 40.73629], [-74.010655, 40.736301], [-74.010654, 40.736348], [-74.010619, 40.736345], [-74.010477, 40.738064], [-74.011087, 40.738093], [-74.011068, 40.738304], [-74.011089, 40.738318], [-74.011107, 40.738333], [-74.011121, 40.738351], [-74.011132, 40.73837], [-74.011139, 40.73839], [-74.011116, 40.738392], [-74.011092, 40.738392], [-74.011054, 40.738388], [-74.011051, 40.738396], [-74.010454, 40.738365], [-74.010393, 40.739174], [-74.010499, 40.739173], [-74.010555, 40.739186], [-74.010747, 40.739176], [-74.011388, 40.739216], [-74.011485, 40.73926], [-74.01158, 40.739265], [-74.011588, 40.739272], [-74.011587, 40.739479], [-74.011634, 40.739506], [-74.011628, 40.739562], [-74.011555, 40.739557], [-74.011527, 40.739874], [-74.011593, 40.739874], [-74.011613, 40.739708], [-74.011616, 40.739708], [-74.012348, 40.739738], [-74.012369, 40.739752], [-74.012374, 40.739779], [-74.012349, 40.739794], [-74.012286, 40.739793], [-74.012289, 40.739899], [-74.012314, 40.739903], [-74.012343, 40.739921], [-74.012357, 40.739937], [-74.012349, 40.740016], [-74.012324, 40.740031], [-74.01227, 40.740034], [-74.012263, 40.740142], [-74.012309, 40.740148], [-74.012329, 40.740163], [-74.01233, 40.740183], [-74.01231, 40.740195], [-74.011577, 40.74016], [-74.011586, 40.739974], [-74.011515, 40.739973], [-74.011461, 40.740584], [-74.012157, 40.740606], [-74.012154, 40.740674], [-74.012657, 40.740697], [-74.012659, 40.740748], [-74.011475, 40.740687], [-74.011374, 40.740724], [-74.009631, 40.740645], [-74.009497, 40.740727], [-74.009492, 40.740743], [-74.009516, 40.740774], [-74.009518, 40.740806], [-74.009463, 40.740902], [-74.009411, 40.741154], [-74.009585, 40.741175], [-74.009577, 40.741211], [-74.012162, 40.741492], [-74.012119, 40.741749], [-74.012117, 40.741759], [-74.009527, 40.741491], [-74.009519, 40.74149], [-74.009448, 40.741892], [-74.009447, 40.741892], [-74.009278, 40.741879], [-74.009161, 40.742509], [-74.00881, 40.742378]]]]
    },
    "properties": {
      "neighbourhood": "West Village",
      "neighbourhood_group": "Manhattan"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.842941, 40.846404], [-73.839126, 40.842158], [-73.840065, 40.841687], [-73.839364, 40.840878], [-73.841104, 40.840611], [-73.841, 40.839908], [-73.841625, 40.839399], [-73.840886, 40.838902], [-73.841566, 40.838317], [-73.840573, 40.836774], [-73.840028, 40.835663], [-73.848459, 40.834511], [-73.851663, 40.834201], [-73.852203, 40.836368], [-73.853366, 40.842505], [-73.853672, 40.842467], [-73.85377, 40.84254], [-73.854106, 40.84266], [-73.854317, 40.842681], [-73.85521, 40.842975], [-73.849009, 40.844734], [-73.847395, 40.845592], [-73.845927, 40.84682], [-73.844904, 40.848121], [-73.844622, 40.846386], [-73.842941, 40.846404]]]]
    },
    "properties": {
      "neighbourhood": "Westchester Square",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.13131, 40.626328], [-74.13192, 40.624546], [-74.132076, 40.622702], [-74.131258, 40.617578], [-74.13072, 40.612558], [-74.13604, 40.612262], [-74.14602, 40.610344], [-74.14579, 40.611932], [-74.144025, 40.624992], [-74.14128, 40.624594], [-74.138266, 40.624248], [-74.137227, 40.624296], [-74.13473, 40.625772], [-74.13333, 40.626393], [-74.13131, 40.626328]]]]
    },
    "properties": {
      "neighbourhood": "Westerleigh",
      "neighbourhood_group": "Staten Island"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.867216, 40.86969], [-73.86701, 40.876133], [-73.865223, 40.879204], [-73.86164, 40.885693], [-73.85065, 40.882192], [-73.843241, 40.879109], [-73.84546, 40.87735], [-73.850689, 40.875487], [-73.853637, 40.8733], [-73.85555, 40.871813], [-73.85745, 40.869533], [-73.867216, 40.86969]]]]
    },
    "properties": {
      "neighbourhood": "Williamsbridge",
      "neighbourhood_group": "Bronx"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.957572, 40.725097], [-73.952998, 40.722253], [-73.955348, 40.720049], [-73.952803, 40.718462], [-73.952402, 40.718797], [-73.947516, 40.719267], [-73.944926, 40.720774], [-73.943899, 40.719604], [-73.942678, 40.720277], [-73.940796, 40.720457], [-73.940624, 40.719435], [-73.936209, 40.720576], [-73.934704, 40.717209], [-73.924631, 40.719855], [-73.92452, 40.719613], [-73.924579, 40.719163], [-73.924702, 40.718688], [-73.924992, 40.718385], [-73.927148, 40.717871], [-73.928379, 40.717578], [-73.92888, 40.71772], [-73.929705, 40.717049], [-73.92932, 40.716112], [-73.929472, 40.715725], [-73.929474, 40.715721], [-73.932198, 40.714972], [-73.932141, 40.714681], [-73.931754, 40.714742], [-73.931241, 40.713725], [-73.931645, 40.713343], [-73.932639, 40.713053], [-73.932033, 40.71159], [-73.933385, 40.711234], [-73.933283, 40.710979], [-73.931901, 40.711338], [-73.930932, 40.709165], [-73.930501, 40.708681], [-73.930361, 40.708718], [-73.93025, 40.708928], [-73.931546, 40.711855], [-73.930779, 40.71216], [-73.93161, 40.712038], [-73.931849, 40.712565], [-73.931734, 40.712749], [-73.930423, 40.713173], [-73.931052, 40.71461], [-73.930852, 40.714903], [-73.928439, 40.715531], [-73.928619, 40.715949], [-73.928906, 40.716619], [-73.928233, 40.717106], [-73.927003, 40.717397], [-73.924645, 40.717953], [-73.92364, 40.717321], [-73.923607, 40.717266], [-73.923295, 40.716744], [-73.923286, 40.716728], [-73.923055, 40.716343], [-73.923983, 40.715977], [-73.924313, 40.715847], [-73.924886, 40.715267], [-73.924336, 40.714123], [-73.924059, 40.714112], [-73.923928, 40.714102], [-73.92392, 40.714074], [-73.922116, 40.712928], [-73.921792, 40.71208], [-73.92166, 40.711734], [-73.921348, 40.710916], [-73.921326, 40.710859], [-73.920779, 40.710496], [-73.92073, 40.710461], [-73.921676, 40.709471], [-73.92598, 40.705792], [-73.933951, 40.702674], [-73.94042, 40.701077], [-73.941149, 40.700281], [-73.941931, 40.700725], [-73.95702, 40.698974], [-73.961899, 40.698188], [-73.962067, 40.698869], [-73.961705, 40.699925], [-73.96721, 40.704256], [-73.967477, 40.70395], [-73.969297, 40.705088], [-73.969293, 40.706935], [-73.969293, 40.707093], [-73.969573, 40.707552], [-73.969849, 40.708003], [-73.969941, 40.70931], [-73.969557, 40.710296], [-73.969647, 40.710375], [-73.969945, 40.7104], [-73.97001, 40.710454], [-73.969971, 40.710508], [-73.969731, 40.710513], [-73.969634, 40.710665], [-73.969712, 40.71069], [-73.969794, 40.710741], [-73.96975, 40.710833], [-73.969685, 40.710854], [-73.969349, 40.710961], [-73.969362, 40.711], [-73.969582, 40.711108], [-73.969694, 40.711137], [-73.969763, 40.711173], [-73.969704, 40.711237], [-73.969562, 40.711197], [-73.969336, 40.711113], [-73.969258, 40.711162], [-73.969239, 40.711246], [-73.969452, 40.711394], [-73.969426, 40.711473], [-73.969303, 40.711512], [-73.969187, 40.711468], [-73.969115, 40.711512], [-73.968867, 40.712232], [-73.968809, 40.712256], [-73.968869, 40.712266], [-73.968831, 40.712393], [-73.968945, 40.712427], [-73.968796, 40.712737], [-73.968729, 40.71272], [-73.96868, 40.712849], [-73.968499, 40.712804], [-73.96847, 40.712825], [-73.968473, 40.712853], [-73.968452, 40.712923], [-73.968568, 40.712949], [-73.968499, 40.713103], [-73.968842, 40.713224], [-73.968391, 40.714262], [-73.968008, 40.715121], [-73.967654, 40.715869], [-73.967364, 40.716484], [-73.967292, 40.716516], [-73.967244, 40.716585], [-73.967263, 40.716666], [-73.967114, 40.716898], [-73.967215, 40.716956], [-73.967268, 40.716986], [-73.966597, 40.717968], [-73.967183, 40.718276], [-73.967193, 40.718265], [-73.967307, 40.718313], [-73.967182, 40.718483], [-73.967069, 40.718439], [-73.967151, 40.718316], [-73.966562, 40.718016], [-73.966554, 40.718037], [-73.966531, 40.718032], [-73.966353, 40.718304], [-73.966242, 40.718252], [-73.966076, 40.718397], [-73.966133, 40.718444], [-73.966147, 40.718502], [-73.965879, 40.718755], [-73.966343, 40.719019], [-73.966371, 40.71899], [-73.96663, 40.719132], [-73.966543, 40.719223], [-73.966319, 40.719108], [-73.966365, 40.719056], [-73.965858, 40.718773], [-73.965703, 40.718918], [-73.965634, 40.718934], [-73.965526, 40.718901], [-73.965154, 40.71927], [-73.965284, 40.719361], [-73.965396, 40.719565], [-73.965547, 40.719659], [-73.965385, 40.719954], [-73.965374, 40.720094], [-73.965137, 40.720344], [-73.965013, 40.72029], [-73.964905, 40.720327], [-73.964464, 40.720065], [-73.964356, 40.720163], [-73.96448, 40.720233], [-73.964398, 40.720297], [-73.964683, 40.72047], [-73.964593, 40.720545], [-73.964351, 40.720404], [-73.964088, 40.720756], [-73.965049, 40.721357], [-73.964894, 40.721475], [-73.963998, 40.720938], [-73.963539, 40.721573], [-73.963438, 40.721559], [-73.962966, 40.722034], [-73.962872, 40.722215], [-73.962253, 40.723532], [-73.962073, 40.72388], [-73.962468, 40.724132], [-73.962472, 40.724175], [-73.962443, 40.7242], [-73.96239, 40.724194], [-73.962366, 40.724209], [-73.962007, 40.723992], [-73.961894, 40.724107], [-73.96166, 40.72486], [-73.961611, 40.724951], [-73.958749, 40.723085], [-73.95772, 40.724271], [-73.957572, 40.725097]]]]
    },
    "properties": {
      "neighbourhood": "Williamsburg",
      "neighbourhood_group": "Brooklyn"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-74.147066, 40.605504], [-74.142028, 40.603372], [-74.14046, 40.60307], [-74.137234, 40.603249], [-74.132507, 40.599632], [-74.13099, 40.599503], [-74.13092, 40.598856], [-74.12983, 40.598671], [-74.129886, 40.598669], [-74.130237, 40.598658], [-74.13046, 40.59865], [-74.13058, 40.598599], [-74.131015, 40.598408], [-74.131239, 40.59831], [-74.131496, 40.598136], [-74.132393, 40.597526], [-74.132813, 40.597241], [-74.133775, 40.596333], [-74.13608, 40.597254], [-74.137873, 40.597556], [-74.138836, 40.597311], [-74.140761, 40.597553], [-74.141873, 40.596054], [-74.146377, 40.596151], [-74.146581, 40.59627], [-74.146241, 40.596706], [-74.146193, 40.596997], [-74.146153, 40.597431], [-74.146613, 40.599666], [-74.1462, 40.601135], [-74.146173, 40.602143], [-74.14645, 40.602996], [-74.147237, 40.603727], [-74.14757, 40.604597], [-74.147894, 40.604878], [-74.14829, 40.604951], [-74.148281, 40.60567], [-74.147066, 40.605504]]]]
    },
    "properties": {
      "neighbourhood": "Willowbrook",
      "neighbourhood_group": "Staten Island"
    }
  }]
};
},{}],"fJGE":[function(require,module,exports) {
module.exports = {
  "type": "FeatureCollection",
  "features": [{
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.347308, 47.665005], [-122.34645, 47.664997], [-122.34623, 47.665003], [-122.346159, 47.665004], [-122.346125, 47.665011], [-122.346093, 47.665024], [-122.346068, 47.665041], [-122.345092, 47.665011], [-122.34452, 47.664998], [-122.343219, 47.665011], [-122.342698, 47.665023], [-122.340449, 47.665043], [-122.340203, 47.665038], [-122.3401, 47.66573], [-122.340088, 47.666406], [-122.340087, 47.667087], [-122.340082, 47.667914], [-122.340077, 47.668449], [-122.340075, 47.668474], [-122.340073, 47.6685], [-122.34007, 47.668526], [-122.340066, 47.668551], [-122.340063, 47.668577], [-122.34006, 47.668602], [-122.340056, 47.668628], [-122.340052, 47.668654], [-122.340047, 47.668679], [-122.340042, 47.668705], [-122.340038, 47.66873], [-122.340032, 47.668756], [-122.340026, 47.668781], [-122.340022, 47.669199], [-122.340019, 47.669395], [-122.340018, 47.669439], [-122.340017, 47.66947], [-122.340013, 47.669747], [-122.340011, 47.669896], [-122.340009, 47.670204], [-122.33905, 47.670193], [-122.338214, 47.670187], [-122.33798, 47.67019], [-122.337976, 47.67058], [-122.33718, 47.671248], [-122.337004, 47.670728], [-122.336696, 47.670852], [-122.336657, 47.670868], [-122.336625, 47.670882], [-122.336592, 47.670895], [-122.33656, 47.670909], [-122.336528, 47.670922], [-122.336496, 47.670936], [-122.336465, 47.67095], [-122.336433, 47.670964], [-122.336402, 47.670979], [-122.336371, 47.670993], [-122.33634, 47.671008], [-122.336309, 47.671022], [-122.336278, 47.671037], [-122.336247, 47.671052], [-122.336217, 47.671068], [-122.336187, 47.671083], [-122.336157, 47.671098], [-122.336127, 47.671114], [-122.336097, 47.67113], [-122.336067, 47.671146], [-122.336038, 47.671161], [-122.336008, 47.671178], [-122.335979, 47.671194], [-122.33595, 47.67121], [-122.335922, 47.671227], [-122.335893, 47.671244], [-122.335864, 47.67126], [-122.335836, 47.671277], [-122.335808, 47.671294], [-122.33578, 47.671312], [-122.333562, 47.673108], [-122.333558, 47.672315], [-122.333372, 47.672326], [-122.33204, 47.672304], [-122.329211, 47.672276], [-122.324602, 47.672252], [-122.322975, 47.672241], [-122.3216, 47.672234], [-122.321622, 47.67216], [-122.321821, 47.671221], [-122.321931, 47.670321], [-122.321956, 47.66947], [-122.321968, 47.66896], [-122.321976, 47.668599], [-122.321968, 47.667731], [-122.321984, 47.666866], [-122.321988, 47.665984], [-122.321991, 47.665102], [-122.321994, 47.664217], [-122.322014, 47.663324], [-122.322075, 47.662428], [-122.322143, 47.661546], [-122.322282, 47.659741], [-122.322389, 47.658048], [-122.32244, 47.656367], [-122.322465, 47.654659], [-122.322494, 47.653697], [-122.322601, 47.653689], [-122.322737, 47.65367], [-122.322795, 47.653657], [-122.323081, 47.653602], [-122.323183, 47.653586], [-122.323272, 47.653571], [-122.323365, 47.653555], [-122.323442, 47.653544], [-122.323506, 47.65354], [-122.323581, 47.653526], [-122.323634, 47.653517], [-122.323686, 47.653503], [-122.32377, 47.653474], [-122.323853, 47.653447], [-122.323937, 47.653429], [-122.324008, 47.653411], [-122.324079, 47.653396], [-122.324131, 47.653386], [-122.324191, 47.653381], [-122.324248, 47.653387], [-122.324343, 47.653417], [-122.324396, 47.653435], [-122.324457, 47.653449], [-122.324504, 47.653459], [-122.324549, 47.65347], [-122.324586, 47.653475], [-122.324702, 47.653439], [-122.324706, 47.653408], [-122.32474, 47.653394], [-122.324849, 47.65339], [-122.325028, 47.653397], [-122.325162, 47.653393], [-122.325226, 47.653393], [-122.325289, 47.653392], [-122.325326, 47.653391], [-122.325383, 47.653388], [-122.32544, 47.653387], [-122.32549, 47.653383], [-122.325531, 47.653372], [-122.325631, 47.653349], [-122.325673, 47.653331], [-122.325716, 47.653316], [-122.325794, 47.653294], [-122.325857, 47.653286], [-122.325894, 47.653282], [-122.325928, 47.653274], [-122.325999, 47.653256], [-122.326036, 47.653244], [-122.326079, 47.653239], [-122.326117, 47.653242], [-122.326164, 47.653253], [-122.326248, 47.653268], [-122.326302, 47.653271], [-122.326442, 47.653261], [-122.32649, 47.653253], [-122.326539, 47.653244], [-122.326608, 47.653235], [-122.326651, 47.653228], [-122.326719, 47.653219], [-122.326769, 47.653204], [-122.326809, 47.653184], [-122.326899, 47.65312], [-122.326941, 47.65308], [-122.326988, 47.653032], [-122.327031, 47.652985], [-122.327071, 47.652939], [-122.327128, 47.652897], [-122.327176, 47.652855], [-122.327196, 47.652806], [-122.327261, 47.652752], [-122.32731, 47.652694], [-122.327347, 47.65264], [-122.327323, 47.652599], [-122.327353, 47.652545], [-122.327401, 47.652479], [-122.327451, 47.652412], [-122.327499, 47.652342], [-122.327677, 47.652156], [-122.32774, 47.6521], [-122.327803, 47.652077], [-122.327863, 47.652074], [-122.327927, 47.652028], [-122.327982, 47.651971], [-122.328022, 47.65191], [-122.328069, 47.65184], [-122.328115, 47.651787], [-122.328198, 47.651716], [-122.328265, 47.651663], [-122.328311, 47.651609], [-122.328354, 47.65154], [-122.328384, 47.651487], [-122.328449, 47.651426], [-122.328502, 47.651376], [-122.328542, 47.651334], [-122.328605, 47.65133], [-122.328629, 47.651361], [-122.328617, 47.651467], [-122.32865, 47.651501], [-122.328738, 47.651525], [-122.328831, 47.651531], [-122.328921, 47.651528], [-122.328996, 47.651505], [-122.329032, 47.651468], [-122.329074, 47.65144], [-122.329129, 47.651421], [-122.329173, 47.651435], [-122.329223, 47.651421], [-122.329305, 47.651388], [-122.329383, 47.651358], [-122.329453, 47.651324], [-122.329479, 47.651285], [-122.329456, 47.651236], [-122.329431, 47.651194], [-122.329425, 47.65113], [-122.329528, 47.651116], [-122.329551, 47.651089], [-122.329523, 47.65104], [-122.329507, 47.651015], [-122.329668, 47.650978], [-122.329772, 47.650957], [-122.329851, 47.650939], [-122.329899, 47.650928], [-122.329943, 47.650911], [-122.329996, 47.650876], [-122.330073, 47.650821], [-122.330141, 47.650768], [-122.33021, 47.65072], [-122.330274, 47.65067], [-122.330327, 47.650624], [-122.330383, 47.650578], [-122.330438, 47.650531], [-122.330494, 47.65048], [-122.330541, 47.650442], [-122.330598, 47.65036], [-122.330592, 47.650311], [-122.330599, 47.650275], [-122.330642, 47.650237], [-122.330698, 47.650212], [-122.330744, 47.650195], [-122.330751, 47.650164], [-122.330723, 47.650102], [-122.330694, 47.650048], [-122.330676, 47.650011], [-122.330661, 47.649973], [-122.330658, 47.649934], [-122.330643, 47.649887], [-122.330613, 47.649839], [-122.330591, 47.649799], [-122.330599, 47.649765], [-122.330618, 47.649736], [-122.330621, 47.649698], [-122.330611, 47.649654], [-122.330584, 47.649607], [-122.330564, 47.649558], [-122.330589, 47.649521], [-122.330652, 47.649498], [-122.330722, 47.649478], [-122.330787, 47.649457], [-122.330811, 47.649421], [-122.33085, 47.649407], [-122.330913, 47.649391], [-122.330989, 47.649371], [-122.331038, 47.64936], [-122.331155, 47.649342], [-122.331217, 47.649367], [-122.331247, 47.649403], [-122.331281, 47.649396], [-122.331321, 47.649396], [-122.331373, 47.649386], [-122.331432, 47.649354], [-122.331453, 47.649328], [-122.33147, 47.6493], [-122.331477, 47.649276], [-122.331498, 47.649237], [-122.331523, 47.649176], [-122.331539, 47.649148], [-122.331559, 47.649126], [-122.331577, 47.649102], [-122.331591, 47.649076], [-122.331599, 47.64905], [-122.331607, 47.648979], [-122.331595, 47.648933], [-122.331558, 47.648862], [-122.331538, 47.648829], [-122.331513, 47.648782], [-122.331467, 47.648707], [-122.331407, 47.64861], [-122.331372, 47.648553], [-122.331349, 47.648519], [-122.331302, 47.648469], [-122.331283, 47.648443], [-122.331264, 47.64842], [-122.33123, 47.648373], [-122.331202, 47.648329], [-122.331179, 47.648292], [-122.331162, 47.648261], [-122.331132, 47.648215], [-122.331103, 47.648158], [-122.331115, 47.648132], [-122.331186, 47.648069], [-122.331239, 47.648026], [-122.331304, 47.647972], [-122.331331, 47.647954], [-122.331427, 47.647891], [-122.331507, 47.647844], [-122.331553, 47.647807], [-122.331581, 47.647782], [-122.331616, 47.647754], [-122.331642, 47.647734], [-122.331686, 47.647696], [-122.331713, 47.647673], [-122.331777, 47.647627], [-122.331806, 47.647599], [-122.331837, 47.64757], [-122.331885, 47.647535], [-122.331917, 47.647506], [-122.331948, 47.647479], [-122.331991, 47.647449], [-122.332068, 47.647393], [-122.332111, 47.647374], [-122.332158, 47.647383], [-122.332205, 47.647329], [-122.332266, 47.647274], [-122.332332, 47.647206], [-122.3324, 47.647142], [-122.332422, 47.647122], [-122.332457, 47.647083], [-122.33251, 47.647031], [-122.332566, 47.646977], [-122.332597, 47.646953], [-122.332616, 47.646979], [-122.332663, 47.647027], [-122.332709, 47.647025], [-122.332777, 47.647011], [-122.332832, 47.646989], [-122.332868, 47.646973], [-122.332915, 47.646929], [-122.332929, 47.646896], [-122.33294, 47.646858], [-122.332944, 47.64683], [-122.332944, 47.646785], [-122.332932, 47.646737], [-122.332909, 47.646691], [-122.332897, 47.646667], [-122.332876, 47.646626], [-122.332821, 47.646545], [-122.332809, 47.646499], [-122.332801, 47.646465], [-122.332782, 47.646417], [-122.332764, 47.646352], [-122.332756, 47.646306], [-122.332744, 47.646272], [-122.33273, 47.646209], [-122.332721, 47.646168], [-122.332717, 47.646115], [-122.332729, 47.646065], [-122.332747, 47.646002], [-122.332761, 47.645926], [-122.332766, 47.645888], [-122.332779, 47.645847], [-122.332787, 47.645812], [-122.332798, 47.645781], [-122.332807, 47.645757], [-122.332834, 47.645677], [-122.332845, 47.645626], [-122.332861, 47.645558], [-122.332867, 47.645534], [-122.332871, 47.645482], [-122.332877, 47.645457], [-122.332897, 47.645392], [-122.332923, 47.64533], [-122.332956, 47.645249], [-122.332991, 47.645187], [-122.333019, 47.645138], [-122.333058, 47.64506], [-122.33308, 47.645022], [-122.333096, 47.644995], [-122.333122, 47.644955], [-122.333189, 47.644869], [-122.333237, 47.644828], [-122.333315, 47.644781], [-122.333362, 47.644761], [-122.333403, 47.644749], [-122.333493, 47.644728], [-122.333551, 47.64472], [-122.333632, 47.644709], [-122.333717, 47.644701], [-122.333757, 47.644697], [-122.333807, 47.644686], [-122.333857, 47.644666], [-122.333912, 47.644631], [-122.333962, 47.64457], [-122.333983, 47.644535], [-122.334021, 47.644539], [-122.334055, 47.644522], [-122.334085, 47.644494], [-122.334055, 47.644473], [-122.334083, 47.644455], [-122.334246, 47.644454], [-122.334345, 47.644454], [-122.334461, 47.644454], [-122.334573, 47.644454], [-122.334693, 47.644455], [-122.33481, 47.644456], [-122.335035, 47.644458], [-122.335144, 47.644459], [-122.33525, 47.64446], [-122.335369, 47.644461], [-122.335475, 47.644462], [-122.335587, 47.644463], [-122.335666, 47.644464], [-122.33576, 47.644464], [-122.335817, 47.644469], [-122.335819, 47.644493], [-122.335821, 47.644518], [-122.335821, 47.644552], [-122.335847, 47.64457], [-122.335899, 47.644578], [-122.336009, 47.644593], [-122.336071, 47.644604], [-122.336151, 47.644622], [-122.336244, 47.644648], [-122.336291, 47.644665], [-122.336322, 47.644681], [-122.336379, 47.644702], [-122.336458, 47.64472], [-122.336499, 47.64473], [-122.336622, 47.644768], [-122.336676, 47.644804], [-122.336697, 47.644824], [-122.336748, 47.644863], [-122.336807, 47.644876], [-122.336861, 47.644889], [-122.336895, 47.644911], [-122.33694, 47.644946], [-122.336981, 47.644994], [-122.337013, 47.645011], [-122.337063, 47.645025], [-122.337138, 47.645049], [-122.337185, 47.64507], [-122.337231, 47.645109], [-122.33725, 47.64513], [-122.337328, 47.645167], [-122.337343, 47.645192], [-122.33736, 47.645236], [-122.337347, 47.645263], [-122.337356, 47.645305], [-122.337359, 47.64533], [-122.337359, 47.645355], [-122.337381, 47.645383], [-122.337428, 47.645412], [-122.33749, 47.645456], [-122.337566, 47.645505], [-122.337615, 47.645544], [-122.337644, 47.645573], [-122.337614, 47.645605], [-122.337681, 47.645651], [-122.337734, 47.645696], [-122.337807, 47.645745], [-122.337851, 47.645778], [-122.337894, 47.645809], [-122.337871, 47.64584], [-122.3379, 47.645864], [-122.337921, 47.645891], [-122.33793, 47.645931], [-122.337962, 47.645995], [-122.338008, 47.646047], [-122.338037, 47.646069], [-122.338081, 47.646097], [-122.33812, 47.646097], [-122.338155, 47.646084], [-122.338202, 47.646092], [-122.33825, 47.64611], [-122.338305, 47.646138], [-122.338371, 47.646184], [-122.338409, 47.646207], [-122.338437, 47.646223], [-122.338484, 47.646255], [-122.338544, 47.646294], [-122.338563, 47.646315], [-122.338583, 47.646337], [-122.338626, 47.646365], [-122.338682, 47.64639], [-122.338717, 47.646411], [-122.338763, 47.646442], [-122.338826, 47.646476], [-122.338865, 47.646481], [-122.338917, 47.646446], [-122.338954, 47.646416], [-122.338979, 47.646399], [-122.339032, 47.646366], [-122.339094, 47.646353], [-122.339148, 47.646387], [-122.339129, 47.646408], [-122.339104, 47.646425], [-122.339061, 47.64646], [-122.339, 47.646504], [-122.338968, 47.646528], [-122.338949, 47.646549], [-122.338984, 47.646579], [-122.339074, 47.64664], [-122.339122, 47.646681], [-122.339191, 47.646732], [-122.339221, 47.646715], [-122.339293, 47.646659], [-122.339338, 47.646623], [-122.339369, 47.646593], [-122.339408, 47.646566], [-122.339453, 47.646551], [-122.339506, 47.646576], [-122.339544, 47.646594], [-122.339572, 47.64661], [-122.339597, 47.646631], [-122.339639, 47.646654], [-122.339672, 47.646674], [-122.339705, 47.646697], [-122.339747, 47.646732], [-122.339751, 47.64676], [-122.339716, 47.64679], [-122.33969, 47.646828], [-122.339722, 47.646848], [-122.339747, 47.646829], [-122.339773, 47.646809], [-122.339842, 47.646749], [-122.339888, 47.646708], [-122.339913, 47.646689], [-122.339944, 47.646668], [-122.339981, 47.646641], [-122.340011, 47.646618], [-122.340059, 47.646586], [-122.340107, 47.646554], [-122.340146, 47.646527], [-122.340189, 47.646499], [-122.340241, 47.646477], [-122.340284, 47.646504], [-122.340316, 47.646522], [-122.340348, 47.646541], [-122.340317, 47.646562], [-122.340286, 47.646594], [-122.340245, 47.646626], [-122.340219, 47.646644], [-122.340189, 47.646662], [-122.340159, 47.646684], [-122.340128, 47.646707], [-122.340089, 47.646732], [-122.340056, 47.646758], [-122.340024, 47.646785], [-122.339986, 47.646819], [-122.339951, 47.646847], [-122.33991, 47.646876], [-122.339875, 47.646902], [-122.339834, 47.646928], [-122.339798, 47.646958], [-122.339763, 47.646984], [-122.339733, 47.647012], [-122.339703, 47.647034], [-122.339666, 47.647062], [-122.339635, 47.647088], [-122.339609, 47.647107], [-122.339582, 47.647142], [-122.33959, 47.647182], [-122.339609, 47.647216], [-122.339645, 47.647253], [-122.339665, 47.647273], [-122.339709, 47.647304], [-122.339761, 47.647332], [-122.339797, 47.647354], [-122.339836, 47.647378], [-122.339874, 47.647394], [-122.339929, 47.647412], [-122.339968, 47.647415], [-122.34001, 47.647409], [-122.340053, 47.647399], [-122.340107, 47.647377], [-122.340161, 47.647344], [-122.340208, 47.647306], [-122.340235, 47.647285], [-122.340279, 47.647246], [-122.340314, 47.647207], [-122.340328, 47.647176], [-122.340347, 47.647153], [-122.340372, 47.647133], [-122.340402, 47.647109], [-122.340428, 47.647089], [-122.340485, 47.647061], [-122.340511, 47.647042], [-122.340538, 47.647016], [-122.340574, 47.647021], [-122.340639, 47.647032], [-122.340633, 47.647088], [-122.340633, 47.647143], [-122.340643, 47.64721], [-122.340724, 47.647208], [-122.340732, 47.647133], [-122.340734, 47.647082], [-122.340736, 47.647052], [-122.340739, 47.647025], [-122.340784, 47.64703], [-122.340833, 47.647034], [-122.340898, 47.647043], [-122.340989, 47.647053], [-122.341047, 47.647065], [-122.341101, 47.647068], [-122.341139, 47.647087], [-122.341137, 47.647151], [-122.341137, 47.647212], [-122.341137, 47.647268], [-122.341136, 47.647339], [-122.341128, 47.64737], [-122.341002, 47.647375], [-122.341003, 47.647416], [-122.341056, 47.647417], [-122.341133, 47.647419], [-122.341221, 47.647416], [-122.341247, 47.647395], [-122.341292, 47.647396], [-122.341375, 47.647397], [-122.341454, 47.647416], [-122.341454, 47.64748], [-122.341454, 47.64753], [-122.341454, 47.647573], [-122.341456, 47.647598], [-122.341499, 47.647613], [-122.341543, 47.647634], [-122.341557, 47.647664], [-122.341574, 47.647689], [-122.341631, 47.647759], [-122.341672, 47.647789], [-122.341716, 47.647809], [-122.341777, 47.64782], [-122.341872, 47.647825], [-122.341937, 47.647832], [-122.341972, 47.647852], [-122.342015, 47.647826], [-122.342081, 47.647815], [-122.342143, 47.647815], [-122.342202, 47.647815], [-122.34228, 47.647818], [-122.342311, 47.647841], [-122.342315, 47.647879], [-122.342313, 47.647905], [-122.342327, 47.64794], [-122.34237, 47.647963], [-122.342402, 47.647977], [-122.342456, 47.647991], [-122.342573, 47.64801], [-122.342698, 47.648024], [-122.342774, 47.64803], [-122.342816, 47.648031], [-122.342788, 47.648322], [-122.342734, 47.649202], [-122.342705, 47.650005], [-122.342675, 47.650804], [-122.342598, 47.652242], [-122.342514, 47.653681], [-122.342449, 47.655074], [-122.342384, 47.656467], [-122.342319, 47.65786], [-122.342253, 47.659254], [-122.342188, 47.660647], [-122.342154, 47.661377], [-122.343897, 47.661379], [-122.345725, 47.66139], [-122.347339, 47.661389], [-122.34733, 47.662195], [-122.347318, 47.663484], [-122.34731, 47.66468], [-122.347308, 47.665005]]]]
    },
    "properties": {
      "neighbourhood": "Wallingford",
      "neighbourhood_group": "Other neighborhoods"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.356918, 47.639594], [-122.35693, 47.638383], [-122.356938, 47.637519], [-122.356947, 47.636516], [-122.356971, 47.635123], [-122.356979, 47.633918], [-122.356993, 47.632727], [-122.356998, 47.632701], [-122.357, 47.632675], [-122.357001, 47.632649], [-122.356999, 47.632623], [-122.356994, 47.632597], [-122.356989, 47.632571], [-122.35698, 47.632546], [-122.35697, 47.632521], [-122.356958, 47.632496], [-122.35693, 47.632458], [-122.35691, 47.632428], [-122.356891, 47.632406], [-122.356869, 47.632384], [-122.356845, 47.632364], [-122.35682, 47.632344], [-122.356782, 47.632318], [-122.357891, 47.632318], [-122.358652, 47.632323], [-122.359895, 47.632324], [-122.361802, 47.632318], [-122.363105, 47.632323], [-122.36311, 47.631333], [-122.363119, 47.630522], [-122.36312, 47.629677], [-122.363162, 47.628851], [-122.363212, 47.628029], [-122.363221, 47.627241], [-122.363218, 47.626819], [-122.363218, 47.62674], [-122.363806, 47.626802], [-122.364355, 47.627016], [-122.364347, 47.626727], [-122.364407, 47.626442], [-122.364531, 47.625862], [-122.36454, 47.625228], [-122.364541, 47.625178], [-122.364657, 47.625275], [-122.364772, 47.62537], [-122.365719, 47.625726], [-122.366529, 47.626042], [-122.367432, 47.626393], [-122.367666, 47.626487], [-122.368333, 47.626726], [-122.368585, 47.626761], [-122.368808, 47.626924], [-122.369937, 47.627752], [-122.370374, 47.628081], [-122.371594, 47.629048], [-122.372331, 47.629614], [-122.373192, 47.630306], [-122.373712, 47.630719], [-122.374598, 47.631406], [-122.375446, 47.632085], [-122.375612, 47.63221], [-122.375637, 47.632238], [-122.375691, 47.632298], [-122.37571, 47.63232], [-122.375731, 47.632342], [-122.375752, 47.632363], [-122.375772, 47.632384], [-122.375792, 47.632406], [-122.375812, 47.632428], [-122.37583, 47.63245], [-122.375849, 47.632472], [-122.375867, 47.632495], [-122.375885, 47.632517], [-122.375902, 47.63254], [-122.375918, 47.632563], [-122.375935, 47.632586], [-122.375951, 47.632609], [-122.375966, 47.632633], [-122.375981, 47.632656], [-122.375995, 47.63268], [-122.376009, 47.632704], [-122.376023, 47.632727], [-122.376036, 47.632751], [-122.376048, 47.632775], [-122.37606, 47.6328], [-122.376072, 47.632824], [-122.376083, 47.632848], [-122.376093, 47.632873], [-122.376103, 47.632898], [-122.376113, 47.632922], [-122.376122, 47.632947], [-122.37613, 47.632972], [-122.376138, 47.632997], [-122.376146, 47.633022], [-122.376153, 47.633047], [-122.376159, 47.633072], [-122.376165, 47.633097], [-122.376174, 47.633143], [-122.376178, 47.633168], [-122.376181, 47.633194], [-122.376184, 47.633219], [-122.376186, 47.633244], [-122.376187, 47.63327], [-122.376189, 47.633296], [-122.376189, 47.633321], [-122.376188, 47.633347], [-122.376187, 47.633372], [-122.376186, 47.633398], [-122.376179, 47.633656], [-122.376128, 47.634495], [-122.376137, 47.635376], [-122.376133, 47.636211], [-122.37614, 47.637038], [-122.376148, 47.637837], [-122.376151, 47.638513], [-122.376149, 47.639181], [-122.376156, 47.640229], [-122.376165, 47.640988], [-122.376163, 47.641747], [-122.376169, 47.642523], [-122.376169, 47.642937], [-122.376022, 47.642852], [-122.375309, 47.641913], [-122.374948, 47.641444], [-122.374421, 47.640753], [-122.374365, 47.64068], [-122.373995, 47.640685], [-122.372233, 47.640684], [-122.371584, 47.640689], [-122.371532, 47.640689], [-122.371552, 47.639707], [-122.371554, 47.63959], [-122.370304, 47.6396], [-122.368455, 47.639599], [-122.366611, 47.639583], [-122.365138, 47.639596], [-122.363398, 47.639594], [-122.361528, 47.639593], [-122.359619, 47.639597], [-122.356918, 47.639594]]]]
    },
    "properties": {
      "neighbourhood": "West Queen Anne",
      "neighbourhood_group": "Queen Anne"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.376337, 47.675918], [-122.376214, 47.675743], [-122.376207, 47.674749], [-122.376207, 47.673619], [-122.376209, 47.672553], [-122.376215, 47.671461], [-122.376216, 47.670357], [-122.376212, 47.669261], [-122.376219, 47.66818], [-122.376215, 47.667102], [-122.376222, 47.666036], [-122.376219, 47.66497], [-122.376224, 47.663836], [-122.376213, 47.662895], [-122.376215, 47.662204], [-122.376226, 47.661633], [-122.376232, 47.661081], [-122.376228, 47.660989], [-122.376311, 47.661008], [-122.376348, 47.661008], [-122.376399, 47.661001], [-122.3764, 47.660955], [-122.37641, 47.660889], [-122.37648, 47.660889], [-122.37665, 47.660886], [-122.376802, 47.660884], [-122.376905, 47.660882], [-122.37702, 47.66088], [-122.377118, 47.660882], [-122.377233, 47.660888], [-122.377237, 47.660938], [-122.377242, 47.661011], [-122.377247, 47.661104], [-122.377305, 47.661125], [-122.377432, 47.661162], [-122.377533, 47.661176], [-122.377584, 47.661142], [-122.377615, 47.661091], [-122.377654, 47.66102], [-122.377677, 47.660988], [-122.377715, 47.66094], [-122.377727, 47.660905], [-122.377743, 47.660863], [-122.377759, 47.660823], [-122.377777, 47.660775], [-122.377791, 47.660744], [-122.377821, 47.660716], [-122.377888, 47.660702], [-122.377931, 47.660709], [-122.377982, 47.660724], [-122.378037, 47.660746], [-122.378088, 47.660766], [-122.378144, 47.66078], [-122.378224, 47.660809], [-122.378285, 47.660824], [-122.378344, 47.660842], [-122.378411, 47.660854], [-122.378488, 47.660874], [-122.378572, 47.6609], [-122.378625, 47.660914], [-122.378697, 47.660931], [-122.378752, 47.660949], [-122.378821, 47.660966], [-122.378863, 47.660988], [-122.378922, 47.66101], [-122.379081, 47.661054], [-122.379265, 47.661102], [-122.379389, 47.661132], [-122.379422, 47.661108], [-122.379479, 47.661128], [-122.379643, 47.661174], [-122.3798, 47.661226], [-122.379946, 47.661277], [-122.380066, 47.661311], [-122.380131, 47.661333], [-122.380153, 47.661356], [-122.380174, 47.661387], [-122.380189, 47.66142], [-122.380211, 47.661484], [-122.380243, 47.661507], [-122.380303, 47.661518], [-122.380351, 47.661525], [-122.380395, 47.661541], [-122.380479, 47.66157], [-122.38056, 47.661605], [-122.380615, 47.66163], [-122.380664, 47.661655], [-122.380702, 47.661679], [-122.380716, 47.661731], [-122.380691, 47.661782], [-122.380664, 47.661817], [-122.380648, 47.661865], [-122.380684, 47.661879], [-122.380718, 47.661895], [-122.380752, 47.661904], [-122.380791, 47.661913], [-122.380829, 47.661935], [-122.380866, 47.661968], [-122.380895, 47.661994], [-122.380932, 47.662027], [-122.380969, 47.662051], [-122.381021, 47.662076], [-122.381099, 47.662113], [-122.381167, 47.66215], [-122.381238, 47.662189], [-122.381288, 47.662219], [-122.381338, 47.662252], [-122.38139, 47.662288], [-122.381433, 47.66232], [-122.381504, 47.662379], [-122.381573, 47.662437], [-122.381614, 47.662479], [-122.381656, 47.662516], [-122.3817, 47.662547], [-122.381807, 47.662629], [-122.381897, 47.662701], [-122.382025, 47.662802], [-122.38216, 47.662907], [-122.382235, 47.662968], [-122.382332, 47.663043], [-122.382358, 47.66307], [-122.382343, 47.663102], [-122.382301, 47.663182], [-122.382249, 47.663257], [-122.382206, 47.663322], [-122.382165, 47.663378], [-122.38213, 47.663435], [-122.382111, 47.663467], [-122.382089, 47.663507], [-122.382073, 47.663543], [-122.38208, 47.663571], [-122.382102, 47.663608], [-122.382133, 47.663637], [-122.382152, 47.663658], [-122.38218, 47.6637], [-122.382227, 47.663762], [-122.382265, 47.663789], [-122.382287, 47.663813], [-122.382295, 47.663845], [-122.382325, 47.663885], [-122.382351, 47.66392], [-122.382393, 47.663957], [-122.382426, 47.663976], [-122.382472, 47.663979], [-122.382527, 47.663955], [-122.382589, 47.66392], [-122.382688, 47.663866], [-122.382803, 47.663806], [-122.382905, 47.663751], [-122.382942, 47.663734], [-122.382966, 47.663753], [-122.383031, 47.663807], [-122.383133, 47.6639], [-122.38324, 47.66399], [-122.383358, 47.664085], [-122.383388, 47.664069], [-122.383427, 47.664066], [-122.383483, 47.664116], [-122.38356, 47.664187], [-122.383608, 47.664228], [-122.383665, 47.664269], [-122.383705, 47.664257], [-122.383747, 47.66429], [-122.383815, 47.664352], [-122.383892, 47.664414], [-122.383929, 47.664445], [-122.383948, 47.66448], [-122.383882, 47.664514], [-122.383815, 47.664553], [-122.383879, 47.664607], [-122.383978, 47.664679], [-122.384136, 47.664592], [-122.384242, 47.664533], [-122.384331, 47.664479], [-122.384413, 47.664438], [-122.38449, 47.664395], [-122.384583, 47.664345], [-122.384661, 47.664306], [-122.384713, 47.664281], [-122.384747, 47.664269], [-122.384789, 47.664307], [-122.384849, 47.66436], [-122.384916, 47.664418], [-122.384964, 47.664456], [-122.385017, 47.66451], [-122.384954, 47.664541], [-122.384886, 47.664581], [-122.384922, 47.66461], [-122.385012, 47.664681], [-122.385091, 47.664738], [-122.38516, 47.664791], [-122.385202, 47.664815], [-122.385245, 47.664786], [-122.385303, 47.664751], [-122.385336, 47.664767], [-122.385365, 47.664788], [-122.385421, 47.664834], [-122.385451, 47.664855], [-122.385495, 47.664887], [-122.385534, 47.664863], [-122.385582, 47.664831], [-122.385654, 47.664786], [-122.385701, 47.664823], [-122.385777, 47.664879], [-122.385894, 47.664966], [-122.385995, 47.665043], [-122.386108, 47.665122], [-122.386186, 47.665186], [-122.386272, 47.665255], [-122.386384, 47.665334], [-122.3865, 47.665421], [-122.386606, 47.665501], [-122.386736, 47.665596], [-122.386825, 47.665666], [-122.386949, 47.665756], [-122.38706, 47.66584], [-122.387167, 47.665922], [-122.387307, 47.666024], [-122.387402, 47.666093], [-122.387475, 47.666144], [-122.387517, 47.666173], [-122.387662, 47.666276], [-122.387757, 47.666349], [-122.387916, 47.66647], [-122.387977, 47.666536], [-122.387953, 47.666569], [-122.38788, 47.666643], [-122.387802, 47.66672], [-122.387757, 47.666765], [-122.387757, 47.666801], [-122.387784, 47.666846], [-122.387818, 47.666898], [-122.387854, 47.666926], [-122.387899, 47.666964], [-122.387925, 47.666985], [-122.387989, 47.667006], [-122.388037, 47.667029], [-122.388068, 47.667042], [-122.388102, 47.667067], [-122.388061, 47.66711], [-122.388075, 47.667139], [-122.388121, 47.667165], [-122.388179, 47.667172], [-122.388207, 47.667149], [-122.388258, 47.667094], [-122.388295, 47.667053], [-122.388323, 47.667028], [-122.388366, 47.667041], [-122.388404, 47.667057], [-122.388462, 47.667082], [-122.38854, 47.667112], [-122.388634, 47.667152], [-122.388685, 47.667173], [-122.388812, 47.667221], [-122.388874, 47.667249], [-122.38892, 47.667282], [-122.388953, 47.667313], [-122.388986, 47.667327], [-122.389023, 47.667334], [-122.389091, 47.66733], [-122.389114, 47.667221], [-122.389137, 47.667137], [-122.389173, 47.667137], [-122.389173, 47.667281], [-122.389171, 47.667427], [-122.389202, 47.667458], [-122.389281, 47.667462], [-122.38933, 47.66746], [-122.389379, 47.667457], [-122.389482, 47.667448], [-122.389543, 47.667444], [-122.389609, 47.667437], [-122.389713, 47.667425], [-122.38976, 47.667427], [-122.389807, 47.667435], [-122.389905, 47.66745], [-122.390052, 47.66747], [-122.390138, 47.667491], [-122.390203, 47.667494], [-122.390248, 47.667495], [-122.390283, 47.6675], [-122.3903, 47.667534], [-122.390354, 47.667536], [-122.390433, 47.667539], [-122.390475, 47.66756], [-122.390473, 47.667615], [-122.390478, 47.667661], [-122.390514, 47.66766], [-122.390635, 47.667659], [-122.390746, 47.667657], [-122.390828, 47.667657], [-122.390894, 47.66766], [-122.390899, 47.66763], [-122.390909, 47.667585], [-122.39095, 47.667586], [-122.390994, 47.667567], [-122.390999, 47.667507], [-122.39104, 47.667506], [-122.391084, 47.667488], [-122.391109, 47.667464], [-122.391143, 47.667442], [-122.391202, 47.667382], [-122.39124, 47.66738], [-122.391291, 47.66736], [-122.391335, 47.667335], [-122.391379, 47.667306], [-122.391413, 47.667271], [-122.391424, 47.667243], [-122.391428, 47.667213], [-122.391448, 47.667166], [-122.391437, 47.66714], [-122.391414, 47.667121], [-122.39145, 47.667095], [-122.391502, 47.667095], [-122.391597, 47.667097], [-122.391693, 47.667096], [-122.391784, 47.667099], [-122.391847, 47.667096], [-122.391887, 47.667097], [-122.391924, 47.667113], [-122.392031, 47.667115], [-122.392089, 47.667121], [-122.392091, 47.667162], [-122.392096, 47.667231], [-122.3921, 47.667326], [-122.392123, 47.667383], [-122.392135, 47.667409], [-122.392171, 47.667409], [-122.392252, 47.667408], [-122.39239, 47.667405], [-122.392478, 47.667405], [-122.39254, 47.667402], [-122.392632, 47.667392], [-122.392675, 47.667403], [-122.392709, 47.667413], [-122.392806, 47.667408], [-122.392874, 47.667396], [-122.39292, 47.667385], [-122.392979, 47.667395], [-122.39302, 47.667389], [-122.393098, 47.66738], [-122.393167, 47.66738], [-122.393225, 47.667378], [-122.393222, 47.667409], [-122.393223, 47.667472], [-122.393238, 47.667536], [-122.393298, 47.667559], [-122.393354, 47.667557], [-122.3934, 47.667524], [-122.393445, 47.667526], [-122.393448, 47.667559], [-122.39349, 47.66756], [-122.393527, 47.667562], [-122.393567, 47.66756], [-122.393614, 47.66756], [-122.393645, 47.667548], [-122.39368, 47.667502], [-122.39372, 47.667443], [-122.393759, 47.667391], [-122.393758, 47.667321], [-122.393758, 47.667212], [-122.393761, 47.667118], [-122.393762, 47.667015], [-122.393761, 47.666933], [-122.393761, 47.666855], [-122.393761, 47.666787], [-122.393766, 47.666693], [-122.393764, 47.666614], [-122.393767, 47.666559], [-122.393797, 47.666542], [-122.393833, 47.666541], [-122.39391, 47.66654], [-122.39403, 47.666538], [-122.394118, 47.666536], [-122.394194, 47.666534], [-122.394246, 47.666533], [-122.394308, 47.666532], [-122.394382, 47.666533], [-122.394451, 47.666532], [-122.394527, 47.666531], [-122.39459, 47.66653], [-122.394595, 47.666555], [-122.394635, 47.666559], [-122.394717, 47.666562], [-122.394814, 47.666558], [-122.394844, 47.666534], [-122.394841, 47.666481], [-122.394835, 47.666425], [-122.394833, 47.666389], [-122.39485, 47.666354], [-122.394885, 47.666348], [-122.394935, 47.666341], [-122.39507, 47.666317], [-122.395206, 47.666294], [-122.395309, 47.666279], [-122.395398, 47.666265], [-122.395458, 47.666258], [-122.395482, 47.666237], [-122.395512, 47.666181], [-122.395581, 47.666061], [-122.39564, 47.665956], [-122.395696, 47.665848], [-122.39577, 47.665721], [-122.395814, 47.665647], [-122.395838, 47.665594], [-122.395801, 47.665582], [-122.39573, 47.665561], [-122.395571, 47.66552], [-122.395426, 47.665485], [-122.395205, 47.665433], [-122.395101, 47.665409], [-122.394958, 47.665373], [-122.394868, 47.66535], [-122.394823, 47.665344], [-122.394784, 47.665348], [-122.394712, 47.665349], [-122.39465, 47.665349], [-122.394612, 47.665344], [-122.394571, 47.665334], [-122.394512, 47.665335], [-122.394489, 47.665356], [-122.394421, 47.66534], [-122.394273, 47.665305], [-122.394155, 47.665281], [-122.394109, 47.665253], [-122.394143, 47.665192], [-122.39415, 47.665137], [-122.394063, 47.665116], [-122.393934, 47.665082], [-122.393773, 47.665041], [-122.393637, 47.665011], [-122.393578, 47.664993], [-122.393447, 47.664977], [-122.393294, 47.664957], [-122.393088, 47.664931], [-122.392923, 47.664912], [-122.392738, 47.664892], [-122.392595, 47.664876], [-122.392421, 47.664857], [-122.392196, 47.664832], [-122.392034, 47.664812], [-122.391866, 47.664793], [-122.391679, 47.664771], [-122.391508, 47.664751], [-122.391337, 47.664732], [-122.39123, 47.664718], [-122.39119, 47.664713], [-122.391157, 47.664701], [-122.391117, 47.664683], [-122.39109, 47.664644], [-122.391132, 47.664645], [-122.391253, 47.66466], [-122.391424, 47.664679], [-122.391585, 47.664698], [-122.391748, 47.664717], [-122.39192, 47.664737], [-122.392069, 47.664753], [-122.392238, 47.664771], [-122.392384, 47.664789], [-122.392543, 47.664807], [-122.392703, 47.664826], [-122.392839, 47.664842], [-122.393001, 47.664862], [-122.393189, 47.664884], [-122.393332, 47.6649], [-122.393533, 47.66492], [-122.393602, 47.664932], [-122.393684, 47.664952], [-122.393836, 47.664992], [-122.393974, 47.665027], [-122.394136, 47.665067], [-122.394277, 47.665099], [-122.394384, 47.665132], [-122.394522, 47.665168], [-122.394627, 47.665192], [-122.394749, 47.665222], [-122.394859, 47.665252], [-122.394942, 47.665276], [-122.395007, 47.665301], [-122.395042, 47.66531], [-122.395099, 47.665323], [-122.395188, 47.665339], [-122.395261, 47.665356], [-122.39539, 47.665387], [-122.395533, 47.665423], [-122.395696, 47.66546], [-122.395814, 47.665488], [-122.395949, 47.665523], [-122.396125, 47.665568], [-122.396257, 47.665599], [-122.396422, 47.665642], [-122.396579, 47.665677], [-122.396679, 47.665704], [-122.396802, 47.665736], [-122.396924, 47.665769], [-122.397008, 47.665788], [-122.397091, 47.66581], [-122.397235, 47.665844], [-122.397371, 47.665878], [-122.397505, 47.665908], [-122.397628, 47.665938], [-122.397785, 47.665976], [-122.397928, 47.666011], [-122.398043, 47.666042], [-122.398152, 47.666074], [-122.398239, 47.6661], [-122.398321, 47.666088], [-122.398361, 47.666125], [-122.398396, 47.666134], [-122.398431, 47.666145], [-122.398493, 47.66616], [-122.398562, 47.666175], [-122.398685, 47.666206], [-122.398793, 47.666236], [-122.398908, 47.666267], [-122.399026, 47.666299], [-122.399149, 47.666335], [-122.399243, 47.666362], [-122.399328, 47.666391], [-122.399432, 47.666422], [-122.399522, 47.666445], [-122.399587, 47.666465], [-122.39967, 47.666488], [-122.399712, 47.666504], [-122.399744, 47.666515], [-122.399741, 47.666569], [-122.399739, 47.666619], [-122.399739, 47.666646], [-122.399793, 47.66668], [-122.399849, 47.666703], [-122.399941, 47.666743], [-122.400033, 47.666782], [-122.400128, 47.666828], [-122.400276, 47.666879], [-122.400401, 47.666934], [-122.400543, 47.666983], [-122.400688, 47.66703], [-122.400786, 47.667083], [-122.400913, 47.667136], [-122.400982, 47.667184], [-122.401044, 47.667213], [-122.40117, 47.667264], [-122.401288, 47.667317], [-122.401421, 47.66736], [-122.40154, 47.667408], [-122.401615, 47.667444], [-122.401685, 47.667441], [-122.401763, 47.667466], [-122.401847, 47.667502], [-122.401938, 47.667564], [-122.402004, 47.667846], [-122.401941, 47.66805], [-122.401013, 47.667682], [-122.398327, 47.667485], [-122.398338, 47.668121], [-122.398327, 47.668563], [-122.398306, 47.669455], [-122.398303, 47.669566], [-122.398338, 47.671094], [-122.398343, 47.672025], [-122.398373, 47.67409], [-122.398369, 47.675829], [-122.398264, 47.675864], [-122.395674, 47.67588], [-122.392957, 47.675914], [-122.392827, 47.675915], [-122.391773, 47.675916], [-122.390449, 47.675926], [-122.388956, 47.675942], [-122.387702, 47.675948], [-122.387087, 47.675952], [-122.385436, 47.675959], [-122.383603, 47.67598], [-122.381828, 47.675992], [-122.379989, 47.675989], [-122.377903, 47.675998], [-122.376708, 47.675998], [-122.376337, 47.675918]]]]
    },
    "properties": {
      "neighbourhood": "Adams",
      "neighbourhood_group": "Ballard"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.376337, 47.675918], [-122.37608, 47.675897], [-122.375586, 47.675934], [-122.373288, 47.67594], [-122.371714, 47.675981], [-122.371141, 47.675958], [-122.370612, 47.675922], [-122.36953, 47.675977], [-122.368514, 47.675942], [-122.367446, 47.675953], [-122.366299, 47.676015], [-122.366054, 47.676005], [-122.365228, 47.675992], [-122.364351, 47.675989], [-122.363648, 47.675993], [-122.362717, 47.675994], [-122.362245, 47.675995], [-122.360948, 47.675998], [-122.360691, 47.676004], [-122.360776, 47.675892], [-122.360772, 47.675295], [-122.360776, 47.674567], [-122.360778, 47.673926], [-122.360786, 47.673227], [-122.360788, 47.67243], [-122.360793, 47.671594], [-122.36079, 47.670749], [-122.360797, 47.669864], [-122.360805, 47.668979], [-122.360804, 47.668086], [-122.360803, 47.66719], [-122.360803, 47.666908], [-122.360801, 47.666277], [-122.360804, 47.665358], [-122.360802, 47.664433], [-122.3608, 47.663497], [-122.36079, 47.662665], [-122.360789, 47.662562], [-122.36079, 47.662374], [-122.360791, 47.661466], [-122.362146, 47.661457], [-122.36344, 47.661458], [-122.364137, 47.661457], [-122.366156, 47.661474], [-122.36612, 47.659351], [-122.365385, 47.658489], [-122.36504, 47.658142], [-122.36504, 47.657761], [-122.365899, 47.657162], [-122.366094, 47.657025], [-122.366797, 47.65653], [-122.366827, 47.656544], [-122.366858, 47.656565], [-122.366891, 47.656586], [-122.366931, 47.656605], [-122.366985, 47.65664], [-122.366966, 47.656664], [-122.366942, 47.656694], [-122.366946, 47.656727], [-122.366921, 47.656769], [-122.366915, 47.656802], [-122.366911, 47.656836], [-122.366929, 47.656858], [-122.366954, 47.656877], [-122.36699, 47.656903], [-122.367023, 47.656881], [-122.367059, 47.656907], [-122.367085, 47.656931], [-122.367137, 47.656964], [-122.367177, 47.656987], [-122.367208, 47.657021], [-122.367257, 47.657053], [-122.367316, 47.6571], [-122.367364, 47.657134], [-122.367407, 47.657166], [-122.367397, 47.65719], [-122.367343, 47.657186], [-122.367261, 47.657183], [-122.367126, 47.657183], [-122.367124, 47.657223], [-122.367069, 47.657245], [-122.367085, 47.657272], [-122.367125, 47.657287], [-122.367209, 47.657287], [-122.367318, 47.657292], [-122.367357, 47.657294], [-122.36741, 47.657298], [-122.367492, 47.657307], [-122.367593, 47.657309], [-122.367651, 47.657314], [-122.367751, 47.657325], [-122.367748, 47.657364], [-122.367745, 47.657396], [-122.367736, 47.657436], [-122.367731, 47.657479], [-122.367936, 47.657479], [-122.36812, 47.657479], [-122.368144, 47.657502], [-122.36818, 47.657522], [-122.368221, 47.657548], [-122.368257, 47.657564], [-122.368282, 47.657587], [-122.368331, 47.657627], [-122.368369, 47.657651], [-122.368395, 47.657675], [-122.368437, 47.6577], [-122.368471, 47.657718], [-122.3685, 47.657737], [-122.368534, 47.657762], [-122.368561, 47.657784], [-122.368597, 47.657809], [-122.368627, 47.657828], [-122.368654, 47.657847], [-122.368707, 47.657889], [-122.368734, 47.657914], [-122.368793, 47.657951], [-122.368823, 47.657971], [-122.368853, 47.657992], [-122.368876, 47.658011], [-122.36892, 47.658043], [-122.368944, 47.65806], [-122.368988, 47.658093], [-122.369025, 47.658118], [-122.36906, 47.658148], [-122.369034, 47.65817], [-122.369007, 47.658188], [-122.369, 47.658212], [-122.369018, 47.658263], [-122.369044, 47.658294], [-122.369075, 47.658312], [-122.36911, 47.658332], [-122.369157, 47.658347], [-122.369212, 47.658361], [-122.369318, 47.658374], [-122.369358, 47.658399], [-122.369407, 47.658423], [-122.369441, 47.658444], [-122.369474, 47.658465], [-122.369514, 47.658491], [-122.369572, 47.65853], [-122.369603, 47.658549], [-122.369632, 47.658566], [-122.369664, 47.658581], [-122.369696, 47.658598], [-122.369736, 47.658619], [-122.369776, 47.658634], [-122.369817, 47.658662], [-122.369827, 47.658698], [-122.369868, 47.658716], [-122.369905, 47.658742], [-122.369942, 47.658767], [-122.369968, 47.658788], [-122.369999, 47.658813], [-122.37003, 47.658831], [-122.370068, 47.658857], [-122.370118, 47.658901], [-122.370169, 47.658942], [-122.370196, 47.658968], [-122.370217, 47.658989], [-122.370246, 47.659017], [-122.370278, 47.659049], [-122.370312, 47.659077], [-122.370337, 47.659098], [-122.370367, 47.659124], [-122.370396, 47.659152], [-122.370416, 47.659179], [-122.370446, 47.659201], [-122.370473, 47.65922], [-122.370503, 47.659253], [-122.370517, 47.659299], [-122.37054, 47.659321], [-122.370541, 47.65945], [-122.370643, 47.659463], [-122.370669, 47.659486], [-122.370703, 47.659509], [-122.370724, 47.659531], [-122.370741, 47.659562], [-122.370756, 47.659584], [-122.370772, 47.65961], [-122.370789, 47.659634], [-122.370825, 47.659665], [-122.370859, 47.659693], [-122.37091, 47.659728], [-122.370957, 47.659736], [-122.370966, 47.659802], [-122.370995, 47.659844], [-122.371095, 47.659879], [-122.371137, 47.659888], [-122.371168, 47.659869], [-122.371211, 47.659842], [-122.37124, 47.659823], [-122.371276, 47.659802], [-122.371312, 47.659782], [-122.371351, 47.65976], [-122.371426, 47.659806], [-122.371463, 47.659829], [-122.371492, 47.659853], [-122.37154, 47.659894], [-122.371567, 47.659915], [-122.371597, 47.659937], [-122.371639, 47.659972], [-122.371672, 47.659996], [-122.371751, 47.660046], [-122.371792, 47.660071], [-122.37182, 47.660093], [-122.371851, 47.660114], [-122.371914, 47.660164], [-122.371986, 47.660214], [-122.37204, 47.660257], [-122.372115, 47.660304], [-122.372165, 47.660344], [-122.372243, 47.660403], [-122.372274, 47.660423], [-122.372276, 47.660485], [-122.372271, 47.660537], [-122.372255, 47.660589], [-122.372252, 47.660625], [-122.372301, 47.660631], [-122.372338, 47.660635], [-122.372401, 47.660642], [-122.37244, 47.660649], [-122.372484, 47.66065], [-122.372564, 47.66066], [-122.372625, 47.660669], [-122.372734, 47.660681], [-122.372807, 47.660684], [-122.372843, 47.660691], [-122.3729, 47.6607], [-122.372961, 47.660703], [-122.373007, 47.66071], [-122.37321, 47.660725], [-122.373245, 47.660728], [-122.373331, 47.660737], [-122.373386, 47.66074], [-122.37342, 47.660725], [-122.373467, 47.660739], [-122.373497, 47.660755], [-122.373551, 47.66077], [-122.373592, 47.660775], [-122.373628, 47.660774], [-122.373633, 47.66075], [-122.373666, 47.660725], [-122.373706, 47.660713], [-122.373771, 47.6607], [-122.373804, 47.660677], [-122.373805, 47.660606], [-122.373875, 47.660605], [-122.374083, 47.660605], [-122.374297, 47.660605], [-122.374502, 47.660607], [-122.374691, 47.660608], [-122.374898, 47.660608], [-122.375107, 47.660608], [-122.375206, 47.660608], [-122.375281, 47.660607], [-122.375396, 47.660609], [-122.375424, 47.660627], [-122.375423, 47.660657], [-122.375408, 47.660679], [-122.375378, 47.660704], [-122.375333, 47.66074], [-122.375302, 47.660768], [-122.375283, 47.660793], [-122.375282, 47.660823], [-122.375299, 47.660868], [-122.375322, 47.660909], [-122.375368, 47.660954], [-122.375415, 47.660986], [-122.375481, 47.661016], [-122.37555, 47.661049], [-122.375617, 47.661077], [-122.375671, 47.661095], [-122.375714, 47.66111], [-122.375767, 47.661125], [-122.375816, 47.661134], [-122.375874, 47.661144], [-122.375928, 47.661162], [-122.375975, 47.661157], [-122.375995, 47.661119], [-122.376029, 47.661079], [-122.376046, 47.661044], [-122.376053, 47.660992], [-122.376029, 47.660939], [-122.376001, 47.660902], [-122.376035, 47.660869], [-122.376095, 47.660855], [-122.376142, 47.660859], [-122.37617, 47.6609], [-122.376226, 47.66093], [-122.376227, 47.660964], [-122.376228, 47.660989], [-122.376232, 47.661081], [-122.376226, 47.661633], [-122.376215, 47.662204], [-122.376213, 47.662895], [-122.376224, 47.663836], [-122.376219, 47.66497], [-122.376222, 47.666036], [-122.376215, 47.667102], [-122.376219, 47.66818], [-122.376212, 47.669261], [-122.376216, 47.670357], [-122.376215, 47.671461], [-122.376209, 47.672553], [-122.376207, 47.673619], [-122.376207, 47.674749], [-122.376214, 47.675743], [-122.376337, 47.675918]]]]
    },
    "properties": {
      "neighbourhood": "West Woodland",
      "neighbourhood_group": "Ballard"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.356918, 47.639594], [-122.356911, 47.64003], [-122.356902, 47.640869], [-122.356885, 47.64143], [-122.35556, 47.641431], [-122.355557, 47.641855], [-122.354467, 47.641859], [-122.353551, 47.642018], [-122.352562, 47.642173], [-122.351623, 47.642389], [-122.350184, 47.642811], [-122.349581, 47.642974], [-122.349579, 47.64486], [-122.349556, 47.645713], [-122.349572, 47.64574], [-122.349587, 47.645768], [-122.349602, 47.645795], [-122.349616, 47.645823], [-122.349629, 47.645851], [-122.349642, 47.645879], [-122.349654, 47.645908], [-122.349665, 47.645936], [-122.349676, 47.645965], [-122.349686, 47.645993], [-122.349695, 47.646022], [-122.349704, 47.646051], [-122.349711, 47.64608], [-122.349719, 47.646109], [-122.349725, 47.646138], [-122.349731, 47.646167], [-122.349736, 47.646196], [-122.349741, 47.646225], [-122.349744, 47.646255], [-122.349747, 47.646284], [-122.34975, 47.646313], [-122.349752, 47.646343], [-122.349752, 47.646372], [-122.349753, 47.646402], [-122.349752, 47.646433], [-122.349765, 47.647248], [-122.349704, 47.647228], [-122.349667, 47.647211], [-122.349622, 47.647174], [-122.349574, 47.647145], [-122.349535, 47.647115], [-122.349511, 47.647096], [-122.349479, 47.647071], [-122.349392, 47.646996], [-122.349352, 47.646963], [-122.349316, 47.646926], [-122.349286, 47.646903], [-122.349238, 47.646887], [-122.349213, 47.64687], [-122.349176, 47.64683], [-122.349137, 47.646781], [-122.34908, 47.646711], [-122.349013, 47.646639], [-122.348976, 47.646592], [-122.348948, 47.64656], [-122.348927, 47.646533], [-122.348884, 47.646481], [-122.348859, 47.64645], [-122.348839, 47.646423], [-122.348776, 47.64636], [-122.348737, 47.646319], [-122.348741, 47.646283], [-122.348796, 47.64626], [-122.348785, 47.646235], [-122.348746, 47.646177], [-122.34872, 47.646146], [-122.348668, 47.646096], [-122.348624, 47.646052], [-122.348565, 47.646002], [-122.34856, 47.645973], [-122.348519, 47.645941], [-122.34849, 47.645927], [-122.348432, 47.645907], [-122.348399, 47.645892], [-122.348367, 47.645875], [-122.348311, 47.645849], [-122.348266, 47.645828], [-122.348212, 47.645807], [-122.348178, 47.645795], [-122.348128, 47.645775], [-122.348089, 47.645776], [-122.348051, 47.645775], [-122.347998, 47.645766], [-122.347892, 47.64574], [-122.347829, 47.645724], [-122.347786, 47.645706], [-122.347736, 47.645669], [-122.347668, 47.645635], [-122.347627, 47.645611], [-122.347569, 47.64558], [-122.347536, 47.645563], [-122.34746, 47.645531], [-122.34739, 47.645495], [-122.347345, 47.645477], [-122.347293, 47.645457], [-122.347194, 47.645418], [-122.34714, 47.645393], [-122.347078, 47.645369], [-122.346993, 47.645329], [-122.346933, 47.645301], [-122.346878, 47.645277], [-122.346811, 47.645254], [-122.346741, 47.645238], [-122.346692, 47.645224], [-122.346636, 47.6452], [-122.346569, 47.645171], [-122.346507, 47.645144], [-122.346464, 47.645131], [-122.34641, 47.645116], [-122.346332, 47.645087], [-122.346293, 47.645067], [-122.346247, 47.645039], [-122.346232, 47.645016], [-122.346204, 47.644998], [-122.346149, 47.644952], [-122.346103, 47.64493], [-122.346046, 47.644903], [-122.345958, 47.644861], [-122.345903, 47.64484], [-122.345855, 47.644824], [-122.34578, 47.64481], [-122.345731, 47.644807], [-122.345696, 47.644823], [-122.345648, 47.644846], [-122.345608, 47.644837], [-122.345556, 47.64482], [-122.345506, 47.644811], [-122.345477, 47.644826], [-122.345438, 47.644818], [-122.345411, 47.644835], [-122.345351, 47.644853], [-122.345275, 47.644819], [-122.345219, 47.644791], [-122.345152, 47.644764], [-122.345113, 47.644742], [-122.345052, 47.644717], [-122.34498, 47.644682], [-122.344951, 47.644667], [-122.344965, 47.644643], [-122.344988, 47.644612], [-122.345003, 47.644572], [-122.344968, 47.644553], [-122.34487, 47.644512], [-122.344833, 47.644505], [-122.3448, 47.644484], [-122.344803, 47.644456], [-122.344813, 47.644428], [-122.344781, 47.64441], [-122.344726, 47.644391], [-122.344655, 47.644364], [-122.344614, 47.644349], [-122.344528, 47.644309], [-122.344428, 47.644252], [-122.344388, 47.644226], [-122.344325, 47.64418], [-122.344269, 47.644138], [-122.344208, 47.644088], [-122.344163, 47.644043], [-122.344138, 47.644019], [-122.344089, 47.643955], [-122.344055, 47.643904], [-122.344043, 47.643866], [-122.344055, 47.643835], [-122.34406, 47.643799], [-122.344057, 47.643772], [-122.344038, 47.643748], [-122.343997, 47.643722], [-122.343947, 47.643719], [-122.343892, 47.643738], [-122.343823, 47.643743], [-122.343791, 47.643706], [-122.34376, 47.643666], [-122.343794, 47.643651], [-122.343858, 47.643624], [-122.34391, 47.643603], [-122.343885, 47.643578], [-122.343862, 47.643542], [-122.343808, 47.643478], [-122.343774, 47.64349], [-122.343727, 47.643509], [-122.343643, 47.643544], [-122.343572, 47.643558], [-122.343535, 47.643522], [-122.343514, 47.643485], [-122.343557, 47.643463], [-122.343605, 47.643443], [-122.343683, 47.643394], [-122.343662, 47.643365], [-122.343651, 47.643341], [-122.343689, 47.643331], [-122.343662, 47.643305], [-122.343636, 47.643263], [-122.343608, 47.643227], [-122.343588, 47.643195], [-122.343551, 47.64317], [-122.343493, 47.643193], [-122.343433, 47.643215], [-122.343365, 47.643244], [-122.343287, 47.643252], [-122.343248, 47.643196], [-122.343196, 47.643213], [-122.343125, 47.64324], [-122.343079, 47.643252], [-122.343053, 47.643222], [-122.343041, 47.643168], [-122.343027, 47.643145], [-122.343003, 47.643114], [-122.342972, 47.643128], [-122.342932, 47.643142], [-122.34288, 47.643163], [-122.342787, 47.643201], [-122.342711, 47.643229], [-122.342663, 47.643248], [-122.342609, 47.643264], [-122.342568, 47.643229], [-122.342532, 47.643192], [-122.342536, 47.643152], [-122.342606, 47.643123], [-122.34266, 47.643103], [-122.342691, 47.643086], [-122.342667, 47.643059], [-122.342621, 47.642998], [-122.342561, 47.642935], [-122.342527, 47.642896], [-122.342488, 47.642844], [-122.342466, 47.642811], [-122.342502, 47.642792], [-122.342531, 47.642768], [-122.342571, 47.642754], [-122.342552, 47.642728], [-122.342533, 47.642702], [-122.342517, 47.642672], [-122.342548, 47.642658], [-122.342589, 47.642642], [-122.342676, 47.642608], [-122.342766, 47.642578], [-122.342818, 47.642559], [-122.342854, 47.642543], [-122.342898, 47.642526], [-122.342935, 47.642508], [-122.342963, 47.642478], [-122.342964, 47.642449], [-122.342967, 47.642407], [-122.342958, 47.642382], [-122.342954, 47.642342], [-122.342939, 47.642306], [-122.342934, 47.64226], [-122.342946, 47.642222], [-122.342918, 47.642184], [-122.342892, 47.642151], [-122.342866, 47.642115], [-122.342839, 47.64207], [-122.342821, 47.64204], [-122.342766, 47.642005], [-122.34272, 47.641992], [-122.342698, 47.641961], [-122.342656, 47.641894], [-122.342626, 47.64186], [-122.342599, 47.641841], [-122.342564, 47.641832], [-122.342526, 47.641839], [-122.342484, 47.641837], [-122.342446, 47.641823], [-122.342402, 47.641826], [-122.342354, 47.641841], [-122.342298, 47.641855], [-122.342266, 47.64183], [-122.342209, 47.641746], [-122.342186, 47.641716], [-122.342205, 47.641694], [-122.342256, 47.641686], [-122.342333, 47.64168], [-122.342351, 47.641657], [-122.342307, 47.6416], [-122.342251, 47.641526], [-122.342207, 47.641468], [-122.342198, 47.641443], [-122.342245, 47.641426], [-122.34228, 47.641412], [-122.342306, 47.641389], [-122.34229, 47.64135], [-122.342256, 47.641295], [-122.342229, 47.64125], [-122.342199, 47.641212], [-122.342132, 47.641123], [-122.342118, 47.641092], [-122.342086, 47.64103], [-122.342072, 47.641005], [-122.342053, 47.640978], [-122.342034, 47.64095], [-122.341984, 47.640871], [-122.341964, 47.640842], [-122.341905, 47.640785], [-122.341826, 47.640701], [-122.341798, 47.640656], [-122.341802, 47.640619], [-122.341798, 47.640585], [-122.341778, 47.640552], [-122.341753, 47.640505], [-122.341716, 47.640463], [-122.341681, 47.640429], [-122.341629, 47.640371], [-122.341595, 47.640314], [-122.341577, 47.64029], [-122.34156, 47.640258], [-122.341521, 47.640199], [-122.341477, 47.640129], [-122.341447, 47.640078], [-122.341429, 47.640055], [-122.341402, 47.64003], [-122.341346, 47.639978], [-122.341304, 47.639933], [-122.341289, 47.63991], [-122.341272, 47.639878], [-122.341236, 47.639817], [-122.341212, 47.639785], [-122.341196, 47.639746], [-122.341174, 47.63969], [-122.341142, 47.639615], [-122.341111, 47.63955], [-122.341076, 47.639502], [-122.341034, 47.639433], [-122.341017, 47.639405], [-122.340979, 47.639358], [-122.340957, 47.639327], [-122.340935, 47.63929], [-122.340903, 47.639256], [-122.340852, 47.63923], [-122.340835, 47.639198], [-122.340827, 47.639173], [-122.340811, 47.639135], [-122.340762, 47.639135], [-122.340652, 47.639118], [-122.340634, 47.639079], [-122.340611, 47.639036], [-122.340585, 47.638989], [-122.340566, 47.638957], [-122.34053, 47.6389], [-122.340494, 47.638853], [-122.34046, 47.638797], [-122.340458, 47.63877], [-122.340545, 47.638761], [-122.340456, 47.638737], [-122.340435, 47.638699], [-122.340406, 47.638639], [-122.340382, 47.638597], [-122.340349, 47.638535], [-122.34033, 47.638508], [-122.340282, 47.638475], [-122.340286, 47.638448], [-122.340291, 47.638422], [-122.34029, 47.638396], [-122.340285, 47.638354], [-122.340296, 47.638321], [-122.340293, 47.638289], [-122.340279, 47.638251], [-122.340259, 47.638199], [-122.340268, 47.638175], [-122.340286, 47.638147], [-122.340313, 47.638113], [-122.340294, 47.638078], [-122.340265, 47.638021], [-122.340558, 47.638005], [-122.341027, 47.638008], [-122.341535, 47.638001], [-122.341921, 47.638], [-122.343287, 47.637639], [-122.343809, 47.637462], [-122.34438, 47.637424], [-122.343861, 47.636672], [-122.343842, 47.636649], [-122.343824, 47.636625], [-122.343806, 47.636601], [-122.343789, 47.636577], [-122.343773, 47.636552], [-122.343757, 47.636527], [-122.343742, 47.636503], [-122.343728, 47.636478], [-122.343714, 47.636453], [-122.3437, 47.636427], [-122.343688, 47.636402], [-122.343675, 47.636376], [-122.343664, 47.636351], [-122.343652, 47.636325], [-122.34364, 47.636299], [-122.343629, 47.636274], [-122.343618, 47.636248], [-122.343609, 47.636222], [-122.343598, 47.636196], [-122.343589, 47.63617], [-122.343579, 47.636144], [-122.343571, 47.636118], [-122.343562, 47.636092], [-122.343553, 47.636065], [-122.343545, 47.636039], [-122.343538, 47.636013], [-122.343531, 47.635986], [-122.343524, 47.63596], [-122.343517, 47.635933], [-122.343511, 47.635907], [-122.343505, 47.63588], [-122.3435, 47.635854], [-122.343494, 47.635827], [-122.343489, 47.635801], [-122.343485, 47.635774], [-122.343481, 47.635747], [-122.343477, 47.635721], [-122.343474, 47.635694], [-122.34347, 47.635667], [-122.343467, 47.63564], [-122.343465, 47.635614], [-122.343463, 47.635587], [-122.343461, 47.63556], [-122.34346, 47.635533], [-122.343459, 47.635506], [-122.343458, 47.63548], [-122.343458, 47.635453], [-122.343458, 47.635426], [-122.343458, 47.635399], [-122.343459, 47.635372], [-122.343476, 47.634199], [-122.343495, 47.633064], [-122.343504, 47.63206], [-122.343517, 47.631303], [-122.343519, 47.630685], [-122.34354, 47.628778], [-122.343535, 47.628274], [-122.34354, 47.628118], [-122.343543, 47.628019], [-122.34402, 47.628019], [-122.346217, 47.628033], [-122.346892, 47.628034], [-122.347536, 47.628036], [-122.347671, 47.628068], [-122.347884, 47.628075], [-122.348424, 47.6281], [-122.349218, 47.628111], [-122.349852, 47.628108], [-122.350014, 47.628104], [-122.350155, 47.628141], [-122.351463, 47.628137], [-122.352614, 47.62814], [-122.35328, 47.62814], [-122.353669, 47.628142], [-122.354573, 47.628136], [-122.355263, 47.628127], [-122.355387, 47.628066], [-122.35584, 47.628071], [-122.356681, 47.628075], [-122.356675, 47.628955], [-122.356608, 47.629897], [-122.356609, 47.6306], [-122.356599, 47.6307], [-122.356598, 47.63149], [-122.356594, 47.632082], [-122.356596, 47.632107], [-122.356601, 47.632133], [-122.35661, 47.632158], [-122.356624, 47.632185], [-122.35664, 47.632209], [-122.356659, 47.632231], [-122.356681, 47.632253], [-122.356707, 47.632272], [-122.356734, 47.63229], [-122.356782, 47.632318], [-122.35682, 47.632344], [-122.356845, 47.632364], [-122.356869, 47.632384], [-122.356891, 47.632406], [-122.35691, 47.632428], [-122.35693, 47.632458], [-122.356958, 47.632496], [-122.35697, 47.632521], [-122.35698, 47.632546], [-122.356989, 47.632571], [-122.356994, 47.632597], [-122.356999, 47.632623], [-122.357001, 47.632649], [-122.357, 47.632675], [-122.356998, 47.632701], [-122.356993, 47.632727], [-122.356979, 47.633918], [-122.356971, 47.635123], [-122.356947, 47.636516], [-122.356938, 47.637519], [-122.35693, 47.638383], [-122.356918, 47.639594]]]]
    },
    "properties": {
      "neighbourhood": "East Queen Anne",
      "neighbourhood_group": "Queen Anne"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.376169, 47.642937], [-122.376169, 47.643261], [-122.376168, 47.643762], [-122.376174, 47.644242], [-122.376172, 47.64477], [-122.376207, 47.645105], [-122.376291, 47.645957], [-122.376352, 47.646581], [-122.376377, 47.647416], [-122.376378, 47.648303], [-122.376328, 47.650014], [-122.376233, 47.651647], [-122.376217, 47.652517], [-122.376215, 47.652901], [-122.376209, 47.65333], [-122.376214, 47.653727], [-122.37622, 47.653937], [-122.37622, 47.654693], [-122.376224, 47.65545], [-122.376224, 47.65596], [-122.376117, 47.655959], [-122.376118, 47.656096], [-122.376118, 47.656236], [-122.376119, 47.656378], [-122.376119, 47.656517], [-122.37612, 47.656656], [-122.376121, 47.656799], [-122.376122, 47.656948], [-122.376122, 47.657088], [-122.376123, 47.657225], [-122.376123, 47.657363], [-122.376124, 47.657517], [-122.376091, 47.657648], [-122.376091, 47.657792], [-122.376077, 47.657931], [-122.376019, 47.657931], [-122.375807, 47.657929], [-122.375806, 47.657884], [-122.375806, 47.657743], [-122.375675, 47.657742], [-122.375587, 47.657743], [-122.375416, 47.657745], [-122.375281, 47.657734], [-122.375277, 47.657698], [-122.375278, 47.657559], [-122.375279, 47.657418], [-122.375277, 47.657384], [-122.375277, 47.657282], [-122.375278, 47.657143], [-122.375237, 47.657142], [-122.375058, 47.657137], [-122.374978, 47.657135], [-122.374791, 47.657132], [-122.374676, 47.657131], [-122.374585, 47.657127], [-122.374354, 47.657123], [-122.374274, 47.657119], [-122.37423, 47.657116], [-122.374024, 47.657113], [-122.373911, 47.657112], [-122.37378, 47.657109], [-122.373781, 47.657242], [-122.373781, 47.657384], [-122.37378, 47.657526], [-122.37378, 47.657663], [-122.373779, 47.657749], [-122.373759, 47.657779], [-122.373717, 47.657795], [-122.373623, 47.657797], [-122.373587, 47.6578], [-122.373382, 47.6578], [-122.373295, 47.657804], [-122.373164, 47.657796], [-122.373033, 47.657794], [-122.373013, 47.657818], [-122.372956, 47.657818], [-122.372894, 47.657813], [-122.372842, 47.657806], [-122.372762, 47.657781], [-122.372719, 47.657756], [-122.372705, 47.657726], [-122.37269, 47.657694], [-122.372677, 47.657653], [-122.372652, 47.657614], [-122.372637, 47.657592], [-122.372612, 47.657567], [-122.372573, 47.657558], [-122.372494, 47.657563], [-122.372494, 47.657698], [-122.372285, 47.657698], [-122.372078, 47.657701], [-122.371863, 47.657701], [-122.371657, 47.657701], [-122.371446, 47.657701], [-122.371279, 47.657714], [-122.371176, 47.65768], [-122.371088, 47.657651], [-122.371047, 47.657638], [-122.371004, 47.657624], [-122.370959, 47.657609], [-122.370862, 47.657577], [-122.370804, 47.657558], [-122.370781, 47.657511], [-122.370717, 47.657473], [-122.370656, 47.657428], [-122.370621, 47.657418], [-122.370574, 47.657395], [-122.370509, 47.657358], [-122.370452, 47.657328], [-122.370411, 47.657304], [-122.370382, 47.657286], [-122.370347, 47.657267], [-122.370233, 47.657208], [-122.370204, 47.657191], [-122.370163, 47.657163], [-122.370111, 47.657125], [-122.370043, 47.657079], [-122.369979, 47.657041], [-122.369939, 47.657017], [-122.369895, 47.657002], [-122.369856, 47.656982], [-122.369808, 47.656958], [-122.369746, 47.656928], [-122.369672, 47.656889], [-122.369621, 47.65686], [-122.369529, 47.656806], [-122.369512, 47.656779], [-122.369531, 47.656758], [-122.369523, 47.656733], [-122.36946, 47.65671], [-122.369415, 47.656705], [-122.369373, 47.656691], [-122.369341, 47.656676], [-122.369308, 47.656656], [-122.369259, 47.656637], [-122.369209, 47.656617], [-122.36917, 47.656592], [-122.369127, 47.65657], [-122.369057, 47.656526], [-122.369009, 47.656493], [-122.368968, 47.65647], [-122.368975, 47.656446], [-122.368997, 47.656416], [-122.369049, 47.656381], [-122.369102, 47.656335], [-122.369129, 47.656313], [-122.369185, 47.656267], [-122.369268, 47.656199], [-122.369349, 47.656135], [-122.369373, 47.656111], [-122.369441, 47.656054], [-122.369474, 47.656033], [-122.369511, 47.656005], [-122.369545, 47.655968], [-122.369582, 47.655919], [-122.369601, 47.655888], [-122.36961, 47.655822], [-122.369615, 47.655797], [-122.369644, 47.655732], [-122.369657, 47.655684], [-122.369659, 47.655634], [-122.369607, 47.655637], [-122.369538, 47.655637], [-122.369487, 47.655639], [-122.36945, 47.65564], [-122.3694, 47.655645], [-122.369335, 47.655655], [-122.369289, 47.655663], [-122.369244, 47.655674], [-122.369166, 47.655691], [-122.369123, 47.6557], [-122.369026, 47.655718], [-122.36899, 47.655723], [-122.368896, 47.65574], [-122.368839, 47.655756], [-122.368801, 47.655766], [-122.368746, 47.655774], [-122.368729, 47.65575], [-122.368766, 47.655731], [-122.368807, 47.655714], [-122.368845, 47.6557], [-122.368893, 47.655675], [-122.368976, 47.655622], [-122.369023, 47.655598], [-122.369044, 47.655568], [-122.369069, 47.655537], [-122.36911, 47.655519], [-122.36914, 47.655501], [-122.369178, 47.655481], [-122.369217, 47.655463], [-122.369296, 47.655423], [-122.369268, 47.655405], [-122.369238, 47.655385], [-122.369206, 47.655367], [-122.369161, 47.655339], [-122.369108, 47.655306], [-122.369046, 47.655275], [-122.368976, 47.655236], [-122.368948, 47.655253], [-122.36889, 47.65523], [-122.368843, 47.655204], [-122.368808, 47.655179], [-122.368776, 47.655153], [-122.368743, 47.655133], [-122.368649, 47.65507], [-122.368529, 47.655006], [-122.368419, 47.654944], [-122.368176, 47.654802], [-122.367925, 47.654652], [-122.367491, 47.654399], [-122.367191, 47.654235], [-122.366375, 47.655157], [-122.366311, 47.655128], [-122.366462, 47.65491], [-122.366856, 47.654454], [-122.366327, 47.654237], [-122.365839, 47.654773], [-122.365802, 47.654775], [-122.365777, 47.654797], [-122.365708, 47.654776], [-122.365988, 47.654438], [-122.366151, 47.654251], [-122.366353, 47.654032], [-122.366538, 47.653822], [-122.36666, 47.653678], [-122.366434, 47.653586], [-122.366072, 47.654002], [-122.365702, 47.653864], [-122.365779, 47.653743], [-122.365579, 47.653657], [-122.365696, 47.653512], [-122.365805, 47.653348], [-122.365791, 47.653264], [-122.365711, 47.653222], [-122.365583, 47.653183], [-122.365506, 47.653159], [-122.365502, 47.653091], [-122.365484, 47.653057], [-122.365141, 47.652987], [-122.364998, 47.652942], [-122.364947, 47.652845], [-122.364771, 47.652798], [-122.364631, 47.652757], [-122.364588, 47.652766], [-122.364524, 47.652834], [-122.364476, 47.652851], [-122.364338, 47.652837], [-122.364275, 47.652844], [-122.3642, 47.652848], [-122.364008, 47.652818], [-122.363939, 47.652779], [-122.363826, 47.652762], [-122.363739, 47.652861], [-122.363662, 47.652861], [-122.363569, 47.65286], [-122.363391, 47.652856], [-122.363244, 47.653119], [-122.362804, 47.653019], [-122.363037, 47.652509], [-122.362421, 47.652367], [-122.362337, 47.652506], [-122.362043, 47.652451], [-122.361954, 47.652624], [-122.361697, 47.652567], [-122.361664, 47.652605], [-122.361282, 47.652509], [-122.361251, 47.652544], [-122.360999, 47.652416], [-122.360701, 47.652268], [-122.360419, 47.652121], [-122.360154, 47.651987], [-122.35988, 47.651856], [-122.359625, 47.651723], [-122.359365, 47.651593], [-122.359115, 47.65147], [-122.358806, 47.651333], [-122.358523, 47.651208], [-122.358303, 47.651096], [-122.358181, 47.651028], [-122.357884, 47.65087], [-122.357566, 47.650716], [-122.357106, 47.650497], [-122.357048, 47.650471], [-122.357014, 47.650454], [-122.356974, 47.650436], [-122.356937, 47.650417], [-122.356829, 47.650361], [-122.356793, 47.650346], [-122.356721, 47.650312], [-122.356644, 47.650275], [-122.356622, 47.650255], [-122.356565, 47.650228], [-122.356521, 47.65021], [-122.356456, 47.650175], [-122.356388, 47.650143], [-122.356324, 47.650117], [-122.356289, 47.650104], [-122.356225, 47.650073], [-122.356187, 47.650056], [-122.356151, 47.65004], [-122.356055, 47.649994], [-122.355991, 47.649962], [-122.355849, 47.649891], [-122.355812, 47.649874], [-122.355757, 47.649849], [-122.355634, 47.649793], [-122.355551, 47.649759], [-122.355497, 47.649735], [-122.35543, 47.649708], [-122.355376, 47.649684], [-122.355304, 47.649654], [-122.355223, 47.649614], [-122.355121, 47.649571], [-122.354993, 47.649511], [-122.354882, 47.649461], [-122.354798, 47.649423], [-122.354754, 47.649402], [-122.354657, 47.649361], [-122.354537, 47.649297], [-122.35448, 47.649275], [-122.354439, 47.649257], [-122.354354, 47.649223], [-122.354319, 47.649209], [-122.354272, 47.649183], [-122.354235, 47.649166], [-122.354144, 47.649121], [-122.354044, 47.649071], [-122.353959, 47.649032], [-122.353926, 47.649016], [-122.353819, 47.648969], [-122.353777, 47.648947], [-122.353716, 47.648922], [-122.353653, 47.648893], [-122.35358, 47.648865], [-122.353523, 47.648836], [-122.353481, 47.648819], [-122.353422, 47.648793], [-122.353355, 47.648764], [-122.353278, 47.648728], [-122.353205, 47.648702], [-122.353161, 47.648682], [-122.35311, 47.648661], [-122.353044, 47.648631], [-122.352965, 47.648599], [-122.352859, 47.648551], [-122.352804, 47.648526], [-122.352749, 47.648503], [-122.352718, 47.648491], [-122.352668, 47.648468], [-122.352615, 47.648447], [-122.352565, 47.648424], [-122.352479, 47.648385], [-122.352362, 47.648328], [-122.352285, 47.648291], [-122.352217, 47.648263], [-122.352167, 47.64824], [-122.35208, 47.648204], [-122.352031, 47.64818], [-122.351964, 47.648152], [-122.351898, 47.64812], [-122.351851, 47.648103], [-122.351795, 47.648078], [-122.351717, 47.648048], [-122.351659, 47.648024], [-122.351584, 47.647989], [-122.351505, 47.647954], [-122.351454, 47.647935], [-122.351382, 47.6479], [-122.351335, 47.64788], [-122.351259, 47.647847], [-122.351148, 47.6478], [-122.35109, 47.647774], [-122.351017, 47.647738], [-122.350911, 47.647691], [-122.350856, 47.647667], [-122.350765, 47.647624], [-122.350693, 47.647593], [-122.350642, 47.647566], [-122.350594, 47.647547], [-122.35055, 47.647525], [-122.350473, 47.647496], [-122.350435, 47.64748], [-122.35038, 47.647463], [-122.350326, 47.647456], [-122.350251, 47.647453], [-122.350122, 47.647447], [-122.35008, 47.647433], [-122.350044, 47.647409], [-122.350015, 47.647378], [-122.349986, 47.647346], [-122.34996, 47.647329], [-122.349911, 47.647308], [-122.34984, 47.647271], [-122.349765, 47.647248], [-122.349752, 47.646433], [-122.349753, 47.646402], [-122.349752, 47.646372], [-122.349752, 47.646343], [-122.34975, 47.646313], [-122.349747, 47.646284], [-122.349744, 47.646255], [-122.349741, 47.646225], [-122.349736, 47.646196], [-122.349731, 47.646167], [-122.349725, 47.646138], [-122.349719, 47.646109], [-122.349711, 47.64608], [-122.349704, 47.646051], [-122.349695, 47.646022], [-122.349686, 47.645993], [-122.349676, 47.645965], [-122.349665, 47.645936], [-122.349654, 47.645908], [-122.349642, 47.645879], [-122.349629, 47.645851], [-122.349616, 47.645823], [-122.349602, 47.645795], [-122.349587, 47.645768], [-122.349572, 47.64574], [-122.349556, 47.645713], [-122.349579, 47.64486], [-122.349581, 47.642974], [-122.350184, 47.642811], [-122.351623, 47.642389], [-122.352562, 47.642173], [-122.353551, 47.642018], [-122.354467, 47.641859], [-122.355557, 47.641855], [-122.35556, 47.641431], [-122.356885, 47.64143], [-122.356902, 47.640869], [-122.356911, 47.64003], [-122.356918, 47.639594], [-122.359619, 47.639597], [-122.361528, 47.639593], [-122.363398, 47.639594], [-122.365138, 47.639596], [-122.366611, 47.639583], [-122.368455, 47.639599], [-122.370304, 47.6396], [-122.371554, 47.63959], [-122.371552, 47.639707], [-122.371532, 47.640689], [-122.371584, 47.640689], [-122.372233, 47.640684], [-122.373995, 47.640685], [-122.374365, 47.64068], [-122.374421, 47.640753], [-122.374948, 47.641444], [-122.375309, 47.641913], [-122.376022, 47.642852], [-122.376169, 47.642937]]]]
    },
    "properties": {
      "neighbourhood": "North Queen Anne",
      "neighbourhood_group": "Queen Anne"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.329072, 47.690102], [-122.329058, 47.690056], [-122.329031, 47.689979], [-122.328975, 47.689832], [-122.328877, 47.689587], [-122.328727, 47.689311], [-122.32869, 47.689241], [-122.328652, 47.689172], [-122.328612, 47.689104], [-122.32857, 47.689036], [-122.328526, 47.688968], [-122.328481, 47.688901], [-122.328409, 47.6888], [-122.328138, 47.688436], [-122.328001, 47.688281], [-122.327801, 47.688058], [-122.327496, 47.687761], [-122.327418, 47.687688], [-122.327337, 47.687615], [-122.327254, 47.687543], [-122.32717, 47.687473], [-122.327083, 47.687403], [-122.326995, 47.687334], [-122.326878, 47.687247], [-122.326247, 47.686749], [-122.325608, 47.686255], [-122.32497, 47.685755], [-122.324339, 47.685256], [-122.323697, 47.684758], [-122.323061, 47.684255], [-122.322978, 47.684191], [-122.322896, 47.684127], [-122.322816, 47.684062], [-122.322737, 47.683995], [-122.322661, 47.683928], [-122.322586, 47.68386], [-122.322469, 47.683749], [-122.322346, 47.683624], [-122.322227, 47.683498], [-122.322111, 47.68337], [-122.321988, 47.683231], [-122.321762, 47.682958], [-122.321599, 47.682719], [-122.321553, 47.682652], [-122.321508, 47.682584], [-122.321465, 47.682515], [-122.321424, 47.682447], [-122.321385, 47.682377], [-122.321348, 47.682307], [-122.321296, 47.682202], [-122.32126, 47.682141], [-122.321226, 47.682079], [-122.321194, 47.682017], [-122.321164, 47.681954], [-122.321135, 47.681892], [-122.321108, 47.681829], [-122.321082, 47.681765], [-122.32105, 47.681679], [-122.32099, 47.681502], [-122.320886, 47.681155], [-122.32084, 47.680927], [-122.320811, 47.680652], [-122.320756, 47.680144], [-122.32074, 47.679632], [-122.320718, 47.679119], [-122.320692, 47.678604], [-122.320672, 47.678089], [-122.320648, 47.677575], [-122.32064, 47.67706], [-122.320651, 47.676544], [-122.320688, 47.676038], [-122.32071, 47.675844], [-122.320757, 47.675516], [-122.320852, 47.674995], [-122.320862, 47.67491], [-122.320876, 47.674825], [-122.320891, 47.674741], [-122.320909, 47.674656], [-122.320929, 47.674572], [-122.320953, 47.67448], [-122.320986, 47.674362], [-122.321093, 47.673985], [-122.321234, 47.673479], [-122.321389, 47.672958], [-122.3216, 47.672234], [-122.322975, 47.672241], [-122.324602, 47.672252], [-122.329211, 47.672276], [-122.33204, 47.672304], [-122.333372, 47.672326], [-122.333558, 47.672315], [-122.333562, 47.673108], [-122.33578, 47.671312], [-122.335808, 47.671294], [-122.335836, 47.671277], [-122.335864, 47.67126], [-122.335893, 47.671244], [-122.335922, 47.671227], [-122.33595, 47.67121], [-122.335979, 47.671194], [-122.336008, 47.671178], [-122.336038, 47.671161], [-122.336067, 47.671146], [-122.336097, 47.67113], [-122.336127, 47.671114], [-122.336157, 47.671098], [-122.336187, 47.671083], [-122.336217, 47.671068], [-122.336247, 47.671052], [-122.336278, 47.671037], [-122.336309, 47.671022], [-122.33634, 47.671008], [-122.336371, 47.670993], [-122.336402, 47.670979], [-122.336433, 47.670964], [-122.336465, 47.67095], [-122.336496, 47.670936], [-122.336528, 47.670922], [-122.33656, 47.670909], [-122.336592, 47.670895], [-122.336625, 47.670882], [-122.336657, 47.670868], [-122.336696, 47.670852], [-122.337004, 47.670728], [-122.33718, 47.671248], [-122.337976, 47.67058], [-122.33798, 47.67019], [-122.338214, 47.670187], [-122.33905, 47.670193], [-122.340009, 47.670204], [-122.340011, 47.669896], [-122.340013, 47.669747], [-122.340017, 47.66947], [-122.340059, 47.669494], [-122.340076, 47.669517], [-122.340094, 47.66954], [-122.340113, 47.669563], [-122.340132, 47.669585], [-122.340153, 47.669607], [-122.340174, 47.669629], [-122.340195, 47.66965], [-122.340218, 47.669671], [-122.340241, 47.669692], [-122.340265, 47.669712], [-122.340289, 47.669732], [-122.340316, 47.669753], [-122.34034, 47.669771], [-122.340366, 47.669789], [-122.340391, 47.669807], [-122.340415, 47.669824], [-122.340441, 47.669841], [-122.340467, 47.669858], [-122.340494, 47.669874], [-122.340521, 47.66989], [-122.340549, 47.669905], [-122.340578, 47.66992], [-122.340607, 47.669935], [-122.340637, 47.669948], [-122.340667, 47.669962], [-122.340697, 47.669974], [-122.340729, 47.669987], [-122.34076, 47.669998], [-122.340792, 47.67001], [-122.340824, 47.67002], [-122.340857, 47.67003], [-122.340891, 47.67004], [-122.340924, 47.670048], [-122.341536, 47.670237], [-122.34251, 47.670537], [-122.342543, 47.670551], [-122.342574, 47.670566], [-122.342606, 47.67058], [-122.342638, 47.670595], [-122.342668, 47.670611], [-122.342699, 47.670626], [-122.342729, 47.670642], [-122.34276, 47.670658], [-122.342789, 47.670675], [-122.342819, 47.670691], [-122.342848, 47.670708], [-122.342877, 47.670725], [-122.342905, 47.670743], [-122.342934, 47.67076], [-122.342961, 47.670778], [-122.342988, 47.670796], [-122.343016, 47.670815], [-122.343043, 47.670833], [-122.343069, 47.670852], [-122.343095, 47.670871], [-122.343121, 47.67089], [-122.343146, 47.67091], [-122.343171, 47.67093], [-122.343196, 47.67095], [-122.34322, 47.67097], [-122.343244, 47.67099], [-122.343267, 47.671011], [-122.343291, 47.671031], [-122.343313, 47.671052], [-122.343335, 47.671073], [-122.343357, 47.671095], [-122.343379, 47.671116], [-122.3434, 47.671138], [-122.34342, 47.67116], [-122.343441, 47.671182], [-122.343461, 47.671204], [-122.343479, 47.671226], [-122.343498, 47.671249], [-122.343517, 47.671272], [-122.343535, 47.671295], [-122.343553, 47.671318], [-122.34357, 47.671341], [-122.343587, 47.671364], [-122.343603, 47.671388], [-122.343619, 47.671411], [-122.343635, 47.671435], [-122.34365, 47.671459], [-122.343663, 47.671483], [-122.343676, 47.671508], [-122.343688, 47.671532], [-122.343699, 47.671557], [-122.343709, 47.671582], [-122.343718, 47.671607], [-122.343726, 47.671633], [-122.343733, 47.671658], [-122.343739, 47.671684], [-122.343743, 47.67171], [-122.343747, 47.671735], [-122.34375, 47.671761], [-122.343751, 47.671787], [-122.343752, 47.671813], [-122.343753, 47.671838], [-122.343756, 47.671864], [-122.343759, 47.67189], [-122.343762, 47.671916], [-122.343766, 47.671942], [-122.343769, 47.671967], [-122.343774, 47.671993], [-122.343779, 47.672019], [-122.343784, 47.672045], [-122.343789, 47.67207], [-122.343794, 47.672096], [-122.343801, 47.672122], [-122.343807, 47.672147], [-122.343814, 47.672173], [-122.343821, 47.672198], [-122.343828, 47.672224], [-122.343836, 47.672249], [-122.343844, 47.672274], [-122.343853, 47.6723], [-122.343861, 47.672325], [-122.34387, 47.67235], [-122.34388, 47.672375], [-122.343889, 47.672401], [-122.343899, 47.672426], [-122.34391, 47.672451], [-122.34392, 47.672475], [-122.343932, 47.6725], [-122.343943, 47.672525], [-122.343954, 47.67255], [-122.343967, 47.672574], [-122.343979, 47.672599], [-122.343991, 47.672623], [-122.344004, 47.672648], [-122.344018, 47.672672], [-122.344032, 47.672696], [-122.344046, 47.672721], [-122.344059, 47.672745], [-122.344074, 47.672769], [-122.344089, 47.672793], [-122.344104, 47.672816], [-122.34412, 47.67284], [-122.344136, 47.672864], [-122.344152, 47.672887], [-122.344168, 47.672911], [-122.344185, 47.672934], [-122.344202, 47.672957], [-122.34422, 47.67298], [-122.344237, 47.673004], [-122.344255, 47.673026], [-122.344274, 47.673049], [-122.344292, 47.673072], [-122.344311, 47.673095], [-122.34433, 47.673117], [-122.34435, 47.673139], [-122.344369, 47.673162], [-122.344394, 47.673188], [-122.344898, 47.673692], [-122.34564, 47.674174], [-122.345666, 47.674193], [-122.345692, 47.674212], [-122.345718, 47.674231], [-122.345743, 47.67425], [-122.345769, 47.67427], [-122.345794, 47.674289], [-122.345819, 47.674309], [-122.345843, 47.674329], [-122.345868, 47.674349], [-122.345891, 47.674369], [-122.345915, 47.67439], [-122.345939, 47.67441], [-122.345962, 47.674431], [-122.345986, 47.674452], [-122.346009, 47.674472], [-122.346031, 47.674493], [-122.346054, 47.674514], [-122.346076, 47.674536], [-122.346097, 47.674557], [-122.346119, 47.674578], [-122.346141, 47.6746], [-122.346162, 47.674622], [-122.346183, 47.674643], [-122.346203, 47.674665], [-122.346223, 47.674687], [-122.346244, 47.674709], [-122.346263, 47.674732], [-122.346283, 47.674754], [-122.346303, 47.674776], [-122.346322, 47.674799], [-122.34634, 47.674821], [-122.346359, 47.674844], [-122.346377, 47.674867], [-122.346395, 47.67489], [-122.346413, 47.674913], [-122.34643, 47.674936], [-122.346447, 47.674959], [-122.346464, 47.674983], [-122.346481, 47.675006], [-122.346497, 47.675029], [-122.346513, 47.675053], [-122.346529, 47.675077], [-122.346545, 47.6751], [-122.346559, 47.675124], [-122.346574, 47.675148], [-122.346589, 47.675172], [-122.346604, 47.675196], [-122.346618, 47.67522], [-122.346631, 47.675245], [-122.346645, 47.675269], [-122.346658, 47.675293], [-122.346671, 47.675318], [-122.346684, 47.675342], [-122.346696, 47.675367], [-122.346708, 47.675391], [-122.34672, 47.675416], [-122.346731, 47.675441], [-122.346741, 47.675464], [-122.346755, 47.675488], [-122.346768, 47.675513], [-122.346779, 47.675537], [-122.34679, 47.675562], [-122.3468, 47.675587], [-122.346809, 47.675612], [-122.346818, 47.675638], [-122.346825, 47.675663], [-122.346832, 47.675689], [-122.346838, 47.675714], [-122.346842, 47.67574], [-122.346847, 47.675766], [-122.346849, 47.675792], [-122.346852, 47.675818], [-122.346853, 47.675844], [-122.346853, 47.675889], [-122.346853, 47.675915], [-122.346851, 47.675941], [-122.346848, 47.675967], [-122.346845, 47.675993], [-122.34684, 47.676018], [-122.346835, 47.676044], [-122.346829, 47.67607], [-122.346822, 47.676095], [-122.346814, 47.67612], [-122.346805, 47.676146], [-122.346795, 47.676171], [-122.346785, 47.676196], [-122.346774, 47.676221], [-122.346762, 47.676245], [-122.346749, 47.67627], [-122.346735, 47.676294], [-122.346721, 47.676318], [-122.346706, 47.676342], [-122.346689, 47.676365], [-122.346672, 47.676389], [-122.346655, 47.676412], [-122.346636, 47.676434], [-122.346617, 47.676457], [-122.346597, 47.676479], [-122.345906, 47.677357], [-122.34578, 47.677519], [-122.345769, 47.677544], [-122.345759, 47.677569], [-122.345749, 47.677594], [-122.345739, 47.677619], [-122.345729, 47.677644], [-122.34572, 47.677669], [-122.34571, 47.677694], [-122.345701, 47.67772], [-122.345691, 47.677745], [-122.345682, 47.67777], [-122.345673, 47.677795], [-122.345664, 47.67782], [-122.345655, 47.677845], [-122.345646, 47.677871], [-122.345637, 47.677896], [-122.345629, 47.677921], [-122.345621, 47.677947], [-122.345612, 47.677972], [-122.345604, 47.677997], [-122.345596, 47.678023], [-122.345588, 47.678048], [-122.34558, 47.678073], [-122.345572, 47.678099], [-122.345564, 47.678124], [-122.345557, 47.67815], [-122.34555, 47.678175], [-122.345542, 47.678201], [-122.345535, 47.678226], [-122.345528, 47.678252], [-122.345521, 47.678277], [-122.345511, 47.678303], [-122.345507, 47.678328], [-122.34549, 47.678591], [-122.345389, 47.679435], [-122.34535, 47.679803], [-122.345346, 47.679829], [-122.345342, 47.679855], [-122.345337, 47.679881], [-122.345332, 47.679907], [-122.345327, 47.679932], [-122.345321, 47.679958], [-122.345314, 47.679984], [-122.345308, 47.68001], [-122.3453, 47.680035], [-122.345293, 47.680061], [-122.345285, 47.680086], [-122.345277, 47.680112], [-122.345268, 47.680137], [-122.345259, 47.680163], [-122.345249, 47.680188], [-122.345239, 47.680213], [-122.345229, 47.680238], [-122.345218, 47.680263], [-122.345207, 47.680288], [-122.345196, 47.680313], [-122.345184, 47.680338], [-122.345172, 47.680363], [-122.345159, 47.680388], [-122.345146, 47.680412], [-122.345133, 47.680437], [-122.34512, 47.680459], [-122.345105, 47.680483], [-122.34509, 47.680507], [-122.345074, 47.680531], [-122.345057, 47.680554], [-122.34504, 47.680578], [-122.345021, 47.680601], [-122.345003, 47.680623], [-122.344983, 47.680646], [-122.344702, 47.680969], [-122.344683, 47.680992], [-122.344664, 47.681015], [-122.344647, 47.681038], [-122.34463, 47.681061], [-122.344614, 47.681085], [-122.344588, 47.681127], [-122.344574, 47.681152], [-122.344561, 47.681176], [-122.34455, 47.681201], [-122.344539, 47.681226], [-122.344529, 47.681252], [-122.34452, 47.681277], [-122.344512, 47.681302], [-122.344505, 47.681328], [-122.344499, 47.681354], [-122.344493, 47.68138], [-122.344482, 47.682507], [-122.344486, 47.683305], [-122.344487, 47.683505], [-122.344493, 47.684503], [-122.344498, 47.685501], [-122.344498, 47.686499], [-122.344504, 47.687496], [-122.344509, 47.688494], [-122.344514, 47.689492], [-122.344525, 47.690493], [-122.344525, 47.690562], [-122.343375, 47.690557], [-122.341829, 47.690534], [-122.339663, 47.690531], [-122.337969, 47.69051], [-122.335951, 47.690486], [-122.333794, 47.690477], [-122.33297, 47.690469], [-122.330638, 47.69045], [-122.33024, 47.690449], [-122.330202, 47.690448], [-122.330164, 47.690446], [-122.330126, 47.690443], [-122.330088, 47.69044], [-122.33005, 47.690437], [-122.330013, 47.690433], [-122.329975, 47.690428], [-122.329938, 47.690423], [-122.329901, 47.690417], [-122.329864, 47.690411], [-122.329827, 47.690404], [-122.329791, 47.690396], [-122.329755, 47.690388], [-122.329719, 47.69038], [-122.329683, 47.690371], [-122.329648, 47.690361], [-122.329612, 47.690351], [-122.329578, 47.690341], [-122.329543, 47.69033], [-122.329509, 47.690318], [-122.329476, 47.690306], [-122.329442, 47.690294], [-122.329409, 47.690281], [-122.329377, 47.690267], [-122.329345, 47.690253], [-122.329314, 47.690239], [-122.329282, 47.690224], [-122.329101, 47.690119], [-122.329072, 47.690102]]]]
    },
    "properties": {
      "neighbourhood": "Green Lake",
      "neighbourhood_group": "Other neighborhoods"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.343543, 47.628019], [-122.34354, 47.628118], [-122.343535, 47.628274], [-122.34354, 47.628778], [-122.343519, 47.630685], [-122.343517, 47.631303], [-122.343504, 47.63206], [-122.343495, 47.633064], [-122.343476, 47.634199], [-122.343459, 47.635372], [-122.343458, 47.635399], [-122.343458, 47.635426], [-122.343458, 47.635453], [-122.343458, 47.63548], [-122.343459, 47.635506], [-122.34346, 47.635533], [-122.343461, 47.63556], [-122.343463, 47.635587], [-122.343465, 47.635614], [-122.343467, 47.63564], [-122.34347, 47.635667], [-122.343474, 47.635694], [-122.343477, 47.635721], [-122.343481, 47.635747], [-122.343485, 47.635774], [-122.343489, 47.635801], [-122.343494, 47.635827], [-122.3435, 47.635854], [-122.343505, 47.63588], [-122.343511, 47.635907], [-122.343517, 47.635933], [-122.343524, 47.63596], [-122.343531, 47.635986], [-122.343538, 47.636013], [-122.343545, 47.636039], [-122.343553, 47.636065], [-122.343562, 47.636092], [-122.343571, 47.636118], [-122.343579, 47.636144], [-122.343589, 47.63617], [-122.343598, 47.636196], [-122.343609, 47.636222], [-122.343618, 47.636248], [-122.343629, 47.636274], [-122.34364, 47.636299], [-122.343652, 47.636325], [-122.343664, 47.636351], [-122.343675, 47.636376], [-122.343688, 47.636402], [-122.3437, 47.636427], [-122.343714, 47.636453], [-122.343728, 47.636478], [-122.343742, 47.636503], [-122.343757, 47.636527], [-122.343773, 47.636552], [-122.343789, 47.636577], [-122.343806, 47.636601], [-122.343824, 47.636625], [-122.343842, 47.636649], [-122.343861, 47.636672], [-122.34438, 47.637424], [-122.343809, 47.637462], [-122.343287, 47.637639], [-122.341921, 47.638], [-122.341535, 47.638001], [-122.341027, 47.638008], [-122.340558, 47.638005], [-122.340265, 47.638021], [-122.340237, 47.637972], [-122.3402, 47.637952], [-122.340099, 47.637948], [-122.340051, 47.63794], [-122.340046, 47.637913], [-122.340036, 47.637888], [-122.340013, 47.637867], [-122.339962, 47.637851], [-122.339935, 47.637829], [-122.339928, 47.637802], [-122.339925, 47.637755], [-122.339924, 47.637731], [-122.33992, 47.637683], [-122.339896, 47.63762], [-122.339848, 47.63762], [-122.339761, 47.637626], [-122.339743, 47.637598], [-122.339726, 47.637553], [-122.339718, 47.637528], [-122.339695, 47.637445], [-122.339671, 47.637358], [-122.339664, 47.637333], [-122.339646, 47.637263], [-122.339642, 47.637192], [-122.339741, 47.637178], [-122.339837, 47.637164], [-122.339865, 47.637148], [-122.339878, 47.637109], [-122.339874, 47.637069], [-122.339865, 47.637041], [-122.339864, 47.636987], [-122.339864, 47.636898], [-122.339864, 47.636795], [-122.339873, 47.63672], [-122.339877, 47.636629], [-122.339883, 47.636539], [-122.339888, 47.636503], [-122.339897, 47.636456], [-122.339897, 47.636393], [-122.339897, 47.636323], [-122.339875, 47.63627], [-122.33978, 47.63627], [-122.339697, 47.636269], [-122.339646, 47.636248], [-122.339608, 47.636237], [-122.339604, 47.636195], [-122.33957, 47.636058], [-122.339567, 47.636034], [-122.339566, 47.635949], [-122.339663, 47.635948], [-122.339776, 47.635936], [-122.339774, 47.635871], [-122.339772, 47.635787], [-122.339771, 47.635702], [-122.33977, 47.635626], [-122.339749, 47.635554], [-122.339654, 47.635547], [-122.339652, 47.635498], [-122.339652, 47.635439], [-122.33965, 47.635377], [-122.33965, 47.635352], [-122.339648, 47.635282], [-122.339648, 47.635228], [-122.339676, 47.635195], [-122.339721, 47.635194], [-122.339769, 47.635177], [-122.339771, 47.635144], [-122.33978, 47.635078], [-122.339783, 47.635003], [-122.339775, 47.63493], [-122.339773, 47.634876], [-122.339801, 47.634834], [-122.339865, 47.634835], [-122.339907, 47.634826], [-122.339899, 47.634778], [-122.339904, 47.634705], [-122.339897, 47.634639], [-122.339884, 47.634604], [-122.339842, 47.634586], [-122.339779, 47.634584], [-122.339667, 47.634582], [-122.339539, 47.634581], [-122.339434, 47.63458], [-122.339435, 47.634552], [-122.339433, 47.634463], [-122.339435, 47.634332], [-122.339435, 47.634242], [-122.339432, 47.634179], [-122.339426, 47.634106], [-122.339424, 47.634011], [-122.339423, 47.633886], [-122.339427, 47.633751], [-122.339422, 47.633633], [-122.339425, 47.633529], [-122.339426, 47.633437], [-122.339429, 47.63338], [-122.339446, 47.633349], [-122.339499, 47.633346], [-122.339606, 47.633346], [-122.339767, 47.633345], [-122.339917, 47.633337], [-122.339977, 47.633337], [-122.339977, 47.633296], [-122.339981, 47.633247], [-122.339981, 47.633212], [-122.34003, 47.633209], [-122.340082, 47.63321], [-122.340115, 47.633184], [-122.34013, 47.633146], [-122.340154, 47.633094], [-122.340156, 47.633054], [-122.340158, 47.633019], [-122.340175, 47.632927], [-122.340204, 47.632827], [-122.340238, 47.632728], [-122.340298, 47.632586], [-122.340339, 47.632477], [-122.340383, 47.632413], [-122.340418, 47.632368], [-122.340443, 47.632314], [-122.340455, 47.632288], [-122.340484, 47.632251], [-122.340465, 47.632216], [-122.340467, 47.632143], [-122.340473, 47.632056], [-122.340484, 47.631985], [-122.340476, 47.631942], [-122.340474, 47.631917], [-122.340479, 47.631879], [-122.340468, 47.631843], [-122.340473, 47.631809], [-122.340481, 47.631774], [-122.340472, 47.63175], [-122.340463, 47.631701], [-122.340458, 47.63163], [-122.340463, 47.631579], [-122.340472, 47.631525], [-122.340489, 47.631475], [-122.340513, 47.631418], [-122.340517, 47.631383], [-122.340519, 47.63131], [-122.340523, 47.631211], [-122.340526, 47.631097], [-122.340522, 47.631045], [-122.340524, 47.63098], [-122.340525, 47.630923], [-122.340494, 47.630882], [-122.340443, 47.63088], [-122.340347, 47.63088], [-122.340239, 47.63088], [-122.340236, 47.630845], [-122.340239, 47.630766], [-122.340237, 47.630657], [-122.340235, 47.630607], [-122.340276, 47.630604], [-122.340276, 47.630567], [-122.340279, 47.630527], [-122.34028, 47.630453], [-122.340268, 47.630406], [-122.340258, 47.63028], [-122.340263, 47.630167], [-122.340257, 47.630114], [-122.340194, 47.630111], [-122.340131, 47.63011], [-122.339989, 47.630108], [-122.339852, 47.630109], [-122.339701, 47.63011], [-122.339548, 47.630116], [-122.339398, 47.630115], [-122.33932, 47.630097], [-122.33931, 47.630044], [-122.339304, 47.629982], [-122.339303, 47.629905], [-122.339338, 47.629859], [-122.33942, 47.629858], [-122.339539, 47.629859], [-122.339543, 47.629792], [-122.339541, 47.629766], [-122.339578, 47.629763], [-122.339607, 47.629735], [-122.339615, 47.629674], [-122.339617, 47.629642], [-122.339601, 47.629606], [-122.339575, 47.629554], [-122.339562, 47.629526], [-122.339519, 47.62949], [-122.339463, 47.629441], [-122.339432, 47.629395], [-122.339406, 47.629347], [-122.339387, 47.629296], [-122.339369, 47.629247], [-122.339346, 47.629202], [-122.339346, 47.629154], [-122.33935, 47.62913], [-122.339341, 47.629098], [-122.339344, 47.629047], [-122.339365, 47.628995], [-122.339372, 47.62895], [-122.339383, 47.628867], [-122.33939, 47.628826], [-122.339394, 47.628796], [-122.339427, 47.628767], [-122.339464, 47.628744], [-122.339471, 47.628688], [-122.339506, 47.628677], [-122.339581, 47.628672], [-122.339671, 47.628672], [-122.339757, 47.628653], [-122.339764, 47.628587], [-122.33977, 47.628509], [-122.33977, 47.628472], [-122.33975, 47.628451], [-122.339703, 47.628403], [-122.339642, 47.62835], [-122.339561, 47.628284], [-122.339498, 47.628232], [-122.339447, 47.628178], [-122.339417, 47.628135], [-122.339357, 47.628068], [-122.339285, 47.62798], [-122.339234, 47.6279], [-122.339168, 47.627799], [-122.339122, 47.627728], [-122.339085, 47.627646], [-122.339038, 47.627598], [-122.339038, 47.627563], [-122.33904, 47.627511], [-122.339013, 47.627486], [-122.338969, 47.627472], [-122.338882, 47.627449], [-122.338825, 47.62742], [-122.339617, 47.627182], [-122.339917, 47.627124], [-122.34148, 47.62713], [-122.342717, 47.627135], [-122.343562, 47.62714], [-122.34356, 47.627182], [-122.343558, 47.6275], [-122.343543, 47.628019]]]]
    },
    "properties": {
      "neighbourhood": "Westlake",
      "neighbourhood_group": "Cascade"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.296425, 47.623319], [-122.296123, 47.622601], [-122.296093, 47.621341], [-122.296087, 47.62081], [-122.296117, 47.618903], [-122.296121, 47.618672], [-122.29616, 47.616743], [-122.296165, 47.615031], [-122.296214, 47.612948], [-122.29623, 47.611617], [-122.296234, 47.610322], [-122.296257, 47.608293], [-122.296272, 47.607994], [-122.296275, 47.607924], [-122.296278, 47.607893], [-122.296282, 47.607861], [-122.296286, 47.60783], [-122.29629, 47.607799], [-122.296296, 47.607768], [-122.296301, 47.607736], [-122.296307, 47.607705], [-122.296314, 47.607674], [-122.296321, 47.607643], [-122.296329, 47.607612], [-122.296337, 47.607581], [-122.296345, 47.60755], [-122.296355, 47.607519], [-122.296364, 47.607489], [-122.296375, 47.607458], [-122.296385, 47.607427], [-122.296397, 47.607397], [-122.296408, 47.607367], [-122.29642, 47.607336], [-122.296433, 47.607306], [-122.296447, 47.607276], [-122.29646, 47.607246], [-122.296475, 47.607216], [-122.296489, 47.607186], [-122.296504, 47.607156], [-122.29652, 47.607127], [-122.296536, 47.607097], [-122.296553, 47.607068], [-122.296571, 47.607039], [-122.296588, 47.60701], [-122.296606, 47.606981], [-122.296622, 47.606957], [-122.29678, 47.606647], [-122.296774, 47.606112], [-122.296775, 47.604275], [-122.296676, 47.603517], [-122.296748, 47.602619], [-122.296814, 47.601678], [-122.300259, 47.601665], [-122.302375, 47.601688], [-122.302405, 47.601723], [-122.302427, 47.601774], [-122.302432, 47.601798], [-122.302437, 47.601822], [-122.302434, 47.601862], [-122.302441, 47.601962], [-122.302436, 47.602584], [-122.302432, 47.603743], [-122.302431, 47.604333], [-122.30247, 47.604408], [-122.30246, 47.604499], [-122.302458, 47.604771], [-122.302464, 47.604796], [-122.302474, 47.60482], [-122.302485, 47.604843], [-122.302497, 47.604867], [-122.302512, 47.60489], [-122.302528, 47.604912], [-122.302546, 47.604933], [-122.302567, 47.604954], [-122.302588, 47.604974], [-122.302611, 47.604993], [-122.302636, 47.605012], [-122.302663, 47.605029], [-122.30269, 47.605046], [-122.302719, 47.605061], [-122.302747, 47.605079], [-122.302763, 47.605102], [-122.302777, 47.605124], [-122.302789, 47.605148], [-122.302799, 47.605172], [-122.302806, 47.605196], [-122.302811, 47.605221], [-122.302813, 47.605246], [-122.302813, 47.60527], [-122.302791, 47.605989], [-122.302766, 47.6075], [-122.302765, 47.608981], [-122.302751, 47.610475], [-122.302733, 47.611999], [-122.30269, 47.61353], [-122.302653, 47.615058], [-122.302617, 47.616586], [-122.30257, 47.617777], [-122.30254, 47.61917], [-122.302426, 47.619248], [-122.301389, 47.619961], [-122.300627, 47.620485], [-122.300101, 47.620832], [-122.299699, 47.621097], [-122.298043, 47.622228], [-122.297757, 47.622423], [-122.296425, 47.623319]]]]
    },
    "properties": {
      "neighbourhood": "Mann",
      "neighbourhood_group": "Central Area"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.296117, 47.618903], [-122.293114, 47.618899], [-122.291278, 47.618879], [-122.291264, 47.618372], [-122.289564, 47.618385], [-122.288731, 47.618314], [-122.288531, 47.618353], [-122.287527, 47.618357], [-122.286215, 47.618364], [-122.285693, 47.618362], [-122.285646, 47.618358], [-122.2856, 47.618354], [-122.285555, 47.618347], [-122.28551, 47.61834], [-122.285465, 47.618332], [-122.28542, 47.618322], [-122.285377, 47.618311], [-122.285334, 47.618299], [-122.285292, 47.618286], [-122.28525, 47.618272], [-122.28521, 47.618257], [-122.28517, 47.61824], [-122.285131, 47.618223], [-122.285093, 47.618205], [-122.285057, 47.618185], [-122.285021, 47.618165], [-122.284987, 47.618144], [-122.284954, 47.618122], [-122.284922, 47.618099], [-122.284892, 47.618075], [-122.284863, 47.61805], [-122.284835, 47.618025], [-122.284809, 47.617999], [-122.284784, 47.617973], [-122.28476, 47.617946], [-122.284737, 47.617918], [-122.284716, 47.61789], [-122.284696, 47.617862], [-122.284676, 47.617833], [-122.284659, 47.617804], [-122.284642, 47.617775], [-122.284626, 47.617745], [-122.284612, 47.617716], [-122.284599, 47.617685], [-122.284587, 47.617655], [-122.284576, 47.617624], [-122.283836, 47.617607], [-122.282645, 47.617613], [-122.28112, 47.617678], [-122.280123, 47.617686], [-122.280154, 47.617648], [-122.280176, 47.617613], [-122.280161, 47.617543], [-122.280147, 47.617513], [-122.280136, 47.617481], [-122.280129, 47.617453], [-122.280128, 47.617424], [-122.280133, 47.617391], [-122.280138, 47.617356], [-122.280135, 47.617315], [-122.280132, 47.617278], [-122.280121, 47.617243], [-122.280084, 47.617213], [-122.280052, 47.617193], [-122.280029, 47.61715], [-122.280008, 47.617123], [-122.280005, 47.617079], [-122.280002, 47.617044], [-122.279994, 47.617001], [-122.279995, 47.616964], [-122.280007, 47.61693], [-122.280013, 47.616899], [-122.280046, 47.616881], [-122.280065, 47.616855], [-122.280064, 47.616822], [-122.280056, 47.616796], [-122.280019, 47.61676], [-122.280045, 47.616733], [-122.280086, 47.616726], [-122.28012, 47.616695], [-122.280128, 47.616654], [-122.280133, 47.616614], [-122.280142, 47.616568], [-122.280159, 47.616502], [-122.28018, 47.616468], [-122.280212, 47.616426], [-122.280247, 47.616385], [-122.280268, 47.616355], [-122.280287, 47.616314], [-122.280317, 47.616256], [-122.280354, 47.616211], [-122.280348, 47.616182], [-122.280362, 47.616142], [-122.280396, 47.61609], [-122.2804, 47.616065], [-122.280412, 47.616027], [-122.280429, 47.616], [-122.280454, 47.615955], [-122.280474, 47.615921], [-122.280487, 47.615894], [-122.280494, 47.615864], [-122.280505, 47.615806], [-122.280559, 47.615787], [-122.280596, 47.615749], [-122.280606, 47.615723], [-122.280607, 47.615699], [-122.280599, 47.615672], [-122.280597, 47.615646], [-122.280596, 47.615609], [-122.280608, 47.615577], [-122.280642, 47.615559], [-122.280687, 47.615538], [-122.280714, 47.615497], [-122.280702, 47.615458], [-122.280661, 47.615438], [-122.280606, 47.615425], [-122.280558, 47.615398], [-122.280546, 47.615363], [-122.280554, 47.615339], [-122.280579, 47.615319], [-122.280652, 47.615293], [-122.280685, 47.615282], [-122.280715, 47.615264], [-122.280751, 47.615246], [-122.280793, 47.615232], [-122.280847, 47.615226], [-122.280903, 47.615214], [-122.280949, 47.615171], [-122.280988, 47.615129], [-122.281013, 47.615095], [-122.281028, 47.615061], [-122.281053, 47.615029], [-122.281077, 47.614976], [-122.2811, 47.614908], [-122.281139, 47.614854], [-122.281163, 47.614835], [-122.281195, 47.614816], [-122.28121, 47.614788], [-122.281216, 47.614759], [-122.28123, 47.614715], [-122.281253, 47.614651], [-122.281276, 47.614589], [-122.281294, 47.614518], [-122.281304, 47.61445], [-122.281303, 47.614415], [-122.281292, 47.614379], [-122.281279, 47.614342], [-122.281262, 47.614299], [-122.281258, 47.614243], [-122.281259, 47.614169], [-122.281248, 47.614099], [-122.281235, 47.61406], [-122.281198, 47.614012], [-122.281132, 47.613954], [-122.281086, 47.613894], [-122.281073, 47.613848], [-122.281083, 47.613796], [-122.281105, 47.613741], [-122.281121, 47.613685], [-122.281148, 47.613634], [-122.281133, 47.613602], [-122.28111, 47.61354], [-122.281105, 47.613472], [-122.281096, 47.6134], [-122.281121, 47.613346], [-122.281115, 47.613314], [-122.281099, 47.613266], [-122.2811, 47.61322], [-122.2811, 47.613157], [-122.281095, 47.613088], [-122.281115, 47.613004], [-122.281133, 47.612924], [-122.281143, 47.61286], [-122.281146, 47.612786], [-122.281139, 47.612748], [-122.281153, 47.612704], [-122.281165, 47.612639], [-122.281164, 47.61261], [-122.281168, 47.612568], [-122.281164, 47.6125], [-122.281155, 47.612446], [-122.281171, 47.612391], [-122.281192, 47.612323], [-122.281198, 47.612272], [-122.281229, 47.6122], [-122.281257, 47.612135], [-122.28129, 47.612117], [-122.281306, 47.612093], [-122.281321, 47.612061], [-122.281386, 47.61201], [-122.281413, 47.611968], [-122.281496, 47.611884], [-122.281581, 47.611803], [-122.281667, 47.61174], [-122.281765, 47.611669], [-122.281861, 47.611599], [-122.281922, 47.611524], [-122.28196, 47.611434], [-122.282009, 47.611333], [-122.282045, 47.611242], [-122.282047, 47.611191], [-122.282035, 47.611164], [-122.282025, 47.611033], [-122.282008, 47.610911], [-122.281998, 47.610875], [-122.281964, 47.61086], [-122.281938, 47.61072], [-122.281916, 47.610532], [-122.28191, 47.610423], [-122.281917, 47.610306], [-122.28195, 47.610154], [-122.281993, 47.609999], [-122.282027, 47.609896], [-122.282084, 47.60976], [-122.282148, 47.609618], [-122.282213, 47.609472], [-122.282239, 47.609443], [-122.282274, 47.609457], [-122.282323, 47.609383], [-122.282381, 47.609291], [-122.282426, 47.609213], [-122.282471, 47.609131], [-122.282516, 47.609024], [-122.282561, 47.60891], [-122.282613, 47.608808], [-122.282666, 47.608704], [-122.282711, 47.608605], [-122.282744, 47.608515], [-122.282769, 47.608452], [-122.282781, 47.608376], [-122.282812, 47.608304], [-122.282834, 47.608228], [-122.282842, 47.608143], [-122.282835, 47.608068], [-122.28283, 47.607983], [-122.282861, 47.607874], [-122.282885, 47.607797], [-122.282908, 47.607693], [-122.282939, 47.607621], [-122.282971, 47.607556], [-122.282997, 47.607487], [-122.283007, 47.607424], [-122.283002, 47.607359], [-122.282995, 47.607241], [-122.283, 47.60713], [-122.283006, 47.607026], [-122.283016, 47.606964], [-122.283034, 47.606901], [-122.283055, 47.606853], [-122.283077, 47.606796], [-122.28309, 47.606729], [-122.283092, 47.606638], [-122.283095, 47.606582], [-122.283104, 47.606517], [-122.284027, 47.607324], [-122.284059, 47.607347], [-122.284091, 47.60737], [-122.284122, 47.607393], [-122.284152, 47.607417], [-122.284182, 47.607441], [-122.284211, 47.607466], [-122.284239, 47.607491], [-122.284266, 47.607516], [-122.284292, 47.607542], [-122.284318, 47.607568], [-122.284343, 47.607595], [-122.284368, 47.607622], [-122.284391, 47.607649], [-122.284414, 47.607676], [-122.284436, 47.607704], [-122.284457, 47.607732], [-122.284477, 47.60776], [-122.284497, 47.607789], [-122.284516, 47.607817], [-122.284534, 47.607846], [-122.284552, 47.607875], [-122.284568, 47.607905], [-122.284584, 47.607934], [-122.284599, 47.607964], [-122.284613, 47.607994], [-122.284626, 47.608024], [-122.284639, 47.608055], [-122.28465, 47.608085], [-122.284661, 47.608115], [-122.284671, 47.608146], [-122.28468, 47.608177], [-122.284688, 47.608208], [-122.284696, 47.608239], [-122.284703, 47.60827], [-122.284708, 47.608301], [-122.284713, 47.608332], [-122.284718, 47.608364], [-122.284721, 47.608395], [-122.284723, 47.608427], [-122.284725, 47.608458], [-122.284726, 47.608489], [-122.284726, 47.608521], [-122.284724, 47.608552], [-122.284723, 47.608584], [-122.28472, 47.608615], [-122.284716, 47.608646], [-122.284712, 47.608678], [-122.284707, 47.608709], [-122.284701, 47.60874], [-122.284713, 47.609175], [-122.285436, 47.609174], [-122.286107, 47.609211], [-122.286137, 47.607907], [-122.290437, 47.60796], [-122.291548, 47.607955], [-122.296272, 47.607994], [-122.296257, 47.608293], [-122.296234, 47.610322], [-122.29623, 47.611617], [-122.296214, 47.612948], [-122.296165, 47.615031], [-122.29616, 47.616743], [-122.296121, 47.618672], [-122.296117, 47.618903]]]]
    },
    "properties": {
      "neighbourhood": "Madrona",
      "neighbourhood_group": "Central Area"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.292869, 47.661237], [-122.292603, 47.661234], [-122.291601, 47.66121], [-122.2906, 47.661186], [-122.290379, 47.661182], [-122.290151, 47.661175], [-122.290156, 47.660823], [-122.290194, 47.658439], [-122.288591, 47.65842], [-122.286736, 47.658392], [-122.286733, 47.656942], [-122.286731, 47.655573], [-122.286788, 47.655624], [-122.286814, 47.655641], [-122.286828, 47.655667], [-122.286859, 47.655702], [-122.286905, 47.65575], [-122.286932, 47.655793], [-122.286952, 47.655857], [-122.286958, 47.655906], [-122.286937, 47.655983], [-122.286893, 47.656022], [-122.286874, 47.656057], [-122.286851, 47.656102], [-122.286849, 47.656132], [-122.286863, 47.656157], [-122.286925, 47.656193], [-122.28699, 47.656191], [-122.287015, 47.656168], [-122.287038, 47.656124], [-122.287122, 47.656045], [-122.287157, 47.656038], [-122.28727, 47.656038], [-122.287323, 47.656059], [-122.287364, 47.65609], [-122.2874, 47.656132], [-122.287434, 47.656178], [-122.287446, 47.656204], [-122.287471, 47.656254], [-122.287482, 47.656279], [-122.28751, 47.656315], [-122.287522, 47.656357], [-122.28754, 47.656385], [-122.287567, 47.656439], [-122.287574, 47.656464], [-122.28757, 47.656529], [-122.287556, 47.656557], [-122.287531, 47.656597], [-122.287499, 47.656665], [-122.287514, 47.656736], [-122.287564, 47.656754], [-122.287624, 47.656742], [-122.287687, 47.656742], [-122.287729, 47.656741], [-122.287779, 47.656752], [-122.287839, 47.656787], [-122.287874, 47.656816], [-122.287918, 47.65688], [-122.287986, 47.656926], [-122.288001, 47.656949], [-122.288032, 47.656978], [-122.288076, 47.657004], [-122.288118, 47.657022], [-122.288153, 47.657031], [-122.288201, 47.657043], [-122.288241, 47.657053], [-122.2883, 47.657025], [-122.288356, 47.656978], [-122.288375, 47.656944], [-122.288407, 47.656927], [-122.288442, 47.656924], [-122.288478, 47.6569], [-122.288496, 47.656847], [-122.288496, 47.656795], [-122.288504, 47.656771], [-122.288555, 47.656668], [-122.288575, 47.656625], [-122.288595, 47.656561], [-122.288616, 47.656504], [-122.288648, 47.656433], [-122.288676, 47.656346], [-122.288699, 47.656319], [-122.288735, 47.656281], [-122.288858, 47.656164], [-122.288877, 47.656138], [-122.288894, 47.656097], [-122.288882, 47.656067], [-122.288839, 47.656059], [-122.288798, 47.656065], [-122.288736, 47.656081], [-122.288637, 47.65609], [-122.288553, 47.65609], [-122.288501, 47.656093], [-122.288444, 47.656109], [-122.288382, 47.656117], [-122.288315, 47.656114], [-122.288276, 47.656123], [-122.288241, 47.656149], [-122.288198, 47.656171], [-122.288126, 47.656192], [-122.288072, 47.656232], [-122.288057, 47.656262], [-122.288042, 47.656301], [-122.288015, 47.656366], [-122.288014, 47.656392], [-122.287997, 47.656444], [-122.287984, 47.656468], [-122.287942, 47.656477], [-122.287905, 47.656463], [-122.287884, 47.656433], [-122.287874, 47.65638], [-122.287857, 47.656345], [-122.287843, 47.656307], [-122.287815, 47.656279], [-122.287789, 47.656242], [-122.287771, 47.65617], [-122.28777, 47.656144], [-122.287798, 47.656082], [-122.287865, 47.656017], [-122.287904, 47.655989], [-122.287929, 47.655957], [-122.287932, 47.655931], [-122.287925, 47.65589], [-122.287904, 47.655857], [-122.287882, 47.655812], [-122.287892, 47.655782], [-122.2879, 47.655754], [-122.287937, 47.655671], [-122.287967, 47.655651], [-122.287999, 47.655636], [-122.288043, 47.655608], [-122.28808, 47.655573], [-122.288119, 47.655542], [-122.288158, 47.655516], [-122.2882, 47.655505], [-122.288294, 47.655483], [-122.288341, 47.655463], [-122.28839, 47.655447], [-122.288443, 47.655429], [-122.288477, 47.655414], [-122.288561, 47.655396], [-122.288612, 47.655402], [-122.288667, 47.6554], [-122.288734, 47.655415], [-122.288803, 47.655428], [-122.288842, 47.655438], [-122.288915, 47.65544], [-122.288974, 47.65543], [-122.289024, 47.655426], [-122.289087, 47.655427], [-122.289194, 47.655417], [-122.28925, 47.655409], [-122.289293, 47.655402], [-122.28933, 47.655398], [-122.289374, 47.655389], [-122.289402, 47.655374], [-122.289438, 47.655363], [-122.289478, 47.655354], [-122.28954, 47.655336], [-122.28958, 47.655309], [-122.289618, 47.655292], [-122.289684, 47.655269], [-122.289725, 47.655254], [-122.289784, 47.65522], [-122.289834, 47.655188], [-122.289857, 47.655168], [-122.289902, 47.655128], [-122.289948, 47.655088], [-122.289978, 47.655073], [-122.289996, 47.65505], [-122.290025, 47.655028], [-122.290066, 47.655015], [-122.290126, 47.655001], [-122.290176, 47.654981], [-122.290206, 47.654967], [-122.290247, 47.654976], [-122.290273, 47.655002], [-122.290269, 47.655033], [-122.290276, 47.655073], [-122.290283, 47.655109], [-122.290278, 47.655147], [-122.29025, 47.655177], [-122.290251, 47.655211], [-122.2903, 47.655256], [-122.290313, 47.655303], [-122.290298, 47.655379], [-122.290282, 47.655437], [-122.290259, 47.655503], [-122.290239, 47.655546], [-122.290229, 47.655572], [-122.29019, 47.655707], [-122.290194, 47.65575], [-122.29019, 47.655782], [-122.290174, 47.655825], [-122.290165, 47.655868], [-122.29017, 47.6559], [-122.290192, 47.655929], [-122.290191, 47.655954], [-122.290186, 47.655979], [-122.290167, 47.656011], [-122.290142, 47.656042], [-122.290107, 47.656071], [-122.29004, 47.656092], [-122.289989, 47.656103], [-122.28994, 47.656108], [-122.289877, 47.656116], [-122.289809, 47.656126], [-122.289695, 47.656143], [-122.289601, 47.656167], [-122.289549, 47.656191], [-122.289569, 47.656218], [-122.289611, 47.656233], [-122.289646, 47.656245], [-122.289674, 47.656262], [-122.289708, 47.656284], [-122.289744, 47.656309], [-122.289786, 47.656327], [-122.289862, 47.656359], [-122.289963, 47.656356], [-122.290021, 47.656341], [-122.290082, 47.656335], [-122.290133, 47.656328], [-122.290181, 47.656313], [-122.290221, 47.656296], [-122.290269, 47.656278], [-122.290306, 47.656265], [-122.290362, 47.656249], [-122.290411, 47.656243], [-122.290455, 47.656235], [-122.290511, 47.656243], [-122.290574, 47.656249], [-122.290623, 47.656256], [-122.290662, 47.656256], [-122.290714, 47.656273], [-122.290751, 47.656278], [-122.290793, 47.656283], [-122.290829, 47.656284], [-122.290907, 47.656281], [-122.290971, 47.656273], [-122.290931, 47.656242], [-122.290898, 47.656227], [-122.290856, 47.656202], [-122.290825, 47.656174], [-122.290798, 47.656153], [-122.290748, 47.656125], [-122.290715, 47.656097], [-122.290689, 47.656074], [-122.290636, 47.65605], [-122.290575, 47.656022], [-122.290544, 47.656003], [-122.290509, 47.655979], [-122.290474, 47.655953], [-122.29043, 47.655922], [-122.290398, 47.65588], [-122.290403, 47.65578], [-122.290407, 47.65567], [-122.290412, 47.655589], [-122.290421, 47.655553], [-122.290422, 47.655489], [-122.290422, 47.655356], [-122.290427, 47.655309], [-122.290439, 47.655281], [-122.290451, 47.655238], [-122.290455, 47.655177], [-122.290462, 47.655131], [-122.290473, 47.655088], [-122.290468, 47.655045], [-122.290453, 47.655017], [-122.290444, 47.654987], [-122.290434, 47.654938], [-122.290437, 47.654894], [-122.290463, 47.654851], [-122.290468, 47.654825], [-122.290477, 47.654786], [-122.29049, 47.654741], [-122.290499, 47.654715], [-122.29049, 47.654672], [-122.290481, 47.654619], [-122.290481, 47.654557], [-122.290494, 47.654499], [-122.290504, 47.654451], [-122.290525, 47.654393], [-122.290552, 47.654345], [-122.290564, 47.654307], [-122.290572, 47.654274], [-122.29059, 47.654238], [-122.290605, 47.654215], [-122.290653, 47.654167], [-122.290703, 47.654139], [-122.290739, 47.654123], [-122.290783, 47.654112], [-122.290821, 47.65411], [-122.290876, 47.654079], [-122.290904, 47.654061], [-122.290937, 47.654037], [-122.290956, 47.654004], [-122.290955, 47.653962], [-122.290988, 47.653949], [-122.291035, 47.653972], [-122.291068, 47.653991], [-122.291108, 47.654014], [-122.291152, 47.654024], [-122.291131, 47.654047], [-122.2911, 47.654071], [-122.291067, 47.654096], [-122.291049, 47.654137], [-122.291075, 47.654162], [-122.29109, 47.654187], [-122.291123, 47.654216], [-122.291147, 47.654236], [-122.291191, 47.654248], [-122.291231, 47.654246], [-122.291286, 47.65424], [-122.291327, 47.654209], [-122.291345, 47.654177], [-122.291353, 47.654153], [-122.291364, 47.654119], [-122.291414, 47.654099], [-122.291586, 47.654099], [-122.291744, 47.654097], [-122.291835, 47.65409], [-122.2919, 47.654086], [-122.292002, 47.654086], [-122.292072, 47.654081], [-122.292139, 47.654069], [-122.292205, 47.654058], [-122.292268, 47.654037], [-122.292326, 47.654028], [-122.292363, 47.654026], [-122.29249, 47.65403], [-122.292521, 47.654059], [-122.292531, 47.654147], [-122.292566, 47.654189], [-122.292613, 47.654187], [-122.292645, 47.654173], [-122.292679, 47.654156], [-122.292713, 47.654122], [-122.292724, 47.654096], [-122.292735, 47.654072], [-122.292739, 47.654045], [-122.292739, 47.654009], [-122.292754, 47.653977], [-122.292781, 47.653954], [-122.292824, 47.653936], [-122.292866, 47.653926], [-122.292909, 47.653919], [-122.292982, 47.653892], [-122.293058, 47.653891], [-122.29312, 47.653889], [-122.293161, 47.653883], [-122.293201, 47.653876], [-122.293241, 47.653868], [-122.293297, 47.653858], [-122.29334, 47.653852], [-122.293391, 47.653846], [-122.293466, 47.653843], [-122.293502, 47.65384], [-122.293549, 47.653839], [-122.293627, 47.653833], [-122.29368, 47.653825], [-122.293739, 47.653811], [-122.293778, 47.653805], [-122.293818, 47.653802], [-122.293878, 47.653795], [-122.293923, 47.6538], [-122.29397, 47.653813], [-122.294025, 47.653824], [-122.294107, 47.653827], [-122.294215, 47.65383], [-122.294292, 47.65383], [-122.29435, 47.653826], [-122.294399, 47.653831], [-122.294442, 47.653827], [-122.294515, 47.653826], [-122.294551, 47.653807], [-122.294593, 47.653795], [-122.29465, 47.653791], [-122.294734, 47.653781], [-122.294779, 47.653773], [-122.294839, 47.653771], [-122.294947, 47.653763], [-122.295011, 47.653762], [-122.295087, 47.653757], [-122.29515, 47.653759], [-122.295225, 47.653749], [-122.295271, 47.653745], [-122.295311, 47.653743], [-122.295373, 47.653747], [-122.295482, 47.653747], [-122.295628, 47.653729], [-122.295684, 47.653722], [-122.295751, 47.65371], [-122.295792, 47.653704], [-122.295887, 47.653692], [-122.295937, 47.653689], [-122.296036, 47.653688], [-122.296097, 47.653676], [-122.296184, 47.653681], [-122.29623, 47.653699], [-122.296267, 47.653717], [-122.296304, 47.653736], [-122.29634, 47.653754], [-122.29639, 47.653778], [-122.29642, 47.653792], [-122.29645, 47.653805], [-122.296504, 47.653825], [-122.296575, 47.653853], [-122.29664, 47.653851], [-122.296684, 47.653848], [-122.296753, 47.653834], [-122.29679, 47.653809], [-122.296867, 47.653787], [-122.296899, 47.653766], [-122.296946, 47.653777], [-122.29698, 47.653812], [-122.296991, 47.653847], [-122.29699, 47.653963], [-122.296972, 47.653994], [-122.296932, 47.65401], [-122.296878, 47.654026], [-122.29684, 47.65403], [-122.296796, 47.654013], [-122.296748, 47.65399], [-122.296708, 47.653976], [-122.29667, 47.653974], [-122.296632, 47.653972], [-122.296581, 47.653966], [-122.296532, 47.653982], [-122.29652, 47.654005], [-122.296497, 47.654024], [-122.296443, 47.654087], [-122.296403, 47.654105], [-122.296365, 47.654125], [-122.296329, 47.654151], [-122.296301, 47.654171], [-122.296287, 47.654207], [-122.296308, 47.654233], [-122.296332, 47.654253], [-122.296366, 47.654287], [-122.296387, 47.654314], [-122.296414, 47.654339], [-122.296443, 47.654357], [-122.296483, 47.654375], [-122.296596, 47.65441], [-122.296652, 47.654419], [-122.296756, 47.654419], [-122.296799, 47.654395], [-122.296836, 47.654374], [-122.296872, 47.654397], [-122.296907, 47.654419], [-122.296948, 47.654442], [-122.296979, 47.65446], [-122.297012, 47.654496], [-122.297012, 47.654561], [-122.29701, 47.654618], [-122.297018, 47.654688], [-122.297042, 47.654744], [-122.29725, 47.654734], [-122.297271, 47.654689], [-122.297286, 47.654667], [-122.297316, 47.654619], [-122.29733, 47.654591], [-122.297352, 47.654565], [-122.297383, 47.654516], [-122.2974, 47.654486], [-122.297424, 47.654458], [-122.297455, 47.654408], [-122.29747, 47.654373], [-122.297491, 47.654333], [-122.297504, 47.654307], [-122.297534, 47.654255], [-122.297553, 47.654225], [-122.297575, 47.654187], [-122.297594, 47.654151], [-122.297605, 47.654127], [-122.297625, 47.654085], [-122.297636, 47.65406], [-122.297639, 47.654031], [-122.297637, 47.653997], [-122.297633, 47.653965], [-122.297631, 47.653923], [-122.297643, 47.653896], [-122.297679, 47.653861], [-122.297708, 47.653829], [-122.297747, 47.653808], [-122.297805, 47.653797], [-122.297833, 47.65378], [-122.297878, 47.653757], [-122.297921, 47.653741], [-122.297971, 47.653726], [-122.298059, 47.653696], [-122.298124, 47.653692], [-122.298171, 47.653677], [-122.298274, 47.653681], [-122.298342, 47.653689], [-122.29838, 47.653695], [-122.298443, 47.653694], [-122.29851, 47.6537], [-122.298557, 47.653692], [-122.298594, 47.653651], [-122.298617, 47.653611], [-122.298611, 47.653585], [-122.298557, 47.65355], [-122.298489, 47.653502], [-122.29845, 47.653477], [-122.298403, 47.653455], [-122.298341, 47.653443], [-122.298252, 47.653433], [-122.298203, 47.653427], [-122.298138, 47.653421], [-122.29805, 47.653423], [-122.298003, 47.653428], [-122.297936, 47.653441], [-122.297884, 47.653453], [-122.297831, 47.65347], [-122.297742, 47.65347], [-122.297742, 47.653446], [-122.297767, 47.653423], [-122.297803, 47.653398], [-122.297839, 47.653363], [-122.297883, 47.653333], [-122.297961, 47.653299], [-122.298008, 47.653281], [-122.298074, 47.653281], [-122.298115, 47.653267], [-122.298149, 47.653259], [-122.298204, 47.653256], [-122.298252, 47.65325], [-122.298345, 47.65325], [-122.298444, 47.653253], [-122.298506, 47.653251], [-122.29855, 47.653243], [-122.298622, 47.653236], [-122.298671, 47.653209], [-122.298715, 47.653199], [-122.298813, 47.653196], [-122.298872, 47.653191], [-122.298919, 47.653181], [-122.29896, 47.653177], [-122.299033, 47.653184], [-122.299098, 47.653186], [-122.299139, 47.653186], [-122.299179, 47.653181], [-122.299233, 47.653172], [-122.299298, 47.653165], [-122.299358, 47.653149], [-122.299358, 47.653011], [-122.299357, 47.652867], [-122.29936, 47.652793], [-122.299398, 47.652792], [-122.299397, 47.652655], [-122.299413, 47.652595], [-122.299534, 47.652591], [-122.299537, 47.652564], [-122.29953, 47.65254], [-122.299482, 47.652506], [-122.299431, 47.65247], [-122.299367, 47.652435], [-122.299316, 47.652405], [-122.299287, 47.652388], [-122.299248, 47.652377], [-122.299207, 47.652368], [-122.299162, 47.652349], [-122.299123, 47.652332], [-122.29907, 47.652329], [-122.299023, 47.652321], [-122.298949, 47.652309], [-122.298855, 47.652285], [-122.298804, 47.652275], [-122.298759, 47.652256], [-122.298716, 47.652237], [-122.298665, 47.652219], [-122.298611, 47.652198], [-122.298581, 47.652182], [-122.29854, 47.652157], [-122.298505, 47.65214], [-122.29846, 47.652122], [-122.29841, 47.652097], [-122.298343, 47.652083], [-122.298298, 47.652067], [-122.298257, 47.65205], [-122.298202, 47.65204], [-122.298129, 47.652032], [-122.298105, 47.652001], [-122.298103, 47.65197], [-122.298096, 47.651938], [-122.298067, 47.651905], [-122.298026, 47.651875], [-122.297984, 47.651857], [-122.297917, 47.65184], [-122.297872, 47.651822], [-122.297834, 47.651807], [-122.2978, 47.651789], [-122.297782, 47.651767], [-122.297783, 47.651726], [-122.297791, 47.651671], [-122.297793, 47.651619], [-122.297797, 47.65156], [-122.2978, 47.651528], [-122.297822, 47.651462], [-122.297838, 47.651422], [-122.297812, 47.651403], [-122.297775, 47.651378], [-122.297776, 47.65135], [-122.297799, 47.65129], [-122.297812, 47.651261], [-122.297832, 47.651215], [-122.297847, 47.651189], [-122.297859, 47.651161], [-122.297878, 47.651127], [-122.29789, 47.651098], [-122.297898, 47.651058], [-122.297899, 47.651028], [-122.297902, 47.65097], [-122.297905, 47.650925], [-122.297911, 47.650875], [-122.297926, 47.650834], [-122.297955, 47.6508], [-122.297984, 47.650778], [-122.297971, 47.650754], [-122.29795, 47.650734], [-122.297959, 47.650707], [-122.297993, 47.650686], [-122.298125, 47.65069], [-122.298267, 47.650695], [-122.298364, 47.650699], [-122.298455, 47.650694], [-122.298492, 47.650672], [-122.298519, 47.650655], [-122.298555, 47.650621], [-122.298581, 47.650603], [-122.298623, 47.650582], [-122.298653, 47.65056], [-122.298698, 47.650525], [-122.298726, 47.65049], [-122.298717, 47.650446], [-122.298688, 47.650413], [-122.298655, 47.650402], [-122.298628, 47.65043], [-122.298611, 47.650455], [-122.298574, 47.650485], [-122.298533, 47.650504], [-122.298508, 47.650482], [-122.298517, 47.650455], [-122.298547, 47.650401], [-122.298562, 47.650366], [-122.298578, 47.650341], [-122.298599, 47.650296], [-122.298626, 47.650247], [-122.298653, 47.650192], [-122.298654, 47.65016], [-122.298657, 47.650124], [-122.298662, 47.650098], [-122.298663, 47.650054], [-122.298672, 47.650003], [-122.298679, 47.649962], [-122.298697, 47.649919], [-122.298716, 47.649888], [-122.298731, 47.649862], [-122.298754, 47.649809], [-122.298802, 47.649756], [-122.298807, 47.649723], [-122.298821, 47.649686], [-122.29883, 47.649639], [-122.298842, 47.649605], [-122.298858, 47.649572], [-122.298874, 47.649531], [-122.298908, 47.649462], [-122.298917, 47.649411], [-122.298926, 47.649384], [-122.29894, 47.649354], [-122.298951, 47.649311], [-122.298961, 47.649235], [-122.298976, 47.649206], [-122.298993, 47.649154], [-122.299037, 47.649069], [-122.299047, 47.649043], [-122.299062, 47.649012], [-122.299076, 47.648966], [-122.29909, 47.648928], [-122.2991, 47.648905], [-122.299122, 47.648851], [-122.299141, 47.648822], [-122.299163, 47.648793], [-122.299189, 47.648758], [-122.299206, 47.64873], [-122.29922, 47.648701], [-122.299241, 47.648664], [-122.299256, 47.648637], [-122.29928, 47.648605], [-122.299307, 47.648571], [-122.299338, 47.648529], [-122.299368, 47.648492], [-122.299388, 47.648459], [-122.299414, 47.648426], [-122.299427, 47.648382], [-122.299389, 47.648363], [-122.299415, 47.648331], [-122.299456, 47.64831], [-122.299507, 47.64831], [-122.299538, 47.648291], [-122.299632, 47.64828], [-122.29966, 47.648259], [-122.299679, 47.648227], [-122.299686, 47.648111], [-122.299683, 47.648018], [-122.299664, 47.647974], [-122.299631, 47.647958], [-122.299547, 47.647951], [-122.299547, 47.647921], [-122.299565, 47.647888], [-122.299576, 47.647856], [-122.299577, 47.64781], [-122.299571, 47.647764], [-122.299556, 47.647732], [-122.299558, 47.647689], [-122.299584, 47.64766], [-122.299632, 47.64763], [-122.299657, 47.647603], [-122.299695, 47.647589], [-122.299751, 47.647575], [-122.299806, 47.64757], [-122.299903, 47.647561], [-122.299977, 47.647539], [-122.300033, 47.647531], [-122.30007, 47.647543], [-122.300113, 47.647537], [-122.300149, 47.647533], [-122.300203, 47.647528], [-122.300248, 47.647519], [-122.300284, 47.647525], [-122.300331, 47.647531], [-122.300371, 47.647533], [-122.300459, 47.647526], [-122.300539, 47.647519], [-122.300645, 47.647516], [-122.300691, 47.647507], [-122.300783, 47.647505], [-122.300999, 47.647504], [-122.301208, 47.647504], [-122.301442, 47.647504], [-122.301637, 47.647504], [-122.301724, 47.647506], [-122.301933, 47.647506], [-122.302142, 47.647507], [-122.302348, 47.647506], [-122.302552, 47.647505], [-122.30276, 47.647505], [-122.30297, 47.647504], [-122.303177, 47.647506], [-122.303218, 47.647489], [-122.303336, 47.647488], [-122.30349, 47.647492], [-122.303713, 47.647492], [-122.303922, 47.647492], [-122.304129, 47.647494], [-122.304339, 47.647495], [-122.304558, 47.647495], [-122.304765, 47.647495], [-122.304974, 47.647494], [-122.305183, 47.647494], [-122.305365, 47.647497], [-122.305568, 47.647498], [-122.305775, 47.647498], [-122.305985, 47.647498], [-122.306197, 47.647498], [-122.306401, 47.647499], [-122.306607, 47.647501], [-122.306811, 47.647502], [-122.30684, 47.647517], [-122.306874, 47.647549], [-122.306914, 47.647555], [-122.307005, 47.647564], [-122.307043, 47.647566], [-122.307099, 47.647576], [-122.307136, 47.647581], [-122.307195, 47.647588], [-122.307264, 47.64759], [-122.307336, 47.647597], [-122.307419, 47.647608], [-122.30747, 47.647612], [-122.307527, 47.647616], [-122.30758, 47.64762], [-122.307641, 47.64763], [-122.30774, 47.647635], [-122.307851, 47.647646], [-122.307904, 47.647653], [-122.307948, 47.647656], [-122.307998, 47.647667], [-122.308053, 47.647672], [-122.308089, 47.647678], [-122.308191, 47.647689], [-122.308272, 47.647696], [-122.308314, 47.647701], [-122.308363, 47.647708], [-122.308443, 47.647718], [-122.308496, 47.647721], [-122.308541, 47.64773], [-122.308579, 47.647735], [-122.308622, 47.64774], [-122.308676, 47.647745], [-122.308761, 47.647755], [-122.308818, 47.647756], [-122.308869, 47.647767], [-122.30891, 47.647779], [-122.308967, 47.647796], [-122.309006, 47.647803], [-122.30904, 47.647812], [-122.309094, 47.64783], [-122.309147, 47.647844], [-122.309182, 47.647851], [-122.309235, 47.647863], [-122.309279, 47.64787], [-122.309311, 47.647882], [-122.309391, 47.647911], [-122.309426, 47.647921], [-122.309467, 47.647932], [-122.309513, 47.647945], [-122.309572, 47.647956], [-122.309607, 47.647971], [-122.309656, 47.647987], [-122.309691, 47.647996], [-122.309742, 47.64801], [-122.309782, 47.648022], [-122.309822, 47.64803], [-122.309855, 47.648038], [-122.309922, 47.648063], [-122.309997, 47.648094], [-122.310037, 47.648109], [-122.310073, 47.648132], [-122.310105, 47.648157], [-122.310135, 47.648182], [-122.310188, 47.648225], [-122.310225, 47.648261], [-122.310236, 47.648294], [-122.310236, 47.648336], [-122.310213, 47.648367], [-122.310186, 47.648384], [-122.310149, 47.6484], [-122.310118, 47.648416], [-122.310085, 47.648437], [-122.310059, 47.648457], [-122.31007, 47.64849], [-122.310137, 47.648495], [-122.310308, 47.648498], [-122.310365, 47.648517], [-122.310414, 47.648544], [-122.310456, 47.648567], [-122.310487, 47.648584], [-122.310522, 47.648609], [-122.310549, 47.648626], [-122.310583, 47.648647], [-122.310617, 47.648664], [-122.310646, 47.648685], [-122.310689, 47.648686], [-122.310725, 47.648702], [-122.310755, 47.64872], [-122.310788, 47.648736], [-122.310818, 47.648719], [-122.310861, 47.64869], [-122.310902, 47.64868], [-122.310944, 47.648704], [-122.310983, 47.648734], [-122.311026, 47.648766], [-122.311098, 47.648801], [-122.311137, 47.648823], [-122.31118, 47.648849], [-122.31124, 47.648886], [-122.311247, 47.648912], [-122.31122, 47.648933], [-122.311166, 47.648971], [-122.311194, 47.648999], [-122.311225, 47.649014], [-122.311269, 47.649039], [-122.311294, 47.649063], [-122.311333, 47.649095], [-122.31138, 47.649115], [-122.311409, 47.649137], [-122.311434, 47.649156], [-122.311501, 47.649194], [-122.311535, 47.649217], [-122.311567, 47.649242], [-122.311617, 47.649271], [-122.311657, 47.649295], [-122.311689, 47.649313], [-122.311718, 47.649328], [-122.311754, 47.64935], [-122.311791, 47.649367], [-122.311824, 47.649385], [-122.311881, 47.649423], [-122.311922, 47.649446], [-122.311967, 47.64946], [-122.311999, 47.649472], [-122.312036, 47.649492], [-122.31208, 47.649518], [-122.312123, 47.649534], [-122.312162, 47.649551], [-122.312194, 47.649568], [-122.312224, 47.649586], [-122.312271, 47.649592], [-122.312302, 47.649576], [-122.312336, 47.649559], [-122.312368, 47.649545], [-122.312408, 47.649521], [-122.312436, 47.649505], [-122.312476, 47.649483], [-122.312504, 47.649468], [-122.312551, 47.649441], [-122.312583, 47.649424], [-122.312683, 47.649394], [-122.312711, 47.649412], [-122.312749, 47.649432], [-122.312805, 47.649463], [-122.312837, 47.649482], [-122.312861, 47.649502], [-122.312895, 47.649519], [-122.312952, 47.649544], [-122.312993, 47.649567], [-122.313044, 47.649601], [-122.313084, 47.649621], [-122.313132, 47.649646], [-122.313167, 47.649667], [-122.313195, 47.649689], [-122.313242, 47.649713], [-122.313272, 47.649727], [-122.313309, 47.649754], [-122.31335, 47.649784], [-122.313389, 47.649803], [-122.31344, 47.649835], [-122.313471, 47.649853], [-122.313502, 47.649874], [-122.313531, 47.649906], [-122.313486, 47.649935], [-122.313435, 47.64996], [-122.31338, 47.649994], [-122.31333, 47.650026], [-122.313268, 47.650057], [-122.313225, 47.650073], [-122.313153, 47.650102], [-122.31308, 47.650122], [-122.313, 47.650146], [-122.313024, 47.650185], [-122.313042, 47.650208], [-122.313065, 47.65026], [-122.313084, 47.650293], [-122.313103, 47.650347], [-122.313117, 47.650385], [-122.313141, 47.650417], [-122.313164, 47.650436], [-122.313188, 47.650459], [-122.313221, 47.650486], [-122.313248, 47.650515], [-122.313269, 47.650547], [-122.313301, 47.650577], [-122.313328, 47.650626], [-122.313353, 47.650646], [-122.313377, 47.650668], [-122.313406, 47.650696], [-122.313433, 47.650718], [-122.313457, 47.650738], [-122.313483, 47.650765], [-122.313508, 47.650791], [-122.31354, 47.65082], [-122.313575, 47.650848], [-122.313628, 47.6509], [-122.313674, 47.650935], [-122.313703, 47.650965], [-122.31372, 47.650987], [-122.31375, 47.651017], [-122.313777, 47.651045], [-122.313805, 47.651074], [-122.313831, 47.651103], [-122.313853, 47.651133], [-122.313856, 47.651158], [-122.313894, 47.651191], [-122.313916, 47.651214], [-122.313936, 47.651237], [-122.31397, 47.651268], [-122.314009, 47.651306], [-122.314049, 47.651344], [-122.314084, 47.651364], [-122.314119, 47.651379], [-122.314158, 47.651382], [-122.314222, 47.651407], [-122.314281, 47.651424], [-122.314325, 47.651435], [-122.31436, 47.651445], [-122.314394, 47.65146], [-122.31443, 47.651479], [-122.314462, 47.651491], [-122.314501, 47.651493], [-122.314537, 47.651509], [-122.314562, 47.651486], [-122.314614, 47.651488], [-122.314658, 47.651494], [-122.314723, 47.651498], [-122.314769, 47.651512], [-122.314784, 47.651546], [-122.314824, 47.651548], [-122.314887, 47.651555], [-122.314944, 47.651579], [-122.314989, 47.651599], [-122.315048, 47.65161], [-122.315114, 47.651614], [-122.315183, 47.651643], [-122.31519, 47.651672], [-122.315217, 47.651692], [-122.315284, 47.65171], [-122.315366, 47.651727], [-122.315401, 47.651728], [-122.315465, 47.651733], [-122.315521, 47.651748], [-122.315605, 47.651756], [-122.315708, 47.651756], [-122.315803, 47.651753], [-122.315901, 47.651748], [-122.316114, 47.651743], [-122.316189, 47.651737], [-122.316208, 47.6517], [-122.316213, 47.651637], [-122.316217, 47.651587], [-122.316228, 47.651557], [-122.316294, 47.651576], [-122.316389, 47.651608], [-122.316446, 47.65164], [-122.316446, 47.651665], [-122.316403, 47.651718], [-122.31636, 47.651782], [-122.316313, 47.651839], [-122.316288, 47.65187], [-122.316312, 47.651896], [-122.31635, 47.651912], [-122.316387, 47.651924], [-122.316419, 47.65194], [-122.316401, 47.651972], [-122.316437, 47.651987], [-122.31648, 47.652007], [-122.316463, 47.652039], [-122.316503, 47.652055], [-122.316551, 47.652071], [-122.316596, 47.652086], [-122.316631, 47.652098], [-122.316664, 47.652109], [-122.316669, 47.652135], [-122.316669, 47.652167], [-122.316706, 47.652187], [-122.31675, 47.652214], [-122.316791, 47.652243], [-122.316833, 47.65227], [-122.31688, 47.652303], [-122.31693, 47.652283], [-122.31698, 47.65225], [-122.317035, 47.652212], [-122.317084, 47.652175], [-122.317135, 47.652144], [-122.317168, 47.652136], [-122.317203, 47.652153], [-122.317267, 47.652191], [-122.317318, 47.652225], [-122.317373, 47.652278], [-122.317343, 47.652303], [-122.317289, 47.652334], [-122.317233, 47.652367], [-122.317196, 47.652397], [-122.317178, 47.652428], [-122.317209, 47.652457], [-122.317258, 47.652495], [-122.31726, 47.652533], [-122.317225, 47.652564], [-122.317247, 47.652594], [-122.317306, 47.652589], [-122.317346, 47.652561], [-122.317406, 47.652522], [-122.317454, 47.652484], [-122.317506, 47.652445], [-122.317545, 47.652423], [-122.317559, 47.652449], [-122.317565, 47.652483], [-122.31755, 47.652507], [-122.317512, 47.652535], [-122.317456, 47.652578], [-122.317403, 47.652625], [-122.317396, 47.652662], [-122.31744, 47.652686], [-122.317495, 47.652685], [-122.317583, 47.652673], [-122.317605, 47.652704], [-122.317638, 47.652757], [-122.317661, 47.652798], [-122.317689, 47.652843], [-122.317735, 47.652891], [-122.317776, 47.652931], [-122.317802, 47.652965], [-122.317821, 47.652989], [-122.317775, 47.653014], [-122.317741, 47.653032], [-122.31776, 47.653055], [-122.317835, 47.653113], [-122.317894, 47.653151], [-122.317928, 47.653178], [-122.317955, 47.653194], [-122.318, 47.653227], [-122.318036, 47.653252], [-122.318077, 47.653276], [-122.318122, 47.653302], [-122.318156, 47.653335], [-122.318192, 47.653368], [-122.318237, 47.653415], [-122.318298, 47.653484], [-122.318346, 47.653528], [-122.318385, 47.653555], [-122.318421, 47.65359], [-122.318456, 47.653626], [-122.318493, 47.65366], [-122.318515, 47.653683], [-122.318536, 47.653709], [-122.318551, 47.653733], [-122.318587, 47.653723], [-122.318611, 47.653702], [-122.318635, 47.653679], [-122.318669, 47.653649], [-122.318688, 47.653624], [-122.318725, 47.653596], [-122.318761, 47.653609], [-122.318814, 47.653636], [-122.318842, 47.653682], [-122.318806, 47.653739], [-122.318785, 47.653767], [-122.318772, 47.653799], [-122.318807, 47.653841], [-122.31884, 47.653831], [-122.318896, 47.653803], [-122.318947, 47.653818], [-122.319013, 47.653839], [-122.319053, 47.653857], [-122.319084, 47.653872], [-122.319156, 47.653903], [-122.319204, 47.653904], [-122.319264, 47.653896], [-122.319318, 47.653885], [-122.319368, 47.653879], [-122.319451, 47.653879], [-122.319501, 47.653887], [-122.319549, 47.653901], [-122.319585, 47.653912], [-122.319622, 47.653933], [-122.319667, 47.653958], [-122.31971, 47.653986], [-122.319746, 47.654013], [-122.319795, 47.654048], [-122.319823, 47.654072], [-122.319874, 47.654105], [-122.319911, 47.654125], [-122.319944, 47.654138], [-122.319979, 47.654147], [-122.320032, 47.654153], [-122.320068, 47.654158], [-122.320107, 47.654161], [-122.320155, 47.654168], [-122.320165, 47.654201], [-122.320166, 47.654229], [-122.320195, 47.654249], [-122.320233, 47.654258], [-122.320281, 47.654256], [-122.320326, 47.654253], [-122.320367, 47.654251], [-122.320425, 47.654251], [-122.320507, 47.654255], [-122.320549, 47.654259], [-122.320593, 47.654267], [-122.320643, 47.654282], [-122.320676, 47.654299], [-122.320717, 47.654326], [-122.320759, 47.654337], [-122.320811, 47.65434], [-122.321006, 47.654342], [-122.321049, 47.654329], [-122.321049, 47.654305], [-122.321055, 47.653765], [-122.321057, 47.65374], [-122.321056, 47.653712], [-122.321094, 47.653708], [-122.321307, 47.653707], [-122.32157, 47.653705], [-122.321677, 47.653705], [-122.321753, 47.653706], [-122.321792, 47.653719], [-122.32179, 47.653906], [-122.321801, 47.653939], [-122.321843, 47.653939], [-122.321926, 47.653938], [-122.321976, 47.653936], [-122.321995, 47.653907], [-122.322006, 47.653878], [-122.322021, 47.653838], [-122.32204, 47.653797], [-122.32206, 47.653759], [-122.322076, 47.653726], [-122.322117, 47.653713], [-122.32217, 47.653714], [-122.322218, 47.653715], [-122.322324, 47.653713], [-122.322389, 47.65371], [-122.322454, 47.653701], [-122.322494, 47.653697], [-122.322465, 47.654659], [-122.32244, 47.656367], [-122.322389, 47.658048], [-122.322282, 47.659741], [-122.322143, 47.661546], [-122.322075, 47.662428], [-122.322014, 47.663324], [-122.321994, 47.664217], [-122.321991, 47.665102], [-122.321988, 47.665984], [-122.321984, 47.666866], [-122.321968, 47.667731], [-122.321976, 47.668599], [-122.321968, 47.66896], [-122.321956, 47.66947], [-122.321931, 47.670321], [-122.321821, 47.671221], [-122.321622, 47.67216], [-122.3216, 47.672234], [-122.321389, 47.672958], [-122.321234, 47.673479], [-122.321093, 47.673985], [-122.320986, 47.674362], [-122.320772, 47.674132], [-122.32065, 47.674], [-122.320133, 47.673443], [-122.319608, 47.67288], [-122.319344, 47.672584], [-122.319324, 47.672563], [-122.319304, 47.672543], [-122.319281, 47.672524], [-122.319258, 47.672506], [-122.319233, 47.672488], [-122.319206, 47.672472], [-122.319178, 47.672456], [-122.31915, 47.672441], [-122.31912, 47.672428], [-122.31909, 47.672415], [-122.319058, 47.672403], [-122.319025, 47.672393], [-122.318815, 47.672343], [-122.318027, 47.672165], [-122.317252, 47.671991], [-122.316496, 47.671809], [-122.315745, 47.671634], [-122.315064, 47.671473], [-122.314415, 47.671313], [-122.313806, 47.671164], [-122.313034, 47.670985], [-122.313035, 47.671205], [-122.312331, 47.671763], [-122.311993, 47.672041], [-122.311914, 47.672097], [-122.311913, 47.671728], [-122.310877, 47.671531], [-122.310159, 47.671396], [-122.308952, 47.671183], [-122.308381, 47.671071], [-122.306609, 47.67075], [-122.305915, 47.670576], [-122.305111, 47.670376], [-122.303992, 47.670092], [-122.303959, 47.670075], [-122.303929, 47.670057], [-122.303902, 47.670036], [-122.303878, 47.670013], [-122.303859, 47.669992], [-122.303843, 47.669969], [-122.303831, 47.669946], [-122.303822, 47.669921], [-122.303816, 47.669897], [-122.303814, 47.669872], [-122.303816, 47.669847], [-122.30382, 47.669822], [-122.303876, 47.669409], [-122.303844, 47.668948], [-122.303795, 47.668029], [-122.303792, 47.667967], [-122.302624, 47.667964], [-122.301781, 47.667964], [-122.30061, 47.667985], [-122.300609, 47.667933], [-122.300608, 47.667794], [-122.300608, 47.667745], [-122.300599, 47.666816], [-122.300593, 47.665877], [-122.300818, 47.664986], [-122.300824, 47.66496], [-122.30083, 47.664935], [-122.300836, 47.66491], [-122.300841, 47.664885], [-122.300847, 47.664859], [-122.300852, 47.664834], [-122.300858, 47.664808], [-122.300862, 47.664783], [-122.300867, 47.664758], [-122.300871, 47.664732], [-122.300875, 47.664707], [-122.300879, 47.664681], [-122.300883, 47.664656], [-122.300886, 47.66463], [-122.30089, 47.664605], [-122.300893, 47.664579], [-122.300897, 47.664554], [-122.300899, 47.664528], [-122.300902, 47.664503], [-122.300904, 47.664477], [-122.300906, 47.664451], [-122.300908, 47.664426], [-122.30091, 47.6644], [-122.300904, 47.66394], [-122.300914, 47.662788], [-122.300912, 47.661251], [-122.299698, 47.661258], [-122.298764, 47.661255], [-122.298117, 47.661253], [-122.296731, 47.66125], [-122.295692, 47.661246], [-122.294657, 47.661248], [-122.293624, 47.661244], [-122.292869, 47.661237]]]]
    },
    "properties": {
      "neighbourhood": "University District",
      "neighbourhood_group": "University District"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.320238, 47.595827], [-122.320787, 47.595834], [-122.321612, 47.595834], [-122.322212, 47.595831], [-122.32258, 47.595831], [-122.323493, 47.59583], [-122.323841, 47.595835], [-122.324679, 47.595835], [-122.325523, 47.595834], [-122.326373, 47.595837], [-122.327104, 47.595835], [-122.327348, 47.595836], [-122.327684, 47.595796], [-122.327931, 47.595921], [-122.328513, 47.596214], [-122.328736, 47.596327], [-122.329042, 47.596482], [-122.329041, 47.596535], [-122.328976, 47.597233], [-122.32897, 47.597496], [-122.328972, 47.598422], [-122.328966, 47.5992], [-122.328966, 47.600034], [-122.328966, 47.600877], [-122.328965, 47.601715], [-122.328437, 47.601716], [-122.327842, 47.601712], [-122.327203, 47.601714], [-122.326315, 47.601711], [-122.325408, 47.601705], [-122.324967, 47.601708], [-122.323893, 47.600941], [-122.323259, 47.600484], [-122.322577, 47.599992], [-122.322283, 47.599747], [-122.321727, 47.59919], [-122.320164, 47.599179], [-122.318862, 47.599187], [-122.317634, 47.599194], [-122.317227, 47.599191], [-122.317185, 47.599191], [-122.316659, 47.599188], [-122.315337, 47.599201], [-122.314576, 47.599206], [-122.314137, 47.599208], [-122.314111, 47.599187], [-122.314085, 47.599166], [-122.314059, 47.599145], [-122.314035, 47.599123], [-122.31401, 47.599101], [-122.313987, 47.599078], [-122.313964, 47.599056], [-122.313942, 47.599033], [-122.31392, 47.59901], [-122.313898, 47.598987], [-122.313877, 47.598963], [-122.313857, 47.598939], [-122.313838, 47.598915], [-122.313819, 47.598891], [-122.3138, 47.598867], [-122.313783, 47.598842], [-122.313766, 47.598817], [-122.313749, 47.598792], [-122.313732, 47.598769], [-122.312872, 47.597639], [-122.312838, 47.597596], [-122.312383, 47.596993], [-122.312137, 47.596677], [-122.311901, 47.596369], [-122.311572, 47.595931], [-122.311529, 47.595877], [-122.31216, 47.595814], [-122.312807, 47.595813], [-122.313033, 47.595815], [-122.313449, 47.595814], [-122.314133, 47.595816], [-122.314585, 47.595815], [-122.315472, 47.595819], [-122.316356, 47.595818], [-122.31723, 47.59582], [-122.317667, 47.595821], [-122.318161, 47.595821], [-122.318848, 47.595823], [-122.319215, 47.595823], [-122.31974, 47.595824], [-122.319981, 47.595824], [-122.320186, 47.595827], [-122.320238, 47.595827]]]]
    },
    "properties": {
      "neighbourhood": "International District",
      "neighbourhood_group": "Downtown"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.278973, 47.628529], [-122.278964, 47.628475], [-122.278933, 47.628413], [-122.278896, 47.62839], [-122.278872, 47.628358], [-122.278861, 47.628328], [-122.278862, 47.628277], [-122.278869, 47.628226], [-122.278883, 47.628179], [-122.278893, 47.628147], [-122.2789, 47.628118], [-122.278917, 47.628077], [-122.278935, 47.628049], [-122.278951, 47.628022], [-122.278983, 47.627981], [-122.279021, 47.627933], [-122.27905, 47.627902], [-122.279082, 47.627875], [-122.279112, 47.627858], [-122.279148, 47.627843], [-122.279209, 47.62783], [-122.279274, 47.627839], [-122.279315, 47.627846], [-122.279371, 47.62785], [-122.279406, 47.627837], [-122.279427, 47.627817], [-122.279451, 47.627792], [-122.279472, 47.627769], [-122.279498, 47.627731], [-122.279537, 47.627685], [-122.279565, 47.627652], [-122.279583, 47.627627], [-122.279616, 47.627595], [-122.279642, 47.627562], [-122.279666, 47.627536], [-122.279708, 47.627496], [-122.279743, 47.627461], [-122.279779, 47.627425], [-122.279813, 47.627385], [-122.27984, 47.627347], [-122.279865, 47.627307], [-122.279881, 47.627278], [-122.279908, 47.627241], [-122.279939, 47.627206], [-122.279964, 47.627178], [-122.280008, 47.627136], [-122.280041, 47.627104], [-122.280067, 47.627076], [-122.280097, 47.627047], [-122.280122, 47.627029], [-122.280151, 47.627009], [-122.280187, 47.626992], [-122.280225, 47.626976], [-122.280259, 47.626964], [-122.280306, 47.62695], [-122.280348, 47.626939], [-122.280393, 47.626927], [-122.28046, 47.62691], [-122.280503, 47.626894], [-122.280544, 47.626874], [-122.280601, 47.626842], [-122.280662, 47.626796], [-122.280706, 47.626755], [-122.280742, 47.626722], [-122.280762, 47.626682], [-122.280768, 47.626647], [-122.28077, 47.626593], [-122.280775, 47.626545], [-122.28084, 47.626544], [-122.280915, 47.626529], [-122.28095, 47.626507], [-122.281001, 47.626477], [-122.281064, 47.62644], [-122.281111, 47.626409], [-122.281167, 47.626373], [-122.281225, 47.626328], [-122.28126, 47.6263], [-122.281314, 47.626248], [-122.281346, 47.626215], [-122.281375, 47.626179], [-122.281393, 47.626155], [-122.281415, 47.626124], [-122.281466, 47.626083], [-122.28152, 47.62605], [-122.281569, 47.626017], [-122.281634, 47.625967], [-122.281658, 47.625933], [-122.281705, 47.62587], [-122.281733, 47.625832], [-122.281739, 47.625785], [-122.281749, 47.625713], [-122.281774, 47.625651], [-122.281787, 47.625609], [-122.281812, 47.625562], [-122.281845, 47.625505], [-122.281876, 47.625493], [-122.281936, 47.625492], [-122.281983, 47.62549], [-122.282036, 47.625488], [-122.282087, 47.625458], [-122.282137, 47.625423], [-122.282191, 47.625385], [-122.282224, 47.625341], [-122.282235, 47.625303], [-122.282227, 47.62525], [-122.28218, 47.62522], [-122.282125, 47.625214], [-122.282061, 47.625208], [-122.282069, 47.625175], [-122.282087, 47.62515], [-122.282111, 47.625118], [-122.282137, 47.625085], [-122.282162, 47.625067], [-122.282205, 47.625041], [-122.282245, 47.625008], [-122.282322, 47.62493], [-122.282345, 47.624905], [-122.282387, 47.624849], [-122.282422, 47.624802], [-122.282459, 47.624746], [-122.282497, 47.624692], [-122.282542, 47.624633], [-122.282565, 47.624602], [-122.282587, 47.624564], [-122.282604, 47.624501], [-122.28262, 47.624446], [-122.282643, 47.624365], [-122.282667, 47.624297], [-122.282665, 47.62426], [-122.282661, 47.624217], [-122.282657, 47.624158], [-122.282656, 47.624104], [-122.282663, 47.624052], [-122.28267, 47.62398], [-122.282674, 47.623926], [-122.282675, 47.623874], [-122.282666, 47.623791], [-122.282658, 47.62373], [-122.282627, 47.623685], [-122.282623, 47.623659], [-122.282614, 47.623591], [-122.282609, 47.623522], [-122.282602, 47.623489], [-122.282597, 47.623459], [-122.282606, 47.623432], [-122.282635, 47.623411], [-122.282611, 47.623388], [-122.282571, 47.623378], [-122.282573, 47.623342], [-122.282581, 47.623319], [-122.28259, 47.623295], [-122.282616, 47.623266], [-122.282626, 47.623191], [-122.282636, 47.623118], [-122.28256, 47.623118], [-122.282513, 47.623095], [-122.282512, 47.623047], [-122.282511, 47.622992], [-122.282509, 47.622915], [-122.282502, 47.622862], [-122.28249, 47.622824], [-122.282492, 47.622769], [-122.282512, 47.622718], [-122.282496, 47.622684], [-122.282473, 47.62265], [-122.28245, 47.622625], [-122.282415, 47.622594], [-122.282355, 47.622555], [-122.282279, 47.622518], [-122.282206, 47.622484], [-122.282168, 47.622451], [-122.282147, 47.622426], [-122.282104, 47.622383], [-122.282043, 47.622339], [-122.282006, 47.622319], [-122.281969, 47.622295], [-122.281916, 47.62226], [-122.281868, 47.622228], [-122.281819, 47.6222], [-122.281773, 47.622176], [-122.281702, 47.622127], [-122.281636, 47.622096], [-122.281588, 47.622072], [-122.281534, 47.622036], [-122.28148, 47.621998], [-122.281449, 47.621964], [-122.281403, 47.621922], [-122.281377, 47.621903], [-122.281345, 47.621892], [-122.281298, 47.621872], [-122.281245, 47.621857], [-122.281192, 47.621856], [-122.281155, 47.621862], [-122.281101, 47.621845], [-122.281039, 47.621792], [-122.280978, 47.621762], [-122.280948, 47.621742], [-122.280892, 47.62171], [-122.280841, 47.621671], [-122.280797, 47.621634], [-122.280767, 47.621596], [-122.280744, 47.621567], [-122.280724, 47.62153], [-122.280714, 47.621495], [-122.280693, 47.621465], [-122.280661, 47.621443], [-122.28062, 47.621416], [-122.280578, 47.621369], [-122.28056, 47.621322], [-122.280533, 47.621273], [-122.280493, 47.621208], [-122.280463, 47.621163], [-122.280432, 47.621127], [-122.280495, 47.621079], [-122.280494, 47.621002], [-122.280482, 47.620971], [-122.280419, 47.620961], [-122.280397, 47.620931], [-122.280389, 47.620894], [-122.280387, 47.620861], [-122.280358, 47.620816], [-122.280316, 47.620818], [-122.280264, 47.620837], [-122.280222, 47.62084], [-122.280173, 47.620831], [-122.280108, 47.620815], [-122.280073, 47.620807], [-122.279999, 47.620799], [-122.279939, 47.620784], [-122.279903, 47.620774], [-122.279854, 47.620751], [-122.27982, 47.620714], [-122.279788, 47.620679], [-122.279738, 47.620661], [-122.279732, 47.620631], [-122.279732, 47.620606], [-122.279753, 47.620571], [-122.279725, 47.620525], [-122.279737, 47.620498], [-122.279803, 47.620498], [-122.279927, 47.620499], [-122.279972, 47.6205], [-122.279977, 47.620464], [-122.279966, 47.620434], [-122.279885, 47.620435], [-122.279823, 47.620435], [-122.279824, 47.620409], [-122.279822, 47.620369], [-122.27986, 47.620318], [-122.279889, 47.620278], [-122.279914, 47.620225], [-122.279947, 47.620163], [-122.279969, 47.620112], [-122.279998, 47.620052], [-122.280027, 47.619992], [-122.280063, 47.619926], [-122.280077, 47.619893], [-122.280085, 47.619846], [-122.280089, 47.619801], [-122.280095, 47.619759], [-122.280101, 47.619712], [-122.28011, 47.619626], [-122.280125, 47.619588], [-122.280145, 47.619555], [-122.280154, 47.619527], [-122.280163, 47.619485], [-122.280164, 47.619436], [-122.280156, 47.619394], [-122.280159, 47.619346], [-122.280184, 47.619298], [-122.280236, 47.619255], [-122.280256, 47.619213], [-122.280246, 47.619182], [-122.280228, 47.619151], [-122.280211, 47.619122], [-122.280182, 47.619092], [-122.280143, 47.619056], [-122.280123, 47.619016], [-122.280135, 47.618954], [-122.280166, 47.618925], [-122.280179, 47.618892], [-122.280252, 47.618869], [-122.280253, 47.618822], [-122.280254, 47.618775], [-122.280245, 47.618724], [-122.280273, 47.618701], [-122.28033, 47.618686], [-122.280342, 47.618648], [-122.280357, 47.618593], [-122.280371, 47.618536], [-122.280384, 47.618474], [-122.280381, 47.618435], [-122.280361, 47.618408], [-122.28031, 47.618379], [-122.280266, 47.618355], [-122.28021, 47.618318], [-122.280207, 47.618291], [-122.280207, 47.618264], [-122.280211, 47.618234], [-122.280212, 47.618192], [-122.280205, 47.61816], [-122.280184, 47.61812], [-122.280181, 47.618088], [-122.280177, 47.618044], [-122.280171, 47.618001], [-122.280165, 47.617966], [-122.280153, 47.617923], [-122.280142, 47.617899], [-122.280137, 47.617856], [-122.280131, 47.617802], [-122.280124, 47.617752], [-122.280123, 47.617686], [-122.28112, 47.617678], [-122.282645, 47.617613], [-122.283836, 47.617607], [-122.284576, 47.617624], [-122.284587, 47.617655], [-122.284599, 47.617685], [-122.284612, 47.617716], [-122.284626, 47.617745], [-122.284642, 47.617775], [-122.284659, 47.617804], [-122.284676, 47.617833], [-122.284696, 47.617862], [-122.284716, 47.61789], [-122.284737, 47.617918], [-122.28476, 47.617946], [-122.284784, 47.617973], [-122.284809, 47.617999], [-122.284835, 47.618025], [-122.284863, 47.61805], [-122.284892, 47.618075], [-122.284922, 47.618099], [-122.284954, 47.618122], [-122.284987, 47.618144], [-122.285021, 47.618165], [-122.285057, 47.618185], [-122.285093, 47.618205], [-122.285131, 47.618223], [-122.28517, 47.61824], [-122.28521, 47.618257], [-122.28525, 47.618272], [-122.285292, 47.618286], [-122.285334, 47.618299], [-122.285377, 47.618311], [-122.28542, 47.618322], [-122.285465, 47.618332], [-122.28551, 47.61834], [-122.285555, 47.618347], [-122.2856, 47.618354], [-122.285646, 47.618358], [-122.285693, 47.618362], [-122.286215, 47.618364], [-122.287527, 47.618357], [-122.288531, 47.618353], [-122.288731, 47.618314], [-122.289564, 47.618385], [-122.291264, 47.618372], [-122.291278, 47.618879], [-122.293114, 47.618899], [-122.296117, 47.618903], [-122.296087, 47.62081], [-122.296093, 47.621341], [-122.296123, 47.622601], [-122.296425, 47.623319], [-122.296169, 47.623491], [-122.294788, 47.624439], [-122.293781, 47.625116], [-122.292895, 47.625713], [-122.292485, 47.625987], [-122.292436, 47.62602], [-122.292189, 47.626186], [-122.288775, 47.628498], [-122.287557, 47.629336], [-122.285421, 47.630788], [-122.285132, 47.630987], [-122.282611, 47.630953], [-122.281333, 47.630957], [-122.281348, 47.629743], [-122.279958, 47.629728], [-122.279974, 47.628618], [-122.279977, 47.628529], [-122.278973, 47.628529]]]]
    },
    "properties": {
      "neighbourhood": "Harrison/Denny-Blaine",
      "neighbourhood_group": "Central Area"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.30254, 47.61917], [-122.30257, 47.617777], [-122.302617, 47.616586], [-122.302653, 47.615058], [-122.30269, 47.61353], [-122.302733, 47.611999], [-122.302751, 47.610475], [-122.302765, 47.608981], [-122.302766, 47.6075], [-122.302791, 47.605989], [-122.302813, 47.60527], [-122.302813, 47.605246], [-122.302811, 47.605221], [-122.302806, 47.605196], [-122.302799, 47.605172], [-122.302789, 47.605148], [-122.302777, 47.605124], [-122.302763, 47.605102], [-122.302747, 47.605079], [-122.302719, 47.605061], [-122.30269, 47.605046], [-122.302663, 47.605029], [-122.302636, 47.605012], [-122.302611, 47.604993], [-122.302588, 47.604974], [-122.302567, 47.604954], [-122.302546, 47.604933], [-122.302528, 47.604912], [-122.302512, 47.60489], [-122.302497, 47.604867], [-122.302485, 47.604843], [-122.302474, 47.60482], [-122.302464, 47.604796], [-122.302458, 47.604771], [-122.30246, 47.604499], [-122.30247, 47.604408], [-122.302431, 47.604333], [-122.302432, 47.603743], [-122.302436, 47.602584], [-122.302441, 47.601962], [-122.302434, 47.601862], [-122.302437, 47.601822], [-122.302432, 47.601798], [-122.302427, 47.601774], [-122.302405, 47.601723], [-122.302375, 47.601688], [-122.304014, 47.60167], [-122.308368, 47.601666], [-122.312306, 47.601686], [-122.316773, 47.601716], [-122.316785, 47.603143], [-122.316784, 47.604625], [-122.316783, 47.606117], [-122.316783, 47.606217], [-122.316783, 47.606375], [-122.316778, 47.607711], [-122.316784, 47.608948], [-122.316775, 47.610137], [-122.316783, 47.610664], [-122.316779, 47.611807], [-122.316749, 47.612764], [-122.316752, 47.612896], [-122.316659, 47.612919], [-122.316141, 47.613103], [-122.315113, 47.613523], [-122.314419, 47.613811], [-122.313369, 47.614251], [-122.312763, 47.614498], [-122.312527, 47.614594], [-122.311439, 47.615054], [-122.311007, 47.615234], [-122.310186, 47.615572], [-122.309843, 47.615713], [-122.309258, 47.615962], [-122.307538, 47.616675], [-122.307007, 47.616897], [-122.306132, 47.617262], [-122.304747, 47.617824], [-122.304148, 47.618067], [-122.30254, 47.61917]]]]
    },
    "properties": {
      "neighbourhood": "Minor",
      "neighbourhood_group": "Central Area"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.296272, 47.607994], [-122.291548, 47.607955], [-122.290437, 47.60796], [-122.286137, 47.607907], [-122.286107, 47.609211], [-122.285436, 47.609174], [-122.284713, 47.609175], [-122.284701, 47.60874], [-122.284707, 47.608709], [-122.284712, 47.608678], [-122.284716, 47.608646], [-122.28472, 47.608615], [-122.284723, 47.608584], [-122.284724, 47.608552], [-122.284726, 47.608521], [-122.284726, 47.608489], [-122.284725, 47.608458], [-122.284723, 47.608427], [-122.284721, 47.608395], [-122.284718, 47.608364], [-122.284713, 47.608332], [-122.284708, 47.608301], [-122.284703, 47.60827], [-122.284696, 47.608239], [-122.284688, 47.608208], [-122.28468, 47.608177], [-122.284671, 47.608146], [-122.284661, 47.608115], [-122.28465, 47.608085], [-122.284639, 47.608055], [-122.284626, 47.608024], [-122.284613, 47.607994], [-122.284599, 47.607964], [-122.284584, 47.607934], [-122.284568, 47.607905], [-122.284552, 47.607875], [-122.284534, 47.607846], [-122.284516, 47.607817], [-122.284497, 47.607789], [-122.284477, 47.60776], [-122.284457, 47.607732], [-122.284436, 47.607704], [-122.284414, 47.607676], [-122.284391, 47.607649], [-122.284368, 47.607622], [-122.284343, 47.607595], [-122.284318, 47.607568], [-122.284292, 47.607542], [-122.284266, 47.607516], [-122.284239, 47.607491], [-122.284211, 47.607466], [-122.284182, 47.607441], [-122.284152, 47.607417], [-122.284122, 47.607393], [-122.284091, 47.60737], [-122.284059, 47.607347], [-122.284027, 47.607324], [-122.283104, 47.606517], [-122.283113, 47.606442], [-122.283109, 47.60641], [-122.283107, 47.606383], [-122.283121, 47.606275], [-122.283128, 47.606179], [-122.283126, 47.606128], [-122.283123, 47.606081], [-122.283118, 47.606049], [-122.283114, 47.60602], [-122.283091, 47.605944], [-122.283068, 47.605872], [-122.283047, 47.605818], [-122.28305, 47.60579], [-122.283136, 47.60576], [-122.283133, 47.605725], [-122.28312, 47.605638], [-122.283116, 47.605571], [-122.283114, 47.605543], [-122.283047, 47.605537], [-122.283047, 47.605501], [-122.283045, 47.60545], [-122.283058, 47.605406], [-122.283103, 47.605405], [-122.283141, 47.605398], [-122.283149, 47.60535], [-122.283144, 47.60532], [-122.283084, 47.605304], [-122.283089, 47.605278], [-122.283117, 47.605224], [-122.283142, 47.605161], [-122.283153, 47.605116], [-122.28316, 47.605084], [-122.283177, 47.60497], [-122.283181, 47.604889], [-122.283175, 47.604773], [-122.283171, 47.604691], [-122.283166, 47.60464], [-122.283157, 47.60453], [-122.283163, 47.604477], [-122.283177, 47.604451], [-122.283226, 47.604378], [-122.283243, 47.604355], [-122.283298, 47.604278], [-122.283361, 47.604197], [-122.283421, 47.604116], [-122.283484, 47.604022], [-122.28353, 47.603963], [-122.283574, 47.6039], [-122.283673, 47.603783], [-122.283712, 47.603739], [-122.283743, 47.603702], [-122.283808, 47.603616], [-122.283831, 47.60358], [-122.283858, 47.603543], [-122.283873, 47.603519], [-122.283905, 47.603472], [-122.283945, 47.603393], [-122.283953, 47.603357], [-122.283957, 47.603298], [-122.283965, 47.603275], [-122.283992, 47.603227], [-122.284019, 47.603199], [-122.284042, 47.60318], [-122.284057, 47.603154], [-122.284064, 47.603114], [-122.284063, 47.603062], [-122.284017, 47.60304], [-122.28393, 47.60304], [-122.283919, 47.60293], [-122.283928, 47.602862], [-122.283972, 47.602842], [-122.284044, 47.60273], [-122.284067, 47.602688], [-122.284124, 47.602607], [-122.284154, 47.60256], [-122.284186, 47.602492], [-122.284219, 47.60243], [-122.284248, 47.602376], [-122.284319, 47.602236], [-122.284362, 47.602171], [-122.284393, 47.602115], [-122.284421, 47.602064], [-122.284343, 47.602058], [-122.284217, 47.602057], [-122.284093, 47.602057], [-122.283969, 47.602036], [-122.283967, 47.602008], [-122.283963, 47.601979], [-122.283956, 47.601915], [-122.283975, 47.601798], [-122.284129, 47.601789], [-122.284176, 47.601808], [-122.284212, 47.601867], [-122.284347, 47.601863], [-122.284567, 47.601857], [-122.284569, 47.601811], [-122.284572, 47.601761], [-122.284572, 47.601728], [-122.284504, 47.601738], [-122.2845, 47.601665], [-122.284502, 47.601609], [-122.284505, 47.601491], [-122.284501, 47.601405], [-122.284539, 47.601409], [-122.284629, 47.601407], [-122.284693, 47.601403], [-122.284757, 47.601401], [-122.284797, 47.601426], [-122.284846, 47.601418], [-122.284931, 47.601407], [-122.284972, 47.601354], [-122.284987, 47.601318], [-122.28503, 47.601197], [-122.285045, 47.601143], [-122.285065, 47.601085], [-122.285092, 47.600999], [-122.285105, 47.600967], [-122.285113, 47.600935], [-122.285154, 47.600842], [-122.285164, 47.600768], [-122.285153, 47.60071], [-122.28515, 47.600686], [-122.285151, 47.600652], [-122.285167, 47.600568], [-122.285231, 47.600451], [-122.285259, 47.600397], [-122.285272, 47.600374], [-122.285286, 47.600342], [-122.2853, 47.600266], [-122.285307, 47.60021], [-122.285308, 47.600148], [-122.285278, 47.600111], [-122.285227, 47.600106], [-122.285109, 47.600094], [-122.285116, 47.600055], [-122.285129, 47.60001], [-122.28515, 47.599954], [-122.285193, 47.599957], [-122.285249, 47.59996], [-122.285294, 47.599955], [-122.285324, 47.599939], [-122.285363, 47.5999], [-122.285375, 47.599854], [-122.285414, 47.599715], [-122.28551, 47.599722], [-122.285516, 47.599658], [-122.285482, 47.599652], [-122.285439, 47.599648], [-122.285445, 47.599622], [-122.285475, 47.599557], [-122.285523, 47.599539], [-122.285537, 47.599512], [-122.28561, 47.59936], [-122.285627, 47.599337], [-122.285668, 47.599291], [-122.285711, 47.59929], [-122.28574, 47.599254], [-122.285768, 47.59923], [-122.285799, 47.59919], [-122.285823, 47.599168], [-122.285843, 47.599142], [-122.285869, 47.599101], [-122.285926, 47.599027], [-122.285944, 47.598998], [-122.285953, 47.598964], [-122.285972, 47.598905], [-122.285993, 47.598787], [-122.286018, 47.598638], [-122.285956, 47.598635], [-122.285846, 47.598633], [-122.28571, 47.598636], [-122.285624, 47.598635], [-122.285627, 47.598609], [-122.28565, 47.598494], [-122.285743, 47.598494], [-122.285928, 47.598498], [-122.286089, 47.598496], [-122.286262, 47.5985], [-122.28626, 47.598475], [-122.286243, 47.598453], [-122.28627, 47.598296], [-122.286273, 47.598261], [-122.286272, 47.598235], [-122.286279, 47.598183], [-122.286273, 47.598137], [-122.286283, 47.598069], [-122.28632, 47.597949], [-122.286335, 47.597914], [-122.286353, 47.597883], [-122.286363, 47.597849], [-122.286345, 47.597809], [-122.286311, 47.597785], [-122.286308, 47.597719], [-122.28631, 47.597661], [-122.286307, 47.597597], [-122.286213, 47.597588], [-122.286205, 47.597546], [-122.286211, 47.597512], [-122.286205, 47.597487], [-122.286227, 47.597445], [-122.286252, 47.597364], [-122.286204, 47.597362], [-122.286101, 47.597339], [-122.286124, 47.597307], [-122.286158, 47.597289], [-122.286179, 47.597249], [-122.286215, 47.597245], [-122.286275, 47.59724], [-122.286305, 47.597227], [-122.286338, 47.597163], [-122.286362, 47.597111], [-122.286385, 47.597043], [-122.286427, 47.596942], [-122.28644, 47.596876], [-122.2864, 47.596874], [-122.286292, 47.596864], [-122.286327, 47.596773], [-122.28636, 47.5967], [-122.286387, 47.596658], [-122.286488, 47.596654], [-122.286576, 47.596653], [-122.286586, 47.596619], [-122.286591, 47.596594], [-122.286603, 47.596533], [-122.286609, 47.596495], [-122.286621, 47.596381], [-122.286619, 47.596346], [-122.286572, 47.596343], [-122.28653, 47.596341], [-122.286472, 47.596338], [-122.286471, 47.596307], [-122.286503, 47.596255], [-122.286569, 47.59626], [-122.286633, 47.596258], [-122.286609, 47.596219], [-122.286538, 47.596215], [-122.286538, 47.596188], [-122.286546, 47.59611], [-122.286552, 47.596047], [-122.286541, 47.596024], [-122.286485, 47.596018], [-122.286479, 47.595976], [-122.286485, 47.59594], [-122.286495, 47.59589], [-122.286522, 47.595827], [-122.286573, 47.595826], [-122.286612, 47.595825], [-122.286674, 47.595821], [-122.286741, 47.595815], [-122.286763, 47.595794], [-122.286795, 47.595728], [-122.286828, 47.595617], [-122.286834, 47.59559], [-122.28684, 47.595554], [-122.28685, 47.595511], [-122.286865, 47.595419], [-122.286884, 47.59531], [-122.286886, 47.595285], [-122.286907, 47.59516], [-122.286921, 47.595072], [-122.28693, 47.59501], [-122.286936, 47.594958], [-122.286948, 47.594814], [-122.286935, 47.594781], [-122.286932, 47.594755], [-122.286946, 47.594704], [-122.286976, 47.594652], [-122.286992, 47.594618], [-122.287, 47.594592], [-122.287012, 47.594503], [-122.286992, 47.594393], [-122.287001, 47.594336], [-122.287032, 47.594318], [-122.287036, 47.594232], [-122.287038, 47.59417], [-122.287034, 47.59413], [-122.287039, 47.594004], [-122.287054, 47.593947], [-122.287072, 47.593891], [-122.28709, 47.593837], [-122.287112, 47.593772], [-122.28713, 47.593719], [-122.28718, 47.593618], [-122.287209, 47.593576], [-122.287245, 47.593513], [-122.28726, 47.59349], [-122.28728, 47.593453], [-122.28729, 47.593421], [-122.287293, 47.593384], [-122.287289, 47.593342], [-122.287259, 47.593225], [-122.287253, 47.593156], [-122.28725, 47.593094], [-122.287252, 47.593001], [-122.287256, 47.592957], [-122.287255, 47.592906], [-122.287254, 47.592866], [-122.287171, 47.592796], [-122.287147, 47.592775], [-122.287133, 47.592745], [-122.287112, 47.592713], [-122.28708, 47.592669], [-122.287059, 47.592641], [-122.287042, 47.592617], [-122.287028, 47.592588], [-122.287009, 47.592566], [-122.286977, 47.59252], [-122.286958, 47.592482], [-122.286878, 47.5924], [-122.286849, 47.592373], [-122.286829, 47.59235], [-122.286807, 47.592303], [-122.286778, 47.59226], [-122.286748, 47.592216], [-122.286723, 47.592193], [-122.286697, 47.592156], [-122.286669, 47.592097], [-122.286646, 47.592053], [-122.286592, 47.591964], [-122.286579, 47.591933], [-122.286567, 47.591906], [-122.286552, 47.591876], [-122.286542, 47.591849], [-122.28652, 47.591805], [-122.286508, 47.591776], [-122.286503, 47.591748], [-122.286504, 47.591723], [-122.286561, 47.59172], [-122.286574, 47.591696], [-122.286578, 47.591667], [-122.286567, 47.591639], [-122.286541, 47.591595], [-122.286517, 47.591573], [-122.286478, 47.591566], [-122.286348, 47.591547], [-122.286316, 47.591518], [-122.286282, 47.591469], [-122.286264, 47.591448], [-122.286231, 47.591405], [-122.286198, 47.591347], [-122.286211, 47.591317], [-122.286243, 47.591305], [-122.286272, 47.591281], [-122.286284, 47.591253], [-122.286325, 47.591172], [-122.286329, 47.591143], [-122.28632, 47.591119], [-122.286998, 47.5911], [-122.287939, 47.591128], [-122.288713, 47.591136], [-122.29043, 47.591143], [-122.29121, 47.591202], [-122.291719, 47.591213], [-122.293257, 47.591239], [-122.295532, 47.591274], [-122.297352, 47.591285], [-122.297471, 47.591278], [-122.297497, 47.591444], [-122.297679, 47.592184], [-122.297807, 47.592961], [-122.297855, 47.593703], [-122.297857, 47.594735], [-122.29754, 47.595844], [-122.297446, 47.59724], [-122.297432, 47.599576], [-122.296812, 47.601359], [-122.296814, 47.601678], [-122.296748, 47.602619], [-122.296676, 47.603517], [-122.296775, 47.604275], [-122.296774, 47.606112], [-122.29678, 47.606647], [-122.296622, 47.606957], [-122.296606, 47.606981], [-122.296588, 47.60701], [-122.296571, 47.607039], [-122.296553, 47.607068], [-122.296536, 47.607097], [-122.29652, 47.607127], [-122.296504, 47.607156], [-122.296489, 47.607186], [-122.296475, 47.607216], [-122.29646, 47.607246], [-122.296447, 47.607276], [-122.296433, 47.607306], [-122.29642, 47.607336], [-122.296408, 47.607367], [-122.296397, 47.607397], [-122.296385, 47.607427], [-122.296375, 47.607458], [-122.296364, 47.607489], [-122.296355, 47.607519], [-122.296345, 47.60755], [-122.296337, 47.607581], [-122.296329, 47.607612], [-122.296321, 47.607643], [-122.296314, 47.607674], [-122.296307, 47.607705], [-122.296301, 47.607736], [-122.296296, 47.607768], [-122.29629, 47.607799], [-122.296286, 47.60783], [-122.296282, 47.607861], [-122.296278, 47.607893], [-122.296275, 47.607924], [-122.296272, 47.607994]]]]
    },
    "properties": {
      "neighbourhood": "Leschi",
      "neighbourhood_group": "Central Area"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.316773, 47.601716], [-122.312306, 47.601686], [-122.308368, 47.601666], [-122.304014, 47.60167], [-122.302375, 47.601688], [-122.300259, 47.601665], [-122.296814, 47.601678], [-122.296812, 47.601359], [-122.297432, 47.599576], [-122.297446, 47.59724], [-122.29754, 47.595844], [-122.297857, 47.594735], [-122.297855, 47.593703], [-122.297807, 47.592961], [-122.297679, 47.592184], [-122.297497, 47.591444], [-122.297471, 47.591278], [-122.297441, 47.591083], [-122.297399, 47.590811], [-122.297489, 47.590212], [-122.297655, 47.58945], [-122.298029, 47.588449], [-122.298118, 47.586872], [-122.298132, 47.583871], [-122.298144, 47.583524], [-122.298145, 47.5835], [-122.298146, 47.583475], [-122.298146, 47.583451], [-122.298146, 47.583426], [-122.298146, 47.583402], [-122.298145, 47.583377], [-122.298145, 47.583353], [-122.298143, 47.583328], [-122.298142, 47.583304], [-122.29814, 47.58328], [-122.298138, 47.583255], [-122.298136, 47.583231], [-122.298133, 47.583206], [-122.29813, 47.583182], [-122.298126, 47.583158], [-122.298123, 47.583133], [-122.298119, 47.583109], [-122.298115, 47.583085], [-122.29811, 47.583061], [-122.298105, 47.583036], [-122.2981, 47.583012], [-122.298095, 47.582988], [-122.298089, 47.582964], [-122.298083, 47.58294], [-122.298077, 47.582916], [-122.29807, 47.582892], [-122.298063, 47.582868], [-122.298056, 47.582844], [-122.298048, 47.58282], [-122.298041, 47.582796], [-122.298033, 47.582772], [-122.298024, 47.582748], [-122.298016, 47.582725], [-122.298007, 47.582701], [-122.297997, 47.582677], [-122.297988, 47.582654], [-122.297978, 47.58263], [-122.297968, 47.582607], [-122.297957, 47.582583], [-122.297947, 47.58256], [-122.297936, 47.582537], [-122.297633, 47.582141], [-122.297164, 47.581499], [-122.296818, 47.581025], [-122.296406, 47.58042], [-122.296394, 47.580397], [-122.296383, 47.580373], [-122.296373, 47.58035], [-122.296362, 47.580327], [-122.296352, 47.580303], [-122.296342, 47.58028], [-122.296333, 47.580256], [-122.296323, 47.580232], [-122.296314, 47.580209], [-122.296305, 47.580185], [-122.296296, 47.580161], [-122.296288, 47.580138], [-122.29628, 47.580114], [-122.296273, 47.58009], [-122.296265, 47.580066], [-122.296258, 47.580042], [-122.296251, 47.580018], [-122.296244, 47.579994], [-122.296238, 47.57997], [-122.296232, 47.579946], [-122.296226, 47.579922], [-122.29622, 47.579898], [-122.296215, 47.579873], [-122.29621, 47.579849], [-122.296205, 47.579825], [-122.296201, 47.579801], [-122.296196, 47.579776], [-122.296193, 47.579752], [-122.296189, 47.579728], [-122.296186, 47.579703], [-122.296183, 47.579679], [-122.29618, 47.579655], [-122.296177, 47.57963], [-122.296175, 47.579606], [-122.296173, 47.579582], [-122.296171, 47.579557], [-122.29617, 47.579533], [-122.296169, 47.579508], [-122.296168, 47.579484], [-122.296167, 47.579459], [-122.296198, 47.57751], [-122.296199, 47.577473], [-122.296201, 47.577442], [-122.296203, 47.57741], [-122.296206, 47.577379], [-122.29621, 47.577348], [-122.296214, 47.577316], [-122.296218, 47.577285], [-122.296223, 47.577254], [-122.296229, 47.577223], [-122.296235, 47.577191], [-122.296242, 47.57716], [-122.296249, 47.577129], [-122.296256, 47.577098], [-122.296265, 47.577067], [-122.296274, 47.577036], [-122.296283, 47.577006], [-122.296293, 47.576975], [-122.296303, 47.576944], [-122.296314, 47.576914], [-122.296325, 47.576883], [-122.296337, 47.576853], [-122.296349, 47.576822], [-122.296361, 47.576792], [-122.296375, 47.576762], [-122.296389, 47.576732], [-122.296403, 47.576702], [-122.296418, 47.576672], [-122.296433, 47.576643], [-122.296449, 47.576613], [-122.296465, 47.576584], [-122.296482, 47.576554], [-122.296499, 47.576525], [-122.296517, 47.576496], [-122.296535, 47.576467], [-122.296554, 47.576439], [-122.296573, 47.57641], [-122.296589, 47.576387], [-122.296607, 47.576334], [-122.296762, 47.576535], [-122.297032, 47.576885], [-122.297384, 47.577344], [-122.297649, 47.577695], [-122.297948, 47.578084], [-122.298155, 47.578349], [-122.298516, 47.578829], [-122.298868, 47.579294], [-122.299397, 47.579989], [-122.299843, 47.580572], [-122.300278, 47.58114], [-122.300531, 47.581476], [-122.300836, 47.58187], [-122.301139, 47.582266], [-122.301558, 47.582819], [-122.301646, 47.582935], [-122.301687, 47.582989], [-122.301783, 47.583114], [-122.302059, 47.583476], [-122.302502, 47.584034], [-122.302939, 47.584584], [-122.303024, 47.584696], [-122.303293, 47.58507], [-122.303557, 47.585431], [-122.303842, 47.585818], [-122.304091, 47.586128], [-122.30441, 47.586553], [-122.304618, 47.586824], [-122.305088, 47.587504], [-122.305248, 47.587741], [-122.305434, 47.587953], [-122.305724, 47.588286], [-122.306243, 47.588957], [-122.306579, 47.589393], [-122.306812, 47.589697], [-122.307239, 47.590269], [-122.307796, 47.59098], [-122.30824, 47.591573], [-122.30867, 47.59213], [-122.309069, 47.592653], [-122.309311, 47.592968], [-122.309824, 47.593643], [-122.310279, 47.594245], [-122.310768, 47.594882], [-122.311253, 47.595519], [-122.311368, 47.595671], [-122.311529, 47.595877], [-122.311572, 47.595931], [-122.311901, 47.596369], [-122.312137, 47.596677], [-122.312383, 47.596993], [-122.312838, 47.597596], [-122.312872, 47.597639], [-122.313732, 47.598769], [-122.313749, 47.598792], [-122.313766, 47.598817], [-122.313783, 47.598842], [-122.3138, 47.598867], [-122.313819, 47.598891], [-122.313838, 47.598915], [-122.313857, 47.598939], [-122.313877, 47.598963], [-122.313898, 47.598987], [-122.31392, 47.59901], [-122.313942, 47.599033], [-122.313964, 47.599056], [-122.313987, 47.599078], [-122.31401, 47.599101], [-122.314035, 47.599123], [-122.314059, 47.599145], [-122.314085, 47.599166], [-122.314111, 47.599187], [-122.314137, 47.599208], [-122.314576, 47.599206], [-122.315337, 47.599201], [-122.316659, 47.599188], [-122.317185, 47.599191], [-122.317227, 47.599191], [-122.317187, 47.600272], [-122.317176, 47.600299], [-122.317166, 47.600324], [-122.317156, 47.600349], [-122.317146, 47.600375], [-122.317136, 47.6004], [-122.317126, 47.600425], [-122.317117, 47.600451], [-122.317107, 47.600476], [-122.317097, 47.600502], [-122.317088, 47.600527], [-122.317079, 47.600552], [-122.31707, 47.600578], [-122.317061, 47.600603], [-122.317052, 47.600629], [-122.317043, 47.600654], [-122.317035, 47.60068], [-122.317026, 47.600706], [-122.317017, 47.600731], [-122.317009, 47.600757], [-122.317, 47.600782], [-122.316992, 47.600808], [-122.316984, 47.600833], [-122.316976, 47.600859], [-122.316968, 47.600885], [-122.31696, 47.60091], [-122.316953, 47.600936], [-122.316945, 47.600962], [-122.316937, 47.600987], [-122.31693, 47.601013], [-122.316923, 47.601039], [-122.316915, 47.601065], [-122.316908, 47.60109], [-122.316901, 47.601116], [-122.316894, 47.601142], [-122.316887, 47.601168], [-122.31688, 47.601194], [-122.316874, 47.601219], [-122.316868, 47.601245], [-122.316861, 47.601271], [-122.316855, 47.601297], [-122.316849, 47.601323], [-122.316842, 47.601349], [-122.316836, 47.601375], [-122.316831, 47.6014], [-122.316825, 47.601426], [-122.316819, 47.601452], [-122.316814, 47.601478], [-122.316808, 47.601504], [-122.316802, 47.60153], [-122.316797, 47.601556], [-122.316792, 47.601582], [-122.316787, 47.601608], [-122.316782, 47.601634], [-122.316777, 47.60166], [-122.316772, 47.601686], [-122.316773, 47.601716]]]]
    },
    "properties": {
      "neighbourhood": "Atlantic",
      "neighbourhood_group": "Central Area"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.346487, 47.609939], [-122.345122, 47.610946], [-122.343398, 47.612239], [-122.343039, 47.612522], [-122.341351, 47.611502], [-122.34047, 47.610966], [-122.340409, 47.610929], [-122.34, 47.610487], [-122.339135, 47.609516], [-122.338483, 47.60881], [-122.338246, 47.608561], [-122.337995, 47.608293], [-122.339111, 47.607841], [-122.339537, 47.607661], [-122.34045, 47.607275], [-122.3411, 47.607007], [-122.341599, 47.606802], [-122.341658, 47.606838], [-122.341741, 47.606866], [-122.341828, 47.606881], [-122.341893, 47.606879], [-122.341967, 47.606866], [-122.342029, 47.606851], [-122.342065, 47.60684], [-122.342091, 47.606869], [-122.34212, 47.606896], [-122.342164, 47.606879], [-122.342196, 47.606912], [-122.342219, 47.606938], [-122.342268, 47.606921], [-122.342306, 47.606961], [-122.342383, 47.607044], [-122.34241, 47.60707], [-122.342445, 47.607057], [-122.34249, 47.607085], [-122.342516, 47.607109], [-122.342554, 47.607093], [-122.342583, 47.607116], [-122.342626, 47.607169], [-122.342675, 47.607152], [-122.342783, 47.607109], [-122.34283, 47.607094], [-122.342854, 47.60712], [-122.342938, 47.607208], [-122.342984, 47.607261], [-122.343032, 47.607263], [-122.343124, 47.607262], [-122.343291, 47.60726], [-122.343453, 47.607259], [-122.343633, 47.607263], [-122.343749, 47.607263], [-122.343822, 47.607263], [-122.343882, 47.607288], [-122.343986, 47.607354], [-122.344122, 47.607433], [-122.344206, 47.607483], [-122.344239, 47.607515], [-122.344223, 47.607544], [-122.344177, 47.607548], [-122.343936, 47.607551], [-122.343685, 47.607551], [-122.343575, 47.60755], [-122.34356, 47.60759], [-122.343559, 47.607665], [-122.34355, 47.607723], [-122.343495, 47.607751], [-122.343523, 47.607789], [-122.343556, 47.607834], [-122.343559, 47.607897], [-122.343562, 47.607935], [-122.343541, 47.607972], [-122.343507, 47.607991], [-122.343472, 47.608016], [-122.343467, 47.608068], [-122.343466, 47.60812], [-122.343472, 47.608152], [-122.343552, 47.608202], [-122.34362, 47.608248], [-122.343682, 47.608285], [-122.343779, 47.608342], [-122.34382, 47.608368], [-122.343883, 47.608383], [-122.343995, 47.608388], [-122.34406, 47.608386], [-122.344231, 47.608389], [-122.344414, 47.608388], [-122.344589, 47.608387], [-122.344712, 47.608387], [-122.344833, 47.608388], [-122.344928, 47.608386], [-122.34511, 47.608386], [-122.345257, 47.608385], [-122.345334, 47.608386], [-122.345446, 47.608452], [-122.345554, 47.608515], [-122.345638, 47.608567], [-122.345726, 47.608616], [-122.345863, 47.608615], [-122.345922, 47.608616], [-122.345958, 47.608625], [-122.346056, 47.608685], [-122.346177, 47.608759], [-122.346278, 47.608822], [-122.346366, 47.608878], [-122.346414, 47.608908], [-122.346249, 47.608921], [-122.346053, 47.60892], [-122.345961, 47.608921], [-122.345677, 47.608924], [-122.345519, 47.608923], [-122.345337, 47.608922], [-122.345204, 47.608923], [-122.345034, 47.608921], [-122.344901, 47.608921], [-122.3448, 47.608945], [-122.344919, 47.609013], [-122.345031, 47.609079], [-122.345084, 47.609109], [-122.345176, 47.609165], [-122.345253, 47.609211], [-122.345338, 47.60926], [-122.345505, 47.609366], [-122.345689, 47.609471], [-122.345904, 47.609592], [-122.346091, 47.609706], [-122.346271, 47.60981], [-122.346427, 47.609901], [-122.346487, 47.609939]]]]
    },
    "properties": {
      "neighbourhood": "Pike-Market",
      "neighbourhood_group": "Downtown"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.322833, 47.641471], [-122.322843, 47.641434], [-122.322874, 47.64001], [-122.322881, 47.639717], [-122.32291, 47.638448], [-122.322945, 47.636872], [-122.322947, 47.636846], [-122.322949, 47.636819], [-122.322951, 47.636793], [-122.322954, 47.636766], [-122.322956, 47.63674], [-122.322959, 47.636713], [-122.322961, 47.636687], [-122.322964, 47.63666], [-122.322966, 47.636634], [-122.322969, 47.636607], [-122.322972, 47.636581], [-122.322975, 47.636554], [-122.322978, 47.636528], [-122.322981, 47.636501], [-122.322984, 47.636475], [-122.322988, 47.636448], [-122.322991, 47.636422], [-122.322994, 47.636396], [-122.322997, 47.636369], [-122.323001, 47.636343], [-122.323005, 47.636316], [-122.323008, 47.63629], [-122.323012, 47.636263], [-122.323016, 47.636237], [-122.32302, 47.636211], [-122.323024, 47.636184], [-122.323028, 47.636158], [-122.323033, 47.636131], [-122.323037, 47.636105], [-122.323041, 47.636079], [-122.323046, 47.636052], [-122.32305, 47.636026], [-122.323055, 47.635999], [-122.32306, 47.635973], [-122.323064, 47.635947], [-122.323069, 47.63592], [-122.323075, 47.635894], [-122.323079, 47.635868], [-122.323085, 47.635841], [-122.32309, 47.635815], [-122.323095, 47.635789], [-122.3231, 47.635762], [-122.323106, 47.635736], [-122.323111, 47.63571], [-122.323117, 47.635684], [-122.323123, 47.635657], [-122.323128, 47.635631], [-122.323134, 47.635605], [-122.32314, 47.635579], [-122.323146, 47.635552], [-122.323152, 47.635526], [-122.323159, 47.6355], [-122.323165, 47.635474], [-122.323171, 47.635447], [-122.323178, 47.635421], [-122.323184, 47.635395], [-122.323191, 47.635369], [-122.323197, 47.635343], [-122.323204, 47.635317], [-122.323217, 47.635268], [-122.323224, 47.635241], [-122.323291, 47.634994], [-122.323327, 47.63487], [-122.324099, 47.634867], [-122.325219, 47.634865], [-122.326289, 47.634863], [-122.326917, 47.634865], [-122.326922, 47.635559], [-122.327611, 47.635967], [-122.327974, 47.636193], [-122.3283, 47.636392], [-122.328647, 47.636591], [-122.328951, 47.636768], [-122.329407, 47.637021], [-122.329407, 47.63763], [-122.329407, 47.638248], [-122.329491, 47.639344], [-122.32952, 47.639726], [-122.329678, 47.639727], [-122.329705, 47.639761], [-122.329737, 47.639791], [-122.329756, 47.639814], [-122.329776, 47.639844], [-122.329782, 47.639898], [-122.329791, 47.639962], [-122.329794, 47.640088], [-122.329797, 47.640137], [-122.329794, 47.640223], [-122.329792, 47.640283], [-122.329783, 47.640336], [-122.329783, 47.640382], [-122.329785, 47.640416], [-122.329784, 47.640448], [-122.329774, 47.640474], [-122.329731, 47.640505], [-122.329696, 47.640529], [-122.32967, 47.64058], [-122.329663, 47.640639], [-122.329663, 47.640677], [-122.329698, 47.640708], [-122.329699, 47.640769], [-122.329696, 47.64084], [-122.329696, 47.640905], [-122.329693, 47.640953], [-122.329692, 47.640997], [-122.329684, 47.641023], [-122.329655, 47.641068], [-122.329613, 47.641134], [-122.329585, 47.641169], [-122.329577, 47.6412], [-122.329606, 47.641227], [-122.329616, 47.641256], [-122.329624, 47.641302], [-122.329623, 47.641359], [-122.329618, 47.641434], [-122.329617, 47.641485], [-122.329616, 47.641532], [-122.329599, 47.641566], [-122.329589, 47.641598], [-122.329601, 47.641621], [-122.329606, 47.641647], [-122.329573, 47.641684], [-122.32955, 47.641708], [-122.329544, 47.64175], [-122.329548, 47.641798], [-122.329596, 47.641794], [-122.329698, 47.641791], [-122.329748, 47.641795], [-122.329749, 47.64182], [-122.329746, 47.64188], [-122.329737, 47.641925], [-122.329729, 47.64197], [-122.329714, 47.642013], [-122.329676, 47.642021], [-122.329652, 47.642044], [-122.329641, 47.642087], [-122.329651, 47.642134], [-122.329668, 47.642167], [-122.329707, 47.642175], [-122.329747, 47.642186], [-122.329726, 47.642231], [-122.329674, 47.642312], [-122.329606, 47.642417], [-122.329527, 47.642533], [-122.329479, 47.64261], [-122.329429, 47.642686], [-122.329394, 47.642746], [-122.329346, 47.64282], [-122.32929, 47.642902], [-122.329255, 47.642952], [-122.329219, 47.643006], [-122.329183, 47.643061], [-122.329157, 47.643088], [-122.329105, 47.6431], [-122.329033, 47.643116], [-122.328965, 47.643132], [-122.328934, 47.643149], [-122.328928, 47.643191], [-122.328929, 47.643224], [-122.328904, 47.643256], [-122.328844, 47.643296], [-122.328758, 47.643324], [-122.328673, 47.643356], [-122.328602, 47.643386], [-122.32856, 47.643396], [-122.328508, 47.643398], [-122.32846, 47.643392], [-122.328379, 47.643376], [-122.328327, 47.643367], [-122.328249, 47.64336], [-122.328205, 47.643358], [-122.32815, 47.643364], [-122.328088, 47.643381], [-122.328028, 47.643391], [-122.327954, 47.643406], [-122.3279, 47.643427], [-122.327855, 47.643446], [-122.327813, 47.643461], [-122.327761, 47.643491], [-122.327696, 47.643533], [-122.327646, 47.643575], [-122.327602, 47.643629], [-122.327561, 47.643679], [-122.327527, 47.643738], [-122.327497, 47.643796], [-122.32748, 47.643829], [-122.327447, 47.643886], [-122.327403, 47.643953], [-122.327389, 47.643986], [-122.327382, 47.644021], [-122.327376, 47.644068], [-122.327373, 47.644128], [-122.327365, 47.644194], [-122.32737, 47.644269], [-122.327377, 47.644335], [-122.327381, 47.644399], [-122.327398, 47.644465], [-122.327404, 47.644522], [-122.327424, 47.644582], [-122.327476, 47.644586], [-122.327486, 47.644611], [-122.327529, 47.644682], [-122.327572, 47.64476], [-122.327573, 47.64479], [-122.327559, 47.644825], [-122.327576, 47.644846], [-122.327614, 47.644842], [-122.327645, 47.644861], [-122.327661, 47.644894], [-122.327678, 47.644923], [-122.327692, 47.644961], [-122.327729, 47.644969], [-122.327795, 47.644989], [-122.327813, 47.645011], [-122.32781, 47.645036], [-122.327789, 47.645075], [-122.32774, 47.645146], [-122.327699, 47.645209], [-122.327667, 47.645258], [-122.327646, 47.645304], [-122.327603, 47.645363], [-122.327547, 47.645438], [-122.327512, 47.645485], [-122.327472, 47.645518], [-122.327436, 47.645516], [-122.327352, 47.645529], [-122.327335, 47.645558], [-122.327327, 47.645585], [-122.327321, 47.645623], [-122.327321, 47.645659], [-122.327325, 47.645691], [-122.327337, 47.645715], [-122.327374, 47.645734], [-122.327487, 47.645734], [-122.327614, 47.645734], [-122.327765, 47.645733], [-122.327897, 47.645734], [-122.327948, 47.645752], [-122.327903, 47.645822], [-122.327838, 47.645914], [-122.327792, 47.645994], [-122.327739, 47.646078], [-122.327674, 47.646176], [-122.327606, 47.646281], [-122.327562, 47.646354], [-122.327512, 47.646435], [-122.327455, 47.646517], [-122.327401, 47.646598], [-122.327357, 47.646669], [-122.327312, 47.646739], [-122.327265, 47.646807], [-122.32723, 47.64686], [-122.32718, 47.646877], [-122.327136, 47.646862], [-122.327004, 47.646823], [-122.326916, 47.6468], [-122.326802, 47.646767], [-122.326728, 47.646753], [-122.326681, 47.646748], [-122.326635, 47.646734], [-122.326596, 47.646724], [-122.326565, 47.646741], [-122.326531, 47.646775], [-122.326476, 47.646838], [-122.326452, 47.646868], [-122.326414, 47.646907], [-122.326366, 47.646939], [-122.326318, 47.646969], [-122.326273, 47.647005], [-122.326217, 47.647037], [-122.326156, 47.647079], [-122.326117, 47.647131], [-122.326088, 47.647178], [-122.326068, 47.647233], [-122.326086, 47.647256], [-122.326094, 47.647311], [-122.326071, 47.647338], [-122.326035, 47.647379], [-122.326003, 47.647425], [-122.325979, 47.647448], [-122.325957, 47.647472], [-122.325924, 47.647495], [-122.325892, 47.647521], [-122.325856, 47.64755], [-122.325828, 47.647565], [-122.325792, 47.647584], [-122.325761, 47.647608], [-122.325735, 47.647645], [-122.325723, 47.647668], [-122.325681, 47.647711], [-122.325639, 47.647735], [-122.325609, 47.647758], [-122.325508, 47.647786], [-122.32547, 47.647825], [-122.325447, 47.647861], [-122.325423, 47.647902], [-122.325403, 47.647942], [-122.325394, 47.647966], [-122.325383, 47.648011], [-122.325379, 47.648042], [-122.325368, 47.648066], [-122.325309, 47.648136], [-122.325284, 47.648196], [-122.325247, 47.648263], [-122.325226, 47.648293], [-122.325178, 47.648362], [-122.325149, 47.648401], [-122.325127, 47.648429], [-122.325108, 47.648466], [-122.325093, 47.648517], [-122.325122, 47.648539], [-122.325161, 47.648542], [-122.325209, 47.648548], [-122.32521, 47.648578], [-122.325202, 47.648688], [-122.325195, 47.648743], [-122.325196, 47.648775], [-122.325231, 47.648776], [-122.325273, 47.648777], [-122.325345, 47.648782], [-122.325345, 47.648819], [-122.325325, 47.648846], [-122.325177, 47.648846], [-122.325096, 47.648841], [-122.325059, 47.648828], [-122.325012, 47.648843], [-122.32502, 47.64887], [-122.324981, 47.648871], [-122.324945, 47.648881], [-122.32495, 47.648908], [-122.324967, 47.648939], [-122.32499, 47.648967], [-122.324993, 47.648996], [-122.325005, 47.649027], [-122.325054, 47.649026], [-122.325166, 47.649027], [-122.325314, 47.649027], [-122.325401, 47.649028], [-122.325436, 47.64905], [-122.325425, 47.649107], [-122.325325, 47.649107], [-122.325171, 47.649107], [-122.325031, 47.649106], [-122.324996, 47.649119], [-122.324957, 47.649129], [-122.324965, 47.649157], [-122.324989, 47.649216], [-122.325024, 47.649256], [-122.325062, 47.649284], [-122.325101, 47.649306], [-122.32514, 47.649328], [-122.325168, 47.649347], [-122.325214, 47.649357], [-122.325262, 47.649371], [-122.32528, 47.649395], [-122.32528, 47.649427], [-122.325266, 47.649459], [-122.32525, 47.649481], [-122.325209, 47.649534], [-122.325191, 47.649562], [-122.325156, 47.649614], [-122.32513, 47.649659], [-122.325108, 47.649679], [-122.325069, 47.649679], [-122.325004, 47.649648], [-122.324932, 47.649638], [-122.324885, 47.649679], [-122.324835, 47.649681], [-122.324798, 47.649692], [-122.324763, 47.649739], [-122.324728, 47.649805], [-122.324705, 47.649838], [-122.32468, 47.649875], [-122.324649, 47.649923], [-122.324618, 47.64996], [-122.324589, 47.649993], [-122.324556, 47.650026], [-122.324516, 47.650051], [-122.324445, 47.650033], [-122.324389, 47.650012], [-122.324355, 47.650004], [-122.324312, 47.650019], [-122.324303, 47.650048], [-122.324304, 47.6501], [-122.32433, 47.650137], [-122.32435, 47.650183], [-122.324339, 47.65021], [-122.324319, 47.650241], [-122.324291, 47.650281], [-122.324252, 47.650274], [-122.324188, 47.650265], [-122.324169, 47.650289], [-122.324148, 47.65031], [-122.324114, 47.650345], [-122.324081, 47.650363], [-122.324032, 47.650355], [-122.323989, 47.650367], [-122.323963, 47.650411], [-122.323951, 47.650438], [-122.323941, 47.650467], [-122.323929, 47.650499], [-122.323919, 47.650535], [-122.323912, 47.650575], [-122.32391, 47.650624], [-122.323894, 47.650653], [-122.323874, 47.650674], [-122.323841, 47.650701], [-122.323831, 47.650734], [-122.323822, 47.650767], [-122.323902, 47.65077], [-122.32394, 47.65077], [-122.323991, 47.650772], [-122.324109, 47.650787], [-122.324108, 47.650839], [-122.324109, 47.650866], [-122.32409, 47.650887], [-122.324051, 47.650891], [-122.324015, 47.650895], [-122.32394, 47.6509], [-122.323935, 47.650927], [-122.323933, 47.650953], [-122.323911, 47.650982], [-122.32388, 47.651009], [-122.323857, 47.651052], [-122.323755, 47.651052], [-122.323645, 47.651071], [-122.323623, 47.651099], [-122.323614, 47.651147], [-122.323658, 47.651175], [-122.323751, 47.651176], [-122.32395, 47.651177], [-122.324035, 47.651177], [-122.324046, 47.651203], [-122.324045, 47.651256], [-122.324043, 47.651319], [-122.323973, 47.651318], [-122.32382, 47.651317], [-122.323692, 47.651317], [-122.323656, 47.65132], [-122.323605, 47.65134], [-122.32358, 47.651358], [-122.323535, 47.651358], [-122.323477, 47.651358], [-122.323431, 47.651371], [-122.323431, 47.651404], [-122.323408, 47.651448], [-122.323353, 47.65145], [-122.323291, 47.651455], [-122.323232, 47.651456], [-122.323203, 47.651471], [-122.323204, 47.6515], [-122.323202, 47.651545], [-122.323203, 47.651585], [-122.323204, 47.651644], [-122.323204, 47.651692], [-122.323207, 47.651731], [-122.323203, 47.651772], [-122.323202, 47.651826], [-122.323202, 47.651858], [-122.32321, 47.65189], [-122.323204, 47.651916], [-122.323183, 47.651952], [-122.323174, 47.652003], [-122.323161, 47.652036], [-122.323141, 47.652143], [-122.323134, 47.652168], [-122.3231, 47.652198], [-122.323048, 47.652221], [-122.32297, 47.65224], [-122.322905, 47.652262], [-122.322843, 47.652274], [-122.322806, 47.652285], [-122.32274, 47.652301], [-122.322704, 47.652306], [-122.322583, 47.652322], [-122.322526, 47.652325], [-122.32246, 47.652326], [-122.32229, 47.652325], [-122.322238, 47.652325], [-122.32204, 47.652323], [-122.321967, 47.652316], [-122.321935, 47.652294], [-122.321885, 47.652274], [-122.321833, 47.652276], [-122.321781, 47.652289], [-122.321714, 47.652312], [-122.321659, 47.652334], [-122.321623, 47.652344], [-122.321568, 47.65235], [-122.321481, 47.652356], [-122.321346, 47.652356], [-122.321285, 47.652326], [-122.321241, 47.652309], [-122.321132, 47.652271], [-122.321093, 47.65225], [-122.321058, 47.652219], [-122.320975, 47.652168], [-122.320933, 47.652137], [-122.320865, 47.652113], [-122.321069, 47.651846], [-122.321797, 47.650894], [-122.322566, 47.649917], [-122.322575, 47.649255], [-122.322619, 47.647699], [-122.32269, 47.646112], [-122.322747, 47.644521], [-122.322804, 47.642935], [-122.322833, 47.641471]]]]
    },
    "properties": {
      "neighbourhood": "Eastlake",
      "neighbourhood_group": "Cascade"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.329678, 47.639727], [-122.32952, 47.639726], [-122.329491, 47.639344], [-122.329407, 47.638248], [-122.329407, 47.63763], [-122.329407, 47.637021], [-122.328951, 47.636768], [-122.328647, 47.636591], [-122.3283, 47.636392], [-122.327974, 47.636193], [-122.327611, 47.635967], [-122.326922, 47.635559], [-122.326917, 47.634865], [-122.326289, 47.634863], [-122.325219, 47.634865], [-122.324099, 47.634867], [-122.323327, 47.63487], [-122.32336, 47.634761], [-122.323435, 47.634528], [-122.323516, 47.634296], [-122.323603, 47.634065], [-122.323696, 47.633836], [-122.323796, 47.633606], [-122.324213, 47.632584], [-122.324226, 47.632559], [-122.32424, 47.632534], [-122.324254, 47.632509], [-122.324268, 47.632484], [-122.324282, 47.63246], [-122.324297, 47.632435], [-122.324311, 47.63241], [-122.324326, 47.632386], [-122.324341, 47.632361], [-122.324356, 47.632336], [-122.324371, 47.632312], [-122.324387, 47.632288], [-122.324402, 47.632263], [-122.324418, 47.632239], [-122.324433, 47.632214], [-122.324449, 47.63219], [-122.324465, 47.632166], [-122.324482, 47.632142], [-122.324498, 47.632118], [-122.324515, 47.632094], [-122.324531, 47.63207], [-122.324548, 47.632046], [-122.324566, 47.632022], [-122.324583, 47.631998], [-122.3246, 47.631974], [-122.324618, 47.63195], [-122.324635, 47.631927], [-122.324653, 47.631903], [-122.324671, 47.631879], [-122.32469, 47.631856], [-122.324708, 47.631832], [-122.324726, 47.631809], [-122.324745, 47.631786], [-122.324763, 47.631762], [-122.324783, 47.631739], [-122.324802, 47.631716], [-122.324821, 47.631693], [-122.32484, 47.63167], [-122.324859, 47.631646], [-122.324879, 47.631623], [-122.324899, 47.631601], [-122.324919, 47.631578], [-122.324939, 47.631555], [-122.32496, 47.631532], [-122.32498, 47.631509], [-122.325, 47.631487], [-122.325021, 47.631464], [-122.325042, 47.631442], [-122.325063, 47.631419], [-122.325085, 47.631397], [-122.326022, 47.630564], [-122.327242, 47.629477], [-122.327266, 47.629456], [-122.327291, 47.629436], [-122.327315, 47.629415], [-122.32734, 47.629394], [-122.327364, 47.629373], [-122.327388, 47.629352], [-122.327411, 47.629331], [-122.327435, 47.629309], [-122.327464, 47.629282], [-122.327486, 47.629261], [-122.327509, 47.629239], [-122.327532, 47.629218], [-122.327554, 47.629196], [-122.327576, 47.629174], [-122.327598, 47.629152], [-122.32762, 47.62913], [-122.327641, 47.629107], [-122.327662, 47.629085], [-122.327684, 47.629063], [-122.327705, 47.62904], [-122.327725, 47.629017], [-122.327746, 47.628995], [-122.327766, 47.628972], [-122.327786, 47.628949], [-122.327805, 47.628926], [-122.327825, 47.628903], [-122.327844, 47.62888], [-122.327863, 47.628857], [-122.327882, 47.628833], [-122.3279, 47.62881], [-122.327919, 47.628787], [-122.327937, 47.628763], [-122.327955, 47.628739], [-122.327973, 47.628716], [-122.32799, 47.628692], [-122.328007, 47.628668], [-122.328024, 47.628644], [-122.328041, 47.62862], [-122.328058, 47.628596], [-122.328074, 47.628572], [-122.32809, 47.628547], [-122.328106, 47.628523], [-122.328121, 47.628499], [-122.328136, 47.628474], [-122.328152, 47.62845], [-122.328166, 47.628425], [-122.328181, 47.628401], [-122.328195, 47.628376], [-122.328209, 47.628351], [-122.328223, 47.628326], [-122.328237, 47.628301], [-122.32825, 47.628277], [-122.328263, 47.628252], [-122.328275, 47.628227], [-122.328288, 47.628202], [-122.3283, 47.628177], [-122.328312, 47.628151], [-122.328324, 47.628126], [-122.328335, 47.628101], [-122.328347, 47.628075], [-122.328358, 47.62805], [-122.32837, 47.628025], [-122.328381, 47.627999], [-122.328392, 47.627974], [-122.328402, 47.627948], [-122.328412, 47.627922], [-122.328423, 47.627897], [-122.328433, 47.627871], [-122.328443, 47.627845], [-122.328453, 47.62782], [-122.328465, 47.627784], [-122.328475, 47.627758], [-122.328484, 47.627733], [-122.328492, 47.627707], [-122.328501, 47.627681], [-122.32851, 47.627655], [-122.328518, 47.627629], [-122.328526, 47.627603], [-122.328534, 47.627577], [-122.328542, 47.627551], [-122.32855, 47.627525], [-122.328557, 47.627499], [-122.328564, 47.627473], [-122.328571, 47.627447], [-122.328578, 47.62742], [-122.328585, 47.627394], [-122.328591, 47.627368], [-122.328598, 47.627342], [-122.328603, 47.627316], [-122.328609, 47.627289], [-122.328615, 47.627263], [-122.328621, 47.627237], [-122.328626, 47.627211], [-122.328631, 47.627184], [-122.328636, 47.627158], [-122.328641, 47.627132], [-122.328645, 47.627105], [-122.32865, 47.627079], [-122.328654, 47.627052], [-122.328658, 47.627026], [-122.328662, 47.627], [-122.328665, 47.626973], [-122.328669, 47.626945], [-122.328678, 47.625458], [-122.328668, 47.623853], [-122.328667, 47.622282], [-122.328637, 47.620731], [-122.328644, 47.619176], [-122.328645, 47.619149], [-122.328647, 47.619122], [-122.328648, 47.619096], [-122.32865, 47.619069], [-122.328651, 47.619043], [-122.328654, 47.619016], [-122.328656, 47.61899], [-122.328657, 47.618963], [-122.32866, 47.618937], [-122.328661, 47.61891], [-122.328664, 47.618884], [-122.328666, 47.618857], [-122.328668, 47.618831], [-122.32867, 47.618804], [-122.328673, 47.618778], [-122.328676, 47.618751], [-122.328678, 47.618725], [-122.328681, 47.618698], [-122.328683, 47.618672], [-122.328686, 47.618645], [-122.328688, 47.618619], [-122.328691, 47.618592], [-122.328694, 47.618566], [-122.328697, 47.618539], [-122.3287, 47.618513], [-122.328705, 47.618465], [-122.329341, 47.618466], [-122.332439, 47.618523], [-122.333723, 47.618539], [-122.336706, 47.618521], [-122.340124, 47.618541], [-122.341535, 47.618544], [-122.342019, 47.618551], [-122.342566, 47.618545], [-122.343884, 47.618554], [-122.345426, 47.61856], [-122.346933, 47.61857], [-122.348404, 47.618571], [-122.349877, 47.618578], [-122.350357, 47.61858], [-122.349805, 47.619011], [-122.349103, 47.619557], [-122.347928, 47.620464], [-122.347634, 47.620679], [-122.34626, 47.621778], [-122.344432, 47.623143], [-122.343642, 47.623779], [-122.343663, 47.625145], [-122.343562, 47.62714], [-122.342717, 47.627135], [-122.34148, 47.62713], [-122.339917, 47.627124], [-122.339617, 47.627182], [-122.338825, 47.62742], [-122.338782, 47.627396], [-122.338791, 47.627352], [-122.338821, 47.627298], [-122.338843, 47.627248], [-122.338833, 47.627216], [-122.338782, 47.627146], [-122.338756, 47.627115], [-122.338737, 47.627066], [-122.338748, 47.627009], [-122.338769, 47.626981], [-122.338807, 47.626963], [-122.338862, 47.626958], [-122.338902, 47.626947], [-122.338926, 47.626923], [-122.338935, 47.626887], [-122.338917, 47.626844], [-122.338851, 47.626747], [-122.338788, 47.626658], [-122.338751, 47.626599], [-122.338706, 47.626547], [-122.338637, 47.626471], [-122.338586, 47.626395], [-122.338552, 47.626344], [-122.338481, 47.626282], [-122.338409, 47.62623], [-122.338333, 47.626197], [-122.338228, 47.626176], [-122.338147, 47.62617], [-122.338098, 47.626218], [-122.338061, 47.626301], [-122.338046, 47.626353], [-122.338038, 47.626454], [-122.338033, 47.626581], [-122.338033, 47.626631], [-122.338034, 47.626685], [-122.338026, 47.626751], [-122.338025, 47.62679], [-122.338043, 47.626818], [-122.338075, 47.626835], [-122.338109, 47.626846], [-122.338096, 47.6269], [-122.338008, 47.626922], [-122.338, 47.626965], [-122.337999, 47.627064], [-122.338004, 47.627168], [-122.338001, 47.62721], [-122.338037, 47.627212], [-122.33808, 47.627212], [-122.338084, 47.627245], [-122.338082, 47.627348], [-122.338075, 47.62754], [-122.33808, 47.62768], [-122.338081, 47.627815], [-122.338079, 47.6279], [-122.338005, 47.627899], [-122.337826, 47.627898], [-122.337635, 47.627898], [-122.337463, 47.627898], [-122.337275, 47.627898], [-122.337133, 47.627918], [-122.33713, 47.627951], [-122.337134, 47.628014], [-122.337132, 47.628055], [-122.337095, 47.628057], [-122.336942, 47.628056], [-122.336772, 47.628055], [-122.33661, 47.628053], [-122.336453, 47.628054], [-122.336299, 47.628052], [-122.336151, 47.62804], [-122.33615, 47.628002], [-122.336151, 47.627947], [-122.336154, 47.627824], [-122.336152, 47.627721], [-122.336156, 47.62763], [-122.336155, 47.627532], [-122.336156, 47.627419], [-122.336155, 47.627278], [-122.336198, 47.627275], [-122.336244, 47.62727], [-122.336304, 47.627244], [-122.336305, 47.62722], [-122.336288, 47.627183], [-122.336253, 47.62716], [-122.336255, 47.627132], [-122.336268, 47.627054], [-122.33627, 47.626979], [-122.336289, 47.626937], [-122.336302, 47.626906], [-122.336304, 47.626865], [-122.336296, 47.62684], [-122.336242, 47.626777], [-122.336159, 47.626692], [-122.336128, 47.626673], [-122.336126, 47.626596], [-122.336113, 47.626518], [-122.336034, 47.626518], [-122.335981, 47.626517], [-122.335859, 47.626538], [-122.335768, 47.626558], [-122.335723, 47.626559], [-122.335673, 47.626559], [-122.33562, 47.626573], [-122.33554, 47.626607], [-122.335498, 47.626632], [-122.335481, 47.626657], [-122.335453, 47.626685], [-122.335411, 47.626711], [-122.335353, 47.626733], [-122.33531, 47.626744], [-122.335262, 47.626759], [-122.335218, 47.626773], [-122.335178, 47.626795], [-122.335127, 47.626825], [-122.335055, 47.626875], [-122.335013, 47.6269], [-122.334973, 47.626917], [-122.334936, 47.626926], [-122.334865, 47.626934], [-122.334682, 47.626938], [-122.334582, 47.626944], [-122.334531, 47.626947], [-122.334431, 47.626979], [-122.334372, 47.627028], [-122.334336, 47.627067], [-122.334282, 47.627121], [-122.334249, 47.627169], [-122.334212, 47.627218], [-122.334193, 47.627244], [-122.334177, 47.62727], [-122.334179, 47.627574], [-122.334192, 47.628335], [-122.334136, 47.628335], [-122.333886, 47.628507], [-122.333831, 47.628509], [-122.333784, 47.628537], [-122.333648, 47.62854], [-122.333597, 47.628511], [-122.333572, 47.628406], [-122.333493, 47.628406], [-122.333447, 47.628377], [-122.333446, 47.628138], [-122.33339, 47.628102], [-122.33293, 47.628099], [-122.332918, 47.627848], [-122.332744, 47.627831], [-122.332685, 47.627834], [-122.332643, 47.627847], [-122.332602, 47.627867], [-122.332525, 47.627906], [-122.332465, 47.627941], [-122.332417, 47.627971], [-122.33238, 47.627993], [-122.332338, 47.628024], [-122.332295, 47.628052], [-122.33225, 47.628084], [-122.33221, 47.628113], [-122.3322, 47.628137], [-122.332162, 47.628204], [-122.332141, 47.62823], [-122.332092, 47.628277], [-122.332075, 47.628301], [-122.332055, 47.628416], [-122.332047, 47.628492], [-122.332049, 47.628578], [-122.332047, 47.628641], [-122.332044, 47.628691], [-122.332043, 47.628732], [-122.332035, 47.628785], [-122.332034, 47.628829], [-122.332035, 47.628864], [-122.332033, 47.628903], [-122.332023, 47.628941], [-122.33201, 47.628998], [-122.332008, 47.629042], [-122.33201, 47.62907], [-122.332012, 47.629099], [-122.332016, 47.629173], [-122.332003, 47.629203], [-122.331963, 47.629248], [-122.331956, 47.629279], [-122.331959, 47.629312], [-122.331956, 47.629353], [-122.331913, 47.629383], [-122.331875, 47.629392], [-122.331814, 47.629406], [-122.331759, 47.629414], [-122.331684, 47.629431], [-122.331634, 47.629452], [-122.331596, 47.629471], [-122.331541, 47.629495], [-122.331482, 47.62951], [-122.331421, 47.629521], [-122.331342, 47.629523], [-122.331302, 47.629525], [-122.331239, 47.629536], [-122.331206, 47.629567], [-122.331179, 47.629607], [-122.33117, 47.629644], [-122.331184, 47.629668], [-122.331195, 47.629718], [-122.331082, 47.629775], [-122.330943, 47.629829], [-122.330837, 47.629875], [-122.330731, 47.62992], [-122.33064, 47.629961], [-122.330573, 47.629992], [-122.330504, 47.630029], [-122.330455, 47.630062], [-122.330416, 47.630094], [-122.330386, 47.630132], [-122.330364, 47.630192], [-122.330346, 47.63028], [-122.330328, 47.630302], [-122.33026, 47.630337], [-122.330212, 47.630353], [-122.330079, 47.630496], [-122.329961, 47.630616], [-122.329896, 47.630707], [-122.329757, 47.630842], [-122.329715, 47.630892], [-122.329596, 47.630986], [-122.329536, 47.631024], [-122.329472, 47.631064], [-122.329408, 47.631092], [-122.329333, 47.631112], [-122.329244, 47.631125], [-122.329184, 47.631123], [-122.329121, 47.63111], [-122.328996, 47.631047], [-122.328863, 47.630968], [-122.328733, 47.6309], [-122.328642, 47.630845], [-122.328586, 47.630811], [-122.328551, 47.630782], [-122.328514, 47.630749], [-122.32847, 47.630714], [-122.328437, 47.63069], [-122.328403, 47.630668], [-122.328373, 47.630653], [-122.328324, 47.630649], [-122.328285, 47.630661], [-122.328213, 47.630722], [-122.32795, 47.630946], [-122.327626, 47.631211], [-122.327397, 47.631378], [-122.327367, 47.631403], [-122.327337, 47.631436], [-122.327329, 47.631462], [-122.327353, 47.63148], [-122.327402, 47.631507], [-122.327433, 47.631522], [-122.327464, 47.631539], [-122.327491, 47.631558], [-122.327496, 47.631584], [-122.327466, 47.631647], [-122.327431, 47.63174], [-122.327418, 47.631778], [-122.327393, 47.631836], [-122.327378, 47.631877], [-122.327374, 47.631938], [-122.327366, 47.631978], [-122.327359, 47.632025], [-122.327378, 47.632047], [-122.327377, 47.632098], [-122.327357, 47.632169], [-122.327341, 47.63224], [-122.327324, 47.632303], [-122.327313, 47.632365], [-122.327299, 47.632416], [-122.327287, 47.632471], [-122.327265, 47.632616], [-122.327254, 47.632657], [-122.327255, 47.632716], [-122.327195, 47.63284], [-122.327168, 47.632918], [-122.327179, 47.633005], [-122.327208, 47.633035], [-122.327232, 47.633061], [-122.327265, 47.633106], [-122.327276, 47.63313], [-122.327267, 47.633171], [-122.327235, 47.633197], [-122.327179, 47.633221], [-122.327158, 47.633248], [-122.327155, 47.633282], [-122.327128, 47.633337], [-122.327118, 47.633451], [-122.327097, 47.633517], [-122.327076, 47.633546], [-122.327058, 47.633588], [-122.327099, 47.633632], [-122.32712, 47.633667], [-122.327135, 47.63372], [-122.327135, 47.633785], [-122.327126, 47.633837], [-122.327119, 47.633891], [-122.327116, 47.633921], [-122.327115, 47.633948], [-122.327115, 47.634001], [-122.327112, 47.634031], [-122.327105, 47.634059], [-122.327097, 47.634088], [-122.327089, 47.634113], [-122.32708, 47.634157], [-122.327074, 47.634191], [-122.327072, 47.634217], [-122.327073, 47.634263], [-122.327092, 47.634294], [-122.327135, 47.63434], [-122.327128, 47.634405], [-122.327101, 47.634445], [-122.327054, 47.63448], [-122.327055, 47.634543], [-122.327057, 47.634568], [-122.327081, 47.63459], [-122.327129, 47.634616], [-122.327177, 47.634634], [-122.32722, 47.634646], [-122.327285, 47.634666], [-122.32732, 47.634673], [-122.327454, 47.634699], [-122.327577, 47.634721], [-122.327714, 47.634742], [-122.327816, 47.63476], [-122.327905, 47.634777], [-122.327988, 47.63481], [-122.327967, 47.634861], [-122.327953, 47.634922], [-122.327968, 47.634959], [-122.327991, 47.634999], [-122.32802, 47.635039], [-122.328068, 47.63509], [-122.328109, 47.635127], [-122.32817, 47.635163], [-122.328218, 47.635191], [-122.328262, 47.63522], [-122.328315, 47.63525], [-122.328345, 47.635273], [-122.328343, 47.635309], [-122.328337, 47.635369], [-122.328332, 47.635472], [-122.328333, 47.635548], [-122.328334, 47.635602], [-122.32834, 47.635648], [-122.328351, 47.635685], [-122.328369, 47.635714], [-122.328394, 47.635743], [-122.328431, 47.635777], [-122.328482, 47.635812], [-122.328536, 47.635843], [-122.328584, 47.635868], [-122.328626, 47.63589], [-122.328666, 47.635917], [-122.328729, 47.635952], [-122.328794, 47.635989], [-122.328858, 47.636026], [-122.328903, 47.636051], [-122.328949, 47.63608], [-122.328978, 47.636119], [-122.329019, 47.63615], [-122.329073, 47.636161], [-122.32911, 47.636185], [-122.329142, 47.636203], [-122.329178, 47.636223], [-122.32923, 47.636255], [-122.329282, 47.636283], [-122.329342, 47.636321], [-122.329386, 47.636339], [-122.329415, 47.636352], [-122.329455, 47.636374], [-122.329478, 47.636401], [-122.329467, 47.636449], [-122.329443, 47.636481], [-122.32943, 47.636534], [-122.329406, 47.636579], [-122.329372, 47.636612], [-122.32939, 47.636641], [-122.329388, 47.636672], [-122.329399, 47.636702], [-122.32941, 47.636749], [-122.329433, 47.636773], [-122.329466, 47.636784], [-122.329508, 47.63681], [-122.329548, 47.636858], [-122.329557, 47.636913], [-122.329565, 47.636974], [-122.329561, 47.63704], [-122.329567, 47.637092], [-122.329575, 47.637155], [-122.32958, 47.637214], [-122.329584, 47.637261], [-122.329584, 47.637304], [-122.32959, 47.637338], [-122.329593, 47.637429], [-122.329596, 47.637472], [-122.329601, 47.637521], [-122.329609, 47.637555], [-122.329618, 47.637607], [-122.32962, 47.637704], [-122.32962, 47.637761], [-122.329613, 47.637808], [-122.329605, 47.637867], [-122.329597, 47.637938], [-122.329591, 47.638001], [-122.329578, 47.638057], [-122.329575, 47.63809], [-122.329571, 47.638137], [-122.329555, 47.638164], [-122.329534, 47.638239], [-122.329549, 47.638279], [-122.329563, 47.638311], [-122.329576, 47.638361], [-122.329578, 47.63839], [-122.329576, 47.638452], [-122.329614, 47.638495], [-122.329662, 47.638517], [-122.329667, 47.638567], [-122.329673, 47.638616], [-122.329679, 47.638655], [-122.329679, 47.638683], [-122.329676, 47.638717], [-122.329675, 47.638746], [-122.329672, 47.638777], [-122.329667, 47.638819], [-122.329704, 47.638823], [-122.329736, 47.638844], [-122.329738, 47.638868], [-122.329736, 47.638898], [-122.329739, 47.638982], [-122.329737, 47.639053], [-122.329739, 47.639098], [-122.329742, 47.639139], [-122.329742, 47.639178], [-122.329747, 47.639253], [-122.329749, 47.639289], [-122.329752, 47.639345], [-122.329754, 47.639373], [-122.329757, 47.639406], [-122.329757, 47.639443], [-122.329765, 47.639482], [-122.329762, 47.639515], [-122.329755, 47.639568], [-122.329722, 47.639612], [-122.329683, 47.639617], [-122.329677, 47.639653], [-122.329672, 47.639678], [-122.329678, 47.639727]]]]
    },
    "properties": {
      "neighbourhood": "South Lake Union",
      "neighbourhood_group": "Cascade"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.419985, 47.652389], [-122.420032, 47.652442], [-122.420146, 47.652551], [-122.420168, 47.652597], [-122.420164, 47.652638], [-122.420108, 47.652695], [-122.420131, 47.652738], [-122.420152, 47.652783], [-122.420156, 47.652818], [-122.420168, 47.652849], [-122.420178, 47.652893], [-122.420186, 47.652933], [-122.420214, 47.652962], [-122.420282, 47.653003], [-122.420318, 47.653039], [-122.420341, 47.653067], [-122.420372, 47.6531], [-122.420393, 47.653127], [-122.420409, 47.653159], [-122.420436, 47.653226], [-122.420465, 47.653257], [-122.420506, 47.653284], [-122.420535, 47.65331], [-122.420567, 47.65334], [-122.420594, 47.653369], [-122.420607, 47.653401], [-122.42064, 47.653442], [-122.420671, 47.653468], [-122.420745, 47.65352], [-122.420775, 47.65354], [-122.420813, 47.653569], [-122.420873, 47.653632], [-122.42097, 47.653729], [-122.421006, 47.653761], [-122.421083, 47.653815], [-122.421137, 47.653852], [-122.421212, 47.653895], [-122.421258, 47.653925], [-122.421296, 47.653946], [-122.421356, 47.653984], [-122.421428, 47.654043], [-122.421464, 47.654061], [-122.421497, 47.654086], [-122.421531, 47.654105], [-122.42162, 47.654149], [-122.421656, 47.654164], [-122.421706, 47.654191], [-122.421823, 47.654236], [-122.421853, 47.654251], [-122.421898, 47.654284], [-122.421945, 47.654324], [-122.421986, 47.654346], [-122.422053, 47.654381], [-122.422093, 47.654415], [-122.422127, 47.654472], [-122.422177, 47.654522], [-122.422232, 47.654547], [-122.42226, 47.654562], [-122.422294, 47.654593], [-122.422394, 47.654649], [-122.422444, 47.654683], [-122.42247, 47.6547], [-122.422496, 47.65473], [-122.422527, 47.654797], [-122.42254, 47.654821], [-122.422567, 47.654852], [-122.42261, 47.654873], [-122.422657, 47.654897], [-122.422683, 47.654918], [-122.422776, 47.654977], [-122.422816, 47.654999], [-122.422886, 47.655066], [-122.422919, 47.655108], [-122.422956, 47.655135], [-122.423019, 47.655175], [-122.423051, 47.6552], [-122.423081, 47.655219], [-122.423116, 47.655235], [-122.423146, 47.655256], [-122.423222, 47.655304], [-122.423263, 47.655329], [-122.423308, 47.655363], [-122.423339, 47.655385], [-122.423385, 47.655426], [-122.423432, 47.65545], [-122.423459, 47.655468], [-122.423498, 47.655492], [-122.423529, 47.655511], [-122.423588, 47.655558], [-122.423613, 47.655583], [-122.423629, 47.655608], [-122.423637, 47.655647], [-122.423644, 47.655679], [-122.423665, 47.655711], [-122.423709, 47.655755], [-122.423794, 47.655819], [-122.423911, 47.655937], [-122.423954, 47.655981], [-122.423997, 47.65602], [-122.424026, 47.656063], [-122.424063, 47.656131], [-122.42407, 47.656163], [-122.424096, 47.656212], [-122.424106, 47.656256], [-122.42415, 47.656321], [-122.424178, 47.656355], [-122.424222, 47.656397], [-122.424263, 47.656432], [-122.424327, 47.656495], [-122.424372, 47.65653], [-122.424425, 47.656576], [-122.424469, 47.656619], [-122.424512, 47.65666], [-122.42456, 47.656715], [-122.424581, 47.65675], [-122.424596, 47.656776], [-122.424629, 47.656817], [-122.424668, 47.656855], [-122.424689, 47.656877], [-122.424712, 47.656905], [-122.424735, 47.656932], [-122.424755, 47.656965], [-122.424792, 47.657001], [-122.424847, 47.65705], [-122.424898, 47.657095], [-122.425016, 47.657212], [-122.425047, 47.657237], [-122.425104, 47.657267], [-122.42515, 47.657291], [-122.425189, 47.65732], [-122.425245, 47.657363], [-122.425287, 47.657391], [-122.425372, 47.657431], [-122.425411, 47.657453], [-122.425454, 47.657483], [-122.425512, 47.657519], [-122.425557, 47.657543], [-122.42562, 47.657588], [-122.425732, 47.657652], [-122.425841, 47.65771], [-122.425911, 47.657748], [-122.425959, 47.657757], [-122.426009, 47.65776], [-122.426042, 47.657778], [-122.42609, 47.657823], [-122.426109, 47.65785], [-122.426145, 47.657895], [-122.426174, 47.657941], [-122.42619, 47.657973], [-122.426209, 47.658026], [-122.426229, 47.658078], [-122.42624, 47.65811], [-122.426259, 47.658138], [-122.4263, 47.658173], [-122.426344, 47.658194], [-122.426382, 47.658229], [-122.426394, 47.658266], [-122.42639, 47.658305], [-122.426404, 47.658347], [-122.426458, 47.658377], [-122.426492, 47.658398], [-122.426593, 47.658437], [-122.426646, 47.658461], [-122.426741, 47.658492], [-122.426836, 47.658516], [-122.426881, 47.658535], [-122.426979, 47.658568], [-122.427014, 47.658584], [-122.427066, 47.658611], [-122.427194, 47.658663], [-122.427265, 47.6587], [-122.427333, 47.658724], [-122.42741, 47.658757], [-122.427464, 47.658777], [-122.427552, 47.658812], [-122.427596, 47.658833], [-122.427638, 47.65885], [-122.427721, 47.658887], [-122.427773, 47.658904], [-122.427821, 47.658925], [-122.427869, 47.658947], [-122.427904, 47.658958], [-122.42797, 47.658986], [-122.428034, 47.659005], [-122.428129, 47.659046], [-122.428218, 47.659075], [-122.428276, 47.6591], [-122.428314, 47.659117], [-122.428393, 47.659146], [-122.428448, 47.659165], [-122.428521, 47.659194], [-122.428594, 47.659219], [-122.42867, 47.659241], [-122.428724, 47.659263], [-122.428795, 47.659295], [-122.428865, 47.659317], [-122.428978, 47.659356], [-122.429107, 47.659412], [-122.429167, 47.659432], [-122.429261, 47.659475], [-122.429321, 47.659497], [-122.429385, 47.659523], [-122.429476, 47.659556], [-122.429533, 47.659572], [-122.429604, 47.659588], [-122.429663, 47.659606], [-122.429709, 47.65962], [-122.429755, 47.659634], [-122.429827, 47.659652], [-122.429886, 47.659663], [-122.429931, 47.659674], [-122.429983, 47.659694], [-122.430085, 47.659743], [-122.430171, 47.659774], [-122.430213, 47.659788], [-122.430252, 47.659804], [-122.430284, 47.659818], [-122.430432, 47.65987], [-122.430511, 47.659897], [-122.430586, 47.659923], [-122.430625, 47.659944], [-122.430668, 47.659956], [-122.430769, 47.659995], [-122.431035, 47.660106], [-122.431279, 47.6602], [-122.431506, 47.660277], [-122.431752, 47.660352], [-122.432014, 47.660435], [-122.432261, 47.660521], [-122.432535, 47.660617], [-122.432803, 47.660709], [-122.433115, 47.660825], [-122.433369, 47.660917], [-122.433657, 47.661043], [-122.433905, 47.661139], [-122.434143, 47.661238], [-122.434388, 47.661319], [-122.434709, 47.661438], [-122.434983, 47.661541], [-122.435308, 47.661661], [-122.435589, 47.661774], [-122.435782, 47.66186], [-122.435896, 47.661879], [-122.435945, 47.661887], [-122.435955, 47.661924], [-122.435956, 47.661963], [-122.435937, 47.662018], [-122.435835, 47.662045], [-122.435754, 47.662078], [-122.435511, 47.662161], [-122.435183, 47.662238], [-122.434828, 47.662307], [-122.434392, 47.662383], [-122.433947, 47.66244], [-122.433557, 47.66248], [-122.433117, 47.662515], [-122.432646, 47.662573], [-122.432055, 47.662638], [-122.431728, 47.662666], [-122.43141, 47.662704], [-122.431144, 47.662773], [-122.430761, 47.662916], [-122.430228, 47.663136], [-122.429751, 47.663331], [-122.42912, 47.663592], [-122.428485, 47.663854], [-122.427851, 47.664108], [-122.427214, 47.664379], [-122.426506, 47.664668], [-122.425783, 47.664964], [-122.425145, 47.665224], [-122.425005, 47.665287], [-122.424967, 47.665309], [-122.424909, 47.665351], [-122.424738, 47.665515], [-122.424586, 47.665659], [-122.424435, 47.665813], [-122.424267, 47.665969], [-122.424023, 47.666207], [-122.423798, 47.666432], [-122.423583, 47.666624], [-122.423344, 47.666853], [-122.423181, 47.667019], [-122.42304, 47.667173], [-122.422889, 47.667306], [-122.422755, 47.667446], [-122.422709, 47.667479], [-122.422646, 47.667512], [-122.422533, 47.667558], [-122.422402, 47.667608], [-122.422296, 47.667662], [-122.422231, 47.667686], [-122.422166, 47.667694], [-122.421969, 47.667709], [-122.421889, 47.667727], [-122.421756, 47.66776], [-122.421716, 47.667763], [-122.421657, 47.667783], [-122.421603, 47.667805], [-122.421543, 47.66783], [-122.421459, 47.667865], [-122.421359, 47.667905], [-122.421308, 47.667923], [-122.421209, 47.66797], [-122.421128, 47.668013], [-122.421034, 47.668065], [-122.420992, 47.668084], [-122.42092, 47.668111], [-122.420838, 47.668149], [-122.42073, 47.668199], [-122.420633, 47.668242], [-122.420543, 47.668276], [-122.420366, 47.668343], [-122.420253, 47.668383], [-122.420177, 47.668411], [-122.420069, 47.668457], [-122.420004, 47.668485], [-122.419892, 47.668537], [-122.419804, 47.668574], [-122.41973, 47.668605], [-122.419672, 47.668623], [-122.419636, 47.668636], [-122.419511, 47.668687], [-122.41944, 47.668713], [-122.419393, 47.668727], [-122.41934, 47.668741], [-122.419289, 47.66876], [-122.419212, 47.668791], [-122.419158, 47.668809], [-122.419103, 47.668823], [-122.419033, 47.668845], [-122.418897, 47.66889], [-122.418837, 47.668909], [-122.418693, 47.66896], [-122.418611, 47.668996], [-122.418573, 47.669013], [-122.418538, 47.669027], [-122.418391, 47.669094], [-122.418288, 47.669145], [-122.418199, 47.669186], [-122.418171, 47.669202], [-122.418134, 47.669229], [-122.418112, 47.669248], [-122.418049, 47.669285], [-122.418008, 47.669309], [-122.417951, 47.669346], [-122.417898, 47.669375], [-122.41784, 47.669403], [-122.417785, 47.669438], [-122.41771, 47.669492], [-122.41774, 47.669518], [-122.417623, 47.669661], [-122.417508, 47.669749], [-122.417115, 47.669939], [-122.416911, 47.67004], [-122.41679, 47.67009], [-122.416491, 47.670222], [-122.416413, 47.670245], [-122.416315, 47.670273], [-122.416168, 47.67033], [-122.416065, 47.670359], [-122.415946, 47.670396], [-122.415876, 47.670426], [-122.415828, 47.67046], [-122.415815, 47.67053], [-122.415487, 47.670642], [-122.415431, 47.670651], [-122.415331, 47.670653], [-122.415264, 47.67066], [-122.415175, 47.670669], [-122.415091, 47.670685], [-122.415039, 47.670691], [-122.415005, 47.670698], [-122.414999, 47.670732], [-122.414586, 47.670835], [-122.414485, 47.670858], [-122.41443, 47.670875], [-122.414021, 47.670957], [-122.413909, 47.670976], [-122.413115, 47.671138], [-122.412864, 47.671197], [-122.412559, 47.671257], [-122.412472, 47.671277], [-122.412373, 47.671296], [-122.41226, 47.671322], [-122.412163, 47.671342], [-122.412101, 47.671357], [-122.411996, 47.671381], [-122.411923, 47.6714], [-122.411582, 47.671463], [-122.411506, 47.671477], [-122.41144, 47.671487], [-122.411374, 47.67149], [-122.411285, 47.671488], [-122.411207, 47.671468], [-122.411144, 47.671456], [-122.411052, 47.671457], [-122.410966, 47.671464], [-122.410613, 47.671503], [-122.410477, 47.671508], [-122.410361, 47.671515], [-122.410241, 47.671527], [-122.410141, 47.671542], [-122.410007, 47.671565], [-122.409914, 47.671578], [-122.409671, 47.671597], [-122.409598, 47.671596], [-122.409494, 47.671589], [-122.409393, 47.671582], [-122.409298, 47.671576], [-122.409219, 47.671567], [-122.409164, 47.671558], [-122.409117, 47.67155], [-122.409046, 47.671535], [-122.408971, 47.671515], [-122.408925, 47.671495], [-122.408855, 47.671472], [-122.408812, 47.671446], [-122.408776, 47.671417], [-122.408699, 47.671285], [-122.408673, 47.671235], [-122.408657, 47.671191], [-122.408647, 47.671155], [-122.408626, 47.671107], [-122.408601, 47.671046], [-122.408587, 47.671003], [-122.408567, 47.670931], [-122.408548, 47.670862], [-122.408521, 47.670787], [-122.408489, 47.670709], [-122.408471, 47.670649], [-122.408454, 47.670588], [-122.408423, 47.670515], [-122.408397, 47.670389], [-122.4084, 47.670341], [-122.408392, 47.670311], [-122.408359, 47.670273], [-122.40833, 47.670227], [-122.408295, 47.670169], [-122.408267, 47.670137], [-122.408227, 47.67009], [-122.408186, 47.67004], [-122.40815, 47.67], [-122.408118, 47.669963], [-122.408112, 47.66993], [-122.408104, 47.669891], [-122.408073, 47.669856], [-122.408021, 47.669815], [-122.407973, 47.669782], [-122.407923, 47.669733], [-122.407914, 47.669678], [-122.407912, 47.669634], [-122.407892, 47.669596], [-122.407831, 47.669503], [-122.407823, 47.66946], [-122.407825, 47.669427], [-122.407833, 47.669386], [-122.407832, 47.669346], [-122.407839, 47.669287], [-122.407842, 47.669213], [-122.407846, 47.669145], [-122.40786, 47.669078], [-122.407863, 47.66902], [-122.40787, 47.668967], [-122.407887, 47.66889], [-122.407906, 47.668822], [-122.407917, 47.668755], [-122.407936, 47.668691], [-122.40797, 47.668593], [-122.407983, 47.668553], [-122.407996, 47.668519], [-122.408032, 47.668495], [-122.408059, 47.668457], [-122.40808, 47.668393], [-122.408103, 47.668322], [-122.408131, 47.668246], [-122.408154, 47.668174], [-122.408176, 47.668105], [-122.408191, 47.668031], [-122.408208, 47.667954], [-122.408236, 47.66788], [-122.408246, 47.667805], [-122.408239, 47.667737], [-122.40823, 47.667678], [-122.40822, 47.6676], [-122.408198, 47.667531], [-122.408151, 47.667454], [-122.408102, 47.667394], [-122.408054, 47.667337], [-122.407999, 47.667289], [-122.407959, 47.667242], [-122.407921, 47.667193], [-122.407897, 47.667164], [-122.407876, 47.667127], [-122.407827, 47.667083], [-122.407785, 47.667059], [-122.407732, 47.667044], [-122.407674, 47.667012], [-122.40762, 47.666975], [-122.407585, 47.666937], [-122.407549, 47.666905], [-122.40751, 47.666882], [-122.407452, 47.666853], [-122.407397, 47.666824], [-122.407288, 47.666763], [-122.407228, 47.666732], [-122.407183, 47.666707], [-122.407139, 47.666684], [-122.407095, 47.666673], [-122.407052, 47.666684], [-122.407002, 47.666667], [-122.406973, 47.666649], [-122.406939, 47.666635], [-122.4069, 47.666622], [-122.406913, 47.666588], [-122.406896, 47.666562], [-122.406856, 47.666548], [-122.406795, 47.666536], [-122.406749, 47.666528], [-122.40666, 47.666498], [-122.406601, 47.666483], [-122.406537, 47.666467], [-122.40646, 47.666464], [-122.406373, 47.66646], [-122.406281, 47.666457], [-122.406192, 47.666455], [-122.406102, 47.666452], [-122.406054, 47.66645], [-122.406036, 47.666476], [-122.405933, 47.666474], [-122.405848, 47.666474], [-122.405735, 47.666473], [-122.405662, 47.666471], [-122.405561, 47.666471], [-122.40554, 47.666439], [-122.405539, 47.666412], [-122.405507, 47.666392], [-122.405467, 47.666389], [-122.405397, 47.666377], [-122.405318, 47.666368], [-122.405248, 47.666358], [-122.405174, 47.666345], [-122.40512, 47.666311], [-122.405096, 47.666286], [-122.405084, 47.666254], [-122.405057, 47.66623], [-122.404961, 47.666224], [-122.404871, 47.666221], [-122.404788, 47.666221], [-122.404688, 47.666218], [-122.404577, 47.666216], [-122.404459, 47.666222], [-122.404401, 47.666229], [-122.404369, 47.66625], [-122.404366, 47.666274], [-122.404336, 47.666295], [-122.404277, 47.666295], [-122.404194, 47.666295], [-122.404102, 47.666292], [-122.404006, 47.66629], [-122.403896, 47.666287], [-122.403796, 47.666283], [-122.403747, 47.666282], [-122.403649, 47.666277], [-122.403535, 47.666276], [-122.403408, 47.666271], [-122.403283, 47.666267], [-122.40317, 47.666265], [-122.403064, 47.666265], [-122.402965, 47.666266], [-122.402914, 47.666269], [-122.402871, 47.666284], [-122.402809, 47.666284], [-122.402763, 47.666275], [-122.402693, 47.666267], [-122.402622, 47.666274], [-122.402508, 47.666263], [-122.402367, 47.666222], [-122.40229, 47.66622], [-122.402231, 47.66623], [-122.402187, 47.666233], [-122.402136, 47.666247], [-122.402075, 47.666238], [-122.401984, 47.666235], [-122.401939, 47.666226], [-122.401895, 47.666175], [-122.401849, 47.666148], [-122.401799, 47.66612], [-122.401734, 47.666089], [-122.40166, 47.666071], [-122.401336, 47.665989], [-122.401247, 47.665961], [-122.401168, 47.665935], [-122.40111, 47.665915], [-122.401059, 47.66591], [-122.401022, 47.665921], [-122.400989, 47.665933], [-122.400945, 47.665925], [-122.400886, 47.665904], [-122.400815, 47.665877], [-122.400733, 47.665851], [-122.400675, 47.665828], [-122.40067, 47.665801], [-122.400629, 47.665786], [-122.400589, 47.665769], [-122.400558, 47.665745], [-122.400488, 47.665694], [-122.40044, 47.665668], [-122.400414, 47.665651], [-122.400375, 47.665649], [-122.400328, 47.665595], [-122.400292, 47.665561], [-122.400243, 47.665529], [-122.4002, 47.665509], [-122.40015, 47.665488], [-122.40007, 47.665464], [-122.399989, 47.665438], [-122.399907, 47.665414], [-122.399829, 47.665388], [-122.399739, 47.665358], [-122.399653, 47.665332], [-122.399554, 47.6653], [-122.399457, 47.665269], [-122.399363, 47.665238], [-122.399275, 47.665213], [-122.399192, 47.665186], [-122.399134, 47.665164], [-122.399125, 47.665133], [-122.399085, 47.665108], [-122.399026, 47.665089], [-122.398952, 47.665064], [-122.398872, 47.665039], [-122.398773, 47.665008], [-122.398715, 47.664988], [-122.398654, 47.664966], [-122.398593, 47.664947], [-122.398515, 47.664923], [-122.398474, 47.664932], [-122.398449, 47.664962], [-122.398415, 47.664975], [-122.398332, 47.664953], [-122.398291, 47.662551], [-122.396043, 47.661319], [-122.394318, 47.661325], [-122.39351, 47.660989], [-122.392491, 47.660472], [-122.391401, 47.659774], [-122.389253, 47.658082], [-122.387473, 47.656663], [-122.385891, 47.655406], [-122.385389, 47.654987], [-122.383689, 47.652766], [-122.383073, 47.651966], [-122.382002, 47.650555], [-122.38199, 47.650155], [-122.381975, 47.648459], [-122.382629, 47.648453], [-122.384279, 47.648455], [-122.385965, 47.64845], [-122.38759, 47.648492], [-122.388897, 47.648492], [-122.389784, 47.648505], [-122.389806, 47.648524], [-122.38983, 47.648542], [-122.389854, 47.648559], [-122.38988, 47.648576], [-122.389908, 47.648592], [-122.389937, 47.648606], [-122.389966, 47.64862], [-122.390022, 47.648642], [-122.390054, 47.648652], [-122.390119, 47.648677], [-122.390152, 47.648686], [-122.390186, 47.648694], [-122.390221, 47.648699], [-122.390256, 47.648703], [-122.390292, 47.648707], [-122.390328, 47.648709], [-122.390363, 47.648712], [-122.390399, 47.648714], [-122.390435, 47.648715], [-122.39047, 47.648716], [-122.390506, 47.648716], [-122.390542, 47.648716], [-122.390581, 47.648715], [-122.390617, 47.648713], [-122.390653, 47.648711], [-122.390689, 47.648708], [-122.390724, 47.648705], [-122.39076, 47.648702], [-122.390795, 47.648697], [-122.39083, 47.648693], [-122.390865, 47.648687], [-122.390903, 47.648681], [-122.390938, 47.648674], [-122.390972, 47.648667], [-122.391006, 47.64866], [-122.391047, 47.64865], [-122.39171, 47.648649], [-122.393339, 47.648652], [-122.394224, 47.64864], [-122.395114, 47.648642], [-122.395365, 47.648634], [-122.395421, 47.648604], [-122.395444, 47.648585], [-122.395464, 47.648565], [-122.395479, 47.648543], [-122.39549, 47.64852], [-122.395496, 47.648496], [-122.395497, 47.648472], [-122.395493, 47.648448], [-122.395492, 47.648241], [-122.395487, 47.647707], [-122.395511, 47.647283], [-122.395539, 47.646984], [-122.395576, 47.646832], [-122.396456, 47.646832], [-122.397994, 47.646819], [-122.399903, 47.646824], [-122.400936, 47.64682], [-122.401143, 47.64682], [-122.402727, 47.646816], [-122.403616, 47.646811], [-122.403614, 47.650441], [-122.403606, 47.651454], [-122.403595, 47.652736], [-122.403594, 47.654046], [-122.404112, 47.654066], [-122.405764, 47.654082], [-122.407882, 47.654081], [-122.410002, 47.65409], [-122.412146, 47.6541], [-122.414249, 47.654104], [-122.41636, 47.654108], [-122.418151, 47.654122], [-122.419711, 47.654117], [-122.419939, 47.652698], [-122.419985, 47.652389]]]]
    },
    "properties": {
      "neighbourhood": "Lawton Park",
      "neighbourhood_group": "Magnolia"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.419985, 47.652389], [-122.419939, 47.652698], [-122.419711, 47.654117], [-122.418151, 47.654122], [-122.41636, 47.654108], [-122.414249, 47.654104], [-122.412146, 47.6541], [-122.410002, 47.65409], [-122.407882, 47.654081], [-122.405764, 47.654082], [-122.404112, 47.654066], [-122.403594, 47.654046], [-122.403595, 47.652736], [-122.403606, 47.651454], [-122.403614, 47.650441], [-122.403616, 47.646811], [-122.402727, 47.646816], [-122.401143, 47.64682], [-122.400936, 47.64682], [-122.400938, 47.646599], [-122.400944, 47.645488], [-122.400987, 47.642643], [-122.400989, 47.639837], [-122.401028, 47.639225], [-122.400987, 47.639231], [-122.400949, 47.639235], [-122.40091, 47.639237], [-122.400871, 47.639238], [-122.400832, 47.639237], [-122.400792, 47.639235], [-122.400754, 47.639231], [-122.400716, 47.639226], [-122.400678, 47.639219], [-122.400641, 47.639211], [-122.400604, 47.639202], [-122.400568, 47.639191], [-122.400534, 47.639179], [-122.4005, 47.639165], [-122.400468, 47.63915], [-122.400437, 47.639135], [-122.400407, 47.639117], [-122.399631, 47.639109], [-122.398355, 47.638223], [-122.39809, 47.638023], [-122.397923, 47.637715], [-122.397901, 47.636531], [-122.397875, 47.635755], [-122.397504, 47.633772], [-122.397209, 47.633272], [-122.394153, 47.632294], [-122.393625, 47.632241], [-122.393713, 47.631011], [-122.3937, 47.630435], [-122.393749, 47.630441], [-122.393797, 47.630441], [-122.393853, 47.630441], [-122.393959, 47.63044], [-122.394011, 47.630438], [-122.394061, 47.630434], [-122.394203, 47.630433], [-122.394255, 47.630431], [-122.394571, 47.630426], [-122.394615, 47.630429], [-122.394667, 47.630434], [-122.394709, 47.630434], [-122.394793, 47.630441], [-122.394845, 47.630454], [-122.394895, 47.630464], [-122.39494, 47.630478], [-122.394995, 47.630503], [-122.395031, 47.63052], [-122.395076, 47.63054], [-122.395115, 47.630562], [-122.395151, 47.630585], [-122.395192, 47.630609], [-122.39523, 47.630629], [-122.395279, 47.63067], [-122.395312, 47.630695], [-122.395344, 47.630725], [-122.395369, 47.630751], [-122.395394, 47.630769], [-122.39543, 47.630795], [-122.395461, 47.630821], [-122.395498, 47.630872], [-122.39551, 47.630898], [-122.395526, 47.63093], [-122.39554, 47.630958], [-122.395548, 47.630992], [-122.395559, 47.631024], [-122.395571, 47.631057], [-122.395583, 47.631085], [-122.395589, 47.631113], [-122.395596, 47.631148], [-122.395601, 47.631182], [-122.39561, 47.631217], [-122.395616, 47.631248], [-122.395623, 47.631282], [-122.395626, 47.631318], [-122.395629, 47.631354], [-122.395635, 47.631387], [-122.395646, 47.631423], [-122.395684, 47.63147], [-122.395728, 47.631487], [-122.395764, 47.631511], [-122.3958, 47.631528], [-122.39584, 47.631538], [-122.395887, 47.631549], [-122.395968, 47.631556], [-122.39602, 47.631563], [-122.396069, 47.631571], [-122.396119, 47.631583], [-122.396182, 47.631588], [-122.396225, 47.631596], [-122.396278, 47.631605], [-122.396325, 47.631616], [-122.396377, 47.631629], [-122.396424, 47.631642], [-122.396475, 47.631647], [-122.396527, 47.631633], [-122.396575, 47.631631], [-122.39662, 47.631636], [-122.396696, 47.631662], [-122.396727, 47.631693], [-122.396747, 47.631713], [-122.396804, 47.63174], [-122.396845, 47.631749], [-122.396901, 47.631771], [-122.396937, 47.631792], [-122.397017, 47.631808], [-122.397058, 47.631809], [-122.397138, 47.631822], [-122.397183, 47.631838], [-122.397237, 47.631854], [-122.397256, 47.631877], [-122.397285, 47.631906], [-122.39736, 47.631923], [-122.397404, 47.631936], [-122.39745, 47.631949], [-122.397498, 47.63196], [-122.397537, 47.631976], [-122.397574, 47.631985], [-122.397603, 47.631966], [-122.397685, 47.631971], [-122.397738, 47.631985], [-122.397779, 47.631993], [-122.397811, 47.632004], [-122.397854, 47.632015], [-122.397901, 47.63203], [-122.397942, 47.632038], [-122.398007, 47.632046], [-122.398041, 47.632058], [-122.39809, 47.632068], [-122.398133, 47.632076], [-122.398172, 47.632082], [-122.398218, 47.632091], [-122.398267, 47.632104], [-122.398327, 47.632121], [-122.398373, 47.632127], [-122.398442, 47.632139], [-122.398494, 47.63215], [-122.398557, 47.632161], [-122.39861, 47.632173], [-122.398676, 47.632188], [-122.398732, 47.632201], [-122.398803, 47.632223], [-122.398847, 47.632239], [-122.398881, 47.632249], [-122.398917, 47.632244], [-122.398953, 47.632241], [-122.398996, 47.632249], [-122.399032, 47.632269], [-122.399079, 47.632279], [-122.399112, 47.63229], [-122.399135, 47.632315], [-122.39914, 47.632346], [-122.399134, 47.632375], [-122.399158, 47.632401], [-122.39923, 47.632424], [-122.39934, 47.632463], [-122.399406, 47.632493], [-122.399483, 47.632524], [-122.399521, 47.632542], [-122.399626, 47.632595], [-122.399782, 47.632653], [-122.399867, 47.632689], [-122.399967, 47.632731], [-122.400036, 47.632755], [-122.400139, 47.632793], [-122.400257, 47.632828], [-122.400306, 47.632849], [-122.40037, 47.632877], [-122.400426, 47.632895], [-122.400559, 47.632929], [-122.400752, 47.632994], [-122.400794, 47.633008], [-122.400923, 47.633054], [-122.401026, 47.633092], [-122.401182, 47.633145], [-122.401274, 47.633175], [-122.401371, 47.633213], [-122.401457, 47.633242], [-122.401568, 47.633281], [-122.401665, 47.633316], [-122.401705, 47.633324], [-122.401738, 47.633313], [-122.401763, 47.633295], [-122.401786, 47.633273], [-122.401809, 47.633251], [-122.401842, 47.633242], [-122.401886, 47.633254], [-122.401943, 47.63327], [-122.401973, 47.633289], [-122.401943, 47.633333], [-122.401905, 47.633386], [-122.401888, 47.633414], [-122.401931, 47.63344], [-122.40197, 47.633451], [-122.402011, 47.633467], [-122.402082, 47.633501], [-122.402289, 47.633584], [-122.402349, 47.633606], [-122.402426, 47.633628], [-122.402586, 47.633698], [-122.40267, 47.633728], [-122.402759, 47.633757], [-122.402818, 47.633781], [-122.402925, 47.633819], [-122.40299, 47.633845], [-122.403091, 47.633896], [-122.403145, 47.633918], [-122.403208, 47.633938], [-122.40328, 47.633965], [-122.403347, 47.633987], [-122.403446, 47.634022], [-122.403563, 47.634071], [-122.403646, 47.634099], [-122.403731, 47.634125], [-122.403835, 47.634167], [-122.403922, 47.634209], [-122.404057, 47.634266], [-122.404116, 47.634292], [-122.404188, 47.634321], [-122.404241, 47.634339], [-122.404329, 47.634361], [-122.404394, 47.634382], [-122.404515, 47.634428], [-122.404625, 47.634461], [-122.404677, 47.634478], [-122.404739, 47.634507], [-122.404784, 47.634546], [-122.404807, 47.634565], [-122.404847, 47.634587], [-122.404898, 47.634573], [-122.404962, 47.634584], [-122.405037, 47.634612], [-122.40522, 47.634675], [-122.405267, 47.634695], [-122.405313, 47.634712], [-122.405407, 47.634745], [-122.405487, 47.634781], [-122.405536, 47.634801], [-122.405721, 47.634871], [-122.405766, 47.634891], [-122.405815, 47.634919], [-122.405934, 47.634981], [-122.406015, 47.63502], [-122.406193, 47.6351], [-122.406281, 47.635134], [-122.406334, 47.63516], [-122.406377, 47.63518], [-122.406472, 47.635225], [-122.406522, 47.635253], [-122.406648, 47.635321], [-122.406723, 47.635367], [-122.406774, 47.635393], [-122.406876, 47.635439], [-122.406928, 47.635476], [-122.406958, 47.635499], [-122.407005, 47.635537], [-122.407065, 47.635579], [-122.407125, 47.635611], [-122.407184, 47.63564], [-122.407232, 47.63567], [-122.407262, 47.635695], [-122.4073, 47.635748], [-122.40732, 47.635775], [-122.407366, 47.635808], [-122.40745, 47.635856], [-122.407494, 47.63588], [-122.407627, 47.635955], [-122.40774, 47.636022], [-122.407832, 47.636075], [-122.407873, 47.636099], [-122.407959, 47.636149], [-122.408059, 47.636202], [-122.408111, 47.636235], [-122.408159, 47.636268], [-122.408308, 47.636351], [-122.408384, 47.636384], [-122.408449, 47.636415], [-122.408611, 47.636483], [-122.408757, 47.636536], [-122.408805, 47.636557], [-122.408905, 47.636595], [-122.408994, 47.636625], [-122.409045, 47.636645], [-122.409079, 47.636664], [-122.40914, 47.636697], [-122.409196, 47.636727], [-122.409222, 47.636744], [-122.409231, 47.636769], [-122.409235, 47.636796], [-122.409276, 47.636824], [-122.40931, 47.636843], [-122.409393, 47.636882], [-122.409462, 47.636919], [-122.409511, 47.636953], [-122.40955, 47.636977], [-122.409581, 47.636991], [-122.409611, 47.637006], [-122.409636, 47.637024], [-122.409678, 47.637063], [-122.409774, 47.637138], [-122.409813, 47.637163], [-122.409912, 47.637214], [-122.409978, 47.637252], [-122.410029, 47.63729], [-122.410143, 47.63739], [-122.410219, 47.637453], [-122.410297, 47.637507], [-122.410344, 47.637538], [-122.410444, 47.63761], [-122.410473, 47.637628], [-122.410549, 47.637661], [-122.410633, 47.637709], [-122.410675, 47.637731], [-122.410712, 47.63774], [-122.410755, 47.637728], [-122.410809, 47.637736], [-122.410898, 47.637802], [-122.410974, 47.637864], [-122.411016, 47.637903], [-122.411045, 47.63794], [-122.411073, 47.637976], [-122.411123, 47.638024], [-122.411164, 47.638049], [-122.411229, 47.638084], [-122.411284, 47.638117], [-122.41141, 47.638187], [-122.411465, 47.638222], [-122.411551, 47.638275], [-122.411609, 47.638313], [-122.41168, 47.63836], [-122.411715, 47.638385], [-122.41176, 47.638419], [-122.41179, 47.638434], [-122.411847, 47.63846], [-122.411915, 47.638487], [-122.411984, 47.638504], [-122.412029, 47.63851], [-122.412073, 47.638519], [-122.412118, 47.638535], [-122.412157, 47.638553], [-122.412186, 47.638567], [-122.412226, 47.638579], [-122.412295, 47.638597], [-122.412371, 47.638579], [-122.412422, 47.63859], [-122.412477, 47.638625], [-122.412607, 47.638727], [-122.412645, 47.638763], [-122.412662, 47.638788], [-122.412668, 47.638826], [-122.412706, 47.638855], [-122.412723, 47.638883], [-122.412699, 47.638943], [-122.412685, 47.638966], [-122.412666, 47.638989], [-122.412661, 47.639016], [-122.41268, 47.639042], [-122.412716, 47.639075], [-122.412744, 47.639094], [-122.412795, 47.639109], [-122.412838, 47.639111], [-122.412953, 47.639174], [-122.412978, 47.639194], [-122.413005, 47.639213], [-122.413062, 47.639269], [-122.413097, 47.639293], [-122.413154, 47.639344], [-122.413195, 47.639375], [-122.413241, 47.639403], [-122.413286, 47.639432], [-122.413425, 47.639523], [-122.413488, 47.639574], [-122.413516, 47.639596], [-122.413555, 47.639617], [-122.413591, 47.639641], [-122.413632, 47.639662], [-122.41366, 47.639679], [-122.413689, 47.639697], [-122.413733, 47.639721], [-122.41377, 47.639744], [-122.413805, 47.639768], [-122.413853, 47.639795], [-122.413889, 47.639823], [-122.413931, 47.639842], [-122.413994, 47.639896], [-122.414042, 47.639945], [-122.414067, 47.639962], [-122.414107, 47.63999], [-122.414131, 47.640019], [-122.414179, 47.640047], [-122.414234, 47.640066], [-122.414288, 47.640077], [-122.414326, 47.640084], [-122.414365, 47.640097], [-122.414416, 47.640136], [-122.414457, 47.64015], [-122.414518, 47.640178], [-122.414565, 47.640203], [-122.414599, 47.640217], [-122.414635, 47.640236], [-122.414666, 47.640249], [-122.414721, 47.640275], [-122.414766, 47.640307], [-122.4148, 47.640321], [-122.414871, 47.640338], [-122.414943, 47.640346], [-122.414981, 47.640361], [-122.415009, 47.640396], [-122.415035, 47.640418], [-122.415072, 47.640443], [-122.415104, 47.640477], [-122.415206, 47.640534], [-122.415265, 47.640583], [-122.415311, 47.64062], [-122.415337, 47.640653], [-122.415362, 47.640674], [-122.415383, 47.640703], [-122.415413, 47.640735], [-122.415446, 47.640763], [-122.415492, 47.640806], [-122.415519, 47.640837], [-122.415553, 47.640867], [-122.415596, 47.640906], [-122.415621, 47.640925], [-122.415672, 47.64097], [-122.415718, 47.641016], [-122.415763, 47.641071], [-122.415803, 47.641109], [-122.415824, 47.641132], [-122.415853, 47.641156], [-122.415883, 47.641184], [-122.4159, 47.641207], [-122.415985, 47.641287], [-122.416024, 47.641344], [-122.416048, 47.641371], [-122.416066, 47.641394], [-122.416099, 47.641423], [-122.416141, 47.641469], [-122.416164, 47.641502], [-122.41619, 47.641531], [-122.416207, 47.641552], [-122.41624, 47.641585], [-122.416261, 47.641613], [-122.416304, 47.641673], [-122.416352, 47.641725], [-122.416382, 47.641767], [-122.416423, 47.641809], [-122.416451, 47.641839], [-122.41649, 47.641898], [-122.416485, 47.641926], [-122.416457, 47.641953], [-122.416459, 47.641984], [-122.416471, 47.642013], [-122.416495, 47.642043], [-122.416512, 47.642067], [-122.416562, 47.642127], [-122.416588, 47.642152], [-122.416616, 47.642174], [-122.416649, 47.642216], [-122.416666, 47.64226], [-122.416692, 47.642287], [-122.41672, 47.642309], [-122.416718, 47.642339], [-122.416705, 47.642371], [-122.416738, 47.642412], [-122.416782, 47.642469], [-122.416801, 47.642502], [-122.416861, 47.64257], [-122.416878, 47.642594], [-122.416896, 47.642615], [-122.416911, 47.642644], [-122.416925, 47.642667], [-122.416954, 47.642721], [-122.41697, 47.642764], [-122.416989, 47.642806], [-122.417, 47.642833], [-122.417026, 47.642865], [-122.41704, 47.642899], [-122.417059, 47.642925], [-122.41711, 47.642959], [-122.417157, 47.642989], [-122.41722, 47.643031], [-122.417253, 47.643069], [-122.417269, 47.643096], [-122.417284, 47.643146], [-122.417315, 47.643186], [-122.417342, 47.643203], [-122.417334, 47.643232], [-122.417293, 47.643254], [-122.41727, 47.643281], [-122.41727, 47.643309], [-122.417282, 47.643343], [-122.41731, 47.6434], [-122.417328, 47.643447], [-122.417348, 47.64353], [-122.417358, 47.643571], [-122.417366, 47.643656], [-122.417369, 47.643681], [-122.41738, 47.643744], [-122.41739, 47.643806], [-122.417387, 47.64383], [-122.417392, 47.64389], [-122.417419, 47.643915], [-122.417496, 47.643938], [-122.417522, 47.643957], [-122.417531, 47.643996], [-122.417515, 47.644027], [-122.417497, 47.644063], [-122.417498, 47.644093], [-122.417512, 47.644145], [-122.417516, 47.644201], [-122.417524, 47.644247], [-122.41753, 47.644295], [-122.417538, 47.644343], [-122.417561, 47.644398], [-122.417584, 47.644449], [-122.417604, 47.644522], [-122.417612, 47.644564], [-122.417637, 47.644602], [-122.417645, 47.644632], [-122.417653, 47.64467], [-122.417679, 47.644749], [-122.417688, 47.644793], [-122.417704, 47.644836], [-122.417725, 47.644873], [-122.417739, 47.644907], [-122.417743, 47.644954], [-122.417742, 47.645027], [-122.417731, 47.64505], [-122.417704, 47.645076], [-122.417675, 47.645179], [-122.417657, 47.645231], [-122.41764, 47.645277], [-122.417624, 47.645315], [-122.417598, 47.645366], [-122.417573, 47.645412], [-122.417552, 47.645455], [-122.417532, 47.645483], [-122.41749, 47.645513], [-122.417455, 47.645561], [-122.417442, 47.645605], [-122.417422, 47.645651], [-122.417406, 47.645717], [-122.417412, 47.645765], [-122.417416, 47.645816], [-122.417415, 47.645848], [-122.417429, 47.645873], [-122.417445, 47.645967], [-122.41744, 47.646093], [-122.417444, 47.646163], [-122.417443, 47.646255], [-122.417445, 47.646297], [-122.417458, 47.646349], [-122.41746, 47.646377], [-122.417432, 47.646408], [-122.417384, 47.646483], [-122.41737, 47.646538], [-122.417349, 47.646602], [-122.417343, 47.646627], [-122.41734, 47.646673], [-122.417347, 47.646708], [-122.417367, 47.646774], [-122.417376, 47.646831], [-122.417377, 47.646876], [-122.417382, 47.646908], [-122.4174, 47.646951], [-122.417416, 47.64703], [-122.417432, 47.647069], [-122.417445, 47.647099], [-122.417451, 47.647129], [-122.417456, 47.647198], [-122.417454, 47.647235], [-122.417444, 47.647285], [-122.417423, 47.647371], [-122.417414, 47.647428], [-122.417411, 47.647461], [-122.417396, 47.647519], [-122.417386, 47.647608], [-122.417376, 47.647666], [-122.417372, 47.647802], [-122.417371, 47.64787], [-122.417375, 47.647944], [-122.41737, 47.648015], [-122.417371, 47.648073], [-122.417376, 47.648118], [-122.417377, 47.648155], [-122.417397, 47.64819], [-122.417407, 47.64824], [-122.417405, 47.648324], [-122.417355, 47.64839], [-122.41737, 47.648464], [-122.417377, 47.648539], [-122.4174, 47.648645], [-122.417418, 47.6487], [-122.417446, 47.648789], [-122.417467, 47.648839], [-122.417494, 47.648892], [-122.417525, 47.648931], [-122.417552, 47.648969], [-122.4176, 47.649032], [-122.417618, 47.64908], [-122.417633, 47.649125], [-122.417646, 47.649152], [-122.417666, 47.649182], [-122.417699, 47.649219], [-122.417739, 47.649257], [-122.417794, 47.649303], [-122.417857, 47.64935], [-122.417889, 47.649373], [-122.417928, 47.649423], [-122.417967, 47.649461], [-122.418001, 47.649508], [-122.418024, 47.649535], [-122.418037, 47.649569], [-122.418024, 47.649606], [-122.418005, 47.649634], [-122.418026, 47.64966], [-122.418046, 47.649684], [-122.418054, 47.64972], [-122.418071, 47.649747], [-122.418114, 47.64978], [-122.418183, 47.649845], [-122.418226, 47.649899], [-122.418258, 47.649944], [-122.418291, 47.649978], [-122.418322, 47.650026], [-122.418345, 47.6501], [-122.418378, 47.650135], [-122.418449, 47.650167], [-122.418505, 47.650196], [-122.418542, 47.650219], [-122.418569, 47.650244], [-122.418602, 47.650285], [-122.41865, 47.650311], [-122.418678, 47.65034], [-122.418697, 47.650384], [-122.418722, 47.650452], [-122.418735, 47.650481], [-122.418758, 47.650526], [-122.41878, 47.650571], [-122.418796, 47.650606], [-122.418807, 47.650648], [-122.418818, 47.650684], [-122.418834, 47.650737], [-122.418845, 47.650768], [-122.418869, 47.650804], [-122.418886, 47.650845], [-122.418893, 47.65087], [-122.418896, 47.650917], [-122.418901, 47.650974], [-122.4189, 47.651056], [-122.418905, 47.651087], [-122.418924, 47.651131], [-122.418941, 47.651199], [-122.418937, 47.65124], [-122.418902, 47.651245], [-122.418897, 47.65127], [-122.41891, 47.651318], [-122.418958, 47.651377], [-122.418986, 47.651405], [-122.41903, 47.651442], [-122.419061, 47.651471], [-122.419117, 47.651524], [-122.419191, 47.65158], [-122.419224, 47.65161], [-122.41926, 47.651637], [-122.419318, 47.651689], [-122.419364, 47.651727], [-122.419445, 47.651789], [-122.419478, 47.651824], [-122.419494, 47.651857], [-122.419474, 47.651899], [-122.419427, 47.651937], [-122.419434, 47.651977], [-122.419455, 47.651996], [-122.419475, 47.652018], [-122.419495, 47.652047], [-122.419609, 47.65213], [-122.419658, 47.652166], [-122.419716, 47.652206], [-122.419803, 47.652276], [-122.419831, 47.652295], [-122.419907, 47.652332], [-122.419985, 47.652389]]]]
    },
    "properties": {
      "neighbourhood": "Briarcliff",
      "neighbourhood_group": "Magnolia"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.358447, 47.618608], [-122.357807, 47.618616], [-122.357237, 47.618607], [-122.355769, 47.6186], [-122.354292, 47.618593], [-122.35282, 47.618589], [-122.351348, 47.618585], [-122.350357, 47.61858], [-122.349877, 47.618578], [-122.348404, 47.618571], [-122.346933, 47.61857], [-122.345426, 47.61856], [-122.343884, 47.618554], [-122.342566, 47.618545], [-122.342019, 47.618551], [-122.341535, 47.618544], [-122.340124, 47.618541], [-122.336706, 47.618521], [-122.333723, 47.618539], [-122.332439, 47.618523], [-122.329341, 47.618466], [-122.328705, 47.618465], [-122.328709, 47.61844], [-122.328712, 47.618414], [-122.328715, 47.618387], [-122.328719, 47.618361], [-122.328722, 47.618334], [-122.328725, 47.618308], [-122.328729, 47.618281], [-122.328732, 47.618255], [-122.328736, 47.618228], [-122.32874, 47.618202], [-122.328744, 47.618176], [-122.328747, 47.618149], [-122.328751, 47.618123], [-122.328755, 47.618096], [-122.328759, 47.61807], [-122.328763, 47.618044], [-122.328768, 47.618017], [-122.328772, 47.617991], [-122.328776, 47.617964], [-122.32878, 47.617938], [-122.328785, 47.617912], [-122.328789, 47.617885], [-122.328793, 47.617859], [-122.328798, 47.617832], [-122.328802, 47.617806], [-122.328807, 47.61778], [-122.328812, 47.617753], [-122.328817, 47.617727], [-122.328822, 47.617701], [-122.328827, 47.617674], [-122.328831, 47.617648], [-122.328837, 47.617622], [-122.328842, 47.617595], [-122.329216, 47.616175], [-122.329255, 47.616067], [-122.329641, 47.615905], [-122.33089, 47.615385], [-122.331988, 47.614916], [-122.333873, 47.614139], [-122.335394, 47.613512], [-122.337319, 47.612701], [-122.338039, 47.612392], [-122.33866, 47.612126], [-122.339273, 47.611882], [-122.339723, 47.61154], [-122.340309, 47.611088], [-122.34047, 47.610966], [-122.341351, 47.611502], [-122.343039, 47.612522], [-122.343398, 47.612239], [-122.345122, 47.610946], [-122.346487, 47.609939], [-122.346578, 47.609998], [-122.346711, 47.610077], [-122.346821, 47.61014], [-122.346978, 47.61023], [-122.347109, 47.610308], [-122.34725, 47.610396], [-122.347314, 47.610436], [-122.3474, 47.61044], [-122.347509, 47.610443], [-122.347598, 47.610443], [-122.347649, 47.610474], [-122.347757, 47.610543], [-122.347883, 47.610614], [-122.347937, 47.610645], [-122.347984, 47.61065], [-122.34816, 47.610654], [-122.348284, 47.610661], [-122.3484, 47.610664], [-122.348631, 47.610673], [-122.34876, 47.610675], [-122.348802, 47.610688], [-122.348911, 47.610752], [-122.349047, 47.610832], [-122.34918, 47.610909], [-122.349276, 47.610966], [-122.34926, 47.611006], [-122.349286, 47.611028], [-122.349371, 47.611071], [-122.349419, 47.611097], [-122.349494, 47.611141], [-122.349523, 47.611158], [-122.349559, 47.611138], [-122.349587, 47.611154], [-122.349662, 47.611197], [-122.349774, 47.611269], [-122.349893, 47.611339], [-122.350026, 47.611412], [-122.350145, 47.611482], [-122.35018, 47.611504], [-122.350126, 47.611528], [-122.35006, 47.61154], [-122.350004, 47.611581], [-122.349971, 47.611609], [-122.349993, 47.611638], [-122.349937, 47.611683], [-122.349843, 47.611761], [-122.349771, 47.611815], [-122.349738, 47.611849], [-122.349788, 47.611893], [-122.349842, 47.611927], [-122.349904, 47.611963], [-122.350044, 47.612045], [-122.350229, 47.612155], [-122.350365, 47.612238], [-122.35042, 47.612265], [-122.350547, 47.612266], [-122.350655, 47.612265], [-122.350692, 47.612264], [-122.351024, 47.61226], [-122.351279, 47.612263], [-122.351542, 47.612263], [-122.351917, 47.612257], [-122.352256, 47.612254], [-122.352479, 47.612255], [-122.352531, 47.612258], [-122.352603, 47.612291], [-122.352818, 47.612408], [-122.353005, 47.612504], [-122.353122, 47.612567], [-122.353161, 47.612585], [-122.353177, 47.612632], [-122.353179, 47.612698], [-122.353176, 47.612756], [-122.353154, 47.612784], [-122.353064, 47.612786], [-122.352855, 47.612789], [-122.352691, 47.612792], [-122.352537, 47.612791], [-122.352386, 47.612791], [-122.352332, 47.612791], [-122.352372, 47.612819], [-122.35251, 47.612904], [-122.352639, 47.612983], [-122.352684, 47.61301], [-122.352662, 47.61304], [-122.352568, 47.613045], [-122.35239, 47.613045], [-122.352218, 47.613041], [-122.352083, 47.613039], [-122.352027, 47.613038], [-122.351967, 47.613062], [-122.351993, 47.61308], [-122.352102, 47.613134], [-122.352175, 47.61317], [-122.35224, 47.613208], [-122.352329, 47.613253], [-122.352459, 47.613333], [-122.352612, 47.613423], [-122.352729, 47.613491], [-122.352838, 47.613554], [-122.352925, 47.613566], [-122.352999, 47.613567], [-122.353051, 47.613566], [-122.353196, 47.613563], [-122.353417, 47.61356], [-122.353638, 47.613559], [-122.353849, 47.613561], [-122.354035, 47.613563], [-122.354315, 47.61356], [-122.354545, 47.613557], [-122.354787, 47.613557], [-122.354852, 47.613559], [-122.354981, 47.613564], [-122.355023, 47.613564], [-122.355105, 47.613584], [-122.355142, 47.613604], [-122.355263, 47.613667], [-122.355385, 47.613727], [-122.3555, 47.613785], [-122.355647, 47.613863], [-122.355717, 47.613896], [-122.355736, 47.613938], [-122.355738, 47.614019], [-122.355739, 47.614104], [-122.355684, 47.614128], [-122.355546, 47.614125], [-122.355382, 47.614123], [-122.355182, 47.614122], [-122.355047, 47.614124], [-122.35497, 47.614126], [-122.354863, 47.614125], [-122.354755, 47.614125], [-122.354734, 47.614187], [-122.35474, 47.614251], [-122.354696, 47.614269], [-122.354629, 47.61427], [-122.354491, 47.61427], [-122.354321, 47.614272], [-122.354193, 47.614273], [-122.354077, 47.614273], [-122.354152, 47.614328], [-122.354217, 47.614368], [-122.354285, 47.614409], [-122.354358, 47.614457], [-122.354428, 47.614494], [-122.354464, 47.614509], [-122.35452, 47.614509], [-122.354573, 47.614509], [-122.354674, 47.614512], [-122.354774, 47.614514], [-122.354852, 47.614513], [-122.354936, 47.614512], [-122.355034, 47.614514], [-122.355125, 47.614513], [-122.355235, 47.614515], [-122.355289, 47.614515], [-122.355419, 47.614515], [-122.355561, 47.614518], [-122.355666, 47.614518], [-122.355788, 47.614515], [-122.355974, 47.614515], [-122.35621, 47.614516], [-122.356392, 47.614515], [-122.356481, 47.61452], [-122.356585, 47.614519], [-122.356672, 47.61452], [-122.356711, 47.614529], [-122.356764, 47.614563], [-122.356845, 47.614608], [-122.35694, 47.614662], [-122.357028, 47.614713], [-122.357125, 47.614771], [-122.357193, 47.61481], [-122.357255, 47.614844], [-122.357314, 47.61488], [-122.357347, 47.614898], [-122.357358, 47.614941], [-122.357355, 47.614965], [-122.357317, 47.61498], [-122.357274, 47.61498], [-122.357223, 47.614982], [-122.35716, 47.61498], [-122.357106, 47.614979], [-122.357048, 47.61498], [-122.356937, 47.614977], [-122.356858, 47.614976], [-122.356779, 47.614975], [-122.356691, 47.614974], [-122.356594, 47.614973], [-122.356543, 47.614971], [-122.356467, 47.614973], [-122.356328, 47.614974], [-122.356192, 47.614973], [-122.356072, 47.614972], [-122.355969, 47.614971], [-122.355896, 47.614969], [-122.355819, 47.614969], [-122.355739, 47.614971], [-122.355679, 47.614971], [-122.355617, 47.614971], [-122.355537, 47.614971], [-122.355442, 47.614971], [-122.355397, 47.61497], [-122.355343, 47.614969], [-122.355298, 47.614969], [-122.355221, 47.614968], [-122.355276, 47.614996], [-122.355318, 47.615019], [-122.355378, 47.615051], [-122.355454, 47.615094], [-122.355509, 47.615133], [-122.355572, 47.615171], [-122.355628, 47.615208], [-122.355687, 47.615245], [-122.35577, 47.615296], [-122.355832, 47.615331], [-122.355889, 47.61536], [-122.35593, 47.615386], [-122.355971, 47.615415], [-122.356041, 47.615456], [-122.356108, 47.615494], [-122.356212, 47.615555], [-122.356307, 47.615611], [-122.356425, 47.615688], [-122.35652, 47.615749], [-122.356644, 47.61584], [-122.356709, 47.61589], [-122.356795, 47.615953], [-122.356863, 47.616006], [-122.356944, 47.616071], [-122.357038, 47.616143], [-122.357108, 47.616196], [-122.357171, 47.616244], [-122.357358, 47.616374], [-122.357494, 47.616482], [-122.357659, 47.616614], [-122.357771, 47.616706], [-122.357802, 47.616738], [-122.357842, 47.616769], [-122.357931, 47.616818], [-122.357975, 47.616838], [-122.358065, 47.61688], [-122.358164, 47.616932], [-122.358242, 47.616973], [-122.358306, 47.617], [-122.358384, 47.617026], [-122.358448, 47.617037], [-122.358536, 47.617046], [-122.358628, 47.617066], [-122.35873, 47.617091], [-122.358823, 47.617112], [-122.358901, 47.617141], [-122.358957, 47.617169], [-122.359032, 47.61721], [-122.359085, 47.61724], [-122.359155, 47.617276], [-122.359212, 47.617323], [-122.359267, 47.617364], [-122.359339, 47.617408], [-122.35941, 47.617446], [-122.35949, 47.617482], [-122.359584, 47.617525], [-122.359669, 47.61756], [-122.35976, 47.617601], [-122.359855, 47.617652], [-122.359941, 47.617706], [-122.360029, 47.617767], [-122.360082, 47.61782], [-122.360128, 47.61785], [-122.360161, 47.617871], [-122.360249, 47.617923], [-122.36032, 47.61797], [-122.360385, 47.618028], [-122.36043, 47.618086], [-122.360468, 47.618143], [-122.360484, 47.618194], [-122.360476, 47.618226], [-122.360489, 47.618275], [-122.360475, 47.618334], [-122.360475, 47.618402], [-122.360497, 47.618467], [-122.360505, 47.618515], [-122.360495, 47.618561], [-122.360477, 47.618583], [-122.359333, 47.618596], [-122.358447, 47.618608]]]]
    },
    "properties": {
      "neighbourhood": "Belltown",
      "neighbourhood_group": "Downtown"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.329255, 47.616067], [-122.329724, 47.61478], [-122.330343, 47.613395], [-122.330603, 47.612764], [-122.330931, 47.611969], [-122.330967, 47.611875], [-122.331, 47.61178], [-122.331031, 47.611684], [-122.33106, 47.611588], [-122.331085, 47.611492], [-122.331109, 47.611396], [-122.33113, 47.611299], [-122.331149, 47.611202], [-122.331164, 47.611105], [-122.331178, 47.611007], [-122.331189, 47.61091], [-122.331198, 47.610812], [-122.331203, 47.610715], [-122.331207, 47.610617], [-122.331207, 47.610519], [-122.331206, 47.610422], [-122.331202, 47.610324], [-122.331195, 47.610226], [-122.331186, 47.610129], [-122.331174, 47.610031], [-122.33116, 47.609934], [-122.331143, 47.609837], [-122.331124, 47.60974], [-122.331102, 47.609643], [-122.331078, 47.609547], [-122.331051, 47.609451], [-122.331022, 47.609355], [-122.33099, 47.60926], [-122.330956, 47.609165], [-122.330889, 47.608997], [-122.330759, 47.608748], [-122.330726, 47.608668], [-122.330718, 47.608642], [-122.330663, 47.608483], [-122.330507, 47.608208], [-122.330404, 47.608056], [-122.330242, 47.607842], [-122.330169, 47.607745], [-122.330087, 47.607646], [-122.329922, 47.60745], [-122.329845, 47.607357], [-122.329532, 47.606963], [-122.329267, 47.606625], [-122.329045, 47.606354], [-122.329004, 47.606304], [-122.328834, 47.606094], [-122.328683, 47.605908], [-122.328587, 47.605791], [-122.328412, 47.605574], [-122.328358, 47.605502], [-122.328133, 47.60524], [-122.328109, 47.605212], [-122.328063, 47.605156], [-122.329724, 47.604464], [-122.331182, 47.603859], [-122.331863, 47.603563], [-122.334289, 47.602551], [-122.334928, 47.603266], [-122.336055, 47.602809], [-122.337155, 47.60234], [-122.339411, 47.602337], [-122.339413, 47.602428], [-122.339415, 47.602488], [-122.339658, 47.602493], [-122.339843, 47.602496], [-122.339849, 47.602563], [-122.339672, 47.602565], [-122.339419, 47.602564], [-122.339421, 47.602651], [-122.339322, 47.602651], [-122.339321, 47.602762], [-122.33932, 47.602849], [-122.339499, 47.602854], [-122.339861, 47.602855], [-122.339872, 47.602927], [-122.339543, 47.602925], [-122.339409, 47.602923], [-122.339408, 47.602961], [-122.339215, 47.602959], [-122.339214, 47.603114], [-122.339211, 47.603237], [-122.339436, 47.603241], [-122.339649, 47.603247], [-122.339652, 47.603314], [-122.339464, 47.603314], [-122.339224, 47.603315], [-122.33922, 47.603421], [-122.339214, 47.603527], [-122.339005, 47.603533], [-122.33901, 47.603643], [-122.339035, 47.603708], [-122.339011, 47.603801], [-122.339011, 47.603875], [-122.339303, 47.603878], [-122.339551, 47.603877], [-122.339574, 47.603896], [-122.339841, 47.603904], [-122.340101, 47.60391], [-122.340125, 47.603985], [-122.340211, 47.604067], [-122.340318, 47.60417], [-122.340435, 47.604282], [-122.340494, 47.604338], [-122.340465, 47.604385], [-122.3403, 47.604384], [-122.340027, 47.604384], [-122.339869, 47.604384], [-122.339719, 47.604382], [-122.339504, 47.60438], [-122.339348, 47.604378], [-122.339225, 47.604378], [-122.339339, 47.604506], [-122.339403, 47.604511], [-122.339425, 47.604534], [-122.339473, 47.604538], [-122.339498, 47.604582], [-122.33964, 47.604611], [-122.339783, 47.604626], [-122.340136, 47.60463], [-122.340433, 47.604629], [-122.340435, 47.604764], [-122.340438, 47.604937], [-122.340205, 47.604939], [-122.340004, 47.604939], [-122.339804, 47.604938], [-122.33991, 47.605057], [-122.34002, 47.605182], [-122.340104, 47.605148], [-122.340231, 47.605143], [-122.340371, 47.605143], [-122.340424, 47.60518], [-122.340433, 47.605234], [-122.340571, 47.605239], [-122.340707, 47.605235], [-122.340915, 47.605237], [-122.341114, 47.605239], [-122.341312, 47.60524], [-122.34149, 47.605242], [-122.341638, 47.605242], [-122.341779, 47.605245], [-122.341889, 47.605247], [-122.341927, 47.605249], [-122.341962, 47.605271], [-122.342003, 47.605341], [-122.34205, 47.605414], [-122.342081, 47.605457], [-122.342114, 47.605506], [-122.342139, 47.605548], [-122.342156, 47.605578], [-122.342154, 47.605602], [-122.342129, 47.605624], [-122.342091, 47.605642], [-122.342048, 47.605643], [-122.34201, 47.605643], [-122.341957, 47.605643], [-122.341899, 47.605645], [-122.341847, 47.605644], [-122.341752, 47.605643], [-122.341651, 47.605641], [-122.34149, 47.60564], [-122.341329, 47.605641], [-122.341006, 47.605635], [-122.340768, 47.605634], [-122.340642, 47.60563], [-122.340511, 47.60563], [-122.340423, 47.605633], [-122.340382, 47.605631], [-122.340455, 47.605737], [-122.340529, 47.605814], [-122.340565, 47.605824], [-122.340695, 47.605833], [-122.340876, 47.605839], [-122.341025, 47.605848], [-122.341068, 47.605849], [-122.341082, 47.605877], [-122.341163, 47.605881], [-122.341261, 47.605881], [-122.341327, 47.605882], [-122.341391, 47.605881], [-122.341528, 47.605884], [-122.341585, 47.605885], [-122.341704, 47.605887], [-122.341942, 47.605888], [-122.342084, 47.605889], [-122.342227, 47.60589], [-122.342399, 47.605891], [-122.342516, 47.60589], [-122.342554, 47.605898], [-122.342575, 47.605926], [-122.342617, 47.605994], [-122.342654, 47.606047], [-122.342707, 47.606128], [-122.342756, 47.6062], [-122.342784, 47.606254], [-122.342798, 47.606278], [-122.342776, 47.6063], [-122.342737, 47.606307], [-122.342664, 47.606306], [-122.342588, 47.606305], [-122.3425, 47.606305], [-122.342398, 47.606304], [-122.3423, 47.606302], [-122.342261, 47.606307], [-122.342189, 47.606337], [-122.342138, 47.60636], [-122.342074, 47.606306], [-122.341994, 47.606302], [-122.341952, 47.606309], [-122.341868, 47.606341], [-122.34181, 47.606366], [-122.341741, 47.606395], [-122.341697, 47.606415], [-122.341667, 47.606429], [-122.341617, 47.606455], [-122.341585, 47.606476], [-122.341535, 47.606527], [-122.341507, 47.606562], [-122.341501, 47.6066], [-122.341502, 47.606659], [-122.341514, 47.606699], [-122.341551, 47.606757], [-122.341599, 47.606802], [-122.3411, 47.607007], [-122.34045, 47.607275], [-122.339537, 47.607661], [-122.339111, 47.607841], [-122.337995, 47.608293], [-122.338246, 47.608561], [-122.338483, 47.60881], [-122.339135, 47.609516], [-122.34, 47.610487], [-122.340409, 47.610929], [-122.34047, 47.610966], [-122.340309, 47.611088], [-122.339723, 47.61154], [-122.339273, 47.611882], [-122.33866, 47.612126], [-122.338039, 47.612392], [-122.337319, 47.612701], [-122.335394, 47.613512], [-122.333873, 47.614139], [-122.331988, 47.614916], [-122.33089, 47.615385], [-122.329641, 47.615905], [-122.329255, 47.616067]]]]
    },
    "properties": {
      "neighbourhood": "Central Business District",
      "neighbourhood_group": "Downtown"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.330603, 47.612764], [-122.328757, 47.613531], [-122.327406, 47.614093], [-122.326906, 47.614093], [-122.326346, 47.614087], [-122.324327, 47.614092], [-122.323583, 47.614102], [-122.323285, 47.614044], [-122.322592, 47.614053], [-122.320832, 47.614076], [-122.31945, 47.614089], [-122.319442, 47.612941], [-122.319063, 47.612934], [-122.316752, 47.612896], [-122.316749, 47.612764], [-122.316779, 47.611807], [-122.316783, 47.610664], [-122.316775, 47.610137], [-122.316784, 47.608948], [-122.316778, 47.607711], [-122.316783, 47.606375], [-122.316783, 47.606217], [-122.319416, 47.606221], [-122.319419, 47.606798], [-122.319429, 47.607777], [-122.319962, 47.607555], [-122.321123, 47.607062], [-122.321996, 47.606698], [-122.322965, 47.606297], [-122.324755, 47.605545], [-122.32658, 47.604792], [-122.327446, 47.60443], [-122.327501, 47.604492], [-122.327701, 47.604716], [-122.328063, 47.605156], [-122.328109, 47.605212], [-122.328133, 47.60524], [-122.328358, 47.605502], [-122.328412, 47.605574], [-122.328587, 47.605791], [-122.328683, 47.605908], [-122.328834, 47.606094], [-122.329004, 47.606304], [-122.329045, 47.606354], [-122.329267, 47.606625], [-122.329532, 47.606963], [-122.329845, 47.607357], [-122.329922, 47.60745], [-122.330087, 47.607646], [-122.330169, 47.607745], [-122.330242, 47.607842], [-122.330404, 47.608056], [-122.330507, 47.608208], [-122.330663, 47.608483], [-122.330718, 47.608642], [-122.330726, 47.608668], [-122.330759, 47.608748], [-122.330889, 47.608997], [-122.330956, 47.609165], [-122.33099, 47.60926], [-122.331022, 47.609355], [-122.331051, 47.609451], [-122.331078, 47.609547], [-122.331102, 47.609643], [-122.331124, 47.60974], [-122.331143, 47.609837], [-122.33116, 47.609934], [-122.331174, 47.610031], [-122.331186, 47.610129], [-122.331195, 47.610226], [-122.331202, 47.610324], [-122.331206, 47.610422], [-122.331207, 47.610519], [-122.331207, 47.610617], [-122.331203, 47.610715], [-122.331198, 47.610812], [-122.331189, 47.61091], [-122.331178, 47.611007], [-122.331164, 47.611105], [-122.331149, 47.611202], [-122.33113, 47.611299], [-122.331109, 47.611396], [-122.331085, 47.611492], [-122.33106, 47.611588], [-122.331031, 47.611684], [-122.331, 47.61178], [-122.330967, 47.611875], [-122.330931, 47.611969], [-122.330603, 47.612764]]]]
    },
    "properties": {
      "neighbourhood": "First Hill",
      "neighbourhood_group": "Downtown"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.316783, 47.606217], [-122.316783, 47.606117], [-122.316784, 47.604625], [-122.316785, 47.603143], [-122.316773, 47.601716], [-122.316772, 47.601686], [-122.316777, 47.60166], [-122.316782, 47.601634], [-122.316787, 47.601608], [-122.316792, 47.601582], [-122.316797, 47.601556], [-122.316802, 47.60153], [-122.316808, 47.601504], [-122.316814, 47.601478], [-122.316819, 47.601452], [-122.316825, 47.601426], [-122.316831, 47.6014], [-122.316836, 47.601375], [-122.316842, 47.601349], [-122.316849, 47.601323], [-122.316855, 47.601297], [-122.316861, 47.601271], [-122.316868, 47.601245], [-122.316874, 47.601219], [-122.31688, 47.601194], [-122.316887, 47.601168], [-122.316894, 47.601142], [-122.316901, 47.601116], [-122.316908, 47.60109], [-122.316915, 47.601065], [-122.316923, 47.601039], [-122.31693, 47.601013], [-122.316937, 47.600987], [-122.316945, 47.600962], [-122.316953, 47.600936], [-122.31696, 47.60091], [-122.316968, 47.600885], [-122.316976, 47.600859], [-122.316984, 47.600833], [-122.316992, 47.600808], [-122.317, 47.600782], [-122.317009, 47.600757], [-122.317017, 47.600731], [-122.317026, 47.600706], [-122.317035, 47.60068], [-122.317043, 47.600654], [-122.317052, 47.600629], [-122.317061, 47.600603], [-122.31707, 47.600578], [-122.317079, 47.600552], [-122.317088, 47.600527], [-122.317097, 47.600502], [-122.317107, 47.600476], [-122.317117, 47.600451], [-122.317126, 47.600425], [-122.317136, 47.6004], [-122.317146, 47.600375], [-122.317156, 47.600349], [-122.317166, 47.600324], [-122.317176, 47.600299], [-122.317187, 47.600272], [-122.317227, 47.599191], [-122.317634, 47.599194], [-122.318862, 47.599187], [-122.320164, 47.599179], [-122.321727, 47.59919], [-122.322283, 47.599747], [-122.322577, 47.599992], [-122.323259, 47.600484], [-122.323893, 47.600941], [-122.324967, 47.601708], [-122.324996, 47.60174], [-122.325204, 47.601971], [-122.325554, 47.602296], [-122.326486, 47.60335], [-122.327018, 47.603948], [-122.327446, 47.60443], [-122.32658, 47.604792], [-122.324755, 47.605545], [-122.322965, 47.606297], [-122.321996, 47.606698], [-122.321123, 47.607062], [-122.319962, 47.607555], [-122.319429, 47.607777], [-122.319419, 47.606798], [-122.319416, 47.606221], [-122.316783, 47.606217]]]]
    },
    "properties": {
      "neighbourhood": "Yesler Terrace",
      "neighbourhood_group": "Downtown"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.327446, 47.60443], [-122.327018, 47.603948], [-122.326486, 47.60335], [-122.325554, 47.602296], [-122.325204, 47.601971], [-122.324996, 47.60174], [-122.324967, 47.601708], [-122.325408, 47.601705], [-122.326315, 47.601711], [-122.327203, 47.601714], [-122.327842, 47.601712], [-122.328437, 47.601716], [-122.328965, 47.601715], [-122.328966, 47.600877], [-122.328966, 47.600034], [-122.328966, 47.5992], [-122.328972, 47.598422], [-122.32897, 47.597496], [-122.328976, 47.597233], [-122.329041, 47.596535], [-122.329042, 47.596482], [-122.329052, 47.595618], [-122.329046, 47.594724], [-122.329052, 47.593907], [-122.329049, 47.593517], [-122.32905, 47.592918], [-122.329043, 47.592397], [-122.329295, 47.592397], [-122.330149, 47.592397], [-122.330801, 47.592395], [-122.331576, 47.592393], [-122.331917, 47.592408], [-122.332297, 47.592403], [-122.333254, 47.592391], [-122.334167, 47.592428], [-122.335078, 47.592405], [-122.335949, 47.592388], [-122.336289, 47.592384], [-122.338024, 47.592385], [-122.338657, 47.592393], [-122.342036, 47.59262], [-122.34228, 47.593198], [-122.342248, 47.593283], [-122.34217, 47.593491], [-122.342085, 47.593714], [-122.342004, 47.593926], [-122.341905, 47.594219], [-122.341772, 47.594571], [-122.341502, 47.595286], [-122.341423, 47.59549], [-122.341333, 47.595743], [-122.34129, 47.595849], [-122.341231, 47.596003], [-122.341151, 47.596228], [-122.341081, 47.596414], [-122.340993, 47.596645], [-122.34092, 47.596838], [-122.340833, 47.597075], [-122.340744, 47.597304], [-122.340656, 47.597537], [-122.340564, 47.597783], [-122.34047, 47.598043], [-122.340397, 47.598243], [-122.340312, 47.598467], [-122.340231, 47.598678], [-122.340172, 47.598831], [-122.340121, 47.59898], [-122.3401, 47.599023], [-122.340064, 47.599057], [-122.340021, 47.599072], [-122.339959, 47.59908], [-122.339875, 47.59908], [-122.339672, 47.599081], [-122.33944, 47.599082], [-122.339247, 47.599083], [-122.338949, 47.599085], [-122.338681, 47.599085], [-122.338485, 47.599084], [-122.338282, 47.59908], [-122.337996, 47.599081], [-122.337684, 47.59908], [-122.337421, 47.599078], [-122.337362, 47.599083], [-122.337361, 47.599131], [-122.337364, 47.599206], [-122.337362, 47.599294], [-122.337361, 47.599342], [-122.33733, 47.599369], [-122.337293, 47.599375], [-122.337225, 47.599377], [-122.337192, 47.599366], [-122.337131, 47.599366], [-122.337002, 47.599366], [-122.33691, 47.599366], [-122.336852, 47.599366], [-122.336853, 47.599416], [-122.336854, 47.599479], [-122.33686, 47.599525], [-122.336944, 47.59957], [-122.337054, 47.599627], [-122.337175, 47.599667], [-122.337309, 47.5997], [-122.337439, 47.599721], [-122.337539, 47.599727], [-122.337728, 47.599728], [-122.337904, 47.599728], [-122.338091, 47.599727], [-122.338287, 47.599726], [-122.338591, 47.599725], [-122.338826, 47.599724], [-122.339059, 47.599723], [-122.339485, 47.599721], [-122.339614, 47.599724], [-122.339654, 47.599761], [-122.339656, 47.599908], [-122.339659, 47.600062], [-122.33966, 47.600239], [-122.339661, 47.600369], [-122.339626, 47.60041], [-122.339567, 47.600422], [-122.339428, 47.600423], [-122.339167, 47.600424], [-122.338835, 47.600426], [-122.338525, 47.600427], [-122.338247, 47.600429], [-122.337956, 47.60043], [-122.33777, 47.600431], [-122.337628, 47.600431], [-122.337497, 47.600445], [-122.33742, 47.600459], [-122.337395, 47.600425], [-122.337295, 47.600426], [-122.337081, 47.600426], [-122.3369, 47.600427], [-122.336857, 47.600431], [-122.336862, 47.600488], [-122.337003, 47.600487], [-122.337248, 47.600486], [-122.337301, 47.600469], [-122.337332, 47.600482], [-122.337399, 47.600489], [-122.337423, 47.600528], [-122.337421, 47.600574], [-122.337353, 47.600582], [-122.337309, 47.600598], [-122.337245, 47.600598], [-122.33706, 47.600577], [-122.337004, 47.600577], [-122.33686, 47.600578], [-122.33686, 47.600649], [-122.33686, 47.600751], [-122.33685, 47.600799], [-122.336689, 47.6008], [-122.336443, 47.600802], [-122.336271, 47.600802], [-122.336296, 47.600852], [-122.336328, 47.600969], [-122.336336, 47.601021], [-122.336255, 47.601031], [-122.336319, 47.601159], [-122.336392, 47.601265], [-122.336463, 47.60136], [-122.336553, 47.601457], [-122.336662, 47.601574], [-122.336759, 47.601575], [-122.337039, 47.601574], [-122.337322, 47.601571], [-122.337598, 47.601572], [-122.337888, 47.601571], [-122.337955, 47.601556], [-122.33801, 47.601609], [-122.337978, 47.601632], [-122.337978, 47.601722], [-122.337885, 47.601726], [-122.337901, 47.601764], [-122.338274, 47.601762], [-122.338648, 47.60176], [-122.338984, 47.601759], [-122.339243, 47.601758], [-122.339262, 47.60186], [-122.339264, 47.601981], [-122.339415, 47.601982], [-122.339413, 47.602089], [-122.33941, 47.602249], [-122.339411, 47.602337], [-122.337155, 47.60234], [-122.336055, 47.602809], [-122.334928, 47.603266], [-122.334289, 47.602551], [-122.331863, 47.603563], [-122.331182, 47.603859], [-122.329724, 47.604464], [-122.328063, 47.605156], [-122.327701, 47.604716], [-122.327501, 47.604492], [-122.327446, 47.60443]]]]
    },
    "properties": {
      "neighbourhood": "Pioneer Square",
      "neighbourhood_group": "Downtown"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.387222, 47.544869], [-122.386164, 47.545048], [-122.38542, 47.545165], [-122.384976, 47.545255], [-122.384941, 47.545263], [-122.384906, 47.545271], [-122.384871, 47.54528], [-122.384835, 47.545289], [-122.384801, 47.545298], [-122.384766, 47.545307], [-122.384732, 47.545317], [-122.384698, 47.545327], [-122.384664, 47.545338], [-122.38463, 47.545349], [-122.384596, 47.54536], [-122.384563, 47.545371], [-122.384529, 47.545382], [-122.384496, 47.545394], [-122.384464, 47.545406], [-122.384431, 47.545419], [-122.384399, 47.545431], [-122.384367, 47.545444], [-122.384335, 47.545457], [-122.384303, 47.545471], [-122.384272, 47.545484], [-122.384241, 47.545498], [-122.38421, 47.545513], [-122.384179, 47.545527], [-122.384149, 47.545542], [-122.384119, 47.545557], [-122.384089, 47.545572], [-122.38406, 47.545588], [-122.38403, 47.545603], [-122.384001, 47.545619], [-122.383964, 47.54564], [-122.383942, 47.545661], [-122.383914, 47.545678], [-122.383887, 47.545696], [-122.38386, 47.545713], [-122.383834, 47.545731], [-122.383808, 47.545749], [-122.383782, 47.545768], [-122.383757, 47.545787], [-122.383732, 47.545806], [-122.383708, 47.545825], [-122.383685, 47.545844], [-122.383661, 47.545864], [-122.383639, 47.545884], [-122.383616, 47.545904], [-122.383594, 47.545925], [-122.383573, 47.545945], [-122.383551, 47.545966], [-122.383531, 47.545987], [-122.383511, 47.546009], [-122.383491, 47.54603], [-122.383472, 47.546052], [-122.383453, 47.546074], [-122.383435, 47.546096], [-122.383418, 47.546118], [-122.383401, 47.546141], [-122.383384, 47.546163], [-122.383368, 47.546186], [-122.383353, 47.546209], [-122.383338, 47.546232], [-122.383323, 47.546256], [-122.383309, 47.546279], [-122.383296, 47.546303], [-122.383283, 47.546326], [-122.383128, 47.546633], [-122.382431, 47.546615], [-122.380479, 47.546587], [-122.380238, 47.546576], [-122.378901, 47.54655], [-122.3776, 47.546518], [-122.376415, 47.546541], [-122.376509, 47.543661], [-122.376532, 47.541561], [-122.37659, 47.539472], [-122.376622, 47.537397], [-122.376655, 47.535329], [-122.376653, 47.533252], [-122.37666, 47.531181], [-122.376667, 47.52911], [-122.376653, 47.52829], [-122.377511, 47.52831], [-122.379127, 47.528336], [-122.381152, 47.528396], [-122.381885, 47.528398], [-122.384561, 47.52847], [-122.384965, 47.52848], [-122.385689, 47.528498], [-122.386544, 47.528518], [-122.387393, 47.528542], [-122.38739, 47.529014], [-122.387377, 47.529936], [-122.387372, 47.530928], [-122.387356, 47.531944], [-122.387344, 47.532924], [-122.38878, 47.532928], [-122.38863, 47.533708], [-122.388492, 47.534384], [-122.388482, 47.534426], [-122.388525, 47.534941], [-122.388525, 47.534983], [-122.388538, 47.535075], [-122.388541, 47.535103], [-122.388498, 47.535131], [-122.388488, 47.535178], [-122.388494, 47.535205], [-122.388544, 47.535708], [-122.388557, 47.535829], [-122.388563, 47.535931], [-122.388607, 47.536662], [-122.388627, 47.536994], [-122.388497, 47.537258], [-122.388551, 47.537527], [-122.388031, 47.538221], [-122.388001, 47.538261], [-122.387682, 47.538359], [-122.387409, 47.538446], [-122.387284, 47.53853], [-122.387782, 47.538416], [-122.387943, 47.538379], [-122.389321, 47.538008], [-122.389757, 47.538013], [-122.389863, 47.538014], [-122.389893, 47.53699], [-122.392922, 47.537008], [-122.39404, 47.537006], [-122.395332, 47.537012], [-122.396246, 47.53701], [-122.396383, 47.537008], [-122.39641, 47.537064], [-122.396426, 47.537097], [-122.396443, 47.537139], [-122.396494, 47.537229], [-122.396524, 47.537291], [-122.396572, 47.537371], [-122.396604, 47.537429], [-122.396658, 47.537522], [-122.396696, 47.53761], [-122.396718, 47.537663], [-122.396748, 47.537731], [-122.396768, 47.537791], [-122.396772, 47.537816], [-122.396774, 47.537958], [-122.396771, 47.538021], [-122.396765, 47.538068], [-122.396749, 47.538154], [-122.396742, 47.538228], [-122.396739, 47.538282], [-122.39673, 47.53836], [-122.396726, 47.53844], [-122.396723, 47.538516], [-122.396722, 47.538604], [-122.396713, 47.538687], [-122.396715, 47.538726], [-122.396723, 47.538788], [-122.396726, 47.538868], [-122.39673, 47.538904], [-122.396756, 47.539005], [-122.396769, 47.539076], [-122.396778, 47.539102], [-122.396801, 47.539135], [-122.396821, 47.539157], [-122.396847, 47.539175], [-122.396924, 47.539211], [-122.396975, 47.539267], [-122.397019, 47.539323], [-122.397061, 47.539366], [-122.397084, 47.539385], [-122.397134, 47.539421], [-122.397188, 47.539452], [-122.39722, 47.539476], [-122.397272, 47.539526], [-122.397308, 47.539547], [-122.397347, 47.539548], [-122.397387, 47.539567], [-122.397415, 47.539608], [-122.397427, 47.539644], [-122.397443, 47.539703], [-122.397468, 47.539768], [-122.397475, 47.539799], [-122.397488, 47.539884], [-122.397496, 47.539907], [-122.397504, 47.539939], [-122.396254, 47.540851], [-122.395535, 47.541604], [-122.394807, 47.542548], [-122.394336, 47.543167], [-122.390933, 47.543137], [-122.390936, 47.543333], [-122.39093, 47.54396], [-122.390931, 47.543985], [-122.39093, 47.544011], [-122.390927, 47.544036], [-122.390922, 47.544061], [-122.390915, 47.544086], [-122.390907, 47.54411], [-122.390896, 47.544135], [-122.390881, 47.544158], [-122.390863, 47.54418], [-122.390843, 47.544202], [-122.390821, 47.544222], [-122.390797, 47.544241], [-122.39077, 47.544259], [-122.390742, 47.544275], [-122.390712, 47.54429], [-122.390674, 47.544305], [-122.39064, 47.544317], [-122.390606, 47.544327], [-122.390571, 47.544335], [-122.389874, 47.544445], [-122.389321, 47.544521], [-122.388873, 47.544589], [-122.388428, 47.544662], [-122.387983, 47.54474], [-122.387222, 47.544869]]]]
    },
    "properties": {
      "neighbourhood": "Gatewood",
      "neighbourhood_group": "West Seattle"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.358396, 47.575453], [-122.358399, 47.575497], [-122.358398, 47.575541], [-122.358397, 47.575603], [-122.358397, 47.575651], [-122.358396, 47.575705], [-122.358399, 47.575787], [-122.358398, 47.575858], [-122.358397, 47.57594], [-122.358397, 47.576017], [-122.358402, 47.576183], [-122.358404, 47.576256], [-122.358407, 47.576315], [-122.358403, 47.57636], [-122.358402, 47.576398], [-122.358404, 47.576463], [-122.358404, 47.576515], [-122.358405, 47.57658], [-122.358406, 47.576636], [-122.358409, 47.576698], [-122.35841, 47.576747], [-122.358412, 47.576797], [-122.358412, 47.57685], [-122.358413, 47.576878], [-122.358361, 47.576864], [-122.358322, 47.576836], [-122.35829, 47.576853], [-122.358256, 47.576881], [-122.358166, 47.576936], [-122.358049, 47.57699], [-122.357929, 47.577055], [-122.357901, 47.577077], [-122.357886, 47.577117], [-122.357888, 47.577167], [-122.357886, 47.5772], [-122.357894, 47.577234], [-122.357902, 47.577261], [-122.357904, 47.5773], [-122.357897, 47.577359], [-122.357878, 47.577388], [-122.357846, 47.577412], [-122.357814, 47.577439], [-122.357766, 47.577473], [-122.357731, 47.577503], [-122.357733, 47.577536], [-122.35778, 47.577576], [-122.357822, 47.577607], [-122.35785, 47.577624], [-122.357877, 47.577651], [-122.357875, 47.577702], [-122.357865, 47.577759], [-122.357863, 47.577788], [-122.357909, 47.577771], [-122.357938, 47.577746], [-122.357967, 47.577727], [-122.358017, 47.577755], [-122.35805, 47.577779], [-122.358086, 47.577802], [-122.358116, 47.577827], [-122.358149, 47.577848], [-122.35818, 47.577835], [-122.358182, 47.577802], [-122.358182, 47.577761], [-122.358182, 47.577685], [-122.358181, 47.57762], [-122.358181, 47.577549], [-122.358182, 47.577471], [-122.358182, 47.577411], [-122.358186, 47.577341], [-122.358186, 47.577281], [-122.358189, 47.577238], [-122.358228, 47.577236], [-122.358263, 47.577261], [-122.358309, 47.577292], [-122.358352, 47.577322], [-122.358385, 47.577344], [-122.358393, 47.577377], [-122.358394, 47.577432], [-122.358393, 47.5775], [-122.358393, 47.577576], [-122.358394, 47.57763], [-122.358393, 47.577693], [-122.358391, 47.577759], [-122.35839, 47.577828], [-122.358391, 47.577887], [-122.358391, 47.577941], [-122.358388, 47.578057], [-122.358387, 47.578182], [-122.358387, 47.578229], [-122.358388, 47.578302], [-122.358387, 47.578378], [-122.358389, 47.578441], [-122.358387, 47.578499], [-122.358389, 47.578562], [-122.358385, 47.578633], [-122.358387, 47.578766], [-122.358387, 47.578873], [-122.358384, 47.578962], [-122.358367, 47.579029], [-122.358306, 47.579], [-122.358257, 47.578964], [-122.358207, 47.57893], [-122.358157, 47.578896], [-122.358108, 47.578864], [-122.358062, 47.578832], [-122.358007, 47.578793], [-122.357951, 47.578756], [-122.357898, 47.578722], [-122.357846, 47.578687], [-122.357804, 47.578662], [-122.357775, 47.578648], [-122.357736, 47.57867], [-122.3577, 47.578699], [-122.35764, 47.578734], [-122.357578, 47.578764], [-122.357539, 47.578789], [-122.357531, 47.57882], [-122.357609, 47.57888], [-122.357653, 47.578914], [-122.357703, 47.57895], [-122.3578, 47.579012], [-122.357874, 47.579065], [-122.35791, 47.579089], [-122.357973, 47.579132], [-122.358034, 47.579172], [-122.358108, 47.579222], [-122.358176, 47.579267], [-122.358252, 47.579316], [-122.35832, 47.579361], [-122.358352, 47.579384], [-122.358376, 47.579402], [-122.358378, 47.579453], [-122.358375, 47.579492], [-122.358374, 47.57953], [-122.35833, 47.579519], [-122.358296, 47.579496], [-122.358248, 47.579463], [-122.358189, 47.57942], [-122.358133, 47.57938], [-122.358081, 47.579345], [-122.358044, 47.579318], [-122.358015, 47.579303], [-122.357966, 47.579334], [-122.357915, 47.579368], [-122.357872, 47.5794], [-122.357831, 47.57943], [-122.35785, 47.579458], [-122.357878, 47.579477], [-122.35792, 47.579507], [-122.357965, 47.579538], [-122.358023, 47.579576], [-122.358093, 47.579624], [-122.358166, 47.579675], [-122.358238, 47.579726], [-122.358287, 47.579754], [-122.358331, 47.579784], [-122.358364, 47.579809], [-122.358389, 47.579835], [-122.358388, 47.579866], [-122.358385, 47.579901], [-122.358387, 47.579943], [-122.358384, 47.579998], [-122.358382, 47.580054], [-122.358384, 47.580123], [-122.358384, 47.580191], [-122.358387, 47.580243], [-122.358385, 47.580277], [-122.358353, 47.580311], [-122.358323, 47.580334], [-122.358288, 47.58032], [-122.358232, 47.580283], [-122.358125, 47.580209], [-122.358032, 47.580149], [-122.357929, 47.580076], [-122.35783, 47.580006], [-122.357742, 47.579947], [-122.357695, 47.57992], [-122.357661, 47.57993], [-122.357606, 47.579958], [-122.35754, 47.580003], [-122.3575, 47.580055], [-122.357453, 47.580098], [-122.357479, 47.580133], [-122.357522, 47.58016], [-122.357596, 47.580212], [-122.357691, 47.580276], [-122.357779, 47.580335], [-122.357873, 47.580392], [-122.357938, 47.580447], [-122.358029, 47.580504], [-122.358131, 47.580573], [-122.358204, 47.580619], [-122.358249, 47.580651], [-122.358278, 47.580667], [-122.35831, 47.580687], [-122.358345, 47.58071], [-122.358373, 47.58073], [-122.358385, 47.580757], [-122.358387, 47.580798], [-122.358392, 47.580845], [-122.358391, 47.580941], [-122.358389, 47.581037], [-122.358386, 47.581135], [-122.358387, 47.58124], [-122.358387, 47.581354], [-122.358389, 47.581423], [-122.358391, 47.58147], [-122.358391, 47.581506], [-122.358353, 47.5815], [-122.358302, 47.581466], [-122.358213, 47.581403], [-122.358117, 47.58134], [-122.358041, 47.581289], [-122.357981, 47.581253], [-122.357946, 47.58123], [-122.35791, 47.581221], [-122.35789, 47.581245], [-122.357883, 47.581277], [-122.357883, 47.581338], [-122.357886, 47.581416], [-122.357884, 47.581479], [-122.35789, 47.581524], [-122.357889, 47.581564], [-122.357886, 47.581597], [-122.357888, 47.581661], [-122.357881, 47.581771], [-122.35788, 47.58203], [-122.357883, 47.582125], [-122.357882, 47.582219], [-122.357884, 47.582311], [-122.357883, 47.582396], [-122.357884, 47.582499], [-122.357882, 47.582587], [-122.357883, 47.58268], [-122.357882, 47.582707], [-122.357882, 47.582843], [-122.357883, 47.582945], [-122.357892, 47.58303], [-122.3579, 47.583111], [-122.357906, 47.583174], [-122.357917, 47.583222], [-122.357935, 47.583271], [-122.357941, 47.5833], [-122.357937, 47.583326], [-122.357999, 47.583327], [-122.35806, 47.58332], [-122.358096, 47.583322], [-122.358111, 47.583355], [-122.35812, 47.58339], [-122.358038, 47.583421], [-122.357934, 47.583437], [-122.357835, 47.583452], [-122.357726, 47.583467], [-122.357599, 47.583486], [-122.357475, 47.583505], [-122.357435, 47.583512], [-122.35744, 47.583556], [-122.357459, 47.583611], [-122.357477, 47.583645], [-122.357514, 47.583706], [-122.357541, 47.583805], [-122.357546, 47.583831], [-122.357614, 47.583836], [-122.357649, 47.58383], [-122.35777, 47.583812], [-122.357908, 47.583792], [-122.358079, 47.583766], [-122.358189, 47.583745], [-122.358268, 47.583736], [-122.358307, 47.58373], [-122.358342, 47.58374], [-122.358352, 47.583768], [-122.358359, 47.583793], [-122.358366, 47.583819], [-122.358276, 47.583843], [-122.358166, 47.58386], [-122.358008, 47.583885], [-122.357861, 47.583907], [-122.357718, 47.583933], [-122.357581, 47.583956], [-122.357391, 47.583988], [-122.357236, 47.584012], [-122.357095, 47.584035], [-122.356897, 47.584067], [-122.356751, 47.584089], [-122.356599, 47.58411], [-122.356513, 47.584125], [-122.356461, 47.584133], [-122.356414, 47.584145], [-122.356366, 47.584169], [-122.356317, 47.584191], [-122.356291, 47.584209], [-122.356262, 47.584228], [-122.356268, 47.584254], [-122.356283, 47.58429], [-122.356317, 47.58438], [-122.356353, 47.584486], [-122.356387, 47.584588], [-122.356439, 47.584745], [-122.356468, 47.584825], [-122.356492, 47.584915], [-122.356508, 47.584984], [-122.356523, 47.585013], [-122.356542, 47.585037], [-122.356573, 47.585048], [-122.356648, 47.585055], [-122.35671, 47.585062], [-122.356745, 47.58506], [-122.356793, 47.585054], [-122.35687, 47.585037], [-122.356999, 47.585014], [-122.357126, 47.584993], [-122.357256, 47.584971], [-122.357372, 47.58496], [-122.357428, 47.584951], [-122.357532, 47.584937], [-122.357655, 47.584918], [-122.357791, 47.584896], [-122.357916, 47.584875], [-122.358058, 47.584846], [-122.358155, 47.584835], [-122.358212, 47.584831], [-122.35825, 47.584837], [-122.35834, 47.584838], [-122.358388, 47.58484], [-122.358393, 47.584897], [-122.358394, 47.584971], [-122.358394, 47.585105], [-122.358393, 47.58523], [-122.358391, 47.585357], [-122.358393, 47.585444], [-122.35839, 47.585558], [-122.358387, 47.585676], [-122.358388, 47.585796], [-122.35839, 47.585888], [-122.358391, 47.585983], [-122.358388, 47.586076], [-122.358388, 47.586203], [-122.358383, 47.586303], [-122.358381, 47.586408], [-122.358387, 47.586497], [-122.358384, 47.586588], [-122.358383, 47.586622], [-122.358308, 47.586642], [-122.358255, 47.586641], [-122.358213, 47.586637], [-122.358177, 47.586628], [-122.358104, 47.586628], [-122.358045, 47.58663], [-122.357927, 47.586633], [-122.357881, 47.586636], [-122.35788, 47.586676], [-122.357877, 47.586741], [-122.357876, 47.586796], [-122.357877, 47.586825], [-122.357878, 47.58685], [-122.357754, 47.586851], [-122.357637, 47.586851], [-122.357476, 47.586852], [-122.357339, 47.586853], [-122.357211, 47.586855], [-122.357078, 47.586853], [-122.356917, 47.586852], [-122.356767, 47.586854], [-122.356636, 47.586854], [-122.356485, 47.586856], [-122.356344, 47.586856], [-122.356201, 47.586859], [-122.356073, 47.586862], [-122.35597, 47.586865], [-122.35593, 47.5869], [-122.355932, 47.586941], [-122.355935, 47.587011], [-122.355936, 47.587042], [-122.355935, 47.587071], [-122.355848, 47.587077], [-122.35576, 47.587078], [-122.355572, 47.587081], [-122.355461, 47.587083], [-122.355355, 47.587083], [-122.355315, 47.587084], [-122.355287, 47.587036], [-122.355287, 47.586992], [-122.355288, 47.586951], [-122.355283, 47.586908], [-122.355195, 47.5869], [-122.355158, 47.586887], [-122.355091, 47.586866], [-122.355009, 47.586846], [-122.354933, 47.58685], [-122.354861, 47.58687], [-122.354783, 47.586889], [-122.354704, 47.586901], [-122.354641, 47.586916], [-122.354538, 47.586935], [-122.354459, 47.586928], [-122.354365, 47.586953], [-122.354268, 47.586956], [-122.354166, 47.586975], [-122.354084, 47.586981], [-122.354001, 47.586995], [-122.353758, 47.587037], [-122.353705, 47.587049], [-122.353632, 47.587072], [-122.35359, 47.587085], [-122.353559, 47.587099], [-122.353491, 47.587104], [-122.353427, 47.587102], [-122.353338, 47.587121], [-122.353237, 47.587136], [-122.353053, 47.587166], [-122.352994, 47.587168], [-122.35292, 47.587173], [-122.352726, 47.587202], [-122.352407, 47.587253], [-122.352188, 47.587288], [-122.35198, 47.587321], [-122.351687, 47.587369], [-122.351403, 47.587414], [-122.351246, 47.58744], [-122.351193, 47.587448], [-122.351137, 47.587463], [-122.351084, 47.587467], [-122.351014, 47.587485], [-122.350935, 47.587494], [-122.350893, 47.587514], [-122.350864, 47.58755], [-122.350809, 47.587573], [-122.350738, 47.587591], [-122.350662, 47.587613], [-122.350578, 47.587631], [-122.350519, 47.58763], [-122.350514, 47.587692], [-122.350438, 47.587704], [-122.350362, 47.587713], [-122.350312, 47.587756], [-122.35022, 47.587771], [-122.350091, 47.587793], [-122.35003, 47.587805], [-122.350025, 47.587862], [-122.350027, 47.588048], [-122.350025, 47.588234], [-122.350024, 47.588575], [-122.350025, 47.588839], [-122.350021, 47.589138], [-122.350017, 47.589399], [-122.350021, 47.589634], [-122.350023, 47.589797], [-122.350023, 47.589989], [-122.349969, 47.589993], [-122.349917, 47.589994], [-122.349914, 47.589937], [-122.349909, 47.5898], [-122.349906, 47.589633], [-122.34991, 47.589456], [-122.349913, 47.589275], [-122.349907, 47.589144], [-122.349797, 47.589143], [-122.349792, 47.589088], [-122.349797, 47.588974], [-122.349798, 47.588921], [-122.349663, 47.588971], [-122.349531, 47.589012], [-122.349316, 47.589099], [-122.34911, 47.589179], [-122.348982, 47.589234], [-122.348796, 47.589311], [-122.348634, 47.589376], [-122.348461, 47.589448], [-122.348271, 47.589529], [-122.348144, 47.589577], [-122.348032, 47.589621], [-122.347872, 47.589697], [-122.347734, 47.58975], [-122.347565, 47.589817], [-122.347452, 47.589868], [-122.347328, 47.589912], [-122.347196, 47.58998], [-122.347098, 47.590018], [-122.346976, 47.590074], [-122.346872, 47.590114], [-122.346781, 47.590152], [-122.346727, 47.590168], [-122.346668, 47.590182], [-122.346594, 47.590191], [-122.346547, 47.590191], [-122.346492, 47.59018], [-122.34645, 47.590178], [-122.346443, 47.590307], [-122.346443, 47.590437], [-122.34644, 47.590487], [-122.346206, 47.590492], [-122.346022, 47.590486], [-122.346021, 47.590354], [-122.346018, 47.5901], [-122.346014, 47.589845], [-122.346021, 47.589517], [-122.346017, 47.589187], [-122.346026, 47.588839], [-122.346022, 47.588569], [-122.346018, 47.588318], [-122.346015, 47.588102], [-122.346016, 47.587793], [-122.346015, 47.587607], [-122.346015, 47.587398], [-122.346016, 47.587167], [-122.34602, 47.586968], [-122.346026, 47.586803], [-122.346029, 47.586588], [-122.34602, 47.586409], [-122.346021, 47.586033], [-122.346022, 47.585303], [-122.346024, 47.584344], [-122.346025, 47.583532], [-122.346026, 47.582717], [-122.346025, 47.582336], [-122.346024, 47.580894], [-122.34602, 47.579845], [-122.346019, 47.579698], [-122.34602, 47.57957], [-122.346019, 47.579405], [-122.346019, 47.579194], [-122.34602, 47.57898], [-122.34602, 47.578828], [-122.34602, 47.578569], [-122.34602, 47.578392], [-122.34602, 47.578186], [-122.34602, 47.577969], [-122.346021, 47.577802], [-122.346021, 47.577651], [-122.346021, 47.577471], [-122.346021, 47.577296], [-122.346022, 47.577123], [-122.346021, 47.576961], [-122.346021, 47.576813], [-122.346021, 47.5767], [-122.346021, 47.576577], [-122.346021, 47.576418], [-122.346021, 47.576233], [-122.346022, 47.576047], [-122.346022, 47.575873], [-122.346022, 47.575729], [-122.346021, 47.575563], [-122.346022, 47.575415], [-122.346021, 47.575305], [-122.346023, 47.575163], [-122.346024, 47.575021], [-122.346024, 47.57487], [-122.346024, 47.574734], [-122.346024, 47.574584], [-122.346024, 47.574472], [-122.346022, 47.574288], [-122.346021, 47.574116], [-122.346021, 47.573966], [-122.346021, 47.573831], [-122.34602, 47.573731], [-122.346018, 47.573658], [-122.345976, 47.573657], [-122.345918, 47.573658], [-122.34586, 47.573657], [-122.345759, 47.573648], [-122.345665, 47.573643], [-122.345579, 47.573633], [-122.345512, 47.573611], [-122.345475, 47.573589], [-122.345455, 47.573547], [-122.34544, 47.573481], [-122.345439, 47.573444], [-122.345394, 47.573435], [-122.345409, 47.57339], [-122.345439, 47.573318], [-122.345481, 47.573193], [-122.345548, 47.573016], [-122.345604, 47.572859], [-122.345746, 47.572596], [-122.345838, 47.572358], [-122.345932, 47.572144], [-122.34603, 47.57195], [-122.346013, 47.571903], [-122.345984, 47.571838], [-122.345996, 47.571794], [-122.345977, 47.57177], [-122.346115, 47.571593], [-122.346256, 47.571387], [-122.346263, 47.571301], [-122.346327, 47.571209], [-122.346306, 47.571105], [-122.346302, 47.57101], [-122.346332, 47.570921], [-122.346389, 47.570856], [-122.346398, 47.5708], [-122.34637, 47.570776], [-122.346306, 47.570726], [-122.346236, 47.570653], [-122.346162, 47.570577], [-122.346135, 47.570524], [-122.34616, 47.570429], [-122.346221, 47.570254], [-122.346303, 47.570037], [-122.34636, 47.569882], [-122.346424, 47.569721], [-122.346473, 47.56958], [-122.346544, 47.569456], [-122.346573, 47.569357], [-122.346613, 47.569304], [-122.346703, 47.569272], [-122.346819, 47.569268], [-122.346966, 47.569267], [-122.34711, 47.569264], [-122.347333, 47.569257], [-122.347458, 47.569244], [-122.34762, 47.569239], [-122.347733, 47.569237], [-122.347869, 47.569238], [-122.348003, 47.569253], [-122.348166, 47.569276], [-122.348342, 47.569291], [-122.348515, 47.569303], [-122.348682, 47.569315], [-122.348867, 47.569353], [-122.348981, 47.569395], [-122.34912, 47.569479], [-122.349262, 47.569582], [-122.349397, 47.569678], [-122.349562, 47.569803], [-122.349727, 47.569917], [-122.349878, 47.570032], [-122.350006, 47.570125], [-122.350086, 47.570183], [-122.350186, 47.570248], [-122.350281, 47.570322], [-122.350345, 47.570372], [-122.350371, 47.570418], [-122.350386, 47.570468], [-122.350406, 47.570504], [-122.350462, 47.570515], [-122.350597, 47.570544], [-122.350713, 47.570576], [-122.350793, 47.570602], [-122.350855, 47.570621], [-122.350972, 47.570602], [-122.351071, 47.570566], [-122.35118, 47.570531], [-122.351247, 47.570509], [-122.351348, 47.570497], [-122.35143, 47.570541], [-122.351447, 47.570576], [-122.351381, 47.570607], [-122.351392, 47.570642], [-122.351454, 47.570693], [-122.351506, 47.570737], [-122.35155, 47.570744], [-122.351665, 47.570745], [-122.351728, 47.570745], [-122.351819, 47.570752], [-122.351879, 47.570765], [-122.351911, 47.570785], [-122.35195, 47.570841], [-122.351954, 47.570905], [-122.351976, 47.57093], [-122.352097, 47.570994], [-122.352226, 47.571073], [-122.352296, 47.571175], [-122.352411, 47.571217], [-122.352552, 47.571245], [-122.352675, 47.571287], [-122.352745, 47.571372], [-122.352747, 47.571427], [-122.352782, 47.571486], [-122.352895, 47.57156], [-122.353004, 47.571621], [-122.353071, 47.571695], [-122.353096, 47.571749], [-122.35321, 47.571755], [-122.353355, 47.571756], [-122.353543, 47.571885], [-122.353651, 47.571971], [-122.353735, 47.57205], [-122.353672, 47.572083], [-122.353731, 47.572129], [-122.353744, 47.57217], [-122.353848, 47.572248], [-122.353884, 47.572283], [-122.353938, 47.572351], [-122.354021, 47.572425], [-122.354083, 47.572491], [-122.354089, 47.57254], [-122.354114, 47.572615], [-122.354196, 47.572678], [-122.354309, 47.572755], [-122.354403, 47.572807], [-122.354466, 47.572849], [-122.354539, 47.572905], [-122.354588, 47.572956], [-122.354621, 47.572976], [-122.354667, 47.573016], [-122.354697, 47.573038], [-122.354743, 47.573065], [-122.354776, 47.573081], [-122.354806, 47.573104], [-122.354838, 47.573134], [-122.354876, 47.573177], [-122.354976, 47.573274], [-122.355003, 47.573294], [-122.355054, 47.573307], [-122.355105, 47.573323], [-122.355147, 47.573341], [-122.355175, 47.573361], [-122.355206, 47.573394], [-122.355239, 47.573417], [-122.355271, 47.573438], [-122.355308, 47.573467], [-122.355415, 47.573545], [-122.355448, 47.573568], [-122.355493, 47.573623], [-122.355517, 47.573649], [-122.355561, 47.573679], [-122.355629, 47.573707], [-122.355674, 47.573727], [-122.355713, 47.573748], [-122.35575, 47.573771], [-122.355802, 47.573801], [-122.355837, 47.573825], [-122.355876, 47.573853], [-122.355946, 47.573895], [-122.355986, 47.573921], [-122.356049, 47.573949], [-122.356086, 47.573965], [-122.356135, 47.574001], [-122.356197, 47.574065], [-122.356231, 47.574106], [-122.356253, 47.574127], [-122.35628, 47.574161], [-122.356309, 47.57418], [-122.35639, 47.574191], [-122.356454, 47.574201], [-122.356494, 47.574205], [-122.356555, 47.574185], [-122.356602, 47.574153], [-122.35664, 47.574136], [-122.356675, 47.574155], [-122.356717, 47.574187], [-122.356764, 47.574224], [-122.356809, 47.574258], [-122.35686, 47.574295], [-122.356924, 47.574343], [-122.35698, 47.574382], [-122.357034, 47.574424], [-122.357089, 47.574463], [-122.357133, 47.574499], [-122.35719, 47.574539], [-122.357246, 47.57458], [-122.357276, 47.574605], [-122.357327, 47.574642], [-122.357396, 47.574696], [-122.357429, 47.57472], [-122.357489, 47.574766], [-122.357547, 47.574808], [-122.357601, 47.574847], [-122.357648, 47.574878], [-122.357686, 47.574907], [-122.357752, 47.574958], [-122.357818, 47.575006], [-122.357886, 47.575056], [-122.357951, 47.575105], [-122.358009, 47.575153], [-122.358064, 47.575186], [-122.358092, 47.575209], [-122.35814, 47.575244], [-122.358192, 47.575284], [-122.358253, 47.575331], [-122.358305, 47.575365], [-122.358353, 47.575402], [-122.358378, 47.575421], [-122.358396, 47.575453]]]]
    },
    "properties": {
      "neighbourhood": "Harbor Island",
      "neighbourhood_group": "Other neighborhoods"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.376896, 47.517489], [-122.375998, 47.517474], [-122.374575, 47.517462], [-122.373427, 47.517454], [-122.371366, 47.517427], [-122.371338, 47.516993], [-122.371284, 47.515998], [-122.371219, 47.514957], [-122.371125, 47.513715], [-122.371079, 47.512969], [-122.370928, 47.510934], [-122.370875, 47.510313], [-122.370848, 47.5098], [-122.370874, 47.509116], [-122.370874, 47.508323], [-122.370879, 47.508105], [-122.370791, 47.50785], [-122.370703, 47.507587], [-122.370716, 47.50726], [-122.370625, 47.506904], [-122.370487, 47.506486], [-122.370402, 47.505943], [-122.370395, 47.505702], [-122.370498, 47.505319], [-122.370552, 47.504813], [-122.37055, 47.503909], [-122.370551, 47.503881], [-122.370554, 47.503854], [-122.370557, 47.503826], [-122.370562, 47.503799], [-122.370567, 47.503772], [-122.370574, 47.503745], [-122.370583, 47.503718], [-122.370591, 47.503691], [-122.370601, 47.503664], [-122.370612, 47.503638], [-122.370624, 47.503611], [-122.370637, 47.503585], [-122.370651, 47.503559], [-122.370666, 47.503534], [-122.370682, 47.503509], [-122.370699, 47.503484], [-122.370717, 47.503459], [-122.370735, 47.503434], [-122.370755, 47.50341], [-122.370776, 47.503387], [-122.370796, 47.503364], [-122.372136, 47.502118], [-122.372439, 47.501904], [-122.373248, 47.501294], [-122.373784, 47.500853], [-122.373814, 47.500834], [-122.373841, 47.500814], [-122.373866, 47.500792], [-122.373889, 47.500769], [-122.37391, 47.500746], [-122.373928, 47.500721], [-122.373943, 47.500696], [-122.373957, 47.50067], [-122.373968, 47.500643], [-122.373976, 47.500616], [-122.373981, 47.500589], [-122.373984, 47.500562], [-122.373984, 47.500534], [-122.373981, 47.500507], [-122.374055, 47.499891], [-122.374148, 47.499525], [-122.374255, 47.499275], [-122.374957, 47.497423], [-122.375651, 47.496434], [-122.37577, 47.496376], [-122.375814, 47.49642], [-122.375888, 47.496528], [-122.375937, 47.496606], [-122.376006, 47.496704], [-122.376229, 47.496893], [-122.37627, 47.49692], [-122.376346, 47.496981], [-122.376407, 47.497037], [-122.376477, 47.497093], [-122.37651, 47.497137], [-122.376574, 47.497179], [-122.376665, 47.49723], [-122.376739, 47.497262], [-122.376801, 47.497296], [-122.37688, 47.497332], [-122.376921, 47.497363], [-122.376965, 47.497386], [-122.377066, 47.497435], [-122.37714, 47.497472], [-122.37721, 47.497495], [-122.377279, 47.49753], [-122.377379, 47.497575], [-122.377547, 47.497653], [-122.377631, 47.497697], [-122.377712, 47.497745], [-122.377769, 47.497787], [-122.377835, 47.497838], [-122.377894, 47.497886], [-122.377934, 47.497924], [-122.377977, 47.497981], [-122.37801, 47.498032], [-122.37805, 47.498083], [-122.378088, 47.498132], [-122.378111, 47.49817], [-122.378103, 47.498229], [-122.378118, 47.498279], [-122.378224, 47.498387], [-122.378279, 47.498438], [-122.378332, 47.498499], [-122.378403, 47.498539], [-122.378492, 47.498571], [-122.378581, 47.498614], [-122.378673, 47.49867], [-122.378765, 47.498722], [-122.378844, 47.498773], [-122.378936, 47.498812], [-122.379015, 47.498847], [-122.379104, 47.49889], [-122.379174, 47.498919], [-122.379239, 47.498953], [-122.379305, 47.498993], [-122.379364, 47.499022], [-122.37944, 47.499059], [-122.379526, 47.499101], [-122.379599, 47.499143], [-122.379665, 47.499187], [-122.379759, 47.499227], [-122.379843, 47.499258], [-122.37991, 47.499281], [-122.379978, 47.499306], [-122.380037, 47.499336], [-122.380082, 47.499367], [-122.380189, 47.499422], [-122.380367, 47.499486], [-122.380453, 47.499523], [-122.380592, 47.499585], [-122.380702, 47.499637], [-122.380804, 47.499683], [-122.380896, 47.499717], [-122.381001, 47.499757], [-122.381097, 47.499802], [-122.38118, 47.499839], [-122.381288, 47.499891], [-122.381401, 47.499942], [-122.3815, 47.499988], [-122.381605, 47.500032], [-122.381664, 47.500057], [-122.381748, 47.500096], [-122.381821, 47.500129], [-122.381911, 47.500162], [-122.38201, 47.500212], [-122.382079, 47.500239], [-122.382172, 47.500286], [-122.382259, 47.500318], [-122.38232, 47.500336], [-122.382392, 47.500379], [-122.382456, 47.500422], [-122.382524, 47.500463], [-122.382583, 47.500503], [-122.382643, 47.500544], [-122.382721, 47.500582], [-122.382788, 47.500619], [-122.38285, 47.50065], [-122.382897, 47.500665], [-122.382959, 47.500687], [-122.383001, 47.500705], [-122.383045, 47.500727], [-122.383116, 47.500757], [-122.383192, 47.500788], [-122.383263, 47.500818], [-122.38333, 47.500855], [-122.383391, 47.500879], [-122.383452, 47.500898], [-122.383497, 47.500913], [-122.383547, 47.500934], [-122.383578, 47.500955], [-122.383641, 47.500996], [-122.383703, 47.50103], [-122.383781, 47.50106], [-122.383837, 47.501081], [-122.383897, 47.501111], [-122.383947, 47.501149], [-122.383982, 47.501181], [-122.384038, 47.501212], [-122.384079, 47.501228], [-122.384149, 47.501246], [-122.38418, 47.501266], [-122.384221, 47.501291], [-122.384259, 47.501319], [-122.384323, 47.501358], [-122.384346, 47.501379], [-122.384394, 47.501407], [-122.384478, 47.501447], [-122.384562, 47.501483], [-122.384632, 47.501516], [-122.384683, 47.501535], [-122.384755, 47.501568], [-122.384829, 47.501598], [-122.384884, 47.501625], [-122.384938, 47.501651], [-122.384993, 47.501681], [-122.385046, 47.501707], [-122.385139, 47.50175], [-122.385204, 47.501782], [-122.385299, 47.501827], [-122.385339, 47.501853], [-122.385392, 47.501875], [-122.385477, 47.501893], [-122.38551, 47.501905], [-122.385571, 47.50193], [-122.385632, 47.501965], [-122.385679, 47.50198], [-122.385714, 47.501979], [-122.385769, 47.502003], [-122.385838, 47.502027], [-122.385901, 47.502049], [-122.385967, 47.502072], [-122.386026, 47.502091], [-122.386094, 47.502123], [-122.386159, 47.502145], [-122.386193, 47.50216], [-122.386225, 47.502178], [-122.386242, 47.50221], [-122.386278, 47.502226], [-122.386329, 47.502246], [-122.386378, 47.502266], [-122.386411, 47.502277], [-122.386442, 47.502263], [-122.386488, 47.502281], [-122.386564, 47.502322], [-122.386647, 47.50236], [-122.386719, 47.502392], [-122.386757, 47.502405], [-122.38679, 47.502428], [-122.386811, 47.502452], [-122.386842, 47.502491], [-122.38688, 47.502489], [-122.386908, 47.502515], [-122.386883, 47.502546], [-122.386892, 47.502581], [-122.386913, 47.502612], [-122.386946, 47.502651], [-122.386991, 47.502683], [-122.38703, 47.502713], [-122.387079, 47.502754], [-122.387125, 47.502807], [-122.38716, 47.502861], [-122.387199, 47.502921], [-122.387225, 47.502983], [-122.387266, 47.503059], [-122.387291, 47.503113], [-122.387329, 47.503183], [-122.387358, 47.503232], [-122.387382, 47.503296], [-122.387402, 47.503358], [-122.387436, 47.503405], [-122.387469, 47.503463], [-122.387509, 47.503512], [-122.387549, 47.503554], [-122.387587, 47.503614], [-122.387624, 47.503664], [-122.387653, 47.50372], [-122.38768, 47.503768], [-122.387708, 47.503822], [-122.387732, 47.503878], [-122.387742, 47.503924], [-122.387766, 47.503959], [-122.387795, 47.503982], [-122.387838, 47.503997], [-122.387869, 47.504027], [-122.387909, 47.504065], [-122.387945, 47.504104], [-122.387976, 47.504134], [-122.388003, 47.504158], [-122.388029, 47.504177], [-122.388064, 47.504204], [-122.388103, 47.504237], [-122.388149, 47.504274], [-122.388189, 47.504309], [-122.38822, 47.504334], [-122.388247, 47.504359], [-122.388283, 47.50439], [-122.388308, 47.504415], [-122.388333, 47.504436], [-122.388323, 47.504472], [-122.388343, 47.504518], [-122.387356, 47.504181], [-122.386754, 47.503756], [-122.386048, 47.503166], [-122.385776, 47.502931], [-122.385188, 47.502503], [-122.385159, 47.502486], [-122.385127, 47.502475], [-122.385094, 47.502467], [-122.385059, 47.502463], [-122.385023, 47.502461], [-122.384988, 47.50246], [-122.384948, 47.502461], [-122.384911, 47.502463], [-122.384876, 47.502472], [-122.384848, 47.502489], [-122.384827, 47.502513], [-122.384812, 47.502537], [-122.3848, 47.502561], [-122.384792, 47.502586], [-122.384789, 47.502611], [-122.384789, 47.502637], [-122.384793, 47.502662], [-122.384801, 47.502687], [-122.385013, 47.50327], [-122.385196, 47.503755], [-122.385132, 47.504029], [-122.385106, 47.504048], [-122.385079, 47.504067], [-122.385048, 47.504083], [-122.385016, 47.504097], [-122.384982, 47.50411], [-122.384947, 47.50412], [-122.38491, 47.504128], [-122.384872, 47.504134], [-122.384834, 47.504138], [-122.384796, 47.504139], [-122.384757, 47.504138], [-122.384719, 47.504135], [-122.384681, 47.504129], [-122.384644, 47.504121], [-122.384608, 47.504111], [-122.384574, 47.504099], [-122.384542, 47.504085], [-122.384511, 47.504069], [-122.384483, 47.504051], [-122.384457, 47.504031], [-122.384434, 47.50401], [-122.384414, 47.503988], [-122.384397, 47.503964], [-122.384382, 47.50394], [-122.384372, 47.503915], [-122.384364, 47.503889], [-122.383686, 47.503143], [-122.382988, 47.502797], [-122.382288, 47.502556], [-122.382259, 47.502539], [-122.382227, 47.502525], [-122.382191, 47.502514], [-122.382153, 47.502508], [-122.382115, 47.502506], [-122.382076, 47.502508], [-122.382039, 47.502514], [-122.382003, 47.502525], [-122.38197, 47.502539], [-122.381942, 47.502556], [-122.381917, 47.502576], [-122.381898, 47.502599], [-122.381884, 47.502623], [-122.382006, 47.502866], [-122.382173, 47.503519], [-122.381897, 47.504156], [-122.381698, 47.50517], [-122.381538, 47.506348], [-122.382, 47.506438], [-122.385026, 47.506492], [-122.386448, 47.506486], [-122.386491, 47.506492], [-122.386535, 47.506498], [-122.386577, 47.506505], [-122.386619, 47.506513], [-122.386662, 47.506522], [-122.386703, 47.506532], [-122.386745, 47.506542], [-122.386786, 47.506554], [-122.386826, 47.506566], [-122.386866, 47.506579], [-122.386905, 47.506592], [-122.386943, 47.506607], [-122.386981, 47.506622], [-122.387018, 47.506638], [-122.387055, 47.506655], [-122.387091, 47.506672], [-122.387126, 47.50669], [-122.38716, 47.506709], [-122.387193, 47.506729], [-122.387226, 47.506749], [-122.387258, 47.50677], [-122.387288, 47.506791], [-122.387318, 47.506813], [-122.387347, 47.506836], [-122.387375, 47.506859], [-122.387402, 47.506882], [-122.387428, 47.506907], [-122.387453, 47.506931], [-122.387476, 47.506956], [-122.387499, 47.506982], [-122.38752, 47.507008], [-122.387541, 47.507035], [-122.387561, 47.507061], [-122.387582, 47.507088], [-122.387602, 47.507114], [-122.387621, 47.507141], [-122.38764, 47.507168], [-122.387658, 47.507195], [-122.387676, 47.507223], [-122.387694, 47.50725], [-122.387711, 47.507278], [-122.387728, 47.507305], [-122.387744, 47.507333], [-122.38776, 47.507361], [-122.387776, 47.507389], [-122.38779, 47.507417], [-122.387804, 47.507445], [-122.387816, 47.507474], [-122.387827, 47.507503], [-122.387836, 47.507532], [-122.387845, 47.507562], [-122.387851, 47.507591], [-122.387856, 47.507621], [-122.387861, 47.50765], [-122.387864, 47.50768], [-122.387865, 47.50771], [-122.387865, 47.50774], [-122.387864, 47.50777], [-122.387861, 47.5078], [-122.387858, 47.507829], [-122.387851, 47.507865], [-122.387816, 47.50872], [-122.387937, 47.509411], [-122.387938, 47.50944], [-122.387939, 47.50947], [-122.387942, 47.5095], [-122.387945, 47.50953], [-122.387948, 47.50956], [-122.387953, 47.509589], [-122.387958, 47.509619], [-122.387964, 47.509649], [-122.387971, 47.509678], [-122.387978, 47.509708], [-122.387986, 47.509737], [-122.387995, 47.509766], [-122.388005, 47.509795], [-122.388015, 47.509824], [-122.388027, 47.509853], [-122.388038, 47.509882], [-122.388051, 47.509911], [-122.388064, 47.509939], [-122.388078, 47.509968], [-122.388093, 47.509996], [-122.388108, 47.510024], [-122.388124, 47.510052], [-122.388141, 47.510079], [-122.388159, 47.510107], [-122.388177, 47.510134], [-122.388196, 47.510161], [-122.388215, 47.510188], [-122.388235, 47.510214], [-122.388256, 47.51024], [-122.388278, 47.510267], [-122.3883, 47.510292], [-122.388323, 47.510318], [-122.388346, 47.510343], [-122.38837, 47.510368], [-122.388395, 47.510393], [-122.38842, 47.510417], [-122.388446, 47.510442], [-122.388473, 47.510465], [-122.3885, 47.510489], [-122.388528, 47.510512], [-122.388556, 47.510535], [-122.388585, 47.510558], [-122.388614, 47.51058], [-122.388654, 47.510609], [-122.389492, 47.511153], [-122.390272, 47.511794], [-122.390524, 47.512135], [-122.391012, 47.513114], [-122.391287, 47.514264], [-122.391526, 47.515577], [-122.391671, 47.517067], [-122.391745, 47.517528], [-122.389281, 47.517528], [-122.385432, 47.517496], [-122.384858, 47.517493], [-122.384795, 47.516553], [-122.384233, 47.516545], [-122.382546, 47.516545], [-122.380423, 47.51655], [-122.379436, 47.516556], [-122.379554, 47.517472], [-122.378225, 47.51749], [-122.37725, 47.517495], [-122.376896, 47.517489]]]]
    },
    "properties": {
      "neighbourhood": "Arbor Heights",
      "neighbourhood_group": "West Seattle"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.381531, 47.589496], [-122.381819, 47.589633], [-122.382055, 47.589801], [-122.382858, 47.59094], [-122.3838, 47.592134], [-122.383967, 47.592334], [-122.384741, 47.593265], [-122.385613, 47.593863], [-122.385872, 47.59404], [-122.385906, 47.594058], [-122.385936, 47.594072], [-122.385968, 47.594084], [-122.386, 47.594095], [-122.386033, 47.594105], [-122.386067, 47.594114], [-122.386102, 47.594121], [-122.386137, 47.594127], [-122.386173, 47.594132], [-122.386209, 47.594135], [-122.386245, 47.594136], [-122.386281, 47.594137], [-122.386317, 47.594136], [-122.386353, 47.594133], [-122.386389, 47.594129], [-122.386425, 47.594124], [-122.38646, 47.594117], [-122.386494, 47.594109], [-122.386527, 47.594099], [-122.38656, 47.594089], [-122.386592, 47.594077], [-122.386813, 47.593965], [-122.386851, 47.593944], [-122.386876, 47.593927], [-122.386904, 47.593906], [-122.386928, 47.593883], [-122.386948, 47.593863], [-122.386965, 47.593842], [-122.38698, 47.59382], [-122.386993, 47.593798], [-122.387004, 47.593775], [-122.387013, 47.593751], [-122.387022, 47.593727], [-122.387028, 47.593704], [-122.387032, 47.59368], [-122.387034, 47.593656], [-122.387034, 47.593632], [-122.387033, 47.593608], [-122.387028, 47.593584], [-122.387022, 47.59356], [-122.387014, 47.593537], [-122.387004, 47.593514], [-122.386916, 47.593392], [-122.386818, 47.59328], [-122.387047, 47.593127], [-122.38728, 47.592407], [-122.38838, 47.591506], [-122.389071, 47.591318], [-122.389266, 47.591265], [-122.389451, 47.591154], [-122.38966, 47.59089], [-122.389879, 47.590615], [-122.389927, 47.590546], [-122.391115, 47.589652], [-122.391218, 47.589578], [-122.391369, 47.58947], [-122.391446, 47.589403], [-122.391638, 47.58913], [-122.392352, 47.58816], [-122.393506, 47.587408], [-122.393762, 47.587191], [-122.394514, 47.586669], [-122.395037, 47.586457], [-122.395749, 47.586251], [-122.396553, 47.585719], [-122.396569, 47.585694], [-122.396596, 47.585674], [-122.396624, 47.585655], [-122.396651, 47.585635], [-122.396679, 47.585616], [-122.396708, 47.585597], [-122.396736, 47.585579], [-122.396765, 47.58556], [-122.396795, 47.585542], [-122.396824, 47.585524], [-122.396854, 47.585506], [-122.396884, 47.585489], [-122.396915, 47.585471], [-122.396946, 47.585454], [-122.396977, 47.585438], [-122.397009, 47.585421], [-122.39704, 47.585405], [-122.397073, 47.585389], [-122.397105, 47.585374], [-122.397138, 47.585357], [-122.397168, 47.585343], [-122.397198, 47.58533], [-122.397229, 47.585316], [-122.397838, 47.585053], [-122.398631, 47.5847], [-122.398685, 47.584669], [-122.398716, 47.584657], [-122.398749, 47.584645], [-122.398783, 47.584636], [-122.398817, 47.584629], [-122.398853, 47.584623], [-122.398889, 47.58462], [-122.398929, 47.584618], [-122.398966, 47.584619], [-122.399002, 47.584622], [-122.399057, 47.584587], [-122.400441, 47.583315], [-122.401112, 47.582787], [-122.402622, 47.581744], [-122.402635, 47.58094], [-122.402649, 47.580442], [-122.402651, 47.580374], [-122.403237, 47.579782], [-122.403571, 47.579451], [-122.404019, 47.579457], [-122.404017, 47.578855], [-122.404003, 47.578833], [-122.403986, 47.578811], [-122.403966, 47.578791], [-122.403943, 47.578772], [-122.403917, 47.578756], [-122.403888, 47.578741], [-122.403858, 47.578728], [-122.403825, 47.578717], [-122.403792, 47.578709], [-122.403757, 47.578703], [-122.403721, 47.5787], [-122.403668, 47.5787], [-122.403632, 47.578703], [-122.402943, 47.579095], [-122.402025, 47.579087], [-122.400632, 47.579072], [-122.401346, 47.57842], [-122.402071, 47.578009], [-122.403017, 47.577473], [-122.403043, 47.577456], [-122.403069, 47.57744], [-122.403096, 47.577424], [-122.403123, 47.577408], [-122.40315, 47.577392], [-122.403177, 47.577376], [-122.403205, 47.577361], [-122.403232, 47.577345], [-122.403261, 47.57733], [-122.403289, 47.577315], [-122.403317, 47.577301], [-122.403346, 47.577286], [-122.403375, 47.577272], [-122.403404, 47.577258], [-122.403411, 47.57693], [-122.403373, 47.57634], [-122.403343, 47.575906], [-122.403336, 47.575811], [-122.402868, 47.575806], [-122.402743, 47.575805], [-122.402745, 47.575766], [-122.402754, 47.575171], [-122.402763, 47.574575], [-122.402772, 47.57398], [-122.402778, 47.573384], [-122.402786, 47.572791], [-122.402796, 47.572193], [-122.403136, 47.572195], [-122.403788, 47.572209], [-122.403813, 47.57193], [-122.403869, 47.571329], [-122.40387, 47.570809], [-122.403659, 47.570683], [-122.403176, 47.570394], [-122.40239, 47.57038], [-122.400937, 47.570362], [-122.400128, 47.570354], [-122.399159, 47.570345], [-122.398773, 47.570337], [-122.398788, 47.568587], [-122.398814, 47.566632], [-122.398815, 47.566012], [-122.398862, 47.56484], [-122.398866, 47.564507], [-122.398884, 47.563327], [-122.398894, 47.563007], [-122.398236, 47.563016], [-122.398241, 47.562318], [-122.398263, 47.561286], [-122.39828, 47.560286], [-122.398294, 47.559422], [-122.397614, 47.559387], [-122.397619, 47.559125], [-122.397638, 47.557985], [-122.397646, 47.55758], [-122.39769, 47.557489], [-122.398576, 47.557509], [-122.398829, 47.557537], [-122.398858, 47.557555], [-122.398883, 47.557575], [-122.398904, 47.557598], [-122.398919, 47.557622], [-122.398966, 47.557877], [-122.398968, 47.557904], [-122.398971, 47.55793], [-122.398975, 47.557956], [-122.398981, 47.557983], [-122.398988, 47.558009], [-122.398996, 47.558035], [-122.399006, 47.558061], [-122.399017, 47.558086], [-122.399029, 47.558111], [-122.399042, 47.558136], [-122.399057, 47.558161], [-122.399074, 47.558188], [-122.399091, 47.558212], [-122.39911, 47.558235], [-122.399529, 47.558684], [-122.399591, 47.558751], [-122.399831, 47.559202], [-122.39985, 47.559225], [-122.39987, 47.559248], [-122.399892, 47.55927], [-122.399914, 47.559293], [-122.399936, 47.559314], [-122.39996, 47.559336], [-122.399984, 47.559356], [-122.400008, 47.559377], [-122.400034, 47.559397], [-122.40006, 47.559417], [-122.400087, 47.559436], [-122.400115, 47.559455], [-122.400143, 47.559474], [-122.400172, 47.559492], [-122.400355, 47.559609], [-122.400443, 47.559732], [-122.400458, 47.559754], [-122.400472, 47.559777], [-122.400484, 47.5598], [-122.400494, 47.559824], [-122.400502, 47.559848], [-122.400509, 47.559872], [-122.400515, 47.559896], [-122.400537, 47.560019], [-122.400546, 47.560043], [-122.400555, 47.560067], [-122.400566, 47.56009], [-122.40063, 47.560181], [-122.400704, 47.560272], [-122.400878, 47.560365], [-122.400991, 47.560425], [-122.401154, 47.560517], [-122.401767, 47.560756], [-122.402039, 47.560865], [-122.402543, 47.561064], [-122.40258, 47.561071], [-122.402619, 47.561075], [-122.402654, 47.561076], [-122.402693, 47.561074], [-122.403005, 47.561041], [-122.403558, 47.560995], [-122.403922, 47.560965], [-122.404276, 47.560902], [-122.404285, 47.560957], [-122.404314, 47.561003], [-122.404332, 47.561033], [-122.404354, 47.56107], [-122.404394, 47.561115], [-122.404439, 47.561169], [-122.404517, 47.561245], [-122.404601, 47.561306], [-122.404672, 47.561368], [-122.404739, 47.561422], [-122.40481, 47.561481], [-122.404901, 47.561546], [-122.40499, 47.561621], [-122.405057, 47.561668], [-122.405126, 47.56172], [-122.405186, 47.561773], [-122.405258, 47.561804], [-122.405404, 47.561899], [-122.40545, 47.561909], [-122.405478, 47.561926], [-122.405527, 47.561963], [-122.405597, 47.562012], [-122.405658, 47.562054], [-122.405725, 47.562092], [-122.405895, 47.562232], [-122.406, 47.562323], [-122.406069, 47.562386], [-122.406161, 47.562466], [-122.40626, 47.56255], [-122.406399, 47.562671], [-122.406449, 47.562725], [-122.406466, 47.562752], [-122.406488, 47.562783], [-122.406512, 47.562837], [-122.406539, 47.562921], [-122.406571, 47.562996], [-122.406615, 47.563111], [-122.406636, 47.563175], [-122.406671, 47.563259], [-122.406702, 47.563326], [-122.406734, 47.563435], [-122.40677, 47.563531], [-122.406791, 47.563554], [-122.406838, 47.563562], [-122.406908, 47.563566], [-122.406945, 47.56357], [-122.406965, 47.563607], [-122.406978, 47.563653], [-122.407011, 47.563742], [-122.407045, 47.563839], [-122.407058, 47.563875], [-122.407043, 47.563913], [-122.407023, 47.563936], [-122.407029, 47.563978], [-122.407131, 47.564061], [-122.407141, 47.564085], [-122.407154, 47.564124], [-122.407161, 47.56416], [-122.407185, 47.564232], [-122.407228, 47.56435], [-122.407263, 47.564441], [-122.407302, 47.564545], [-122.407336, 47.564646], [-122.40737, 47.564748], [-122.407397, 47.564824], [-122.407421, 47.564857], [-122.407455, 47.564887], [-122.407516, 47.564932], [-122.407577, 47.564973], [-122.407651, 47.565018], [-122.40768, 47.565035], [-122.407707, 47.565052], [-122.407744, 47.565074], [-122.407803, 47.565106], [-122.407879, 47.565162], [-122.407957, 47.565222], [-122.408024, 47.565282], [-122.408073, 47.565333], [-122.408138, 47.565396], [-122.408208, 47.565451], [-122.408288, 47.56551], [-122.408327, 47.565539], [-122.408352, 47.565562], [-122.408373, 47.565584], [-122.40844, 47.565596], [-122.408477, 47.565604], [-122.408578, 47.565641], [-122.408653, 47.565675], [-122.408709, 47.565709], [-122.408766, 47.565742], [-122.408794, 47.565767], [-122.408791, 47.565794], [-122.408788, 47.565822], [-122.408806, 47.565855], [-122.408863, 47.565895], [-122.408906, 47.565926], [-122.408983, 47.565982], [-122.409017, 47.566011], [-122.409046, 47.566047], [-122.409043, 47.566076], [-122.40907, 47.566117], [-122.409106, 47.566167], [-122.409131, 47.566201], [-122.409153, 47.566226], [-122.409181, 47.566255], [-122.409221, 47.566285], [-122.40928, 47.566338], [-122.409321, 47.566376], [-122.409368, 47.56641], [-122.409428, 47.566499], [-122.409461, 47.566544], [-122.409496, 47.566595], [-122.409526, 47.56664], [-122.409551, 47.566674], [-122.409572, 47.566694], [-122.409606, 47.56673], [-122.409643, 47.56678], [-122.409673, 47.566826], [-122.409699, 47.566865], [-122.40972, 47.566893], [-122.409685, 47.566906], [-122.409667, 47.566928], [-122.409679, 47.566957], [-122.409713, 47.567008], [-122.409771, 47.567084], [-122.409791, 47.567114], [-122.409829, 47.567174], [-122.409871, 47.567239], [-122.409907, 47.567295], [-122.409908, 47.567322], [-122.409863, 47.567329], [-122.409866, 47.567394], [-122.409867, 47.567429], [-122.409879, 47.567465], [-122.4099, 47.567512], [-122.40992, 47.567547], [-122.409939, 47.567599], [-122.409943, 47.567624], [-122.409957, 47.567658], [-122.41002, 47.567659], [-122.410061, 47.567677], [-122.410059, 47.567792], [-122.41006, 47.567816], [-122.410067, 47.567841], [-122.410061, 47.567873], [-122.410056, 47.567901], [-122.410053, 47.567925], [-122.41005, 47.567965], [-122.410053, 47.56801], [-122.410045, 47.568061], [-122.41004, 47.5681], [-122.410034, 47.568162], [-122.41003, 47.568232], [-122.410025, 47.568274], [-122.410024, 47.568373], [-122.41002, 47.568436], [-122.410005, 47.56849], [-122.409942, 47.568491], [-122.409878, 47.568496], [-122.409844, 47.56853], [-122.409836, 47.568557], [-122.40983, 47.56859], [-122.409816, 47.568647], [-122.409801, 47.568703], [-122.409794, 47.568739], [-122.409793, 47.568775], [-122.409777, 47.568843], [-122.40976, 47.568889], [-122.40976, 47.568932], [-122.40977, 47.56897], [-122.409778, 47.568996], [-122.409786, 47.56906], [-122.409786, 47.569087], [-122.409804, 47.569138], [-122.409828, 47.569185], [-122.409868, 47.569257], [-122.409892, 47.569288], [-122.409914, 47.569312], [-122.409937, 47.569334], [-122.409998, 47.569402], [-122.410026, 47.569442], [-122.410077, 47.569481], [-122.410117, 47.569517], [-122.410147, 47.569556], [-122.410164, 47.56958], [-122.410223, 47.569649], [-122.410254, 47.569686], [-122.410273, 47.569712], [-122.410288, 47.569736], [-122.410333, 47.569785], [-122.410379, 47.569823], [-122.410403, 47.569862], [-122.410413, 47.569885], [-122.410455, 47.569935], [-122.410483, 47.569953], [-122.410498, 47.569979], [-122.410548, 47.570039], [-122.410574, 47.57007], [-122.410591, 47.570092], [-122.410616, 47.570127], [-122.410646, 47.570172], [-122.410667, 47.570195], [-122.410688, 47.570239], [-122.410707, 47.570262], [-122.410763, 47.57031], [-122.410804, 47.570335], [-122.410826, 47.570357], [-122.410864, 47.570387], [-122.410887, 47.570409], [-122.410915, 47.570428], [-122.410946, 47.570447], [-122.410981, 47.570468], [-122.411066, 47.570466], [-122.411085, 47.570425], [-122.411289, 47.570427], [-122.41133, 47.570427], [-122.41133, 47.570482], [-122.411451, 47.570482], [-122.411528, 47.570484], [-122.411742, 47.570465], [-122.411781, 47.570466], [-122.411846, 47.570465], [-122.411884, 47.57046], [-122.411975, 47.570462], [-122.412026, 47.570463], [-122.41212, 47.570465], [-122.412277, 47.570465], [-122.412315, 47.570453], [-122.412451, 47.570462], [-122.412475, 47.570481], [-122.41254, 47.57049], [-122.412549, 47.570533], [-122.412596, 47.570542], [-122.412625, 47.570562], [-122.412685, 47.570573], [-122.412688, 47.57062], [-122.412675, 47.570698], [-122.412527, 47.570699], [-122.4125, 47.570725], [-122.412286, 47.570722], [-122.412283, 47.570686], [-122.412198, 47.570685], [-122.412134, 47.570679], [-122.411936, 47.570679], [-122.411907, 47.570703], [-122.411854, 47.570704], [-122.411713, 47.570696], [-122.411617, 47.570696], [-122.411487, 47.570694], [-122.411443, 47.570693], [-122.411253, 47.570698], [-122.411276, 47.570733], [-122.411271, 47.570757], [-122.411272, 47.570792], [-122.411293, 47.570825], [-122.411317, 47.570855], [-122.411346, 47.570877], [-122.411378, 47.570903], [-122.411422, 47.570941], [-122.411447, 47.57096], [-122.41148, 47.570985], [-122.411512, 47.571005], [-122.411544, 47.571035], [-122.411579, 47.571064], [-122.411613, 47.571083], [-122.411653, 47.571117], [-122.41171, 47.571142], [-122.411829, 47.571198], [-122.411864, 47.571212], [-122.411921, 47.571244], [-122.411952, 47.571263], [-122.412003, 47.571284], [-122.412067, 47.571312], [-122.412101, 47.571326], [-122.412177, 47.571363], [-122.412226, 47.571392], [-122.412271, 47.571408], [-122.412304, 47.571429], [-122.412364, 47.571461], [-122.412449, 47.571487], [-122.412509, 47.571494], [-122.412553, 47.571517], [-122.412594, 47.57155], [-122.412633, 47.571583], [-122.412648, 47.571609], [-122.412683, 47.571639], [-122.412731, 47.571651], [-122.412792, 47.571678], [-122.412831, 47.571694], [-122.412899, 47.571736], [-122.412942, 47.57177], [-122.412973, 47.571791], [-122.412995, 47.57181], [-122.413036, 47.571849], [-122.413065, 47.571863], [-122.413098, 47.571876], [-122.413133, 47.571897], [-122.413207, 47.571931], [-122.413242, 47.571958], [-122.413298, 47.572013], [-122.413391, 47.572071], [-122.413499, 47.572116], [-122.413519, 47.572147], [-122.413569, 47.572178], [-122.413608, 47.572194], [-122.41366, 47.572222], [-122.413719, 47.572233], [-122.413764, 47.572255], [-122.413803, 47.572281], [-122.413818, 47.57232], [-122.41384, 47.57236], [-122.413865, 47.572379], [-122.413904, 47.572403], [-122.413937, 47.572431], [-122.413989, 47.572478], [-122.41404, 47.572513], [-122.414092, 47.572538], [-122.414126, 47.572564], [-122.414171, 47.57258], [-122.414231, 47.572615], [-122.414272, 47.572634], [-122.414344, 47.572652], [-122.414386, 47.57268], [-122.41442, 47.572705], [-122.414486, 47.57274], [-122.414541, 47.572772], [-122.414576, 47.572783], [-122.414621, 47.572792], [-122.414655, 47.572805], [-122.414687, 47.572831], [-122.414731, 47.572878], [-122.414759, 47.572896], [-122.414791, 47.572914], [-122.414865, 47.57296], [-122.41493, 47.572985], [-122.414964, 47.572997], [-122.415007, 47.573008], [-122.415096, 47.573043], [-122.415174, 47.573067], [-122.415238, 47.573084], [-122.415293, 47.573107], [-122.415379, 47.573138], [-122.415442, 47.573155], [-122.415497, 47.57317], [-122.41553, 47.573189], [-122.415578, 47.573212], [-122.415612, 47.57322], [-122.415656, 47.573238], [-122.415708, 47.573255], [-122.415752, 47.573275], [-122.415798, 47.573298], [-122.415839, 47.57331], [-122.41588, 47.573318], [-122.415934, 47.573333], [-122.416002, 47.573361], [-122.41603, 47.57338], [-122.416061, 47.573392], [-122.41615, 47.573421], [-122.416195, 47.573446], [-122.41624, 47.573464], [-122.416276, 47.573481], [-122.41634, 47.573507], [-122.416393, 47.573521], [-122.41645, 47.573542], [-122.416511, 47.573558], [-122.416546, 47.573572], [-122.416583, 47.573593], [-122.416625, 47.573605], [-122.416651, 47.573625], [-122.416681, 47.573641], [-122.416736, 47.573673], [-122.416775, 47.573711], [-122.416807, 47.57373], [-122.416833, 47.573748], [-122.416866, 47.573768], [-122.416904, 47.5738], [-122.416936, 47.573838], [-122.41697, 47.57386], [-122.416998, 47.573875], [-122.417053, 47.573913], [-122.41709, 47.573931], [-122.417135, 47.573951], [-122.417174, 47.573968], [-122.417237, 47.574], [-122.417268, 47.574022], [-122.417305, 47.574042], [-122.417336, 47.574059], [-122.417377, 47.574087], [-122.417427, 47.574109], [-122.417458, 47.574127], [-122.417528, 47.574163], [-122.41756, 47.574182], [-122.41762, 47.574214], [-122.417681, 47.574207], [-122.41772, 47.574205], [-122.417771, 47.574232], [-122.417805, 47.574249], [-122.417852, 47.574275], [-122.4179, 47.574297], [-122.417943, 47.574322], [-122.417935, 47.57435], [-122.417942, 47.574384], [-122.417979, 47.57441], [-122.418061, 47.574446], [-122.418168, 47.574508], [-122.418251, 47.574554], [-122.418347, 47.5746], [-122.418442, 47.574649], [-122.418557, 47.574705], [-122.418592, 47.574718], [-122.418672, 47.574758], [-122.418733, 47.574786], [-122.418763, 47.574801], [-122.418822, 47.574828], [-122.418853, 47.574841], [-122.418887, 47.574848], [-122.418941, 47.574863], [-122.418974, 47.574878], [-122.419016, 47.574895], [-122.419083, 47.574913], [-122.419121, 47.574928], [-122.419158, 47.574949], [-122.419189, 47.574962], [-122.41921, 47.574985], [-122.419236, 47.575005], [-122.419274, 47.575018], [-122.419313, 47.575029], [-122.419341, 47.575047], [-122.41941, 47.575088], [-122.419486, 47.575133], [-122.419543, 47.575182], [-122.419562, 47.575207], [-122.41961, 47.575244], [-122.419665, 47.575285], [-122.419706, 47.575307], [-122.419765, 47.575344], [-122.419816, 47.575368], [-122.419849, 47.575389], [-122.419921, 47.575431], [-122.419959, 47.575457], [-122.419996, 47.575478], [-122.420041, 47.575506], [-122.420078, 47.575535], [-122.420123, 47.575573], [-122.420157, 47.575597], [-122.42024, 47.575655], [-122.420279, 47.575682], [-122.420321, 47.575711], [-122.42039, 47.575766], [-122.420451, 47.575804], [-122.420516, 47.575861], [-122.420569, 47.575912], [-122.420605, 47.575941], [-122.420636, 47.57597], [-122.420676, 47.576009], [-122.420706, 47.576055], [-122.420727, 47.576079], [-122.420751, 47.57611], [-122.420789, 47.576178], [-122.420806, 47.576282], [-122.4208, 47.576321], [-122.420764, 47.576356], [-122.420736, 47.576372], [-122.42068, 47.576406], [-122.420647, 47.576416], [-122.420594, 47.576423], [-122.420546, 47.576436], [-122.420515, 47.576456], [-122.420483, 47.57648], [-122.420413, 47.576515], [-122.420368, 47.576539], [-122.420365, 47.576565], [-122.420386, 47.576586], [-122.42036, 47.576609], [-122.420288, 47.576653], [-122.420211, 47.576702], [-122.420151, 47.576737], [-122.420082, 47.576771], [-122.420039, 47.576784], [-122.419969, 47.576808], [-122.419918, 47.576847], [-122.419834, 47.576892], [-122.41977, 47.576927], [-122.419659, 47.576977], [-122.419557, 47.577017], [-122.419438, 47.577062], [-122.419226, 47.577133], [-122.419133, 47.577143], [-122.4191, 47.577133], [-122.41906, 47.577144], [-122.419014, 47.577164], [-122.418942, 47.577184], [-122.418892, 47.577204], [-122.418852, 47.577216], [-122.418796, 47.577235], [-122.41874, 47.577249], [-122.4187, 47.577262], [-122.418643, 47.57727], [-122.418585, 47.57729], [-122.418519, 47.577305], [-122.418482, 47.577316], [-122.418427, 47.577332], [-122.418391, 47.577344], [-122.418334, 47.577368], [-122.418265, 47.577395], [-122.418221, 47.577409], [-122.41817, 47.577426], [-122.418101, 47.577438], [-122.418011, 47.577458], [-122.417958, 47.577467], [-122.417866, 47.577488], [-122.417825, 47.577501], [-122.417781, 47.577513], [-122.417724, 47.577531], [-122.417659, 47.577545], [-122.417492, 47.57759], [-122.417337, 47.577636], [-122.417295, 47.577647], [-122.417206, 47.577665], [-122.417116, 47.577681], [-122.417049, 47.577698], [-122.416962, 47.577719], [-122.416814, 47.577752], [-122.416734, 47.577768], [-122.416674, 47.577783], [-122.416629, 47.577796], [-122.416593, 47.57781], [-122.416538, 47.57783], [-122.416431, 47.577859], [-122.416371, 47.577879], [-122.416301, 47.577896], [-122.416261, 47.577905], [-122.416139, 47.577937], [-122.416098, 47.577945], [-122.416033, 47.577955], [-122.41598, 47.577966], [-122.415921, 47.577986], [-122.415813, 47.578019], [-122.415759, 47.578033], [-122.415724, 47.578043], [-122.415657, 47.578063], [-122.415608, 47.578078], [-122.415546, 47.578092], [-122.415451, 47.578111], [-122.415333, 47.578156], [-122.415283, 47.578171], [-122.415206, 47.578195], [-122.415108, 47.578215], [-122.41507, 47.578225], [-122.415021, 47.578238], [-122.41498, 47.578252], [-122.414932, 47.578263], [-122.414893, 47.578271], [-122.414831, 47.578285], [-122.414794, 47.57829], [-122.414751, 47.578303], [-122.414699, 47.578316], [-122.414573, 47.578347], [-122.41453, 47.578369], [-122.414528, 47.5784], [-122.414474, 47.578416], [-122.414389, 47.578437], [-122.414354, 47.578447], [-122.414314, 47.578426], [-122.414276, 47.578437], [-122.414177, 47.578466], [-122.414057, 47.578503], [-122.413895, 47.578551], [-122.413745, 47.578594], [-122.413606, 47.578633], [-122.413247, 47.578734], [-122.413115, 47.578774], [-122.413047, 47.578802], [-122.413063, 47.578828], [-122.413028, 47.578839], [-122.41295, 47.578859], [-122.412894, 47.578879], [-122.412848, 47.578883], [-122.412803, 47.578864], [-122.412737, 47.578886], [-122.412611, 47.578922], [-122.412455, 47.578971], [-122.41232, 47.579011], [-122.412159, 47.579057], [-122.411992, 47.579104], [-122.411833, 47.579151], [-122.411705, 47.579187], [-122.411599, 47.579217], [-122.411568, 47.579235], [-122.411583, 47.579259], [-122.411547, 47.579269], [-122.411468, 47.579296], [-122.411386, 47.579319], [-122.41135, 47.579307], [-122.41131, 47.579304], [-122.411214, 47.579332], [-122.411086, 47.57937], [-122.410959, 47.579408], [-122.410846, 47.579444], [-122.410716, 47.579482], [-122.410591, 47.579517], [-122.41049, 47.579553], [-122.410463, 47.579581], [-122.410413, 47.579599], [-122.410383, 47.579614], [-122.410352, 47.579627], [-122.410289, 47.579646], [-122.410226, 47.579663], [-122.410187, 47.579674], [-122.410115, 47.579701], [-122.410062, 47.57974], [-122.409969, 47.579767], [-122.409883, 47.579787], [-122.40985, 47.579797], [-122.409807, 47.579815], [-122.409743, 47.57984], [-122.409661, 47.579891], [-122.409612, 47.57992], [-122.409408, 47.580004], [-122.409303, 47.580047], [-122.409177, 47.580093], [-122.409143, 47.580109], [-122.409032, 47.580156], [-122.408979, 47.580174], [-122.408927, 47.580195], [-122.408853, 47.580222], [-122.40879, 47.580241], [-122.408734, 47.580258], [-122.408701, 47.58027], [-122.408539, 47.580336], [-122.408482, 47.580359], [-122.408448, 47.580373], [-122.408376, 47.58041], [-122.408312, 47.580437], [-122.408248, 47.580469], [-122.408202, 47.580488], [-122.408136, 47.580508], [-122.408033, 47.580551], [-122.407972, 47.580585], [-122.407915, 47.580618], [-122.407869, 47.580636], [-122.407798, 47.580667], [-122.407692, 47.580714], [-122.407628, 47.580742], [-122.407502, 47.580804], [-122.407453, 47.580824], [-122.407374, 47.580849], [-122.407301, 47.58088], [-122.407217, 47.580918], [-122.407164, 47.580945], [-122.407113, 47.580963], [-122.407024, 47.581002], [-122.406979, 47.581025], [-122.406909, 47.581051], [-122.406872, 47.581071], [-122.406822, 47.581095], [-122.406769, 47.581124], [-122.406676, 47.58116], [-122.40661, 47.581182], [-122.406567, 47.581202], [-122.406494, 47.581232], [-122.40639, 47.58128], [-122.406224, 47.581354], [-122.406158, 47.581381], [-122.406117, 47.581404], [-122.406055, 47.581429], [-122.406014, 47.581457], [-122.405957, 47.581479], [-122.405908, 47.581496], [-122.40584, 47.581523], [-122.405785, 47.581542], [-122.405736, 47.581563], [-122.405669, 47.581589], [-122.405602, 47.581623], [-122.405519, 47.581673], [-122.405472, 47.581692], [-122.405396, 47.581716], [-122.405248, 47.581768], [-122.405214, 47.581782], [-122.40517, 47.581805], [-122.405103, 47.581839], [-122.405051, 47.58186], [-122.405005, 47.581884], [-122.404941, 47.581912], [-122.404865, 47.581941], [-122.404778, 47.581975], [-122.404746, 47.581995], [-122.404708, 47.582013], [-122.404672, 47.582027], [-122.404614, 47.582057], [-122.404539, 47.582095], [-122.404497, 47.582115], [-122.404419, 47.582156], [-122.404363, 47.582194], [-122.404331, 47.582209], [-122.404275, 47.582231], [-122.40424, 47.582248], [-122.40414, 47.582286], [-122.404098, 47.582299], [-122.404031, 47.582322], [-122.404001, 47.582337], [-122.403948, 47.582364], [-122.403923, 47.582382], [-122.403896, 47.582405], [-122.403848, 47.582433], [-122.403803, 47.58245], [-122.403769, 47.58247], [-122.403705, 47.5825], [-122.403672, 47.582515], [-122.403637, 47.582528], [-122.403568, 47.582551], [-122.403489, 47.58258], [-122.403454, 47.582599], [-122.403404, 47.582619], [-122.403374, 47.582637], [-122.403252, 47.5827], [-122.403214, 47.582719], [-122.403186, 47.582735], [-122.40313, 47.582764], [-122.403068, 47.582783], [-122.402994, 47.582809], [-122.402953, 47.582819], [-122.402913, 47.582831], [-122.402845, 47.582858], [-122.402787, 47.582893], [-122.402714, 47.582934], [-122.402657, 47.582962], [-122.4026, 47.582986], [-122.402572, 47.583004], [-122.402533, 47.583027], [-122.402495, 47.583059], [-122.402438, 47.583084], [-122.402406, 47.583102], [-122.402373, 47.583115], [-122.40234, 47.58313], [-122.402291, 47.583146], [-122.402219, 47.58318], [-122.402177, 47.583199], [-122.402125, 47.583217], [-122.402033, 47.583256], [-122.401941, 47.583305], [-122.40188, 47.583339], [-122.401814, 47.583371], [-122.40171, 47.583431], [-122.401564, 47.583506], [-122.401518, 47.583529], [-122.401462, 47.583558], [-122.401374, 47.583602], [-122.401287, 47.583656], [-122.401155, 47.583723], [-122.401068, 47.583773], [-122.400994, 47.583822], [-122.400915, 47.583884], [-122.40083, 47.58396], [-122.4008, 47.583987], [-122.400765, 47.584015], [-122.400717, 47.584059], [-122.400666, 47.5841], [-122.400563, 47.58418], [-122.400513, 47.584221], [-122.400458, 47.584265], [-122.400431, 47.584289], [-122.4004, 47.584319], [-122.400345, 47.584364], [-122.400288, 47.584413], [-122.400241, 47.584463], [-122.400204, 47.584496], [-122.400174, 47.584515], [-122.400111, 47.584574], [-122.40008, 47.584604], [-122.40004, 47.584639], [-122.399996, 47.584675], [-122.399955, 47.584705], [-122.399867, 47.584783], [-122.399809, 47.584839], [-122.399794, 47.584865], [-122.399774, 47.584894], [-122.399712, 47.584941], [-122.399663, 47.584986], [-122.399604, 47.585036], [-122.399576, 47.585072], [-122.399551, 47.585104], [-122.399524, 47.585119], [-122.399492, 47.585143], [-122.399419, 47.585215], [-122.399375, 47.585254], [-122.399278, 47.585332], [-122.399155, 47.585437], [-122.399091, 47.585491], [-122.399044, 47.585534], [-122.398999, 47.585567], [-122.39892, 47.585631], [-122.39888, 47.585668], [-122.398821, 47.585718], [-122.398765, 47.585765], [-122.398708, 47.585811], [-122.398643, 47.585868], [-122.398604, 47.585905], [-122.398533, 47.585965], [-122.398475, 47.586019], [-122.398439, 47.586059], [-122.398414, 47.586082], [-122.398365, 47.586111], [-122.398339, 47.586131], [-122.398287, 47.586184], [-122.398231, 47.586232], [-122.398198, 47.586262], [-122.398095, 47.586351], [-122.39806, 47.586386], [-122.397998, 47.586439], [-122.397908, 47.586521], [-122.397877, 47.586544], [-122.397828, 47.586579], [-122.397789, 47.586615], [-122.397746, 47.586652], [-122.39771, 47.586681], [-122.397682, 47.586712], [-122.397636, 47.586751], [-122.397608, 47.586774], [-122.397548, 47.586821], [-122.397509, 47.586863], [-122.397458, 47.586905], [-122.397426, 47.586937], [-122.397364, 47.586994], [-122.397288, 47.587047], [-122.397182, 47.587144], [-122.397124, 47.587197], [-122.396993, 47.587299], [-122.396973, 47.58732], [-122.396956, 47.587342], [-122.396918, 47.587374], [-122.39689, 47.587398], [-122.39685, 47.587435], [-122.396805, 47.587471], [-122.396768, 47.587504], [-122.396727, 47.587536], [-122.396675, 47.58758], [-122.396569, 47.587678], [-122.396513, 47.587726], [-122.396478, 47.587756], [-122.396432, 47.587793], [-122.396393, 47.587827], [-122.396349, 47.587863], [-122.396314, 47.587895], [-122.396277, 47.587924], [-122.396218, 47.587982], [-122.396132, 47.588055], [-122.396102, 47.588084], [-122.396023, 47.588148], [-122.395952, 47.588202], [-122.395926, 47.588229], [-122.395905, 47.588252], [-122.395865, 47.588282], [-122.395838, 47.588299], [-122.395795, 47.588335], [-122.395732, 47.588387], [-122.395644, 47.588474], [-122.395614, 47.588509], [-122.395579, 47.588536], [-122.395541, 47.588561], [-122.395503, 47.588592], [-122.395451, 47.588642], [-122.39541, 47.588694], [-122.395318, 47.588764], [-122.395284, 47.588785], [-122.39519, 47.588868], [-122.395143, 47.588916], [-122.395099, 47.588954], [-122.39499, 47.589043], [-122.394902, 47.589112], [-122.394842, 47.589162], [-122.394813, 47.589189], [-122.394773, 47.589223], [-122.394733, 47.589254], [-122.394701, 47.589281], [-122.394668, 47.589313], [-122.394633, 47.589341], [-122.394536, 47.589428], [-122.394511, 47.589449], [-122.394395, 47.589542], [-122.394277, 47.589647], [-122.394182, 47.589731], [-122.394124, 47.589784], [-122.394019, 47.589881], [-122.393974, 47.589924], [-122.393918, 47.589981], [-122.393832, 47.590047], [-122.393791, 47.590074], [-122.393741, 47.590113], [-122.393703, 47.590148], [-122.393665, 47.590178], [-122.393572, 47.590258], [-122.393547, 47.590283], [-122.393526, 47.590311], [-122.3935, 47.590336], [-122.393465, 47.59036], [-122.393402, 47.590416], [-122.393336, 47.590477], [-122.393307, 47.590508], [-122.393284, 47.590529], [-122.393205, 47.590597], [-122.393138, 47.590649], [-122.393104, 47.590674], [-122.393069, 47.590707], [-122.393029, 47.59074], [-122.392975, 47.590783], [-122.392918, 47.590828], [-122.392852, 47.590896], [-122.392824, 47.59093], [-122.392759, 47.591007], [-122.392722, 47.591048], [-122.392696, 47.59108], [-122.392673, 47.59111], [-122.392638, 47.591155], [-122.392593, 47.591216], [-122.392556, 47.591258], [-122.392496, 47.591339], [-122.392444, 47.591396], [-122.392353, 47.591505], [-122.392253, 47.591633], [-122.392177, 47.591737], [-122.392149, 47.59177], [-122.392122, 47.591813], [-122.392102, 47.591834], [-122.392075, 47.591859], [-122.392013, 47.591935], [-122.391977, 47.59197], [-122.391925, 47.59203], [-122.39185, 47.592119], [-122.391807, 47.59217], [-122.3917, 47.592309], [-122.391588, 47.592453], [-122.391569, 47.592474], [-122.39153, 47.592523], [-122.391475, 47.592598], [-122.39144, 47.592646], [-122.391391, 47.592707], [-122.391373, 47.592731], [-122.391329, 47.592783], [-122.391234, 47.592883], [-122.391111, 47.593017], [-122.391088, 47.593043], [-122.390983, 47.593168], [-122.390943, 47.593222], [-122.39089, 47.593287], [-122.390848, 47.593329], [-122.390789, 47.593404], [-122.390751, 47.593444], [-122.390706, 47.593496], [-122.39068, 47.593522], [-122.390644, 47.593567], [-122.390621, 47.593597], [-122.390584, 47.593626], [-122.390536, 47.593658], [-122.390484, 47.593708], [-122.390421, 47.59376], [-122.390388, 47.593783], [-122.390253, 47.593875], [-122.390174, 47.593919], [-122.390075, 47.593978], [-122.390042, 47.59399], [-122.38999, 47.594008], [-122.389946, 47.594046], [-122.389913, 47.594056], [-122.389843, 47.594092], [-122.389794, 47.594116], [-122.389642, 47.594187], [-122.389604, 47.594203], [-122.38956, 47.594219], [-122.389518, 47.594241], [-122.389471, 47.594262], [-122.389335, 47.594336], [-122.38927, 47.59437], [-122.389196, 47.594406], [-122.389106, 47.594457], [-122.389058, 47.594478], [-122.388971, 47.594519], [-122.388937, 47.594539], [-122.388901, 47.594552], [-122.388837, 47.594583], [-122.388768, 47.594621], [-122.38871, 47.594648], [-122.388669, 47.594667], [-122.388623, 47.594689], [-122.388575, 47.594718], [-122.388498, 47.59476], [-122.388462, 47.594776], [-122.388312, 47.594853], [-122.388222, 47.594894], [-122.388191, 47.594906], [-122.38811, 47.594944], [-122.388052, 47.594973], [-122.388004, 47.595001], [-122.387943, 47.595055], [-122.387907, 47.595053], [-122.387863, 47.595028], [-122.387771, 47.595055], [-122.387794, 47.595085], [-122.387797, 47.595117], [-122.387734, 47.595115], [-122.38765, 47.595106], [-122.387635, 47.595144], [-122.387664, 47.595161], [-122.387689, 47.595193], [-122.387751, 47.595277], [-122.387779, 47.595314], [-122.387788, 47.59538], [-122.387708, 47.595406], [-122.387652, 47.595423], [-122.387614, 47.595437], [-122.387543, 47.595458], [-122.387472, 47.595482], [-122.387431, 47.595493], [-122.387391, 47.595446], [-122.387339, 47.595374], [-122.387282, 47.595299], [-122.387245, 47.595286], [-122.387208, 47.595266], [-122.387129, 47.595252], [-122.387102, 47.59523], [-122.387029, 47.595248], [-122.386928, 47.595265], [-122.386666, 47.595306], [-122.386577, 47.595315], [-122.386477, 47.595319], [-122.386228, 47.595318], [-122.385926, 47.59532], [-122.385823, 47.595321], [-122.385702, 47.595307], [-122.385527, 47.595278], [-122.385401, 47.595258], [-122.38528, 47.595234], [-122.385178, 47.595213], [-122.385047, 47.595177], [-122.384857, 47.595119], [-122.384773, 47.59509], [-122.384584, 47.595008], [-122.384378, 47.594908], [-122.384159, 47.594783], [-122.384, 47.594676], [-122.383902, 47.594592], [-122.383774, 47.594462], [-122.383688, 47.594366], [-122.383553, 47.594197], [-122.383463, 47.594092], [-122.383444, 47.59406], [-122.383416, 47.594033], [-122.383638, 47.593997], [-122.383545, 47.593833], [-122.383384, 47.593482], [-122.383212, 47.593106], [-122.383076, 47.592801], [-122.38301, 47.592662], [-122.382644, 47.591894], [-122.382248, 47.591038], [-122.38204, 47.590599], [-122.381531, 47.589496]]]]
    },
    "properties": {
      "neighbourhood": "Alki",
      "neighbourhood_group": "West Seattle"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.381531, 47.589496], [-122.380227, 47.588578], [-122.378554, 47.587394], [-122.376842, 47.586184], [-122.376284, 47.585776], [-122.376171, 47.58558], [-122.375534, 47.584839], [-122.374833, 47.583996], [-122.373926, 47.582968], [-122.373369, 47.582341], [-122.373256, 47.58216], [-122.373176, 47.582052], [-122.373082, 47.581811], [-122.372727, 47.580898], [-122.372484, 47.580231], [-122.372557, 47.57958], [-122.372605, 47.579106], [-122.372606, 47.579081], [-122.372607, 47.579057], [-122.372607, 47.579032], [-122.372606, 47.579007], [-122.372605, 47.578983], [-122.372603, 47.578958], [-122.3726, 47.578934], [-122.372596, 47.57891], [-122.372592, 47.578885], [-122.372587, 47.578861], [-122.372581, 47.578837], [-122.372574, 47.578812], [-122.372567, 47.578788], [-122.372559, 47.578765], [-122.37255, 47.578741], [-122.372541, 47.578717], [-122.372531, 47.578694], [-122.372519, 47.57867], [-122.372508, 47.578647], [-122.372249, 47.578247], [-122.37156, 47.57705], [-122.37147, 47.576874], [-122.371227, 47.575851], [-122.37099, 47.57467], [-122.370904, 47.574109], [-122.370869, 47.573683], [-122.37074, 47.572563], [-122.370735, 47.572515], [-122.37073, 47.572468], [-122.370725, 47.57242], [-122.37072, 47.572373], [-122.370715, 47.572325], [-122.37071, 47.572277], [-122.370705, 47.57223], [-122.370699, 47.572182], [-122.370694, 47.572135], [-122.370688, 47.572087], [-122.370683, 47.57204], [-122.370678, 47.571993], [-122.370673, 47.571945], [-122.370668, 47.571898], [-122.370662, 47.571852], [-122.370657, 47.571806], [-122.370651, 47.57176], [-122.370646, 47.571714], [-122.370641, 47.571669], [-122.370637, 47.571626], [-122.370634, 47.571585], [-122.37063, 47.571541], [-122.370628, 47.571496], [-122.370628, 47.571438], [-122.370727, 47.571418], [-122.370762, 47.571411], [-122.370797, 47.571403], [-122.370832, 47.571396], [-122.370867, 47.571388], [-122.370902, 47.571379], [-122.370936, 47.57137], [-122.37097, 47.571361], [-122.371004, 47.571352], [-122.371038, 47.571342], [-122.371071, 47.571332], [-122.371104, 47.571321], [-122.371138, 47.57131], [-122.37117, 47.571299], [-122.371203, 47.571289], [-122.371236, 47.571278], [-122.371269, 47.571267], [-122.371301, 47.571255], [-122.371332, 47.571243], [-122.371364, 47.571232], [-122.371394, 47.571219], [-122.371426, 47.571207], [-122.371457, 47.571194], [-122.371486, 47.571181], [-122.371517, 47.571168], [-122.371546, 47.571154], [-122.371576, 47.57114], [-122.371604, 47.571126], [-122.371634, 47.571112], [-122.371663, 47.571097], [-122.371691, 47.571081], [-122.371719, 47.571066], [-122.371747, 47.571051], [-122.371775, 47.571035], [-122.371803, 47.571018], [-122.37183, 47.571002], [-122.371857, 47.570985], [-122.371884, 47.570969], [-122.371911, 47.570952], [-122.371937, 47.570934], [-122.371964, 47.570917], [-122.371989, 47.570899], [-122.372015, 47.570881], [-122.37204, 47.570863], [-122.372065, 47.570845], [-122.372089, 47.570826], [-122.372113, 47.570807], [-122.372136, 47.570788], [-122.372159, 47.570769], [-122.372182, 47.570749], [-122.372204, 47.570729], [-122.372226, 47.570709], [-122.372248, 47.570689], [-122.372268, 47.570669], [-122.372288, 47.570648], [-122.372308, 47.570627], [-122.372328, 47.570606], [-122.372347, 47.570585], [-122.372365, 47.570564], [-122.372384, 47.570542], [-122.372402, 47.57052], [-122.37242, 47.570499], [-122.372437, 47.570477], [-122.372454, 47.570455], [-122.372471, 47.570433], [-122.372488, 47.57041], [-122.372504, 47.570388], [-122.372519, 47.570366], [-122.372535, 47.570343], [-122.37255, 47.57032], [-122.372564, 47.570298], [-122.372578, 47.570275], [-122.372592, 47.570252], [-122.372606, 47.570229], [-122.372619, 47.570205], [-122.372632, 47.570182], [-122.372644, 47.570159], [-122.372737, 47.569877], [-122.373465, 47.569865], [-122.373594, 47.569907], [-122.373843, 47.569869], [-122.374014, 47.569846], [-122.37451, 47.569867], [-122.374837, 47.569967], [-122.375582, 47.570179], [-122.376115, 47.570224], [-122.376626, 47.570162], [-122.377604, 47.570044], [-122.378585, 47.569928], [-122.379539, 47.569814], [-122.37967, 47.569799], [-122.379747, 47.569775], [-122.380042, 47.569292], [-122.380142, 47.569129], [-122.380601, 47.569821], [-122.380858, 47.570205], [-122.381509, 47.570192], [-122.382365, 47.570178], [-122.383147, 47.570178], [-122.383956, 47.570181], [-122.384765, 47.570184], [-122.385591, 47.570184], [-122.386441, 47.570188], [-122.387335, 47.570199], [-122.388229, 47.570209], [-122.389122, 47.57022], [-122.39002, 47.570233], [-122.390917, 47.570246], [-122.391814, 47.570258], [-122.392711, 47.570271], [-122.393625, 47.570279], [-122.394539, 47.570287], [-122.395453, 47.570295], [-122.396366, 47.570303], [-122.39728, 47.570311], [-122.398194, 47.570326], [-122.398773, 47.570337], [-122.399159, 47.570345], [-122.400128, 47.570354], [-122.400937, 47.570362], [-122.40239, 47.57038], [-122.403176, 47.570394], [-122.403659, 47.570683], [-122.40387, 47.570809], [-122.403869, 47.571329], [-122.403813, 47.57193], [-122.403788, 47.572209], [-122.403136, 47.572195], [-122.402796, 47.572193], [-122.402786, 47.572791], [-122.402778, 47.573384], [-122.402772, 47.57398], [-122.402763, 47.574575], [-122.402754, 47.575171], [-122.402745, 47.575766], [-122.402743, 47.575805], [-122.402868, 47.575806], [-122.403336, 47.575811], [-122.403343, 47.575906], [-122.403373, 47.57634], [-122.403411, 47.57693], [-122.403404, 47.577258], [-122.403375, 47.577272], [-122.403346, 47.577286], [-122.403317, 47.577301], [-122.403289, 47.577315], [-122.403261, 47.57733], [-122.403232, 47.577345], [-122.403205, 47.577361], [-122.403177, 47.577376], [-122.40315, 47.577392], [-122.403123, 47.577408], [-122.403096, 47.577424], [-122.403069, 47.57744], [-122.403043, 47.577456], [-122.403017, 47.577473], [-122.402071, 47.578009], [-122.401346, 47.57842], [-122.400632, 47.579072], [-122.402025, 47.579087], [-122.402943, 47.579095], [-122.403632, 47.578703], [-122.403668, 47.5787], [-122.403721, 47.5787], [-122.403757, 47.578703], [-122.403792, 47.578709], [-122.403825, 47.578717], [-122.403858, 47.578728], [-122.403888, 47.578741], [-122.403917, 47.578756], [-122.403943, 47.578772], [-122.403966, 47.578791], [-122.403986, 47.578811], [-122.404003, 47.578833], [-122.404017, 47.578855], [-122.404019, 47.579457], [-122.403571, 47.579451], [-122.403237, 47.579782], [-122.402651, 47.580374], [-122.402649, 47.580442], [-122.402635, 47.58094], [-122.402622, 47.581744], [-122.401112, 47.582787], [-122.400441, 47.583315], [-122.399057, 47.584587], [-122.399002, 47.584622], [-122.398966, 47.584619], [-122.398929, 47.584618], [-122.398889, 47.58462], [-122.398853, 47.584623], [-122.398817, 47.584629], [-122.398783, 47.584636], [-122.398749, 47.584645], [-122.398716, 47.584657], [-122.398685, 47.584669], [-122.398631, 47.5847], [-122.397838, 47.585053], [-122.397229, 47.585316], [-122.397198, 47.58533], [-122.397168, 47.585343], [-122.397138, 47.585357], [-122.397105, 47.585374], [-122.397073, 47.585389], [-122.39704, 47.585405], [-122.397009, 47.585421], [-122.396977, 47.585438], [-122.396946, 47.585454], [-122.396915, 47.585471], [-122.396884, 47.585489], [-122.396854, 47.585506], [-122.396824, 47.585524], [-122.396795, 47.585542], [-122.396765, 47.58556], [-122.396736, 47.585579], [-122.396708, 47.585597], [-122.396679, 47.585616], [-122.396651, 47.585635], [-122.396624, 47.585655], [-122.396596, 47.585674], [-122.396569, 47.585694], [-122.396553, 47.585719], [-122.395749, 47.586251], [-122.395037, 47.586457], [-122.394514, 47.586669], [-122.393762, 47.587191], [-122.393506, 47.587408], [-122.392352, 47.58816], [-122.391638, 47.58913], [-122.391446, 47.589403], [-122.391369, 47.58947], [-122.391218, 47.589578], [-122.391115, 47.589652], [-122.389927, 47.590546], [-122.389879, 47.590615], [-122.38966, 47.59089], [-122.389451, 47.591154], [-122.389266, 47.591265], [-122.389071, 47.591318], [-122.38838, 47.591506], [-122.38728, 47.592407], [-122.387047, 47.593127], [-122.386818, 47.59328], [-122.386916, 47.593392], [-122.387004, 47.593514], [-122.387014, 47.593537], [-122.387022, 47.59356], [-122.387028, 47.593584], [-122.387033, 47.593608], [-122.387034, 47.593632], [-122.387034, 47.593656], [-122.387032, 47.59368], [-122.387028, 47.593704], [-122.387022, 47.593727], [-122.387013, 47.593751], [-122.387004, 47.593775], [-122.386993, 47.593798], [-122.38698, 47.59382], [-122.386965, 47.593842], [-122.386948, 47.593863], [-122.386928, 47.593883], [-122.386904, 47.593906], [-122.386876, 47.593927], [-122.386851, 47.593944], [-122.386813, 47.593965], [-122.386592, 47.594077], [-122.38656, 47.594089], [-122.386527, 47.594099], [-122.386494, 47.594109], [-122.38646, 47.594117], [-122.386425, 47.594124], [-122.386389, 47.594129], [-122.386353, 47.594133], [-122.386317, 47.594136], [-122.386281, 47.594137], [-122.386245, 47.594136], [-122.386209, 47.594135], [-122.386173, 47.594132], [-122.386137, 47.594127], [-122.386102, 47.594121], [-122.386067, 47.594114], [-122.386033, 47.594105], [-122.386, 47.594095], [-122.385968, 47.594084], [-122.385936, 47.594072], [-122.385906, 47.594058], [-122.385872, 47.59404], [-122.385613, 47.593863], [-122.384741, 47.593265], [-122.383967, 47.592334], [-122.3838, 47.592134], [-122.382858, 47.59094], [-122.382055, 47.589801], [-122.381819, 47.589633], [-122.381531, 47.589496]]]]
    },
    "properties": {
      "neighbourhood": "North Admiral",
      "neighbourhood_group": "West Seattle"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.366067, 47.705168], [-122.366072, 47.701417], [-122.366045, 47.69834], [-122.366016, 47.695207], [-122.366015, 47.69233], [-122.366004, 47.690648], [-122.367607, 47.690642], [-122.369525, 47.690639], [-122.371404, 47.690637], [-122.373231, 47.690625], [-122.37511, 47.690617], [-122.37681, 47.690605], [-122.377118, 47.690603], [-122.379104, 47.690604], [-122.379876, 47.690599], [-122.381453, 47.690598], [-122.383201, 47.690594], [-122.383275, 47.690593], [-122.38328, 47.691154], [-122.383279, 47.691178], [-122.383276, 47.691202], [-122.383272, 47.691227], [-122.383267, 47.691251], [-122.383262, 47.691275], [-122.383255, 47.691299], [-122.383247, 47.691323], [-122.383239, 47.691347], [-122.383229, 47.691371], [-122.383219, 47.691394], [-122.383208, 47.691417], [-122.383196, 47.69144], [-122.383183, 47.691463], [-122.383169, 47.691486], [-122.383155, 47.691508], [-122.383139, 47.69153], [-122.383123, 47.691552], [-122.383106, 47.691574], [-122.383087, 47.691595], [-122.383069, 47.691616], [-122.383049, 47.691636], [-122.383029, 47.691656], [-122.383008, 47.691676], [-122.382986, 47.691696], [-122.382967, 47.691719], [-122.382953, 47.691741], [-122.38294, 47.691764], [-122.382929, 47.691787], [-122.382919, 47.691811], [-122.38291, 47.691834], [-122.382902, 47.691858], [-122.382896, 47.691882], [-122.382892, 47.691907], [-122.382888, 47.691931], [-122.382886, 47.691955], [-122.382885, 47.69198], [-122.382886, 47.692004], [-122.382888, 47.692029], [-122.382891, 47.692053], [-122.382896, 47.692078], [-122.382891, 47.692559], [-122.382894, 47.693641], [-122.382904, 47.694242], [-122.382903, 47.694267], [-122.3829, 47.694291], [-122.382897, 47.694315], [-122.382894, 47.69434], [-122.38289, 47.694366], [-122.382886, 47.694393], [-122.38288, 47.694419], [-122.382875, 47.694446], [-122.382869, 47.694472], [-122.382862, 47.694498], [-122.382854, 47.694525], [-122.382846, 47.694551], [-122.382838, 47.694577], [-122.382829, 47.694603], [-122.382819, 47.694629], [-122.382801, 47.694652], [-122.382765, 47.694655], [-122.382729, 47.694658], [-122.382693, 47.694661], [-122.382657, 47.694663], [-122.382621, 47.694665], [-122.382585, 47.694667], [-122.382549, 47.694668], [-122.382513, 47.694669], [-122.382476, 47.69467], [-122.38244, 47.69467], [-122.382403, 47.694671], [-122.382367, 47.69467], [-122.382331, 47.69467], [-122.382295, 47.694669], [-122.381672, 47.694673], [-122.380327, 47.69468], [-122.378968, 47.69468], [-122.377608, 47.694687], [-122.376798, 47.69469], [-122.3768, 47.69503], [-122.376801, 47.695283], [-122.376796, 47.69578], [-122.376797, 47.696809], [-122.376798, 47.697818], [-122.376784, 47.698834], [-122.37678, 47.699853], [-122.376776, 47.700876], [-122.376771, 47.701537], [-122.37663, 47.701538], [-122.376314, 47.70154], [-122.37543, 47.701531], [-122.37543, 47.701594], [-122.375423, 47.702598], [-122.37542, 47.703501], [-122.375418, 47.704414], [-122.375416, 47.705191], [-122.37477, 47.705189], [-122.374081, 47.705186], [-122.37276, 47.705183], [-122.371395, 47.705186], [-122.370098, 47.705175], [-122.368787, 47.705171], [-122.367471, 47.705164], [-122.366067, 47.705168]]]]
    },
    "properties": {
      "neighbourhood": "Crown Hill",
      "neighbourhood_group": "Other neighborhoods"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.370665, 47.570772], [-122.370702, 47.569863], [-122.370711, 47.56945], [-122.37077, 47.568596], [-122.370812, 47.567567], [-122.371236, 47.566883], [-122.372339, 47.56509], [-122.372678, 47.564505], [-122.372699, 47.564484], [-122.37272, 47.564463], [-122.372744, 47.564442], [-122.372767, 47.564422], [-122.372792, 47.564402], [-122.372817, 47.564382], [-122.372843, 47.564363], [-122.372869, 47.564345], [-122.372897, 47.564327], [-122.372925, 47.56431], [-122.372954, 47.564293], [-122.372983, 47.564276], [-122.373014, 47.564261], [-122.373044, 47.564245], [-122.373076, 47.564231], [-122.373108, 47.564217], [-122.37314, 47.564203], [-122.373173, 47.56419], [-122.373207, 47.564178], [-122.373241, 47.564166], [-122.373275, 47.564155], [-122.37331, 47.564145], [-122.373346, 47.564135], [-122.373381, 47.564126], [-122.373417, 47.564118], [-122.373454, 47.56411], [-122.374112, 47.564092], [-122.376157, 47.564075], [-122.376171, 47.56291], [-122.376218, 47.560967], [-122.376265, 47.559007], [-122.376296, 47.557048], [-122.376303, 47.55509], [-122.376295, 47.553787], [-122.376295, 47.553739], [-122.376309, 47.553131], [-122.376324, 47.551178], [-122.376379, 47.549213], [-122.37641, 47.547254], [-122.376415, 47.546541], [-122.3776, 47.546518], [-122.378901, 47.54655], [-122.380238, 47.546576], [-122.380479, 47.546587], [-122.382431, 47.546615], [-122.383128, 47.546633], [-122.383283, 47.546326], [-122.383296, 47.546303], [-122.383309, 47.546279], [-122.383323, 47.546256], [-122.383338, 47.546232], [-122.383353, 47.546209], [-122.383368, 47.546186], [-122.383384, 47.546163], [-122.383401, 47.546141], [-122.383418, 47.546118], [-122.383435, 47.546096], [-122.383453, 47.546074], [-122.383472, 47.546052], [-122.383491, 47.54603], [-122.383511, 47.546009], [-122.383531, 47.545987], [-122.383551, 47.545966], [-122.383573, 47.545945], [-122.383594, 47.545925], [-122.383616, 47.545904], [-122.383639, 47.545884], [-122.383661, 47.545864], [-122.383685, 47.545844], [-122.383708, 47.545825], [-122.383732, 47.545806], [-122.383757, 47.545787], [-122.383782, 47.545768], [-122.383808, 47.545749], [-122.383834, 47.545731], [-122.38386, 47.545713], [-122.383887, 47.545696], [-122.383914, 47.545678], [-122.383942, 47.545661], [-122.383964, 47.54564], [-122.384001, 47.545619], [-122.38403, 47.545603], [-122.38406, 47.545588], [-122.384089, 47.545572], [-122.384119, 47.545557], [-122.384149, 47.545542], [-122.384179, 47.545527], [-122.38421, 47.545513], [-122.384241, 47.545498], [-122.384272, 47.545484], [-122.384303, 47.545471], [-122.384335, 47.545457], [-122.384367, 47.545444], [-122.384399, 47.545431], [-122.384431, 47.545419], [-122.384464, 47.545406], [-122.384496, 47.545394], [-122.384529, 47.545382], [-122.384563, 47.545371], [-122.384596, 47.54536], [-122.38463, 47.545349], [-122.384664, 47.545338], [-122.384698, 47.545327], [-122.384732, 47.545317], [-122.384766, 47.545307], [-122.384801, 47.545298], [-122.384835, 47.545289], [-122.384871, 47.54528], [-122.384906, 47.545271], [-122.384941, 47.545263], [-122.384976, 47.545255], [-122.38542, 47.545165], [-122.386164, 47.545048], [-122.387222, 47.544869], [-122.387222, 47.545308], [-122.387197, 47.546376], [-122.387172, 47.547443], [-122.387147, 47.548511], [-122.387115, 47.549578], [-122.387084, 47.550646], [-122.387052, 47.551714], [-122.387021, 47.552781], [-122.386989, 47.553849], [-122.386958, 47.554917], [-122.386926, 47.555976], [-122.386889, 47.557082], [-122.386859, 47.558193], [-122.386842, 47.55887], [-122.386794, 47.559311], [-122.385283, 47.559304], [-122.384068, 47.559315], [-122.382581, 47.559302], [-122.381495, 47.55929], [-122.381519, 47.561174], [-122.377884, 47.563991], [-122.376822, 47.564706], [-122.376121, 47.565055], [-122.376086, 47.565072], [-122.375901, 47.565121], [-122.37587, 47.565133], [-122.375839, 47.565145], [-122.375808, 47.565157], [-122.375777, 47.565169], [-122.375747, 47.565182], [-122.375716, 47.565194], [-122.375686, 47.565207], [-122.375656, 47.56522], [-122.375626, 47.565234], [-122.375596, 47.565247], [-122.375567, 47.565261], [-122.375537, 47.565274], [-122.375508, 47.565288], [-122.375479, 47.565302], [-122.37545, 47.565317], [-122.375421, 47.565331], [-122.375393, 47.565346], [-122.375364, 47.56536], [-122.375336, 47.565375], [-122.375308, 47.56539], [-122.37528, 47.565406], [-122.374645, 47.565753], [-122.374272, 47.566023], [-122.373992, 47.566274], [-122.373974, 47.566295], [-122.373956, 47.566316], [-122.373938, 47.566337], [-122.37392, 47.566358], [-122.373902, 47.566379], [-122.373885, 47.5664], [-122.373868, 47.566422], [-122.373851, 47.566443], [-122.373834, 47.566465], [-122.373818, 47.566486], [-122.373802, 47.566508], [-122.373786, 47.566529], [-122.373771, 47.566551], [-122.373756, 47.566573], [-122.37374, 47.566596], [-122.373725, 47.566618], [-122.373711, 47.566641], [-122.373696, 47.566663], [-122.373682, 47.566685], [-122.373668, 47.566707], [-122.37365, 47.56674], [-122.373637, 47.566762], [-122.373624, 47.566785], [-122.373532, 47.566987], [-122.373425, 47.56736], [-122.373278, 47.567865], [-122.373272, 47.567891], [-122.373267, 47.567917], [-122.373261, 47.567943], [-122.373255, 47.567969], [-122.373249, 47.567994], [-122.373243, 47.56802], [-122.373237, 47.568046], [-122.37323, 47.568072], [-122.373224, 47.568098], [-122.373134, 47.568453], [-122.372978, 47.569023], [-122.372823, 47.569582], [-122.372737, 47.569877], [-122.372644, 47.570159], [-122.372632, 47.570182], [-122.372619, 47.570205], [-122.372606, 47.570229], [-122.372592, 47.570252], [-122.372578, 47.570275], [-122.372564, 47.570298], [-122.37255, 47.57032], [-122.372535, 47.570343], [-122.372519, 47.570366], [-122.372504, 47.570388], [-122.372488, 47.57041], [-122.372471, 47.570433], [-122.372454, 47.570455], [-122.372437, 47.570477], [-122.37242, 47.570499], [-122.372402, 47.57052], [-122.372384, 47.570542], [-122.372365, 47.570564], [-122.372347, 47.570585], [-122.372328, 47.570606], [-122.372308, 47.570627], [-122.372288, 47.570648], [-122.372268, 47.570669], [-122.372248, 47.570689], [-122.372226, 47.570709], [-122.372204, 47.570729], [-122.372182, 47.570749], [-122.372159, 47.570769], [-122.372136, 47.570788], [-122.372113, 47.570807], [-122.372089, 47.570826], [-122.372065, 47.570845], [-122.37204, 47.570863], [-122.372015, 47.570881], [-122.371989, 47.570899], [-122.371964, 47.570917], [-122.371937, 47.570934], [-122.371911, 47.570952], [-122.371884, 47.570969], [-122.371857, 47.570985], [-122.37183, 47.571002], [-122.371803, 47.571018], [-122.371775, 47.571035], [-122.371747, 47.571051], [-122.371719, 47.571066], [-122.371691, 47.571081], [-122.371663, 47.571097], [-122.371634, 47.571112], [-122.371604, 47.571126], [-122.371576, 47.57114], [-122.371546, 47.571154], [-122.371517, 47.571168], [-122.371486, 47.571181], [-122.371457, 47.571194], [-122.371426, 47.571207], [-122.371394, 47.571219], [-122.371364, 47.571232], [-122.371332, 47.571243], [-122.371301, 47.571255], [-122.371269, 47.571267], [-122.371236, 47.571278], [-122.371203, 47.571289], [-122.37117, 47.571299], [-122.371138, 47.57131], [-122.371104, 47.571321], [-122.371071, 47.571332], [-122.371038, 47.571342], [-122.371004, 47.571352], [-122.37097, 47.571361], [-122.370936, 47.57137], [-122.370902, 47.571379], [-122.370867, 47.571388], [-122.370832, 47.571396], [-122.370797, 47.571403], [-122.370762, 47.571411], [-122.370727, 47.571418], [-122.370628, 47.571438], [-122.370627, 47.571407], [-122.370627, 47.571362], [-122.370629, 47.571315], [-122.370631, 47.571269], [-122.370634, 47.571221], [-122.370637, 47.571175], [-122.37064, 47.571128], [-122.370642, 47.571081], [-122.370644, 47.571035], [-122.370645, 47.57099], [-122.370647, 47.570944], [-122.370648, 47.570899], [-122.370649, 47.570837], [-122.370665, 47.570772]]]]
    },
    "properties": {
      "neighbourhood": "Fairmount Park",
      "neighbourhood_group": "West Seattle"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.372737, 47.569877], [-122.372823, 47.569582], [-122.372978, 47.569023], [-122.373134, 47.568453], [-122.373224, 47.568098], [-122.37323, 47.568072], [-122.373237, 47.568046], [-122.373243, 47.56802], [-122.373249, 47.567994], [-122.373255, 47.567969], [-122.373261, 47.567943], [-122.373267, 47.567917], [-122.373272, 47.567891], [-122.373278, 47.567865], [-122.373425, 47.56736], [-122.373532, 47.566987], [-122.373624, 47.566785], [-122.373637, 47.566762], [-122.37365, 47.56674], [-122.373668, 47.566707], [-122.373682, 47.566685], [-122.373696, 47.566663], [-122.373711, 47.566641], [-122.373725, 47.566618], [-122.37374, 47.566596], [-122.373756, 47.566573], [-122.373771, 47.566551], [-122.373786, 47.566529], [-122.373802, 47.566508], [-122.373818, 47.566486], [-122.373834, 47.566465], [-122.373851, 47.566443], [-122.373868, 47.566422], [-122.373885, 47.5664], [-122.373902, 47.566379], [-122.37392, 47.566358], [-122.373938, 47.566337], [-122.373956, 47.566316], [-122.373974, 47.566295], [-122.373992, 47.566274], [-122.374272, 47.566023], [-122.374645, 47.565753], [-122.37528, 47.565406], [-122.375308, 47.56539], [-122.375336, 47.565375], [-122.375364, 47.56536], [-122.375393, 47.565346], [-122.375421, 47.565331], [-122.37545, 47.565317], [-122.375479, 47.565302], [-122.375508, 47.565288], [-122.375537, 47.565274], [-122.375567, 47.565261], [-122.375596, 47.565247], [-122.375626, 47.565234], [-122.375656, 47.56522], [-122.375686, 47.565207], [-122.375716, 47.565194], [-122.375747, 47.565182], [-122.375777, 47.565169], [-122.375808, 47.565157], [-122.375839, 47.565145], [-122.37587, 47.565133], [-122.375901, 47.565121], [-122.376086, 47.565072], [-122.376121, 47.565055], [-122.376822, 47.564706], [-122.377884, 47.563991], [-122.381519, 47.561174], [-122.381495, 47.55929], [-122.382581, 47.559302], [-122.384068, 47.559315], [-122.385283, 47.559304], [-122.386794, 47.559311], [-122.388109, 47.559341], [-122.389262, 47.559326], [-122.389381, 47.559328], [-122.390863, 47.559342], [-122.392637, 47.559348], [-122.394442, 47.559362], [-122.396304, 47.55937], [-122.397614, 47.559387], [-122.398294, 47.559422], [-122.39828, 47.560286], [-122.398263, 47.561286], [-122.398241, 47.562318], [-122.398236, 47.563016], [-122.398894, 47.563007], [-122.398884, 47.563327], [-122.398866, 47.564507], [-122.398862, 47.56484], [-122.398815, 47.566012], [-122.398814, 47.566632], [-122.398788, 47.568587], [-122.398773, 47.570337], [-122.398194, 47.570326], [-122.39728, 47.570311], [-122.396366, 47.570303], [-122.395453, 47.570295], [-122.394539, 47.570287], [-122.393625, 47.570279], [-122.392711, 47.570271], [-122.391814, 47.570258], [-122.390917, 47.570246], [-122.39002, 47.570233], [-122.389122, 47.57022], [-122.388229, 47.570209], [-122.387335, 47.570199], [-122.386441, 47.570188], [-122.385591, 47.570184], [-122.384765, 47.570184], [-122.383956, 47.570181], [-122.383147, 47.570178], [-122.382365, 47.570178], [-122.381509, 47.570192], [-122.380858, 47.570205], [-122.380601, 47.569821], [-122.380142, 47.569129], [-122.380042, 47.569292], [-122.379747, 47.569775], [-122.37967, 47.569799], [-122.379539, 47.569814], [-122.378585, 47.569928], [-122.377604, 47.570044], [-122.376626, 47.570162], [-122.376115, 47.570224], [-122.375582, 47.570179], [-122.374837, 47.569967], [-122.37451, 47.569867], [-122.374014, 47.569846], [-122.373843, 47.569869], [-122.373594, 47.569907], [-122.373465, 47.569865], [-122.372737, 47.569877]]]]
    },
    "properties": {
      "neighbourhood": "Genesee",
      "neighbourhood_group": "West Seattle"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.397277, 47.66505], [-122.397312, 47.664996], [-122.397351, 47.66493], [-122.397389, 47.664869], [-122.397427, 47.664806], [-122.397457, 47.664746], [-122.397434, 47.664727], [-122.397381, 47.664696], [-122.397314, 47.664663], [-122.397245, 47.664634], [-122.397211, 47.664606], [-122.397245, 47.664545], [-122.397194, 47.664533], [-122.397146, 47.664523], [-122.397117, 47.664501], [-122.397076, 47.664483], [-122.397043, 47.664462], [-122.396984, 47.664434], [-122.396947, 47.664413], [-122.396906, 47.664386], [-122.396861, 47.664363], [-122.396823, 47.664343], [-122.396771, 47.664315], [-122.396687, 47.66427], [-122.396552, 47.664198], [-122.396413, 47.664116], [-122.396397, 47.664083], [-122.396386, 47.66405], [-122.39636, 47.664007], [-122.396343, 47.66398], [-122.396301, 47.663939], [-122.396267, 47.66391], [-122.396203, 47.663864], [-122.396159, 47.66383], [-122.396113, 47.663792], [-122.396062, 47.663756], [-122.395999, 47.663718], [-122.395953, 47.663708], [-122.395914, 47.663702], [-122.395832, 47.663682], [-122.395755, 47.663662], [-122.395701, 47.663645], [-122.395658, 47.663619], [-122.395619, 47.663587], [-122.39557, 47.663562], [-122.395508, 47.663535], [-122.395459, 47.6635], [-122.395434, 47.663477], [-122.395373, 47.663419], [-122.395321, 47.663384], [-122.395291, 47.663364], [-122.395229, 47.663335], [-122.395173, 47.663313], [-122.395108, 47.663292], [-122.395052, 47.663269], [-122.395, 47.663253], [-122.394941, 47.663243], [-122.394883, 47.663231], [-122.394807, 47.663218], [-122.39475, 47.663213], [-122.3947, 47.66321], [-122.394601, 47.66321], [-122.394553, 47.663211], [-122.394487, 47.663211], [-122.394436, 47.663211], [-122.394388, 47.663211], [-122.39434, 47.663214], [-122.394304, 47.663224], [-122.394242, 47.66325], [-122.394197, 47.663262], [-122.39414, 47.663271], [-122.394066, 47.663284], [-122.394006, 47.663295], [-122.393956, 47.663302], [-122.393907, 47.663302], [-122.393834, 47.663296], [-122.393786, 47.663305], [-122.393745, 47.663316], [-122.39369, 47.663324], [-122.393637, 47.663331], [-122.393585, 47.663332], [-122.393516, 47.663323], [-122.39347, 47.663329], [-122.393419, 47.663334], [-122.393326, 47.66334], [-122.39328, 47.663347], [-122.393228, 47.663354], [-122.393184, 47.663363], [-122.393104, 47.663378], [-122.393016, 47.663392], [-122.392905, 47.663409], [-122.392858, 47.663412], [-122.392827, 47.6634], [-122.392785, 47.663365], [-122.392754, 47.663331], [-122.392709, 47.663279], [-122.392632, 47.663214], [-122.392424, 47.663213], [-122.392199, 47.663212], [-122.392063, 47.663209], [-122.392062, 47.663257], [-122.392059, 47.663364], [-122.392043, 47.663435], [-122.391899, 47.663431], [-122.391691, 47.663428], [-122.391513, 47.663424], [-122.391341, 47.663421], [-122.391188, 47.663416], [-122.39103, 47.663406], [-122.391029, 47.663377], [-122.391024, 47.663338], [-122.390967, 47.663335], [-122.390805, 47.663334], [-122.390588, 47.663331], [-122.390421, 47.663332], [-122.390351, 47.663334], [-122.390326, 47.663316], [-122.390276, 47.663315], [-122.390228, 47.66332], [-122.390184, 47.663328], [-122.390137, 47.663332], [-122.390083, 47.663327], [-122.390017, 47.663316], [-122.389935, 47.663292], [-122.389849, 47.66326], [-122.389745, 47.663223], [-122.389622, 47.663184], [-122.389512, 47.663144], [-122.38939, 47.663106], [-122.38931, 47.663071], [-122.389236, 47.66305], [-122.389174, 47.663028], [-122.389099, 47.663014], [-122.389008, 47.662996], [-122.388901, 47.66297], [-122.388807, 47.662939], [-122.388754, 47.662924], [-122.388709, 47.662917], [-122.388631, 47.662897], [-122.388561, 47.662878], [-122.388484, 47.662851], [-122.388384, 47.662816], [-122.38819, 47.662737], [-122.388063, 47.662696], [-122.387894, 47.662646], [-122.387766, 47.662602], [-122.387722, 47.662588], [-122.387643, 47.662545], [-122.387545, 47.662497], [-122.387481, 47.662464], [-122.387456, 47.662439], [-122.38743, 47.662403], [-122.387417, 47.662362], [-122.38741, 47.662334], [-122.387409, 47.662303], [-122.387423, 47.662273], [-122.387439, 47.662218], [-122.387425, 47.662184], [-122.387359, 47.662157], [-122.387298, 47.662138], [-122.387164, 47.662083], [-122.386995, 47.662014], [-122.386824, 47.661947], [-122.386676, 47.661879], [-122.386535, 47.661823], [-122.386455, 47.661786], [-122.386399, 47.661764], [-122.386366, 47.66175], [-122.386323, 47.661732], [-122.386225, 47.661697], [-122.386145, 47.661662], [-122.386127, 47.661686], [-122.386092, 47.661718], [-122.386028, 47.66176], [-122.385943, 47.661722], [-122.385837, 47.661697], [-122.385802, 47.661709], [-122.385732, 47.661681], [-122.385672, 47.661645], [-122.385658, 47.661618], [-122.385577, 47.661584], [-122.385519, 47.661567], [-122.38549, 47.661596], [-122.385451, 47.661634], [-122.385417, 47.661622], [-122.385317, 47.66158], [-122.385173, 47.661517], [-122.385028, 47.661461], [-122.384893, 47.661407], [-122.384848, 47.661367], [-122.384906, 47.661297], [-122.384957, 47.661239], [-122.384995, 47.661185], [-122.384935, 47.661155], [-122.384873, 47.661137], [-122.384855, 47.661158], [-122.384827, 47.661183], [-122.384774, 47.66116], [-122.384664, 47.661112], [-122.384538, 47.661064], [-122.384457, 47.661026], [-122.384366, 47.660989], [-122.384293, 47.660933], [-122.384311, 47.660907], [-122.384256, 47.660877], [-122.384137, 47.660805], [-122.384015, 47.660732], [-122.383904, 47.660666], [-122.383859, 47.660623], [-122.383902, 47.660586], [-122.383962, 47.660536], [-122.384012, 47.660487], [-122.383989, 47.660457], [-122.383912, 47.660358], [-122.383829, 47.660255], [-122.383737, 47.66014], [-122.383637, 47.660019], [-122.383574, 47.659932], [-122.38351, 47.659845], [-122.383473, 47.659825], [-122.383319, 47.659769], [-122.383161, 47.659709], [-122.382965, 47.659636], [-122.382895, 47.659608], [-122.382842, 47.659598], [-122.382804, 47.659575], [-122.38278, 47.659552], [-122.38275, 47.659529], [-122.382704, 47.659507], [-122.382647, 47.659497], [-122.382581, 47.659486], [-122.382515, 47.659476], [-122.382439, 47.659461], [-122.382393, 47.659448], [-122.382392, 47.65941], [-122.382392, 47.659355], [-122.38239, 47.659252], [-122.382386, 47.659187], [-122.382337, 47.659185], [-122.382092, 47.659187], [-122.381906, 47.659187], [-122.381718, 47.659187], [-122.381524, 47.659185], [-122.381331, 47.659185], [-122.381114, 47.659188], [-122.380923, 47.659188], [-122.380724, 47.659186], [-122.380574, 47.659185], [-122.380371, 47.659186], [-122.380121, 47.659188], [-122.379898, 47.659185], [-122.37972, 47.659186], [-122.379553, 47.659187], [-122.379343, 47.659189], [-122.379123, 47.65919], [-122.378905, 47.659189], [-122.378654, 47.659189], [-122.378528, 47.65919], [-122.378453, 47.659182], [-122.378455, 47.659157], [-122.378453, 47.659054], [-122.378456, 47.658953], [-122.378473, 47.658873], [-122.378526, 47.658872], [-122.378677, 47.65887], [-122.37885, 47.658874], [-122.378973, 47.658885], [-122.37897, 47.658928], [-122.378971, 47.658993], [-122.378979, 47.659036], [-122.379119, 47.659035], [-122.379317, 47.659034], [-122.379585, 47.659034], [-122.379804, 47.659035], [-122.379974, 47.659032], [-122.380118, 47.659035], [-122.380278, 47.659035], [-122.380479, 47.659036], [-122.380717, 47.659035], [-122.380918, 47.659036], [-122.381097, 47.659036], [-122.38128, 47.659037], [-122.381444, 47.659038], [-122.381621, 47.659037], [-122.381756, 47.659036], [-122.38189, 47.659036], [-122.382008, 47.659037], [-122.382106, 47.659036], [-122.382254, 47.659036], [-122.38239, 47.659031], [-122.382393, 47.659002], [-122.382394, 47.658951], [-122.382395, 47.658856], [-122.382395, 47.658703], [-122.382393, 47.658545], [-122.382394, 47.658408], [-122.38239, 47.658286], [-122.382384, 47.658139], [-122.38238, 47.658005], [-122.382376, 47.657858], [-122.382375, 47.657772], [-122.382376, 47.657629], [-122.382376, 47.657483], [-122.382379, 47.657404], [-122.382383, 47.657365], [-122.382383, 47.657235], [-122.382383, 47.657091], [-122.382384, 47.656952], [-122.382384, 47.65681], [-122.382384, 47.656668], [-122.382383, 47.656523], [-122.382383, 47.656394], [-122.382382, 47.656314], [-122.382382, 47.656177], [-122.382382, 47.656036], [-122.382383, 47.655889], [-122.382189, 47.65589], [-122.381984, 47.655889], [-122.381775, 47.655889], [-122.381774, 47.655994], [-122.381772, 47.656148], [-122.381733, 47.656148], [-122.38161, 47.656146], [-122.381609, 47.656107], [-122.381606, 47.656075], [-122.381603, 47.656021], [-122.381605, 47.65589], [-122.381471, 47.655889], [-122.381265, 47.655889], [-122.381054, 47.655881], [-122.380856, 47.655894], [-122.380819, 47.655902], [-122.380781, 47.655916], [-122.380739, 47.655917], [-122.380717, 47.655937], [-122.38053, 47.655916], [-122.380488, 47.6559], [-122.380448, 47.655889], [-122.380403, 47.655877], [-122.380287, 47.655876], [-122.380078, 47.655876], [-122.379873, 47.655875], [-122.37967, 47.655875], [-122.379668, 47.656011], [-122.379668, 47.656148], [-122.379505, 47.656149], [-122.379506, 47.656016], [-122.379486, 47.655873], [-122.379397, 47.655871], [-122.379348, 47.655873], [-122.379143, 47.655873], [-122.379082, 47.655879], [-122.37895, 47.65588], [-122.378861, 47.65588], [-122.378656, 47.655879], [-122.378579, 47.65588], [-122.378408, 47.655881], [-122.378311, 47.655882], [-122.37812, 47.655882], [-122.378119, 47.656016], [-122.378118, 47.656154], [-122.378117, 47.656299], [-122.378116, 47.656441], [-122.378114, 47.656579], [-122.378113, 47.656729], [-122.378111, 47.656859], [-122.37805, 47.656859], [-122.377792, 47.656858], [-122.377792, 47.656789], [-122.377792, 47.65665], [-122.377791, 47.656513], [-122.377792, 47.656374], [-122.377793, 47.656232], [-122.377793, 47.656086], [-122.377795, 47.655942], [-122.37771, 47.655941], [-122.377507, 47.65594], [-122.377302, 47.65594], [-122.377301, 47.656026], [-122.377301, 47.656166], [-122.377302, 47.656306], [-122.377301, 47.656448], [-122.377299, 47.656588], [-122.377299, 47.656727], [-122.377297, 47.656869], [-122.377134, 47.656869], [-122.377133, 47.656813], [-122.377133, 47.65667], [-122.377132, 47.656525], [-122.377131, 47.656386], [-122.37713, 47.656239], [-122.377131, 47.656094], [-122.377132, 47.655947], [-122.37713, 47.655889], [-122.377014, 47.655889], [-122.376806, 47.655901], [-122.376775, 47.656045], [-122.376731, 47.656049], [-122.37673, 47.656085], [-122.376728, 47.656122], [-122.376726, 47.656148], [-122.376533, 47.65614], [-122.376531, 47.656093], [-122.37653, 47.655992], [-122.376374, 47.65599], [-122.376367, 47.655936], [-122.376286, 47.65594], [-122.376224, 47.65596], [-122.376224, 47.65545], [-122.37622, 47.654693], [-122.37622, 47.653937], [-122.376214, 47.653727], [-122.376209, 47.65333], [-122.376215, 47.652901], [-122.376217, 47.652517], [-122.376233, 47.651647], [-122.376328, 47.650014], [-122.376378, 47.648303], [-122.376377, 47.647416], [-122.376352, 47.646581], [-122.376291, 47.645957], [-122.376207, 47.645105], [-122.376172, 47.64477], [-122.376174, 47.644242], [-122.376168, 47.643762], [-122.376169, 47.643261], [-122.376169, 47.642937], [-122.376169, 47.642523], [-122.376163, 47.641747], [-122.376165, 47.640988], [-122.376156, 47.640229], [-122.376149, 47.639181], [-122.376151, 47.638513], [-122.376148, 47.637837], [-122.37614, 47.637038], [-122.376133, 47.636211], [-122.376137, 47.635376], [-122.376128, 47.634495], [-122.376179, 47.633656], [-122.376186, 47.633398], [-122.376187, 47.633372], [-122.376188, 47.633347], [-122.376189, 47.633321], [-122.376189, 47.633296], [-122.376187, 47.63327], [-122.376186, 47.633244], [-122.376184, 47.633219], [-122.376181, 47.633194], [-122.376178, 47.633168], [-122.376174, 47.633143], [-122.376165, 47.633097], [-122.376159, 47.633072], [-122.376153, 47.633047], [-122.376146, 47.633022], [-122.376138, 47.632997], [-122.37613, 47.632972], [-122.376122, 47.632947], [-122.376113, 47.632922], [-122.376103, 47.632898], [-122.376093, 47.632873], [-122.376083, 47.632848], [-122.376072, 47.632824], [-122.37606, 47.6328], [-122.376048, 47.632775], [-122.376036, 47.632751], [-122.376023, 47.632727], [-122.376009, 47.632704], [-122.375995, 47.63268], [-122.375981, 47.632656], [-122.375966, 47.632633], [-122.375951, 47.632609], [-122.375935, 47.632586], [-122.375918, 47.632563], [-122.375902, 47.63254], [-122.375885, 47.632517], [-122.375867, 47.632495], [-122.375849, 47.632472], [-122.37583, 47.63245], [-122.375812, 47.632428], [-122.375792, 47.632406], [-122.375772, 47.632384], [-122.375752, 47.632363], [-122.375731, 47.632342], [-122.37571, 47.63232], [-122.375691, 47.632298], [-122.375637, 47.632238], [-122.375612, 47.63221], [-122.375446, 47.632085], [-122.374598, 47.631406], [-122.373712, 47.630719], [-122.373192, 47.630306], [-122.372331, 47.629614], [-122.371594, 47.629048], [-122.370374, 47.628081], [-122.369937, 47.627752], [-122.368808, 47.626924], [-122.368585, 47.626761], [-122.367412, 47.625887], [-122.366541, 47.625254], [-122.365411, 47.624379], [-122.363869, 47.623111], [-122.362288, 47.621785], [-122.360167, 47.620025], [-122.359281, 47.619299], [-122.358592, 47.618728], [-122.358447, 47.618608], [-122.359333, 47.618596], [-122.360477, 47.618583], [-122.360426, 47.618632], [-122.36046, 47.618656], [-122.36059, 47.618685], [-122.360667, 47.618686], [-122.360778, 47.61869], [-122.360889, 47.618685], [-122.360986, 47.618684], [-122.361068, 47.618703], [-122.361122, 47.618729], [-122.361215, 47.61877], [-122.36134, 47.618819], [-122.361453, 47.618864], [-122.361556, 47.618918], [-122.361631, 47.618963], [-122.361717, 47.619019], [-122.361797, 47.619086], [-122.361845, 47.619137], [-122.361947, 47.619222], [-122.362024, 47.619294], [-122.362111, 47.619368], [-122.362178, 47.619437], [-122.362252, 47.619513], [-122.3623, 47.619576], [-122.362339, 47.619633], [-122.36236, 47.619693], [-122.362382, 47.619736], [-122.362439, 47.61979], [-122.362499, 47.619848], [-122.362554, 47.619912], [-122.362637, 47.619999], [-122.362694, 47.620058], [-122.362748, 47.620113], [-122.362762, 47.620162], [-122.362801, 47.620204], [-122.362882, 47.620249], [-122.362955, 47.620294], [-122.363053, 47.620354], [-122.363146, 47.620419], [-122.363196, 47.620469], [-122.363272, 47.6205], [-122.363365, 47.620531], [-122.363438, 47.620541], [-122.363517, 47.62054], [-122.363602, 47.620557], [-122.36371, 47.620575], [-122.363814, 47.620605], [-122.36393, 47.620644], [-122.364067, 47.620688], [-122.364177, 47.620729], [-122.364282, 47.620775], [-122.364366, 47.620816], [-122.364467, 47.620874], [-122.364564, 47.620932], [-122.364662, 47.620999], [-122.364732, 47.621054], [-122.364827, 47.621123], [-122.364892, 47.621174], [-122.364923, 47.6212], [-122.36496, 47.621227], [-122.36503, 47.621269], [-122.365082, 47.621305], [-122.365118, 47.62133], [-122.365184, 47.621378], [-122.365216, 47.6214], [-122.365249, 47.621429], [-122.365313, 47.62148], [-122.365337, 47.621503], [-122.365365, 47.621525], [-122.365389, 47.621545], [-122.365406, 47.621568], [-122.36544, 47.621599], [-122.365465, 47.621617], [-122.365492, 47.621633], [-122.365541, 47.621669], [-122.365587, 47.621697], [-122.365637, 47.621738], [-122.365691, 47.621777], [-122.365728, 47.621806], [-122.365761, 47.62183], [-122.365811, 47.621867], [-122.365837, 47.621891], [-122.365873, 47.621922], [-122.365919, 47.621952], [-122.365957, 47.621979], [-122.365994, 47.622008], [-122.36605, 47.622057], [-122.36608, 47.622084], [-122.366116, 47.622116], [-122.366143, 47.622136], [-122.366184, 47.622159], [-122.366218, 47.622185], [-122.366248, 47.622221], [-122.366278, 47.622246], [-122.366334, 47.622275], [-122.36639, 47.622315], [-122.366419, 47.622344], [-122.366451, 47.62237], [-122.366496, 47.622414], [-122.366526, 47.622436], [-122.366558, 47.622453], [-122.366593, 47.622481], [-122.366631, 47.62251], [-122.366681, 47.622558], [-122.366708, 47.622582], [-122.366749, 47.622611], [-122.36679, 47.622631], [-122.366832, 47.622665], [-122.366876, 47.622698], [-122.366925, 47.622732], [-122.366977, 47.62277], [-122.367026, 47.622805], [-122.367079, 47.622846], [-122.367119, 47.622878], [-122.367175, 47.622922], [-122.367218, 47.622964], [-122.367255, 47.622993], [-122.367301, 47.623017], [-122.367352, 47.623051], [-122.3674, 47.623085], [-122.367422, 47.623108], [-122.367444, 47.623131], [-122.367478, 47.623159], [-122.367506, 47.623174], [-122.367557, 47.623202], [-122.367596, 47.623229], [-122.367669, 47.623284], [-122.367709, 47.623312], [-122.367784, 47.623371], [-122.367829, 47.623409], [-122.367871, 47.623444], [-122.367913, 47.623484], [-122.367963, 47.623525], [-122.367993, 47.623546], [-122.368019, 47.623568], [-122.36807, 47.623604], [-122.368124, 47.623637], [-122.368182, 47.623676], [-122.368237, 47.623709], [-122.368272, 47.623737], [-122.368309, 47.623782], [-122.368346, 47.623818], [-122.368369, 47.62384], [-122.368455, 47.623911], [-122.368474, 47.623931], [-122.368502, 47.623954], [-122.368556, 47.624009], [-122.368592, 47.62404], [-122.368629, 47.624063], [-122.368675, 47.624107], [-122.368709, 47.62414], [-122.368751, 47.624178], [-122.368796, 47.624199], [-122.368841, 47.624222], [-122.36888, 47.624239], [-122.368941, 47.624274], [-122.368998, 47.624309], [-122.369042, 47.624327], [-122.369106, 47.624366], [-122.369187, 47.624407], [-122.369242, 47.624425], [-122.369329, 47.624455], [-122.369394, 47.624483], [-122.369432, 47.624499], [-122.36949, 47.624523], [-122.369554, 47.624542], [-122.369634, 47.624568], [-122.369673, 47.624587], [-122.369714, 47.6246], [-122.36978, 47.624624], [-122.369871, 47.62465], [-122.369904, 47.624658], [-122.369969, 47.624679], [-122.370023, 47.624696], [-122.370057, 47.624704], [-122.370147, 47.624736], [-122.370195, 47.624751], [-122.370275, 47.624779], [-122.370318, 47.624795], [-122.370386, 47.624816], [-122.370436, 47.624831], [-122.370467, 47.624845], [-122.37052, 47.624856], [-122.370574, 47.62487], [-122.370628, 47.624887], [-122.37068, 47.624898], [-122.370712, 47.624914], [-122.370752, 47.624931], [-122.370797, 47.624949], [-122.37089, 47.624986], [-122.370953, 47.625018], [-122.371006, 47.625034], [-122.371039, 47.625052], [-122.371071, 47.625065], [-122.371128, 47.625093], [-122.371178, 47.625115], [-122.371225, 47.625136], [-122.371257, 47.625152], [-122.371313, 47.625181], [-122.371355, 47.625199], [-122.371391, 47.62521], [-122.37142, 47.625229], [-122.371456, 47.625242], [-122.37152, 47.625264], [-122.371568, 47.625287], [-122.371626, 47.625312], [-122.371673, 47.625331], [-122.371726, 47.625354], [-122.371798, 47.625382], [-122.371846, 47.625401], [-122.371885, 47.625415], [-122.371952, 47.625428], [-122.372004, 47.625439], [-122.372041, 47.625453], [-122.37208, 47.625471], [-122.372123, 47.625487], [-122.372185, 47.625525], [-122.372234, 47.625545], [-122.372298, 47.625567], [-122.372385, 47.625592], [-122.372449, 47.625615], [-122.372509, 47.62564], [-122.372578, 47.625671], [-122.372639, 47.625697], [-122.372691, 47.625713], [-122.372745, 47.625731], [-122.372791, 47.625748], [-122.372851, 47.625773], [-122.372909, 47.625806], [-122.372976, 47.625834], [-122.373021, 47.625851], [-122.373075, 47.625868], [-122.373131, 47.625894], [-122.373166, 47.62591], [-122.373215, 47.625931], [-122.373263, 47.625955], [-122.373304, 47.62597], [-122.373351, 47.625987], [-122.373402, 47.626008], [-122.373456, 47.626027], [-122.373487, 47.62604], [-122.373523, 47.626051], [-122.373574, 47.626077], [-122.373628, 47.626097], [-122.373667, 47.626114], [-122.373714, 47.626133], [-122.373753, 47.626147], [-122.373793, 47.626161], [-122.373866, 47.626181], [-122.373919, 47.626197], [-122.373953, 47.626204], [-122.373988, 47.626214], [-122.374041, 47.626227], [-122.374082, 47.626236], [-122.374119, 47.626244], [-122.374176, 47.626253], [-122.374233, 47.62626], [-122.374304, 47.626263], [-122.374428, 47.626268], [-122.374524, 47.626274], [-122.374582, 47.626281], [-122.374688, 47.626295], [-122.374786, 47.626307], [-122.374821, 47.626311], [-122.375026, 47.626329], [-122.375089, 47.626336], [-122.375126, 47.626338], [-122.375171, 47.626343], [-122.375217, 47.626345], [-122.375258, 47.62635], [-122.375293, 47.626371], [-122.375332, 47.626377], [-122.375385, 47.62638], [-122.37544, 47.626385], [-122.375491, 47.626392], [-122.375541, 47.626401], [-122.375594, 47.626409], [-122.375653, 47.626419], [-122.375694, 47.626432], [-122.37576, 47.626464], [-122.37581, 47.626504], [-122.375847, 47.62653], [-122.375878, 47.626545], [-122.375909, 47.626565], [-122.375953, 47.626581], [-122.375993, 47.626583], [-122.376049, 47.626594], [-122.376088, 47.626599], [-122.37617, 47.626598], [-122.376217, 47.626614], [-122.376276, 47.626629], [-122.376311, 47.626636], [-122.376357, 47.626651], [-122.376401, 47.626665], [-122.376443, 47.626684], [-122.376524, 47.626705], [-122.376577, 47.626714], [-122.376652, 47.62673], [-122.376696, 47.626735], [-122.376753, 47.626737], [-122.376801, 47.62674], [-122.376845, 47.626742], [-122.376895, 47.626743], [-122.376934, 47.626747], [-122.376989, 47.626746], [-122.377044, 47.626738], [-122.377097, 47.626743], [-122.377176, 47.626743], [-122.377225, 47.626741], [-122.377287, 47.626741], [-122.377337, 47.626738], [-122.377388, 47.626738], [-122.377474, 47.626726], [-122.377516, 47.626725], [-122.377564, 47.626724], [-122.377656, 47.626733], [-122.377713, 47.626743], [-122.377756, 47.626757], [-122.377802, 47.626769], [-122.377851, 47.626785], [-122.377881, 47.626806], [-122.377909, 47.626846], [-122.377915, 47.626874], [-122.377917, 47.62691], [-122.377923, 47.627125], [-122.377922, 47.627163], [-122.377922, 47.627199], [-122.377923, 47.627236], [-122.377926, 47.627276], [-122.37793, 47.627314], [-122.377936, 47.627349], [-122.377939, 47.627463], [-122.377943, 47.627503], [-122.377952, 47.627542], [-122.377956, 47.627574], [-122.377958, 47.62765], [-122.37796, 47.627687], [-122.377965, 47.62772], [-122.377974, 47.627759], [-122.377985, 47.627797], [-122.377985, 47.627832], [-122.377982, 47.627865], [-122.377977, 47.627907], [-122.377977, 47.627946], [-122.377975, 47.627984], [-122.377976, 47.628021], [-122.377979, 47.628055], [-122.377978, 47.628094], [-122.377979, 47.628135], [-122.377981, 47.628179], [-122.377984, 47.628219], [-122.377985, 47.628254], [-122.377986, 47.62829], [-122.377981, 47.628329], [-122.377978, 47.628365], [-122.377975, 47.628405], [-122.377976, 47.628449], [-122.377976, 47.628485], [-122.377973, 47.62852], [-122.377968, 47.628556], [-122.377963, 47.628592], [-122.37796, 47.628629], [-122.377955, 47.628671], [-122.37795, 47.628708], [-122.377945, 47.628743], [-122.377939, 47.628777], [-122.377939, 47.628814], [-122.377942, 47.628855], [-122.377943, 47.628893], [-122.377944, 47.628929], [-122.377945, 47.628959], [-122.377942, 47.628994], [-122.377941, 47.629035], [-122.377944, 47.62906], [-122.377947, 47.629096], [-122.377956, 47.62913], [-122.377947, 47.629155], [-122.377944, 47.629183], [-122.377963, 47.629224], [-122.377948, 47.629264], [-122.377931, 47.629288], [-122.377943, 47.629315], [-122.377936, 47.629347], [-122.37793, 47.629402], [-122.377925, 47.629431], [-122.377935, 47.629491], [-122.377946, 47.629527], [-122.377939, 47.629555], [-122.377941, 47.62958], [-122.377945, 47.629628], [-122.377946, 47.629663], [-122.377945, 47.629696], [-122.377941, 47.629729], [-122.377934, 47.629766], [-122.377926, 47.629808], [-122.377924, 47.629843], [-122.377926, 47.629879], [-122.377929, 47.629918], [-122.377935, 47.629955], [-122.377942, 47.629992], [-122.377946, 47.630027], [-122.377948, 47.630068], [-122.377957, 47.630095], [-122.377967, 47.630133], [-122.37797, 47.63016], [-122.377966, 47.630196], [-122.377966, 47.630232], [-122.377969, 47.63027], [-122.377971, 47.630307], [-122.377977, 47.630342], [-122.377985, 47.630382], [-122.377985, 47.630415], [-122.37798, 47.630453], [-122.377968, 47.630488], [-122.377959, 47.630526], [-122.377948, 47.630568], [-122.377941, 47.630605], [-122.377933, 47.63064], [-122.377927, 47.630677], [-122.377925, 47.63071], [-122.377925, 47.630749], [-122.377927, 47.630789], [-122.377927, 47.630824], [-122.377923, 47.63086], [-122.37792, 47.630894], [-122.377919, 47.630928], [-122.37792, 47.630962], [-122.377927, 47.631], [-122.377944, 47.631024], [-122.377981, 47.631048], [-122.378023, 47.631074], [-122.378066, 47.631115], [-122.378097, 47.631148], [-122.378098, 47.631176], [-122.378079, 47.631221], [-122.378035, 47.631273], [-122.378016, 47.6313], [-122.377996, 47.631332], [-122.37798, 47.631388], [-122.377978, 47.631424], [-122.377961, 47.631461], [-122.377986, 47.63149], [-122.378024, 47.631534], [-122.378046, 47.631592], [-122.378056, 47.631624], [-122.378067, 47.631658], [-122.378075, 47.631693], [-122.378087, 47.631732], [-122.378098, 47.631767], [-122.378107, 47.631806], [-122.378118, 47.631844], [-122.378133, 47.631883], [-122.378149, 47.631921], [-122.37816, 47.631959], [-122.378171, 47.631997], [-122.378184, 47.632031], [-122.378196, 47.632069], [-122.378211, 47.632106], [-122.378227, 47.632139], [-122.378245, 47.63217], [-122.378261, 47.6322], [-122.378271, 47.632233], [-122.378282, 47.632256], [-122.378302, 47.632289], [-122.378327, 47.632316], [-122.37836, 47.632365], [-122.378377, 47.632398], [-122.378391, 47.632433], [-122.378402, 47.632466], [-122.378417, 47.632497], [-122.378435, 47.63253], [-122.378453, 47.632566], [-122.37847, 47.6326], [-122.37849, 47.632626], [-122.378519, 47.632659], [-122.378546, 47.632688], [-122.378581, 47.632713], [-122.378632, 47.632741], [-122.378667, 47.632768], [-122.378698, 47.632797], [-122.378725, 47.632825], [-122.378757, 47.632852], [-122.378794, 47.632876], [-122.378832, 47.632903], [-122.378868, 47.632927], [-122.378897, 47.632942], [-122.378938, 47.632964], [-122.378979, 47.63298], [-122.379028, 47.633007], [-122.379056, 47.633037], [-122.379094, 47.633065], [-122.379131, 47.633088], [-122.379195, 47.633117], [-122.379253, 47.633121], [-122.379304, 47.63312], [-122.379383, 47.633111], [-122.379439, 47.633098], [-122.379476, 47.633089], [-122.379516, 47.63307], [-122.379552, 47.633067], [-122.379584, 47.633051], [-122.379626, 47.633048], [-122.379665, 47.633044], [-122.379718, 47.633041], [-122.379772, 47.633032], [-122.3798, 47.633004], [-122.379807, 47.632953], [-122.37982, 47.632919], [-122.379821, 47.632885], [-122.379819, 47.632817], [-122.379819, 47.632781], [-122.379818, 47.632744], [-122.379818, 47.632705], [-122.379818, 47.632672], [-122.379817, 47.632635], [-122.379817, 47.632598], [-122.379817, 47.63256], [-122.379818, 47.632525], [-122.379819, 47.63249], [-122.37982, 47.632455], [-122.379819, 47.632422], [-122.379818, 47.632386], [-122.379714, 47.632387], [-122.379666, 47.632387], [-122.379515, 47.632389], [-122.37951, 47.632252], [-122.379439, 47.632246], [-122.379389, 47.632245], [-122.379338, 47.632244], [-122.379327, 47.632177], [-122.379379, 47.632176], [-122.379381, 47.632149], [-122.37938, 47.632119], [-122.379417, 47.632118], [-122.379467, 47.632117], [-122.379512, 47.632115], [-122.379515, 47.632075], [-122.379516, 47.632039], [-122.379515, 47.632006], [-122.379516, 47.631969], [-122.379515, 47.631926], [-122.379515, 47.631886], [-122.379516, 47.631842], [-122.379515, 47.631805], [-122.379515, 47.631767], [-122.379516, 47.631729], [-122.379515, 47.631687], [-122.379515, 47.631646], [-122.379514, 47.631613], [-122.379514, 47.631573], [-122.379513, 47.631533], [-122.379513, 47.631498], [-122.379514, 47.631458], [-122.379515, 47.631413], [-122.379516, 47.631374], [-122.379517, 47.631331], [-122.379516, 47.631298], [-122.379515, 47.631252], [-122.379515, 47.631208], [-122.379514, 47.631171], [-122.379513, 47.631137], [-122.379513, 47.6311], [-122.379512, 47.631066], [-122.379512, 47.63103], [-122.379511, 47.630988], [-122.37951, 47.630952], [-122.37951, 47.63091], [-122.379508, 47.630825], [-122.379508, 47.630791], [-122.379505, 47.630718], [-122.379505, 47.63068], [-122.379508, 47.63064], [-122.379505, 47.630604], [-122.379503, 47.630565], [-122.379502, 47.630528], [-122.379502, 47.630494], [-122.379502, 47.630457], [-122.379502, 47.630422], [-122.379502, 47.630386], [-122.379499, 47.630304], [-122.379499, 47.630266], [-122.379499, 47.630224], [-122.379499, 47.630186], [-122.379499, 47.630147], [-122.3795, 47.630113], [-122.3795, 47.630075], [-122.379502, 47.630039], [-122.379503, 47.629999], [-122.379504, 47.629957], [-122.379505, 47.629919], [-122.379504, 47.629884], [-122.379505, 47.629846], [-122.379503, 47.629772], [-122.379502, 47.629736], [-122.379501, 47.629698], [-122.379501, 47.629661], [-122.3795, 47.629624], [-122.379502, 47.629588], [-122.379502, 47.629554], [-122.379502, 47.629515], [-122.379502, 47.62948], [-122.379503, 47.629436], [-122.379503, 47.629395], [-122.379502, 47.629352], [-122.379502, 47.629312], [-122.379502, 47.629278], [-122.379498, 47.629133], [-122.379497, 47.629096], [-122.379496, 47.629057], [-122.379495, 47.629018], [-122.379494, 47.628984], [-122.379496, 47.628949], [-122.379497, 47.628913], [-122.379498, 47.628878], [-122.379497, 47.628844], [-122.379497, 47.628801], [-122.379497, 47.628764], [-122.379498, 47.628721], [-122.379501, 47.62868], [-122.379502, 47.628643], [-122.3795, 47.628601], [-122.379499, 47.628565], [-122.379497, 47.628485], [-122.379497, 47.628437], [-122.379498, 47.628399], [-122.379499, 47.62836], [-122.3795, 47.628316], [-122.379502, 47.628269], [-122.379502, 47.628234], [-122.379502, 47.628189], [-122.379501, 47.628155], [-122.3795, 47.628113], [-122.379501, 47.628079], [-122.379501, 47.628043], [-122.379501, 47.628001], [-122.379501, 47.627965], [-122.3795, 47.627923], [-122.379501, 47.627889], [-122.379502, 47.62785], [-122.379503, 47.62781], [-122.379504, 47.627773], [-122.379503, 47.627733], [-122.379504, 47.627684], [-122.379501, 47.627608], [-122.379501, 47.627574], [-122.379502, 47.62753], [-122.379502, 47.627488], [-122.3795, 47.627447], [-122.3795, 47.627407], [-122.3795, 47.627368], [-122.379499, 47.627333], [-122.3795, 47.627296], [-122.3795, 47.627253], [-122.379501, 47.627212], [-122.379496, 47.627053], [-122.379496, 47.62702], [-122.379495, 47.62698], [-122.379496, 47.626944], [-122.379495, 47.626909], [-122.379495, 47.626872], [-122.379493, 47.626834], [-122.379493, 47.626799], [-122.379491, 47.626765], [-122.379488, 47.626722], [-122.379486, 47.626689], [-122.37948, 47.626471], [-122.379473, 47.626418], [-122.379519, 47.626417], [-122.379524, 47.626389], [-122.379694, 47.626387], [-122.379751, 47.626387], [-122.37981, 47.626387], [-122.379872, 47.626388], [-122.379925, 47.626389], [-122.379983, 47.626388], [-122.380033, 47.626388], [-122.380093, 47.626388], [-122.380148, 47.626388], [-122.380258, 47.626386], [-122.380321, 47.626386], [-122.380376, 47.626386], [-122.380431, 47.626387], [-122.380487, 47.626386], [-122.380541, 47.626388], [-122.380643, 47.626386], [-122.380697, 47.626386], [-122.380739, 47.626413], [-122.380772, 47.626442], [-122.380768, 47.626498], [-122.380768, 47.626537], [-122.380765, 47.626573], [-122.380761, 47.626612], [-122.380763, 47.626653], [-122.380764, 47.626692], [-122.380764, 47.626727], [-122.380764, 47.626767], [-122.380765, 47.626801], [-122.380769, 47.626918], [-122.380767, 47.62696], [-122.380769, 47.62703], [-122.380769, 47.627063], [-122.38077, 47.627105], [-122.38077, 47.627141], [-122.380771, 47.627183], [-122.38077, 47.627217], [-122.380773, 47.627294], [-122.380773, 47.627331], [-122.380771, 47.62737], [-122.380771, 47.627406], [-122.380772, 47.627442], [-122.380773, 47.627482], [-122.380774, 47.627524], [-122.380773, 47.627561], [-122.380772, 47.627598], [-122.380772, 47.627636], [-122.380773, 47.627669], [-122.380773, 47.627704], [-122.380773, 47.627744], [-122.380775, 47.627821], [-122.380776, 47.62786], [-122.380777, 47.627895], [-122.380777, 47.627933], [-122.380778, 47.627972], [-122.380779, 47.628006], [-122.38078, 47.628042], [-122.380779, 47.628076], [-122.38078, 47.628109], [-122.380779, 47.628145], [-122.380779, 47.628183], [-122.380779, 47.62822], [-122.380779, 47.628261], [-122.380779, 47.628296], [-122.38078, 47.628329], [-122.380781, 47.628363], [-122.380779, 47.628401], [-122.380778, 47.628437], [-122.380777, 47.628477], [-122.380778, 47.628519], [-122.380779, 47.62856], [-122.38078, 47.628595], [-122.380781, 47.628629], [-122.38078, 47.628669], [-122.380781, 47.628708], [-122.380782, 47.628745], [-122.380779, 47.628784], [-122.380778, 47.628818], [-122.380777, 47.628854], [-122.380779, 47.628891], [-122.380777, 47.628917], [-122.380779, 47.628986], [-122.380778, 47.62902], [-122.380779, 47.629057], [-122.380779, 47.629091], [-122.380782, 47.629166], [-122.380782, 47.629206], [-122.38078, 47.629239], [-122.380778, 47.629275], [-122.380777, 47.629308], [-122.380777, 47.629346], [-122.380777, 47.629383], [-122.380776, 47.629422], [-122.380776, 47.629458], [-122.380775, 47.629497], [-122.380775, 47.629534], [-122.380776, 47.629573], [-122.380776, 47.629613], [-122.380776, 47.629646], [-122.380776, 47.62968], [-122.380778, 47.629758], [-122.380778, 47.629792], [-122.380776, 47.629831], [-122.38078, 47.629972], [-122.380781, 47.630007], [-122.380782, 47.630043], [-122.380782, 47.630081], [-122.380781, 47.630119], [-122.380782, 47.630152], [-122.380782, 47.630188], [-122.380782, 47.630223], [-122.380782, 47.630256], [-122.380782, 47.630289], [-122.380785, 47.630401], [-122.380786, 47.630436], [-122.380787, 47.630469], [-122.380786, 47.630507], [-122.380785, 47.630543], [-122.380784, 47.630582], [-122.380785, 47.630619], [-122.380786, 47.630654], [-122.380785, 47.630688], [-122.380783, 47.630725], [-122.380785, 47.630761], [-122.380785, 47.630796], [-122.380785, 47.630835], [-122.380785, 47.630872], [-122.380784, 47.630906], [-122.380781, 47.630943], [-122.380782, 47.630978], [-122.380783, 47.631011], [-122.380782, 47.631049], [-122.380782, 47.631082], [-122.380783, 47.631118], [-122.380783, 47.631154], [-122.380787, 47.631297], [-122.380787, 47.631332], [-122.380793, 47.631519], [-122.380793, 47.631553], [-122.380737, 47.631555], [-122.380686, 47.631557], [-122.380637, 47.631558], [-122.380585, 47.631558], [-122.380505, 47.631556], [-122.380505, 47.631608], [-122.380511, 47.63178], [-122.380553, 47.631804], [-122.380604, 47.631813], [-122.380671, 47.63182], [-122.380708, 47.631824], [-122.380757, 47.631826], [-122.380809, 47.63183], [-122.380863, 47.631831], [-122.380917, 47.631832], [-122.380972, 47.631833], [-122.38102, 47.631832], [-122.381071, 47.631834], [-122.381122, 47.631835], [-122.381171, 47.631836], [-122.381226, 47.631836], [-122.381276, 47.631836], [-122.381327, 47.631835], [-122.381377, 47.631835], [-122.381432, 47.631834], [-122.381487, 47.631833], [-122.381866, 47.631828], [-122.381916, 47.631825], [-122.381968, 47.631823], [-122.382018, 47.631821], [-122.38207, 47.631817], [-122.382123, 47.631815], [-122.382176, 47.631815], [-122.382224, 47.631811], [-122.382276, 47.631807], [-122.382326, 47.631801], [-122.38238, 47.631795], [-122.382423, 47.631785], [-122.382467, 47.631777], [-122.382497, 47.631763], [-122.382504, 47.631731], [-122.382504, 47.631696], [-122.382503, 47.63166], [-122.382503, 47.631625], [-122.382502, 47.63159], [-122.382503, 47.631555], [-122.382397, 47.631555], [-122.382349, 47.631557], [-122.382294, 47.631556], [-122.382241, 47.631556], [-122.382192, 47.631556], [-122.382189, 47.631524], [-122.382188, 47.631489], [-122.382188, 47.631448], [-122.382187, 47.631414], [-122.382187, 47.631375], [-122.382187, 47.631337], [-122.382188, 47.631299], [-122.382188, 47.631261], [-122.382188, 47.631228], [-122.382188, 47.631188], [-122.382187, 47.631153], [-122.382186, 47.631119], [-122.382189, 47.631084], [-122.382189, 47.631051], [-122.382189, 47.631014], [-122.382188, 47.630971], [-122.382188, 47.630929], [-122.382187, 47.630893], [-122.382187, 47.630854], [-122.382184, 47.630776], [-122.382184, 47.630739], [-122.382183, 47.630705], [-122.382182, 47.630672], [-122.382182, 47.630637], [-122.382182, 47.630599], [-122.382181, 47.630558], [-122.382181, 47.630515], [-122.38218, 47.63048], [-122.38218, 47.630446], [-122.382179, 47.630405], [-122.382179, 47.630368], [-122.382178, 47.630332], [-122.382178, 47.630298], [-122.382178, 47.630264], [-122.382177, 47.630225], [-122.382177, 47.630187], [-122.382176, 47.630151], [-122.382176, 47.630117], [-122.382177, 47.630084], [-122.382178, 47.630043], [-122.382175, 47.629936], [-122.382175, 47.629897], [-122.382174, 47.62986], [-122.382174, 47.629821], [-122.382173, 47.629787], [-122.382173, 47.629749], [-122.382173, 47.629716], [-122.382172, 47.629679], [-122.382173, 47.629641], [-122.382175, 47.629605], [-122.382174, 47.629572], [-122.382174, 47.629538], [-122.382174, 47.629501], [-122.382173, 47.629467], [-122.382172, 47.62943], [-122.382172, 47.629393], [-122.382172, 47.629357], [-122.38217, 47.629319], [-122.38217, 47.629282], [-122.38217, 47.629246], [-122.382169, 47.62921], [-122.382169, 47.629171], [-122.38217, 47.629135], [-122.382169, 47.629101], [-122.382169, 47.629064], [-122.382169, 47.628991], [-122.382168, 47.628955], [-122.382167, 47.628917], [-122.382168, 47.628884], [-122.382166, 47.628814], [-122.382167, 47.62878], [-122.382166, 47.62874], [-122.382165, 47.628704], [-122.382165, 47.628667], [-122.382164, 47.62863], [-122.382165, 47.628595], [-122.382166, 47.628558], [-122.382168, 47.628524], [-122.382168, 47.628488], [-122.38217, 47.628453], [-122.38217, 47.628419], [-122.382169, 47.628385], [-122.38217, 47.628352], [-122.382169, 47.628315], [-122.382169, 47.62828], [-122.382169, 47.628243], [-122.382169, 47.628203], [-122.382166, 47.628129], [-122.382166, 47.628095], [-122.382167, 47.628059], [-122.382168, 47.628023], [-122.382168, 47.627989], [-122.382168, 47.627952], [-122.382169, 47.627914], [-122.382169, 47.627877], [-122.382169, 47.627841], [-122.382168, 47.627806], [-122.382169, 47.62777], [-122.382168, 47.627734], [-122.382169, 47.627699], [-122.382168, 47.627661], [-122.382169, 47.627623], [-122.38217, 47.627591], [-122.382171, 47.627557], [-122.382171, 47.627523], [-122.38217, 47.627486], [-122.38217, 47.627451], [-122.382168, 47.627413], [-122.382166, 47.62734], [-122.382166, 47.627305], [-122.382166, 47.627269], [-122.382166, 47.627229], [-122.382165, 47.627191], [-122.382165, 47.627157], [-122.382165, 47.627124], [-122.382165, 47.627086], [-122.382165, 47.62705], [-122.382165, 47.627011], [-122.382163, 47.626972], [-122.382163, 47.626934], [-122.382163, 47.626901], [-122.382163, 47.626866], [-122.382162, 47.626832], [-122.382162, 47.626794], [-122.382163, 47.626757], [-122.382164, 47.626719], [-122.382165, 47.626686], [-122.382166, 47.62665], [-122.382166, 47.626614], [-122.382166, 47.626578], [-122.382166, 47.626545], [-122.382165, 47.626511], [-122.382163, 47.626477], [-122.382164, 47.626443], [-122.382165, 47.626409], [-122.382181, 47.626384], [-122.382218, 47.626362], [-122.382257, 47.62636], [-122.38231, 47.626358], [-122.382364, 47.626358], [-122.382415, 47.626358], [-122.382472, 47.626359], [-122.382523, 47.626358], [-122.382576, 47.626357], [-122.382634, 47.626358], [-122.382689, 47.626359], [-122.382745, 47.626359], [-122.382794, 47.62636], [-122.382845, 47.626359], [-122.3829, 47.626359], [-122.382949, 47.626356], [-122.383001, 47.626356], [-122.38305, 47.626356], [-122.383104, 47.626354], [-122.383161, 47.626357], [-122.383213, 47.626357], [-122.383253, 47.626359], [-122.383303, 47.62636], [-122.383354, 47.62636], [-122.383407, 47.626357], [-122.383457, 47.626356], [-122.383508, 47.626357], [-122.383558, 47.626358], [-122.383607, 47.626355], [-122.383623, 47.626403], [-122.383664, 47.626405], [-122.383665, 47.626459], [-122.383683, 47.62649], [-122.383684, 47.626527], [-122.383685, 47.626565], [-122.383685, 47.626603], [-122.383686, 47.62664], [-122.383686, 47.626677], [-122.383685, 47.626712], [-122.383686, 47.626748], [-122.383683, 47.626782], [-122.383679, 47.626819], [-122.383679, 47.626854], [-122.383679, 47.62689], [-122.383679, 47.626924], [-122.383679, 47.626958], [-122.38368, 47.626991], [-122.38368, 47.627029], [-122.383681, 47.627064], [-122.383682, 47.627102], [-122.383682, 47.627139], [-122.383684, 47.627209], [-122.383685, 47.627246], [-122.383688, 47.627355], [-122.383689, 47.627391], [-122.383688, 47.627429], [-122.383688, 47.627465], [-122.383688, 47.627499], [-122.383687, 47.627535], [-122.383686, 47.627574], [-122.383686, 47.627613], [-122.383687, 47.627653], [-122.383688, 47.627691], [-122.383688, 47.627724], [-122.383688, 47.62776], [-122.383687, 47.627795], [-122.383688, 47.627834], [-122.383688, 47.627868], [-122.383689, 47.627902], [-122.383689, 47.627935], [-122.383687, 47.627972], [-122.383686, 47.628009], [-122.383684, 47.628044], [-122.383683, 47.628082], [-122.383683, 47.628118], [-122.383688, 47.628287], [-122.383688, 47.628321], [-122.383689, 47.628355], [-122.383689, 47.628392], [-122.383689, 47.628425], [-122.383689, 47.62846], [-122.383689, 47.628497], [-122.38369, 47.628533], [-122.383691, 47.628569], [-122.383691, 47.628604], [-122.383693, 47.628674], [-122.383693, 47.62871], [-122.383692, 47.628744], [-122.383692, 47.62878], [-122.383691, 47.628813], [-122.38369, 47.62885], [-122.38369, 47.628887], [-122.383691, 47.628923], [-122.383691, 47.628962], [-122.383694, 47.62907], [-122.383694, 47.629106], [-122.383694, 47.629142], [-122.383699, 47.62928], [-122.383699, 47.629313], [-122.383701, 47.629381], [-122.383701, 47.629417], [-122.383702, 47.629451], [-122.383701, 47.629486], [-122.3837, 47.62952], [-122.383699, 47.629553], [-122.383699, 47.629586], [-122.383699, 47.629623], [-122.3837, 47.629658], [-122.383699, 47.629694], [-122.383698, 47.629728], [-122.383697, 47.629763], [-122.383698, 47.629798], [-122.383697, 47.629834], [-122.383698, 47.62987], [-122.383698, 47.629903], [-122.383698, 47.629937], [-122.383699, 47.629971], [-122.383699, 47.630008], [-122.3837, 47.630043], [-122.3837, 47.630078], [-122.383699, 47.630112], [-122.383698, 47.63015], [-122.383697, 47.630185], [-122.383696, 47.630221], [-122.383697, 47.630255], [-122.383698, 47.630291], [-122.383699, 47.630328], [-122.383699, 47.630363], [-122.383699, 47.630397], [-122.3837, 47.63043], [-122.383699, 47.630468], [-122.383697, 47.630502], [-122.383702, 47.63065], [-122.383702, 47.630688], [-122.383702, 47.630722], [-122.383704, 47.630794], [-122.383704, 47.630829], [-122.383705, 47.630862], [-122.383705, 47.630899], [-122.383705, 47.630931], [-122.383706, 47.63097], [-122.383704, 47.631008], [-122.383704, 47.631042], [-122.383702, 47.631077], [-122.383703, 47.631115], [-122.383703, 47.631154], [-122.383703, 47.631189], [-122.383702, 47.631226], [-122.383703, 47.631267], [-122.383703, 47.631305], [-122.383703, 47.631338], [-122.383703, 47.631378], [-122.383703, 47.631415], [-122.383705, 47.631455], [-122.383706, 47.631493], [-122.383706, 47.631528], [-122.383706, 47.631566], [-122.383706, 47.631604], [-122.383705, 47.631638], [-122.383704, 47.631679], [-122.383704, 47.631714], [-122.383704, 47.631751], [-122.383704, 47.63179], [-122.383705, 47.631825], [-122.383705, 47.631859], [-122.383706, 47.631895], [-122.383705, 47.631934], [-122.383704, 47.631971], [-122.383705, 47.632007], [-122.383705, 47.632043], [-122.383705, 47.632081], [-122.383705, 47.632115], [-122.383702, 47.63215], [-122.383702, 47.632184], [-122.383701, 47.632218], [-122.383702, 47.632255], [-122.383702, 47.632292], [-122.383703, 47.632338], [-122.383704, 47.632394], [-122.383707, 47.632502], [-122.383707, 47.632537], [-122.383707, 47.632572], [-122.383709, 47.632609], [-122.38371, 47.632642], [-122.383711, 47.632676], [-122.383712, 47.632711], [-122.383711, 47.632745], [-122.383711, 47.63278], [-122.383715, 47.632922], [-122.383715, 47.632957], [-122.383715, 47.632993], [-122.383713, 47.633028], [-122.383712, 47.633062], [-122.383711, 47.633098], [-122.38371, 47.633131], [-122.383711, 47.633167], [-122.38371, 47.633202], [-122.383711, 47.633237], [-122.383785, 47.633237], [-122.383839, 47.633239], [-122.383892, 47.63324], [-122.383947, 47.63324], [-122.383997, 47.633239], [-122.38405, 47.633239], [-122.384099, 47.63324], [-122.384152, 47.63324], [-122.384206, 47.633241], [-122.384259, 47.633242], [-122.384316, 47.633241], [-122.384367, 47.633241], [-122.384522, 47.633239], [-122.384569, 47.63324], [-122.384618, 47.633242], [-122.384671, 47.633243], [-122.384782, 47.633241], [-122.384839, 47.633239], [-122.38488, 47.633232], [-122.384933, 47.633221], [-122.384979, 47.633209], [-122.385036, 47.633188], [-122.385088, 47.633176], [-122.385136, 47.633158], [-122.385179, 47.633141], [-122.385221, 47.633128], [-122.385255, 47.633112], [-122.385318, 47.633077], [-122.385356, 47.633052], [-122.38539, 47.633029], [-122.385441, 47.632999], [-122.385458, 47.632957], [-122.385459, 47.632928], [-122.385463, 47.632893], [-122.385468, 47.632857], [-122.38547, 47.632819], [-122.385469, 47.632783], [-122.385467, 47.632745], [-122.385469, 47.632707], [-122.385469, 47.63267], [-122.38547, 47.632633], [-122.385473, 47.63259], [-122.385472, 47.632555], [-122.385469, 47.632484], [-122.385469, 47.632442], [-122.385466, 47.632408], [-122.385464, 47.632367], [-122.385465, 47.632329], [-122.385464, 47.632289], [-122.385463, 47.632255], [-122.385461, 47.632217], [-122.385462, 47.632179], [-122.385464, 47.632137], [-122.385468, 47.632097], [-122.385468, 47.632057], [-122.385469, 47.632012], [-122.385467, 47.631976], [-122.385467, 47.631937], [-122.385466, 47.6319], [-122.385467, 47.631866], [-122.38547, 47.631827], [-122.38547, 47.631788], [-122.385468, 47.631716], [-122.385468, 47.631681], [-122.385473, 47.631644], [-122.385484, 47.631608], [-122.385492, 47.63158], [-122.385566, 47.631566], [-122.385619, 47.631557], [-122.38575, 47.631553], [-122.385806, 47.631555], [-122.385855, 47.631554], [-122.385909, 47.631554], [-122.385962, 47.631555], [-122.38602, 47.631556], [-122.386071, 47.631556], [-122.386123, 47.631555], [-122.386179, 47.631555], [-122.386233, 47.631554], [-122.386283, 47.631556], [-122.386334, 47.631556], [-122.386399, 47.631555], [-122.386454, 47.631555], [-122.386511, 47.631554], [-122.386553, 47.631557], [-122.386608, 47.631557], [-122.386658, 47.631556], [-122.386707, 47.631551], [-122.386758, 47.631549], [-122.386813, 47.631547], [-122.386883, 47.631525], [-122.386923, 47.631503], [-122.386945, 47.631483], [-122.387007, 47.631464], [-122.387043, 47.631458], [-122.387092, 47.631453], [-122.387142, 47.63145], [-122.387194, 47.631446], [-122.387246, 47.631445], [-122.387346, 47.631443], [-122.387402, 47.631442], [-122.387452, 47.631442], [-122.387503, 47.63144], [-122.387563, 47.631439], [-122.387621, 47.631438], [-122.387677, 47.631437], [-122.38772, 47.631431], [-122.387768, 47.631422], [-122.387819, 47.631411], [-122.387873, 47.631402], [-122.387913, 47.631393], [-122.387964, 47.631382], [-122.388018, 47.631375], [-122.388071, 47.631367], [-122.388126, 47.631356], [-122.388163, 47.631346], [-122.38823, 47.631317], [-122.388271, 47.631299], [-122.388312, 47.631279], [-122.388345, 47.631257], [-122.388384, 47.63123], [-122.388423, 47.631205], [-122.388462, 47.631157], [-122.388485, 47.631136], [-122.388513, 47.631108], [-122.388531, 47.631084], [-122.388575, 47.631044], [-122.388608, 47.631023], [-122.388643, 47.631002], [-122.388679, 47.630975], [-122.388706, 47.63095], [-122.38874, 47.630922], [-122.388773, 47.630894], [-122.388803, 47.630865], [-122.388837, 47.630842], [-122.388909, 47.630812], [-122.388953, 47.630797], [-122.388982, 47.630781], [-122.389005, 47.630762], [-122.389056, 47.630727], [-122.389094, 47.630711], [-122.389136, 47.630695], [-122.389182, 47.630674], [-122.389237, 47.630657], [-122.389272, 47.630648], [-122.389311, 47.630632], [-122.389387, 47.630615], [-122.389433, 47.630602], [-122.389483, 47.630592], [-122.389533, 47.630584], [-122.389585, 47.630572], [-122.389643, 47.630562], [-122.389691, 47.630553], [-122.389739, 47.630545], [-122.389791, 47.630538], [-122.389843, 47.630527], [-122.389891, 47.630519], [-122.389934, 47.630506], [-122.389982, 47.630492], [-122.390027, 47.630473], [-122.390074, 47.630455], [-122.390113, 47.630443], [-122.390156, 47.630427], [-122.390218, 47.630395], [-122.390264, 47.630378], [-122.390308, 47.630362], [-122.390358, 47.630337], [-122.390401, 47.63032], [-122.390438, 47.630297], [-122.390471, 47.63027], [-122.39049, 47.630247], [-122.39054, 47.630216], [-122.390584, 47.630194], [-122.390626, 47.630174], [-122.390657, 47.630157], [-122.390694, 47.630135], [-122.390729, 47.630122], [-122.390775, 47.630106], [-122.390823, 47.630092], [-122.390871, 47.630078], [-122.390922, 47.63006], [-122.390962, 47.630049], [-122.391019, 47.630039], [-122.391072, 47.63003], [-122.391121, 47.630023], [-122.391179, 47.630018], [-122.391239, 47.630015], [-122.391293, 47.63001], [-122.391351, 47.630009], [-122.391407, 47.630006], [-122.391466, 47.630004], [-122.391528, 47.63], [-122.391579, 47.630002], [-122.391626, 47.629998], [-122.391687, 47.629994], [-122.391731, 47.629995], [-122.391784, 47.63], [-122.391821, 47.630002], [-122.391875, 47.632647], [-122.39188, 47.633281], [-122.391887, 47.63389], [-122.391875, 47.633916], [-122.391863, 47.633943], [-122.39185, 47.633969], [-122.391835, 47.633994], [-122.39182, 47.63402], [-122.391804, 47.634045], [-122.391787, 47.63407], [-122.391769, 47.634095], [-122.39175, 47.634119], [-122.39173, 47.634143], [-122.391709, 47.634167], [-122.391688, 47.634191], [-122.391665, 47.634214], [-122.391642, 47.634236], [-122.391618, 47.634258], [-122.391592, 47.63428], [-122.391567, 47.634301], [-122.39154, 47.634322], [-122.391513, 47.634343], [-122.391484, 47.634362], [-122.391456, 47.634382], [-122.391426, 47.634401], [-122.391395, 47.634419], [-122.391364, 47.634437], [-122.391333, 47.634455], [-122.3913, 47.634472], [-122.390735, 47.634975], [-122.390047, 47.635611], [-122.389415, 47.636419], [-122.388686, 47.637403], [-122.386695, 47.640108], [-122.384753, 47.642717], [-122.382538, 47.645687], [-122.382516, 47.645709], [-122.382493, 47.645732], [-122.382471, 47.645756], [-122.38245, 47.645779], [-122.382429, 47.645803], [-122.382408, 47.645826], [-122.382387, 47.64585], [-122.382368, 47.645875], [-122.382348, 47.645899], [-122.38233, 47.645923], [-122.382311, 47.645948], [-122.382293, 47.645973], [-122.382276, 47.645998], [-122.382259, 47.646023], [-122.382243, 47.646048], [-122.382227, 47.646073], [-122.382211, 47.646099], [-122.382196, 47.646124], [-122.382181, 47.64615], [-122.382167, 47.646176], [-122.382153, 47.646202], [-122.382141, 47.646228], [-122.382128, 47.646254], [-122.382116, 47.64628], [-122.382104, 47.646307], [-122.382093, 47.646333], [-122.382083, 47.64636], [-122.382073, 47.646387], [-122.382063, 47.646413], [-122.382054, 47.64644], [-122.382045, 47.646467], [-122.382037, 47.646494], [-122.38203, 47.646521], [-122.382023, 47.646549], [-122.382016, 47.646576], [-122.38201, 47.646603], [-122.382004, 47.64663], [-122.382, 47.646658], [-122.381995, 47.646685], [-122.381991, 47.646712], [-122.381988, 47.64674], [-122.381985, 47.646767], [-122.381982, 47.646795], [-122.38198, 47.646825], [-122.381968, 47.647694], [-122.381974, 47.64841], [-122.381975, 47.648459], [-122.38199, 47.650155], [-122.382002, 47.650555], [-122.383073, 47.651966], [-122.383689, 47.652766], [-122.385389, 47.654987], [-122.385891, 47.655406], [-122.387473, 47.656663], [-122.389253, 47.658082], [-122.391401, 47.659774], [-122.392491, 47.660472], [-122.39351, 47.660989], [-122.394318, 47.661325], [-122.396043, 47.661319], [-122.398291, 47.662551], [-122.398332, 47.664953], [-122.398252, 47.664926], [-122.398194, 47.664907], [-122.398134, 47.664888], [-122.398076, 47.664869], [-122.398014, 47.66485], [-122.397948, 47.664828], [-122.397914, 47.66482], [-122.39787, 47.664831], [-122.397825, 47.664818], [-122.397752, 47.664802], [-122.397703, 47.66479], [-122.397663, 47.664779], [-122.39763, 47.664766], [-122.397592, 47.664768], [-122.397564, 47.664816], [-122.397548, 47.664849], [-122.397515, 47.664912], [-122.397494, 47.664948], [-122.39747, 47.664998], [-122.39744, 47.665049], [-122.397423, 47.665075], [-122.397277, 47.66505]]]]
    },
    "properties": {
      "neighbourhood": "Interbay",
      "neighbourhood_group": "Interbay"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.320238, 47.595827], [-122.320239, 47.5958], [-122.320239, 47.595776], [-122.32024, 47.595751], [-122.320241, 47.595727], [-122.320241, 47.595702], [-122.320243, 47.595678], [-122.320245, 47.595653], [-122.320246, 47.595629], [-122.320248, 47.595604], [-122.32025, 47.59558], [-122.320252, 47.595555], [-122.320255, 47.595531], [-122.320258, 47.595506], [-122.32026, 47.595482], [-122.320264, 47.595457], [-122.320267, 47.595433], [-122.320271, 47.595408], [-122.320274, 47.595384], [-122.320278, 47.59536], [-122.320283, 47.595335], [-122.320287, 47.595311], [-122.320385, 47.59474], [-122.320483, 47.594268], [-122.320605, 47.593684], [-122.320658, 47.593568], [-122.320699, 47.593347], [-122.320842, 47.592642], [-122.320847, 47.592618], [-122.320853, 47.592593], [-122.320858, 47.592569], [-122.320864, 47.592544], [-122.320869, 47.59252], [-122.320874, 47.592495], [-122.320879, 47.592471], [-122.320884, 47.592446], [-122.320888, 47.592422], [-122.320893, 47.592397], [-122.320897, 47.592372], [-122.320902, 47.592348], [-122.320905, 47.592323], [-122.32091, 47.592299], [-122.320914, 47.592274], [-122.320918, 47.592249], [-122.320921, 47.592225], [-122.320925, 47.5922], [-122.320929, 47.592175], [-122.320932, 47.592151], [-122.320935, 47.592126], [-122.320939, 47.592101], [-122.320942, 47.592077], [-122.320945, 47.592052], [-122.320948, 47.592027], [-122.320951, 47.592003], [-122.320954, 47.59197], [-122.320956, 47.591946], [-122.320959, 47.591921], [-122.320961, 47.591896], [-122.320963, 47.591871], [-122.320965, 47.591847], [-122.320967, 47.591822], [-122.320969, 47.591797], [-122.320971, 47.591772], [-122.320974, 47.591748], [-122.320978, 47.591724], [-122.320982, 47.591699], [-122.320986, 47.591674], [-122.32099, 47.59165], [-122.320993, 47.591625], [-122.320996, 47.5916], [-122.320999, 47.591576], [-122.321001, 47.591551], [-122.321003, 47.591526], [-122.321005, 47.591501], [-122.321006, 47.591477], [-122.321008, 47.591452], [-122.321009, 47.591427], [-122.32101, 47.591402], [-122.321011, 47.591378], [-122.321011, 47.591353], [-122.321011, 47.591328], [-122.321011, 47.591303], [-122.32101, 47.591278], [-122.321009, 47.591254], [-122.321008, 47.591229], [-122.321007, 47.591204], [-122.321005, 47.591179], [-122.321003, 47.591155], [-122.321001, 47.59113], [-122.320999, 47.591105], [-122.320996, 47.591081], [-122.320993, 47.591056], [-122.320988, 47.591022], [-122.320985, 47.590997], [-122.320981, 47.590972], [-122.320977, 47.590948], [-122.320972, 47.590923], [-122.320968, 47.590899], [-122.320963, 47.590875], [-122.32076, 47.590043], [-122.320755, 47.590018], [-122.320751, 47.589994], [-122.320746, 47.589969], [-122.320741, 47.589945], [-122.320736, 47.58992], [-122.320731, 47.589895], [-122.320725, 47.589871], [-122.32072, 47.589846], [-122.320715, 47.589822], [-122.320709, 47.589797], [-122.320703, 47.589773], [-122.320698, 47.589749], [-122.320692, 47.589724], [-122.320686, 47.5897], [-122.320679, 47.589675], [-122.320673, 47.589651], [-122.320667, 47.589626], [-122.32066, 47.589602], [-122.320654, 47.589578], [-122.320646, 47.589553], [-122.32064, 47.589529], [-122.320633, 47.589505], [-122.320626, 47.589481], [-122.320618, 47.589456], [-122.320611, 47.589432], [-122.320603, 47.589408], [-122.320596, 47.589383], [-122.320588, 47.589359], [-122.32058, 47.589335], [-122.320572, 47.589311], [-122.320564, 47.589287], [-122.320553, 47.589255], [-122.320544, 47.589229], [-122.320535, 47.589203], [-122.320526, 47.589177], [-122.320516, 47.589151], [-122.320507, 47.589125], [-122.320317, 47.588342], [-122.320256, 47.587959], [-122.320209, 47.587604], [-122.320205, 47.587576], [-122.32016, 47.587143], [-122.320114, 47.586659], [-122.320076, 47.586275], [-122.320025, 47.585769], [-122.319951, 47.584855], [-122.319849, 47.583944], [-122.319845, 47.583919], [-122.319841, 47.583895], [-122.319837, 47.58387], [-122.319833, 47.583845], [-122.319828, 47.583821], [-122.319824, 47.583796], [-122.31982, 47.583772], [-122.319815, 47.583747], [-122.319811, 47.583722], [-122.319806, 47.583698], [-122.319801, 47.583673], [-122.319797, 47.583649], [-122.319792, 47.583624], [-122.319787, 47.5836], [-122.319782, 47.583575], [-122.319777, 47.583551], [-122.319773, 47.583526], [-122.319767, 47.583501], [-122.319763, 47.583477], [-122.319757, 47.583452], [-122.319752, 47.583428], [-122.319747, 47.583403], [-122.319742, 47.583379], [-122.319736, 47.583354], [-122.319731, 47.58333], [-122.319726, 47.583305], [-122.31972, 47.583281], [-122.319715, 47.583256], [-122.319709, 47.583232], [-122.319703, 47.583207], [-122.319698, 47.583183], [-122.319692, 47.583158], [-122.319686, 47.583132], [-122.31968, 47.583106], [-122.319673, 47.583079], [-122.319667, 47.583053], [-122.31966, 47.583026], [-122.31958, 47.582732], [-122.319415, 47.582122], [-122.319408, 47.582097], [-122.319401, 47.582073], [-122.319394, 47.582049], [-122.319387, 47.582025], [-122.31938, 47.582], [-122.319373, 47.581976], [-122.319366, 47.581952], [-122.319359, 47.581927], [-122.319352, 47.581903], [-122.319346, 47.581878], [-122.319339, 47.581854], [-122.319333, 47.58183], [-122.319327, 47.581805], [-122.319321, 47.581781], [-122.319315, 47.581756], [-122.319309, 47.581732], [-122.319303, 47.581708], [-122.319297, 47.581683], [-122.319291, 47.581659], [-122.319285, 47.581634], [-122.31928, 47.58161], [-122.319274, 47.581585], [-122.319269, 47.581561], [-122.319264, 47.581536], [-122.319259, 47.581512], [-122.319253, 47.581487], [-122.319249, 47.581463], [-122.319244, 47.581438], [-122.319239, 47.581413], [-122.319234, 47.581389], [-122.31923, 47.581364], [-122.319225, 47.58134], [-122.319221, 47.581315], [-122.319216, 47.581289], [-122.319211, 47.581262], [-122.319207, 47.581236], [-122.319202, 47.581209], [-122.319017, 47.580286], [-122.318999, 47.580144], [-122.318984, 47.580003], [-122.318973, 47.579862], [-122.318966, 47.57972], [-122.318962, 47.579578], [-122.318962, 47.579437], [-122.318965, 47.579295], [-122.318973, 47.579154], [-122.318984, 47.579012], [-122.318998, 47.578871], [-122.319023, 47.578686], [-122.319174, 47.577998], [-122.319224, 47.577774], [-122.31946, 47.576847], [-122.319558, 47.57652], [-122.319562, 47.576496], [-122.319567, 47.576471], [-122.319571, 47.576447], [-122.319575, 47.576422], [-122.319579, 47.576397], [-122.319583, 47.576373], [-122.319587, 47.576348], [-122.319591, 47.576323], [-122.319595, 47.576299], [-122.319599, 47.576274], [-122.319602, 47.57625], [-122.319606, 47.576225], [-122.319609, 47.5762], [-122.319613, 47.576176], [-122.319616, 47.576151], [-122.31962, 47.576126], [-122.319623, 47.576102], [-122.319626, 47.576077], [-122.319629, 47.576052], [-122.319633, 47.576028], [-122.319635, 47.576003], [-122.319638, 47.575978], [-122.319642, 47.575953], [-122.319644, 47.575927], [-122.319702, 47.575024], [-122.319763, 47.5741], [-122.319813, 47.573192], [-122.319825, 47.572569], [-122.319825, 47.572514], [-122.319826, 47.572489], [-122.319827, 47.572464], [-122.319828, 47.57244], [-122.31983, 47.572415], [-122.319832, 47.57239], [-122.319835, 47.572365], [-122.319838, 47.572341], [-122.319842, 47.572316], [-122.319847, 47.57229], [-122.319853, 47.572263], [-122.319859, 47.572236], [-122.319865, 47.57221], [-122.31987, 47.572183], [-122.319874, 47.572157], [-122.319877, 47.57213], [-122.31988, 47.572104], [-122.319882, 47.572077], [-122.319884, 47.57205], [-122.319885, 47.572024], [-122.319886, 47.571997], [-122.319885, 47.57197], [-122.319885, 47.571944], [-122.319883, 47.571917], [-122.319881, 47.57189], [-122.319879, 47.571864], [-122.319875, 47.571837], [-122.319905, 47.57139], [-122.31997, 47.570466], [-122.320059, 47.569558], [-122.320177, 47.568649], [-122.32033, 47.567734], [-122.320488, 47.566874], [-122.320661, 47.565953], [-122.320833, 47.565028], [-122.321006, 47.564113], [-122.321175, 47.563201], [-122.321343, 47.562289], [-122.321476, 47.561377], [-122.321467, 47.560906], [-122.321452, 47.560674], [-122.32141, 47.56001], [-122.321214, 47.559157], [-122.320828, 47.558317], [-122.320537, 47.557742], [-122.320321, 47.557419], [-122.319727, 47.556508], [-122.319175, 47.555719], [-122.318937, 47.555445], [-122.318748, 47.555113], [-122.318553, 47.554828], [-122.317991, 47.553931], [-122.317703, 47.553458], [-122.317989, 47.55346], [-122.318407, 47.553457], [-122.319245, 47.553451], [-122.319279, 47.553445], [-122.319318, 47.553437], [-122.319355, 47.553427], [-122.319391, 47.553416], [-122.319426, 47.553403], [-122.31946, 47.553389], [-122.319493, 47.553374], [-122.319524, 47.553357], [-122.319554, 47.553338], [-122.319582, 47.553319], [-122.319608, 47.553298], [-122.319632, 47.553277], [-122.319652, 47.553253], [-122.31967, 47.553229], [-122.319687, 47.553204], [-122.319702, 47.553179], [-122.319716, 47.553154], [-122.319728, 47.553128], [-122.319749, 47.553076], [-122.320442, 47.553622], [-122.320978, 47.553368], [-122.321016, 47.55335], [-122.322819, 47.553365], [-122.323897, 47.553364], [-122.324318, 47.553739], [-122.324729, 47.554121], [-122.324986, 47.554132], [-122.325331, 47.554148], [-122.326912, 47.554193], [-122.328388, 47.554226], [-122.329413, 47.554237], [-122.330833, 47.554196], [-122.332353, 47.55422], [-122.334021, 47.554193], [-122.335236, 47.554179], [-122.337121, 47.554229], [-122.337432, 47.55406], [-122.337677, 47.554246], [-122.338345, 47.555663], [-122.339671, 47.555834], [-122.341787, 47.556108], [-122.34178, 47.556143], [-122.341673, 47.556131], [-122.341586, 47.55612], [-122.341405, 47.5561], [-122.341225, 47.556078], [-122.341001, 47.556052], [-122.340826, 47.55603], [-122.34069, 47.556008], [-122.340585, 47.555995], [-122.340456, 47.555981], [-122.340299, 47.555963], [-122.340036, 47.555931], [-122.339894, 47.555909], [-122.339772, 47.555908], [-122.339687, 47.5559], [-122.339574, 47.555887], [-122.339538, 47.555908], [-122.339482, 47.55594], [-122.339432, 47.555957], [-122.339382, 47.555967], [-122.339333, 47.556013], [-122.33932, 47.556063], [-122.339392, 47.556115], [-122.339467, 47.556174], [-122.339528, 47.556238], [-122.339605, 47.556318], [-122.339688, 47.55641], [-122.339769, 47.556492], [-122.339816, 47.556534], [-122.339882, 47.556533], [-122.339942, 47.556521], [-122.33999, 47.556542], [-122.340042, 47.55659], [-122.340043, 47.556623], [-122.340044, 47.556696], [-122.340045, 47.556763], [-122.340046, 47.556833], [-122.340047, 47.556913], [-122.340049, 47.557003], [-122.34005, 47.557067], [-122.340152, 47.557089], [-122.340248, 47.557088], [-122.340365, 47.557087], [-122.340478, 47.557088], [-122.340574, 47.557088], [-122.340715, 47.557087], [-122.340905, 47.557085], [-122.341093, 47.557085], [-122.341271, 47.557084], [-122.341532, 47.557082], [-122.341675, 47.557082], [-122.341898, 47.557082], [-122.342085, 47.557082], [-122.34225, 47.557082], [-122.342537, 47.557081], [-122.342662, 47.55708], [-122.342697, 47.557142], [-122.342742, 47.557228], [-122.34277, 47.557288], [-122.342811, 47.557359], [-122.342879, 47.557496], [-122.342938, 47.557613], [-122.342988, 47.557679], [-122.343018, 47.557751], [-122.343035, 47.557824], [-122.343055, 47.557885], [-122.343086, 47.557966], [-122.343111, 47.558056], [-122.34315, 47.558102], [-122.343192, 47.558154], [-122.343216, 47.558214], [-122.343253, 47.558282], [-122.343267, 47.558345], [-122.343265, 47.558373], [-122.343228, 47.558411], [-122.343284, 47.55843], [-122.343325, 47.558488], [-122.343362, 47.558557], [-122.343371, 47.558662], [-122.343363, 47.558727], [-122.343408, 47.558779], [-122.343466, 47.558815], [-122.343539, 47.558866], [-122.343582, 47.558931], [-122.34361, 47.558995], [-122.343659, 47.559102], [-122.343715, 47.559202], [-122.343777, 47.55933], [-122.343844, 47.559418], [-122.343903, 47.559518], [-122.343963, 47.559635], [-122.344057, 47.559764], [-122.344122, 47.559852], [-122.344205, 47.559975], [-122.344234, 47.560073], [-122.344259, 47.560143], [-122.344245, 47.560225], [-122.344215, 47.560296], [-122.344147, 47.560332], [-122.344064, 47.560368], [-122.343973, 47.560411], [-122.343878, 47.560462], [-122.343808, 47.560507], [-122.343803, 47.560565], [-122.34386, 47.560616], [-122.343913, 47.560659], [-122.344, 47.560687], [-122.344096, 47.560682], [-122.344195, 47.56065], [-122.344286, 47.560638], [-122.344351, 47.560656], [-122.344419, 47.560722], [-122.344486, 47.560793], [-122.34454, 47.560844], [-122.344551, 47.560903], [-122.344567, 47.560993], [-122.344609, 47.561042], [-122.344618, 47.561101], [-122.344653, 47.561175], [-122.344701, 47.561235], [-122.34474, 47.561284], [-122.344759, 47.561338], [-122.34476, 47.561439], [-122.344758, 47.561534], [-122.344749, 47.561613], [-122.344704, 47.561677], [-122.344651, 47.561737], [-122.34459, 47.561801], [-122.344542, 47.561864], [-122.344523, 47.561923], [-122.344559, 47.561974], [-122.34458, 47.562053], [-122.344599, 47.562085], [-122.344618, 47.562134], [-122.344637, 47.562204], [-122.344664, 47.562256], [-122.344688, 47.56232], [-122.34472, 47.562394], [-122.344783, 47.56246], [-122.344823, 47.562499], [-122.344838, 47.562554], [-122.344862, 47.562585], [-122.344922, 47.562654], [-122.344929, 47.562735], [-122.344982, 47.562822], [-122.345016, 47.562886], [-122.34507, 47.562966], [-122.345135, 47.562985], [-122.345182, 47.563012], [-122.345234, 47.563064], [-122.345262, 47.56311], [-122.345268, 47.563188], [-122.345183, 47.563228], [-122.345122, 47.563231], [-122.345082, 47.563262], [-122.345076, 47.563286], [-122.345149, 47.563336], [-122.345241, 47.563376], [-122.345347, 47.56339], [-122.345448, 47.563409], [-122.345531, 47.563433], [-122.34558, 47.563472], [-122.345619, 47.56354], [-122.345659, 47.563633], [-122.345718, 47.563741], [-122.345786, 47.563861], [-122.345849, 47.563979], [-122.345917, 47.564102], [-122.345998, 47.564256], [-122.346066, 47.564386], [-122.346131, 47.564504], [-122.346178, 47.5646], [-122.346213, 47.56469], [-122.346206, 47.56479], [-122.346187, 47.564877], [-122.346165, 47.564986], [-122.346133, 47.565129], [-122.346097, 47.565289], [-122.346063, 47.565425], [-122.34604, 47.565533], [-122.346021, 47.565626], [-122.345992, 47.565734], [-122.345965, 47.565863], [-122.345941, 47.565977], [-122.345923, 47.566089], [-122.34591, 47.566178], [-122.345909, 47.566235], [-122.345914, 47.566294], [-122.345894, 47.566375], [-122.345872, 47.566462], [-122.345842, 47.566555], [-122.345826, 47.566636], [-122.345807, 47.566714], [-122.345773, 47.566747], [-122.345739, 47.566757], [-122.34574, 47.56682], [-122.345733, 47.566918], [-122.34573, 47.566988], [-122.34572, 47.567078], [-122.345703, 47.567192], [-122.345683, 47.567294], [-122.345673, 47.56736], [-122.345666, 47.567408], [-122.345637, 47.567437], [-122.345604, 47.567491], [-122.345618, 47.567545], [-122.345616, 47.567633], [-122.345615, 47.567697], [-122.345604, 47.567768], [-122.345598, 47.567842], [-122.345582, 47.567914], [-122.345567, 47.567973], [-122.345669, 47.567991], [-122.345791, 47.568008], [-122.345751, 47.568125], [-122.345643, 47.5684], [-122.345567, 47.568586], [-122.345457, 47.568871], [-122.345394, 47.569033], [-122.345381, 47.569079], [-122.345438, 47.569113], [-122.345541, 47.56915], [-122.345635, 47.569194], [-122.345702, 47.569224], [-122.34573, 47.569244], [-122.345748, 47.569272], [-122.345741, 47.56934], [-122.345703, 47.569424], [-122.34565, 47.569554], [-122.345602, 47.56967], [-122.345558, 47.569794], [-122.345513, 47.569941], [-122.345454, 47.57009], [-122.345372, 47.570276], [-122.345303, 47.570435], [-122.345244, 47.570586], [-122.345192, 47.57065], [-122.345118, 47.570692], [-122.34502, 47.570728], [-122.344915, 47.57077], [-122.344823, 47.570806], [-122.344769, 47.570826], [-122.344727, 47.570928], [-122.34469, 47.571044], [-122.344692, 47.571075], [-122.344616, 47.571276], [-122.344483, 47.57175], [-122.344491, 47.571788], [-122.344493, 47.571881], [-122.344492, 47.57192], [-122.344468, 47.571959], [-122.344473, 47.572013], [-122.344425, 47.572044], [-122.344367, 47.572061], [-122.34429, 47.572121], [-122.344233, 47.572192], [-122.344184, 47.572273], [-122.344143, 47.572347], [-122.344093, 47.572395], [-122.344056, 47.572421], [-122.344154, 47.57242], [-122.344124, 47.572516], [-122.344075, 47.572627], [-122.344059, 47.572666], [-122.344014, 47.572811], [-122.343929, 47.572995], [-122.343852, 47.573205], [-122.343773, 47.57342], [-122.343704, 47.573588], [-122.343671, 47.573637], [-122.343632, 47.573657], [-122.343582, 47.573666], [-122.343387, 47.573665], [-122.343185, 47.573665], [-122.343014, 47.573668], [-122.343011, 47.573841], [-122.34301, 47.574014], [-122.34301, 47.5742], [-122.343009, 47.574344], [-122.34301, 47.574499], [-122.343003, 47.574636], [-122.343003, 47.574773], [-122.343004, 47.574887], [-122.343004, 47.575003], [-122.343003, 47.575156], [-122.343003, 47.575274], [-122.343004, 47.575406], [-122.343004, 47.575582], [-122.343003, 47.575731], [-122.343003, 47.575861], [-122.343003, 47.576033], [-122.343, 47.576171], [-122.343001, 47.576317], [-122.343, 47.576439], [-122.343, 47.576581], [-122.343, 47.576743], [-122.342999, 47.576908], [-122.343, 47.577042], [-122.342999, 47.577147], [-122.343, 47.577268], [-122.343, 47.577382], [-122.342999, 47.577498], [-122.343, 47.577614], [-122.343, 47.577725], [-122.342999, 47.57784], [-122.343, 47.577931], [-122.343, 47.577986], [-122.342914, 47.577988], [-122.342795, 47.577987], [-122.34269, 47.577987], [-122.342535, 47.577988], [-122.34253, 47.578071], [-122.342526, 47.578193], [-122.342526, 47.5783], [-122.342524, 47.578434], [-122.342523, 47.578539], [-122.342521, 47.578687], [-122.342521, 47.578748], [-122.342515, 47.578824], [-122.342492, 47.578854], [-122.342437, 47.578915], [-122.342373, 47.578955], [-122.342306, 47.578945], [-122.342189, 47.578885], [-122.342077, 47.578824], [-122.341972, 47.578746], [-122.341885, 47.578682], [-122.341769, 47.578609], [-122.341682, 47.578547], [-122.341592, 47.578486], [-122.341481, 47.578414], [-122.341369, 47.578348], [-122.341276, 47.578284], [-122.341193, 47.578237], [-122.34112, 47.578181], [-122.341049, 47.578127], [-122.340978, 47.578093], [-122.340923, 47.578081], [-122.340887, 47.578086], [-122.340819, 47.578054], [-122.340739, 47.578006], [-122.340699, 47.577972], [-122.340611, 47.577939], [-122.340484, 47.57791], [-122.340433, 47.577911], [-122.340391, 47.577897], [-122.340306, 47.577883], [-122.340247, 47.577872], [-122.340209, 47.577877], [-122.340179, 47.577936], [-122.340191, 47.578059], [-122.340188, 47.578168], [-122.340189, 47.578273], [-122.34019, 47.578393], [-122.34019, 47.578461], [-122.340216, 47.578516], [-122.340292, 47.578572], [-122.340442, 47.578667], [-122.34059, 47.578766], [-122.34077, 47.57889], [-122.340976, 47.579029], [-122.341168, 47.579159], [-122.341363, 47.579289], [-122.341555, 47.57942], [-122.341734, 47.579546], [-122.341906, 47.579659], [-122.342066, 47.579761], [-122.342279, 47.579912], [-122.342453, 47.580029], [-122.342986, 47.580386], [-122.343005, 47.580415], [-122.343009, 47.580439], [-122.343008, 47.580691], [-122.343009, 47.581177], [-122.343011, 47.581723], [-122.34301, 47.582541], [-122.34301, 47.582685], [-122.343011, 47.583462], [-122.343011, 47.584652], [-122.343009, 47.585497], [-122.342562, 47.5855], [-122.342566, 47.585527], [-122.342574, 47.585604], [-122.342578, 47.58567], [-122.342581, 47.585729], [-122.342572, 47.585799], [-122.342552, 47.585851], [-122.342544, 47.585894], [-122.342543, 47.585942], [-122.342544, 47.585988], [-122.342546, 47.58604], [-122.342543, 47.58609], [-122.342549, 47.586136], [-122.342575, 47.586203], [-122.342603, 47.586253], [-122.342695, 47.586251], [-122.342775, 47.586238], [-122.342779, 47.58632], [-122.34278, 47.586458], [-122.342783, 47.586613], [-122.342784, 47.586777], [-122.342779, 47.58692], [-122.342782, 47.587052], [-122.342783, 47.587199], [-122.342785, 47.587296], [-122.342869, 47.587322], [-122.342988, 47.587375], [-122.34298, 47.587635], [-122.342705, 47.587641], [-122.342568, 47.587643], [-122.342578, 47.587835], [-122.342586, 47.588063], [-122.342592, 47.58821], [-122.342573, 47.588289], [-122.342575, 47.588439], [-122.342607, 47.588512], [-122.342688, 47.588561], [-122.342768, 47.588584], [-122.34285, 47.588632], [-122.34289, 47.588668], [-122.342911, 47.588709], [-122.342947, 47.588773], [-122.342965, 47.588862], [-122.342958, 47.588951], [-122.342944, 47.589027], [-122.342926, 47.589109], [-122.34288, 47.589168], [-122.342885, 47.589238], [-122.342814, 47.589264], [-122.342751, 47.589289], [-122.342674, 47.589334], [-122.342608, 47.589369], [-122.342522, 47.589402], [-122.342428, 47.589436], [-122.342361, 47.589475], [-122.342363, 47.589523], [-122.342604, 47.589602], [-122.342774, 47.589649], [-122.342925, 47.589694], [-122.34293, 47.589788], [-122.342929, 47.589924], [-122.342922, 47.590039], [-122.342777, 47.590041], [-122.342463, 47.590046], [-122.342156, 47.590044], [-122.34184, 47.590042], [-122.341617, 47.590046], [-122.341234, 47.590045], [-122.340859, 47.590046], [-122.34035, 47.590048], [-122.339774, 47.590045], [-122.339374, 47.590045], [-122.339007, 47.59004], [-122.338548, 47.590046], [-122.338266, 47.590053], [-122.338265, 47.590212], [-122.338271, 47.59034], [-122.338267, 47.590469], [-122.338267, 47.590574], [-122.338272, 47.590663], [-122.338602, 47.590662], [-122.339143, 47.590665], [-122.339555, 47.590663], [-122.339981, 47.590666], [-122.340641, 47.590667], [-122.341138, 47.590666], [-122.341578, 47.590668], [-122.341981, 47.590666], [-122.34247, 47.590669], [-122.342871, 47.590668], [-122.343, 47.590754], [-122.343002, 47.59093], [-122.343005, 47.59114], [-122.343008, 47.591273], [-122.342907, 47.591524], [-122.342806, 47.591793], [-122.342735, 47.591995], [-122.342626, 47.592284], [-122.342518, 47.592565], [-122.342423, 47.592829], [-122.342332, 47.593062], [-122.34228, 47.593198], [-122.342036, 47.59262], [-122.338657, 47.592393], [-122.338024, 47.592385], [-122.336289, 47.592384], [-122.335949, 47.592388], [-122.335078, 47.592405], [-122.334167, 47.592428], [-122.333254, 47.592391], [-122.332297, 47.592403], [-122.331917, 47.592408], [-122.331576, 47.592393], [-122.330801, 47.592395], [-122.330149, 47.592397], [-122.329295, 47.592397], [-122.329043, 47.592397], [-122.32905, 47.592918], [-122.329049, 47.593517], [-122.329052, 47.593907], [-122.329046, 47.594724], [-122.329052, 47.595618], [-122.329042, 47.596482], [-122.328736, 47.596327], [-122.328513, 47.596214], [-122.327931, 47.595921], [-122.327684, 47.595796], [-122.327348, 47.595836], [-122.327104, 47.595835], [-122.326373, 47.595837], [-122.325523, 47.595834], [-122.324679, 47.595835], [-122.323841, 47.595835], [-122.323493, 47.59583], [-122.32258, 47.595831], [-122.322212, 47.595831], [-122.321612, 47.595834], [-122.320787, 47.595834], [-122.320238, 47.595827]]]]
    },
    "properties": {
      "neighbourhood": "Industrial District",
      "neighbourhood_group": "Other neighborhoods"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.304645, 47.559599], [-122.303663, 47.559734], [-122.303618, 47.55974], [-122.303573, 47.559746], [-122.303528, 47.559753], [-122.303483, 47.559759], [-122.303438, 47.559767], [-122.303393, 47.559774], [-122.303348, 47.559782], [-122.303304, 47.559789], [-122.303259, 47.559798], [-122.303215, 47.559806], [-122.30317, 47.559815], [-122.303126, 47.559824], [-122.303082, 47.559833], [-122.303038, 47.559842], [-122.302994, 47.559852], [-122.302951, 47.559862], [-122.302907, 47.559872], [-122.302863, 47.559883], [-122.30282, 47.559893], [-122.302777, 47.559904], [-122.302734, 47.559916], [-122.302691, 47.559927], [-122.302648, 47.559939], [-122.302606, 47.559951], [-122.302563, 47.559963], [-122.302521, 47.559976], [-122.302479, 47.559988], [-122.302436, 47.560001], [-122.302395, 47.560015], [-122.302353, 47.560028], [-122.302311, 47.560042], [-122.30227, 47.560056], [-122.302229, 47.56007], [-122.301361, 47.560366], [-122.298777, 47.561354], [-122.298741, 47.561374], [-122.298705, 47.561393], [-122.298668, 47.561412], [-122.29863, 47.56143], [-122.298592, 47.561448], [-122.298554, 47.561465], [-122.298514, 47.561481], [-122.298474, 47.561497], [-122.298434, 47.561512], [-122.298393, 47.561526], [-122.298352, 47.56154], [-122.29831, 47.561553], [-122.298268, 47.561566], [-122.298225, 47.561577], [-122.298182, 47.561588], [-122.298138, 47.561599], [-122.298094, 47.561609], [-122.29805, 47.561617], [-122.298005, 47.561626], [-122.297961, 47.561633], [-122.297916, 47.56164], [-122.29787, 47.561646], [-122.297825, 47.561652], [-122.297779, 47.561656], [-122.297733, 47.56166], [-122.297687, 47.561664], [-122.297641, 47.561666], [-122.297595, 47.561668], [-122.297549, 47.561669], [-122.297503, 47.561669], [-122.297457, 47.561669], [-122.297411, 47.561667], [-122.297365, 47.561666], [-122.297319, 47.561663], [-122.297273, 47.561659], [-122.297227, 47.561655], [-122.297182, 47.56165], [-122.297136, 47.561645], [-122.297091, 47.561639], [-122.297046, 47.561632], [-122.297001, 47.561624], [-122.296956, 47.561616], [-122.296913, 47.561607], [-122.296868, 47.561598], [-122.296824, 47.561588], [-122.296781, 47.561577], [-122.296738, 47.561566], [-122.296695, 47.561554], [-122.296653, 47.561542], [-122.296611, 47.561528], [-122.29657, 47.561515], [-122.296529, 47.5615], [-122.296488, 47.561486], [-122.296448, 47.56147], [-122.296413, 47.561456], [-122.295713, 47.561141], [-122.295675, 47.561123], [-122.295636, 47.561106], [-122.295598, 47.561089], [-122.295558, 47.561073], [-122.295519, 47.561057], [-122.295479, 47.561041], [-122.295438, 47.561026], [-122.295398, 47.561011], [-122.295356, 47.560997], [-122.295315, 47.560984], [-122.295273, 47.560971], [-122.29523, 47.560958], [-122.295188, 47.560946], [-122.295145, 47.560935], [-122.295102, 47.560924], [-122.295058, 47.560913], [-122.295014, 47.560903], [-122.29497, 47.560894], [-122.294926, 47.560885], [-122.294882, 47.560876], [-122.294837, 47.560869], [-122.294792, 47.560861], [-122.294747, 47.560855], [-122.294702, 47.560848], [-122.294657, 47.560843], [-122.294611, 47.560837], [-122.294565, 47.560833], [-122.294519, 47.560829], [-122.294474, 47.560825], [-122.294428, 47.560822], [-122.294382, 47.56082], [-122.294336, 47.560818], [-122.29429, 47.560817], [-122.294244, 47.560816], [-122.294198, 47.560816], [-122.294151, 47.560816], [-122.294105, 47.560817], [-122.294059, 47.560819], [-122.294002, 47.560821], [-122.293364, 47.560829], [-122.293222, 47.5606], [-122.293001, 47.560218], [-122.292725, 47.559772], [-122.292378, 47.559249], [-122.292019, 47.558687], [-122.291708, 47.558195], [-122.291408, 47.557726], [-122.291145, 47.557311], [-122.290964, 47.557019], [-122.290821, 47.55678], [-122.290676, 47.556534], [-122.290412, 47.556088], [-122.290073, 47.555433], [-122.28983, 47.55494], [-122.289543, 47.554322], [-122.288946, 47.55311], [-122.288126, 47.551357], [-122.287283, 47.549694], [-122.286406, 47.547815], [-122.285957, 47.546975], [-122.285554, 47.546135], [-122.285515, 47.546053], [-122.284095, 47.543093], [-122.283833, 47.542527], [-122.283802, 47.54246], [-122.284668, 47.542463], [-122.286011, 47.542467], [-122.287167, 47.542479], [-122.28807, 47.54248], [-122.289153, 47.542483], [-122.290266, 47.542491], [-122.290295, 47.543719], [-122.29031, 47.544335], [-122.290948, 47.544339], [-122.291509, 47.544341], [-122.291661, 47.544317], [-122.293664, 47.544369], [-122.294741, 47.54439], [-122.295817, 47.544415], [-122.296892, 47.544439], [-122.296897, 47.543655], [-122.296905, 47.542466], [-122.296892, 47.541212], [-122.296867, 47.54032], [-122.296885, 47.539626], [-122.297166, 47.539424], [-122.297035, 47.539068], [-122.297004, 47.538974], [-122.297582, 47.538984], [-122.2983, 47.539002], [-122.298339, 47.539003], [-122.298379, 47.539005], [-122.298419, 47.539006], [-122.298459, 47.539008], [-122.298499, 47.53901], [-122.298539, 47.539012], [-122.298579, 47.539014], [-122.298619, 47.539016], [-122.298659, 47.539018], [-122.298699, 47.53902], [-122.298738, 47.539023], [-122.298778, 47.539025], [-122.298818, 47.539027], [-122.298858, 47.53903], [-122.298898, 47.539033], [-122.298937, 47.539035], [-122.298977, 47.539038], [-122.299017, 47.539041], [-122.299056, 47.539048], [-122.299094, 47.539056], [-122.299132, 47.539066], [-122.299169, 47.539075], [-122.299206, 47.539085], [-122.299243, 47.539095], [-122.29928, 47.539106], [-122.299317, 47.539117], [-122.299353, 47.539128], [-122.299389, 47.53914], [-122.299425, 47.539152], [-122.299461, 47.539164], [-122.299496, 47.539176], [-122.299531, 47.539189], [-122.299566, 47.539202], [-122.299601, 47.539216], [-122.299635, 47.53923], [-122.29967, 47.539244], [-122.299703, 47.539258], [-122.299737, 47.539273], [-122.29977, 47.539288], [-122.299803, 47.539304], [-122.300241, 47.539627], [-122.301398, 47.540562], [-122.302308, 47.541376], [-122.302897, 47.541995], [-122.303333, 47.542632], [-122.303391, 47.542716], [-122.303638, 47.54307], [-122.3049, 47.544274], [-122.305588, 47.544931], [-122.306147, 47.545479], [-122.306316, 47.545633], [-122.306921, 47.546185], [-122.307507, 47.546675], [-122.307901, 47.54696], [-122.308716, 47.547428], [-122.309916, 47.548051], [-122.310607, 47.548553], [-122.311122, 47.548882], [-122.312984, 47.547947], [-122.313986, 47.54745], [-122.314028, 47.54749], [-122.316207, 47.54863], [-122.31693, 47.549278], [-122.317284, 47.549611], [-122.317832, 47.550111], [-122.318455, 47.550767], [-122.318865, 47.551247], [-122.319976, 47.552285], [-122.320191, 47.552704], [-122.320634, 47.55305], [-122.320978, 47.553368], [-122.320442, 47.553622], [-122.319749, 47.553076], [-122.319728, 47.553128], [-122.319716, 47.553154], [-122.319702, 47.553179], [-122.319687, 47.553204], [-122.31967, 47.553229], [-122.319652, 47.553253], [-122.319632, 47.553277], [-122.319608, 47.553298], [-122.319582, 47.553319], [-122.319554, 47.553338], [-122.319524, 47.553357], [-122.319493, 47.553374], [-122.31946, 47.553389], [-122.319426, 47.553403], [-122.319391, 47.553416], [-122.319355, 47.553427], [-122.319318, 47.553437], [-122.319279, 47.553445], [-122.319245, 47.553451], [-122.318407, 47.553457], [-122.317989, 47.55346], [-122.317703, 47.553458], [-122.317991, 47.553931], [-122.318553, 47.554828], [-122.318748, 47.555113], [-122.318937, 47.555445], [-122.319175, 47.555719], [-122.319727, 47.556508], [-122.320321, 47.557419], [-122.320537, 47.557742], [-122.320828, 47.558317], [-122.321214, 47.559157], [-122.32141, 47.56001], [-122.321452, 47.560674], [-122.321467, 47.560906], [-122.321476, 47.561377], [-122.321343, 47.562289], [-122.321175, 47.563201], [-122.321006, 47.564113], [-122.320833, 47.565028], [-122.320661, 47.565953], [-122.320488, 47.566874], [-122.32033, 47.567734], [-122.320177, 47.568649], [-122.320059, 47.569558], [-122.31997, 47.570466], [-122.319905, 47.57139], [-122.319875, 47.571837], [-122.319879, 47.571864], [-122.319881, 47.57189], [-122.319883, 47.571917], [-122.319885, 47.571944], [-122.319885, 47.57197], [-122.319886, 47.571997], [-122.319885, 47.572024], [-122.319884, 47.57205], [-122.319882, 47.572077], [-122.31988, 47.572104], [-122.319877, 47.57213], [-122.319874, 47.572157], [-122.31987, 47.572183], [-122.319865, 47.57221], [-122.319859, 47.572236], [-122.319853, 47.572263], [-122.319847, 47.57229], [-122.319842, 47.572316], [-122.319838, 47.572341], [-122.319835, 47.572365], [-122.319832, 47.57239], [-122.31983, 47.572415], [-122.319828, 47.57244], [-122.319827, 47.572464], [-122.319826, 47.572489], [-122.319825, 47.572514], [-122.319825, 47.572569], [-122.319728, 47.572617], [-122.319584, 47.572684], [-122.31944, 47.572771], [-122.319219, 47.57289], [-122.318662, 47.573214], [-122.318253, 47.573345], [-122.318219, 47.573355], [-122.318184, 47.573365], [-122.31815, 47.573374], [-122.318116, 47.573383], [-122.318083, 47.573394], [-122.318042, 47.573401], [-122.318006, 47.573409], [-122.317971, 47.573417], [-122.317935, 47.573424], [-122.3179, 47.573431], [-122.317864, 47.573438], [-122.317828, 47.573444], [-122.317791, 47.57345], [-122.317722, 47.57346], [-122.317685, 47.573464], [-122.317649, 47.573468], [-122.317612, 47.573472], [-122.317575, 47.573476], [-122.317538, 47.573479], [-122.317501, 47.573481], [-122.317464, 47.573483], [-122.3174, 47.573487], [-122.317363, 47.573488], [-122.317326, 47.573489], [-122.317289, 47.57349], [-122.317253, 47.573491], [-122.317216, 47.573491], [-122.317179, 47.57349], [-122.317142, 47.57349], [-122.317105, 47.573489], [-122.317068, 47.573487], [-122.317032, 47.573485], [-122.316994, 47.573483], [-122.316958, 47.57348], [-122.316921, 47.573477], [-122.316885, 47.573473], [-122.316848, 47.573469], [-122.316812, 47.573465], [-122.316776, 47.57346], [-122.316739, 47.573455], [-122.316703, 47.57345], [-122.316668, 47.573444], [-122.316632, 47.573438], [-122.316596, 47.573431], [-122.316561, 47.573424], [-122.316526, 47.573417], [-122.31649, 47.573409], [-122.316455, 47.573401], [-122.316106, 47.573307], [-122.315715, 47.573153], [-122.315354, 47.572939], [-122.315066, 47.572606], [-122.314575, 47.571754], [-122.31421, 47.570869], [-122.313699, 47.569694], [-122.313437, 47.569094], [-122.313459, 47.567772], [-122.313476, 47.566454], [-122.313493, 47.565208], [-122.3135, 47.564893], [-122.313503, 47.564169], [-122.313499, 47.564134], [-122.313494, 47.564107], [-122.313488, 47.56408], [-122.313481, 47.564052], [-122.313473, 47.564025], [-122.313465, 47.563999], [-122.313455, 47.563972], [-122.313445, 47.563945], [-122.313433, 47.563919], [-122.313421, 47.563893], [-122.313408, 47.563867], [-122.313393, 47.563841], [-122.313378, 47.563815], [-122.313362, 47.56379], [-122.313346, 47.563765], [-122.313328, 47.56374], [-122.313309, 47.563716], [-122.31329, 47.563692], [-122.313269, 47.563668], [-122.313248, 47.563645], [-122.313227, 47.563621], [-122.313204, 47.563599], [-122.31318, 47.563576], [-122.313156, 47.563554], [-122.313131, 47.563532], [-122.313105, 47.563511], [-122.313078, 47.56349], [-122.313051, 47.56347], [-122.313023, 47.56345], [-122.312995, 47.563431], [-122.312965, 47.563412], [-122.31186, 47.562585], [-122.31097, 47.561941], [-122.30987, 47.561335], [-122.307899, 47.56063], [-122.30475, 47.559585], [-122.304645, 47.559599]]]]
    },
    "properties": {
      "neighbourhood": "Mid-Beacon Hill",
      "neighbourhood_group": "Beacon Hill"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.313986, 47.54745], [-122.312984, 47.547947], [-122.311122, 47.548882], [-122.310607, 47.548553], [-122.309916, 47.548051], [-122.308716, 47.547428], [-122.307901, 47.54696], [-122.307507, 47.546675], [-122.306921, 47.546185], [-122.306316, 47.545633], [-122.306147, 47.545479], [-122.305588, 47.544931], [-122.3049, 47.544274], [-122.303638, 47.54307], [-122.303391, 47.542716], [-122.303333, 47.542632], [-122.302897, 47.541995], [-122.302308, 47.541376], [-122.301398, 47.540562], [-122.300241, 47.539627], [-122.299803, 47.539304], [-122.29977, 47.539288], [-122.299737, 47.539273], [-122.299703, 47.539258], [-122.29967, 47.539244], [-122.299635, 47.53923], [-122.299601, 47.539216], [-122.299566, 47.539202], [-122.299531, 47.539189], [-122.299496, 47.539176], [-122.299461, 47.539164], [-122.299425, 47.539152], [-122.299389, 47.53914], [-122.299353, 47.539128], [-122.299317, 47.539117], [-122.29928, 47.539106], [-122.299243, 47.539095], [-122.299206, 47.539085], [-122.299169, 47.539075], [-122.299132, 47.539066], [-122.299094, 47.539056], [-122.299056, 47.539048], [-122.299017, 47.539041], [-122.298977, 47.539038], [-122.298937, 47.539035], [-122.298898, 47.539033], [-122.298858, 47.53903], [-122.298818, 47.539027], [-122.298778, 47.539025], [-122.298738, 47.539023], [-122.298699, 47.53902], [-122.298659, 47.539018], [-122.298619, 47.539016], [-122.298579, 47.539014], [-122.298539, 47.539012], [-122.298499, 47.53901], [-122.298459, 47.539008], [-122.298419, 47.539006], [-122.298379, 47.539005], [-122.298339, 47.539003], [-122.2983, 47.539002], [-122.297582, 47.538984], [-122.297004, 47.538974], [-122.294105, 47.538925], [-122.292861, 47.538893], [-122.291428, 47.538856], [-122.291337, 47.538828], [-122.290687, 47.538627], [-122.290186, 47.538452], [-122.289006, 47.538045], [-122.286859, 47.537304], [-122.286884, 47.537258], [-122.286893, 47.537232], [-122.286899, 47.537207], [-122.286905, 47.537182], [-122.286909, 47.537156], [-122.286912, 47.53713], [-122.286914, 47.537105], [-122.286915, 47.537079], [-122.286914, 47.537053], [-122.286912, 47.537027], [-122.286909, 47.537002], [-122.286904, 47.536976], [-122.286898, 47.536951], [-122.28689, 47.536926], [-122.286881, 47.536901], [-122.28687, 47.536876], [-122.286857, 47.536852], [-122.286843, 47.536828], [-122.286826, 47.536805], [-122.286808, 47.536782], [-122.286789, 47.53676], [-122.286766, 47.53674], [-122.286741, 47.53672], [-122.286714, 47.536702], [-122.286685, 47.536686], [-122.286658, 47.536669], [-122.286634, 47.536649], [-122.286607, 47.53663], [-122.28658, 47.536613], [-122.28655, 47.536596], [-122.286519, 47.536581], [-122.286488, 47.536567], [-122.286454, 47.536555], [-122.28642, 47.536544], [-122.286384, 47.536535], [-122.286348, 47.536526], [-122.285113, 47.536205], [-122.285077, 47.536196], [-122.285042, 47.536187], [-122.285007, 47.536177], [-122.284972, 47.536166], [-122.284937, 47.536156], [-122.284903, 47.536145], [-122.284869, 47.536133], [-122.284835, 47.536121], [-122.284802, 47.536109], [-122.284769, 47.536096], [-122.284737, 47.536083], [-122.284704, 47.536069], [-122.284672, 47.536055], [-122.284641, 47.536041], [-122.28461, 47.536026], [-122.284579, 47.536011], [-122.284549, 47.535995], [-122.284503, 47.53597], [-122.284473, 47.535954], [-122.284445, 47.535937], [-122.284417, 47.53592], [-122.284389, 47.535902], [-122.284362, 47.535884], [-122.284335, 47.535866], [-122.284308, 47.535847], [-122.284283, 47.535828], [-122.284258, 47.535809], [-122.284233, 47.535789], [-122.284209, 47.53577], [-122.284186, 47.53575], [-122.284164, 47.535729], [-122.284142, 47.535708], [-122.28412, 47.535687], [-122.284099, 47.535665], [-122.284078, 47.535644], [-122.284059, 47.535622], [-122.284039, 47.5356], [-122.28402, 47.535578], [-122.284001, 47.535555], [-122.283983, 47.535533], [-122.283965, 47.53551], [-122.283948, 47.535487], [-122.283932, 47.535464], [-122.283915, 47.535441], [-122.2839, 47.535417], [-122.283885, 47.535393], [-122.28387, 47.53537], [-122.283856, 47.535346], [-122.283842, 47.535322], [-122.283829, 47.535298], [-122.283817, 47.535273], [-122.283805, 47.535249], [-122.283794, 47.535224], [-122.283783, 47.5352], [-122.283772, 47.535175], [-122.283763, 47.53515], [-122.283753, 47.535125], [-122.283745, 47.5351], [-122.283736, 47.535075], [-122.283729, 47.53505], [-122.283722, 47.535024], [-122.283715, 47.534999], [-122.283709, 47.534974], [-122.283704, 47.534948], [-122.283699, 47.534923], [-122.283695, 47.534897], [-122.283459, 47.53388], [-122.28345, 47.533855], [-122.283442, 47.53383], [-122.283434, 47.533805], [-122.283427, 47.53378], [-122.28342, 47.533754], [-122.283408, 47.533712], [-122.283401, 47.533687], [-122.283394, 47.533661], [-122.283388, 47.533636], [-122.283382, 47.533611], [-122.283376, 47.533585], [-122.283371, 47.53356], [-122.283365, 47.533534], [-122.28336, 47.533509], [-122.283355, 47.533483], [-122.283351, 47.533458], [-122.283346, 47.533432], [-122.283342, 47.533407], [-122.283338, 47.533381], [-122.283334, 47.533355], [-122.283331, 47.53333], [-122.283328, 47.533304], [-122.283324, 47.533279], [-122.283322, 47.533253], [-122.283319, 47.533227], [-122.283317, 47.533202], [-122.283315, 47.533176], [-122.283313, 47.53315], [-122.283311, 47.533124], [-122.28331, 47.533099], [-122.283309, 47.533073], [-122.283308, 47.533047], [-122.283307, 47.533022], [-122.283307, 47.532996], [-122.283307, 47.53297], [-122.283306, 47.532944], [-122.283307, 47.532919], [-122.283308, 47.532893], [-122.283308, 47.532867], [-122.283309, 47.532841], [-122.28331, 47.532816], [-122.283275, 47.531537], [-122.281369, 47.531534], [-122.280648, 47.531536], [-122.280631, 47.529422], [-122.280509, 47.528847], [-122.280085, 47.527953], [-122.279605, 47.526915], [-122.279045, 47.525914], [-122.279032, 47.525884], [-122.27902, 47.525854], [-122.279008, 47.525824], [-122.278995, 47.525794], [-122.278984, 47.525764], [-122.278972, 47.525733], [-122.278961, 47.525703], [-122.27895, 47.525673], [-122.278939, 47.525642], [-122.278929, 47.525612], [-122.278919, 47.525581], [-122.278909, 47.525551], [-122.2789, 47.52552], [-122.278891, 47.52549], [-122.278882, 47.525459], [-122.278874, 47.525428], [-122.278865, 47.525398], [-122.278858, 47.525367], [-122.27885, 47.525336], [-122.278843, 47.525305], [-122.278836, 47.525274], [-122.27883, 47.525243], [-122.278823, 47.525212], [-122.278817, 47.525181], [-122.278812, 47.52515], [-122.278806, 47.525119], [-122.278801, 47.525088], [-122.278797, 47.525057], [-122.278792, 47.525026], [-122.278788, 47.524995], [-122.278784, 47.524964], [-122.278781, 47.524933], [-122.278778, 47.524901], [-122.278775, 47.52487], [-122.278772, 47.524839], [-122.27877, 47.524808], [-122.278768, 47.524777], [-122.278767, 47.524745], [-122.278766, 47.524714], [-122.278765, 47.524683], [-122.278764, 47.524652], [-122.278764, 47.52462], [-122.278764, 47.524589], [-122.278764, 47.524558], [-122.278765, 47.524527], [-122.278766, 47.524496], [-122.27913, 47.523213], [-122.279887, 47.520828], [-122.279895, 47.520797], [-122.279901, 47.520766], [-122.279908, 47.520735], [-122.279913, 47.520704], [-122.27992, 47.520673], [-122.279925, 47.520642], [-122.27993, 47.520612], [-122.279936, 47.52058], [-122.279941, 47.520549], [-122.279946, 47.520518], [-122.27995, 47.520487], [-122.279955, 47.520456], [-122.279959, 47.520424], [-122.279962, 47.520393], [-122.279966, 47.520362], [-122.27997, 47.520331], [-122.279973, 47.5203], [-122.279976, 47.520269], [-122.279978, 47.520237], [-122.279981, 47.520206], [-122.279983, 47.520175], [-122.279985, 47.520144], [-122.279987, 47.520113], [-122.279989, 47.520081], [-122.27999, 47.52005], [-122.279992, 47.520019], [-122.279992, 47.519988], [-122.279993, 47.519956], [-122.279993, 47.519925], [-122.279994, 47.519894], [-122.279994, 47.519863], [-122.279993, 47.519831], [-122.279993, 47.5198], [-122.279992, 47.519769], [-122.279991, 47.519738], [-122.27999, 47.519707], [-122.279989, 47.519675], [-122.279987, 47.519644], [-122.279985, 47.519613], [-122.279983, 47.519582], [-122.279981, 47.51955], [-122.279979, 47.519519], [-122.279976, 47.519488], [-122.279973, 47.519457], [-122.27997, 47.519426], [-122.279966, 47.519395], [-122.279963, 47.519363], [-122.279959, 47.519332], [-122.279955, 47.519301], [-122.279951, 47.51927], [-122.279946, 47.519239], [-122.279941, 47.519208], [-122.279936, 47.519177], [-122.279931, 47.519146], [-122.279925, 47.519115], [-122.27992, 47.519084], [-122.279914, 47.519053], [-122.279908, 47.519022], [-122.279901, 47.518991], [-122.279895, 47.51896], [-122.279888, 47.518929], [-122.279881, 47.518898], [-122.279874, 47.518867], [-122.279866, 47.518837], [-122.279859, 47.518806], [-122.279851, 47.518775], [-122.279842, 47.518744], [-122.279834, 47.518713], [-122.279825, 47.518683], [-122.279816, 47.518652], [-122.279808, 47.518622], [-122.279798, 47.518591], [-122.279789, 47.51856], [-122.279779, 47.51853], [-122.279769, 47.518499], [-122.279759, 47.518469], [-122.279749, 47.518438], [-122.279738, 47.518408], [-122.279727, 47.518378], [-122.279716, 47.518347], [-122.279705, 47.518317], [-122.279694, 47.518287], [-122.279682, 47.518257], [-122.27967, 47.518226], [-122.279658, 47.518196], [-122.279645, 47.518166], [-122.279633, 47.518136], [-122.27962, 47.518106], [-122.279607, 47.518076], [-122.279593, 47.518046], [-122.27958, 47.518016], [-122.279566, 47.517986], [-122.279552, 47.517957], [-122.279216, 47.516732], [-122.278744, 47.513121], [-122.278551, 47.510678], [-122.278512, 47.510186], [-122.278485, 47.509854], [-122.278603, 47.509857], [-122.278974, 47.509865], [-122.280759, 47.509906], [-122.282455, 47.50994], [-122.283901, 47.509993], [-122.284461, 47.510013], [-122.284884, 47.51], [-122.285323, 47.51001], [-122.285539, 47.510015], [-122.285926, 47.510024], [-122.286049, 47.510027], [-122.286524, 47.510037], [-122.289844, 47.510113], [-122.29005, 47.510118], [-122.290255, 47.510123], [-122.291338, 47.510148], [-122.291316, 47.512208], [-122.291304, 47.513306], [-122.2913, 47.5137], [-122.291299, 47.513841], [-122.291286, 47.515018], [-122.291265, 47.516889], [-122.291264, 47.516986], [-122.291266, 47.51831], [-122.291267, 47.519145], [-122.291268, 47.519661], [-122.291269, 47.520185], [-122.291269, 47.520642], [-122.291269, 47.520917], [-122.29127, 47.5214], [-122.29127, 47.521848], [-122.291271, 47.522287], [-122.291271, 47.522328], [-122.291271, 47.522759], [-122.291272, 47.523276], [-122.291275, 47.524281], [-122.292149, 47.524297], [-122.292214, 47.524443], [-122.293651, 47.527721], [-122.295704, 47.532402], [-122.295937, 47.533225], [-122.297847, 47.533022], [-122.298247, 47.53385], [-122.302152, 47.537378], [-122.309866, 47.543832], [-122.31305, 47.54656], [-122.313986, 47.54745]]]]
    },
    "properties": {
      "neighbourhood": "South Beacon Hill",
      "neighbourhood_group": "Beacon Hill"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.360772, 47.705121], [-122.35913, 47.705103], [-122.357259, 47.705091], [-122.355455, 47.705081], [-122.355374, 47.70508], [-122.353645, 47.705076], [-122.351849, 47.705073], [-122.350813, 47.705068], [-122.349595, 47.705066], [-122.347589, 47.705057], [-122.347186, 47.705057], [-122.345463, 47.705053], [-122.344695, 47.705051], [-122.344688, 47.704588], [-122.344673, 47.703578], [-122.344665, 47.702757], [-122.344663, 47.702567], [-122.34466, 47.702287], [-122.344652, 47.701557], [-122.344642, 47.700546], [-122.344631, 47.699536], [-122.344616, 47.698529], [-122.34461, 47.697521], [-122.344595, 47.696517], [-122.34458, 47.695513], [-122.344565, 47.694509], [-122.344556, 47.693505], [-122.344545, 47.692501], [-122.344535, 47.691497], [-122.344525, 47.690562], [-122.344525, 47.690493], [-122.344514, 47.689492], [-122.344509, 47.688494], [-122.344504, 47.687496], [-122.344498, 47.686499], [-122.344498, 47.685501], [-122.344493, 47.684503], [-122.344487, 47.683505], [-122.344486, 47.683305], [-122.346174, 47.683293], [-122.350224, 47.683296], [-122.352903, 47.683306], [-122.35672, 47.683281], [-122.360854, 47.683254], [-122.365072, 47.68324], [-122.366033, 47.683252], [-122.365996, 47.684524], [-122.366006, 47.68629], [-122.365994, 47.68874], [-122.366003, 47.690492], [-122.366004, 47.690648], [-122.366015, 47.69233], [-122.366016, 47.695207], [-122.366045, 47.69834], [-122.366072, 47.701417], [-122.366067, 47.705168], [-122.365742, 47.705156], [-122.365705, 47.705159], [-122.365669, 47.705159], [-122.365632, 47.705157], [-122.365596, 47.705153], [-122.36556, 47.705146], [-122.365527, 47.705137], [-122.365268, 47.705193], [-122.363861, 47.705153], [-122.362865, 47.705134], [-122.360987, 47.705123], [-122.360772, 47.705121]]]]
    },
    "properties": {
      "neighbourhood": "Greenwood",
      "neighbourhood_group": "Other neighborhoods"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.297004, 47.538974], [-122.297035, 47.539068], [-122.297166, 47.539424], [-122.296885, 47.539626], [-122.296867, 47.54032], [-122.296892, 47.541212], [-122.296905, 47.542466], [-122.296897, 47.543655], [-122.296892, 47.544439], [-122.295817, 47.544415], [-122.294741, 47.54439], [-122.293664, 47.544369], [-122.291661, 47.544317], [-122.291509, 47.544341], [-122.290948, 47.544339], [-122.29031, 47.544335], [-122.290295, 47.543719], [-122.290266, 47.542491], [-122.289153, 47.542483], [-122.28807, 47.54248], [-122.287167, 47.542479], [-122.286011, 47.542467], [-122.284668, 47.542463], [-122.283802, 47.54246], [-122.283076, 47.540892], [-122.282317, 47.539372], [-122.280766, 47.536206], [-122.280731, 47.533956], [-122.280653, 47.532121], [-122.280649, 47.53161], [-122.280648, 47.531536], [-122.281369, 47.531534], [-122.283275, 47.531537], [-122.28331, 47.532816], [-122.283309, 47.532841], [-122.283308, 47.532867], [-122.283308, 47.532893], [-122.283307, 47.532919], [-122.283306, 47.532944], [-122.283307, 47.53297], [-122.283307, 47.532996], [-122.283307, 47.533022], [-122.283308, 47.533047], [-122.283309, 47.533073], [-122.28331, 47.533099], [-122.283311, 47.533124], [-122.283313, 47.53315], [-122.283315, 47.533176], [-122.283317, 47.533202], [-122.283319, 47.533227], [-122.283322, 47.533253], [-122.283324, 47.533279], [-122.283328, 47.533304], [-122.283331, 47.53333], [-122.283334, 47.533355], [-122.283338, 47.533381], [-122.283342, 47.533407], [-122.283346, 47.533432], [-122.283351, 47.533458], [-122.283355, 47.533483], [-122.28336, 47.533509], [-122.283365, 47.533534], [-122.283371, 47.53356], [-122.283376, 47.533585], [-122.283382, 47.533611], [-122.283388, 47.533636], [-122.283394, 47.533661], [-122.283401, 47.533687], [-122.283408, 47.533712], [-122.28342, 47.533754], [-122.283427, 47.53378], [-122.283434, 47.533805], [-122.283442, 47.53383], [-122.28345, 47.533855], [-122.283459, 47.53388], [-122.283695, 47.534897], [-122.283699, 47.534923], [-122.283704, 47.534948], [-122.283709, 47.534974], [-122.283715, 47.534999], [-122.283722, 47.535024], [-122.283729, 47.53505], [-122.283736, 47.535075], [-122.283745, 47.5351], [-122.283753, 47.535125], [-122.283763, 47.53515], [-122.283772, 47.535175], [-122.283783, 47.5352], [-122.283794, 47.535224], [-122.283805, 47.535249], [-122.283817, 47.535273], [-122.283829, 47.535298], [-122.283842, 47.535322], [-122.283856, 47.535346], [-122.28387, 47.53537], [-122.283885, 47.535393], [-122.2839, 47.535417], [-122.283915, 47.535441], [-122.283932, 47.535464], [-122.283948, 47.535487], [-122.283965, 47.53551], [-122.283983, 47.535533], [-122.284001, 47.535555], [-122.28402, 47.535578], [-122.284039, 47.5356], [-122.284059, 47.535622], [-122.284078, 47.535644], [-122.284099, 47.535665], [-122.28412, 47.535687], [-122.284142, 47.535708], [-122.284164, 47.535729], [-122.284186, 47.53575], [-122.284209, 47.53577], [-122.284233, 47.535789], [-122.284258, 47.535809], [-122.284283, 47.535828], [-122.284308, 47.535847], [-122.284335, 47.535866], [-122.284362, 47.535884], [-122.284389, 47.535902], [-122.284417, 47.53592], [-122.284445, 47.535937], [-122.284473, 47.535954], [-122.284503, 47.53597], [-122.284549, 47.535995], [-122.284579, 47.536011], [-122.28461, 47.536026], [-122.284641, 47.536041], [-122.284672, 47.536055], [-122.284704, 47.536069], [-122.284737, 47.536083], [-122.284769, 47.536096], [-122.284802, 47.536109], [-122.284835, 47.536121], [-122.284869, 47.536133], [-122.284903, 47.536145], [-122.284937, 47.536156], [-122.284972, 47.536166], [-122.285007, 47.536177], [-122.285042, 47.536187], [-122.285077, 47.536196], [-122.285113, 47.536205], [-122.286348, 47.536526], [-122.286384, 47.536535], [-122.28642, 47.536544], [-122.286454, 47.536555], [-122.286488, 47.536567], [-122.286519, 47.536581], [-122.28655, 47.536596], [-122.28658, 47.536613], [-122.286607, 47.53663], [-122.286634, 47.536649], [-122.286658, 47.536669], [-122.286685, 47.536686], [-122.286714, 47.536702], [-122.286741, 47.53672], [-122.286766, 47.53674], [-122.286789, 47.53676], [-122.286808, 47.536782], [-122.286826, 47.536805], [-122.286843, 47.536828], [-122.286857, 47.536852], [-122.28687, 47.536876], [-122.286881, 47.536901], [-122.28689, 47.536926], [-122.286898, 47.536951], [-122.286904, 47.536976], [-122.286909, 47.537002], [-122.286912, 47.537027], [-122.286914, 47.537053], [-122.286915, 47.537079], [-122.286914, 47.537105], [-122.286912, 47.53713], [-122.286909, 47.537156], [-122.286905, 47.537182], [-122.286899, 47.537207], [-122.286893, 47.537232], [-122.286884, 47.537258], [-122.286859, 47.537304], [-122.289006, 47.538045], [-122.290186, 47.538452], [-122.290687, 47.538627], [-122.291337, 47.538828], [-122.291428, 47.538856], [-122.292861, 47.538893], [-122.294105, 47.538925], [-122.297004, 47.538974]]]]
    },
    "properties": {
      "neighbourhood": "Holly Park",
      "neighbourhood_group": "Beacon Hill"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.396383, 47.537008], [-122.396246, 47.53701], [-122.395332, 47.537012], [-122.39404, 47.537006], [-122.392922, 47.537008], [-122.389893, 47.53699], [-122.389863, 47.538014], [-122.389757, 47.538013], [-122.389321, 47.538008], [-122.387943, 47.538379], [-122.387782, 47.538416], [-122.387284, 47.53853], [-122.387409, 47.538446], [-122.387682, 47.538359], [-122.388001, 47.538261], [-122.388031, 47.538221], [-122.388551, 47.537527], [-122.388497, 47.537258], [-122.388627, 47.536994], [-122.388607, 47.536662], [-122.388563, 47.535931], [-122.388557, 47.535829], [-122.388544, 47.535708], [-122.388494, 47.535205], [-122.388488, 47.535178], [-122.388498, 47.535131], [-122.388541, 47.535103], [-122.388538, 47.535075], [-122.388525, 47.534983], [-122.388525, 47.534941], [-122.388482, 47.534426], [-122.388492, 47.534384], [-122.38863, 47.533708], [-122.38878, 47.532928], [-122.387344, 47.532924], [-122.387356, 47.531944], [-122.387372, 47.530928], [-122.387377, 47.529936], [-122.38739, 47.529014], [-122.387393, 47.528542], [-122.386544, 47.528518], [-122.385689, 47.528498], [-122.384965, 47.52848], [-122.384561, 47.52847], [-122.381885, 47.528398], [-122.381152, 47.528396], [-122.379127, 47.528336], [-122.377511, 47.52831], [-122.376653, 47.52829], [-122.376633, 47.527074], [-122.376673, 47.524997], [-122.376732, 47.522948], [-122.376791, 47.520876], [-122.376883, 47.518804], [-122.376896, 47.517489], [-122.37725, 47.517495], [-122.378225, 47.51749], [-122.379554, 47.517472], [-122.379436, 47.516556], [-122.380423, 47.51655], [-122.382546, 47.516545], [-122.384233, 47.516545], [-122.384795, 47.516553], [-122.384858, 47.517493], [-122.385432, 47.517496], [-122.389281, 47.517528], [-122.391745, 47.517528], [-122.391671, 47.517067], [-122.391526, 47.515577], [-122.391287, 47.514264], [-122.391012, 47.513114], [-122.390524, 47.512135], [-122.390272, 47.511794], [-122.389492, 47.511153], [-122.388654, 47.510609], [-122.388614, 47.51058], [-122.388585, 47.510558], [-122.388556, 47.510535], [-122.388528, 47.510512], [-122.3885, 47.510489], [-122.388473, 47.510465], [-122.388446, 47.510442], [-122.38842, 47.510417], [-122.388395, 47.510393], [-122.38837, 47.510368], [-122.388346, 47.510343], [-122.388323, 47.510318], [-122.3883, 47.510292], [-122.388278, 47.510267], [-122.388256, 47.51024], [-122.388235, 47.510214], [-122.388215, 47.510188], [-122.388196, 47.510161], [-122.388177, 47.510134], [-122.388159, 47.510107], [-122.388141, 47.510079], [-122.388124, 47.510052], [-122.388108, 47.510024], [-122.388093, 47.509996], [-122.388078, 47.509968], [-122.388064, 47.509939], [-122.388051, 47.509911], [-122.388038, 47.509882], [-122.388027, 47.509853], [-122.388015, 47.509824], [-122.388005, 47.509795], [-122.387995, 47.509766], [-122.387986, 47.509737], [-122.387978, 47.509708], [-122.387971, 47.509678], [-122.387964, 47.509649], [-122.387958, 47.509619], [-122.387953, 47.509589], [-122.387948, 47.50956], [-122.387945, 47.50953], [-122.387942, 47.5095], [-122.387939, 47.50947], [-122.387938, 47.50944], [-122.387937, 47.509411], [-122.387816, 47.50872], [-122.387851, 47.507865], [-122.387858, 47.507829], [-122.387861, 47.5078], [-122.387864, 47.50777], [-122.387865, 47.50774], [-122.387865, 47.50771], [-122.387864, 47.50768], [-122.387861, 47.50765], [-122.387856, 47.507621], [-122.387851, 47.507591], [-122.387845, 47.507562], [-122.387836, 47.507532], [-122.387827, 47.507503], [-122.387816, 47.507474], [-122.387804, 47.507445], [-122.38779, 47.507417], [-122.387776, 47.507389], [-122.38776, 47.507361], [-122.387744, 47.507333], [-122.387728, 47.507305], [-122.387711, 47.507278], [-122.387694, 47.50725], [-122.387676, 47.507223], [-122.387658, 47.507195], [-122.38764, 47.507168], [-122.387621, 47.507141], [-122.387602, 47.507114], [-122.387582, 47.507088], [-122.387561, 47.507061], [-122.387541, 47.507035], [-122.38752, 47.507008], [-122.387499, 47.506982], [-122.387476, 47.506956], [-122.387453, 47.506931], [-122.387428, 47.506907], [-122.387402, 47.506882], [-122.387375, 47.506859], [-122.387347, 47.506836], [-122.387318, 47.506813], [-122.387288, 47.506791], [-122.387258, 47.50677], [-122.387226, 47.506749], [-122.387193, 47.506729], [-122.38716, 47.506709], [-122.387126, 47.50669], [-122.387091, 47.506672], [-122.387055, 47.506655], [-122.387018, 47.506638], [-122.386981, 47.506622], [-122.386943, 47.506607], [-122.386905, 47.506592], [-122.386866, 47.506579], [-122.386826, 47.506566], [-122.386786, 47.506554], [-122.386745, 47.506542], [-122.386703, 47.506532], [-122.386662, 47.506522], [-122.386619, 47.506513], [-122.386577, 47.506505], [-122.386535, 47.506498], [-122.386491, 47.506492], [-122.386448, 47.506486], [-122.385026, 47.506492], [-122.382, 47.506438], [-122.381538, 47.506348], [-122.381698, 47.50517], [-122.381897, 47.504156], [-122.382173, 47.503519], [-122.382006, 47.502866], [-122.381884, 47.502623], [-122.381898, 47.502599], [-122.381917, 47.502576], [-122.381942, 47.502556], [-122.38197, 47.502539], [-122.382003, 47.502525], [-122.382039, 47.502514], [-122.382076, 47.502508], [-122.382115, 47.502506], [-122.382153, 47.502508], [-122.382191, 47.502514], [-122.382227, 47.502525], [-122.382259, 47.502539], [-122.382288, 47.502556], [-122.382988, 47.502797], [-122.383686, 47.503143], [-122.384364, 47.503889], [-122.384372, 47.503915], [-122.384382, 47.50394], [-122.384397, 47.503964], [-122.384414, 47.503988], [-122.384434, 47.50401], [-122.384457, 47.504031], [-122.384483, 47.504051], [-122.384511, 47.504069], [-122.384542, 47.504085], [-122.384574, 47.504099], [-122.384608, 47.504111], [-122.384644, 47.504121], [-122.384681, 47.504129], [-122.384719, 47.504135], [-122.384757, 47.504138], [-122.384796, 47.504139], [-122.384834, 47.504138], [-122.384872, 47.504134], [-122.38491, 47.504128], [-122.384947, 47.50412], [-122.384982, 47.50411], [-122.385016, 47.504097], [-122.385048, 47.504083], [-122.385079, 47.504067], [-122.385106, 47.504048], [-122.385132, 47.504029], [-122.385196, 47.503755], [-122.385013, 47.50327], [-122.384801, 47.502687], [-122.384793, 47.502662], [-122.384789, 47.502637], [-122.384789, 47.502611], [-122.384792, 47.502586], [-122.3848, 47.502561], [-122.384812, 47.502537], [-122.384827, 47.502513], [-122.384848, 47.502489], [-122.384876, 47.502472], [-122.384911, 47.502463], [-122.384948, 47.502461], [-122.384988, 47.50246], [-122.385023, 47.502461], [-122.385059, 47.502463], [-122.385094, 47.502467], [-122.385127, 47.502475], [-122.385159, 47.502486], [-122.385188, 47.502503], [-122.385776, 47.502931], [-122.386048, 47.503166], [-122.386754, 47.503756], [-122.387356, 47.504181], [-122.388343, 47.504518], [-122.388404, 47.504539], [-122.388452, 47.504555], [-122.388513, 47.504575], [-122.388545, 47.504586], [-122.388566, 47.504635], [-122.38858, 47.504658], [-122.388617, 47.504655], [-122.388647, 47.504676], [-122.388669, 47.504712], [-122.388698, 47.504755], [-122.388725, 47.504788], [-122.388737, 47.504811], [-122.388745, 47.504846], [-122.388746, 47.504882], [-122.388756, 47.504909], [-122.388774, 47.504932], [-122.388785, 47.504963], [-122.388784, 47.504991], [-122.388808, 47.505019], [-122.388838, 47.50504], [-122.388865, 47.505063], [-122.388895, 47.505092], [-122.388936, 47.505129], [-122.388963, 47.505151], [-122.389002, 47.505182], [-122.389035, 47.505201], [-122.389082, 47.505226], [-122.389148, 47.505284], [-122.389177, 47.505315], [-122.389225, 47.505368], [-122.389277, 47.505427], [-122.389321, 47.505492], [-122.389367, 47.505534], [-122.389425, 47.50559], [-122.389471, 47.505643], [-122.389515, 47.505696], [-122.389563, 47.50574], [-122.389585, 47.505765], [-122.389608, 47.505791], [-122.389642, 47.505839], [-122.389692, 47.505895], [-122.389729, 47.50594], [-122.389779, 47.505982], [-122.38981, 47.506004], [-122.389856, 47.506033], [-122.389896, 47.506062], [-122.389924, 47.506096], [-122.389949, 47.506134], [-122.389995, 47.506178], [-122.390043, 47.506219], [-122.390093, 47.506265], [-122.39016, 47.50632], [-122.390202, 47.506368], [-122.390261, 47.506405], [-122.390313, 47.506436], [-122.390356, 47.506468], [-122.39039, 47.50649], [-122.39044, 47.506517], [-122.390465, 47.506538], [-122.390468, 47.506564], [-122.390477, 47.5066], [-122.390486, 47.506623], [-122.390503, 47.506654], [-122.390533, 47.506701], [-122.390565, 47.506752], [-122.390609, 47.506814], [-122.390658, 47.506883], [-122.390708, 47.506933], [-122.390749, 47.506987], [-122.390799, 47.507056], [-122.390855, 47.507123], [-122.3909, 47.507181], [-122.39095, 47.507242], [-122.390992, 47.507292], [-122.391031, 47.507341], [-122.391061, 47.507381], [-122.391068, 47.507419], [-122.391091, 47.507442], [-122.391123, 47.507495], [-122.391156, 47.507531], [-122.3912, 47.507569], [-122.391242, 47.507614], [-122.391284, 47.50765], [-122.391329, 47.507687], [-122.391377, 47.507728], [-122.391437, 47.507771], [-122.391495, 47.507812], [-122.391532, 47.507848], [-122.39156, 47.507877], [-122.391596, 47.50792], [-122.391573, 47.507941], [-122.391581, 47.507971], [-122.391601, 47.507996], [-122.391625, 47.50805], [-122.39166, 47.508071], [-122.391669, 47.508096], [-122.391695, 47.508113], [-122.391721, 47.508136], [-122.391759, 47.508186], [-122.391795, 47.508234], [-122.391818, 47.508269], [-122.391839, 47.50831], [-122.391864, 47.508354], [-122.391881, 47.508413], [-122.391891, 47.508459], [-122.391903, 47.5085], [-122.391911, 47.508544], [-122.391931, 47.508587], [-122.391944, 47.508624], [-122.391978, 47.508668], [-122.392011, 47.508698], [-122.392045, 47.508733], [-122.392081, 47.508762], [-122.392108, 47.508786], [-122.39209, 47.50882], [-122.392114, 47.508845], [-122.392173, 47.508857], [-122.392208, 47.508875], [-122.392253, 47.50891], [-122.392302, 47.50895], [-122.392356, 47.508993], [-122.392399, 47.509028], [-122.392453, 47.509054], [-122.392503, 47.509076], [-122.392531, 47.509095], [-122.392586, 47.509131], [-122.392622, 47.509167], [-122.392657, 47.509209], [-122.39271, 47.509262], [-122.392747, 47.509314], [-122.392778, 47.509353], [-122.392813, 47.509387], [-122.392849, 47.50944], [-122.392872, 47.509484], [-122.392899, 47.509545], [-122.392924, 47.509597], [-122.392952, 47.509643], [-122.393001, 47.509693], [-122.393043, 47.509733], [-122.393047, 47.509777], [-122.393066, 47.509815], [-122.393104, 47.509867], [-122.393148, 47.509921], [-122.393193, 47.509987], [-122.393239, 47.510046], [-122.393265, 47.510085], [-122.393303, 47.510153], [-122.39335, 47.510218], [-122.393383, 47.510269], [-122.393413, 47.510312], [-122.393446, 47.510353], [-122.39348, 47.510393], [-122.393507, 47.510415], [-122.393547, 47.510412], [-122.393612, 47.510443], [-122.393651, 47.510482], [-122.393672, 47.510502], [-122.39371, 47.510516], [-122.39378, 47.510539], [-122.393831, 47.510559], [-122.393886, 47.510583], [-122.393949, 47.510618], [-122.394006, 47.510654], [-122.394055, 47.510691], [-122.394105, 47.510723], [-122.394151, 47.510757], [-122.394207, 47.510811], [-122.394257, 47.510863], [-122.394307, 47.510909], [-122.394353, 47.510979], [-122.394392, 47.511021], [-122.394409, 47.511057], [-122.394394, 47.511079], [-122.394398, 47.511113], [-122.394409, 47.511144], [-122.394463, 47.511151], [-122.394503, 47.511166], [-122.394539, 47.511191], [-122.394582, 47.51124], [-122.394612, 47.511279], [-122.394639, 47.51133], [-122.394657, 47.51137], [-122.394666, 47.511416], [-122.394682, 47.511473], [-122.394707, 47.511536], [-122.39473, 47.511592], [-122.394756, 47.511643], [-122.394782, 47.511714], [-122.394809, 47.511779], [-122.394839, 47.511849], [-122.394874, 47.511913], [-122.3949, 47.511986], [-122.394921, 47.512047], [-122.39493, 47.512098], [-122.394931, 47.512137], [-122.394932, 47.512164], [-122.394938, 47.512188], [-122.394959, 47.512251], [-122.395, 47.512369], [-122.395041, 47.512492], [-122.395082, 47.512602], [-122.395123, 47.512721], [-122.395172, 47.512843], [-122.395207, 47.512946], [-122.395235, 47.513026], [-122.395266, 47.513048], [-122.395284, 47.513101], [-122.395303, 47.513156], [-122.395328, 47.513235], [-122.395342, 47.513281], [-122.395368, 47.513368], [-122.395395, 47.513423], [-122.395411, 47.513453], [-122.395432, 47.513493], [-122.395464, 47.513549], [-122.395501, 47.513597], [-122.395552, 47.513643], [-122.395604, 47.513697], [-122.395649, 47.513752], [-122.395685, 47.513802], [-122.395704, 47.513836], [-122.39574, 47.513901], [-122.395759, 47.513931], [-122.395784, 47.513962], [-122.395808, 47.513999], [-122.395842, 47.514042], [-122.395868, 47.514076], [-122.395888, 47.514109], [-122.39591, 47.514152], [-122.395923, 47.514182], [-122.395941, 47.514232], [-122.395963, 47.514281], [-122.39599, 47.514342], [-122.396028, 47.514415], [-122.396053, 47.514474], [-122.396079, 47.514522], [-122.396097, 47.514562], [-122.396144, 47.514643], [-122.396166, 47.514682], [-122.39619, 47.514715], [-122.396216, 47.514767], [-122.396238, 47.514825], [-122.396276, 47.514884], [-122.39632, 47.514952], [-122.396362, 47.51499], [-122.3964, 47.51506], [-122.396434, 47.515124], [-122.396457, 47.515191], [-122.396488, 47.515258], [-122.396538, 47.515358], [-122.39656, 47.515393], [-122.396612, 47.515441], [-122.396678, 47.515486], [-122.396762, 47.515542], [-122.396823, 47.515599], [-122.396892, 47.515658], [-122.39695, 47.515731], [-122.397011, 47.515779], [-122.397105, 47.51584], [-122.397201, 47.515901], [-122.397307, 47.515966], [-122.397382, 47.516017], [-122.397501, 47.516085], [-122.397603, 47.516145], [-122.397688, 47.516212], [-122.397812, 47.516276], [-122.397901, 47.516334], [-122.398017, 47.516401], [-122.398164, 47.516476], [-122.398199, 47.516494], [-122.398297, 47.516541], [-122.398382, 47.516581], [-122.39846, 47.516619], [-122.398535, 47.516647], [-122.398602, 47.516671], [-122.3987, 47.516726], [-122.398729, 47.516743], [-122.39877, 47.516769], [-122.398816, 47.516803], [-122.398864, 47.516812], [-122.398879, 47.516785], [-122.39893, 47.516795], [-122.398975, 47.51682], [-122.399043, 47.516865], [-122.399111, 47.51691], [-122.399158, 47.51695], [-122.399188, 47.517001], [-122.399194, 47.517063], [-122.399165, 47.51712], [-122.399134, 47.51715], [-122.399098, 47.517166], [-122.399111, 47.517202], [-122.399112, 47.517236], [-122.399087, 47.517271], [-122.399057, 47.517303], [-122.399028, 47.517343], [-122.39907, 47.517357], [-122.399038, 47.517381], [-122.399003, 47.517398], [-122.398977, 47.517422], [-122.398939, 47.517458], [-122.3989, 47.517483], [-122.398869, 47.517505], [-122.398858, 47.517537], [-122.39883, 47.517561], [-122.39878, 47.517589], [-122.398739, 47.517587], [-122.398701, 47.517616], [-122.398649, 47.517649], [-122.398596, 47.517673], [-122.398553, 47.517697], [-122.398512, 47.517724], [-122.398457, 47.517762], [-122.398397, 47.517799], [-122.398267, 47.517894], [-122.398217, 47.517925], [-122.398159, 47.517962], [-122.398058, 47.518033], [-122.397957, 47.518102], [-122.397858, 47.518178], [-122.397753, 47.518252], [-122.397645, 47.518337], [-122.397527, 47.518409], [-122.397424, 47.518473], [-122.397296, 47.518562], [-122.397167, 47.51865], [-122.397073, 47.518732], [-122.396987, 47.518777], [-122.396947, 47.518808], [-122.396916, 47.518834], [-122.396895, 47.518854], [-122.396859, 47.518878], [-122.396814, 47.51892], [-122.396782, 47.518945], [-122.396742, 47.518975], [-122.396691, 47.519021], [-122.396624, 47.519068], [-122.396551, 47.519112], [-122.396458, 47.519174], [-122.39642, 47.519201], [-122.396364, 47.519237], [-122.396298, 47.519291], [-122.396262, 47.519318], [-122.396233, 47.519345], [-122.39618, 47.519383], [-122.396051, 47.51946], [-122.395929, 47.519551], [-122.39589, 47.519583], [-122.395845, 47.519625], [-122.395789, 47.519671], [-122.395682, 47.519747], [-122.395581, 47.519834], [-122.395536, 47.519881], [-122.39548, 47.519929], [-122.395429, 47.519976], [-122.395379, 47.520019], [-122.39534, 47.520056], [-122.395243, 47.520126], [-122.39517, 47.520184], [-122.395132, 47.520222], [-122.39502, 47.520319], [-122.39493, 47.520406], [-122.394848, 47.5205], [-122.394741, 47.520612], [-122.394717, 47.520642], [-122.394662, 47.520731], [-122.39463, 47.520782], [-122.394596, 47.520841], [-122.394552, 47.520908], [-122.394501, 47.520978], [-122.394422, 47.52111], [-122.394391, 47.521157], [-122.39432, 47.521289], [-122.394301, 47.521329], [-122.394285, 47.521372], [-122.394258, 47.521432], [-122.394247, 47.521466], [-122.394234, 47.521537], [-122.394203, 47.521675], [-122.394194, 47.521719], [-122.394185, 47.521838], [-122.394182, 47.521869], [-122.394185, 47.521972], [-122.394183, 47.522025], [-122.394186, 47.522068], [-122.394205, 47.522216], [-122.394218, 47.522348], [-122.394222, 47.522442], [-122.394219, 47.522491], [-122.394208, 47.522601], [-122.394208, 47.522704], [-122.394194, 47.522825], [-122.39418, 47.522908], [-122.394182, 47.52309], [-122.394176, 47.523186], [-122.394163, 47.523269], [-122.394148, 47.523323], [-122.394113, 47.523421], [-122.394064, 47.523541], [-122.394029, 47.523646], [-122.393968, 47.523785], [-122.393929, 47.523898], [-122.393899, 47.524037], [-122.393883, 47.524133], [-122.393877, 47.524248], [-122.393873, 47.524328], [-122.393869, 47.524404], [-122.393872, 47.524517], [-122.393877, 47.524597], [-122.393887, 47.524662], [-122.393918, 47.524798], [-122.393926, 47.524826], [-122.393951, 47.524886], [-122.39397, 47.524934], [-122.394013, 47.525025], [-122.394102, 47.525159], [-122.394167, 47.525256], [-122.394208, 47.525316], [-122.394239, 47.52536], [-122.394269, 47.525401], [-122.394297, 47.525445], [-122.394346, 47.525506], [-122.394455, 47.525626], [-122.39452, 47.52569], [-122.394552, 47.525725], [-122.39468, 47.525841], [-122.394704, 47.525861], [-122.394768, 47.525907], [-122.394836, 47.525961], [-122.394909, 47.526017], [-122.395038, 47.526132], [-122.39508, 47.526165], [-122.395126, 47.526195], [-122.395174, 47.526224], [-122.395233, 47.526267], [-122.395338, 47.526353], [-122.395419, 47.526412], [-122.395478, 47.526463], [-122.395523, 47.526501], [-122.395671, 47.526609], [-122.395775, 47.526688], [-122.395845, 47.526736], [-122.395937, 47.526806], [-122.396038, 47.526872], [-122.396112, 47.526915], [-122.396189, 47.526962], [-122.396271, 47.527025], [-122.396332, 47.527075], [-122.396355, 47.527097], [-122.396381, 47.527115], [-122.396452, 47.527156], [-122.396528, 47.527188], [-122.396667, 47.527251], [-122.396713, 47.527277], [-122.396739, 47.527294], [-122.396819, 47.527338], [-122.396882, 47.527375], [-122.39693, 47.527398], [-122.396966, 47.527431], [-122.396995, 47.527463], [-122.397082, 47.527513], [-122.397112, 47.52753], [-122.39716, 47.527551], [-122.397259, 47.527611], [-122.397285, 47.52763], [-122.397345, 47.527654], [-122.397392, 47.527683], [-122.39746, 47.527717], [-122.397491, 47.527731], [-122.397561, 47.527769], [-122.39761, 47.527787], [-122.397657, 47.52781], [-122.397744, 47.527872], [-122.39781, 47.527911], [-122.397868, 47.527938], [-122.397898, 47.527955], [-122.39797, 47.527991], [-122.398046, 47.528034], [-122.398114, 47.528068], [-122.398173, 47.528105], [-122.398217, 47.52813], [-122.398308, 47.528175], [-122.398352, 47.5282], [-122.398396, 47.528221], [-122.39846, 47.528261], [-122.398529, 47.528312], [-122.398574, 47.528342], [-122.398636, 47.528377], [-122.398747, 47.528429], [-122.398838, 47.528474], [-122.398877, 47.528488], [-122.398927, 47.528516], [-122.398994, 47.52855], [-122.399031, 47.528563], [-122.399132, 47.528611], [-122.399263, 47.528693], [-122.39933, 47.528725], [-122.399389, 47.528755], [-122.399424, 47.528771], [-122.399452, 47.528787], [-122.399502, 47.528809], [-122.399558, 47.528834], [-122.399623, 47.528867], [-122.399654, 47.528883], [-122.39977, 47.528941], [-122.399801, 47.528954], [-122.399871, 47.528983], [-122.399935, 47.529016], [-122.400008, 47.529043], [-122.400053, 47.529067], [-122.400104, 47.529095], [-122.400269, 47.529176], [-122.400302, 47.529194], [-122.400341, 47.529217], [-122.400409, 47.529253], [-122.400459, 47.529274], [-122.400528, 47.529296], [-122.400621, 47.529326], [-122.400653, 47.529345], [-122.400728, 47.529398], [-122.40076, 47.529425], [-122.400832, 47.529479], [-122.400926, 47.529543], [-122.40098, 47.52958], [-122.401015, 47.529603], [-122.401039, 47.529623], [-122.401081, 47.529663], [-122.401125, 47.529704], [-122.401141, 47.529732], [-122.40119, 47.529795], [-122.401213, 47.529826], [-122.401241, 47.529853], [-122.401272, 47.529882], [-122.401308, 47.529916], [-122.401327, 47.529947], [-122.401346, 47.529981], [-122.401378, 47.530024], [-122.401415, 47.53009], [-122.401435, 47.530119], [-122.401454, 47.530156], [-122.401485, 47.530203], [-122.401504, 47.530253], [-122.401518, 47.53031], [-122.401521, 47.530344], [-122.401521, 47.530393], [-122.401519, 47.530436], [-122.401507, 47.530497], [-122.401492, 47.530576], [-122.401483, 47.530601], [-122.401459, 47.530633], [-122.401433, 47.530654], [-122.401397, 47.530678], [-122.401348, 47.530709], [-122.401271, 47.530765], [-122.401247, 47.530792], [-122.40121, 47.530826], [-122.401133, 47.530877], [-122.401086, 47.5309], [-122.401022, 47.53095], [-122.400977, 47.530986], [-122.400947, 47.531013], [-122.400903, 47.531043], [-122.400863, 47.531075], [-122.400837, 47.531097], [-122.400793, 47.531123], [-122.400735, 47.531152], [-122.400687, 47.531185], [-122.400618, 47.531229], [-122.400525, 47.5313], [-122.400473, 47.531328], [-122.400426, 47.531362], [-122.400382, 47.531391], [-122.40034, 47.53141], [-122.400292, 47.531441], [-122.400205, 47.531487], [-122.400141, 47.531527], [-122.400091, 47.531556], [-122.400056, 47.531577], [-122.40001, 47.5316], [-122.399964, 47.531628], [-122.399928, 47.531659], [-122.399876, 47.531694], [-122.399819, 47.531739], [-122.399774, 47.531767], [-122.399719, 47.531806], [-122.399655, 47.531851], [-122.399624, 47.531876], [-122.399593, 47.531896], [-122.39955, 47.531925], [-122.399441, 47.531992], [-122.399377, 47.532027], [-122.399342, 47.532055], [-122.399306, 47.532082], [-122.39925, 47.532112], [-122.3992, 47.532145], [-122.39917, 47.532159], [-122.399109, 47.532186], [-122.399086, 47.532206], [-122.399036, 47.532252], [-122.39898, 47.532295], [-122.398947, 47.532321], [-122.398889, 47.532358], [-122.39884, 47.532399], [-122.398763, 47.532449], [-122.398716, 47.532484], [-122.39864, 47.532528], [-122.398579, 47.532573], [-122.398516, 47.53261], [-122.398489, 47.53263], [-122.398452, 47.532662], [-122.398399, 47.532702], [-122.39835, 47.532743], [-122.398316, 47.532765], [-122.398268, 47.5328], [-122.398233, 47.532829], [-122.398152, 47.532884], [-122.398102, 47.532922], [-122.398019, 47.532981], [-122.397991, 47.533003], [-122.397894, 47.53307], [-122.397803, 47.533134], [-122.397779, 47.533154], [-122.397754, 47.533176], [-122.397711, 47.533208], [-122.39768, 47.533237], [-122.39765, 47.533263], [-122.397615, 47.53329], [-122.397544, 47.53335], [-122.397484, 47.5334], [-122.397455, 47.533429], [-122.397418, 47.533461], [-122.397397, 47.533483], [-122.397363, 47.533527], [-122.397327, 47.533561], [-122.397294, 47.533601], [-122.397257, 47.533637], [-122.39721, 47.533693], [-122.397164, 47.533739], [-122.397128, 47.533781], [-122.397011, 47.53389], [-122.396951, 47.533954], [-122.396898, 47.534005], [-122.396867, 47.534035], [-122.396819, 47.534077], [-122.396795, 47.5341], [-122.396772, 47.534127], [-122.396698, 47.534191], [-122.396669, 47.534219], [-122.396645, 47.534246], [-122.396622, 47.534268], [-122.396591, 47.534305], [-122.396545, 47.534349], [-122.396524, 47.53438], [-122.396481, 47.534426], [-122.396456, 47.534461], [-122.396429, 47.534489], [-122.396382, 47.534557], [-122.396359, 47.534585], [-122.39632, 47.534642], [-122.396295, 47.534681], [-122.396262, 47.534734], [-122.396205, 47.534818], [-122.396146, 47.5349], [-122.396111, 47.534943], [-122.396091, 47.534978], [-122.396044, 47.535062], [-122.396017, 47.535099], [-122.39599, 47.535163], [-122.395982, 47.535199], [-122.395969, 47.535253], [-122.395963, 47.535293], [-122.39595, 47.535335], [-122.395933, 47.535373], [-122.395908, 47.535427], [-122.395891, 47.535484], [-122.39587, 47.535566], [-122.39587, 47.535596], [-122.395873, 47.535637], [-122.395868, 47.535695], [-122.395861, 47.535736], [-122.395858, 47.53577], [-122.395867, 47.535806], [-122.395871, 47.53587], [-122.395872, 47.535918], [-122.395868, 47.535954], [-122.395868, 47.535978], [-122.395868, 47.536035], [-122.395871, 47.536059], [-122.395884, 47.53609], [-122.395887, 47.536116], [-122.395902, 47.536147], [-122.395909, 47.536188], [-122.395928, 47.536216], [-122.395942, 47.536264], [-122.395961, 47.536307], [-122.395981, 47.536363], [-122.396042, 47.536485], [-122.396072, 47.536562], [-122.396123, 47.536667], [-122.396162, 47.536738], [-122.396222, 47.536855], [-122.39624, 47.536882], [-122.396264, 47.536908], [-122.396327, 47.536961], [-122.396383, 47.537008]]]]
    },
    "properties": {
      "neighbourhood": "Fauntleroy",
      "neighbourhood_group": "West Seattle"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.311529, 47.595877], [-122.311368, 47.595671], [-122.311253, 47.595519], [-122.310768, 47.594882], [-122.310279, 47.594245], [-122.309824, 47.593643], [-122.309311, 47.592968], [-122.309069, 47.592653], [-122.30867, 47.59213], [-122.30824, 47.591573], [-122.307796, 47.59098], [-122.307239, 47.590269], [-122.306812, 47.589697], [-122.306579, 47.589393], [-122.306243, 47.588957], [-122.305724, 47.588286], [-122.305434, 47.587953], [-122.305248, 47.587741], [-122.305088, 47.587504], [-122.304618, 47.586824], [-122.30441, 47.586553], [-122.304091, 47.586128], [-122.303842, 47.585818], [-122.303557, 47.585431], [-122.303293, 47.58507], [-122.303024, 47.584696], [-122.302939, 47.584584], [-122.302502, 47.584034], [-122.302059, 47.583476], [-122.301783, 47.583114], [-122.301687, 47.582989], [-122.301646, 47.582935], [-122.301558, 47.582819], [-122.301139, 47.582266], [-122.300836, 47.58187], [-122.300531, 47.581476], [-122.300278, 47.58114], [-122.299843, 47.580572], [-122.299397, 47.579989], [-122.298868, 47.579294], [-122.298516, 47.578829], [-122.298155, 47.578349], [-122.297948, 47.578084], [-122.297649, 47.577695], [-122.297384, 47.577344], [-122.297032, 47.576885], [-122.296762, 47.576535], [-122.296607, 47.576334], [-122.296654, 47.576297], [-122.296718, 47.576096], [-122.296734, 47.575882], [-122.299066, 47.575884], [-122.299112, 47.575884], [-122.299157, 47.575878], [-122.299201, 47.575868], [-122.299242, 47.575853], [-122.299279, 47.575835], [-122.299311, 47.575812], [-122.299338, 47.575787], [-122.299359, 47.575759], [-122.299373, 47.575729], [-122.29938, 47.5757], [-122.29938, 47.575232], [-122.299383, 47.573936], [-122.299416, 47.573207], [-122.299194, 47.572877], [-122.299177, 47.572256], [-122.299229, 47.570824], [-122.299246, 47.569051], [-122.299281, 47.568299], [-122.29928, 47.568024], [-122.299262, 47.567753], [-122.299254, 47.567481], [-122.299256, 47.567457], [-122.299259, 47.567432], [-122.299262, 47.567408], [-122.299266, 47.567383], [-122.299271, 47.567359], [-122.299277, 47.567334], [-122.299283, 47.56731], [-122.299291, 47.567286], [-122.299299, 47.567261], [-122.299309, 47.567237], [-122.299319, 47.567214], [-122.299329, 47.56719], [-122.299341, 47.567166], [-122.299353, 47.567143], [-122.299366, 47.56712], [-122.29938, 47.567097], [-122.299395, 47.567074], [-122.299725, 47.566397], [-122.29978, 47.565939], [-122.299747, 47.56558], [-122.299886, 47.565353], [-122.300296, 47.564852], [-122.300555, 47.564535], [-122.300577, 47.564507], [-122.300601, 47.56448], [-122.300626, 47.564454], [-122.300652, 47.564428], [-122.300679, 47.564403], [-122.300707, 47.564379], [-122.300737, 47.564355], [-122.300768, 47.564331], [-122.3008, 47.564309], [-122.300833, 47.564287], [-122.300866, 47.564265], [-122.300901, 47.564245], [-122.300937, 47.564225], [-122.300973, 47.564206], [-122.301011, 47.564188], [-122.301049, 47.56417], [-122.301088, 47.564154], [-122.301128, 47.564138], [-122.301169, 47.564123], [-122.30121, 47.564109], [-122.301251, 47.564096], [-122.301294, 47.564084], [-122.301337, 47.564072], [-122.301381, 47.564062], [-122.301424, 47.564053], [-122.301882, 47.563978], [-122.301924, 47.563965], [-122.301966, 47.563951], [-122.302006, 47.563936], [-122.302045, 47.563919], [-122.302082, 47.5639], [-122.302117, 47.563881], [-122.302151, 47.563859], [-122.302183, 47.563837], [-122.302213, 47.563813], [-122.302241, 47.563788], [-122.302267, 47.563762], [-122.30229, 47.563735], [-122.302312, 47.563708], [-122.30233, 47.563679], [-122.302346, 47.56365], [-122.30236, 47.56362], [-122.302371, 47.56359], [-122.302379, 47.563559], [-122.302383, 47.563528], [-122.302384, 47.563496], [-122.302381, 47.563465], [-122.302375, 47.563434], [-122.302366, 47.563404], [-122.302355, 47.563374], [-122.302328, 47.563337], [-122.302297, 47.563295], [-122.302278, 47.563269], [-122.30225, 47.563243], [-122.302223, 47.563218], [-122.302195, 47.563193], [-122.302167, 47.563168], [-122.302139, 47.563144], [-122.30211, 47.563119], [-122.302081, 47.563095], [-122.302052, 47.563071], [-122.302022, 47.563047], [-122.301991, 47.563024], [-122.301961, 47.563], [-122.30193, 47.562977], [-122.301901, 47.562961], [-122.301863, 47.562943], [-122.301827, 47.562923], [-122.301794, 47.562901], [-122.301762, 47.562879], [-122.301733, 47.562854], [-122.301706, 47.562829], [-122.301683, 47.562802], [-122.301661, 47.562774], [-122.301643, 47.562746], [-122.301628, 47.562716], [-122.301616, 47.562686], [-122.301606, 47.562655], [-122.3016, 47.562624], [-122.301597, 47.562593], [-122.301597, 47.562562], [-122.3016, 47.562531], [-122.301607, 47.5625], [-122.301617, 47.562469], [-122.30163, 47.56244], [-122.301647, 47.56241], [-122.301667, 47.562382], [-122.30169, 47.562355], [-122.301715, 47.562329], [-122.301744, 47.562305], [-122.301781, 47.562278], [-122.302229, 47.561669], [-122.302258, 47.561645], [-122.302288, 47.561621], [-122.302318, 47.561597], [-122.30235, 47.561575], [-122.302382, 47.561553], [-122.302416, 47.561531], [-122.302451, 47.561511], [-122.302487, 47.561491], [-122.302523, 47.561471], [-122.30256, 47.561453], [-122.302598, 47.561435], [-122.302636, 47.561418], [-122.302676, 47.561402], [-122.302716, 47.561387], [-122.302757, 47.561372], [-122.302798, 47.561358], [-122.30284, 47.561345], [-122.302883, 47.561333], [-122.302926, 47.561322], [-122.30297, 47.561312], [-122.303014, 47.561302], [-122.303058, 47.561294], [-122.303103, 47.561286], [-122.303148, 47.561279], [-122.303193, 47.561273], [-122.303239, 47.561268], [-122.303284, 47.561264], [-122.30333, 47.561261], [-122.303376, 47.561259], [-122.303423, 47.561258], [-122.305127, 47.561191], [-122.304685, 47.559731], [-122.304645, 47.559599], [-122.30475, 47.559585], [-122.307899, 47.56063], [-122.30987, 47.561335], [-122.31097, 47.561941], [-122.31186, 47.562585], [-122.312965, 47.563412], [-122.312995, 47.563431], [-122.313023, 47.56345], [-122.313051, 47.56347], [-122.313078, 47.56349], [-122.313105, 47.563511], [-122.313131, 47.563532], [-122.313156, 47.563554], [-122.31318, 47.563576], [-122.313204, 47.563599], [-122.313227, 47.563621], [-122.313248, 47.563645], [-122.313269, 47.563668], [-122.31329, 47.563692], [-122.313309, 47.563716], [-122.313328, 47.56374], [-122.313346, 47.563765], [-122.313362, 47.56379], [-122.313378, 47.563815], [-122.313393, 47.563841], [-122.313408, 47.563867], [-122.313421, 47.563893], [-122.313433, 47.563919], [-122.313445, 47.563945], [-122.313455, 47.563972], [-122.313465, 47.563999], [-122.313473, 47.564025], [-122.313481, 47.564052], [-122.313488, 47.56408], [-122.313494, 47.564107], [-122.313499, 47.564134], [-122.313503, 47.564169], [-122.3135, 47.564893], [-122.313493, 47.565208], [-122.313476, 47.566454], [-122.313459, 47.567772], [-122.313437, 47.569094], [-122.313699, 47.569694], [-122.31421, 47.570869], [-122.314575, 47.571754], [-122.315066, 47.572606], [-122.315354, 47.572939], [-122.315715, 47.573153], [-122.316106, 47.573307], [-122.316455, 47.573401], [-122.31649, 47.573409], [-122.316526, 47.573417], [-122.316561, 47.573424], [-122.316596, 47.573431], [-122.316632, 47.573438], [-122.316668, 47.573444], [-122.316703, 47.57345], [-122.316739, 47.573455], [-122.316776, 47.57346], [-122.316812, 47.573465], [-122.316848, 47.573469], [-122.316885, 47.573473], [-122.316921, 47.573477], [-122.316958, 47.57348], [-122.316994, 47.573483], [-122.317032, 47.573485], [-122.317068, 47.573487], [-122.317105, 47.573489], [-122.317142, 47.57349], [-122.317179, 47.57349], [-122.317216, 47.573491], [-122.317253, 47.573491], [-122.317289, 47.57349], [-122.317326, 47.573489], [-122.317363, 47.573488], [-122.3174, 47.573487], [-122.317464, 47.573483], [-122.317501, 47.573481], [-122.317538, 47.573479], [-122.317575, 47.573476], [-122.317612, 47.573472], [-122.317649, 47.573468], [-122.317685, 47.573464], [-122.317722, 47.57346], [-122.317791, 47.57345], [-122.317828, 47.573444], [-122.317864, 47.573438], [-122.3179, 47.573431], [-122.317935, 47.573424], [-122.317971, 47.573417], [-122.318006, 47.573409], [-122.318042, 47.573401], [-122.318083, 47.573394], [-122.318116, 47.573383], [-122.31815, 47.573374], [-122.318184, 47.573365], [-122.318219, 47.573355], [-122.318253, 47.573345], [-122.318662, 47.573214], [-122.319219, 47.57289], [-122.31944, 47.572771], [-122.319584, 47.572684], [-122.319728, 47.572617], [-122.319825, 47.572569], [-122.319813, 47.573192], [-122.319763, 47.5741], [-122.319702, 47.575024], [-122.319644, 47.575927], [-122.319642, 47.575953], [-122.319638, 47.575978], [-122.319635, 47.576003], [-122.319633, 47.576028], [-122.319629, 47.576052], [-122.319626, 47.576077], [-122.319623, 47.576102], [-122.31962, 47.576126], [-122.319616, 47.576151], [-122.319613, 47.576176], [-122.319609, 47.5762], [-122.319606, 47.576225], [-122.319602, 47.57625], [-122.319599, 47.576274], [-122.319595, 47.576299], [-122.319591, 47.576323], [-122.319587, 47.576348], [-122.319583, 47.576373], [-122.319579, 47.576397], [-122.319575, 47.576422], [-122.319571, 47.576447], [-122.319567, 47.576471], [-122.319562, 47.576496], [-122.319558, 47.57652], [-122.31946, 47.576847], [-122.319224, 47.577774], [-122.319174, 47.577998], [-122.319023, 47.578686], [-122.318998, 47.578871], [-122.318984, 47.579012], [-122.318973, 47.579154], [-122.318965, 47.579295], [-122.318962, 47.579437], [-122.318962, 47.579578], [-122.318966, 47.57972], [-122.318973, 47.579862], [-122.318984, 47.580003], [-122.318999, 47.580144], [-122.319017, 47.580286], [-122.319202, 47.581209], [-122.319207, 47.581236], [-122.319211, 47.581262], [-122.319216, 47.581289], [-122.319221, 47.581315], [-122.319225, 47.58134], [-122.31923, 47.581364], [-122.319234, 47.581389], [-122.319239, 47.581413], [-122.319244, 47.581438], [-122.319249, 47.581463], [-122.319253, 47.581487], [-122.319259, 47.581512], [-122.319264, 47.581536], [-122.319269, 47.581561], [-122.319274, 47.581585], [-122.31928, 47.58161], [-122.319285, 47.581634], [-122.319291, 47.581659], [-122.319297, 47.581683], [-122.319303, 47.581708], [-122.319309, 47.581732], [-122.319315, 47.581756], [-122.319321, 47.581781], [-122.319327, 47.581805], [-122.319333, 47.58183], [-122.319339, 47.581854], [-122.319346, 47.581878], [-122.319352, 47.581903], [-122.319359, 47.581927], [-122.319366, 47.581952], [-122.319373, 47.581976], [-122.31938, 47.582], [-122.319387, 47.582025], [-122.319394, 47.582049], [-122.319401, 47.582073], [-122.319408, 47.582097], [-122.319415, 47.582122], [-122.31958, 47.582732], [-122.31966, 47.583026], [-122.319667, 47.583053], [-122.319673, 47.583079], [-122.31968, 47.583106], [-122.319686, 47.583132], [-122.319692, 47.583158], [-122.319698, 47.583183], [-122.319703, 47.583207], [-122.319709, 47.583232], [-122.319715, 47.583256], [-122.31972, 47.583281], [-122.319726, 47.583305], [-122.319731, 47.58333], [-122.319736, 47.583354], [-122.319742, 47.583379], [-122.319747, 47.583403], [-122.319752, 47.583428], [-122.319757, 47.583452], [-122.319763, 47.583477], [-122.319767, 47.583501], [-122.319773, 47.583526], [-122.319777, 47.583551], [-122.319782, 47.583575], [-122.319787, 47.5836], [-122.319792, 47.583624], [-122.319797, 47.583649], [-122.319801, 47.583673], [-122.319806, 47.583698], [-122.319811, 47.583722], [-122.319815, 47.583747], [-122.31982, 47.583772], [-122.319824, 47.583796], [-122.319828, 47.583821], [-122.319833, 47.583845], [-122.319837, 47.58387], [-122.319841, 47.583895], [-122.319845, 47.583919], [-122.319849, 47.583944], [-122.319951, 47.584855], [-122.320025, 47.585769], [-122.320076, 47.586275], [-122.320114, 47.586659], [-122.32016, 47.587143], [-122.320205, 47.587576], [-122.320209, 47.587604], [-122.320256, 47.587959], [-122.320317, 47.588342], [-122.320507, 47.589125], [-122.320516, 47.589151], [-122.320526, 47.589177], [-122.320535, 47.589203], [-122.320544, 47.589229], [-122.320553, 47.589255], [-122.320564, 47.589287], [-122.320572, 47.589311], [-122.32058, 47.589335], [-122.320588, 47.589359], [-122.320596, 47.589383], [-122.320603, 47.589408], [-122.320611, 47.589432], [-122.320618, 47.589456], [-122.320626, 47.589481], [-122.320633, 47.589505], [-122.32064, 47.589529], [-122.320646, 47.589553], [-122.320654, 47.589578], [-122.32066, 47.589602], [-122.320667, 47.589626], [-122.320673, 47.589651], [-122.320679, 47.589675], [-122.320686, 47.5897], [-122.320692, 47.589724], [-122.320698, 47.589749], [-122.320703, 47.589773], [-122.320709, 47.589797], [-122.320715, 47.589822], [-122.32072, 47.589846], [-122.320725, 47.589871], [-122.320731, 47.589895], [-122.320736, 47.58992], [-122.320741, 47.589945], [-122.320746, 47.589969], [-122.320751, 47.589994], [-122.320755, 47.590018], [-122.32076, 47.590043], [-122.320963, 47.590875], [-122.320968, 47.590899], [-122.320972, 47.590923], [-122.320977, 47.590948], [-122.320981, 47.590972], [-122.320985, 47.590997], [-122.320988, 47.591022], [-122.320993, 47.591056], [-122.320996, 47.591081], [-122.320999, 47.591105], [-122.321001, 47.59113], [-122.321003, 47.591155], [-122.321005, 47.591179], [-122.321007, 47.591204], [-122.321008, 47.591229], [-122.321009, 47.591254], [-122.32101, 47.591278], [-122.321011, 47.591303], [-122.321011, 47.591328], [-122.321011, 47.591353], [-122.321011, 47.591378], [-122.32101, 47.591402], [-122.321009, 47.591427], [-122.321008, 47.591452], [-122.321006, 47.591477], [-122.321005, 47.591501], [-122.321003, 47.591526], [-122.321001, 47.591551], [-122.320999, 47.591576], [-122.320996, 47.5916], [-122.320993, 47.591625], [-122.32099, 47.59165], [-122.320986, 47.591674], [-122.320982, 47.591699], [-122.320978, 47.591724], [-122.320974, 47.591748], [-122.320971, 47.591772], [-122.320969, 47.591797], [-122.320967, 47.591822], [-122.320965, 47.591847], [-122.320963, 47.591871], [-122.320961, 47.591896], [-122.320959, 47.591921], [-122.320956, 47.591946], [-122.320954, 47.59197], [-122.320951, 47.592003], [-122.320948, 47.592027], [-122.320945, 47.592052], [-122.320942, 47.592077], [-122.320939, 47.592101], [-122.320935, 47.592126], [-122.320932, 47.592151], [-122.320929, 47.592175], [-122.320925, 47.5922], [-122.320921, 47.592225], [-122.320918, 47.592249], [-122.320914, 47.592274], [-122.32091, 47.592299], [-122.320905, 47.592323], [-122.320902, 47.592348], [-122.320897, 47.592372], [-122.320893, 47.592397], [-122.320888, 47.592422], [-122.320884, 47.592446], [-122.320879, 47.592471], [-122.320874, 47.592495], [-122.320869, 47.59252], [-122.320864, 47.592544], [-122.320858, 47.592569], [-122.320853, 47.592593], [-122.320847, 47.592618], [-122.320842, 47.592642], [-122.320699, 47.593347], [-122.320658, 47.593568], [-122.320605, 47.593684], [-122.320483, 47.594268], [-122.320385, 47.59474], [-122.320287, 47.595311], [-122.320283, 47.595335], [-122.320278, 47.59536], [-122.320274, 47.595384], [-122.320271, 47.595408], [-122.320267, 47.595433], [-122.320264, 47.595457], [-122.32026, 47.595482], [-122.320258, 47.595506], [-122.320255, 47.595531], [-122.320252, 47.595555], [-122.32025, 47.59558], [-122.320248, 47.595604], [-122.320246, 47.595629], [-122.320245, 47.595653], [-122.320243, 47.595678], [-122.320241, 47.595702], [-122.320241, 47.595727], [-122.32024, 47.595751], [-122.320239, 47.595776], [-122.320239, 47.5958], [-122.320238, 47.595827], [-122.320186, 47.595827], [-122.319981, 47.595824], [-122.31974, 47.595824], [-122.319215, 47.595823], [-122.318848, 47.595823], [-122.318161, 47.595821], [-122.317667, 47.595821], [-122.31723, 47.59582], [-122.316356, 47.595818], [-122.315472, 47.595819], [-122.314585, 47.595815], [-122.314133, 47.595816], [-122.313449, 47.595814], [-122.313033, 47.595815], [-122.312807, 47.595813], [-122.31216, 47.595814], [-122.311529, 47.595877]]]]
    },
    "properties": {
      "neighbourhood": "North Beacon Hill",
      "neighbourhood_group": "Beacon Hill"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.272633, 47.546042], [-122.269888, 47.546062], [-122.269884, 47.545069], [-122.269917, 47.542139], [-122.269931, 47.540138], [-122.269933, 47.539814], [-122.269098, 47.539808], [-122.266899, 47.539805], [-122.266909, 47.539779], [-122.266919, 47.539752], [-122.266929, 47.539726], [-122.266939, 47.5397], [-122.266948, 47.539674], [-122.266957, 47.539648], [-122.266966, 47.539622], [-122.266975, 47.539596], [-122.266984, 47.539569], [-122.266992, 47.539543], [-122.267001, 47.539517], [-122.26701, 47.53949], [-122.267018, 47.539464], [-122.267026, 47.539438], [-122.267034, 47.539411], [-122.267042, 47.539385], [-122.26705, 47.539359], [-122.267057, 47.539332], [-122.267064, 47.539306], [-122.267072, 47.539279], [-122.267079, 47.539253], [-122.267085, 47.539226], [-122.267092, 47.5392], [-122.267099, 47.539173], [-122.267105, 47.539147], [-122.267112, 47.53912], [-122.267118, 47.539094], [-122.267124, 47.539067], [-122.26713, 47.53904], [-122.267136, 47.539014], [-122.267141, 47.538987], [-122.267147, 47.53896], [-122.267152, 47.538934], [-122.267157, 47.538907], [-122.267162, 47.53888], [-122.267167, 47.538854], [-122.267172, 47.538827], [-122.267176, 47.5388], [-122.267181, 47.538773], [-122.267185, 47.538747], [-122.26719, 47.538716], [-122.267263, 47.537211], [-122.267259, 47.535397], [-122.267174, 47.534824], [-122.266994, 47.534113], [-122.266503, 47.532042], [-122.266478, 47.531915], [-122.2664, 47.531588], [-122.26807, 47.531591], [-122.270339, 47.531578], [-122.272585, 47.531576], [-122.274822, 47.531553], [-122.277004, 47.531547], [-122.279186, 47.531541], [-122.280648, 47.531536], [-122.280649, 47.53161], [-122.280653, 47.532121], [-122.280731, 47.533956], [-122.280766, 47.536206], [-122.282317, 47.539372], [-122.283076, 47.540892], [-122.283802, 47.54246], [-122.283833, 47.542527], [-122.284095, 47.543093], [-122.285515, 47.546053], [-122.284543, 47.546031], [-122.280672, 47.545987], [-122.276505, 47.546024], [-122.272773, 47.546041], [-122.272633, 47.546042]]]]
    },
    "properties": {
      "neighbourhood": "Brighton",
      "neighbourhood_group": "Rainier Valley"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.365806, 47.533663], [-122.363219, 47.533691], [-122.360826, 47.533721], [-122.360471, 47.533715], [-122.360713, 47.534318], [-122.361106, 47.535361], [-122.361302, 47.535989], [-122.361301, 47.536583], [-122.361189, 47.53755], [-122.361155, 47.537792], [-122.361128, 47.537974], [-122.359024, 47.537781], [-122.358983, 47.537781], [-122.358942, 47.537779], [-122.358901, 47.537776], [-122.358861, 47.537772], [-122.35882, 47.537767], [-122.35878, 47.537761], [-122.358741, 47.537754], [-122.358701, 47.537746], [-122.358662, 47.537737], [-122.358624, 47.537727], [-122.358586, 47.537716], [-122.358549, 47.537704], [-122.358513, 47.537691], [-122.358477, 47.537678], [-122.358442, 47.537663], [-122.358408, 47.537647], [-122.358376, 47.537631], [-122.358344, 47.537613], [-122.358312, 47.537595], [-122.358282, 47.537576], [-122.358253, 47.537557], [-122.358226, 47.537536], [-122.358199, 47.537515], [-122.358174, 47.537493], [-122.358149, 47.537471], [-122.358126, 47.537448], [-122.357774, 47.536794], [-122.357763, 47.536768], [-122.357752, 47.536741], [-122.357741, 47.536714], [-122.357731, 47.536687], [-122.357721, 47.53666], [-122.357711, 47.536633], [-122.357702, 47.536606], [-122.357692, 47.536579], [-122.357683, 47.536552], [-122.357675, 47.536525], [-122.357667, 47.536497], [-122.357658, 47.53647], [-122.357651, 47.536443], [-122.357644, 47.536416], [-122.357636, 47.536388], [-122.357629, 47.536361], [-122.357623, 47.536333], [-122.357617, 47.536306], [-122.357611, 47.536278], [-122.357605, 47.536251], [-122.3576, 47.536223], [-122.357595, 47.536196], [-122.35759, 47.536168], [-122.357624, 47.535496], [-122.357628, 47.535468], [-122.357631, 47.535441], [-122.357632, 47.535413], [-122.357632, 47.535385], [-122.35763, 47.535357], [-122.357627, 47.535329], [-122.357623, 47.535302], [-122.357617, 47.535274], [-122.35761, 47.535247], [-122.357601, 47.53522], [-122.357592, 47.535193], [-122.357581, 47.535166], [-122.357568, 47.53514], [-122.357554, 47.535113], [-122.357539, 47.535088], [-122.357522, 47.535062], [-122.357505, 47.535037], [-122.357486, 47.535012], [-122.357466, 47.534988], [-122.357444, 47.534965], [-122.357421, 47.534941], [-122.357398, 47.534919], [-122.357373, 47.534897], [-122.357347, 47.534875], [-122.35732, 47.534854], [-122.357292, 47.534834], [-122.357263, 47.534814], [-122.357233, 47.534795], [-122.357203, 47.534776], [-122.357173, 47.534757], [-122.357142, 47.534739], [-122.357084, 47.534706], [-122.357052, 47.534689], [-122.357019, 47.534673], [-122.356985, 47.534656], [-122.356952, 47.53464], [-122.356918, 47.534625], [-122.356883, 47.53461], [-122.356848, 47.534595], [-122.356812, 47.534581], [-122.356758, 47.534561], [-122.355825, 47.534554], [-122.355785, 47.534558], [-122.355744, 47.534561], [-122.355703, 47.534561], [-122.355662, 47.534561], [-122.355621, 47.534558], [-122.35558, 47.534554], [-122.35554, 47.534548], [-122.355501, 47.53454], [-122.355462, 47.534531], [-122.355424, 47.534521], [-122.355387, 47.534509], [-122.355351, 47.534495], [-122.355316, 47.53448], [-122.355284, 47.534464], [-122.355252, 47.534446], [-122.355222, 47.534427], [-122.355193, 47.534407], [-122.355167, 47.534386], [-122.355142, 47.534364], [-122.35512, 47.534341], [-122.355099, 47.534317], [-122.355081, 47.534292], [-122.355064, 47.534266], [-122.355072, 47.533689], [-122.354984, 47.531509], [-122.354985, 47.530006], [-122.354983, 47.528273], [-122.354985, 47.527377], [-122.354967, 47.526483], [-122.35507, 47.525588], [-122.355027, 47.52464], [-122.355062, 47.522791], [-122.355133, 47.520937], [-122.355131, 47.520809], [-122.355107, 47.519086], [-122.355059, 47.518009], [-122.35503, 47.51736], [-122.355165, 47.51736], [-122.356511, 47.517361], [-122.357857, 47.517362], [-122.358531, 47.517363], [-122.35851, 47.51553], [-122.359178, 47.51553], [-122.360518, 47.515529], [-122.36054, 47.517362], [-122.361124, 47.517363], [-122.361821, 47.517364], [-122.362617, 47.517363], [-122.363224, 47.517364], [-122.364567, 47.517364], [-122.365819, 47.517363], [-122.365913, 47.517363], [-122.367262, 47.517379], [-122.367227, 47.52103], [-122.36569, 47.521026], [-122.364525, 47.52103], [-122.364532, 47.52485], [-122.364526, 47.526489], [-122.365829, 47.526492], [-122.365844, 47.528295], [-122.367145, 47.528302], [-122.36719, 47.529963], [-122.367146, 47.531891], [-122.366297, 47.531875], [-122.36584, 47.531878], [-122.365806, 47.533663]]]]
    },
    "properties": {
      "neighbourhood": "South Delridge",
      "neighbourhood_group": "Delridge"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.245168, 47.509678], [-122.247463, 47.509675], [-122.247256, 47.508494], [-122.24685, 47.506457], [-122.246563, 47.50494], [-122.24546, 47.503901], [-122.245565, 47.503021], [-122.248007, 47.503022], [-122.248002, 47.503291], [-122.247984, 47.506498], [-122.248852, 47.50617], [-122.248809, 47.504841], [-122.248838, 47.503048], [-122.248839, 47.502996], [-122.246245, 47.50296], [-122.245637, 47.502951], [-122.245083, 47.502943], [-122.244952, 47.502941], [-122.244818, 47.50294], [-122.244448, 47.502934], [-122.244243, 47.502932], [-122.244146, 47.50293], [-122.244106, 47.50293], [-122.243831, 47.502926], [-122.243574, 47.502922], [-122.243527, 47.502921], [-122.24349, 47.502921], [-122.243326, 47.502919], [-122.243136, 47.502916], [-122.242942, 47.502913], [-122.242512, 47.502907], [-122.242383, 47.502905], [-122.242255, 47.502904], [-122.241865, 47.502898], [-122.241797, 47.502897], [-122.241363, 47.502891], [-122.241239, 47.502889], [-122.241096, 47.502887], [-122.240819, 47.502884], [-122.240823, 47.502624], [-122.240825, 47.502417], [-122.240825, 47.502316], [-122.240826, 47.502171], [-122.240827, 47.502109], [-122.240828, 47.502021], [-122.240828, 47.501973], [-122.240829, 47.501868], [-122.24083, 47.501801], [-122.24083, 47.501719], [-122.240831, 47.501596], [-122.240831, 47.501546], [-122.240841, 47.501382], [-122.240842, 47.501232], [-122.240844, 47.501082], [-122.240845, 47.500937], [-122.240847, 47.500784], [-122.240848, 47.500629], [-122.24085, 47.50048], [-122.240851, 47.50033], [-122.240853, 47.500181], [-122.240855, 47.500027], [-122.240856, 47.49987], [-122.240858, 47.499717], [-122.240862, 47.499552], [-122.240876, 47.499249], [-122.241108, 47.499252], [-122.241358, 47.499256], [-122.241459, 47.499257], [-122.241735, 47.499261], [-122.241877, 47.499263], [-122.242092, 47.499266], [-122.242316, 47.499269], [-122.242533, 47.499272], [-122.242764, 47.499276], [-122.242992, 47.499279], [-122.243139, 47.499281], [-122.243209, 47.499282], [-122.243441, 47.499285], [-122.243545, 47.499287], [-122.24365, 47.499288], [-122.243849, 47.499291], [-122.244071, 47.499294], [-122.244292, 47.499297], [-122.244517, 47.4993], [-122.244737, 47.499303], [-122.245133, 47.499309], [-122.245176, 47.49931], [-122.245404, 47.499313], [-122.245632, 47.499316], [-122.245849, 47.499319], [-122.246086, 47.499322], [-122.24631, 47.499326], [-122.246534, 47.499329], [-122.246764, 47.499332], [-122.246986, 47.499335], [-122.247224, 47.499338], [-122.247454, 47.499342], [-122.247675, 47.499345], [-122.247908, 47.499348], [-122.248093, 47.499351], [-122.248458, 47.499356], [-122.248814, 47.499361], [-122.2489, 47.499362], [-122.249042, 47.499358], [-122.249508, 47.499346], [-122.249573, 47.499561], [-122.24964, 47.499783], [-122.249694, 47.49996], [-122.249872, 47.500547], [-122.250002, 47.500977], [-122.250021, 47.501038], [-122.25005, 47.501133], [-122.250058, 47.501159], [-122.250228, 47.501713], [-122.250236, 47.501739], [-122.250245, 47.501768], [-122.250357, 47.502134], [-122.250432, 47.502379], [-122.250553, 47.502636], [-122.250637, 47.502776], [-122.250732, 47.502913], [-122.250819, 47.502909], [-122.250997, 47.502902], [-122.25139, 47.502884], [-122.251522, 47.502878], [-122.251655, 47.502873], [-122.252602, 47.502831], [-122.253719, 47.502782], [-122.253824, 47.502777], [-122.254173, 47.502762], [-122.256848, 47.502645], [-122.258187, 47.502587], [-122.259503, 47.50253], [-122.259503, 47.502486], [-122.259505, 47.502394], [-122.259512, 47.502053], [-122.259527, 47.501308], [-122.259537, 47.500803], [-122.25955, 47.500156], [-122.259571, 47.499076], [-122.259582, 47.498542], [-122.259605, 47.497415], [-122.259606, 47.497348], [-122.259608, 47.497258], [-122.259633, 47.496106], [-122.259636, 47.495989], [-122.259638, 47.495872], [-122.259641, 47.495621], [-122.26433, 47.495574], [-122.264969, 47.495567], [-122.266855, 47.495547], [-122.266912, 47.495547], [-122.267773, 47.495538], [-122.267847, 47.495537], [-122.268054, 47.495535], [-122.268485, 47.495531], [-122.268873, 47.495527], [-122.269415, 47.495521], [-122.269482, 47.49552], [-122.270149, 47.495515], [-122.270297, 47.495514], [-122.270296, 47.495596], [-122.270296, 47.495627], [-122.270295, 47.495684], [-122.270295, 47.495714], [-122.270294, 47.495743], [-122.270294, 47.495807], [-122.270293, 47.495847], [-122.270293, 47.495883], [-122.270292, 47.495932], [-122.270291, 47.495996], [-122.27029, 47.496055], [-122.27029, 47.496119], [-122.270289, 47.496182], [-122.270288, 47.496243], [-122.270288, 47.496285], [-122.270286, 47.496391], [-122.270285, 47.496491], [-122.270282, 47.4967], [-122.270281, 47.496761], [-122.270273, 47.497355], [-122.270272, 47.497383], [-122.27027, 47.49756], [-122.270269, 47.497618], [-122.270268, 47.497705], [-122.27026, 47.498267], [-122.27026, 47.498305], [-122.270251, 47.498915], [-122.270249, 47.499072], [-122.270247, 47.4992], [-122.270234, 47.500149], [-122.270233, 47.500192], [-122.270474, 47.500255], [-122.270604, 47.500821], [-122.270786, 47.50159], [-122.270217, 47.501459], [-122.270199, 47.502631], [-122.270179, 47.503707], [-122.270164, 47.504477], [-122.270156, 47.5049], [-122.270134, 47.506092], [-122.270133, 47.506155], [-122.269432, 47.506139], [-122.268235, 47.50614], [-122.267237, 47.506138], [-122.265503, 47.506139], [-122.263339, 47.506123], [-122.262393, 47.506118], [-122.26044, 47.506124], [-122.259473, 47.506115], [-122.258423, 47.506128], [-122.256943, 47.506168], [-122.255673, 47.506205], [-122.254791, 47.506224], [-122.254746, 47.506226], [-122.254711, 47.506232], [-122.254678, 47.506242], [-122.254647, 47.506254], [-122.25462, 47.50627], [-122.254596, 47.506288], [-122.254577, 47.506309], [-122.254562, 47.506331], [-122.254553, 47.506355], [-122.254228, 47.506377], [-122.253294, 47.506402], [-122.250205, 47.506384], [-122.24886, 47.506394], [-122.248875, 47.506871], [-122.248864, 47.50692], [-122.250001, 47.508565], [-122.250231, 47.508918], [-122.250253, 47.50894], [-122.250272, 47.508963], [-122.250288, 47.508987], [-122.250303, 47.509012], [-122.250316, 47.509037], [-122.250326, 47.509063], [-122.250334, 47.509089], [-122.250339, 47.509115], [-122.250342, 47.509142], [-122.250343, 47.509168], [-122.250341, 47.509195], [-122.250337, 47.509221], [-122.25033, 47.509247], [-122.250321, 47.509273], [-122.25031, 47.509299], [-122.250296, 47.509324], [-122.25028, 47.509348], [-122.250262, 47.509371], [-122.250235, 47.509389], [-122.250204, 47.509405], [-122.250174, 47.509422], [-122.250146, 47.509442], [-122.250122, 47.509462], [-122.250099, 47.509484], [-122.250079, 47.509506], [-122.250061, 47.50953], [-122.250046, 47.509555], [-122.250034, 47.50958], [-122.250026, 47.509606], [-122.25002, 47.509632], [-122.250017, 47.509659], [-122.250017, 47.509685], [-122.25002, 47.509712], [-122.249945, 47.51038], [-122.250257, 47.510633], [-122.249568, 47.510407], [-122.249529, 47.510405], [-122.24949, 47.510401], [-122.249452, 47.510395], [-122.249414, 47.510387], [-122.249378, 47.510377], [-122.249343, 47.510365], [-122.249309, 47.510352], [-122.249277, 47.510336], [-122.249247, 47.51032], [-122.249218, 47.510301], [-122.249192, 47.510281], [-122.249168, 47.51026], [-122.249147, 47.510238], [-122.249128, 47.510215], [-122.249112, 47.51019], [-122.249099, 47.510165], [-122.249088, 47.51014], [-122.249081, 47.510114], [-122.249077, 47.510087], [-122.249121, 47.509793], [-122.249122, 47.509766], [-122.249121, 47.50974], [-122.249118, 47.509713], [-122.249114, 47.509687], [-122.249107, 47.509661], [-122.249099, 47.509635], [-122.249088, 47.509609], [-122.249076, 47.509584], [-122.249062, 47.509559], [-122.249046, 47.509535], [-122.249028, 47.509511], [-122.249009, 47.509488], [-122.248388, 47.508734], [-122.248375, 47.508709], [-122.248357, 47.508686], [-122.248335, 47.508664], [-122.248307, 47.508645], [-122.248276, 47.508629], [-122.248241, 47.508617], [-122.248204, 47.508608], [-122.248166, 47.508603], [-122.248126, 47.508602], [-122.248087, 47.508605], [-122.248049, 47.508612], [-122.248012, 47.508621], [-122.247977, 47.508632], [-122.247942, 47.508644], [-122.247909, 47.508658], [-122.247877, 47.508674], [-122.247849, 47.508693], [-122.247829, 47.508715], [-122.247816, 47.50874], [-122.247813, 47.508767], [-122.24782, 47.508793], [-122.247831, 47.508819], [-122.247839, 47.508845], [-122.247844, 47.508871], [-122.247847, 47.508897], [-122.248011, 47.509166], [-122.248364, 47.509774], [-122.248362, 47.509931], [-122.248209, 47.511411], [-122.246415, 47.510888], [-122.244852, 47.509975], [-122.245024, 47.509813], [-122.245168, 47.509678]]]]
    },
    "properties": {
      "neighbourhood": "Rainier View",
      "neighbourhood_group": "Rainier Valley"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.297471, 47.591278], [-122.297352, 47.591285], [-122.295532, 47.591274], [-122.293257, 47.591239], [-122.291719, 47.591213], [-122.29121, 47.591202], [-122.29043, 47.591143], [-122.288713, 47.591136], [-122.287939, 47.591128], [-122.286998, 47.5911], [-122.28632, 47.591119], [-122.286291, 47.591057], [-122.286272, 47.591029], [-122.286258, 47.591], [-122.286249, 47.590965], [-122.286238, 47.590941], [-122.286204, 47.590886], [-122.286162, 47.590838], [-122.286151, 47.590799], [-122.286124, 47.590762], [-122.286104, 47.590736], [-122.286083, 47.590714], [-122.286052, 47.590683], [-122.286025, 47.590629], [-122.285967, 47.590596], [-122.285921, 47.590557], [-122.285875, 47.590502], [-122.285849, 47.590461], [-122.285828, 47.590416], [-122.285811, 47.590394], [-122.285786, 47.590372], [-122.285764, 47.590349], [-122.285738, 47.590306], [-122.285712, 47.590274], [-122.285681, 47.59022], [-122.285662, 47.590148], [-122.28565, 47.590115], [-122.28562, 47.590066], [-122.285585, 47.590004], [-122.285555, 47.589931], [-122.285526, 47.589848], [-122.285507, 47.589795], [-122.285512, 47.589761], [-122.285521, 47.589724], [-122.285532, 47.589694], [-122.285532, 47.589632], [-122.285524, 47.589606], [-122.28549, 47.589549], [-122.285457, 47.589535], [-122.285407, 47.589517], [-122.28538, 47.589457], [-122.285373, 47.589429], [-122.285364, 47.589405], [-122.285348, 47.589362], [-122.285341, 47.589325], [-122.285324, 47.589259], [-122.285314, 47.589212], [-122.285306, 47.589156], [-122.285297, 47.589115], [-122.285285, 47.589056], [-122.285282, 47.589008], [-122.285282, 47.588933], [-122.285282, 47.588858], [-122.285267, 47.588775], [-122.285226, 47.588731], [-122.285191, 47.588711], [-122.285128, 47.588676], [-122.285155, 47.58864], [-122.28518, 47.588601], [-122.285189, 47.588566], [-122.285202, 47.588531], [-122.285222, 47.588491], [-122.285244, 47.588445], [-122.285265, 47.588382], [-122.285289, 47.588318], [-122.285323, 47.588297], [-122.285376, 47.58828], [-122.285392, 47.588256], [-122.285374, 47.588228], [-122.285317, 47.588217], [-122.285262, 47.588202], [-122.285239, 47.588179], [-122.28523, 47.588154], [-122.285229, 47.588115], [-122.285231, 47.588086], [-122.28524, 47.588046], [-122.285254, 47.587988], [-122.285293, 47.587966], [-122.285328, 47.587957], [-122.285372, 47.587936], [-122.285405, 47.587892], [-122.285389, 47.587866], [-122.285363, 47.58783], [-122.285321, 47.587792], [-122.285316, 47.587755], [-122.285354, 47.587749], [-122.285393, 47.58775], [-122.28541, 47.587729], [-122.285431, 47.587631], [-122.285461, 47.587547], [-122.285487, 47.587502], [-122.285512, 47.587452], [-122.285527, 47.58741], [-122.285569, 47.587345], [-122.285588, 47.587317], [-122.285609, 47.587285], [-122.285636, 47.587229], [-122.285676, 47.587165], [-122.285688, 47.587142], [-122.285707, 47.5871], [-122.285718, 47.58707], [-122.285736, 47.587034], [-122.285756, 47.587], [-122.285796, 47.586932], [-122.285806, 47.586888], [-122.285817, 47.586835], [-122.285833, 47.586761], [-122.285856, 47.586638], [-122.285855, 47.586613], [-122.285855, 47.586589], [-122.285813, 47.586552], [-122.285796, 47.586524], [-122.285779, 47.586479], [-122.285762, 47.586417], [-122.285745, 47.586333], [-122.285749, 47.586292], [-122.285754, 47.586239], [-122.285771, 47.586198], [-122.285795, 47.58616], [-122.28582, 47.586138], [-122.28585, 47.586108], [-122.28588, 47.586074], [-122.285904, 47.58604], [-122.285981, 47.585954], [-122.28603, 47.585906], [-122.2861, 47.58585], [-122.286153, 47.585817], [-122.286192, 47.585799], [-122.286235, 47.58577], [-122.286269, 47.585733], [-122.2863, 47.58571], [-122.286333, 47.585694], [-122.28636, 47.58567], [-122.286383, 47.585623], [-122.286417, 47.585589], [-122.286469, 47.585559], [-122.286537, 47.585528], [-122.286576, 47.585505], [-122.286634, 47.585475], [-122.28672, 47.585414], [-122.286776, 47.585368], [-122.286813, 47.585336], [-122.286858, 47.585301], [-122.286883, 47.585281], [-122.286939, 47.585215], [-122.286965, 47.585192], [-122.287012, 47.585158], [-122.287063, 47.585117], [-122.287153, 47.585037], [-122.287192, 47.585024], [-122.287245, 47.585002], [-122.287272, 47.584983], [-122.287294, 47.584963], [-122.287329, 47.584916], [-122.287379, 47.584833], [-122.28746, 47.584709], [-122.287483, 47.584681], [-122.287531, 47.584613], [-122.287554, 47.584575], [-122.287582, 47.584501], [-122.287594, 47.584454], [-122.287611, 47.584368], [-122.287616, 47.584283], [-122.287623, 47.58425], [-122.287634, 47.584191], [-122.28764, 47.584123], [-122.287641, 47.584084], [-122.287644, 47.584047], [-122.287642, 47.583962], [-122.287631, 47.583875], [-122.287628, 47.58384], [-122.287609, 47.583744], [-122.287598, 47.583716], [-122.287566, 47.583658], [-122.287543, 47.583623], [-122.287527, 47.583593], [-122.287477, 47.583505], [-122.2874, 47.583393], [-122.287311, 47.58327], [-122.287269, 47.583218], [-122.287234, 47.583183], [-122.287185, 47.583148], [-122.28708, 47.583052], [-122.287035, 47.583015], [-122.286905, 47.582911], [-122.286815, 47.582844], [-122.286677, 47.582744], [-122.286601, 47.582693], [-122.286553, 47.582669], [-122.286499, 47.582648], [-122.286431, 47.582628], [-122.286366, 47.582598], [-122.286262, 47.582532], [-122.286206, 47.5825], [-122.286073, 47.582419], [-122.286009, 47.582382], [-122.285933, 47.582344], [-122.285902, 47.582326], [-122.285853, 47.582298], [-122.285805, 47.582275], [-122.285751, 47.582245], [-122.285689, 47.582201], [-122.285594, 47.582127], [-122.285534, 47.582077], [-122.285483, 47.582045], [-122.285426, 47.582006], [-122.285369, 47.581962], [-122.285313, 47.581908], [-122.285288, 47.581889], [-122.28523, 47.581844], [-122.285199, 47.581815], [-122.285137, 47.581775], [-122.285079, 47.581718], [-122.284963, 47.581597], [-122.284938, 47.581567], [-122.284899, 47.581525], [-122.284822, 47.581439], [-122.284784, 47.581391], [-122.284766, 47.581363], [-122.284715, 47.581295], [-122.284669, 47.581241], [-122.284577, 47.581117], [-122.284531, 47.581064], [-122.28449, 47.581], [-122.284455, 47.580934], [-122.284421, 47.58086], [-122.284394, 47.580816], [-122.284356, 47.580765], [-122.284323, 47.580715], [-122.284299, 47.580688], [-122.284281, 47.580663], [-122.284268, 47.580629], [-122.28423, 47.580559], [-122.284205, 47.580527], [-122.284146, 47.580447], [-122.284076, 47.580363], [-122.284024, 47.580284], [-122.283995, 47.580226], [-122.283936, 47.580106], [-122.283892, 47.580001], [-122.28384, 47.579868], [-122.283798, 47.579779], [-122.283752, 47.579687], [-122.283725, 47.579618], [-122.283695, 47.57954], [-122.283676, 47.579487], [-122.283651, 47.579413], [-122.283632, 47.579373], [-122.283586, 47.57927], [-122.283579, 47.579237], [-122.283581, 47.579182], [-122.283575, 47.579151], [-122.283562, 47.579105], [-122.283532, 47.579027], [-122.283509, 47.578968], [-122.283487, 47.578924], [-122.283472, 47.578869], [-122.283465, 47.578845], [-122.283443, 47.578795], [-122.283411, 47.57874], [-122.283377, 47.578667], [-122.283357, 47.578621], [-122.283344, 47.578577], [-122.283339, 47.578549], [-122.283338, 47.578516], [-122.283317, 47.578426], [-122.2833, 47.578382], [-122.283287, 47.578357], [-122.283264, 47.578325], [-122.283201, 47.578256], [-122.283146, 47.578134], [-122.283113, 47.578065], [-122.283085, 47.578005], [-122.283059, 47.577966], [-122.283044, 47.577932], [-122.283005, 47.577856], [-122.28299, 47.57782], [-122.282972, 47.577781], [-122.282956, 47.577747], [-122.282925, 47.577704], [-122.282894, 47.577629], [-122.282859, 47.57757], [-122.282845, 47.577537], [-122.282838, 47.577505], [-122.282829, 47.577463], [-122.282824, 47.577437], [-122.282812, 47.577382], [-122.2828, 47.577324], [-122.282786, 47.577274], [-122.282767, 47.577216], [-122.282732, 47.577141], [-122.282694, 47.577074], [-122.282656, 47.577001], [-122.282646, 47.576967], [-122.282632, 47.576925], [-122.282582, 47.576857], [-122.282534, 47.576787], [-122.282517, 47.576749], [-122.282486, 47.576686], [-122.282476, 47.57666], [-122.282451, 47.576601], [-122.282424, 47.576544], [-122.282398, 47.576487], [-122.282374, 47.576442], [-122.282359, 47.576411], [-122.282326, 47.57635], [-122.282314, 47.576315], [-122.282299, 47.576284], [-122.282261, 47.576203], [-122.282233, 47.57616], [-122.282202, 47.576101], [-122.282178, 47.576062], [-122.282156, 47.576019], [-122.282099, 47.575928], [-122.282022, 47.575829], [-122.28197, 47.575766], [-122.281917, 47.575722], [-122.28189, 47.575695], [-122.281837, 47.575636], [-122.281817, 47.575611], [-122.281776, 47.575559], [-122.281749, 47.575523], [-122.281719, 47.575489], [-122.281689, 47.575447], [-122.28165, 47.575406], [-122.281581, 47.575341], [-122.281536, 47.575285], [-122.281518, 47.575252], [-122.281485, 47.575204], [-122.281464, 47.57518], [-122.281438, 47.575146], [-122.281412, 47.57511], [-122.281378, 47.575061], [-122.281363, 47.575032], [-122.281342, 47.574998], [-122.281283, 47.574926], [-122.281246, 47.574877], [-122.281203, 47.57483], [-122.281141, 47.574763], [-122.281113, 47.574725], [-122.281082, 47.574684], [-122.281057, 47.574649], [-122.281016, 47.574585], [-122.280985, 47.574547], [-122.280953, 47.5745], [-122.280901, 47.574437], [-122.280876, 47.5744], [-122.280843, 47.574334], [-122.280831, 47.574286], [-122.28081, 47.574234], [-122.280789, 47.574182], [-122.280743, 47.57409], [-122.280724, 47.574045], [-122.280689, 47.57394], [-122.280644, 47.573819], [-122.280592, 47.573685], [-122.280577, 47.573655], [-122.280537, 47.573592], [-122.2805, 47.573531], [-122.280472, 47.573482], [-122.28046, 47.573455], [-122.280765, 47.573401], [-122.28077, 47.572878], [-122.280772, 47.572851], [-122.280774, 47.572823], [-122.280776, 47.572796], [-122.280777, 47.572768], [-122.280778, 47.57274], [-122.280778, 47.572713], [-122.280779, 47.572685], [-122.280779, 47.572658], [-122.280779, 47.57263], [-122.280778, 47.572602], [-122.280776, 47.572575], [-122.280775, 47.572547], [-122.280774, 47.57252], [-122.280772, 47.572492], [-122.280769, 47.572464], [-122.280767, 47.572437], [-122.280764, 47.572409], [-122.280761, 47.572382], [-122.280757, 47.572354], [-122.280753, 47.572327], [-122.280749, 47.572299], [-122.280745, 47.572272], [-122.28074, 47.572244], [-122.280735, 47.572217], [-122.280729, 47.57219], [-122.280723, 47.572162], [-122.280717, 47.572135], [-122.280711, 47.572108], [-122.280704, 47.57208], [-122.280697, 47.572053], [-122.28069, 47.572026], [-122.280682, 47.571999], [-122.280674, 47.571972], [-122.280666, 47.571945], [-122.280657, 47.571918], [-122.280649, 47.571891], [-122.280639, 47.571864], [-122.280629, 47.571837], [-122.28062, 47.57181], [-122.28061, 47.571784], [-122.280598, 47.571753], [-122.280207, 47.570985], [-122.279911, 47.570494], [-122.279553, 47.569977], [-122.279538, 47.568983], [-122.279533, 47.567906], [-122.279522, 47.566762], [-122.279515, 47.566198], [-122.279507, 47.565635], [-122.279505, 47.564809], [-122.2795, 47.56446], [-122.279498, 47.564188], [-122.279497, 47.564085], [-122.280638, 47.564077], [-122.280819, 47.564146], [-122.281703, 47.564142], [-122.283204, 47.564133], [-122.283833, 47.564133], [-122.285842, 47.564125], [-122.287298, 47.564089], [-122.288185, 47.564093], [-122.288289, 47.564481], [-122.288383, 47.564813], [-122.288477, 47.565156], [-122.288636, 47.565739], [-122.288775, 47.566249], [-122.288867, 47.56659], [-122.289023, 47.56715], [-122.289239, 47.567945], [-122.289716, 47.568594], [-122.290033, 47.569035], [-122.290344, 47.569463], [-122.290363, 47.569485], [-122.290381, 47.569506], [-122.290401, 47.569527], [-122.290421, 47.569548], [-122.290441, 47.569569], [-122.290462, 47.569589], [-122.290484, 47.56961], [-122.290507, 47.569629], [-122.29055, 47.569667], [-122.290574, 47.569686], [-122.290598, 47.569704], [-122.290623, 47.569723], [-122.290648, 47.569741], [-122.290675, 47.569758], [-122.290701, 47.569776], [-122.290728, 47.569792], [-122.290756, 47.569809], [-122.290784, 47.569825], [-122.290812, 47.569841], [-122.290841, 47.569856], [-122.29087, 47.569872], [-122.2909, 47.569886], [-122.29093, 47.5699], [-122.290961, 47.569914], [-122.290992, 47.569928], [-122.291023, 47.569941], [-122.291475, 47.570126], [-122.291521, 47.570146], [-122.291553, 47.570159], [-122.291583, 47.570173], [-122.291614, 47.570187], [-122.291644, 47.570201], [-122.291674, 47.570216], [-122.291703, 47.570231], [-122.291732, 47.570246], [-122.291761, 47.570261], [-122.29179, 47.570277], [-122.291818, 47.570293], [-122.291845, 47.57031], [-122.291873, 47.570326], [-122.2919, 47.570343], [-122.291927, 47.57036], [-122.291953, 47.570378], [-122.291979, 47.570396], [-122.292004, 47.570414], [-122.292029, 47.570432], [-122.292054, 47.570451], [-122.292077, 47.57047], [-122.2921, 47.57049], [-122.292125, 47.570509], [-122.292147, 47.570529], [-122.292169, 47.570549], [-122.292191, 47.570569], [-122.292211, 47.570589], [-122.292232, 47.57061], [-122.292253, 47.570631], [-122.292272, 47.570652], [-122.292292, 47.570673], [-122.292311, 47.570694], [-122.292329, 47.570716], [-122.292347, 47.570738], [-122.292389, 47.570789], [-122.292403, 47.570811], [-122.292419, 47.570833], [-122.292435, 47.570856], [-122.29245, 47.570879], [-122.292642, 47.571136], [-122.293151, 47.571801], [-122.293495, 47.572252], [-122.293866, 47.572735], [-122.294078, 47.57301], [-122.294449, 47.573504], [-122.29453, 47.573611], [-122.29475, 47.573893], [-122.294981, 47.574201], [-122.29541, 47.574768], [-122.295719, 47.575167], [-122.295958, 47.57548], [-122.296245, 47.575875], [-122.296567, 47.576281], [-122.296607, 47.576334], [-122.296589, 47.576387], [-122.296573, 47.57641], [-122.296554, 47.576439], [-122.296535, 47.576467], [-122.296517, 47.576496], [-122.296499, 47.576525], [-122.296482, 47.576554], [-122.296465, 47.576584], [-122.296449, 47.576613], [-122.296433, 47.576643], [-122.296418, 47.576672], [-122.296403, 47.576702], [-122.296389, 47.576732], [-122.296375, 47.576762], [-122.296361, 47.576792], [-122.296349, 47.576822], [-122.296337, 47.576853], [-122.296325, 47.576883], [-122.296314, 47.576914], [-122.296303, 47.576944], [-122.296293, 47.576975], [-122.296283, 47.577006], [-122.296274, 47.577036], [-122.296265, 47.577067], [-122.296256, 47.577098], [-122.296249, 47.577129], [-122.296242, 47.57716], [-122.296235, 47.577191], [-122.296229, 47.577223], [-122.296223, 47.577254], [-122.296218, 47.577285], [-122.296214, 47.577316], [-122.29621, 47.577348], [-122.296206, 47.577379], [-122.296203, 47.57741], [-122.296201, 47.577442], [-122.296199, 47.577473], [-122.296198, 47.57751], [-122.296167, 47.579459], [-122.296168, 47.579484], [-122.296169, 47.579508], [-122.29617, 47.579533], [-122.296171, 47.579557], [-122.296173, 47.579582], [-122.296175, 47.579606], [-122.296177, 47.57963], [-122.29618, 47.579655], [-122.296183, 47.579679], [-122.296186, 47.579703], [-122.296189, 47.579728], [-122.296193, 47.579752], [-122.296196, 47.579776], [-122.296201, 47.579801], [-122.296205, 47.579825], [-122.29621, 47.579849], [-122.296215, 47.579873], [-122.29622, 47.579898], [-122.296226, 47.579922], [-122.296232, 47.579946], [-122.296238, 47.57997], [-122.296244, 47.579994], [-122.296251, 47.580018], [-122.296258, 47.580042], [-122.296265, 47.580066], [-122.296273, 47.58009], [-122.29628, 47.580114], [-122.296288, 47.580138], [-122.296296, 47.580161], [-122.296305, 47.580185], [-122.296314, 47.580209], [-122.296323, 47.580232], [-122.296333, 47.580256], [-122.296342, 47.58028], [-122.296352, 47.580303], [-122.296362, 47.580327], [-122.296373, 47.58035], [-122.296383, 47.580373], [-122.296394, 47.580397], [-122.296406, 47.58042], [-122.296818, 47.581025], [-122.297164, 47.581499], [-122.297633, 47.582141], [-122.297936, 47.582537], [-122.297947, 47.58256], [-122.297957, 47.582583], [-122.297968, 47.582607], [-122.297978, 47.58263], [-122.297988, 47.582654], [-122.297997, 47.582677], [-122.298007, 47.582701], [-122.298016, 47.582725], [-122.298024, 47.582748], [-122.298033, 47.582772], [-122.298041, 47.582796], [-122.298048, 47.58282], [-122.298056, 47.582844], [-122.298063, 47.582868], [-122.29807, 47.582892], [-122.298077, 47.582916], [-122.298083, 47.58294], [-122.298089, 47.582964], [-122.298095, 47.582988], [-122.2981, 47.583012], [-122.298105, 47.583036], [-122.29811, 47.583061], [-122.298115, 47.583085], [-122.298119, 47.583109], [-122.298123, 47.583133], [-122.298126, 47.583158], [-122.29813, 47.583182], [-122.298133, 47.583206], [-122.298136, 47.583231], [-122.298138, 47.583255], [-122.29814, 47.58328], [-122.298142, 47.583304], [-122.298143, 47.583328], [-122.298145, 47.583353], [-122.298145, 47.583377], [-122.298146, 47.583402], [-122.298146, 47.583426], [-122.298146, 47.583451], [-122.298146, 47.583475], [-122.298145, 47.5835], [-122.298144, 47.583524], [-122.298132, 47.583871], [-122.298118, 47.586872], [-122.298029, 47.588449], [-122.297655, 47.58945], [-122.297489, 47.590212], [-122.297399, 47.590811], [-122.297441, 47.591083], [-122.297471, 47.591278]]]]
    },
    "properties": {
      "neighbourhood": "Mount Baker",
      "neighbourhood_group": "Rainier Valley"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.272633, 47.546042], [-122.272644, 47.546859], [-122.27264, 47.548031], [-122.272638, 47.549241], [-122.272646, 47.550025], [-122.272645, 47.55154], [-122.272645, 47.552063], [-122.272643, 47.553544], [-122.272643, 47.55369], [-122.272643, 47.553814], [-122.272644, 47.554111], [-122.272625, 47.555771], [-122.272624, 47.557057], [-122.275685, 47.557033], [-122.275686, 47.557104], [-122.275703, 47.558215], [-122.275701, 47.5606], [-122.27575, 47.562382], [-122.275756, 47.564107], [-122.27737, 47.564094], [-122.279269, 47.564087], [-122.279497, 47.564085], [-122.279498, 47.564188], [-122.2795, 47.56446], [-122.279505, 47.564809], [-122.279507, 47.565635], [-122.279515, 47.566198], [-122.279522, 47.566762], [-122.279533, 47.567906], [-122.279538, 47.568983], [-122.279553, 47.569977], [-122.279911, 47.570494], [-122.280207, 47.570985], [-122.280598, 47.571753], [-122.28061, 47.571784], [-122.28062, 47.57181], [-122.280629, 47.571837], [-122.280639, 47.571864], [-122.280649, 47.571891], [-122.280657, 47.571918], [-122.280666, 47.571945], [-122.280674, 47.571972], [-122.280682, 47.571999], [-122.28069, 47.572026], [-122.280697, 47.572053], [-122.280704, 47.57208], [-122.280711, 47.572108], [-122.280717, 47.572135], [-122.280723, 47.572162], [-122.280729, 47.57219], [-122.280735, 47.572217], [-122.28074, 47.572244], [-122.280745, 47.572272], [-122.280749, 47.572299], [-122.280753, 47.572327], [-122.280757, 47.572354], [-122.280761, 47.572382], [-122.280764, 47.572409], [-122.280767, 47.572437], [-122.280769, 47.572464], [-122.280772, 47.572492], [-122.280774, 47.57252], [-122.280775, 47.572547], [-122.280776, 47.572575], [-122.280778, 47.572602], [-122.280779, 47.57263], [-122.280779, 47.572658], [-122.280779, 47.572685], [-122.280778, 47.572713], [-122.280778, 47.57274], [-122.280777, 47.572768], [-122.280776, 47.572796], [-122.280774, 47.572823], [-122.280772, 47.572851], [-122.28077, 47.572878], [-122.280765, 47.573401], [-122.28046, 47.573455], [-122.280455, 47.573422], [-122.280472, 47.573397], [-122.280496, 47.573355], [-122.280504, 47.573329], [-122.280523, 47.573228], [-122.280527, 47.573174], [-122.280533, 47.573093], [-122.280536, 47.573036], [-122.28054, 47.572929], [-122.280541, 47.572803], [-122.280549, 47.572708], [-122.280544, 47.572661], [-122.280544, 47.572609], [-122.280553, 47.572578], [-122.280558, 47.572547], [-122.280556, 47.572516], [-122.280538, 47.572461], [-122.280528, 47.572421], [-122.280512, 47.572271], [-122.280491, 47.57216], [-122.280481, 47.572129], [-122.280416, 47.572014], [-122.280375, 47.571935], [-122.280345, 47.571891], [-122.280319, 47.571846], [-122.280317, 47.571818], [-122.280314, 47.571794], [-122.280295, 47.571736], [-122.280254, 47.571644], [-122.280202, 47.571548], [-122.280181, 47.571503], [-122.280163, 47.571444], [-122.280137, 47.571387], [-122.28008, 47.571281], [-122.280039, 47.571188], [-122.279989, 47.571095], [-122.279963, 47.571041], [-122.279936, 47.571], [-122.279918, 47.570975], [-122.279886, 47.57094], [-122.279833, 47.570905], [-122.279815, 47.57088], [-122.279807, 47.570851], [-122.279793, 47.570822], [-122.279776, 47.5708], [-122.27973, 47.570769], [-122.279638, 47.570731], [-122.279548, 47.570686], [-122.279516, 47.570672], [-122.279479, 47.570656], [-122.279467, 47.570625], [-122.279483, 47.570603], [-122.279472, 47.570575], [-122.279409, 47.570509], [-122.27936, 47.570469], [-122.279327, 47.57045], [-122.279287, 47.57043], [-122.279133, 47.57037], [-122.278995, 47.570335], [-122.278865, 47.570304], [-122.278812, 47.570294], [-122.27876, 47.570289], [-122.27865, 47.570284], [-122.278577, 47.570285], [-122.278506, 47.57029], [-122.278392, 47.570305], [-122.278271, 47.57033], [-122.278202, 47.570346], [-122.27815, 47.570355], [-122.278098, 47.570368], [-122.278049, 47.570377], [-122.278035, 47.570404], [-122.278083, 47.570433], [-122.278142, 47.570479], [-122.278126, 47.57051], [-122.278083, 47.570585], [-122.27803, 47.570669], [-122.277982, 47.570754], [-122.277942, 47.570815], [-122.277897, 47.570887], [-122.277834, 47.570996], [-122.277793, 47.571084], [-122.277741, 47.571173], [-122.277661, 47.571302], [-122.277622, 47.57136], [-122.277556, 47.571454], [-122.277516, 47.571528], [-122.277467, 47.571606], [-122.27745, 47.57169], [-122.277548, 47.57175], [-122.27743, 47.571726], [-122.277381, 47.57173], [-122.277347, 47.571745], [-122.277307, 47.571746], [-122.277259, 47.571739], [-122.277225, 47.571728], [-122.277193, 47.571714], [-122.277113, 47.571666], [-122.277065, 47.571633], [-122.277004, 47.571581], [-122.276957, 47.57153], [-122.276909, 47.571482], [-122.276875, 47.571445], [-122.276852, 47.571409], [-122.276837, 47.571371], [-122.276823, 47.571338], [-122.276782, 47.571269], [-122.276764, 47.571231], [-122.276738, 47.571149], [-122.276706, 47.571055], [-122.276691, 47.571002], [-122.276682, 47.570953], [-122.276725, 47.570935], [-122.276708, 47.570834], [-122.276693, 47.570791], [-122.276674, 47.570751], [-122.276658, 47.570719], [-122.276628, 47.570671], [-122.276596, 47.570636], [-122.276566, 47.570612], [-122.276529, 47.570581], [-122.276496, 47.570558], [-122.276457, 47.57054], [-122.276399, 47.570513], [-122.276336, 47.570492], [-122.276281, 47.570476], [-122.276226, 47.570463], [-122.276178, 47.570451], [-122.276123, 47.570441], [-122.276069, 47.570433], [-122.276002, 47.57042], [-122.275937, 47.57041], [-122.275874, 47.570397], [-122.275811, 47.570384], [-122.275739, 47.570371], [-122.275668, 47.570355], [-122.275605, 47.570341], [-122.275531, 47.570324], [-122.275477, 47.570306], [-122.275425, 47.570286], [-122.275369, 47.570263], [-122.275308, 47.570237], [-122.275237, 47.570208], [-122.275177, 47.570184], [-122.275123, 47.570158], [-122.275052, 47.570128], [-122.274996, 47.570098], [-122.274933, 47.570063], [-122.274867, 47.570027], [-122.274801, 47.569991], [-122.274758, 47.569968], [-122.274703, 47.569939], [-122.274642, 47.569905], [-122.274577, 47.569864], [-122.27452, 47.569831], [-122.274469, 47.569799], [-122.274406, 47.569762], [-122.274349, 47.569726], [-122.274274, 47.569681], [-122.274215, 47.569643], [-122.274169, 47.569616], [-122.274116, 47.569586], [-122.274076, 47.569559], [-122.27404, 47.569534], [-122.273958, 47.569482], [-122.273888, 47.569432], [-122.273845, 47.569405], [-122.273802, 47.569378], [-122.273731, 47.569324], [-122.273699, 47.569301], [-122.273612, 47.56924], [-122.273567, 47.569205], [-122.273512, 47.569155], [-122.273468, 47.569119], [-122.273386, 47.56904], [-122.273307, 47.56896], [-122.273229, 47.568883], [-122.27317, 47.568824], [-122.273096, 47.568759], [-122.27299, 47.568672], [-122.272929, 47.568629], [-122.272864, 47.568583], [-122.272827, 47.568559], [-122.272789, 47.568531], [-122.272712, 47.568485], [-122.272638, 47.568432], [-122.272608, 47.568413], [-122.272528, 47.56836], [-122.272502, 47.568341], [-122.272467, 47.568318], [-122.272435, 47.568293], [-122.2724, 47.568267], [-122.272381, 47.568228], [-122.272391, 47.568173], [-122.272363, 47.568139], [-122.27231, 47.568099], [-122.272227, 47.568051], [-122.272193, 47.568028], [-122.272113, 47.567986], [-122.27208, 47.567973], [-122.271995, 47.567942], [-122.271951, 47.567929], [-122.271904, 47.567918], [-122.271852, 47.567905], [-122.271757, 47.567888], [-122.271582, 47.567862], [-122.271419, 47.567843], [-122.271346, 47.567838], [-122.271263, 47.567836], [-122.271126, 47.567849], [-122.271088, 47.567857], [-122.270997, 47.567893], [-122.27095, 47.567913], [-122.270877, 47.56795], [-122.27084, 47.56797], [-122.270802, 47.567988], [-122.270754, 47.568014], [-122.270689, 47.568027], [-122.270653, 47.56803], [-122.270599, 47.568042], [-122.270558, 47.568047], [-122.270475, 47.568048], [-122.27042, 47.568044], [-122.270331, 47.568031], [-122.270291, 47.568028], [-122.270238, 47.568026], [-122.270172, 47.568022], [-122.270124, 47.568025], [-122.270054, 47.568024], [-122.269985, 47.568002], [-122.269967, 47.567967], [-122.269935, 47.567927], [-122.269885, 47.567888], [-122.269851, 47.567861], [-122.269807, 47.567839], [-122.269758, 47.567815], [-122.269722, 47.567791], [-122.269663, 47.567755], [-122.269637, 47.567737], [-122.269595, 47.567711], [-122.269567, 47.567691], [-122.269535, 47.567667], [-122.269497, 47.567643], [-122.269448, 47.567608], [-122.269415, 47.567583], [-122.269362, 47.567535], [-122.269333, 47.567519], [-122.269295, 47.567491], [-122.269232, 47.567468], [-122.269193, 47.567444], [-122.269135, 47.567369], [-122.269141, 47.567336], [-122.269117, 47.567283], [-122.269092, 47.567264], [-122.269071, 47.567243], [-122.269036, 47.567211], [-122.269002, 47.567176], [-122.268959, 47.567139], [-122.268922, 47.567103], [-122.268897, 47.567082], [-122.268855, 47.567046], [-122.268827, 47.567026], [-122.268768, 47.566969], [-122.268734, 47.566932], [-122.268692, 47.566902], [-122.268661, 47.566884], [-122.268633, 47.566863], [-122.268594, 47.566837], [-122.268558, 47.566812], [-122.268528, 47.566784], [-122.268468, 47.566744], [-122.268422, 47.566704], [-122.268385, 47.566673], [-122.26835, 47.566653], [-122.2683, 47.566626], [-122.268258, 47.566593], [-122.268213, 47.566548], [-122.268159, 47.566496], [-122.268133, 47.566477], [-122.268097, 47.566443], [-122.268072, 47.566418], [-122.268034, 47.566373], [-122.268011, 47.566344], [-122.267982, 47.566301], [-122.267966, 47.566272], [-122.267959, 47.566226], [-122.267956, 47.566159], [-122.267953, 47.566135], [-122.267941, 47.566104], [-122.267926, 47.566077], [-122.267906, 47.566056], [-122.267887, 47.566028], [-122.26787, 47.565998], [-122.267858, 47.565973], [-122.26784, 47.565919], [-122.267829, 47.565893], [-122.267813, 47.565868], [-122.267802, 47.565824], [-122.267789, 47.565792], [-122.26777, 47.56577], [-122.267746, 47.565743], [-122.26771, 47.565714], [-122.267675, 47.565689], [-122.267641, 47.565676], [-122.267591, 47.56566], [-122.267561, 47.565645], [-122.26753, 47.565631], [-122.267487, 47.565619], [-122.26743, 47.565607], [-122.26738, 47.565591], [-122.267336, 47.565578], [-122.26726, 47.565552], [-122.267216, 47.56553], [-122.267169, 47.565506], [-122.267139, 47.565492], [-122.267099, 47.565478], [-122.267018, 47.565471], [-122.267002, 47.565436], [-122.267004, 47.56539], [-122.267, 47.565354], [-122.266972, 47.565301], [-122.266942, 47.565253], [-122.266923, 47.565219], [-122.266905, 47.565183], [-122.266887, 47.565144], [-122.266869, 47.565084], [-122.266856, 47.565054], [-122.266853, 47.56503], [-122.266849, 47.564898], [-122.266836, 47.56487], [-122.266825, 47.564837], [-122.266826, 47.564805], [-122.26683, 47.564777], [-122.26689, 47.564723], [-122.266928, 47.564687], [-122.266952, 47.564651], [-122.266961, 47.564625], [-122.266975, 47.564601], [-122.26702, 47.56458], [-122.267057, 47.564553], [-122.267089, 47.564533], [-122.267116, 47.564514], [-122.267146, 47.56448], [-122.267169, 47.564455], [-122.267219, 47.564417], [-122.267267, 47.564391], [-122.26731, 47.564368], [-122.267369, 47.564356], [-122.267408, 47.564359], [-122.267466, 47.564385], [-122.26747, 47.564417], [-122.267444, 47.564447], [-122.267512, 47.564454], [-122.267553, 47.564459], [-122.267602, 47.564443], [-122.267654, 47.564435], [-122.267714, 47.564429], [-122.267757, 47.564423], [-122.267812, 47.564404], [-122.267852, 47.564382], [-122.26789, 47.56435], [-122.267923, 47.564324], [-122.267966, 47.564294], [-122.268006, 47.564262], [-122.268036, 47.564233], [-122.268057, 47.564204], [-122.26807, 47.564168], [-122.26807, 47.564135], [-122.268047, 47.564096], [-122.26801, 47.564096], [-122.267957, 47.564092], [-122.267973, 47.564022], [-122.268013, 47.564009], [-122.268015, 47.563927], [-122.268048, 47.563886], [-122.268064, 47.56386], [-122.268067, 47.563807], [-122.268068, 47.563728], [-122.268083, 47.563701], [-122.268109, 47.563675], [-122.268128, 47.563654], [-122.268158, 47.56363], [-122.268195, 47.563606], [-122.268235, 47.563589], [-122.268271, 47.563561], [-122.26827, 47.563533], [-122.268255, 47.563508], [-122.268236, 47.563478], [-122.268218, 47.563456], [-122.268188, 47.563426], [-122.268167, 47.563404], [-122.268139, 47.56339], [-122.268099, 47.563378], [-122.268066, 47.56334], [-122.268059, 47.563308], [-122.268068, 47.563272], [-122.26807, 47.563239], [-122.268069, 47.563211], [-122.268048, 47.563184], [-122.267979, 47.563153], [-122.267959, 47.56311], [-122.267946, 47.563081], [-122.267938, 47.563056], [-122.267933, 47.563027], [-122.267927, 47.562999], [-122.267908, 47.562966], [-122.267875, 47.562926], [-122.267844, 47.562874], [-122.267824, 47.562841], [-122.267805, 47.562812], [-122.267787, 47.562768], [-122.267767, 47.562739], [-122.267745, 47.562719], [-122.267716, 47.562694], [-122.267693, 47.562671], [-122.267654, 47.56264], [-122.267614, 47.562609], [-122.267587, 47.56259], [-122.267564, 47.56257], [-122.267539, 47.562535], [-122.267514, 47.562497], [-122.267481, 47.562459], [-122.267462, 47.562432], [-122.267438, 47.562399], [-122.267409, 47.562364], [-122.267388, 47.562334], [-122.267369, 47.562304], [-122.267354, 47.562278], [-122.267329, 47.562254], [-122.267296, 47.562219], [-122.267271, 47.562198], [-122.267241, 47.562166], [-122.267221, 47.562129], [-122.26721, 47.562102], [-122.267177, 47.562082], [-122.267115, 47.562051], [-122.26708, 47.562028], [-122.267046, 47.562006], [-122.267002, 47.561977], [-122.266972, 47.561953], [-122.266933, 47.561934], [-122.266871, 47.561905], [-122.266827, 47.561881], [-122.266793, 47.561866], [-122.266752, 47.561848], [-122.266681, 47.561831], [-122.266625, 47.561817], [-122.266588, 47.561806], [-122.266549, 47.561786], [-122.266464, 47.561786], [-122.26642, 47.561782], [-122.266359, 47.561763], [-122.266291, 47.561746], [-122.266203, 47.561712], [-122.266139, 47.561683], [-122.266082, 47.561659], [-122.266031, 47.561657], [-122.265981, 47.561648], [-122.265917, 47.56163], [-122.265878, 47.561623], [-122.265839, 47.561616], [-122.26578, 47.561606], [-122.265744, 47.5616], [-122.265657, 47.561593], [-122.26562, 47.56159], [-122.265499, 47.561588], [-122.265452, 47.561586], [-122.265278, 47.561585], [-122.265199, 47.561587], [-122.265149, 47.561589], [-122.265063, 47.561601], [-122.265002, 47.561611], [-122.264971, 47.561631], [-122.264924, 47.561658], [-122.264901, 47.561678], [-122.264876, 47.561715], [-122.264855, 47.561745], [-122.264843, 47.56178], [-122.264828, 47.561847], [-122.264785, 47.561864], [-122.264746, 47.561861], [-122.264712, 47.561849], [-122.264684, 47.561834], [-122.264636, 47.561828], [-122.264609, 47.561803], [-122.264628, 47.56177], [-122.264633, 47.56173], [-122.264636, 47.561697], [-122.264624, 47.561639], [-122.264611, 47.561607], [-122.264588, 47.561582], [-122.264562, 47.561537], [-122.264546, 47.561499], [-122.264525, 47.561462], [-122.264481, 47.561388], [-122.264467, 47.561363], [-122.264452, 47.561334], [-122.264433, 47.561292], [-122.264417, 47.561241], [-122.264419, 47.561168], [-122.264417, 47.561141], [-122.264416, 47.561062], [-122.264409, 47.561036], [-122.264376, 47.560967], [-122.264357, 47.560941], [-122.264333, 47.560889], [-122.264318, 47.560862], [-122.264305, 47.560832], [-122.264286, 47.560798], [-122.264258, 47.560743], [-122.264233, 47.560692], [-122.264212, 47.560657], [-122.264184, 47.560624], [-122.264171, 47.5606], [-122.264152, 47.560575], [-122.264136, 47.56055], [-122.264106, 47.560517], [-122.264091, 47.560493], [-122.264064, 47.560459], [-122.264049, 47.560434], [-122.264018, 47.560391], [-122.263961, 47.560327], [-122.263934, 47.560296], [-122.263907, 47.560268], [-122.263875, 47.560238], [-122.263858, 47.560212], [-122.263842, 47.56019], [-122.263811, 47.560152], [-122.263784, 47.560117], [-122.263761, 47.560083], [-122.263734, 47.560047], [-122.263731, 47.559995], [-122.263683, 47.559973], [-122.263653, 47.559944], [-122.26363, 47.559911], [-122.263612, 47.559873], [-122.263591, 47.559833], [-122.263562, 47.559755], [-122.263557, 47.559716], [-122.263555, 47.559679], [-122.263558, 47.559596], [-122.263562, 47.559547], [-122.263548, 47.559507], [-122.263526, 47.559472], [-122.263505, 47.559451], [-122.263496, 47.55942], [-122.263496, 47.559389], [-122.263494, 47.559342], [-122.263486, 47.559313], [-122.263499, 47.559282], [-122.263506, 47.559254], [-122.263509, 47.559218], [-122.2635, 47.559169], [-122.263481, 47.559147], [-122.263459, 47.559115], [-122.263436, 47.559091], [-122.263408, 47.559063], [-122.263382, 47.559039], [-122.263356, 47.559015], [-122.263324, 47.558977], [-122.263281, 47.558945], [-122.263219, 47.558899], [-122.263177, 47.558864], [-122.263153, 47.558843], [-122.263149, 47.558806], [-122.263138, 47.55878], [-122.263115, 47.558747], [-122.263085, 47.558724], [-122.263052, 47.558703], [-122.263, 47.558681], [-122.262956, 47.558658], [-122.262909, 47.558645], [-122.262855, 47.558636], [-122.262812, 47.558625], [-122.262707, 47.558611], [-122.262659, 47.558586], [-122.262619, 47.558557], [-122.262589, 47.558533], [-122.262547, 47.558497], [-122.262504, 47.55848], [-122.262469, 47.558441], [-122.262435, 47.558379], [-122.262423, 47.558347], [-122.262369, 47.558328], [-122.262287, 47.558296], [-122.262316, 47.558267], [-122.262301, 47.558238], [-122.26227, 47.558218], [-122.262235, 47.55819], [-122.262177, 47.558145], [-122.262128, 47.558099], [-122.262086, 47.558071], [-122.262063, 47.558051], [-122.262024, 47.558025], [-122.261993, 47.558002], [-122.261963, 47.557981], [-122.261945, 47.557954], [-122.26193, 47.557929], [-122.261933, 47.557866], [-122.261917, 47.557829], [-122.261908, 47.557805], [-122.261894, 47.557781], [-122.261877, 47.557752], [-122.261879, 47.55771], [-122.261848, 47.557664], [-122.261829, 47.557637], [-122.261812, 47.557611], [-122.261793, 47.557585], [-122.261772, 47.557558], [-122.261753, 47.557536], [-122.261738, 47.557502], [-122.26172, 47.557477], [-122.2617, 47.557455], [-122.261668, 47.557436], [-122.261602, 47.557402], [-122.261571, 47.557388], [-122.261532, 47.557381], [-122.261487, 47.557368], [-122.261481, 47.557342], [-122.261494, 47.557317], [-122.261529, 47.55729], [-122.261562, 47.557275], [-122.261594, 47.557259], [-122.261621, 47.557218], [-122.261634, 47.557172], [-122.261633, 47.557132], [-122.261618, 47.557085], [-122.2616, 47.557051], [-122.261585, 47.557022], [-122.26157, 47.556992], [-122.261557, 47.556951], [-122.261548, 47.556915], [-122.261535, 47.55687], [-122.261523, 47.556814], [-122.261514, 47.556777], [-122.261507, 47.556739], [-122.261519, 47.556707], [-122.261532, 47.556678], [-122.261543, 47.556651], [-122.261559, 47.556607], [-122.261586, 47.556512], [-122.261604, 47.556461], [-122.261619, 47.556408], [-122.261628, 47.556378], [-122.261629, 47.556337], [-122.261619, 47.55626], [-122.261616, 47.55623], [-122.261599, 47.556204], [-122.26158, 47.556181], [-122.261573, 47.556143], [-122.261575, 47.556109], [-122.261564, 47.556079], [-122.261549, 47.556046], [-122.261526, 47.556016], [-122.261506, 47.555986], [-122.261487, 47.555951], [-122.261474, 47.555919], [-122.261467, 47.55588], [-122.261458, 47.555845], [-122.261432, 47.555802], [-122.26142, 47.555774], [-122.261396, 47.555748], [-122.26137, 47.555724], [-122.261333, 47.555696], [-122.261315, 47.55567], [-122.261307, 47.555625], [-122.26129, 47.555596], [-122.261259, 47.555537], [-122.26123, 47.555506], [-122.261198, 47.555478], [-122.261168, 47.555451], [-122.26112, 47.555422], [-122.261086, 47.555398], [-122.261058, 47.555377], [-122.261021, 47.555348], [-122.260994, 47.555318], [-122.260977, 47.555291], [-122.260958, 47.555253], [-122.260928, 47.555195], [-122.260912, 47.555166], [-122.26091, 47.555138], [-122.260938, 47.555112], [-122.260972, 47.555095], [-122.260987, 47.555071], [-122.260972, 47.555025], [-122.260959, 47.554999], [-122.260934, 47.554967], [-122.260913, 47.554936], [-122.260891, 47.554912], [-122.260871, 47.554892], [-122.260825, 47.554866], [-122.260781, 47.554856], [-122.260755, 47.554839], [-122.260725, 47.554815], [-122.260713, 47.554777], [-122.260706, 47.554746], [-122.260688, 47.554725], [-122.26065, 47.554668], [-122.260642, 47.554642], [-122.26064, 47.554614], [-122.260647, 47.554564], [-122.260654, 47.554527], [-122.260665, 47.554501], [-122.260672, 47.554435], [-122.260669, 47.554365], [-122.260663, 47.554319], [-122.260665, 47.554275], [-122.260661, 47.554245], [-122.260638, 47.554171], [-122.26062, 47.554091], [-122.260622, 47.554036], [-122.260623, 47.553961], [-122.260619, 47.553934], [-122.260597, 47.553854], [-122.260587, 47.553824], [-122.260562, 47.553783], [-122.260552, 47.553757], [-122.260537, 47.553725], [-122.260515, 47.553677], [-122.260502, 47.553646], [-122.260477, 47.553605], [-122.260462, 47.553575], [-122.260435, 47.553528], [-122.260407, 47.55348], [-122.260363, 47.553444], [-122.260343, 47.553423], [-122.260325, 47.553402], [-122.260304, 47.553366], [-122.260301, 47.553331], [-122.260284, 47.553304], [-122.260227, 47.55326], [-122.26021, 47.553235], [-122.260171, 47.553207], [-122.260145, 47.553189], [-122.260097, 47.553156], [-122.260057, 47.553138], [-122.260027, 47.553111], [-122.260006, 47.553075], [-122.259971, 47.552997], [-122.259963, 47.55297], [-122.259945, 47.552921], [-122.259926, 47.552868], [-122.259917, 47.552818], [-122.259915, 47.552792], [-122.259909, 47.552765], [-122.259899, 47.552741], [-122.259881, 47.552702], [-122.259862, 47.552661], [-122.259851, 47.552625], [-122.259844, 47.552584], [-122.259834, 47.552541], [-122.25982, 47.552469], [-122.259801, 47.552414], [-122.259794, 47.55238], [-122.259775, 47.55232], [-122.25976, 47.552268], [-122.259757, 47.552209], [-122.259782, 47.552158], [-122.259789, 47.552127], [-122.259775, 47.552087], [-122.259759, 47.55206], [-122.259723, 47.552012], [-122.259723, 47.551983], [-122.259736, 47.551957], [-122.259721, 47.551923], [-122.259722, 47.551822], [-122.259724, 47.551732], [-122.259751, 47.5517], [-122.25975, 47.551675], [-122.259713, 47.551645], [-122.259687, 47.551601], [-122.259655, 47.551559], [-122.259629, 47.551516], [-122.259587, 47.551479], [-122.259543, 47.551447], [-122.259518, 47.551429], [-122.259455, 47.551401], [-122.259403, 47.551386], [-122.259331, 47.551375], [-122.25927, 47.551365], [-122.259185, 47.551355], [-122.259121, 47.551351], [-122.259002, 47.551349], [-122.258788, 47.551348], [-122.258579, 47.55135], [-122.258431, 47.551347], [-122.25837, 47.551353], [-122.258231, 47.551354], [-122.258188, 47.551356], [-122.258149, 47.551361], [-122.258008, 47.551369], [-122.257911, 47.551371], [-122.257719, 47.551372], [-122.257684, 47.551385], [-122.257623, 47.551415], [-122.257595, 47.551438], [-122.257567, 47.551459], [-122.257553, 47.551483], [-122.257539, 47.551506], [-122.257503, 47.551547], [-122.257479, 47.551574], [-122.257449, 47.551633], [-122.257421, 47.551677], [-122.257391, 47.551709], [-122.257364, 47.551742], [-122.257341, 47.551779], [-122.257315, 47.551809], [-122.257298, 47.551846], [-122.257272, 47.551869], [-122.25724, 47.551908], [-122.257231, 47.551934], [-122.257227, 47.551971], [-122.257288, 47.552011], [-122.25734, 47.552042], [-122.25732, 47.552068], [-122.257273, 47.552086], [-122.257193, 47.552113], [-122.257158, 47.552131], [-122.257108, 47.552155], [-122.257036, 47.552192], [-122.256981, 47.552211], [-122.256916, 47.55223], [-122.256876, 47.552252], [-122.256832, 47.552274], [-122.256792, 47.552288], [-122.256721, 47.55231], [-122.256639, 47.552341], [-122.256582, 47.552355], [-122.256538, 47.552368], [-122.256428, 47.552413], [-122.256365, 47.552441], [-122.256297, 47.552468], [-122.256261, 47.552491], [-122.256225, 47.55251], [-122.256139, 47.552545], [-122.256026, 47.552592], [-122.255992, 47.552601], [-122.2559, 47.552628], [-122.255842, 47.552653], [-122.255783, 47.552677], [-122.2557, 47.552702], [-122.255662, 47.552717], [-122.255601, 47.552741], [-122.255531, 47.552763], [-122.255495, 47.552777], [-122.255429, 47.552808], [-122.255336, 47.55284], [-122.255286, 47.552859], [-122.255196, 47.552889], [-122.25512, 47.552916], [-122.255066, 47.552933], [-122.255021, 47.552951], [-122.254963, 47.552982], [-122.254902, 47.553011], [-122.254851, 47.553039], [-122.25479, 47.553076], [-122.25472, 47.553118], [-122.254609, 47.553193], [-122.254571, 47.553225], [-122.254522, 47.553258], [-122.25447, 47.553298], [-122.254428, 47.553337], [-122.254382, 47.553394], [-122.254347, 47.553419], [-122.254318, 47.553442], [-122.254277, 47.55348], [-122.254244, 47.553507], [-122.2542, 47.553546], [-122.254117, 47.553641], [-122.254106, 47.553669], [-122.254099, 47.553697], [-122.254103, 47.553722], [-122.254107, 47.553778], [-122.25413, 47.553818], [-122.25417, 47.553868], [-122.254226, 47.553927], [-122.254286, 47.553984], [-122.254297, 47.554007], [-122.254302, 47.554034], [-122.254307, 47.55408], [-122.254307, 47.554147], [-122.254281, 47.55421], [-122.254251, 47.554246], [-122.254242, 47.554272], [-122.25423, 47.554304], [-122.254219, 47.554338], [-122.254202, 47.554373], [-122.254186, 47.554405], [-122.254193, 47.554466], [-122.254226, 47.554504], [-122.254271, 47.554546], [-122.254307, 47.554582], [-122.254348, 47.554609], [-122.254377, 47.554626], [-122.25442, 47.554634], [-122.254457, 47.55465], [-122.254492, 47.554677], [-122.25453, 47.554704], [-122.254632, 47.554701], [-122.254731, 47.554685], [-122.25478, 47.554689], [-122.254847, 47.554699], [-122.254889, 47.554713], [-122.25492, 47.554726], [-122.254965, 47.554746], [-122.254995, 47.554759], [-122.255033, 47.554774], [-122.255066, 47.554792], [-122.255107, 47.554815], [-122.25514, 47.554829], [-122.255124, 47.554853], [-122.255113, 47.554891], [-122.255101, 47.554916], [-122.255078, 47.55494], [-122.255061, 47.554974], [-122.255031, 47.555001], [-122.255006, 47.555034], [-122.25499, 47.555057], [-122.254968, 47.555078], [-122.254947, 47.555103], [-122.254923, 47.555127], [-122.254913, 47.555152], [-122.254897, 47.55518], [-122.254883, 47.555219], [-122.254881, 47.555247], [-122.25488, 47.555327], [-122.254886, 47.55539], [-122.254888, 47.555415], [-122.254917, 47.555471], [-122.254946, 47.555502], [-122.254965, 47.555537], [-122.254975, 47.555568], [-122.254987, 47.555601], [-122.254982, 47.555668], [-122.254967, 47.555717], [-122.254956, 47.555758], [-122.25495, 47.555803], [-122.254944, 47.555835], [-122.254936, 47.555873], [-122.254928, 47.555908], [-122.254923, 47.555946], [-122.254914, 47.555988], [-122.254905, 47.556016], [-122.2549, 47.556061], [-122.254893, 47.556113], [-122.25489, 47.556139], [-122.254891, 47.556169], [-122.254882, 47.556197], [-122.254854, 47.556237], [-122.254838, 47.556314], [-122.254827, 47.556347], [-122.254824, 47.556384], [-122.254814, 47.556413], [-122.254809, 47.556463], [-122.254804, 47.556489], [-122.254802, 47.556541], [-122.254794, 47.556568], [-122.254781, 47.556619], [-122.254766, 47.556654], [-122.254746, 47.556693], [-122.254742, 47.556729], [-122.254729, 47.556767], [-122.254728, 47.556799], [-122.254721, 47.556916], [-122.254718, 47.556989], [-122.254723, 47.557067], [-122.254726, 47.557099], [-122.254735, 47.557149], [-122.254743, 47.557177], [-122.254751, 47.557221], [-122.254758, 47.557261], [-122.254769, 47.557289], [-122.254781, 47.557318], [-122.254787, 47.557345], [-122.254805, 47.557389], [-122.254813, 47.557441], [-122.254816, 47.557466], [-122.254832, 47.557506], [-122.254843, 47.557544], [-122.254856, 47.557583], [-122.254866, 47.55762], [-122.254887, 47.557664], [-122.254916, 47.557722], [-122.254929, 47.557752], [-122.254943, 47.557775], [-122.254952, 47.557803], [-122.254969, 47.557831], [-122.254998, 47.55795], [-122.255007, 47.557974], [-122.25502, 47.558025], [-122.255034, 47.558065], [-122.255047, 47.558098], [-122.255053, 47.558122], [-122.255067, 47.558181], [-122.255072, 47.558207], [-122.255082, 47.55826], [-122.255094, 47.558305], [-122.255106, 47.558382], [-122.255115, 47.558416], [-122.25512, 47.558453], [-122.255144, 47.558516], [-122.255165, 47.558569], [-122.255176, 47.558661], [-122.255189, 47.558711], [-122.255204, 47.55874], [-122.255217, 47.558793], [-122.255226, 47.558819], [-122.255245, 47.558892], [-122.25525, 47.558931], [-122.255258, 47.558985], [-122.255277, 47.559047], [-122.255286, 47.559076], [-122.255298, 47.559132], [-122.255311, 47.559162], [-122.255319, 47.559207], [-122.255335, 47.559296], [-122.255341, 47.559322], [-122.255354, 47.559379], [-122.255375, 47.559434], [-122.255441, 47.559564], [-122.255474, 47.559615], [-122.255498, 47.559682], [-122.255505, 47.559731], [-122.255509, 47.55978], [-122.255511, 47.559821], [-122.255502, 47.55987], [-122.255497, 47.560013], [-122.255489, 47.56007], [-122.255478, 47.560126], [-122.255475, 47.560158], [-122.25547, 47.560197], [-122.255456, 47.560247], [-122.255449, 47.560282], [-122.255429, 47.560334], [-122.255421, 47.560374], [-122.255406, 47.56045], [-122.255395, 47.560476], [-122.255388, 47.560514], [-122.255372, 47.560556], [-122.255364, 47.560593], [-122.255351, 47.560655], [-122.255347, 47.56069], [-122.255342, 47.560738], [-122.255337, 47.560828], [-122.255328, 47.560854], [-122.255323, 47.560881], [-122.255318, 47.560913], [-122.255311, 47.56096], [-122.255296, 47.561002], [-122.255289, 47.561042], [-122.255255, 47.561171], [-122.255243, 47.561219], [-122.255231, 47.561275], [-122.255226, 47.561332], [-122.255213, 47.561381], [-122.255201, 47.561423], [-122.25519, 47.561463], [-122.255178, 47.561507], [-122.255167, 47.561544], [-122.255154, 47.561577], [-122.25514, 47.561603], [-122.255127, 47.56164], [-122.255109, 47.561669], [-122.255088, 47.561692], [-122.255043, 47.561716], [-122.254972, 47.561743], [-122.254927, 47.561759], [-122.254892, 47.561769], [-122.254845, 47.561792], [-122.2548, 47.561815], [-122.254753, 47.561837], [-122.25474, 47.56186], [-122.254701, 47.561902], [-122.254651, 47.561924], [-122.254602, 47.561929], [-122.254408, 47.561932], [-122.254325, 47.561932], [-122.254253, 47.561932], [-122.254197, 47.561933], [-122.2541, 47.561937], [-122.254064, 47.561941], [-122.253985, 47.561946], [-122.253894, 47.561952], [-122.253842, 47.561961], [-122.253779, 47.561972], [-122.253719, 47.56198], [-122.253683, 47.561986], [-122.253502, 47.562007], [-122.253445, 47.562016], [-122.253403, 47.562023], [-122.253354, 47.562034], [-122.253292, 47.562035], [-122.253218, 47.562044], [-122.253174, 47.562053], [-122.253121, 47.562059], [-122.253073, 47.562069], [-122.252978, 47.562086], [-122.252904, 47.562096], [-122.252841, 47.562113], [-122.252799, 47.562115], [-122.25274, 47.562124], [-122.252673, 47.562127], [-122.252638, 47.562132], [-122.25256, 47.562152], [-122.252477, 47.562163], [-122.252419, 47.562171], [-122.252343, 47.5622], [-122.252244, 47.562205], [-122.252206, 47.562218], [-122.252152, 47.56223], [-122.252108, 47.562242], [-122.252039, 47.562251], [-122.25195, 47.562266], [-122.251763, 47.562286], [-122.25171, 47.562288], [-122.251637, 47.562303], [-122.251548, 47.562311], [-122.251481, 47.562317], [-122.251436, 47.562324], [-122.251395, 47.562328], [-122.25131, 47.562326], [-122.251274, 47.562316], [-122.251232, 47.562309], [-122.251161, 47.562306], [-122.251119, 47.562281], [-122.251027, 47.56227], [-122.250902, 47.562236], [-122.250857, 47.562222], [-122.250826, 47.562207], [-122.250785, 47.562188], [-122.250747, 47.562163], [-122.250712, 47.562147], [-122.250682, 47.562127], [-122.250655, 47.56211], [-122.250606, 47.562074], [-122.250589, 47.562052], [-122.250542, 47.562018], [-122.250522, 47.561998], [-122.250489, 47.561974], [-122.250453, 47.561949], [-122.25042, 47.561934], [-122.250389, 47.561906], [-122.250353, 47.561886], [-122.250305, 47.561852], [-122.250287, 47.561821], [-122.250249, 47.56177], [-122.250228, 47.561733], [-122.250219, 47.561704], [-122.250219, 47.561679], [-122.250216, 47.561648], [-122.250215, 47.561621], [-122.250217, 47.561592], [-122.250225, 47.561564], [-122.250233, 47.56151], [-122.250235, 47.561484], [-122.250218, 47.561428], [-122.25021, 47.561402], [-122.250194, 47.561366], [-122.250168, 47.561321], [-122.250154, 47.561299], [-122.25009, 47.56121], [-122.25008, 47.561187], [-122.250067, 47.561161], [-122.250041, 47.561117], [-122.250028, 47.561089], [-122.250001, 47.561051], [-122.24998, 47.561018], [-122.249946, 47.56098], [-122.249912, 47.56093], [-122.249877, 47.560886], [-122.249861, 47.560859], [-122.249837, 47.560832], [-122.249805, 47.560788], [-122.249785, 47.560762], [-122.249754, 47.560725], [-122.249715, 47.560683], [-122.249701, 47.560657], [-122.249655, 47.560595], [-122.24964, 47.560573], [-122.249605, 47.560535], [-122.249577, 47.56049], [-122.249556, 47.560466], [-122.249535, 47.560443], [-122.249508, 47.560412], [-122.249458, 47.560369], [-122.24943, 47.56033], [-122.249379, 47.560279], [-122.249361, 47.56025], [-122.249319, 47.560191], [-122.249298, 47.560163], [-122.249262, 47.560124], [-122.24924, 47.56009], [-122.249206, 47.56005], [-122.24918, 47.56001], [-122.24913, 47.55995], [-122.249077, 47.559891], [-122.249037, 47.559869], [-122.249006, 47.559854], [-122.248974, 47.559828], [-122.248928, 47.55979], [-122.248901, 47.559757], [-122.248872, 47.559729], [-122.248847, 47.559697], [-122.248824, 47.559674], [-122.248802, 47.559643], [-122.248768, 47.559602], [-122.248747, 47.559574], [-122.248704, 47.559531], [-122.24866, 47.55948], [-122.248643, 47.559457], [-122.248589, 47.559409], [-122.248565, 47.559381], [-122.248512, 47.559334], [-122.248495, 47.559312], [-122.24844, 47.559252], [-122.248414, 47.559221], [-122.248388, 47.559184], [-122.248368, 47.559163], [-122.248332, 47.559114], [-122.248311, 47.55909], [-122.248278, 47.559063], [-122.248249, 47.559027], [-122.248226, 47.559005], [-122.248205, 47.558971], [-122.24819, 47.55894], [-122.248159, 47.558904], [-122.248118, 47.558858], [-122.248074, 47.558818], [-122.248056, 47.558791], [-122.248024, 47.558765], [-122.248002, 47.558735], [-122.24797, 47.558685], [-122.247949, 47.558652], [-122.247943, 47.558626], [-122.247923, 47.558595], [-122.24791, 47.55856], [-122.247878, 47.558502], [-122.247862, 47.558468], [-122.247856, 47.558437], [-122.247841, 47.558389], [-122.247838, 47.558305], [-122.247831, 47.558248], [-122.247827, 47.558201], [-122.247818, 47.558163], [-122.247809, 47.558138], [-122.247805, 47.5581], [-122.247801, 47.558075], [-122.247757, 47.557942], [-122.247743, 47.557869], [-122.24774, 47.557843], [-122.247731, 47.557808], [-122.24773, 47.557759], [-122.247728, 47.557727], [-122.247722, 47.557695], [-122.247721, 47.557619], [-122.247717, 47.557475], [-122.247709, 47.557365], [-122.247719, 47.557235], [-122.247725, 47.557205], [-122.247742, 47.557171], [-122.247746, 47.557147], [-122.247763, 47.557101], [-122.247771, 47.557039], [-122.247776, 47.557009], [-122.247787, 47.556956], [-122.247789, 47.556884], [-122.247786, 47.556841], [-122.247787, 47.556798], [-122.247786, 47.556747], [-122.247784, 47.55671], [-122.247782, 47.556676], [-122.247777, 47.556642], [-122.247764, 47.556617], [-122.247743, 47.556596], [-122.247709, 47.556574], [-122.247685, 47.556549], [-122.247649, 47.556547], [-122.24763, 47.556521], [-122.247643, 47.556489], [-122.247683, 47.556467], [-122.247684, 47.55643], [-122.247672, 47.556405], [-122.247648, 47.556338], [-122.247636, 47.55631], [-122.247625, 47.556277], [-122.247602, 47.556244], [-122.247567, 47.556214], [-122.24753, 47.556188], [-122.247509, 47.556165], [-122.247471, 47.556125], [-122.247423, 47.556084], [-122.247404, 47.556057], [-122.247379, 47.556031], [-122.247361, 47.556003], [-122.247328, 47.555959], [-122.247298, 47.555926], [-122.247276, 47.555891], [-122.247261, 47.555857], [-122.247243, 47.555835], [-122.247218, 47.555795], [-122.247207, 47.555771], [-122.247186, 47.555732], [-122.247168, 47.555691], [-122.247156, 47.55566], [-122.247135, 47.555606], [-122.247131, 47.555578], [-122.24712, 47.555511], [-122.247115, 47.555468], [-122.247088, 47.555417], [-122.247073, 47.555379], [-122.247068, 47.555348], [-122.247065, 47.555321], [-122.247069, 47.555259], [-122.247072, 47.555154], [-122.247074, 47.555087], [-122.247074, 47.555009], [-122.247069, 47.554979], [-122.247051, 47.554924], [-122.247026, 47.554884], [-122.247013, 47.554855], [-122.246993, 47.554809], [-122.246974, 47.554759], [-122.246971, 47.554724], [-122.246952, 47.554679], [-122.246939, 47.554651], [-122.246924, 47.554613], [-122.24691, 47.55459], [-122.246865, 47.554503], [-122.246841, 47.554466], [-122.24682, 47.554444], [-122.246792, 47.554409], [-122.246768, 47.554389], [-122.246747, 47.554367], [-122.24673, 47.554314], [-122.24672, 47.554273], [-122.246711, 47.554247], [-122.246696, 47.554223], [-122.246617, 47.554123], [-122.246572, 47.554062], [-122.246531, 47.553999], [-122.246473, 47.55391], [-122.246454, 47.553877], [-122.246433, 47.553841], [-122.246418, 47.553811], [-122.24641, 47.55378], [-122.246402, 47.553739], [-122.246399, 47.553696], [-122.2464, 47.553649], [-122.246414, 47.553616], [-122.246433, 47.553548], [-122.24644, 47.553519], [-122.246462, 47.553379], [-122.246465, 47.55334], [-122.246473, 47.553288], [-122.246486, 47.553207], [-122.246514, 47.553071], [-122.246517, 47.553043], [-122.24652, 47.552999], [-122.246529, 47.55295], [-122.246537, 47.552883], [-122.24655, 47.552846], [-122.246557, 47.552799], [-122.246577, 47.552744], [-122.246594, 47.552659], [-122.246602, 47.552625], [-122.24663, 47.552583], [-122.246658, 47.552523], [-122.246665, 47.552498], [-122.246673, 47.552462], [-122.246705, 47.552389], [-122.246752, 47.552325], [-122.246766, 47.552295], [-122.246793, 47.55225], [-122.246806, 47.55222], [-122.24683, 47.552176], [-122.246849, 47.55215], [-122.24689, 47.552106], [-122.246913, 47.55206], [-122.246927, 47.552024], [-122.246957, 47.55199], [-122.247032, 47.551941], [-122.247065, 47.551915], [-122.247124, 47.551853], [-122.247225, 47.551763], [-122.247308, 47.551674], [-122.247399, 47.551589], [-122.247433, 47.551552], [-122.247506, 47.551482], [-122.247555, 47.551445], [-122.247589, 47.551414], [-122.247669, 47.551321], [-122.247741, 47.551241], [-122.247813, 47.551179], [-122.24786, 47.551144], [-122.247907, 47.551101], [-122.247945, 47.551063], [-122.248047, 47.550983], [-122.248073, 47.550955], [-122.248128, 47.550904], [-122.248201, 47.550836], [-122.248249, 47.550793], [-122.248266, 47.550769], [-122.248287, 47.550733], [-122.24831, 47.550703], [-122.248342, 47.550671], [-122.248391, 47.550617], [-122.248458, 47.550547], [-122.248495, 47.550512], [-122.248549, 47.550453], [-122.248619, 47.550389], [-122.248656, 47.550351], [-122.248687, 47.550321], [-122.24875, 47.550252], [-122.248773, 47.550225], [-122.248797, 47.550196], [-122.248838, 47.550164], [-122.248886, 47.550132], [-122.248941, 47.550083], [-122.248968, 47.550063], [-122.249013, 47.550029], [-122.249055, 47.549988], [-122.249101, 47.549936], [-122.249156, 47.549878], [-122.2492, 47.549835], [-122.249264, 47.549785], [-122.249298, 47.54976], [-122.249344, 47.549731], [-122.249424, 47.549677], [-122.249456, 47.549658], [-122.249515, 47.549624], [-122.249551, 47.549607], [-122.249654, 47.549562], [-122.249688, 47.549548], [-122.249734, 47.549529], [-122.249852, 47.549473], [-122.249935, 47.549427], [-122.249974, 47.549409], [-122.250006, 47.549395], [-122.250054, 47.54938], [-122.250109, 47.549362], [-122.250159, 47.549343], [-122.250254, 47.549313], [-122.250323, 47.549288], [-122.250419, 47.549256], [-122.250468, 47.54925], [-122.250509, 47.549245], [-122.250591, 47.549238], [-122.25063, 47.549226], [-122.250691, 47.549209], [-122.250773, 47.549176], [-122.250805, 47.549161], [-122.25086, 47.549145], [-122.250985, 47.549116], [-122.251066, 47.549093], [-122.251111, 47.549082], [-122.251194, 47.549069], [-122.251273, 47.549051], [-122.251402, 47.549031], [-122.251483, 47.549025], [-122.251543, 47.549016], [-122.251596, 47.549012], [-122.251687, 47.549002], [-122.251756, 47.548992], [-122.251831, 47.548975], [-122.25189, 47.548954], [-122.251937, 47.548932], [-122.251968, 47.548916], [-122.252003, 47.548891], [-122.252029, 47.548874], [-122.252094, 47.548845], [-122.25213, 47.548831], [-122.252236, 47.548813], [-122.252273, 47.548811], [-122.25231, 47.548813], [-122.252353, 47.548819], [-122.25242, 47.548832], [-122.25249, 47.548839], [-122.252559, 47.548851], [-122.25264, 47.548862], [-122.252685, 47.548866], [-122.252754, 47.548868], [-122.252887, 47.548864], [-122.252977, 47.548867], [-122.253067, 47.54887], [-122.253168, 47.548879], [-122.253293, 47.548894], [-122.253411, 47.548902], [-122.253486, 47.548911], [-122.253526, 47.548912], [-122.253605, 47.548915], [-122.253688, 47.548915], [-122.253809, 47.548909], [-122.253943, 47.548901], [-122.254066, 47.548887], [-122.2542, 47.548882], [-122.254414, 47.548871], [-122.254625, 47.548863], [-122.254835, 47.548864], [-122.254936, 47.54886], [-122.255145, 47.54885], [-122.255254, 47.548839], [-122.255371, 47.548834], [-122.255462, 47.548833], [-122.255577, 47.548827], [-122.255784, 47.548817], [-122.255882, 47.548822], [-122.255918, 47.548827], [-122.256027, 47.548828], [-122.256096, 47.548821], [-122.256174, 47.548809], [-122.256253, 47.548796], [-122.256288, 47.548791], [-122.256334, 47.548787], [-122.256428, 47.548769], [-122.256519, 47.548754], [-122.256586, 47.548749], [-122.256652, 47.548741], [-122.256693, 47.548742], [-122.256759, 47.548704], [-122.256814, 47.548667], [-122.256901, 47.548625], [-122.256957, 47.548613], [-122.257023, 47.548594], [-122.257057, 47.54858], [-122.257143, 47.548548], [-122.257227, 47.548512], [-122.257289, 47.548485], [-122.257344, 47.548459], [-122.25741, 47.548395], [-122.257422, 47.548367], [-122.257436, 47.548307], [-122.257453, 47.54824], [-122.25747, 47.548197], [-122.257494, 47.548115], [-122.257514, 47.548062], [-122.25753, 47.548018], [-122.257546, 47.547953], [-122.257557, 47.547924], [-122.257568, 47.547892], [-122.257583, 47.547855], [-122.257609, 47.54781], [-122.25763, 47.54777], [-122.257653, 47.547745], [-122.257678, 47.547725], [-122.257697, 47.547703], [-122.257741, 47.547657], [-122.257741, 47.547629], [-122.257727, 47.547602], [-122.257745, 47.547578], [-122.257771, 47.547553], [-122.257834, 47.547508], [-122.257865, 47.547481], [-122.257921, 47.54744], [-122.257953, 47.547413], [-122.257968, 47.547379], [-122.257968, 47.547295], [-122.257958, 47.547234], [-122.257964, 47.547176], [-122.257978, 47.547144], [-122.257996, 47.54707], [-122.258011, 47.547029], [-122.258026, 47.546976], [-122.258031, 47.546935], [-122.258025, 47.546896], [-122.258008, 47.546838], [-122.25801, 47.546783], [-122.257995, 47.54675], [-122.257972, 47.546713], [-122.257953, 47.546686], [-122.257956, 47.546657], [-122.25796, 47.546611], [-122.257962, 47.546576], [-122.257957, 47.54654], [-122.257941, 47.5465], [-122.257909, 47.546474], [-122.257891, 47.54645], [-122.257879, 47.546417], [-122.257872, 47.54639], [-122.257854, 47.546357], [-122.257839, 47.546329], [-122.257819, 47.546285], [-122.257805, 47.546248], [-122.257792, 47.546213], [-122.257749, 47.546177], [-122.257712, 47.546177], [-122.257678, 47.546159], [-122.257654, 47.546136], [-122.257623, 47.546096], [-122.257607, 47.546027], [-122.257587, 47.545988], [-122.257569, 47.545966], [-122.257545, 47.545929], [-122.257532, 47.545891], [-122.257513, 47.545862], [-122.257488, 47.545828], [-122.257454, 47.545811], [-122.257403, 47.545807], [-122.257396, 47.545782], [-122.257436, 47.545769], [-122.257441, 47.545743], [-122.257422, 47.545715], [-122.257406, 47.545692], [-122.257394, 47.545668], [-122.257387, 47.545634], [-122.257364, 47.545582], [-122.257335, 47.54555], [-122.257311, 47.54553], [-122.257298, 47.545504], [-122.257332, 47.545468], [-122.2574, 47.545466], [-122.257445, 47.545448], [-122.257457, 47.545423], [-122.257442, 47.545394], [-122.257413, 47.545366], [-122.257384, 47.545348], [-122.257337, 47.545335], [-122.257283, 47.545329], [-122.25726, 47.545307], [-122.257238, 47.545286], [-122.257217, 47.54523], [-122.25723, 47.545187], [-122.257265, 47.545153], [-122.257287, 47.545133], [-122.257307, 47.545107], [-122.257344, 47.545064], [-122.257365, 47.545044], [-122.257397, 47.545027], [-122.257436, 47.544995], [-122.257494, 47.544944], [-122.257523, 47.544918], [-122.257544, 47.544894], [-122.257563, 47.544873], [-122.257572, 47.544837], [-122.25758, 47.544808], [-122.257587, 47.544766], [-122.257598, 47.54473], [-122.257614, 47.544699], [-122.257623, 47.544673], [-122.257623, 47.544639], [-122.257621, 47.544602], [-122.257626, 47.544571], [-122.257633, 47.544541], [-122.257647, 47.544492], [-122.257677, 47.544456], [-122.257704, 47.544426], [-122.25774, 47.544399], [-122.257793, 47.544385], [-122.257802, 47.544356], [-122.257752, 47.544353], [-122.257705, 47.544344], [-122.257709, 47.544316], [-122.257732, 47.54428], [-122.257758, 47.54425], [-122.257778, 47.544211], [-122.257799, 47.544181], [-122.257824, 47.544156], [-122.257842, 47.544131], [-122.257866, 47.544093], [-122.257883, 47.544068], [-122.25792, 47.544034], [-122.257957, 47.544039], [-122.257979, 47.544065], [-122.258015, 47.544071], [-122.258036, 47.544039], [-122.258046, 47.544012], [-122.258065, 47.543991], [-122.258108, 47.543965], [-122.258104, 47.54394], [-122.258064, 47.543919], [-122.258073, 47.543888], [-122.258083, 47.543854], [-122.258092, 47.543809], [-122.258094, 47.543773], [-122.258102, 47.543735], [-122.258154, 47.543733], [-122.258183, 47.543714], [-122.258211, 47.543678], [-122.258221, 47.543651], [-122.258224, 47.543615], [-122.258222, 47.543576], [-122.258242, 47.543547], [-122.258287, 47.543514], [-122.258327, 47.543489], [-122.258349, 47.543461], [-122.25844, 47.543347], [-122.258464, 47.543324], [-122.258492, 47.543281], [-122.258528, 47.543241], [-122.258558, 47.543223], [-122.258605, 47.543222], [-122.258635, 47.543205], [-122.258655, 47.543184], [-122.258686, 47.543134], [-122.258711, 47.54308], [-122.258696, 47.543051], [-122.258715, 47.543002], [-122.258736, 47.542968], [-122.258771, 47.542933], [-122.258882, 47.542811], [-122.258905, 47.54279], [-122.258937, 47.542743], [-122.258962, 47.542723], [-122.258986, 47.542703], [-122.259015, 47.542668], [-122.259065, 47.542634], [-122.259082, 47.542611], [-122.25913, 47.542553], [-122.259147, 47.542522], [-122.259165, 47.542477], [-122.25917, 47.542439], [-122.259179, 47.542412], [-122.259186, 47.54238], [-122.259204, 47.542324], [-122.259288, 47.542254], [-122.259343, 47.542219], [-122.259366, 47.542196], [-122.259381, 47.54217], [-122.259404, 47.54215], [-122.259442, 47.542116], [-122.259491, 47.542095], [-122.25956, 47.542039], [-122.259598, 47.541984], [-122.259627, 47.541964], [-122.259678, 47.541919], [-122.259711, 47.541892], [-122.259767, 47.541852], [-122.259814, 47.54181], [-122.259844, 47.541792], [-122.259875, 47.541758], [-122.259903, 47.541737], [-122.259937, 47.541709], [-122.25997, 47.541679], [-122.260002, 47.541659], [-122.260025, 47.541638], [-122.260108, 47.541593], [-122.260168, 47.541575], [-122.26023, 47.541561], [-122.26026, 47.541545], [-122.260304, 47.541517], [-122.260341, 47.541485], [-122.260386, 47.541458], [-122.26041, 47.541435], [-122.260435, 47.541417], [-122.260454, 47.541389], [-122.260506, 47.541367], [-122.260542, 47.541345], [-122.260578, 47.541333], [-122.260611, 47.541305], [-122.260641, 47.541285], [-122.260675, 47.541256], [-122.260747, 47.541207], [-122.260809, 47.54118], [-122.260844, 47.54116], [-122.260904, 47.541135], [-122.260931, 47.541118], [-122.260967, 47.541035], [-122.261037, 47.540974], [-122.26107, 47.540959], [-122.261102, 47.540945], [-122.261161, 47.540932], [-122.261186, 47.540909], [-122.261201, 47.540876], [-122.261218, 47.540841], [-122.261243, 47.540818], [-122.26133, 47.540764], [-122.261355, 47.540746], [-122.26139, 47.540712], [-122.261443, 47.540679], [-122.261514, 47.54062], [-122.261549, 47.540606], [-122.261663, 47.540569], [-122.261694, 47.540534], [-122.2617, 47.540501], [-122.261701, 47.540445], [-122.261722, 47.54042], [-122.261778, 47.540343], [-122.261805, 47.540314], [-122.261847, 47.540274], [-122.261886, 47.540233], [-122.26191, 47.540205], [-122.261953, 47.540163], [-122.261982, 47.540124], [-122.261994, 47.540098], [-122.262015, 47.540064], [-122.262053, 47.540022], [-122.262076, 47.539983], [-122.262092, 47.539945], [-122.262088, 47.539917], [-122.262065, 47.539893], [-122.262032, 47.539867], [-122.261995, 47.539833], [-122.261981, 47.53981], [-122.261971, 47.539768], [-122.261969, 47.539715], [-122.261967, 47.539605], [-122.261958, 47.539577], [-122.2619, 47.539423], [-122.261898, 47.539335], [-122.261904, 47.539311], [-122.261915, 47.539268], [-122.261915, 47.539232], [-122.26192, 47.539164], [-122.26192, 47.53911], [-122.261925, 47.539069], [-122.261923, 47.539027], [-122.261906, 47.538995], [-122.261888, 47.538954], [-122.261877, 47.538931], [-122.261855, 47.538904], [-122.261808, 47.538904], [-122.261769, 47.538898], [-122.261719, 47.538855], [-122.261743, 47.538825], [-122.261775, 47.53881], [-122.261815, 47.538782], [-122.261818, 47.538756], [-122.261824, 47.538718], [-122.261826, 47.538683], [-122.261842, 47.538618], [-122.261831, 47.538575], [-122.261828, 47.538549], [-122.261836, 47.538516], [-122.261848, 47.538455], [-122.26185, 47.538395], [-122.261843, 47.538367], [-122.261847, 47.538339], [-122.261837, 47.538303], [-122.261826, 47.538257], [-122.261845, 47.538229], [-122.261856, 47.538198], [-122.26187, 47.53817], [-122.261893, 47.538075], [-122.26188, 47.538045], [-122.261881, 47.537978], [-122.261911, 47.53786], [-122.261917, 47.537814], [-122.261932, 47.537774], [-122.261946, 47.537704], [-122.26196, 47.537659], [-122.261974, 47.53762], [-122.261995, 47.537591], [-122.262044, 47.537534], [-122.262067, 47.537506], [-122.262082, 47.537467], [-122.262104, 47.537431], [-122.262124, 47.537395], [-122.262172, 47.537302], [-122.262189, 47.537222], [-122.262208, 47.537188], [-122.262237, 47.537156], [-122.262265, 47.537119], [-122.262284, 47.537097], [-122.262312, 47.53705], [-122.262334, 47.537025], [-122.262358, 47.536996], [-122.262391, 47.536935], [-122.262405, 47.536902], [-122.262435, 47.536865], [-122.262475, 47.536812], [-122.262499, 47.536792], [-122.26252, 47.536769], [-122.262544, 47.536733], [-122.262557, 47.536706], [-122.262574, 47.536685], [-122.26259, 47.536662], [-122.262606, 47.536636], [-122.262628, 47.536593], [-122.262629, 47.536568], [-122.262644, 47.536537], [-122.262673, 47.536494], [-122.262711, 47.536462], [-122.262742, 47.536432], [-122.262771, 47.536391], [-122.262798, 47.536373], [-122.262815, 47.536347], [-122.26284, 47.536321], [-122.262915, 47.536258], [-122.262943, 47.536233], [-122.262971, 47.536208], [-122.262989, 47.536183], [-122.263019, 47.53612], [-122.263025, 47.536096], [-122.263045, 47.536067], [-122.263067, 47.536036], [-122.263099, 47.536003], [-122.263128, 47.535977], [-122.263154, 47.535946], [-122.263177, 47.535911], [-122.2632, 47.535892], [-122.263222, 47.535866], [-122.263247, 47.535848], [-122.263267, 47.535827], [-122.263289, 47.535798], [-122.263314, 47.535771], [-122.263345, 47.535726], [-122.263356, 47.535697], [-122.263367, 47.535673], [-122.263395, 47.535653], [-122.263422, 47.535632], [-122.263448, 47.535597], [-122.263477, 47.535571], [-122.263494, 47.535549], [-122.263502, 47.53552], [-122.263523, 47.535498], [-122.263485, 47.535483], [-122.26351, 47.535447], [-122.26354, 47.535412], [-122.263554, 47.53539], [-122.263573, 47.535359], [-122.263599, 47.535316], [-122.263629, 47.535275], [-122.263647, 47.535251], [-122.263662, 47.53521], [-122.263683, 47.535189], [-122.263695, 47.535166], [-122.26373, 47.535117], [-122.263759, 47.535065], [-122.263779, 47.535032], [-122.263803, 47.535007], [-122.263824, 47.534986], [-122.263829, 47.534958], [-122.263841, 47.534916], [-122.263863, 47.534869], [-122.263885, 47.534825], [-122.263903, 47.534788], [-122.263923, 47.534759], [-122.263958, 47.534706], [-122.263976, 47.534624], [-122.263991, 47.534598], [-122.264003, 47.534571], [-122.26402, 47.534534], [-122.264027, 47.534499], [-122.264032, 47.534473], [-122.264046, 47.534445], [-122.26406, 47.534368], [-122.264059, 47.534306], [-122.264084, 47.534283], [-122.264087, 47.534259], [-122.264103, 47.534226], [-122.264105, 47.534176], [-122.264104, 47.534063], [-122.264109, 47.534022], [-122.264114, 47.533978], [-122.264118, 47.533935], [-122.264126, 47.533868], [-122.264127, 47.533821], [-122.264126, 47.533681], [-122.264115, 47.533604], [-122.264012, 47.533603], [-122.26401, 47.533574], [-122.264025, 47.53354], [-122.264033, 47.533511], [-122.264045, 47.533463], [-122.264048, 47.533438], [-122.264045, 47.533398], [-122.264032, 47.533356], [-122.264018, 47.533325], [-122.264007, 47.533297], [-122.263987, 47.533253], [-122.263967, 47.533228], [-122.263945, 47.533205], [-122.263899, 47.533175], [-122.263858, 47.533152], [-122.263812, 47.533107], [-122.26377, 47.533068], [-122.263746, 47.533041], [-122.263712, 47.53299], [-122.263689, 47.532962], [-122.263666, 47.532933], [-122.263632, 47.532897], [-122.263617, 47.53287], [-122.263601, 47.532842], [-122.263594, 47.532808], [-122.263585, 47.532783], [-122.263568, 47.532754], [-122.263556, 47.532674], [-122.263523, 47.532663], [-122.263486, 47.532638], [-122.263459, 47.532619], [-122.263434, 47.532585], [-122.263417, 47.532559], [-122.263399, 47.532518], [-122.263381, 47.532498], [-122.26334, 47.532468], [-122.263325, 47.532435], [-122.26331, 47.532398], [-122.263297, 47.532369], [-122.263286, 47.532346], [-122.263269, 47.532316], [-122.263247, 47.532288], [-122.263226, 47.532259], [-122.263205, 47.532221], [-122.263192, 47.532177], [-122.263173, 47.532141], [-122.263159, 47.532104], [-122.263152, 47.532056], [-122.263147, 47.532014], [-122.26314, 47.531965], [-122.263134, 47.531936], [-122.263131, 47.531874], [-122.263126, 47.531845], [-122.263124, 47.531819], [-122.263119, 47.53177], [-122.263117, 47.531739], [-122.263116, 47.531691], [-122.263113, 47.5316], [-122.263562, 47.531599], [-122.265816, 47.531587], [-122.2664, 47.531588], [-122.266478, 47.531915], [-122.266503, 47.532042], [-122.266994, 47.534113], [-122.267174, 47.534824], [-122.267259, 47.535397], [-122.267263, 47.537211], [-122.26719, 47.538716], [-122.267185, 47.538747], [-122.267181, 47.538773], [-122.267176, 47.5388], [-122.267172, 47.538827], [-122.267167, 47.538854], [-122.267162, 47.53888], [-122.267157, 47.538907], [-122.267152, 47.538934], [-122.267147, 47.53896], [-122.267141, 47.538987], [-122.267136, 47.539014], [-122.26713, 47.53904], [-122.267124, 47.539067], [-122.267118, 47.539094], [-122.267112, 47.53912], [-122.267105, 47.539147], [-122.267099, 47.539173], [-122.267092, 47.5392], [-122.267085, 47.539226], [-122.267079, 47.539253], [-122.267072, 47.539279], [-122.267064, 47.539306], [-122.267057, 47.539332], [-122.26705, 47.539359], [-122.267042, 47.539385], [-122.267034, 47.539411], [-122.267026, 47.539438], [-122.267018, 47.539464], [-122.26701, 47.53949], [-122.267001, 47.539517], [-122.266992, 47.539543], [-122.266984, 47.539569], [-122.266975, 47.539596], [-122.266966, 47.539622], [-122.266957, 47.539648], [-122.266948, 47.539674], [-122.266939, 47.5397], [-122.266929, 47.539726], [-122.266919, 47.539752], [-122.266909, 47.539779], [-122.266899, 47.539805], [-122.269098, 47.539808], [-122.269933, 47.539814], [-122.269931, 47.540138], [-122.269917, 47.542139], [-122.269884, 47.545069], [-122.269888, 47.546062], [-122.272633, 47.546042]]]]
    },
    "properties": {
      "neighbourhood": "Seward Park",
      "neighbourhood_group": "Seward Park"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.279986, 47.692936], [-122.279188, 47.692253], [-122.278878, 47.691829], [-122.278864, 47.691803], [-122.278849, 47.691777], [-122.278829, 47.691753], [-122.278808, 47.691729], [-122.278783, 47.691706], [-122.278756, 47.691685], [-122.278727, 47.691665], [-122.278672, 47.691635], [-122.278638, 47.69162], [-122.278602, 47.691606], [-122.278569, 47.691596], [-122.278531, 47.691586], [-122.278492, 47.691578], [-122.278422, 47.691569], [-122.278381, 47.691566], [-122.278345, 47.691566], [-122.278304, 47.691567], [-122.278263, 47.691571], [-122.278228, 47.691575], [-122.278188, 47.691583], [-122.278149, 47.691592], [-122.278112, 47.691603], [-122.278075, 47.691617], [-122.278045, 47.691629], [-122.277722, 47.691798], [-122.277263, 47.692039], [-122.276867, 47.69222], [-122.276829, 47.692231], [-122.276791, 47.692241], [-122.276752, 47.69225], [-122.276718, 47.692258], [-122.276679, 47.692266], [-122.276644, 47.692272], [-122.276605, 47.69228], [-122.276565, 47.692286], [-122.27653, 47.692291], [-122.276454, 47.6923], [-122.276419, 47.692303], [-122.276378, 47.692307], [-122.276337, 47.692309], [-122.276301, 47.692311], [-122.27626, 47.692312], [-122.276189, 47.692313], [-122.276148, 47.692313], [-122.276112, 47.692312], [-122.276071, 47.69231], [-122.27603, 47.692308], [-122.275989, 47.692305], [-122.275948, 47.692301], [-122.275913, 47.692297], [-122.275872, 47.692292], [-122.275832, 47.692287], [-122.275797, 47.692281], [-122.275758, 47.692274], [-122.275718, 47.692267], [-122.275684, 47.69226], [-122.275644, 47.692251], [-122.275578, 47.692235], [-122.275545, 47.692226], [-122.275512, 47.692216], [-122.275475, 47.692205], [-122.275441, 47.692194], [-122.275356, 47.692138], [-122.275041, 47.692222], [-122.274459, 47.692376], [-122.273836, 47.692434], [-122.273795, 47.692437], [-122.273755, 47.692441], [-122.27372, 47.692447], [-122.27368, 47.692455], [-122.273642, 47.692465], [-122.27361, 47.692476], [-122.273544, 47.692502], [-122.273511, 47.692519], [-122.273455, 47.692554], [-122.273427, 47.692575], [-122.273403, 47.692597], [-122.273381, 47.692621], [-122.273357, 47.692643], [-122.27333, 47.692665], [-122.273306, 47.692682], [-122.273276, 47.692702], [-122.273216, 47.692734], [-122.273182, 47.69275], [-122.273152, 47.692762], [-122.273115, 47.692775], [-122.273077, 47.692786], [-122.273005, 47.692803], [-122.272965, 47.692809], [-122.272924, 47.692814], [-122.272883, 47.692818], [-122.272842, 47.692819], [-122.272373, 47.692736], [-122.272349, 47.692718], [-122.272318, 47.6927], [-122.272288, 47.692687], [-122.272251, 47.692674], [-122.272212, 47.692666], [-122.272177, 47.692662], [-122.272136, 47.69266], [-122.2721, 47.692662], [-122.27206, 47.692668], [-122.272021, 47.692677], [-122.271985, 47.69269], [-122.271929, 47.69272], [-122.271902, 47.692741], [-122.271889, 47.692766], [-122.271871, 47.692813], [-122.271205, 47.692616], [-122.270648, 47.692354], [-122.270243, 47.692125], [-122.269773, 47.691814], [-122.269231, 47.691455], [-122.268816, 47.691215], [-122.268444, 47.690908], [-122.268279, 47.690707], [-122.268067, 47.690428], [-122.268003, 47.690338], [-122.267524, 47.690343], [-122.267037, 47.689832], [-122.267014, 47.689806], [-122.266991, 47.68978], [-122.266968, 47.689755], [-122.266945, 47.689729], [-122.266922, 47.689703], [-122.2669, 47.689678], [-122.266877, 47.689652], [-122.266855, 47.689626], [-122.266832, 47.6896], [-122.26681, 47.689574], [-122.266788, 47.689548], [-122.266766, 47.689522], [-122.266744, 47.689496], [-122.266722, 47.68947], [-122.2667, 47.689444], [-122.266679, 47.689417], [-122.266658, 47.689391], [-122.266636, 47.689365], [-122.266615, 47.689338], [-122.266594, 47.689312], [-122.266573, 47.689286], [-122.266553, 47.689259], [-122.266532, 47.689233], [-122.266512, 47.689206], [-122.266491, 47.689179], [-122.26647, 47.689153], [-122.26645, 47.689126], [-122.26643, 47.689099], [-122.26641, 47.689072], [-122.26639, 47.689046], [-122.266371, 47.689019], [-122.266351, 47.688992], [-122.266332, 47.688965], [-122.266313, 47.688938], [-122.266293, 47.688911], [-122.266274, 47.688884], [-122.266255, 47.688857], [-122.266237, 47.688829], [-122.266218, 47.688802], [-122.266199, 47.688775], [-122.266181, 47.688748], [-122.266163, 47.68872], [-122.266144, 47.688693], [-122.266126, 47.688666], [-122.266108, 47.688638], [-122.266091, 47.688611], [-122.266073, 47.688583], [-122.266055, 47.688556], [-122.266037, 47.688528], [-122.26602, 47.688501], [-122.266003, 47.688473], [-122.265986, 47.688445], [-122.265969, 47.688418], [-122.265952, 47.68839], [-122.265935, 47.688362], [-122.265919, 47.688334], [-122.265902, 47.688307], [-122.265886, 47.688279], [-122.26587, 47.688251], [-122.265854, 47.688223], [-122.265838, 47.688195], [-122.265822, 47.688167], [-122.265806, 47.688139], [-122.265791, 47.688111], [-122.265775, 47.688083], [-122.26576, 47.688054], [-122.265745, 47.688026], [-122.26573, 47.687998], [-122.265715, 47.68797], [-122.2657, 47.687942], [-122.265686, 47.687913], [-122.265671, 47.687885], [-122.265657, 47.687857], [-122.265642, 47.687828], [-122.265628, 47.6878], [-122.265614, 47.687771], [-122.2656, 47.687743], [-122.265586, 47.687714], [-122.265573, 47.687686], [-122.265559, 47.687657], [-122.265546, 47.687629], [-122.265533, 47.6876], [-122.26552, 47.687571], [-122.265507, 47.687543], [-122.265494, 47.687514], [-122.265481, 47.687485], [-122.265468, 47.687457], [-122.265456, 47.687428], [-122.265443, 47.687399], [-122.265431, 47.68737], [-122.265419, 47.687341], [-122.265408, 47.687312], [-122.265396, 47.687283], [-122.265384, 47.687255], [-122.265373, 47.687226], [-122.265361, 47.687197], [-122.26535, 47.687168], [-122.265339, 47.687139], [-122.265328, 47.68711], [-122.265317, 47.68708], [-122.265306, 47.687051], [-122.265295, 47.687022], [-122.265285, 47.686993], [-122.265275, 47.686964], [-122.265264, 47.686935], [-122.265254, 47.686906], [-122.265244, 47.686876], [-122.265234, 47.686847], [-122.265225, 47.686818], [-122.265215, 47.686789], [-122.265206, 47.686759], [-122.265197, 47.68673], [-122.265188, 47.686701], [-122.265178, 47.686671], [-122.26517, 47.686642], [-122.265161, 47.686613], [-122.265152, 47.686583], [-122.265143, 47.686554], [-122.265136, 47.686524], [-122.265127, 47.686495], [-122.265119, 47.686465], [-122.265111, 47.686436], [-122.265103, 47.686406], [-122.265095, 47.686377], [-122.265088, 47.686347], [-122.265081, 47.686318], [-122.265073, 47.686288], [-122.265066, 47.686258], [-122.265059, 47.686229], [-122.264632, 47.685115], [-122.264252, 47.684432], [-122.264226, 47.684408], [-122.2642, 47.684384], [-122.264174, 47.684359], [-122.264149, 47.684334], [-122.264125, 47.684309], [-122.264102, 47.684283], [-122.264079, 47.684257], [-122.264057, 47.684231], [-122.264036, 47.684205], [-122.264015, 47.684179], [-122.263995, 47.684152], [-122.263976, 47.684125], [-122.263957, 47.684098], [-122.26394, 47.68407], [-122.263922, 47.684043], [-122.263906, 47.684015], [-122.26389, 47.683987], [-122.263875, 47.683958], [-122.263861, 47.68393], [-122.263847, 47.683902], [-122.263834, 47.683873], [-122.263822, 47.683844], [-122.263811, 47.683815], [-122.2638, 47.683786], [-122.26379, 47.683757], [-122.263781, 47.683727], [-122.263773, 47.683698], [-122.263765, 47.683668], [-122.263759, 47.683639], [-122.263752, 47.683609], [-122.263747, 47.683579], [-122.263743, 47.683549], [-122.263739, 47.68352], [-122.263736, 47.68349], [-122.263734, 47.68346], [-122.263732, 47.68343], [-122.263732, 47.6834], [-122.263732, 47.68337], [-122.263733, 47.68334], [-122.263734, 47.68331], [-122.263737, 47.68328], [-122.26374, 47.68325], [-122.263653, 47.681785], [-122.263627, 47.679137], [-122.263555, 47.675723], [-122.263828, 47.675722], [-122.265239, 47.675727], [-122.265627, 47.675726], [-122.266974, 47.675739], [-122.267589, 47.675741], [-122.268611, 47.675748], [-122.269324, 47.675745], [-122.270411, 47.675758], [-122.271537, 47.675757], [-122.272331, 47.675758], [-122.273903, 47.675446], [-122.274181, 47.675383], [-122.274213, 47.67537], [-122.274243, 47.675355], [-122.27427, 47.675338], [-122.274295, 47.67532], [-122.274317, 47.6753], [-122.274337, 47.675279], [-122.274355, 47.675257], [-122.274369, 47.675234], [-122.27438, 47.67521], [-122.274388, 47.675186], [-122.274417, 47.675047], [-122.274432, 47.675024], [-122.27445, 47.675002], [-122.27447, 47.674982], [-122.274493, 47.674962], [-122.274517, 47.674944], [-122.274545, 47.674927], [-122.274574, 47.674912], [-122.274605, 47.674899], [-122.274638, 47.674888], [-122.274672, 47.674878], [-122.274708, 47.674871], [-122.274748, 47.674865], [-122.274921, 47.674866], [-122.275167, 47.674872], [-122.275304, 47.674899], [-122.275339, 47.674907], [-122.275374, 47.674916], [-122.275408, 47.674926], [-122.275436, 47.674943], [-122.275462, 47.674961], [-122.275486, 47.67498], [-122.275507, 47.675001], [-122.275525, 47.675023], [-122.275541, 47.675046], [-122.275554, 47.675069], [-122.275563, 47.675093], [-122.27557, 47.675118], [-122.275574, 47.675143], [-122.275574, 47.675168], [-122.275572, 47.675193], [-122.275566, 47.675218], [-122.275557, 47.675242], [-122.27555, 47.67527], [-122.275547, 47.675295], [-122.275545, 47.67532], [-122.275547, 47.675345], [-122.275551, 47.67537], [-122.275558, 47.675395], [-122.275567, 47.675419], [-122.275578, 47.675443], [-122.275593, 47.675466], [-122.275608, 47.675489], [-122.275627, 47.675511], [-122.275648, 47.675532], [-122.275862, 47.67578], [-122.277234, 47.675779], [-122.277362, 47.675782], [-122.279539, 47.675784], [-122.279945, 47.675785], [-122.28333, 47.675811], [-122.284879, 47.675774], [-122.284918, 47.676245], [-122.284968, 47.678024], [-122.284987, 47.679629], [-122.285078, 47.681948], [-122.285162, 47.683043], [-122.283772, 47.68304], [-122.281564, 47.683036], [-122.279771, 47.683037], [-122.279867, 47.686471], [-122.279921, 47.68841], [-122.279953, 47.690117], [-122.279959, 47.690431], [-122.279986, 47.692936]]]]
    },
    "properties": {
      "neighbourhood": "View Ridge",
      "neighbourhood_group": "Other neighborhoods"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.280648, 47.531536], [-122.279186, 47.531541], [-122.277004, 47.531547], [-122.274822, 47.531553], [-122.272585, 47.531576], [-122.270339, 47.531578], [-122.26807, 47.531591], [-122.2664, 47.531588], [-122.265816, 47.531587], [-122.263562, 47.531599], [-122.263113, 47.5316], [-122.263111, 47.531574], [-122.263108, 47.531541], [-122.263105, 47.531479], [-122.263092, 47.53144], [-122.263088, 47.531398], [-122.26308, 47.531345], [-122.263079, 47.531305], [-122.263069, 47.531268], [-122.263071, 47.531197], [-122.263073, 47.531164], [-122.263071, 47.531123], [-122.262978, 47.531118], [-122.262977, 47.531092], [-122.262978, 47.530935], [-122.263019, 47.530922], [-122.263054, 47.530901], [-122.263057, 47.530849], [-122.263064, 47.530816], [-122.263067, 47.530781], [-122.263065, 47.530651], [-122.263065, 47.530577], [-122.26307, 47.530542], [-122.263091, 47.530491], [-122.263104, 47.530456], [-122.263112, 47.530426], [-122.26312, 47.530371], [-122.263138, 47.530291], [-122.263147, 47.530256], [-122.263153, 47.53023], [-122.263162, 47.530184], [-122.263168, 47.530154], [-122.26318, 47.530122], [-122.263188, 47.530082], [-122.263201, 47.530013], [-122.263206, 47.529974], [-122.263206, 47.5299], [-122.263203, 47.529845], [-122.2632, 47.529808], [-122.263191, 47.529781], [-122.263178, 47.52975], [-122.263162, 47.529725], [-122.263138, 47.529685], [-122.263102, 47.529649], [-122.263071, 47.529617], [-122.263038, 47.529588], [-122.263011, 47.529554], [-122.26299, 47.529534], [-122.262974, 47.529504], [-122.262928, 47.529469], [-122.262894, 47.529447], [-122.262869, 47.529419], [-122.262841, 47.529391], [-122.262819, 47.529364], [-122.262823, 47.529335], [-122.262815, 47.529297], [-122.262789, 47.529271], [-122.262751, 47.529227], [-122.262734, 47.529202], [-122.262731, 47.529167], [-122.262716, 47.529139], [-122.262683, 47.529108], [-122.262645, 47.529071], [-122.262618, 47.529052], [-122.262568, 47.529043], [-122.262567, 47.529082], [-122.262567, 47.529121], [-122.26256, 47.529145], [-122.262555, 47.529178], [-122.262547, 47.529203], [-122.262543, 47.529235], [-122.262528, 47.529286], [-122.2625, 47.529305], [-122.262431, 47.529309], [-122.262335, 47.529304], [-122.262286, 47.529276], [-122.262238, 47.529262], [-122.262191, 47.529254], [-122.262146, 47.52924], [-122.262104, 47.529241], [-122.262045, 47.529246], [-122.261979, 47.529262], [-122.261904, 47.529265], [-122.261873, 47.529277], [-122.26184, 47.52929], [-122.261763, 47.529286], [-122.261726, 47.529274], [-122.261679, 47.529253], [-122.261657, 47.529229], [-122.261632, 47.529196], [-122.261614, 47.529164], [-122.261585, 47.529147], [-122.26156, 47.529125], [-122.261521, 47.529106], [-122.261479, 47.529104], [-122.261445, 47.529088], [-122.261459, 47.529057], [-122.261429, 47.529028], [-122.261394, 47.529005], [-122.26133, 47.528952], [-122.261309, 47.52893], [-122.261267, 47.528899], [-122.261229, 47.528898], [-122.261203, 47.528878], [-122.261175, 47.52886], [-122.261129, 47.528836], [-122.261107, 47.528815], [-122.261075, 47.528794], [-122.261028, 47.528762], [-122.260999, 47.528741], [-122.260973, 47.52871], [-122.260921, 47.528665], [-122.260888, 47.528652], [-122.260858, 47.528627], [-122.260819, 47.528604], [-122.260799, 47.528583], [-122.260769, 47.528567], [-122.260745, 47.528543], [-122.260717, 47.528524], [-122.260685, 47.528495], [-122.260651, 47.528461], [-122.26062, 47.528441], [-122.260585, 47.528418], [-122.260542, 47.528389], [-122.2605, 47.528361], [-122.260474, 47.528344], [-122.260447, 47.528306], [-122.260432, 47.528272], [-122.260412, 47.528237], [-122.260386, 47.528198], [-122.260362, 47.528142], [-122.260346, 47.528109], [-122.260343, 47.528079], [-122.260313, 47.528009], [-122.260304, 47.52796], [-122.26029, 47.527919], [-122.260282, 47.527879], [-122.260272, 47.527853], [-122.26026, 47.52778], [-122.260258, 47.527738], [-122.260248, 47.527685], [-122.260244, 47.527652], [-122.260237, 47.527618], [-122.260226, 47.52757], [-122.260225, 47.527545], [-122.260215, 47.527509], [-122.260205, 47.527471], [-122.260192, 47.527409], [-122.260193, 47.527379], [-122.260216, 47.527353], [-122.260207, 47.527282], [-122.260204, 47.527235], [-122.2602, 47.527181], [-122.260153, 47.527184], [-122.260107, 47.527184], [-122.260094, 47.527131], [-122.260089, 47.527085], [-122.260079, 47.527058], [-122.260075, 47.527008], [-122.260068, 47.526903], [-122.260096, 47.526862], [-122.260096, 47.526824], [-122.260095, 47.526759], [-122.260104, 47.526722], [-122.260106, 47.526691], [-122.260138, 47.526664], [-122.260145, 47.526635], [-122.260146, 47.526575], [-122.260129, 47.526452], [-122.260039, 47.52645], [-122.260035, 47.526384], [-122.260028, 47.526339], [-122.260025, 47.526275], [-122.26002, 47.526198], [-122.260013, 47.52615], [-122.260007, 47.52612], [-122.260034, 47.526046], [-122.26003, 47.525994], [-122.26002, 47.525946], [-122.260008, 47.525872], [-122.260001, 47.525826], [-122.259984, 47.525745], [-122.259975, 47.525687], [-122.259973, 47.525658], [-122.259967, 47.525628], [-122.259949, 47.52555], [-122.259938, 47.525499], [-122.259914, 47.52547], [-122.25994, 47.525439], [-122.25996, 47.525409], [-122.259954, 47.525335], [-122.259942, 47.525251], [-122.259929, 47.525152], [-122.259925, 47.525068], [-122.259941, 47.525044], [-122.259964, 47.525021], [-122.259987, 47.524961], [-122.259988, 47.524936], [-122.259998, 47.524867], [-122.260001, 47.524832], [-122.260005, 47.524775], [-122.260022, 47.524729], [-122.260031, 47.524695], [-122.260041, 47.524658], [-122.260054, 47.52461], [-122.260063, 47.524564], [-122.260077, 47.524493], [-122.260077, 47.524437], [-122.260095, 47.524406], [-122.260128, 47.524367], [-122.260158, 47.524262], [-122.260165, 47.524229], [-122.260188, 47.524195], [-122.260203, 47.52417], [-122.260215, 47.524113], [-122.260225, 47.524084], [-122.260242, 47.524031], [-122.260265, 47.523982], [-122.260299, 47.523967], [-122.260333, 47.523918], [-122.260373, 47.523888], [-122.260393, 47.523864], [-122.260431, 47.523829], [-122.260448, 47.523805], [-122.260465, 47.523749], [-122.260471, 47.523722], [-122.26052, 47.523707], [-122.260556, 47.523685], [-122.260594, 47.523679], [-122.260659, 47.523679], [-122.260694, 47.523676], [-122.260746, 47.523663], [-122.260807, 47.523652], [-122.260856, 47.523651], [-122.260872, 47.523673], [-122.260895, 47.523706], [-122.260943, 47.523704], [-122.26098, 47.523702], [-122.261065, 47.523698], [-122.261133, 47.523695], [-122.261199, 47.523688], [-122.261332, 47.523691], [-122.261357, 47.523733], [-122.261371, 47.52376], [-122.261391, 47.523787], [-122.261412, 47.523822], [-122.261438, 47.523862], [-122.261445, 47.52389], [-122.261475, 47.523925], [-122.261493, 47.523948], [-122.26152, 47.523973], [-122.261544, 47.523999], [-122.261585, 47.524024], [-122.261643, 47.524036], [-122.261693, 47.524054], [-122.261746, 47.52406], [-122.261793, 47.524062], [-122.261831, 47.524069], [-122.261958, 47.524077], [-122.262033, 47.524088], [-122.26208, 47.524094], [-122.262109, 47.524118], [-122.262121, 47.524152], [-122.262131, 47.524189], [-122.262135, 47.524226], [-122.262167, 47.524285], [-122.262203, 47.524289], [-122.262235, 47.524265], [-122.262243, 47.524215], [-122.262243, 47.524159], [-122.262263, 47.524126], [-122.262266, 47.524098], [-122.262264, 47.524025], [-122.262285, 47.523989], [-122.262319, 47.523959], [-122.262354, 47.523927], [-122.262376, 47.523905], [-122.262394, 47.523882], [-122.262417, 47.523863], [-122.262438, 47.52384], [-122.262483, 47.523809], [-122.262505, 47.52379], [-122.262562, 47.523742], [-122.262584, 47.52372], [-122.262637, 47.523675], [-122.262668, 47.523642], [-122.262708, 47.523603], [-122.26275, 47.523563], [-122.262773, 47.523542], [-122.262802, 47.523524], [-122.262822, 47.523491], [-122.262843, 47.523454], [-122.262885, 47.523412], [-122.262918, 47.523375], [-122.262953, 47.523346], [-122.262986, 47.523318], [-122.263015, 47.523291], [-122.263036, 47.523268], [-122.263059, 47.523246], [-122.263074, 47.523218], [-122.263091, 47.523179], [-122.263101, 47.523153], [-122.263113, 47.523109], [-122.263097, 47.523079], [-122.263096, 47.523045], [-122.263098, 47.522947], [-122.263097, 47.522899], [-122.263099, 47.522798], [-122.2631, 47.522756], [-122.263101, 47.522709], [-122.263103, 47.522663], [-122.263139, 47.522619], [-122.263158, 47.522596], [-122.26317, 47.522563], [-122.263183, 47.522538], [-122.263198, 47.522508], [-122.263201, 47.522466], [-122.263193, 47.522422], [-122.263193, 47.522368], [-122.263174, 47.522262], [-122.263138, 47.522257], [-122.263137, 47.522142], [-122.263138, 47.522077], [-122.263133, 47.521938], [-122.263135, 47.521907], [-122.263144, 47.521874], [-122.263127, 47.521847], [-122.263105, 47.521785], [-122.263087, 47.521724], [-122.263068, 47.52167], [-122.263035, 47.521572], [-122.262993, 47.521523], [-122.262965, 47.521505], [-122.262933, 47.521479], [-122.262868, 47.521436], [-122.262823, 47.521403], [-122.262789, 47.521386], [-122.262756, 47.521365], [-122.262681, 47.521321], [-122.262645, 47.521303], [-122.262591, 47.521265], [-122.26259, 47.521238], [-122.262567, 47.521217], [-122.262531, 47.521189], [-122.262417, 47.52111], [-122.262396, 47.521082], [-122.262383, 47.521042], [-122.262382, 47.521014], [-122.262395, 47.520989], [-122.26236, 47.520957], [-122.262375, 47.520931], [-122.262405, 47.520912], [-122.262433, 47.520896], [-122.262465, 47.520865], [-122.262485, 47.520841], [-122.262488, 47.520812], [-122.262436, 47.520805], [-122.262375, 47.520833], [-122.262325, 47.520834], [-122.262311, 47.520858], [-122.262275, 47.520857], [-122.262167, 47.520861], [-122.262139, 47.5209], [-122.26211, 47.520923], [-122.262074, 47.520944], [-122.262029, 47.520974], [-122.261984, 47.521007], [-122.261905, 47.521057], [-122.261837, 47.521088], [-122.261804, 47.521109], [-122.261757, 47.52113], [-122.261715, 47.521149], [-122.26159, 47.521146], [-122.26152, 47.521143], [-122.261456, 47.521135], [-122.261417, 47.521127], [-122.261377, 47.521114], [-122.261337, 47.521104], [-122.261301, 47.521082], [-122.26128, 47.521037], [-122.261242, 47.521011], [-122.261196, 47.520956], [-122.261191, 47.520928], [-122.261164, 47.520894], [-122.261096, 47.520836], [-122.261067, 47.520814], [-122.261013, 47.520784], [-122.260922, 47.520745], [-122.26088, 47.520733], [-122.260837, 47.520726], [-122.260795, 47.520728], [-122.260746, 47.520712], [-122.26072, 47.520696], [-122.260622, 47.520697], [-122.260576, 47.52071], [-122.260537, 47.520726], [-122.260474, 47.520753], [-122.260428, 47.520772], [-122.260362, 47.520807], [-122.260329, 47.520836], [-122.260288, 47.520839], [-122.260223, 47.520815], [-122.260137, 47.520786], [-122.260088, 47.520762], [-122.260053, 47.52075], [-122.259992, 47.520726], [-122.259876, 47.520683], [-122.259809, 47.520659], [-122.259738, 47.520635], [-122.259681, 47.520612], [-122.259649, 47.520592], [-122.259617, 47.520575], [-122.259588, 47.52056], [-122.259551, 47.520531], [-122.259521, 47.520512], [-122.259473, 47.520491], [-122.259431, 47.520481], [-122.259321, 47.520455], [-122.259193, 47.52042], [-122.259088, 47.520383], [-122.259029, 47.520346], [-122.260665, 47.520338], [-122.260713, 47.520338], [-122.260761, 47.520338], [-122.261492, 47.52027], [-122.265091, 47.519824], [-122.266744, 47.519832], [-122.268937, 47.519854], [-122.268981, 47.519857], [-122.269017, 47.519859], [-122.269052, 47.519863], [-122.269088, 47.519868], [-122.269123, 47.519873], [-122.269158, 47.51988], [-122.269193, 47.519887], [-122.269228, 47.519895], [-122.269261, 47.519904], [-122.269295, 47.519913], [-122.269328, 47.519924], [-122.26936, 47.519935], [-122.269392, 47.519947], [-122.269422, 47.51996], [-122.269453, 47.519973], [-122.269482, 47.519988], [-122.269511, 47.520003], [-122.269539, 47.520019], [-122.269566, 47.520035], [-122.269592, 47.520052], [-122.269617, 47.52007], [-122.269641, 47.520088], [-122.269665, 47.520107], [-122.269714, 47.520141], [-122.269964, 47.519927], [-122.269974, 47.519038], [-122.271309, 47.519042], [-122.273471, 47.519065], [-122.275664, 47.519059], [-122.276544, 47.519045], [-122.27658, 47.519042], [-122.276616, 47.519041], [-122.276652, 47.519043], [-122.276688, 47.519046], [-122.276724, 47.519052], [-122.276758, 47.519061], [-122.27679, 47.519071], [-122.276822, 47.519083], [-122.276851, 47.519098], [-122.276879, 47.519114], [-122.276904, 47.519131], [-122.276927, 47.51915], [-122.278267, 47.520117], [-122.278294, 47.52014], [-122.278318, 47.520159], [-122.278341, 47.520178], [-122.278366, 47.520196], [-122.278391, 47.520213], [-122.278418, 47.52023], [-122.278445, 47.520247], [-122.278472, 47.520263], [-122.278501, 47.520278], [-122.27853, 47.520293], [-122.27856, 47.520307], [-122.27859, 47.520321], [-122.27862, 47.520334], [-122.278652, 47.520346], [-122.278683, 47.520358], [-122.278716, 47.520369], [-122.278749, 47.52038], [-122.278782, 47.520389], [-122.278816, 47.520399], [-122.27885, 47.520407], [-122.278884, 47.520415], [-122.278919, 47.520422], [-122.278954, 47.520429], [-122.278989, 47.520434], [-122.279025, 47.520439], [-122.27906, 47.520444], [-122.27993, 47.520612], [-122.279925, 47.520642], [-122.27992, 47.520673], [-122.279913, 47.520704], [-122.279908, 47.520735], [-122.279901, 47.520766], [-122.279895, 47.520797], [-122.279887, 47.520828], [-122.27913, 47.523213], [-122.278766, 47.524496], [-122.278765, 47.524527], [-122.278764, 47.524558], [-122.278764, 47.524589], [-122.278764, 47.52462], [-122.278764, 47.524652], [-122.278765, 47.524683], [-122.278766, 47.524714], [-122.278767, 47.524745], [-122.278768, 47.524777], [-122.27877, 47.524808], [-122.278772, 47.524839], [-122.278775, 47.52487], [-122.278778, 47.524901], [-122.278781, 47.524933], [-122.278784, 47.524964], [-122.278788, 47.524995], [-122.278792, 47.525026], [-122.278797, 47.525057], [-122.278801, 47.525088], [-122.278806, 47.525119], [-122.278812, 47.52515], [-122.278817, 47.525181], [-122.278823, 47.525212], [-122.27883, 47.525243], [-122.278836, 47.525274], [-122.278843, 47.525305], [-122.27885, 47.525336], [-122.278858, 47.525367], [-122.278865, 47.525398], [-122.278874, 47.525428], [-122.278882, 47.525459], [-122.278891, 47.52549], [-122.2789, 47.52552], [-122.278909, 47.525551], [-122.278919, 47.525581], [-122.278929, 47.525612], [-122.278939, 47.525642], [-122.27895, 47.525673], [-122.278961, 47.525703], [-122.278972, 47.525733], [-122.278984, 47.525764], [-122.278995, 47.525794], [-122.279008, 47.525824], [-122.27902, 47.525854], [-122.279032, 47.525884], [-122.279045, 47.525914], [-122.279605, 47.526915], [-122.280085, 47.527953], [-122.280509, 47.528847], [-122.280631, 47.529422], [-122.280648, 47.531536]]]]
    },
    "properties": {
      "neighbourhood": "Dunlap",
      "neighbourhood_group": "Rainier Valley"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.27993, 47.520612], [-122.27906, 47.520444], [-122.279025, 47.520439], [-122.278989, 47.520434], [-122.278954, 47.520429], [-122.278919, 47.520422], [-122.278884, 47.520415], [-122.27885, 47.520407], [-122.278816, 47.520399], [-122.278782, 47.520389], [-122.278749, 47.52038], [-122.278716, 47.520369], [-122.278683, 47.520358], [-122.278652, 47.520346], [-122.27862, 47.520334], [-122.27859, 47.520321], [-122.27856, 47.520307], [-122.27853, 47.520293], [-122.278501, 47.520278], [-122.278472, 47.520263], [-122.278445, 47.520247], [-122.278418, 47.52023], [-122.278391, 47.520213], [-122.278366, 47.520196], [-122.278341, 47.520178], [-122.278318, 47.520159], [-122.278294, 47.52014], [-122.278267, 47.520117], [-122.276927, 47.51915], [-122.276904, 47.519131], [-122.276879, 47.519114], [-122.276851, 47.519098], [-122.276822, 47.519083], [-122.27679, 47.519071], [-122.276758, 47.519061], [-122.276724, 47.519052], [-122.276688, 47.519046], [-122.276652, 47.519043], [-122.276616, 47.519041], [-122.27658, 47.519042], [-122.276544, 47.519045], [-122.275664, 47.519059], [-122.273471, 47.519065], [-122.271309, 47.519042], [-122.269974, 47.519038], [-122.269964, 47.519927], [-122.269714, 47.520141], [-122.269665, 47.520107], [-122.269641, 47.520088], [-122.269617, 47.52007], [-122.269592, 47.520052], [-122.269566, 47.520035], [-122.269539, 47.520019], [-122.269511, 47.520003], [-122.269482, 47.519988], [-122.269453, 47.519973], [-122.269422, 47.51996], [-122.269392, 47.519947], [-122.26936, 47.519935], [-122.269328, 47.519924], [-122.269295, 47.519913], [-122.269261, 47.519904], [-122.269228, 47.519895], [-122.269193, 47.519887], [-122.269158, 47.51988], [-122.269123, 47.519873], [-122.269088, 47.519868], [-122.269052, 47.519863], [-122.269017, 47.519859], [-122.268981, 47.519857], [-122.268937, 47.519854], [-122.266744, 47.519832], [-122.265091, 47.519824], [-122.261492, 47.52027], [-122.260761, 47.520338], [-122.260713, 47.520338], [-122.260665, 47.520338], [-122.259029, 47.520346], [-122.258986, 47.520346], [-122.258922, 47.520324], [-122.258874, 47.520309], [-122.258834, 47.520302], [-122.258745, 47.520281], [-122.258713, 47.520259], [-122.258684, 47.520213], [-122.258665, 47.520154], [-122.258595, 47.520121], [-122.258537, 47.520089], [-122.258492, 47.520065], [-122.258406, 47.520018], [-122.258251, 47.519948], [-122.258218, 47.51993], [-122.258158, 47.519898], [-122.258043, 47.519848], [-122.257987, 47.519828], [-122.257882, 47.519799], [-122.257782, 47.519766], [-122.25774, 47.519747], [-122.257664, 47.519718], [-122.257588, 47.519687], [-122.257556, 47.519668], [-122.257515, 47.519642], [-122.257485, 47.519626], [-122.257388, 47.519589], [-122.257344, 47.519568], [-122.257296, 47.519552], [-122.25721, 47.519508], [-122.257126, 47.519457], [-122.257041, 47.519408], [-122.256992, 47.519382], [-122.256926, 47.519348], [-122.256875, 47.519311], [-122.256811, 47.519269], [-122.256757, 47.519223], [-122.256729, 47.519202], [-122.256604, 47.519109], [-122.256559, 47.519099], [-122.256476, 47.519097], [-122.256405, 47.519093], [-122.256367, 47.519078], [-122.256328, 47.519033], [-122.256318, 47.518994], [-122.256308, 47.518968], [-122.256288, 47.518939], [-122.256201, 47.518864], [-122.256111, 47.518801], [-122.256048, 47.518758], [-122.255983, 47.518706], [-122.255937, 47.518676], [-122.255871, 47.518628], [-122.255829, 47.518604], [-122.255799, 47.518584], [-122.255762, 47.518548], [-122.255736, 47.518526], [-122.255666, 47.518474], [-122.255618, 47.518435], [-122.255598, 47.518406], [-122.255561, 47.518374], [-122.255508, 47.518348], [-122.255466, 47.518335], [-122.25542, 47.518337], [-122.255387, 47.518322], [-122.255347, 47.518298], [-122.255282, 47.518255], [-122.25525, 47.518231], [-122.25522, 47.518209], [-122.255203, 47.518175], [-122.255168, 47.518144], [-122.25515, 47.518121], [-122.255114, 47.518094], [-122.255078, 47.518063], [-122.255051, 47.518027], [-122.255002, 47.517987], [-122.254955, 47.517946], [-122.254925, 47.517923], [-122.254873, 47.517876], [-122.254794, 47.517819], [-122.254738, 47.517768], [-122.254712, 47.517747], [-122.254686, 47.517725], [-122.254654, 47.51771], [-122.254585, 47.517714], [-122.254539, 47.517714], [-122.254514, 47.517697], [-122.254484, 47.517666], [-122.254465, 47.517636], [-122.254462, 47.517586], [-122.254498, 47.517573], [-122.254499, 47.517547], [-122.25449, 47.517493], [-122.254489, 47.517452], [-122.254469, 47.517393], [-122.254456, 47.517364], [-122.254417, 47.517344], [-122.254383, 47.517302], [-122.254377, 47.51727], [-122.254355, 47.517213], [-122.254345, 47.51717], [-122.254328, 47.517094], [-122.25433, 47.517065], [-122.254344, 47.517027], [-122.254355, 47.516996], [-122.25433, 47.516939], [-122.254299, 47.516882], [-122.254268, 47.516839], [-122.254256, 47.516807], [-122.254229, 47.516777], [-122.254204, 47.516722], [-122.254172, 47.516666], [-122.254157, 47.516635], [-122.254131, 47.516589], [-122.254092, 47.516546], [-122.254072, 47.516514], [-122.254055, 47.516481], [-122.254032, 47.516376], [-122.254013, 47.516331], [-122.253963, 47.5163], [-122.253917, 47.516269], [-122.253879, 47.516238], [-122.253872, 47.516207], [-122.25389, 47.516168], [-122.25388, 47.516132], [-122.253833, 47.516124], [-122.253789, 47.516147], [-122.253731, 47.516175], [-122.253693, 47.516175], [-122.25363, 47.516144], [-122.253557, 47.516089], [-122.253508, 47.516061], [-122.25346, 47.516027], [-122.253433, 47.516002], [-122.253392, 47.515978], [-122.253365, 47.51596], [-122.253336, 47.515943], [-122.253273, 47.515899], [-122.253215, 47.515866], [-122.253174, 47.515848], [-122.253116, 47.515811], [-122.253067, 47.515762], [-122.253051, 47.51573], [-122.253022, 47.515716], [-122.252958, 47.515702], [-122.252925, 47.515692], [-122.252895, 47.515676], [-122.252844, 47.515635], [-122.252794, 47.515599], [-122.252735, 47.51556], [-122.25269, 47.515531], [-122.252659, 47.51551], [-122.252633, 47.515485], [-122.252593, 47.515448], [-122.252555, 47.515423], [-122.252529, 47.515406], [-122.252493, 47.515382], [-122.252471, 47.515361], [-122.252393, 47.515304], [-122.252355, 47.515273], [-122.252331, 47.515253], [-122.252288, 47.515229], [-122.25225, 47.515202], [-122.252199, 47.515171], [-122.252165, 47.515141], [-122.252102, 47.51508], [-122.252083, 47.515058], [-122.252082, 47.515022], [-122.252111, 47.514999], [-122.252099, 47.514974], [-122.25207, 47.514947], [-122.251976, 47.514927], [-122.251952, 47.514904], [-122.251927, 47.514877], [-122.251906, 47.514844], [-122.251867, 47.514814], [-122.251829, 47.514781], [-122.251786, 47.514738], [-122.251758, 47.514713], [-122.251716, 47.514679], [-122.251693, 47.514642], [-122.251645, 47.514589], [-122.251613, 47.514562], [-122.251577, 47.514538], [-122.251548, 47.514517], [-122.251506, 47.514475], [-122.251456, 47.514434], [-122.251405, 47.514372], [-122.25138, 47.51433], [-122.251347, 47.51429], [-122.251321, 47.51425], [-122.25129, 47.514212], [-122.251236, 47.514171], [-122.251153, 47.514113], [-122.251129, 47.514093], [-122.251083, 47.514039], [-122.251056, 47.514011], [-122.25103, 47.513983], [-122.25101, 47.513963], [-122.25096, 47.513926], [-122.250931, 47.513887], [-122.250908, 47.51386], [-122.250879, 47.51384], [-122.25084, 47.513816], [-122.250808, 47.513791], [-122.250755, 47.513756], [-122.250734, 47.513735], [-122.250689, 47.513697], [-122.250664, 47.513677], [-122.250624, 47.513643], [-122.250598, 47.513621], [-122.250574, 47.513602], [-122.250505, 47.513562], [-122.250461, 47.513524], [-122.250429, 47.513498], [-122.250394, 47.513474], [-122.250371, 47.513454], [-122.250344, 47.513423], [-122.25032, 47.513404], [-122.250289, 47.513382], [-122.250267, 47.513358], [-122.250234, 47.513341], [-122.250208, 47.513311], [-122.250157, 47.513286], [-122.250126, 47.513267], [-122.250096, 47.513238], [-122.250063, 47.51322], [-122.250003, 47.513177], [-122.249971, 47.513149], [-122.249935, 47.513134], [-122.249858, 47.513079], [-122.249832, 47.513061], [-122.249799, 47.513044], [-122.249776, 47.513022], [-122.249715, 47.512992], [-122.249657, 47.512958], [-122.24957, 47.51288], [-122.249529, 47.512838], [-122.249497, 47.512811], [-122.249468, 47.512789], [-122.249409, 47.512754], [-122.249374, 47.512743], [-122.249336, 47.512735], [-122.249287, 47.512733], [-122.249229, 47.512734], [-122.249186, 47.512723], [-122.249141, 47.512715], [-122.249096, 47.512731], [-122.249058, 47.512732], [-122.248995, 47.512724], [-122.248949, 47.512709], [-122.248885, 47.512683], [-122.248837, 47.51267], [-122.248768, 47.512657], [-122.248728, 47.51265], [-122.248687, 47.512642], [-122.248649, 47.512636], [-122.248582, 47.512636], [-122.248543, 47.512634], [-122.248498, 47.512647], [-122.248467, 47.512663], [-122.248421, 47.512678], [-122.248365, 47.512679], [-122.24831, 47.512673], [-122.248267, 47.512672], [-122.248216, 47.512673], [-122.248134, 47.512674], [-122.248102, 47.512689], [-122.248067, 47.512701], [-122.24803, 47.512721], [-122.247988, 47.512735], [-122.247945, 47.512733], [-122.247907, 47.51272], [-122.247861, 47.512702], [-122.247826, 47.512671], [-122.247807, 47.512649], [-122.247792, 47.512612], [-122.247775, 47.512589], [-122.247748, 47.512567], [-122.247698, 47.512551], [-122.247656, 47.512555], [-122.247617, 47.512558], [-122.247566, 47.512585], [-122.24754, 47.512603], [-122.247507, 47.51263], [-122.247452, 47.512647], [-122.247387, 47.512648], [-122.247347, 47.512628], [-122.247282, 47.512603], [-122.247241, 47.512574], [-122.247231, 47.512548], [-122.247245, 47.512521], [-122.247233, 47.512494], [-122.247185, 47.512442], [-122.247071, 47.512316], [-122.246999, 47.512304], [-122.246927, 47.512298], [-122.246872, 47.512282], [-122.246832, 47.512273], [-122.246743, 47.51225], [-122.246687, 47.512241], [-122.246637, 47.51225], [-122.246582, 47.512248], [-122.246443, 47.51225], [-122.246396, 47.51227], [-122.246379, 47.512294], [-122.24636, 47.512319], [-122.246344, 47.512341], [-122.246312, 47.512362], [-122.246266, 47.512366], [-122.246226, 47.512361], [-122.246186, 47.512355], [-122.246168, 47.512325], [-122.246174, 47.512272], [-122.246193, 47.512244], [-122.246197, 47.51221], [-122.246181, 47.512181], [-122.246154, 47.512159], [-122.24613, 47.512133], [-122.246079, 47.512098], [-122.246025, 47.512072], [-122.246006, 47.512043], [-122.245963, 47.512028], [-122.245908, 47.512001], [-122.245861, 47.51198], [-122.245825, 47.511961], [-122.245774, 47.51193], [-122.24575, 47.511895], [-122.245669, 47.51188], [-122.245625, 47.511877], [-122.245494, 47.511861], [-122.245406, 47.511848], [-122.245355, 47.511837], [-122.245315, 47.511821], [-122.245255, 47.511818], [-122.245205, 47.511821], [-122.24516, 47.511807], [-122.245131, 47.511783], [-122.24512, 47.51176], [-122.245089, 47.511737], [-122.245032, 47.511729], [-122.244985, 47.511726], [-122.244917, 47.511719], [-122.244878, 47.511704], [-122.244843, 47.511712], [-122.244789, 47.51171], [-122.244618, 47.511684], [-122.244582, 47.511674], [-122.244526, 47.511675], [-122.244107, 47.511602], [-122.24405, 47.5116], [-122.243919, 47.51162], [-122.243865, 47.51165], [-122.243818, 47.51165], [-122.243747, 47.511654], [-122.243153, 47.51164], [-122.243049, 47.51163], [-122.24296, 47.511623], [-122.242915, 47.511625], [-122.242846, 47.511622], [-122.2428, 47.511618], [-122.242744, 47.511618], [-122.242145, 47.511542], [-122.242085, 47.511529], [-122.242008, 47.511509], [-122.241908, 47.511485], [-122.241849, 47.511468], [-122.241784, 47.511443], [-122.241742, 47.511428], [-122.241695, 47.511417], [-122.241565, 47.511393], [-122.24151, 47.511384], [-122.241429, 47.511376], [-122.241117, 47.511294], [-122.241044, 47.511292], [-122.240954, 47.511286], [-122.240815, 47.511274], [-122.240732, 47.51127], [-122.240616, 47.511278], [-122.240596, 47.511313], [-122.240402, 47.511317], [-122.240276, 47.511318], [-122.240224, 47.511313], [-122.240276, 47.511223], [-122.240194, 47.511225], [-122.240052, 47.51122], [-122.23996, 47.511221], [-122.239919, 47.51122], [-122.239865, 47.511215], [-122.239779, 47.5112], [-122.239178, 47.511055], [-122.239089, 47.511024], [-122.239025, 47.510998], [-122.238945, 47.510969], [-122.238848, 47.510939], [-122.238759, 47.510902], [-122.238674, 47.510869], [-122.238304, 47.510742], [-122.238177, 47.510689], [-122.238146, 47.510675], [-122.238054, 47.510639], [-122.238026, 47.510625], [-122.237941, 47.510568], [-122.237877, 47.510531], [-122.237844, 47.510504], [-122.237811, 47.510479], [-122.237811, 47.510447], [-122.237756, 47.510444], [-122.237725, 47.510424], [-122.23764, 47.510376], [-122.237429, 47.510238], [-122.237336, 47.510184], [-122.237172, 47.510099], [-122.237128, 47.510078], [-122.237073, 47.510056], [-122.237032, 47.510029], [-122.236987, 47.510004], [-122.236968, 47.509982], [-122.236917, 47.509956], [-122.236872, 47.509933], [-122.236835, 47.50992], [-122.236749, 47.509877], [-122.236701, 47.50986], [-122.236652, 47.509841], [-122.236556, 47.509796], [-122.236484, 47.509759], [-122.236436, 47.509738], [-122.236373, 47.509708], [-122.236298, 47.509669], [-122.23625, 47.509661], [-122.236162, 47.509631], [-122.236124, 47.509606], [-122.236044, 47.509567], [-122.236085, 47.509549], [-122.237345, 47.509567], [-122.238024, 47.509576], [-122.238819, 47.509587], [-122.241114, 47.509622], [-122.24355, 47.509656], [-122.243808, 47.509659], [-122.244912, 47.509674], [-122.245095, 47.509677], [-122.245168, 47.509678], [-122.245024, 47.509813], [-122.244852, 47.509975], [-122.246415, 47.510888], [-122.248209, 47.511411], [-122.248362, 47.509931], [-122.248364, 47.509774], [-122.248011, 47.509166], [-122.247847, 47.508897], [-122.247844, 47.508871], [-122.247839, 47.508845], [-122.247831, 47.508819], [-122.24782, 47.508793], [-122.247813, 47.508767], [-122.247816, 47.50874], [-122.247829, 47.508715], [-122.247849, 47.508693], [-122.247877, 47.508674], [-122.247909, 47.508658], [-122.247942, 47.508644], [-122.247977, 47.508632], [-122.248012, 47.508621], [-122.248049, 47.508612], [-122.248087, 47.508605], [-122.248126, 47.508602], [-122.248166, 47.508603], [-122.248204, 47.508608], [-122.248241, 47.508617], [-122.248276, 47.508629], [-122.248307, 47.508645], [-122.248335, 47.508664], [-122.248357, 47.508686], [-122.248375, 47.508709], [-122.248388, 47.508734], [-122.249009, 47.509488], [-122.249028, 47.509511], [-122.249046, 47.509535], [-122.249062, 47.509559], [-122.249076, 47.509584], [-122.249088, 47.509609], [-122.249099, 47.509635], [-122.249107, 47.509661], [-122.249114, 47.509687], [-122.249118, 47.509713], [-122.249121, 47.50974], [-122.249122, 47.509766], [-122.249121, 47.509793], [-122.249077, 47.510087], [-122.249081, 47.510114], [-122.249088, 47.51014], [-122.249099, 47.510165], [-122.249112, 47.51019], [-122.249128, 47.510215], [-122.249147, 47.510238], [-122.249168, 47.51026], [-122.249192, 47.510281], [-122.249218, 47.510301], [-122.249247, 47.51032], [-122.249277, 47.510336], [-122.249309, 47.510352], [-122.249343, 47.510365], [-122.249378, 47.510377], [-122.249414, 47.510387], [-122.249452, 47.510395], [-122.24949, 47.510401], [-122.249529, 47.510405], [-122.249568, 47.510407], [-122.250257, 47.510633], [-122.249945, 47.51038], [-122.25002, 47.509712], [-122.250017, 47.509685], [-122.250017, 47.509659], [-122.25002, 47.509632], [-122.250026, 47.509606], [-122.250034, 47.50958], [-122.250046, 47.509555], [-122.250061, 47.50953], [-122.250079, 47.509506], [-122.250099, 47.509484], [-122.250122, 47.509462], [-122.250146, 47.509442], [-122.250174, 47.509422], [-122.250204, 47.509405], [-122.250235, 47.509389], [-122.250262, 47.509371], [-122.25028, 47.509348], [-122.250296, 47.509324], [-122.25031, 47.509299], [-122.250321, 47.509273], [-122.25033, 47.509247], [-122.250337, 47.509221], [-122.250341, 47.509195], [-122.250343, 47.509168], [-122.250342, 47.509142], [-122.250339, 47.509115], [-122.250334, 47.509089], [-122.250326, 47.509063], [-122.250316, 47.509037], [-122.250303, 47.509012], [-122.250288, 47.508987], [-122.250272, 47.508963], [-122.250253, 47.50894], [-122.250231, 47.508918], [-122.250001, 47.508565], [-122.248864, 47.50692], [-122.248875, 47.506871], [-122.24886, 47.506394], [-122.250205, 47.506384], [-122.253294, 47.506402], [-122.254228, 47.506377], [-122.254553, 47.506355], [-122.254562, 47.506331], [-122.254577, 47.506309], [-122.254596, 47.506288], [-122.25462, 47.50627], [-122.254647, 47.506254], [-122.254678, 47.506242], [-122.254711, 47.506232], [-122.254746, 47.506226], [-122.254791, 47.506224], [-122.255673, 47.506205], [-122.256943, 47.506168], [-122.258423, 47.506128], [-122.259473, 47.506115], [-122.26044, 47.506124], [-122.262393, 47.506118], [-122.263339, 47.506123], [-122.265503, 47.506139], [-122.267237, 47.506138], [-122.268235, 47.50614], [-122.269432, 47.506139], [-122.270133, 47.506155], [-122.270107, 47.507027], [-122.27008, 47.508784], [-122.270066, 47.509663], [-122.270187, 47.509666], [-122.271417, 47.509694], [-122.271561, 47.509697], [-122.271703, 47.5097], [-122.272739, 47.509724], [-122.273994, 47.509752], [-122.274075, 47.509754], [-122.274156, 47.509756], [-122.275412, 47.509784], [-122.275417, 47.509457], [-122.275426, 47.508812], [-122.275429, 47.508653], [-122.275432, 47.508489], [-122.275442, 47.507844], [-122.275446, 47.507522], [-122.275451, 47.507199], [-122.275567, 47.507203], [-122.275682, 47.507211], [-122.275806, 47.50723], [-122.275927, 47.507257], [-122.276044, 47.50729], [-122.276158, 47.507329], [-122.276808, 47.507745], [-122.276917, 47.507809], [-122.277033, 47.507869], [-122.277154, 47.507922], [-122.277282, 47.507969], [-122.277413, 47.508009], [-122.277543, 47.508065], [-122.277696, 47.508094], [-122.277851, 47.508114], [-122.278009, 47.508127], [-122.278167, 47.508131], [-122.278198, 47.509848], [-122.278408, 47.509852], [-122.278485, 47.509854], [-122.278512, 47.510186], [-122.278551, 47.510678], [-122.278744, 47.513121], [-122.279216, 47.516732], [-122.279552, 47.517957], [-122.279566, 47.517986], [-122.27958, 47.518016], [-122.279593, 47.518046], [-122.279607, 47.518076], [-122.27962, 47.518106], [-122.279633, 47.518136], [-122.279645, 47.518166], [-122.279658, 47.518196], [-122.27967, 47.518226], [-122.279682, 47.518257], [-122.279694, 47.518287], [-122.279705, 47.518317], [-122.279716, 47.518347], [-122.279727, 47.518378], [-122.279738, 47.518408], [-122.279749, 47.518438], [-122.279759, 47.518469], [-122.279769, 47.518499], [-122.279779, 47.51853], [-122.279789, 47.51856], [-122.279798, 47.518591], [-122.279808, 47.518622], [-122.279816, 47.518652], [-122.279825, 47.518683], [-122.279834, 47.518713], [-122.279842, 47.518744], [-122.279851, 47.518775], [-122.279859, 47.518806], [-122.279866, 47.518837], [-122.279874, 47.518867], [-122.279881, 47.518898], [-122.279888, 47.518929], [-122.279895, 47.51896], [-122.279901, 47.518991], [-122.279908, 47.519022], [-122.279914, 47.519053], [-122.27992, 47.519084], [-122.279925, 47.519115], [-122.279931, 47.519146], [-122.279936, 47.519177], [-122.279941, 47.519208], [-122.279946, 47.519239], [-122.279951, 47.51927], [-122.279955, 47.519301], [-122.279959, 47.519332], [-122.279963, 47.519363], [-122.279966, 47.519395], [-122.27997, 47.519426], [-122.279973, 47.519457], [-122.279976, 47.519488], [-122.279979, 47.519519], [-122.279981, 47.51955], [-122.279983, 47.519582], [-122.279985, 47.519613], [-122.279987, 47.519644], [-122.279989, 47.519675], [-122.27999, 47.519707], [-122.279991, 47.519738], [-122.279992, 47.519769], [-122.279993, 47.5198], [-122.279993, 47.519831], [-122.279994, 47.519863], [-122.279994, 47.519894], [-122.279993, 47.519925], [-122.279993, 47.519956], [-122.279992, 47.519988], [-122.279992, 47.520019], [-122.27999, 47.52005], [-122.279989, 47.520081], [-122.279987, 47.520113], [-122.279985, 47.520144], [-122.279983, 47.520175], [-122.279981, 47.520206], [-122.279978, 47.520237], [-122.279976, 47.520269], [-122.279973, 47.5203], [-122.27997, 47.520331], [-122.279966, 47.520362], [-122.279962, 47.520393], [-122.279959, 47.520424], [-122.279955, 47.520456], [-122.27995, 47.520487], [-122.279946, 47.520518], [-122.279941, 47.520549], [-122.279936, 47.52058], [-122.27993, 47.520612]]]]
    },
    "properties": {
      "neighbourhood": "Rainier Beach",
      "neighbourhood_group": "Rainier Valley"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.296607, 47.576334], [-122.296567, 47.576281], [-122.296245, 47.575875], [-122.295958, 47.57548], [-122.295719, 47.575167], [-122.29541, 47.574768], [-122.294981, 47.574201], [-122.29475, 47.573893], [-122.29453, 47.573611], [-122.294449, 47.573504], [-122.294078, 47.57301], [-122.293866, 47.572735], [-122.293495, 47.572252], [-122.293151, 47.571801], [-122.292642, 47.571136], [-122.29245, 47.570879], [-122.292435, 47.570856], [-122.292419, 47.570833], [-122.292403, 47.570811], [-122.292389, 47.570789], [-122.292347, 47.570738], [-122.292329, 47.570716], [-122.292311, 47.570694], [-122.292292, 47.570673], [-122.292272, 47.570652], [-122.292253, 47.570631], [-122.292232, 47.57061], [-122.292211, 47.570589], [-122.292191, 47.570569], [-122.292169, 47.570549], [-122.292147, 47.570529], [-122.292125, 47.570509], [-122.2921, 47.57049], [-122.292077, 47.57047], [-122.292054, 47.570451], [-122.292029, 47.570432], [-122.292004, 47.570414], [-122.291979, 47.570396], [-122.291953, 47.570378], [-122.291927, 47.57036], [-122.2919, 47.570343], [-122.291873, 47.570326], [-122.291845, 47.57031], [-122.291818, 47.570293], [-122.29179, 47.570277], [-122.291761, 47.570261], [-122.291732, 47.570246], [-122.291703, 47.570231], [-122.291674, 47.570216], [-122.291644, 47.570201], [-122.291614, 47.570187], [-122.291583, 47.570173], [-122.291553, 47.570159], [-122.291521, 47.570146], [-122.291475, 47.570126], [-122.291023, 47.569941], [-122.290992, 47.569928], [-122.290961, 47.569914], [-122.29093, 47.5699], [-122.2909, 47.569886], [-122.29087, 47.569872], [-122.290841, 47.569856], [-122.290812, 47.569841], [-122.290784, 47.569825], [-122.290756, 47.569809], [-122.290728, 47.569792], [-122.290701, 47.569776], [-122.290675, 47.569758], [-122.290648, 47.569741], [-122.290623, 47.569723], [-122.290598, 47.569704], [-122.290574, 47.569686], [-122.29055, 47.569667], [-122.290507, 47.569629], [-122.290484, 47.56961], [-122.290462, 47.569589], [-122.290441, 47.569569], [-122.290421, 47.569548], [-122.290401, 47.569527], [-122.290381, 47.569506], [-122.290363, 47.569485], [-122.290344, 47.569463], [-122.290033, 47.569035], [-122.289716, 47.568594], [-122.289239, 47.567945], [-122.289023, 47.56715], [-122.288867, 47.56659], [-122.288775, 47.566249], [-122.288636, 47.565739], [-122.288477, 47.565156], [-122.288383, 47.564813], [-122.288289, 47.564481], [-122.288185, 47.564093], [-122.287298, 47.564089], [-122.285842, 47.564125], [-122.283833, 47.564133], [-122.283204, 47.564133], [-122.281703, 47.564142], [-122.280819, 47.564146], [-122.280638, 47.564077], [-122.279497, 47.564085], [-122.279269, 47.564087], [-122.27737, 47.564094], [-122.275756, 47.564107], [-122.27575, 47.562382], [-122.275701, 47.5606], [-122.275703, 47.558215], [-122.275686, 47.557104], [-122.275685, 47.557033], [-122.272624, 47.557057], [-122.272625, 47.555771], [-122.272644, 47.554111], [-122.272643, 47.553814], [-122.272643, 47.55369], [-122.272643, 47.553544], [-122.272645, 47.552063], [-122.272645, 47.55154], [-122.272646, 47.550025], [-122.272638, 47.549241], [-122.27264, 47.548031], [-122.272644, 47.546859], [-122.272633, 47.546042], [-122.272773, 47.546041], [-122.276505, 47.546024], [-122.280672, 47.545987], [-122.284543, 47.546031], [-122.285515, 47.546053], [-122.285554, 47.546135], [-122.285957, 47.546975], [-122.286406, 47.547815], [-122.287283, 47.549694], [-122.288126, 47.551357], [-122.288946, 47.55311], [-122.289543, 47.554322], [-122.28983, 47.55494], [-122.290073, 47.555433], [-122.290412, 47.556088], [-122.290676, 47.556534], [-122.290821, 47.55678], [-122.290964, 47.557019], [-122.291145, 47.557311], [-122.291408, 47.557726], [-122.291708, 47.558195], [-122.292019, 47.558687], [-122.292378, 47.559249], [-122.292725, 47.559772], [-122.293001, 47.560218], [-122.293222, 47.5606], [-122.293364, 47.560829], [-122.294002, 47.560821], [-122.294059, 47.560819], [-122.294105, 47.560817], [-122.294151, 47.560816], [-122.294198, 47.560816], [-122.294244, 47.560816], [-122.29429, 47.560817], [-122.294336, 47.560818], [-122.294382, 47.56082], [-122.294428, 47.560822], [-122.294474, 47.560825], [-122.294519, 47.560829], [-122.294565, 47.560833], [-122.294611, 47.560837], [-122.294657, 47.560843], [-122.294702, 47.560848], [-122.294747, 47.560855], [-122.294792, 47.560861], [-122.294837, 47.560869], [-122.294882, 47.560876], [-122.294926, 47.560885], [-122.29497, 47.560894], [-122.295014, 47.560903], [-122.295058, 47.560913], [-122.295102, 47.560924], [-122.295145, 47.560935], [-122.295188, 47.560946], [-122.29523, 47.560958], [-122.295273, 47.560971], [-122.295315, 47.560984], [-122.295356, 47.560997], [-122.295398, 47.561011], [-122.295438, 47.561026], [-122.295479, 47.561041], [-122.295519, 47.561057], [-122.295558, 47.561073], [-122.295598, 47.561089], [-122.295636, 47.561106], [-122.295675, 47.561123], [-122.295713, 47.561141], [-122.296413, 47.561456], [-122.296448, 47.56147], [-122.296488, 47.561486], [-122.296529, 47.5615], [-122.29657, 47.561515], [-122.296611, 47.561528], [-122.296653, 47.561542], [-122.296695, 47.561554], [-122.296738, 47.561566], [-122.296781, 47.561577], [-122.296824, 47.561588], [-122.296868, 47.561598], [-122.296913, 47.561607], [-122.296956, 47.561616], [-122.297001, 47.561624], [-122.297046, 47.561632], [-122.297091, 47.561639], [-122.297136, 47.561645], [-122.297182, 47.56165], [-122.297227, 47.561655], [-122.297273, 47.561659], [-122.297319, 47.561663], [-122.297365, 47.561666], [-122.297411, 47.561667], [-122.297457, 47.561669], [-122.297503, 47.561669], [-122.297549, 47.561669], [-122.297595, 47.561668], [-122.297641, 47.561666], [-122.297687, 47.561664], [-122.297733, 47.56166], [-122.297779, 47.561656], [-122.297825, 47.561652], [-122.29787, 47.561646], [-122.297916, 47.56164], [-122.297961, 47.561633], [-122.298005, 47.561626], [-122.29805, 47.561617], [-122.298094, 47.561609], [-122.298138, 47.561599], [-122.298182, 47.561588], [-122.298225, 47.561577], [-122.298268, 47.561566], [-122.29831, 47.561553], [-122.298352, 47.56154], [-122.298393, 47.561526], [-122.298434, 47.561512], [-122.298474, 47.561497], [-122.298514, 47.561481], [-122.298554, 47.561465], [-122.298592, 47.561448], [-122.29863, 47.56143], [-122.298668, 47.561412], [-122.298705, 47.561393], [-122.298741, 47.561374], [-122.298777, 47.561354], [-122.301361, 47.560366], [-122.302229, 47.56007], [-122.30227, 47.560056], [-122.302311, 47.560042], [-122.302353, 47.560028], [-122.302395, 47.560015], [-122.302436, 47.560001], [-122.302479, 47.559988], [-122.302521, 47.559976], [-122.302563, 47.559963], [-122.302606, 47.559951], [-122.302648, 47.559939], [-122.302691, 47.559927], [-122.302734, 47.559916], [-122.302777, 47.559904], [-122.30282, 47.559893], [-122.302863, 47.559883], [-122.302907, 47.559872], [-122.302951, 47.559862], [-122.302994, 47.559852], [-122.303038, 47.559842], [-122.303082, 47.559833], [-122.303126, 47.559824], [-122.30317, 47.559815], [-122.303215, 47.559806], [-122.303259, 47.559798], [-122.303304, 47.559789], [-122.303348, 47.559782], [-122.303393, 47.559774], [-122.303438, 47.559767], [-122.303483, 47.559759], [-122.303528, 47.559753], [-122.303573, 47.559746], [-122.303618, 47.55974], [-122.303663, 47.559734], [-122.304645, 47.559599], [-122.304685, 47.559731], [-122.305127, 47.561191], [-122.303423, 47.561258], [-122.303376, 47.561259], [-122.30333, 47.561261], [-122.303284, 47.561264], [-122.303239, 47.561268], [-122.303193, 47.561273], [-122.303148, 47.561279], [-122.303103, 47.561286], [-122.303058, 47.561294], [-122.303014, 47.561302], [-122.30297, 47.561312], [-122.302926, 47.561322], [-122.302883, 47.561333], [-122.30284, 47.561345], [-122.302798, 47.561358], [-122.302757, 47.561372], [-122.302716, 47.561387], [-122.302676, 47.561402], [-122.302636, 47.561418], [-122.302598, 47.561435], [-122.30256, 47.561453], [-122.302523, 47.561471], [-122.302487, 47.561491], [-122.302451, 47.561511], [-122.302416, 47.561531], [-122.302382, 47.561553], [-122.30235, 47.561575], [-122.302318, 47.561597], [-122.302288, 47.561621], [-122.302258, 47.561645], [-122.302229, 47.561669], [-122.301781, 47.562278], [-122.301744, 47.562305], [-122.301715, 47.562329], [-122.30169, 47.562355], [-122.301667, 47.562382], [-122.301647, 47.56241], [-122.30163, 47.56244], [-122.301617, 47.562469], [-122.301607, 47.5625], [-122.3016, 47.562531], [-122.301597, 47.562562], [-122.301597, 47.562593], [-122.3016, 47.562624], [-122.301606, 47.562655], [-122.301616, 47.562686], [-122.301628, 47.562716], [-122.301643, 47.562746], [-122.301661, 47.562774], [-122.301683, 47.562802], [-122.301706, 47.562829], [-122.301733, 47.562854], [-122.301762, 47.562879], [-122.301794, 47.562901], [-122.301827, 47.562923], [-122.301863, 47.562943], [-122.301901, 47.562961], [-122.30193, 47.562977], [-122.301961, 47.563], [-122.301991, 47.563024], [-122.302022, 47.563047], [-122.302052, 47.563071], [-122.302081, 47.563095], [-122.30211, 47.563119], [-122.302139, 47.563144], [-122.302167, 47.563168], [-122.302195, 47.563193], [-122.302223, 47.563218], [-122.30225, 47.563243], [-122.302278, 47.563269], [-122.302297, 47.563295], [-122.302328, 47.563337], [-122.302355, 47.563374], [-122.302366, 47.563404], [-122.302375, 47.563434], [-122.302381, 47.563465], [-122.302384, 47.563496], [-122.302383, 47.563528], [-122.302379, 47.563559], [-122.302371, 47.56359], [-122.30236, 47.56362], [-122.302346, 47.56365], [-122.30233, 47.563679], [-122.302312, 47.563708], [-122.30229, 47.563735], [-122.302267, 47.563762], [-122.302241, 47.563788], [-122.302213, 47.563813], [-122.302183, 47.563837], [-122.302151, 47.563859], [-122.302117, 47.563881], [-122.302082, 47.5639], [-122.302045, 47.563919], [-122.302006, 47.563936], [-122.301966, 47.563951], [-122.301924, 47.563965], [-122.301882, 47.563978], [-122.301424, 47.564053], [-122.301381, 47.564062], [-122.301337, 47.564072], [-122.301294, 47.564084], [-122.301251, 47.564096], [-122.30121, 47.564109], [-122.301169, 47.564123], [-122.301128, 47.564138], [-122.301088, 47.564154], [-122.301049, 47.56417], [-122.301011, 47.564188], [-122.300973, 47.564206], [-122.300937, 47.564225], [-122.300901, 47.564245], [-122.300866, 47.564265], [-122.300833, 47.564287], [-122.3008, 47.564309], [-122.300768, 47.564331], [-122.300737, 47.564355], [-122.300707, 47.564379], [-122.300679, 47.564403], [-122.300652, 47.564428], [-122.300626, 47.564454], [-122.300601, 47.56448], [-122.300577, 47.564507], [-122.300555, 47.564535], [-122.300296, 47.564852], [-122.299886, 47.565353], [-122.299747, 47.56558], [-122.29978, 47.565939], [-122.299725, 47.566397], [-122.299395, 47.567074], [-122.29938, 47.567097], [-122.299366, 47.56712], [-122.299353, 47.567143], [-122.299341, 47.567166], [-122.299329, 47.56719], [-122.299319, 47.567214], [-122.299309, 47.567237], [-122.299299, 47.567261], [-122.299291, 47.567286], [-122.299283, 47.56731], [-122.299277, 47.567334], [-122.299271, 47.567359], [-122.299266, 47.567383], [-122.299262, 47.567408], [-122.299259, 47.567432], [-122.299256, 47.567457], [-122.299254, 47.567481], [-122.299262, 47.567753], [-122.29928, 47.568024], [-122.299281, 47.568299], [-122.299246, 47.569051], [-122.299229, 47.570824], [-122.299177, 47.572256], [-122.299194, 47.572877], [-122.299416, 47.573207], [-122.299383, 47.573936], [-122.29938, 47.575232], [-122.29938, 47.5757], [-122.299373, 47.575729], [-122.299359, 47.575759], [-122.299338, 47.575787], [-122.299311, 47.575812], [-122.299279, 47.575835], [-122.299242, 47.575853], [-122.299201, 47.575868], [-122.299157, 47.575878], [-122.299112, 47.575884], [-122.299066, 47.575884], [-122.296734, 47.575882], [-122.296718, 47.576096], [-122.296654, 47.576297], [-122.296607, 47.576334]]]]
    },
    "properties": {
      "neighbourhood": "Columbia City",
      "neighbourhood_group": "Rainier Valley"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.370665, 47.570772], [-122.370649, 47.570837], [-122.370648, 47.570899], [-122.370647, 47.570944], [-122.370645, 47.57099], [-122.370644, 47.571035], [-122.370642, 47.571081], [-122.37064, 47.571128], [-122.370637, 47.571175], [-122.370634, 47.571221], [-122.370631, 47.571269], [-122.370629, 47.571315], [-122.370627, 47.571362], [-122.370627, 47.571407], [-122.370628, 47.571438], [-122.370434, 47.571464], [-122.370389, 47.571467], [-122.370186, 47.571481], [-122.369326, 47.571487], [-122.368632, 47.571481], [-122.367537, 47.571483], [-122.366434, 47.57148], [-122.365335, 47.571482], [-122.364236, 47.571484], [-122.363141, 47.571478], [-122.362038, 47.571475], [-122.360946, 47.571472], [-122.360908, 47.571472], [-122.36087, 47.571472], [-122.360832, 47.571472], [-122.360794, 47.571471], [-122.360758, 47.571471], [-122.360722, 47.571471], [-122.360687, 47.57147], [-122.360651, 47.57147], [-122.360615, 47.571469], [-122.36058, 47.571468], [-122.360544, 47.571468], [-122.360508, 47.571467], [-122.360472, 47.571466], [-122.360437, 47.571465], [-122.360401, 47.571464], [-122.360365, 47.571463], [-122.360329, 47.571461], [-122.360294, 47.57146], [-122.360258, 47.571458], [-122.360222, 47.571457], [-122.360187, 47.571455], [-122.360151, 47.571454], [-122.360115, 47.571452], [-122.36008, 47.57145], [-122.360044, 47.571448], [-122.360008, 47.571446], [-122.359973, 47.571444], [-122.359937, 47.571442], [-122.359902, 47.57144], [-122.359866, 47.571437], [-122.35983, 47.571434], [-122.359795, 47.57143], [-122.35976, 47.571426], [-122.359725, 47.571421], [-122.35969, 47.571417], [-122.359654, 47.571413], [-122.359619, 47.571408], [-122.359584, 47.571404], [-122.359549, 47.571399], [-122.359514, 47.571394], [-122.359479, 47.571389], [-122.359442, 47.571384], [-122.359404, 47.571379], [-122.359367, 47.571373], [-122.359333, 47.571368], [-122.359298, 47.571362], [-122.359263, 47.571357], [-122.359228, 47.571351], [-122.359193, 47.571345], [-122.359159, 47.57134], [-122.359124, 47.571334], [-122.359089, 47.571328], [-122.359055, 47.571322], [-122.35902, 47.571315], [-122.358986, 47.571309], [-122.358951, 47.571303], [-122.358916, 47.571296], [-122.358882, 47.57129], [-122.358848, 47.571283], [-122.358628, 47.571241], [-122.358358, 47.571192], [-122.35812, 47.571152], [-122.357881, 47.571116], [-122.357641, 47.571082], [-122.357401, 47.571051], [-122.357159, 47.571022], [-122.356756, 47.570982], [-122.356291, 47.570962], [-122.356202, 47.570958], [-122.355948, 47.570567], [-122.355202, 47.569397], [-122.354529, 47.568334], [-122.354164, 47.567745], [-122.353876, 47.567295], [-122.353682, 47.566986], [-122.353533, 47.566744], [-122.353372, 47.566254], [-122.353224, 47.565806], [-122.353039, 47.56522], [-122.352719, 47.564386], [-122.352533, 47.563845], [-122.352089, 47.562576], [-122.351883, 47.561912], [-122.35178, 47.561671], [-122.351776, 47.561647], [-122.351772, 47.561622], [-122.351769, 47.561598], [-122.351765, 47.561573], [-122.351762, 47.561549], [-122.351759, 47.561524], [-122.351756, 47.5615], [-122.351753, 47.561475], [-122.35175, 47.561451], [-122.351748, 47.561426], [-122.351745, 47.561402], [-122.351743, 47.561377], [-122.35174, 47.561353], [-122.351738, 47.561328], [-122.351736, 47.561304], [-122.351734, 47.561279], [-122.351732, 47.561255], [-122.351731, 47.56123], [-122.351729, 47.561205], [-122.351728, 47.561181], [-122.351727, 47.560596], [-122.351716, 47.559917], [-122.351709, 47.559414], [-122.352363, 47.55941], [-122.353054, 47.559407], [-122.353732, 47.5594], [-122.354331, 47.559433], [-122.354745, 47.559452], [-122.355028, 47.559558], [-122.355311, 47.559663], [-122.355344, 47.559675], [-122.355377, 47.559685], [-122.35541, 47.559695], [-122.355444, 47.559704], [-122.355479, 47.559713], [-122.355513, 47.559721], [-122.355548, 47.559728], [-122.355584, 47.559734], [-122.35562, 47.55974], [-122.355655, 47.559745], [-122.355691, 47.559749], [-122.355728, 47.559752], [-122.355879, 47.55975], [-122.356035, 47.559776], [-122.35607, 47.559781], [-122.356106, 47.559787], [-122.35614, 47.559794], [-122.356174, 47.559803], [-122.356208, 47.559813], [-122.35624, 47.559824], [-122.356272, 47.559837], [-122.356302, 47.559851], [-122.356332, 47.559866], [-122.35636, 47.559881], [-122.356387, 47.559898], [-122.356518, 47.559987], [-122.356601, 47.560038], [-122.356818, 47.56011], [-122.356853, 47.560118], [-122.356888, 47.560125], [-122.356923, 47.560132], [-122.356958, 47.560137], [-122.356995, 47.560142], [-122.357031, 47.560145], [-122.357067, 47.560148], [-122.357104, 47.560149], [-122.357141, 47.56015], [-122.357177, 47.560149], [-122.357217, 47.560147], [-122.357783, 47.560115], [-122.358225, 47.560096], [-122.358298, 47.56009], [-122.358333, 47.560085], [-122.358368, 47.560079], [-122.358403, 47.560073], [-122.358437, 47.560066], [-122.358472, 47.560058], [-122.358507, 47.560049], [-122.358547, 47.560038], [-122.358586, 47.560025], [-122.358624, 47.560012], [-122.358662, 47.559997], [-122.358699, 47.559982], [-122.358735, 47.559966], [-122.35877, 47.559949], [-122.358805, 47.559931], [-122.358838, 47.559913], [-122.358871, 47.559894], [-122.358902, 47.559873], [-122.358933, 47.559853], [-122.358962, 47.559831], [-122.35899, 47.559809], [-122.359017, 47.559786], [-122.359043, 47.559763], [-122.359068, 47.559739], [-122.359091, 47.559714], [-122.359113, 47.559689], [-122.359134, 47.559663], [-122.359424, 47.559307], [-122.359474, 47.55926], [-122.35951, 47.559238], [-122.359543, 47.559219], [-122.359577, 47.5592], [-122.359612, 47.559183], [-122.359648, 47.559166], [-122.359685, 47.55915], [-122.359722, 47.559135], [-122.35976, 47.559121], [-122.359799, 47.559108], [-122.359839, 47.559096], [-122.359879, 47.559085], [-122.35992, 47.559075], [-122.359961, 47.559065], [-122.360003, 47.559057], [-122.360045, 47.55905], [-122.360088, 47.559043], [-122.360131, 47.559038], [-122.360186, 47.559032], [-122.360185, 47.558999], [-122.360153, 47.557063], [-122.36004, 47.553713], [-122.360563, 47.553714], [-122.36191, 47.553717], [-122.362961, 47.553721], [-122.369741, 47.553745], [-122.37055, 47.553751], [-122.372198, 47.553756], [-122.376295, 47.553787], [-122.376303, 47.55509], [-122.376296, 47.557048], [-122.376265, 47.559007], [-122.376218, 47.560967], [-122.376171, 47.56291], [-122.376157, 47.564075], [-122.374112, 47.564092], [-122.373454, 47.56411], [-122.373417, 47.564118], [-122.373381, 47.564126], [-122.373346, 47.564135], [-122.37331, 47.564145], [-122.373275, 47.564155], [-122.373241, 47.564166], [-122.373207, 47.564178], [-122.373173, 47.56419], [-122.37314, 47.564203], [-122.373108, 47.564217], [-122.373076, 47.564231], [-122.373044, 47.564245], [-122.373014, 47.564261], [-122.372983, 47.564276], [-122.372954, 47.564293], [-122.372925, 47.56431], [-122.372897, 47.564327], [-122.372869, 47.564345], [-122.372843, 47.564363], [-122.372817, 47.564382], [-122.372792, 47.564402], [-122.372767, 47.564422], [-122.372744, 47.564442], [-122.37272, 47.564463], [-122.372699, 47.564484], [-122.372678, 47.564505], [-122.372339, 47.56509], [-122.371236, 47.566883], [-122.370812, 47.567567], [-122.37077, 47.568596], [-122.370711, 47.56945], [-122.370702, 47.569863], [-122.370665, 47.570772]]]]
    },
    "properties": {
      "neighbourhood": "North Delridge",
      "neighbourhood_group": "Delridge"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.330008, 47.708635], [-122.329671, 47.708632], [-122.327951, 47.708618], [-122.326833, 47.708613], [-122.323724, 47.708596], [-122.320625, 47.708579], [-122.317525, 47.708556], [-122.314735, 47.708541], [-122.314211, 47.708539], [-122.313056, 47.708533], [-122.31243, 47.708529], [-122.312426, 47.707983], [-122.312429, 47.70703], [-122.312433, 47.706085], [-122.312431, 47.705112], [-122.312403, 47.704153], [-122.31234, 47.703194], [-122.312298, 47.702235], [-122.312255, 47.701277], [-122.312213, 47.70034], [-122.311993, 47.700338], [-122.311667, 47.700335], [-122.310223, 47.700328], [-122.308794, 47.700314], [-122.307421, 47.700306], [-122.306022, 47.700291], [-122.304568, 47.700277], [-122.303966, 47.700275], [-122.303326, 47.700269], [-122.303374, 47.700213], [-122.303545, 47.700018], [-122.304317, 47.699104], [-122.304803, 47.698521], [-122.305088, 47.698184], [-122.305398, 47.697725], [-122.305462, 47.697564], [-122.305637, 47.697127], [-122.305748, 47.696709], [-122.305756, 47.696305], [-122.305712, 47.695742], [-122.305638, 47.695179], [-122.305607, 47.694724], [-122.305499, 47.693611], [-122.305457, 47.693144], [-122.305513, 47.692759], [-122.305517, 47.692734], [-122.305528, 47.692709], [-122.305549, 47.69266], [-122.30556, 47.692635], [-122.305571, 47.692612], [-122.305583, 47.692587], [-122.305594, 47.692564], [-122.305606, 47.692539], [-122.30563, 47.692494], [-122.305643, 47.692469], [-122.305656, 47.692445], [-122.30567, 47.69242], [-122.305684, 47.692395], [-122.305698, 47.692371], [-122.305712, 47.692346], [-122.305727, 47.692322], [-122.305756, 47.692275], [-122.30577, 47.692253], [-122.305785, 47.692229], [-122.305801, 47.692205], [-122.305816, 47.692183], [-122.305832, 47.692159], [-122.305864, 47.692114], [-122.305879, 47.692092], [-122.305896, 47.692069], [-122.305913, 47.692047], [-122.30593, 47.692024], [-122.305947, 47.692002], [-122.305965, 47.691979], [-122.305984, 47.691956], [-122.306002, 47.691933], [-122.306021, 47.69191], [-122.30604, 47.691887], [-122.306061, 47.691864], [-122.306081, 47.691842], [-122.3061, 47.691822], [-122.306121, 47.6918], [-122.306143, 47.691778], [-122.306163, 47.691758], [-122.306186, 47.691737], [-122.306209, 47.691715], [-122.306249, 47.691679], [-122.306272, 47.69166], [-122.306296, 47.69164], [-122.306319, 47.691621], [-122.306344, 47.691601], [-122.306393, 47.691563], [-122.306419, 47.691544], [-122.306445, 47.691524], [-122.306469, 47.691506], [-122.306495, 47.691487], [-122.306521, 47.691467], [-122.306545, 47.691449], [-122.306572, 47.69143], [-122.30662, 47.691395], [-122.306647, 47.691376], [-122.306674, 47.691357], [-122.306699, 47.69134], [-122.307816, 47.69056], [-122.30807, 47.690382], [-122.308168, 47.690312], [-122.309606, 47.690324], [-122.311728, 47.690339], [-122.313865, 47.690347], [-122.316001, 47.690361], [-122.318162, 47.690372], [-122.320298, 47.690383], [-122.321987, 47.690393], [-122.322458, 47.69039], [-122.324201, 47.690407], [-122.325944, 47.690423], [-122.326568, 47.690424], [-122.328713, 47.690451], [-122.328795, 47.690371], [-122.328933, 47.690238], [-122.329027, 47.690146], [-122.329072, 47.690102], [-122.329101, 47.690119], [-122.329105, 47.690211], [-122.329125, 47.69029], [-122.329144, 47.690368], [-122.32925, 47.690735], [-122.329257, 47.690813], [-122.329265, 47.690889], [-122.329295, 47.692472], [-122.329291, 47.694499], [-122.329394, 47.695901], [-122.329567, 47.697577], [-122.329828, 47.69959], [-122.329923, 47.700708], [-122.329955, 47.701805], [-122.329862, 47.702925], [-122.32982, 47.703622], [-122.329768, 47.704552], [-122.329941, 47.706755], [-122.330008, 47.708635]]]]
    },
    "properties": {
      "neighbourhood": "Maple Leaf",
      "neighbourhood_group": "Northgate"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.30686, 47.690303], [-122.305973, 47.690296], [-122.304158, 47.690287], [-122.303151, 47.690284], [-122.30241, 47.690274], [-122.301668, 47.690264], [-122.301522, 47.689861], [-122.301507, 47.689839], [-122.301493, 47.689816], [-122.301481, 47.689793], [-122.30147, 47.68977], [-122.30146, 47.689747], [-122.301453, 47.689723], [-122.301446, 47.689699], [-122.301441, 47.689675], [-122.301438, 47.689651], [-122.301436, 47.689627], [-122.301436, 47.689602], [-122.301437, 47.689578], [-122.301441, 47.689554], [-122.301445, 47.68953], [-122.301451, 47.689506], [-122.301459, 47.689482], [-122.301604, 47.688756], [-122.301686, 47.688259], [-122.301648, 47.687948], [-122.301636, 47.687851], [-122.301632, 47.687827], [-122.301626, 47.687803], [-122.30162, 47.687779], [-122.301613, 47.687755], [-122.301604, 47.687731], [-122.301596, 47.687708], [-122.301586, 47.687684], [-122.301575, 47.687661], [-122.301564, 47.687638], [-122.301551, 47.687615], [-122.301538, 47.687593], [-122.301524, 47.68757], [-122.301509, 47.687548], [-122.301493, 47.687526], [-122.301477, 47.687505], [-122.301459, 47.687483], [-122.301441, 47.687462], [-122.301422, 47.687442], [-122.301403, 47.687421], [-122.301382, 47.687401], [-122.300895, 47.686721], [-122.300885, 47.686698], [-122.300877, 47.68667], [-122.300862, 47.686631], [-122.300855, 47.686607], [-122.300849, 47.686583], [-122.300843, 47.686559], [-122.300839, 47.686535], [-122.300835, 47.686511], [-122.300832, 47.686487], [-122.30083, 47.686462], [-122.300828, 47.686438], [-122.300827, 47.686414], [-122.300826, 47.686389], [-122.300827, 47.686365], [-122.300829, 47.686341], [-122.300828, 47.685963], [-122.300817, 47.685149], [-122.300792, 47.684331], [-122.300771, 47.683511], [-122.300755, 47.683044], [-122.3006, 47.683043], [-122.298944, 47.683041], [-122.296741, 47.683043], [-122.294739, 47.683046], [-122.292566, 47.683048], [-122.290478, 47.683047], [-122.290436, 47.681229], [-122.290422, 47.680744], [-122.290365, 47.678705], [-122.290305, 47.676864], [-122.290255, 47.675117], [-122.290249, 47.67348], [-122.290236, 47.672498], [-122.290224, 47.671488], [-122.290242, 47.670501], [-122.290235, 47.670199], [-122.290181, 47.669095], [-122.290192, 47.667891], [-122.290177, 47.666668], [-122.290168, 47.665632], [-122.290167, 47.664866], [-122.290175, 47.664711], [-122.290141, 47.662639], [-122.290853, 47.662298], [-122.292869, 47.661237], [-122.293624, 47.661244], [-122.294657, 47.661248], [-122.295692, 47.661246], [-122.296731, 47.66125], [-122.298117, 47.661253], [-122.298764, 47.661255], [-122.299698, 47.661258], [-122.300912, 47.661251], [-122.300914, 47.662788], [-122.300904, 47.66394], [-122.30091, 47.6644], [-122.300908, 47.664426], [-122.300906, 47.664451], [-122.300904, 47.664477], [-122.300902, 47.664503], [-122.300899, 47.664528], [-122.300897, 47.664554], [-122.300893, 47.664579], [-122.30089, 47.664605], [-122.300886, 47.66463], [-122.300883, 47.664656], [-122.300879, 47.664681], [-122.300875, 47.664707], [-122.300871, 47.664732], [-122.300867, 47.664758], [-122.300862, 47.664783], [-122.300858, 47.664808], [-122.300852, 47.664834], [-122.300847, 47.664859], [-122.300841, 47.664885], [-122.300836, 47.66491], [-122.30083, 47.664935], [-122.300824, 47.66496], [-122.300818, 47.664986], [-122.300593, 47.665877], [-122.300599, 47.666816], [-122.300608, 47.667745], [-122.300608, 47.667794], [-122.300609, 47.667933], [-122.30061, 47.667985], [-122.301781, 47.667964], [-122.302624, 47.667964], [-122.303792, 47.667967], [-122.303795, 47.668029], [-122.303844, 47.668948], [-122.303876, 47.669409], [-122.30382, 47.669822], [-122.303816, 47.669847], [-122.303814, 47.669872], [-122.303816, 47.669897], [-122.303822, 47.669921], [-122.303831, 47.669946], [-122.303843, 47.669969], [-122.303859, 47.669992], [-122.303878, 47.670013], [-122.303902, 47.670036], [-122.303929, 47.670057], [-122.303959, 47.670075], [-122.303992, 47.670092], [-122.305111, 47.670376], [-122.305915, 47.670576], [-122.306609, 47.67075], [-122.308381, 47.671071], [-122.308952, 47.671183], [-122.310159, 47.671396], [-122.310877, 47.671531], [-122.311913, 47.671728], [-122.311914, 47.672097], [-122.311916, 47.672824], [-122.311922, 47.673994], [-122.311931, 47.675363], [-122.311945, 47.676729], [-122.311983, 47.678044], [-122.312015, 47.679373], [-122.312024, 47.680023], [-122.312029, 47.680048], [-122.312033, 47.680073], [-122.312035, 47.680098], [-122.312037, 47.680123], [-122.312037, 47.680148], [-122.312036, 47.680173], [-122.312035, 47.680198], [-122.312031, 47.680223], [-122.312027, 47.680247], [-122.312022, 47.680272], [-122.312016, 47.680297], [-122.312008, 47.680321], [-122.311999, 47.680346], [-122.311989, 47.68037], [-122.311979, 47.680394], [-122.311967, 47.680417], [-122.311954, 47.680441], [-122.31194, 47.680464], [-122.311925, 47.680487], [-122.311908, 47.680509], [-122.311889, 47.680534], [-122.311871, 47.680555], [-122.311851, 47.68058], [-122.311832, 47.680605], [-122.311816, 47.680627], [-122.311801, 47.68065], [-122.311786, 47.680673], [-122.311773, 47.680696], [-122.31176, 47.68072], [-122.311747, 47.680743], [-122.311736, 47.680767], [-122.311725, 47.680791], [-122.311716, 47.680815], [-122.311706, 47.680839], [-122.311698, 47.680864], [-122.311689, 47.680894], [-122.311683, 47.680918], [-122.311677, 47.680943], [-122.311673, 47.680968], [-122.311669, 47.680993], [-122.311666, 47.681018], [-122.311663, 47.681043], [-122.311662, 47.681068], [-122.311662, 47.681093], [-122.311662, 47.681118], [-122.311678, 47.681692], [-122.31168, 47.682026], [-122.311679, 47.682051], [-122.311679, 47.682076], [-122.311681, 47.682101], [-122.311683, 47.682126], [-122.311686, 47.682151], [-122.31169, 47.682176], [-122.311695, 47.6822], [-122.3117, 47.682225], [-122.311707, 47.68225], [-122.311714, 47.682274], [-122.311723, 47.682299], [-122.311732, 47.682323], [-122.311742, 47.682347], [-122.311753, 47.682371], [-122.311765, 47.682395], [-122.311777, 47.682418], [-122.31179, 47.682441], [-122.311805, 47.682465], [-122.31182, 47.682487], [-122.311835, 47.68251], [-122.311856, 47.682532], [-122.311875, 47.682554], [-122.311893, 47.682576], [-122.31191, 47.682598], [-122.311927, 47.68262], [-122.311943, 47.682643], [-122.311958, 47.682666], [-122.311971, 47.682689], [-122.311985, 47.682712], [-122.311997, 47.682736], [-122.312009, 47.68276], [-122.31202, 47.682784], [-122.31203, 47.682808], [-122.312039, 47.682832], [-122.312047, 47.682856], [-122.312055, 47.682881], [-122.312061, 47.682905], [-122.312067, 47.68293], [-122.312072, 47.682955], [-122.312076, 47.68298], [-122.312079, 47.683005], [-122.312082, 47.68303], [-122.312083, 47.683055], [-122.311711, 47.683049], [-122.310027, 47.683048], [-122.308306, 47.683048], [-122.306696, 47.68304], [-122.306708, 47.683689], [-122.306741, 47.685058], [-122.306767, 47.686411], [-122.306793, 47.687756], [-122.30682, 47.688489], [-122.30686, 47.690303]]]]
    },
    "properties": {
      "neighbourhood": "Ravenna",
      "neighbourhood_group": "Other neighborhoods"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.297392, 47.71562], [-122.297417, 47.715579], [-122.297699, 47.715103], [-122.298254, 47.714164], [-122.298796, 47.71326], [-122.298873, 47.713129], [-122.299156, 47.712651], [-122.299463, 47.712134], [-122.299974, 47.711254], [-122.300466, 47.710423], [-122.300647, 47.710124], [-122.300753, 47.709924], [-122.300854, 47.709723], [-122.300949, 47.70952], [-122.30104, 47.709316], [-122.301166, 47.709007], [-122.301175, 47.708982], [-122.301184, 47.708957], [-122.301192, 47.708932], [-122.301201, 47.708908], [-122.30121, 47.708883], [-122.301218, 47.708858], [-122.301227, 47.708833], [-122.301235, 47.708809], [-122.301243, 47.708784], [-122.301252, 47.708759], [-122.30126, 47.708734], [-122.301268, 47.708709], [-122.301276, 47.708685], [-122.301284, 47.70866], [-122.301292, 47.708635], [-122.301299, 47.70861], [-122.301307, 47.708585], [-122.301314, 47.70856], [-122.301322, 47.708535], [-122.30133, 47.70851], [-122.301337, 47.708485], [-122.301344, 47.70846], [-122.301351, 47.708436], [-122.301358, 47.708411], [-122.301365, 47.708386], [-122.301372, 47.708361], [-122.301379, 47.708336], [-122.301386, 47.708311], [-122.301393, 47.708286], [-122.301399, 47.708261], [-122.301406, 47.708236], [-122.301412, 47.70821], [-122.301418, 47.708185], [-122.301425, 47.70816], [-122.301431, 47.708135], [-122.301437, 47.70811], [-122.301444, 47.708085], [-122.301449, 47.70806], [-122.301455, 47.708035], [-122.301461, 47.70801], [-122.301467, 47.707985], [-122.301473, 47.70796], [-122.301482, 47.707918], [-122.301487, 47.707893], [-122.301493, 47.707868], [-122.3015, 47.707843], [-122.301506, 47.707817], [-122.301511, 47.707792], [-122.301517, 47.707767], [-122.301522, 47.707742], [-122.301528, 47.707717], [-122.301533, 47.707692], [-122.301538, 47.707667], [-122.301543, 47.707641], [-122.301548, 47.707616], [-122.301552, 47.707591], [-122.301557, 47.707566], [-122.301562, 47.70754], [-122.301566, 47.707515], [-122.30157, 47.70749], [-122.301574, 47.707465], [-122.301578, 47.707439], [-122.301582, 47.707414], [-122.301585, 47.707389], [-122.301589, 47.707363], [-122.301592, 47.707338], [-122.301595, 47.707313], [-122.301598, 47.707287], [-122.301601, 47.707262], [-122.301603, 47.707237], [-122.301606, 47.707211], [-122.301609, 47.707186], [-122.301611, 47.707161], [-122.301613, 47.707135], [-122.301615, 47.70711], [-122.301617, 47.707084], [-122.301619, 47.707059], [-122.301621, 47.707034], [-122.301622, 47.707008], [-122.301624, 47.706983], [-122.301624, 47.706957], [-122.301626, 47.706932], [-122.301627, 47.706907], [-122.301627, 47.706881], [-122.301628, 47.706856], [-122.301628, 47.70683], [-122.301629, 47.706805], [-122.301625, 47.705747], [-122.301615, 47.704668], [-122.30161, 47.703593], [-122.301608, 47.703566], [-122.301607, 47.703538], [-122.301606, 47.70351], [-122.301605, 47.703482], [-122.301605, 47.703455], [-122.301605, 47.703427], [-122.301605, 47.703399], [-122.301603, 47.703351], [-122.301609, 47.703323], [-122.301608, 47.703291], [-122.301609, 47.703263], [-122.30161, 47.703235], [-122.301612, 47.703207], [-122.301614, 47.70318], [-122.301616, 47.703152], [-122.301618, 47.703124], [-122.301621, 47.703097], [-122.301624, 47.703069], [-122.301626, 47.703041], [-122.30163, 47.703014], [-122.301634, 47.702986], [-122.301637, 47.702958], [-122.301641, 47.702931], [-122.301645, 47.702903], [-122.30165, 47.702876], [-122.301655, 47.702848], [-122.301659, 47.702821], [-122.301664, 47.702793], [-122.301669, 47.702766], [-122.301675, 47.702738], [-122.301681, 47.702711], [-122.301687, 47.702683], [-122.301693, 47.702656], [-122.3017, 47.702629], [-122.301706, 47.702601], [-122.301713, 47.702574], [-122.301721, 47.702547], [-122.301728, 47.70252], [-122.301855, 47.702225], [-122.302015, 47.701857], [-122.302032, 47.701834], [-122.302048, 47.701811], [-122.302064, 47.701788], [-122.302082, 47.701763], [-122.3021, 47.701738], [-122.302118, 47.701713], [-122.302137, 47.701688], [-122.302155, 47.701664], [-122.302173, 47.701639], [-122.302192, 47.701614], [-122.302211, 47.70159], [-122.30223, 47.701565], [-122.302249, 47.70154], [-122.302268, 47.701516], [-122.302287, 47.701491], [-122.302307, 47.701467], [-122.302326, 47.701442], [-122.302346, 47.701418], [-122.302365, 47.701394], [-122.303145, 47.700476], [-122.303326, 47.700269], [-122.303966, 47.700275], [-122.304568, 47.700277], [-122.306022, 47.700291], [-122.307421, 47.700306], [-122.308794, 47.700314], [-122.310223, 47.700328], [-122.311667, 47.700335], [-122.311993, 47.700338], [-122.312213, 47.70034], [-122.312255, 47.701277], [-122.312298, 47.702235], [-122.31234, 47.703194], [-122.312403, 47.704153], [-122.312431, 47.705112], [-122.312433, 47.706085], [-122.312429, 47.70703], [-122.312426, 47.707983], [-122.31243, 47.708529], [-122.312432, 47.708942], [-122.312439, 47.709901], [-122.312427, 47.710895], [-122.312435, 47.711892], [-122.312464, 47.712889], [-122.312492, 47.713886], [-122.312507, 47.714347], [-122.312529, 47.714993], [-122.31257, 47.716089], [-122.312599, 47.716969], [-122.312642, 47.718269], [-122.312659, 47.719198], [-122.31266, 47.719417], [-122.312451, 47.719414], [-122.310485, 47.719389], [-122.308348, 47.71938], [-122.305699, 47.719349], [-122.30334, 47.719328], [-122.30185, 47.71931], [-122.298264, 47.719287], [-122.296441, 47.71928], [-122.295235, 47.719276], [-122.295361, 47.71906], [-122.295819, 47.7183], [-122.296277, 47.717516], [-122.296403, 47.717304], [-122.296837, 47.716566], [-122.297392, 47.71562]]]]
    },
    "properties": {
      "neighbourhood": "Victory Heights",
      "neighbourhood_group": "Lake City"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.362961, 47.553721], [-122.36191, 47.553717], [-122.360563, 47.553714], [-122.36004, 47.553713], [-122.360153, 47.557063], [-122.360185, 47.558999], [-122.360186, 47.559032], [-122.360131, 47.559038], [-122.360088, 47.559043], [-122.360045, 47.55905], [-122.360003, 47.559057], [-122.359961, 47.559065], [-122.35992, 47.559075], [-122.359879, 47.559085], [-122.359839, 47.559096], [-122.359799, 47.559108], [-122.35976, 47.559121], [-122.359722, 47.559135], [-122.359685, 47.55915], [-122.359648, 47.559166], [-122.359612, 47.559183], [-122.359577, 47.5592], [-122.359543, 47.559219], [-122.35951, 47.559238], [-122.359474, 47.55926], [-122.359424, 47.559307], [-122.359134, 47.559663], [-122.359113, 47.559689], [-122.359091, 47.559714], [-122.359068, 47.559739], [-122.359043, 47.559763], [-122.359017, 47.559786], [-122.35899, 47.559809], [-122.358962, 47.559831], [-122.358933, 47.559853], [-122.358902, 47.559873], [-122.358871, 47.559894], [-122.358838, 47.559913], [-122.358805, 47.559931], [-122.35877, 47.559949], [-122.358735, 47.559966], [-122.358699, 47.559982], [-122.358662, 47.559997], [-122.358624, 47.560012], [-122.358586, 47.560025], [-122.358547, 47.560038], [-122.358507, 47.560049], [-122.358472, 47.560058], [-122.358437, 47.560066], [-122.358403, 47.560073], [-122.358368, 47.560079], [-122.358333, 47.560085], [-122.358298, 47.56009], [-122.358225, 47.560096], [-122.357783, 47.560115], [-122.357217, 47.560147], [-122.357177, 47.560149], [-122.357141, 47.56015], [-122.357104, 47.560149], [-122.357067, 47.560148], [-122.357031, 47.560145], [-122.356995, 47.560142], [-122.356958, 47.560137], [-122.356923, 47.560132], [-122.356888, 47.560125], [-122.356853, 47.560118], [-122.356818, 47.56011], [-122.356601, 47.560038], [-122.356518, 47.559987], [-122.356387, 47.559898], [-122.35636, 47.559881], [-122.356332, 47.559866], [-122.356302, 47.559851], [-122.356272, 47.559837], [-122.35624, 47.559824], [-122.356208, 47.559813], [-122.356174, 47.559803], [-122.35614, 47.559794], [-122.356106, 47.559787], [-122.35607, 47.559781], [-122.356035, 47.559776], [-122.355879, 47.55975], [-122.355728, 47.559752], [-122.355691, 47.559749], [-122.355655, 47.559745], [-122.35562, 47.55974], [-122.355584, 47.559734], [-122.355548, 47.559728], [-122.355513, 47.559721], [-122.355479, 47.559713], [-122.355444, 47.559704], [-122.35541, 47.559695], [-122.355377, 47.559685], [-122.355344, 47.559675], [-122.355311, 47.559663], [-122.355028, 47.559558], [-122.354745, 47.559452], [-122.354331, 47.559433], [-122.353732, 47.5594], [-122.353054, 47.559407], [-122.352363, 47.55941], [-122.351709, 47.559414], [-122.351707, 47.559307], [-122.351694, 47.558579], [-122.351682, 47.55818], [-122.351682, 47.558155], [-122.351681, 47.558131], [-122.351679, 47.558106], [-122.351677, 47.558081], [-122.351675, 47.558057], [-122.351671, 47.558033], [-122.351668, 47.558008], [-122.351664, 47.557984], [-122.351659, 47.557959], [-122.35165, 47.55792], [-122.351645, 47.557896], [-122.351638, 47.557871], [-122.351631, 47.557847], [-122.351624, 47.557823], [-122.351617, 47.557799], [-122.35161, 47.557775], [-122.351603, 47.557751], [-122.351595, 47.557727], [-122.351587, 47.557703], [-122.351579, 47.557679], [-122.35157, 47.557655], [-122.351561, 47.557631], [-122.351553, 47.557608], [-122.351543, 47.557584], [-122.351534, 47.55756], [-122.351524, 47.557537], [-122.351513, 47.557513], [-122.351503, 47.557489], [-122.351492, 47.557466], [-122.351481, 47.557443], [-122.35147, 47.557419], [-122.351458, 47.557396], [-122.351446, 47.557373], [-122.351434, 47.55735], [-122.351421, 47.557327], [-122.351409, 47.557304], [-122.351395, 47.557281], [-122.351382, 47.557258], [-122.351369, 47.557235], [-122.351355, 47.557212], [-122.351338, 47.557185], [-122.351323, 47.557163], [-122.351309, 47.55714], [-122.351294, 47.557118], [-122.351258, 47.557069], [-122.351231, 47.557032], [-122.351201, 47.556995], [-122.351171, 47.556959], [-122.35114, 47.556923], [-122.351108, 47.556887], [-122.351076, 47.556852], [-122.351042, 47.556817], [-122.351008, 47.556782], [-122.350972, 47.556748], [-122.350936, 47.556715], [-122.350898, 47.556681], [-122.35086, 47.556649], [-122.350821, 47.556616], [-122.350782, 47.556584], [-122.350741, 47.556553], [-122.3507, 47.556522], [-122.350658, 47.556492], [-122.350615, 47.556462], [-122.350551, 47.55642], [-122.350236, 47.556231], [-122.350089, 47.556144], [-122.349742, 47.555902], [-122.349619, 47.555817], [-122.349429, 47.555701], [-122.348687, 47.555191], [-122.348314, 47.554934], [-122.347431, 47.554268], [-122.347111, 47.553958], [-122.347095, 47.553935], [-122.347081, 47.553912], [-122.347066, 47.55389], [-122.347051, 47.553867], [-122.347037, 47.553844], [-122.347022, 47.553821], [-122.347008, 47.553798], [-122.346994, 47.553775], [-122.34698, 47.553752], [-122.346966, 47.553729], [-122.346952, 47.553706], [-122.346938, 47.553683], [-122.346925, 47.55366], [-122.346912, 47.553636], [-122.346898, 47.553613], [-122.346885, 47.55359], [-122.346872, 47.553567], [-122.346859, 47.553543], [-122.346846, 47.55352], [-122.346834, 47.553496], [-122.346821, 47.553473], [-122.346808, 47.55345], [-122.346796, 47.553426], [-122.346784, 47.553403], [-122.346772, 47.553379], [-122.34676, 47.553356], [-122.346748, 47.553332], [-122.346736, 47.553308], [-122.346725, 47.553285], [-122.346713, 47.553261], [-122.346702, 47.553237], [-122.346691, 47.553214], [-122.34668, 47.55319], [-122.346669, 47.553166], [-122.346658, 47.553142], [-122.346647, 47.553118], [-122.346637, 47.553094], [-122.346626, 47.553071], [-122.346616, 47.553047], [-122.346606, 47.553023], [-122.346596, 47.552999], [-122.346586, 47.552975], [-122.346576, 47.552951], [-122.346566, 47.552927], [-122.346557, 47.552903], [-122.346548, 47.552878], [-122.346539, 47.552854], [-122.346529, 47.55283], [-122.34652, 47.552806], [-122.346512, 47.552782], [-122.346503, 47.552758], [-122.346494, 47.552733], [-122.346486, 47.552709], [-122.346477, 47.552685], [-122.346469, 47.552661], [-122.346461, 47.552636], [-122.346453, 47.552612], [-122.346092, 47.551146], [-122.345719, 47.549792], [-122.34509, 47.547141], [-122.344696, 47.545053], [-122.344276, 47.54327], [-122.343538, 47.541447], [-122.342635, 47.540402], [-122.34472, 47.539911], [-122.345284, 47.539745], [-122.345322, 47.539732], [-122.345358, 47.539719], [-122.345394, 47.539705], [-122.345429, 47.539691], [-122.345464, 47.539677], [-122.345499, 47.539662], [-122.345534, 47.539647], [-122.345568, 47.539631], [-122.345601, 47.539615], [-122.345635, 47.539599], [-122.345667, 47.539582], [-122.3457, 47.539565], [-122.345732, 47.539548], [-122.345763, 47.53953], [-122.345794, 47.539512], [-122.345825, 47.539493], [-122.345855, 47.539475], [-122.345885, 47.539455], [-122.345914, 47.539436], [-122.345943, 47.539416], [-122.345971, 47.539396], [-122.345999, 47.539375], [-122.346026, 47.539355], [-122.346053, 47.539333], [-122.346079, 47.539312], [-122.346105, 47.53929], [-122.34613, 47.539268], [-122.346154, 47.539246], [-122.346179, 47.539224], [-122.346202, 47.539201], [-122.346225, 47.539178], [-122.346247, 47.539154], [-122.346269, 47.539131], [-122.34629, 47.539107], [-122.346311, 47.539083], [-122.34633, 47.539059], [-122.34635, 47.539034], [-122.346368, 47.539009], [-122.346387, 47.538984], [-122.346404, 47.538959], [-122.346421, 47.538934], [-122.346437, 47.538908], [-122.346453, 47.538883], [-122.346468, 47.538857], [-122.346482, 47.538831], [-122.346496, 47.538805], [-122.346509, 47.538778], [-122.346521, 47.538752], [-122.346533, 47.538725], [-122.346544, 47.538698], [-122.346554, 47.538671], [-122.346564, 47.538644], [-122.346574, 47.538617], [-122.346582, 47.53859], [-122.34659, 47.538563], [-122.346596, 47.538535], [-122.346603, 47.538508], [-122.346609, 47.53848], [-122.347004, 47.536811], [-122.34716, 47.535989], [-122.347179, 47.534083], [-122.349433, 47.534027], [-122.350552, 47.534012], [-122.351628, 47.53425], [-122.351665, 47.534263], [-122.351702, 47.534274], [-122.351741, 47.534284], [-122.351779, 47.534293], [-122.351819, 47.534301], [-122.351859, 47.534307], [-122.351899, 47.534312], [-122.35194, 47.534316], [-122.351981, 47.534319], [-122.352022, 47.53432], [-122.352063, 47.53432], [-122.352104, 47.534319], [-122.352144, 47.534317], [-122.352185, 47.534313], [-122.352226, 47.534308], [-122.352265, 47.534302], [-122.352305, 47.534294], [-122.352344, 47.534285], [-122.352383, 47.534275], [-122.35242, 47.534264], [-122.352457, 47.534252], [-122.352493, 47.534239], [-122.352528, 47.534224], [-122.352562, 47.534208], [-122.352594, 47.534192], [-122.352626, 47.534174], [-122.353936, 47.533689], [-122.355072, 47.533689], [-122.355064, 47.534266], [-122.355081, 47.534292], [-122.355099, 47.534317], [-122.35512, 47.534341], [-122.355142, 47.534364], [-122.355167, 47.534386], [-122.355193, 47.534407], [-122.355222, 47.534427], [-122.355252, 47.534446], [-122.355284, 47.534464], [-122.355316, 47.53448], [-122.355351, 47.534495], [-122.355387, 47.534509], [-122.355424, 47.534521], [-122.355462, 47.534531], [-122.355501, 47.53454], [-122.35554, 47.534548], [-122.35558, 47.534554], [-122.355621, 47.534558], [-122.355662, 47.534561], [-122.355703, 47.534561], [-122.355744, 47.534561], [-122.355785, 47.534558], [-122.355825, 47.534554], [-122.356758, 47.534561], [-122.356812, 47.534581], [-122.356848, 47.534595], [-122.356883, 47.53461], [-122.356918, 47.534625], [-122.356952, 47.53464], [-122.356985, 47.534656], [-122.357019, 47.534673], [-122.357052, 47.534689], [-122.357084, 47.534706], [-122.357142, 47.534739], [-122.357173, 47.534757], [-122.357203, 47.534776], [-122.357233, 47.534795], [-122.357263, 47.534814], [-122.357292, 47.534834], [-122.35732, 47.534854], [-122.357347, 47.534875], [-122.357373, 47.534897], [-122.357398, 47.534919], [-122.357421, 47.534941], [-122.357444, 47.534965], [-122.357466, 47.534988], [-122.357486, 47.535012], [-122.357505, 47.535037], [-122.357522, 47.535062], [-122.357539, 47.535088], [-122.357554, 47.535113], [-122.357568, 47.53514], [-122.357581, 47.535166], [-122.357592, 47.535193], [-122.357601, 47.53522], [-122.35761, 47.535247], [-122.357617, 47.535274], [-122.357623, 47.535302], [-122.357627, 47.535329], [-122.35763, 47.535357], [-122.357632, 47.535385], [-122.357632, 47.535413], [-122.357631, 47.535441], [-122.357628, 47.535468], [-122.357624, 47.535496], [-122.35759, 47.536168], [-122.357595, 47.536196], [-122.3576, 47.536223], [-122.357605, 47.536251], [-122.357611, 47.536278], [-122.357617, 47.536306], [-122.357623, 47.536333], [-122.357629, 47.536361], [-122.357636, 47.536388], [-122.357644, 47.536416], [-122.357651, 47.536443], [-122.357658, 47.53647], [-122.357667, 47.536497], [-122.357675, 47.536525], [-122.357683, 47.536552], [-122.357692, 47.536579], [-122.357702, 47.536606], [-122.357711, 47.536633], [-122.357721, 47.53666], [-122.357731, 47.536687], [-122.357741, 47.536714], [-122.357752, 47.536741], [-122.357763, 47.536768], [-122.357774, 47.536794], [-122.358126, 47.537448], [-122.358149, 47.537471], [-122.358174, 47.537493], [-122.358199, 47.537515], [-122.358226, 47.537536], [-122.358253, 47.537557], [-122.358282, 47.537576], [-122.358312, 47.537595], [-122.358344, 47.537613], [-122.358376, 47.537631], [-122.358408, 47.537647], [-122.358442, 47.537663], [-122.358477, 47.537678], [-122.358513, 47.537691], [-122.358549, 47.537704], [-122.358586, 47.537716], [-122.358624, 47.537727], [-122.358662, 47.537737], [-122.358701, 47.537746], [-122.358741, 47.537754], [-122.35878, 47.537761], [-122.35882, 47.537767], [-122.358861, 47.537772], [-122.358901, 47.537776], [-122.358942, 47.537779], [-122.358983, 47.537781], [-122.359024, 47.537781], [-122.361128, 47.537974], [-122.36088, 47.539701], [-122.36076, 47.5407], [-122.361197, 47.54195], [-122.361195, 47.543781], [-122.361211, 47.544343], [-122.362365, 47.54583], [-122.363036, 47.546774], [-122.363056, 47.547765], [-122.363024, 47.549874], [-122.363004, 47.55204], [-122.362961, 47.553721]]]]
    },
    "properties": {
      "neighbourhood": "Riverview",
      "neighbourhood_group": "Delridge"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.290523, 47.697453], [-122.290531, 47.697732], [-122.290532, 47.697758], [-122.290533, 47.697784], [-122.290534, 47.69781], [-122.290535, 47.697836], [-122.290537, 47.697862], [-122.290538, 47.697888], [-122.29054, 47.697915], [-122.290542, 47.697941], [-122.290544, 47.697967], [-122.290546, 47.697993], [-122.290548, 47.698019], [-122.29055, 47.698045], [-122.290553, 47.698071], [-122.290555, 47.698097], [-122.290558, 47.698123], [-122.29056, 47.698149], [-122.290563, 47.698175], [-122.290566, 47.698201], [-122.290619, 47.699338], [-122.290672, 47.700485], [-122.290726, 47.701649], [-122.290784, 47.702796], [-122.290843, 47.703943], [-122.290844, 47.703969], [-122.290845, 47.703995], [-122.290847, 47.704021], [-122.290848, 47.704047], [-122.290849, 47.704073], [-122.290851, 47.704099], [-122.290852, 47.704125], [-122.290853, 47.704151], [-122.290854, 47.704177], [-122.290855, 47.704203], [-122.290856, 47.704229], [-122.290857, 47.704256], [-122.290858, 47.704282], [-122.290859, 47.704308], [-122.29086, 47.704334], [-122.290861, 47.70436], [-122.290861, 47.704386], [-122.290862, 47.704412], [-122.290863, 47.704438], [-122.290863, 47.704464], [-122.290864, 47.70449], [-122.290864, 47.704516], [-122.290865, 47.704543], [-122.290865, 47.704569], [-122.290866, 47.704595], [-122.290866, 47.704642], [-122.290867, 47.704668], [-122.290867, 47.704694], [-122.290867, 47.704721], [-122.290867, 47.704747], [-122.290867, 47.704773], [-122.290867, 47.704799], [-122.290867, 47.704825], [-122.290867, 47.704851], [-122.290867, 47.704877], [-122.290867, 47.704903], [-122.290866, 47.704929], [-122.290866, 47.704955], [-122.290866, 47.704982], [-122.290866, 47.705008], [-122.290865, 47.705034], [-122.290865, 47.70506], [-122.290864, 47.705086], [-122.290838, 47.706228], [-122.290797, 47.707366], [-122.290756, 47.708503], [-122.290729, 47.709616], [-122.290692, 47.710722], [-122.290655, 47.71181], [-122.29066, 47.712556], [-122.290658, 47.712581], [-122.290656, 47.712607], [-122.290655, 47.712633], [-122.290655, 47.712659], [-122.290654, 47.712685], [-122.290655, 47.712711], [-122.290657, 47.712737], [-122.290659, 47.712763], [-122.290661, 47.712789], [-122.290664, 47.712815], [-122.290668, 47.712841], [-122.290673, 47.712867], [-122.290678, 47.712893], [-122.290683, 47.712919], [-122.290689, 47.712945], [-122.290696, 47.712971], [-122.290703, 47.712996], [-122.290712, 47.713022], [-122.29072, 47.713047], [-122.290729, 47.713073], [-122.290739, 47.713098], [-122.290749, 47.713123], [-122.29076, 47.713148], [-122.290772, 47.713173], [-122.290784, 47.713198], [-122.290796, 47.713222], [-122.290809, 47.713247], [-122.290958, 47.71349], [-122.291376, 47.714056], [-122.291394, 47.714081], [-122.291409, 47.714102], [-122.291426, 47.714127], [-122.291442, 47.714153], [-122.291455, 47.714175], [-122.291469, 47.714201], [-122.291481, 47.714223], [-122.291494, 47.714249], [-122.291506, 47.714275], [-122.291517, 47.714301], [-122.291527, 47.714325], [-122.291536, 47.714351], [-122.291545, 47.714378], [-122.291553, 47.714405], [-122.291561, 47.714432], [-122.291567, 47.714459], [-122.291572, 47.714483], [-122.291577, 47.71451], [-122.291581, 47.714537], [-122.291584, 47.714564], [-122.291586, 47.714588], [-122.291588, 47.714615], [-122.291589, 47.714643], [-122.291589, 47.71467], [-122.291588, 47.714698], [-122.291587, 47.714725], [-122.291584, 47.714752], [-122.291581, 47.714776], [-122.291577, 47.714803], [-122.291572, 47.714831], [-122.291567, 47.714858], [-122.29156, 47.714885], [-122.291499, 47.715529], [-122.288793, 47.715525], [-122.283898, 47.715567], [-122.283888, 47.717278], [-122.2839, 47.717385], [-122.282976, 47.71739], [-122.282695, 47.717208], [-122.281695, 47.717307], [-122.280922, 47.717499], [-122.280407, 47.717648], [-122.280073, 47.717294], [-122.279486, 47.717056], [-122.279211, 47.716728], [-122.279247, 47.716243], [-122.279214, 47.715766], [-122.278855, 47.715598], [-122.27785, 47.716165], [-122.277826, 47.71612], [-122.277801, 47.716062], [-122.277784, 47.716009], [-122.277767, 47.71596], [-122.277721, 47.715817], [-122.277747, 47.715792], [-122.277691, 47.715658], [-122.277625, 47.715505], [-122.277589, 47.715464], [-122.277566, 47.715416], [-122.277538, 47.715391], [-122.277507, 47.71536], [-122.277476, 47.715301], [-122.277425, 47.715181], [-122.277412, 47.715159], [-122.277387, 47.71512], [-122.277349, 47.715031], [-122.277311, 47.714932], [-122.277303, 47.714906], [-122.277282, 47.714857], [-122.277271, 47.714818], [-122.277258, 47.714781], [-122.277198, 47.714639], [-122.27719, 47.714611], [-122.277183, 47.714557], [-122.277178, 47.714504], [-122.277169, 47.71444], [-122.277169, 47.714352], [-122.277213, 47.714336], [-122.277202, 47.714301], [-122.27719, 47.714259], [-122.277176, 47.714208], [-122.277126, 47.714092], [-122.277092, 47.714011], [-122.277075, 47.713979], [-122.277056, 47.713943], [-122.276997, 47.713809], [-122.27697, 47.713741], [-122.276942, 47.713643], [-122.276922, 47.713597], [-122.276905, 47.713554], [-122.276889, 47.713504], [-122.276854, 47.713418], [-122.276841, 47.71337], [-122.276794, 47.713257], [-122.276777, 47.713206], [-122.276762, 47.713159], [-122.27672, 47.713053], [-122.27668, 47.712935], [-122.276665, 47.712891], [-122.276652, 47.712857], [-122.276628, 47.712759], [-122.276584, 47.712622], [-122.276543, 47.712523], [-122.276522, 47.712497], [-122.276513, 47.712458], [-122.276495, 47.712398], [-122.276475, 47.712349], [-122.276466, 47.712316], [-122.276432, 47.712258], [-122.276426, 47.712183], [-122.276417, 47.712156], [-122.276409, 47.712101], [-122.276501, 47.712082], [-122.276505, 47.712029], [-122.276514, 47.712004], [-122.276526, 47.711974], [-122.276546, 47.711914], [-122.276541, 47.711852], [-122.276539, 47.711802], [-122.276532, 47.711772], [-122.276528, 47.71172], [-122.276522, 47.711681], [-122.27651, 47.711587], [-122.276522, 47.711562], [-122.276515, 47.71152], [-122.276507, 47.711484], [-122.276506, 47.711458], [-122.276477, 47.711436], [-122.276435, 47.711428], [-122.276423, 47.711399], [-122.276407, 47.711345], [-122.276399, 47.7113], [-122.2764, 47.71127], [-122.276412, 47.711246], [-122.276408, 47.711192], [-122.2764, 47.711164], [-122.276391, 47.711133], [-122.276385, 47.711095], [-122.276366, 47.711046], [-122.276338, 47.710955], [-122.276333, 47.710927], [-122.276374, 47.710918], [-122.27637, 47.710892], [-122.276326, 47.710773], [-122.276315, 47.710724], [-122.276299, 47.710683], [-122.276274, 47.71062], [-122.27623, 47.710519], [-122.276168, 47.710374], [-122.276195, 47.710358], [-122.276147, 47.71032], [-122.276109, 47.710232], [-122.276068, 47.710106], [-122.276046, 47.710082], [-122.276018, 47.710066], [-122.275986, 47.710047], [-122.275927, 47.709908], [-122.275989, 47.709897], [-122.275987, 47.709871], [-122.275977, 47.709841], [-122.275955, 47.709757], [-122.275946, 47.709696], [-122.275946, 47.709665], [-122.275942, 47.709638], [-122.275924, 47.709594], [-122.275829, 47.709367], [-122.275771, 47.709232], [-122.275776, 47.709204], [-122.275743, 47.709143], [-122.275714, 47.709095], [-122.275679, 47.70908], [-122.275659, 47.709036], [-122.275626, 47.708979], [-122.275612, 47.708955], [-122.275586, 47.708938], [-122.275568, 47.708897], [-122.275558, 47.708868], [-122.27555, 47.70882], [-122.275536, 47.708776], [-122.275528, 47.70875], [-122.275515, 47.708708], [-122.275499, 47.708659], [-122.275484, 47.708595], [-122.27549, 47.708558], [-122.275481, 47.708495], [-122.275465, 47.708458], [-122.275442, 47.708424], [-122.275414, 47.708359], [-122.275361, 47.708296], [-122.275331, 47.708236], [-122.2753, 47.708183], [-122.275292, 47.708155], [-122.275341, 47.70815], [-122.27533, 47.708066], [-122.275229, 47.708071], [-122.275224, 47.708046], [-122.275204, 47.70799], [-122.27518, 47.707916], [-122.275129, 47.707925], [-122.27511, 47.707872], [-122.27509, 47.70781], [-122.275061, 47.707731], [-122.275108, 47.707709], [-122.275082, 47.707639], [-122.275032, 47.707621], [-122.275018, 47.707557], [-122.275074, 47.707548], [-122.275063, 47.707501], [-122.275047, 47.707437], [-122.275025, 47.707357], [-122.274999, 47.707296], [-122.274955, 47.707301], [-122.274943, 47.707275], [-122.274911, 47.707204], [-122.274898, 47.707144], [-122.274887, 47.707082], [-122.274875, 47.707018], [-122.274859, 47.70696], [-122.274858, 47.706924], [-122.274906, 47.706898], [-122.274907, 47.706869], [-122.274884, 47.706849], [-122.274893, 47.706794], [-122.274897, 47.706735], [-122.274902, 47.706679], [-122.274915, 47.706621], [-122.274923, 47.706567], [-122.274938, 47.706507], [-122.274944, 47.706442], [-122.274952, 47.706379], [-122.274957, 47.706324], [-122.274954, 47.706259], [-122.274959, 47.706178], [-122.274962, 47.706104], [-122.274928, 47.706026], [-122.27493, 47.705994], [-122.274929, 47.705936], [-122.274924, 47.705849], [-122.27492, 47.70578], [-122.274916, 47.705705], [-122.274966, 47.705698], [-122.274951, 47.705673], [-122.274869, 47.705649], [-122.274862, 47.70559], [-122.274852, 47.705529], [-122.274855, 47.705471], [-122.274854, 47.705394], [-122.274817, 47.705386], [-122.274814, 47.705356], [-122.274807, 47.7053], [-122.274808, 47.705271], [-122.274863, 47.705264], [-122.274886, 47.705231], [-122.274882, 47.705166], [-122.274844, 47.70516], [-122.27477, 47.705154], [-122.274764, 47.70513], [-122.274742, 47.705055], [-122.274704, 47.704991], [-122.274691, 47.704946], [-122.274682, 47.704913], [-122.274662, 47.704845], [-122.274647, 47.704802], [-122.274649, 47.704767], [-122.27471, 47.704767], [-122.274704, 47.704737], [-122.274661, 47.704738], [-122.274563, 47.704715], [-122.274541, 47.704652], [-122.274507, 47.704587], [-122.27449, 47.704492], [-122.274484, 47.704417], [-122.27456, 47.704388], [-122.274533, 47.704361], [-122.274481, 47.704316], [-122.274419, 47.704271], [-122.274373, 47.704249], [-122.274332, 47.704219], [-122.274334, 47.704162], [-122.274324, 47.704134], [-122.27431, 47.704077], [-122.274302, 47.70402], [-122.274286, 47.703968], [-122.274275, 47.703902], [-122.274265, 47.703865], [-122.274247, 47.703804], [-122.274239, 47.703771], [-122.274185, 47.703766], [-122.274168, 47.703732], [-122.274144, 47.70367], [-122.274116, 47.703618], [-122.274087, 47.703552], [-122.274074, 47.703501], [-122.274058, 47.703437], [-122.274038, 47.703386], [-122.273988, 47.703332], [-122.273986, 47.703271], [-122.273987, 47.703206], [-122.273915, 47.703208], [-122.273801, 47.703198], [-122.273777, 47.703159], [-122.273747, 47.703105], [-122.273724, 47.703061], [-122.273697, 47.703006], [-122.27366, 47.702979], [-122.273671, 47.702916], [-122.273616, 47.702854], [-122.273583, 47.702835], [-122.273565, 47.702797], [-122.273539, 47.702737], [-122.273494, 47.702691], [-122.273423, 47.702632], [-122.273439, 47.70261], [-122.273391, 47.702593], [-122.273348, 47.702504], [-122.273382, 47.702497], [-122.273372, 47.702474], [-122.273378, 47.702445], [-122.273318, 47.702447], [-122.273307, 47.702421], [-122.273283, 47.702355], [-122.273264, 47.702288], [-122.273243, 47.702231], [-122.273225, 47.702161], [-122.273202, 47.702104], [-122.273205, 47.702072], [-122.27319, 47.70202], [-122.27317, 47.701945], [-122.273146, 47.701883], [-122.273122, 47.701816], [-122.273099, 47.701759], [-122.273076, 47.701692], [-122.273111, 47.701678], [-122.27306, 47.701643], [-122.273043, 47.701597], [-122.273037, 47.701568], [-122.273024, 47.701495], [-122.273012, 47.701457], [-122.272992, 47.701407], [-122.272974, 47.701319], [-122.27296, 47.701261], [-122.272955, 47.701219], [-122.272949, 47.701161], [-122.272952, 47.701095], [-122.272946, 47.701052], [-122.272929, 47.700947], [-122.27291, 47.700851], [-122.272901, 47.70077], [-122.272885, 47.700686], [-122.272884, 47.700629], [-122.272867, 47.700553], [-122.272817, 47.70055], [-122.272809, 47.70051], [-122.272795, 47.700433], [-122.272775, 47.700354], [-122.272765, 47.700307], [-122.272736, 47.700221], [-122.272731, 47.700186], [-122.272725, 47.700159], [-122.272757, 47.70014], [-122.272721, 47.700116], [-122.272708, 47.700061], [-122.272684, 47.699977], [-122.272669, 47.699927], [-122.27264, 47.699902], [-122.27261, 47.699826], [-122.272597, 47.699771], [-122.272584, 47.699709], [-122.27259, 47.699637], [-122.272581, 47.699598], [-122.272549, 47.699547], [-122.272537, 47.699465], [-122.272535, 47.699396], [-122.272526, 47.699304], [-122.272524, 47.699224], [-122.27252, 47.699161], [-122.272522, 47.699103], [-122.27252, 47.699055], [-122.27252, 47.698995], [-122.2725, 47.698942], [-122.272501, 47.698891], [-122.272512, 47.698793], [-122.272506, 47.698737], [-122.2725, 47.698653], [-122.272503, 47.698611], [-122.272499, 47.698555], [-122.27247, 47.698529], [-122.272457, 47.698504], [-122.272466, 47.698465], [-122.272486, 47.698418], [-122.272513, 47.698347], [-122.27253, 47.698284], [-122.272545, 47.698225], [-122.272564, 47.698163], [-122.272592, 47.698069], [-122.272612, 47.697973], [-122.272623, 47.697947], [-122.272639, 47.69787], [-122.272641, 47.697807], [-122.272636, 47.69771], [-122.272635, 47.697652], [-122.272634, 47.697589], [-122.272639, 47.697516], [-122.272656, 47.697406], [-122.27266, 47.697321], [-122.272659, 47.697276], [-122.272665, 47.69724], [-122.272684, 47.697166], [-122.272694, 47.697081], [-122.272692, 47.697039], [-122.272687, 47.69697], [-122.272675, 47.696888], [-122.272654, 47.696821], [-122.272628, 47.696762], [-122.272604, 47.696692], [-122.272584, 47.696654], [-122.27257, 47.696618], [-122.272549, 47.696589], [-122.272483, 47.696521], [-122.272459, 47.696503], [-122.272428, 47.696484], [-122.272391, 47.696465], [-122.272358, 47.696454], [-122.272322, 47.696422], [-122.272293, 47.696381], [-122.272273, 47.696315], [-122.272256, 47.696252], [-122.272236, 47.696173], [-122.272228, 47.696115], [-122.272218, 47.696058], [-122.2722, 47.695987], [-122.272183, 47.695926], [-122.272157, 47.695877], [-122.272127, 47.695828], [-122.272073, 47.695759], [-122.27203, 47.695718], [-122.271975, 47.695674], [-122.271911, 47.695632], [-122.271845, 47.695615], [-122.27179, 47.695612], [-122.271743, 47.695593], [-122.271728, 47.695558], [-122.271729, 47.695519], [-122.27171, 47.695475], [-122.271677, 47.695399], [-122.271644, 47.695323], [-122.271598, 47.695259], [-122.271533, 47.695193], [-122.271468, 47.69513], [-122.271445, 47.695102], [-122.27143, 47.695075], [-122.271423, 47.69505], [-122.271422, 47.69501], [-122.271456, 47.694981], [-122.271537, 47.694955], [-122.271635, 47.694948], [-122.271679, 47.694954], [-122.27178, 47.694956], [-122.271818, 47.694953], [-122.271875, 47.694939], [-122.271985, 47.694926], [-122.272179, 47.69491], [-122.272361, 47.694871], [-122.272723, 47.694835], [-122.272887, 47.694825], [-122.272969, 47.694834], [-122.27305, 47.694862], [-122.273113, 47.694889], [-122.273201, 47.694936], [-122.273314, 47.694983], [-122.273428, 47.695015], [-122.273521, 47.695041], [-122.273603, 47.695039], [-122.273424, 47.694982], [-122.273206, 47.694899], [-122.273114, 47.694851], [-122.273053, 47.694815], [-122.272968, 47.694788], [-122.272872, 47.694774], [-122.272732, 47.694782], [-122.272439, 47.694806], [-122.272133, 47.694856], [-122.271785, 47.69491], [-122.271762, 47.694846], [-122.271741, 47.694777], [-122.271777, 47.694769], [-122.27186, 47.694753], [-122.271862, 47.694723], [-122.271869, 47.694698], [-122.271874, 47.694665], [-122.271872, 47.694624], [-122.271865, 47.694584], [-122.271857, 47.694543], [-122.271841, 47.694508], [-122.271808, 47.694473], [-122.271794, 47.694446], [-122.2718, 47.694404], [-122.27177, 47.694275], [-122.271745, 47.694243], [-122.271747, 47.694199], [-122.271715, 47.694146], [-122.271659, 47.694081], [-122.271623, 47.694038], [-122.271592, 47.694019], [-122.271524, 47.694002], [-122.2715, 47.693968], [-122.271451, 47.69393], [-122.271382, 47.693909], [-122.271286, 47.693897], [-122.271244, 47.693907], [-122.271203, 47.693911], [-122.271178, 47.693872], [-122.271162, 47.693804], [-122.271135, 47.693788], [-122.271086, 47.693779], [-122.271006, 47.69375], [-122.270946, 47.693718], [-122.270894, 47.693689], [-122.270857, 47.693672], [-122.270804, 47.693657], [-122.270763, 47.693629], [-122.270734, 47.693613], [-122.270676, 47.693589], [-122.27059, 47.693553], [-122.270512, 47.69352], [-122.270434, 47.693487], [-122.270317, 47.693431], [-122.270235, 47.693399], [-122.270172, 47.69337], [-122.270131, 47.693349], [-122.270091, 47.693332], [-122.269976, 47.693289], [-122.269924, 47.693249], [-122.26985, 47.693204], [-122.269814, 47.693193], [-122.26978, 47.693185], [-122.26975, 47.69316], [-122.269698, 47.693121], [-122.269639, 47.69309], [-122.269573, 47.693046], [-122.269511, 47.692995], [-122.269455, 47.692951], [-122.269384, 47.692908], [-122.269351, 47.692885], [-122.269284, 47.692829], [-122.26923, 47.692789], [-122.269166, 47.692747], [-122.26914, 47.692729], [-122.269091, 47.692703], [-122.269011, 47.692662], [-122.26898, 47.692643], [-122.268926, 47.692601], [-122.268884, 47.692576], [-122.268833, 47.692546], [-122.268769, 47.692508], [-122.268725, 47.692485], [-122.268646, 47.69244], [-122.268584, 47.6924], [-122.268525, 47.692355], [-122.268502, 47.692336], [-122.268439, 47.69229], [-122.268344, 47.692235], [-122.268253, 47.692201], [-122.268147, 47.692169], [-122.268062, 47.69213], [-122.268018, 47.692096], [-122.267951, 47.692038], [-122.267896, 47.691985], [-122.267833, 47.691914], [-122.26778, 47.691849], [-122.26773, 47.691786], [-122.267681, 47.691738], [-122.267659, 47.691718], [-122.267653, 47.691694], [-122.267664, 47.691671], [-122.267686, 47.691631], [-122.267689, 47.691605], [-122.267675, 47.691565], [-122.26767, 47.691517], [-122.267665, 47.691488], [-122.267657, 47.691429], [-122.267651, 47.691392], [-122.267634, 47.691332], [-122.267609, 47.691197], [-122.267483, 47.690994], [-122.267352, 47.690795], [-122.26732, 47.690759], [-122.267282, 47.690718], [-122.267241, 47.690681], [-122.26718, 47.690611], [-122.267139, 47.690594], [-122.267104, 47.690571], [-122.267075, 47.690533], [-122.267044, 47.6905], [-122.266998, 47.690482], [-122.26695, 47.69047], [-122.266886, 47.690422], [-122.266853, 47.690395], [-122.266797, 47.690346], [-122.267311, 47.690345], [-122.267524, 47.690343], [-122.268003, 47.690338], [-122.268067, 47.690428], [-122.268279, 47.690707], [-122.268444, 47.690908], [-122.268816, 47.691215], [-122.269231, 47.691455], [-122.269773, 47.691814], [-122.270243, 47.692125], [-122.270648, 47.692354], [-122.271205, 47.692616], [-122.271871, 47.692813], [-122.271889, 47.692766], [-122.271902, 47.692741], [-122.271929, 47.69272], [-122.271985, 47.69269], [-122.272021, 47.692677], [-122.27206, 47.692668], [-122.2721, 47.692662], [-122.272136, 47.69266], [-122.272177, 47.692662], [-122.272212, 47.692666], [-122.272251, 47.692674], [-122.272288, 47.692687], [-122.272318, 47.6927], [-122.272349, 47.692718], [-122.272373, 47.692736], [-122.272842, 47.692819], [-122.272883, 47.692818], [-122.272924, 47.692814], [-122.272965, 47.692809], [-122.273005, 47.692803], [-122.273077, 47.692786], [-122.273115, 47.692775], [-122.273152, 47.692762], [-122.273182, 47.69275], [-122.273216, 47.692734], [-122.273276, 47.692702], [-122.273306, 47.692682], [-122.27333, 47.692665], [-122.273357, 47.692643], [-122.273381, 47.692621], [-122.273403, 47.692597], [-122.273427, 47.692575], [-122.273455, 47.692554], [-122.273511, 47.692519], [-122.273544, 47.692502], [-122.27361, 47.692476], [-122.273642, 47.692465], [-122.27368, 47.692455], [-122.27372, 47.692447], [-122.273755, 47.692441], [-122.273795, 47.692437], [-122.273836, 47.692434], [-122.274459, 47.692376], [-122.275041, 47.692222], [-122.275356, 47.692138], [-122.275441, 47.692194], [-122.275475, 47.692205], [-122.275512, 47.692216], [-122.275545, 47.692226], [-122.275578, 47.692235], [-122.275644, 47.692251], [-122.275684, 47.69226], [-122.275718, 47.692267], [-122.275758, 47.692274], [-122.275797, 47.692281], [-122.275832, 47.692287], [-122.275872, 47.692292], [-122.275913, 47.692297], [-122.275948, 47.692301], [-122.275989, 47.692305], [-122.27603, 47.692308], [-122.276071, 47.69231], [-122.276112, 47.692312], [-122.276148, 47.692313], [-122.276189, 47.692313], [-122.27626, 47.692312], [-122.276301, 47.692311], [-122.276337, 47.692309], [-122.276378, 47.692307], [-122.276419, 47.692303], [-122.276454, 47.6923], [-122.27653, 47.692291], [-122.276565, 47.692286], [-122.276605, 47.69228], [-122.276644, 47.692272], [-122.276679, 47.692266], [-122.276718, 47.692258], [-122.276752, 47.69225], [-122.276791, 47.692241], [-122.276829, 47.692231], [-122.276867, 47.69222], [-122.277263, 47.692039], [-122.277722, 47.691798], [-122.278045, 47.691629], [-122.278075, 47.691617], [-122.278112, 47.691603], [-122.278149, 47.691592], [-122.278188, 47.691583], [-122.278228, 47.691575], [-122.278263, 47.691571], [-122.278304, 47.691567], [-122.278345, 47.691566], [-122.278381, 47.691566], [-122.278422, 47.691569], [-122.278492, 47.691578], [-122.278531, 47.691586], [-122.278569, 47.691596], [-122.278602, 47.691606], [-122.278638, 47.69162], [-122.278672, 47.691635], [-122.278727, 47.691665], [-122.278756, 47.691685], [-122.278783, 47.691706], [-122.278808, 47.691729], [-122.278829, 47.691753], [-122.278849, 47.691777], [-122.278864, 47.691803], [-122.278878, 47.691829], [-122.279188, 47.692253], [-122.279986, 47.692936], [-122.280006, 47.694895], [-122.280008, 47.695602], [-122.28002, 47.696715], [-122.280032, 47.697378], [-122.28155, 47.697396], [-122.283998, 47.697413], [-122.28678, 47.697425], [-122.290381, 47.697452], [-122.290473, 47.697453], [-122.290523, 47.697453]], [[-122.273979, 47.695226], [-122.274072, 47.695294], [-122.274153, 47.695342], [-122.27421, 47.695358], [-122.274277, 47.69536], [-122.27434, 47.695363], [-122.274411, 47.69537], [-122.274519, 47.695383], [-122.274626, 47.695408], [-122.274698, 47.695435], [-122.274808, 47.695452], [-122.274883, 47.695468], [-122.274968, 47.695514], [-122.275056, 47.695564], [-122.275087, 47.695549], [-122.275043, 47.695508], [-122.27495, 47.695453], [-122.274865, 47.695426], [-122.274762, 47.695401], [-122.274628, 47.695368], [-122.274521, 47.695352], [-122.27436, 47.695337], [-122.274285, 47.695332], [-122.274221, 47.695326], [-122.274166, 47.695306], [-122.274092, 47.695264], [-122.273979, 47.695226]]]]
    },
    "properties": {
      "neighbourhood": "Matthews Beach",
      "neighbourhood_group": "Lake City"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.315176, 47.643033], [-122.317055, 47.642839], [-122.318102, 47.642706], [-122.319901, 47.642476], [-122.321582, 47.642312], [-122.322182, 47.642222], [-122.322219, 47.642212], [-122.322255, 47.642202], [-122.32229, 47.64219], [-122.322325, 47.642177], [-122.322356, 47.642165], [-122.322389, 47.64215], [-122.322424, 47.642133], [-122.322459, 47.642114], [-122.322492, 47.642095], [-122.322523, 47.642074], [-122.322554, 47.642053], [-122.322582, 47.64203], [-122.32261, 47.642007], [-122.322635, 47.641983], [-122.322657, 47.641961], [-122.322676, 47.641937], [-122.322694, 47.641914], [-122.322711, 47.641889], [-122.322725, 47.641865], [-122.322833, 47.641471], [-122.322804, 47.642935], [-122.322747, 47.644521], [-122.32269, 47.646112], [-122.322619, 47.647699], [-122.322575, 47.649255], [-122.322566, 47.649917], [-122.321797, 47.650894], [-122.321069, 47.651846], [-122.320865, 47.652113], [-122.320829, 47.652106], [-122.320758, 47.65209], [-122.320726, 47.652078], [-122.320685, 47.652054], [-122.320651, 47.652022], [-122.320625, 47.651981], [-122.320582, 47.651917], [-122.320563, 47.651882], [-122.320531, 47.651825], [-122.32048, 47.65178], [-122.320457, 47.65175], [-122.320436, 47.651724], [-122.320409, 47.651697], [-122.320379, 47.651676], [-122.320287, 47.651614], [-122.320263, 47.651592], [-122.320179, 47.651514], [-122.320114, 47.651465], [-122.320088, 47.651445], [-122.320055, 47.651412], [-122.320032, 47.651386], [-122.319996, 47.651335], [-122.319954, 47.651289], [-122.319926, 47.651253], [-122.319908, 47.651223], [-122.319869, 47.651169], [-122.31985, 47.651141], [-122.319801, 47.65108], [-122.319774, 47.651055], [-122.319731, 47.651007], [-122.319688, 47.650954], [-122.319668, 47.650934], [-122.319611, 47.650888], [-122.319585, 47.650868], [-122.319563, 47.650847], [-122.319508, 47.650786], [-122.319488, 47.650763], [-122.319464, 47.650726], [-122.319433, 47.650695], [-122.319362, 47.650593], [-122.319339, 47.650564], [-122.319299, 47.650514], [-122.319272, 47.65048], [-122.319223, 47.650431], [-122.319186, 47.650403], [-122.31912, 47.650369], [-122.319082, 47.650315], [-122.319051, 47.650285], [-122.319021, 47.650254], [-122.318975, 47.650209], [-122.318951, 47.650173], [-122.31891, 47.650118], [-122.31887, 47.650063], [-122.318844, 47.650035], [-122.318817, 47.650004], [-122.318784, 47.649969], [-122.318725, 47.649898], [-122.318696, 47.649868], [-122.318656, 47.64982], [-122.318618, 47.649786], [-122.318566, 47.649739], [-122.318553, 47.649716], [-122.318538, 47.649656], [-122.318519, 47.649633], [-122.318487, 47.649601], [-122.31845, 47.649567], [-122.318416, 47.649552], [-122.318372, 47.649551], [-122.318335, 47.649543], [-122.318307, 47.649524], [-122.318277, 47.649496], [-122.318244, 47.649471], [-122.318215, 47.649445], [-122.31818, 47.649409], [-122.318156, 47.649381], [-122.318119, 47.649339], [-122.318095, 47.649306], [-122.318063, 47.649271], [-122.318032, 47.649231], [-122.317996, 47.649188], [-122.317981, 47.649146], [-122.31799, 47.64911], [-122.317968, 47.64909], [-122.31793, 47.649056], [-122.31791, 47.649036], [-122.317859, 47.649013], [-122.317817, 47.648983], [-122.317785, 47.648951], [-122.31775, 47.64892], [-122.317719, 47.648892], [-122.317699, 47.648871], [-122.317681, 47.648848], [-122.317667, 47.64882], [-122.317657, 47.648797], [-122.317593, 47.648705], [-122.317558, 47.648687], [-122.317535, 47.648667], [-122.317508, 47.648636], [-122.317472, 47.648585], [-122.317452, 47.648551], [-122.31742, 47.648538], [-122.317365, 47.648531], [-122.317334, 47.648516], [-122.317297, 47.648481], [-122.317265, 47.648445], [-122.317236, 47.648414], [-122.317213, 47.648384], [-122.31719, 47.648358], [-122.31716, 47.648325], [-122.317141, 47.648303], [-122.317095, 47.648244], [-122.317039, 47.648204], [-122.316994, 47.648193], [-122.31695, 47.648175], [-122.316916, 47.648164], [-122.316907, 47.64814], [-122.316899, 47.64811], [-122.316865, 47.648055], [-122.316841, 47.648024], [-122.316807, 47.647984], [-122.316785, 47.647949], [-122.316736, 47.647897], [-122.316713, 47.647861], [-122.316688, 47.647829], [-122.316661, 47.647801], [-122.316631, 47.647787], [-122.316603, 47.647766], [-122.31659, 47.647741], [-122.316564, 47.647703], [-122.316548, 47.647676], [-122.316543, 47.64765], [-122.316526, 47.64762], [-122.316504, 47.647584], [-122.31648, 47.647552], [-122.316462, 47.647529], [-122.316433, 47.647491], [-122.316416, 47.647465], [-122.316395, 47.647434], [-122.316364, 47.647388], [-122.316332, 47.647344], [-122.316283, 47.64728], [-122.316259, 47.647228], [-122.316237, 47.647176], [-122.316227, 47.647141], [-122.316221, 47.647107], [-122.316212, 47.647055], [-122.316206, 47.647031], [-122.316206, 47.646992], [-122.316207, 47.64694], [-122.316207, 47.646897], [-122.316206, 47.646861], [-122.316212, 47.646812], [-122.316213, 47.646748], [-122.316235, 47.646689], [-122.316245, 47.646661], [-122.316246, 47.646633], [-122.316261, 47.646568], [-122.316266, 47.646536], [-122.316265, 47.646486], [-122.316264, 47.646417], [-122.316244, 47.64635], [-122.316239, 47.646322], [-122.316238, 47.646284], [-122.316219, 47.646256], [-122.316219, 47.646217], [-122.316219, 47.646178], [-122.316223, 47.646142], [-122.316186, 47.646138], [-122.316154, 47.646122], [-122.316156, 47.646095], [-122.316153, 47.646043], [-122.316154, 47.645997], [-122.316156, 47.645936], [-122.316152, 47.645863], [-122.316153, 47.64581], [-122.31615, 47.645747], [-122.31616, 47.645707], [-122.316172, 47.645674], [-122.31618, 47.645617], [-122.31619, 47.645562], [-122.316192, 47.645507], [-122.316192, 47.64545], [-122.316191, 47.645394], [-122.316216, 47.645362], [-122.316224, 47.645331], [-122.316229, 47.645281], [-122.316231, 47.645254], [-122.316266, 47.645215], [-122.31627, 47.645166], [-122.316265, 47.64514], [-122.316282, 47.645104], [-122.316301, 47.645069], [-122.316308, 47.645029], [-122.31633, 47.644973], [-122.316373, 47.644947], [-122.316398, 47.644915], [-122.316403, 47.644845], [-122.3164, 47.644818], [-122.316389, 47.644738], [-122.316402, 47.644709], [-122.316462, 47.64471], [-122.316481, 47.644688], [-122.316487, 47.644655], [-122.316492, 47.644607], [-122.316476, 47.644556], [-122.316422, 47.644511], [-122.316394, 47.644489], [-122.316371, 47.644454], [-122.316362, 47.644396], [-122.316361, 47.644283], [-122.316371, 47.644228], [-122.316368, 47.644146], [-122.316359, 47.644046], [-122.316341, 47.643994], [-122.316305, 47.643938], [-122.316235, 47.643802], [-122.316194, 47.643804], [-122.316094, 47.643805], [-122.315954, 47.6438], [-122.315898, 47.643798], [-122.315895, 47.643737], [-122.315891, 47.643671], [-122.31589, 47.6436], [-122.315889, 47.64354], [-122.315871, 47.6435], [-122.315853, 47.643473], [-122.315833, 47.643445], [-122.31581, 47.643407], [-122.315803, 47.643351], [-122.315787, 47.643318], [-122.315747, 47.643305], [-122.31566, 47.64329], [-122.315587, 47.643281], [-122.315515, 47.643264], [-122.315454, 47.643236], [-122.315396, 47.643206], [-122.315318, 47.643182], [-122.315275, 47.643171], [-122.315238, 47.643156], [-122.315215, 47.643135], [-122.315209, 47.643105], [-122.315194, 47.643065], [-122.315176, 47.643033]]]]
    },
    "properties": {
      "neighbourhood": "Portage Bay",
      "neighbourhood_group": "Capitol Hill"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.290478, 47.683047], [-122.290376, 47.683047], [-122.288173, 47.683043], [-122.28598, 47.683045], [-122.285162, 47.683043], [-122.285078, 47.681948], [-122.284987, 47.679629], [-122.284968, 47.678024], [-122.284918, 47.676245], [-122.284879, 47.675774], [-122.28333, 47.675811], [-122.279945, 47.675785], [-122.279539, 47.675784], [-122.279527, 47.67472], [-122.279513, 47.673943], [-122.279502, 47.672963], [-122.279483, 47.671994], [-122.279474, 47.671201], [-122.279444, 47.668135], [-122.279443, 47.66796], [-122.279476, 47.667948], [-122.279506, 47.667933], [-122.279535, 47.667919], [-122.279564, 47.667904], [-122.279593, 47.667889], [-122.279622, 47.667874], [-122.27965, 47.667858], [-122.279677, 47.667842], [-122.279705, 47.667826], [-122.279732, 47.667809], [-122.279759, 47.667792], [-122.279785, 47.667775], [-122.27981, 47.667758], [-122.279836, 47.66774], [-122.279861, 47.667722], [-122.279886, 47.667704], [-122.27991, 47.667686], [-122.279934, 47.667667], [-122.279982, 47.667628], [-122.280006, 47.667607], [-122.280029, 47.667586], [-122.280286, 47.667346], [-122.281055, 47.666602], [-122.281825, 47.665863], [-122.282595, 47.665123], [-122.283364, 47.664381], [-122.284141, 47.663639], [-122.284962, 47.662845], [-122.285763, 47.662075], [-122.285831, 47.662026], [-122.285885, 47.661989], [-122.28594, 47.661952], [-122.285996, 47.661916], [-122.286054, 47.66188], [-122.286111, 47.661846], [-122.28617, 47.661812], [-122.28623, 47.661778], [-122.286291, 47.661745], [-122.286353, 47.661713], [-122.286415, 47.661682], [-122.286478, 47.661652], [-122.286542, 47.661622], [-122.286607, 47.661593], [-122.286672, 47.661565], [-122.286738, 47.661537], [-122.286805, 47.661511], [-122.286876, 47.661483], [-122.286907, 47.661471], [-122.286938, 47.661458], [-122.286969, 47.661446], [-122.287002, 47.661434], [-122.287034, 47.661422], [-122.287066, 47.661411], [-122.287099, 47.6614], [-122.287132, 47.66139], [-122.287165, 47.66138], [-122.287199, 47.66137], [-122.287232, 47.66136], [-122.287266, 47.661351], [-122.2873, 47.661342], [-122.287334, 47.661334], [-122.287418, 47.661313], [-122.287493, 47.661296], [-122.287568, 47.66128], [-122.287644, 47.661264], [-122.28772, 47.66125], [-122.287797, 47.661236], [-122.287874, 47.661223], [-122.287951, 47.661212], [-122.288029, 47.661201], [-122.288107, 47.661191], [-122.288185, 47.661182], [-122.288263, 47.661174], [-122.288342, 47.661166], [-122.288421, 47.66116], [-122.288499, 47.661155], [-122.288578, 47.66115], [-122.288657, 47.661147], [-122.288737, 47.661144], [-122.288809, 47.661142], [-122.289198, 47.661145], [-122.290151, 47.661175], [-122.290379, 47.661182], [-122.2906, 47.661186], [-122.291601, 47.66121], [-122.292603, 47.661234], [-122.292869, 47.661237], [-122.290853, 47.662298], [-122.290141, 47.662639], [-122.290175, 47.664711], [-122.290167, 47.664866], [-122.290168, 47.665632], [-122.290177, 47.666668], [-122.290192, 47.667891], [-122.290181, 47.669095], [-122.290235, 47.670199], [-122.290242, 47.670501], [-122.290224, 47.671488], [-122.290236, 47.672498], [-122.290249, 47.67348], [-122.290255, 47.675117], [-122.290305, 47.676864], [-122.290365, 47.678705], [-122.290422, 47.680744], [-122.290436, 47.681229], [-122.290478, 47.683047]]]]
    },
    "properties": {
      "neighbourhood": "Bryant",
      "neighbourhood_group": "Other neighborhoods"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.315176, 47.643033], [-122.31516, 47.643005], [-122.315149, 47.642953], [-122.31515, 47.64291], [-122.315165, 47.642868], [-122.315162, 47.64281], [-122.315112, 47.642779], [-122.31508, 47.642757], [-122.315042, 47.642719], [-122.31499, 47.642668], [-122.314925, 47.642616], [-122.314862, 47.642572], [-122.314792, 47.642516], [-122.31472, 47.642472], [-122.314665, 47.642439], [-122.314608, 47.642392], [-122.314534, 47.642338], [-122.314454, 47.642286], [-122.31437, 47.642229], [-122.314296, 47.642197], [-122.314245, 47.642214], [-122.314189, 47.642232], [-122.314094, 47.642243], [-122.314056, 47.642234], [-122.31398, 47.642233], [-122.313944, 47.64223], [-122.313751, 47.642226], [-122.313716, 47.642216], [-122.31368, 47.642195], [-122.313649, 47.642153], [-122.313619, 47.642115], [-122.313599, 47.642092], [-122.313551, 47.642035], [-122.313495, 47.641989], [-122.313455, 47.641951], [-122.313418, 47.641925], [-122.313338, 47.641897], [-122.313309, 47.641875], [-122.313255, 47.641818], [-122.313232, 47.641787], [-122.313204, 47.641757], [-122.313172, 47.641744], [-122.313019, 47.641672], [-122.312969, 47.641666], [-122.312953, 47.641692], [-122.312963, 47.641719], [-122.312993, 47.641777], [-122.313011, 47.641828], [-122.313003, 47.641864], [-122.31297, 47.641906], [-122.312933, 47.64193], [-122.312899, 47.641939], [-122.312859, 47.641936], [-122.312767, 47.641916], [-122.312722, 47.641904], [-122.312581, 47.641849], [-122.312533, 47.641835], [-122.312469, 47.64182], [-122.312422, 47.64182], [-122.312385, 47.641815], [-122.312325, 47.641806], [-122.31227, 47.641799], [-122.312228, 47.641784], [-122.312206, 47.64175], [-122.312202, 47.641653], [-122.3122, 47.641526], [-122.312194, 47.641493], [-122.312172, 47.641447], [-122.312136, 47.641421], [-122.312076, 47.641396], [-122.312029, 47.64139], [-122.311967, 47.641393], [-122.311894, 47.641406], [-122.311844, 47.64143], [-122.31182, 47.641455], [-122.311792, 47.6415], [-122.311753, 47.641555], [-122.311715, 47.641613], [-122.311683, 47.641647], [-122.311627, 47.641703], [-122.311598, 47.641724], [-122.311557, 47.641754], [-122.31153, 47.641778], [-122.311504, 47.641799], [-122.311447, 47.641817], [-122.311399, 47.641814], [-122.311341, 47.641801], [-122.311219, 47.641803], [-122.311134, 47.641814], [-122.31111, 47.641842], [-122.311099, 47.641874], [-122.311098, 47.641899], [-122.311098, 47.641979], [-122.311085, 47.642094], [-122.311085, 47.64213], [-122.311099, 47.642221], [-122.311093, 47.642276], [-122.311071, 47.642303], [-122.311029, 47.642322], [-122.310976, 47.642318], [-122.310924, 47.642308], [-122.310887, 47.642309], [-122.310782, 47.642315], [-122.310733, 47.642345], [-122.310669, 47.642373], [-122.310634, 47.64237], [-122.310561, 47.642357], [-122.310517, 47.642381], [-122.310482, 47.642412], [-122.310428, 47.642436], [-122.310359, 47.642456], [-122.310318, 47.642469], [-122.310285, 47.642491], [-122.310259, 47.642514], [-122.310252, 47.642549], [-122.310273, 47.642586], [-122.310277, 47.642633], [-122.310257, 47.642658], [-122.310222, 47.642686], [-122.310211, 47.642713], [-122.310224, 47.642755], [-122.310221, 47.642838], [-122.310215, 47.642877], [-122.310175, 47.642918], [-122.310109, 47.642945], [-122.310053, 47.642972], [-122.310019, 47.642987], [-122.309967, 47.643001], [-122.30988, 47.642998], [-122.309827, 47.643011], [-122.30979, 47.64303], [-122.309752, 47.643045], [-122.309673, 47.643064], [-122.309625, 47.643052], [-122.309559, 47.643019], [-122.309494, 47.643004], [-122.309494, 47.643035], [-122.309488, 47.643069], [-122.309453, 47.643087], [-122.30941, 47.643102], [-122.309343, 47.643114], [-122.309299, 47.643123], [-122.309244, 47.643133], [-122.309188, 47.64314], [-122.309123, 47.643148], [-122.309014, 47.643167], [-122.308942, 47.643177], [-122.308867, 47.643191], [-122.308818, 47.643204], [-122.308672, 47.643226], [-122.308604, 47.643229], [-122.30856, 47.643227], [-122.308511, 47.643223], [-122.308466, 47.643232], [-122.308422, 47.643237], [-122.308378, 47.643236], [-122.308255, 47.643221], [-122.3082, 47.643199], [-122.308178, 47.643163], [-122.30815, 47.643142], [-122.308145, 47.643113], [-122.308178, 47.643088], [-122.308225, 47.643079], [-122.308283, 47.643066], [-122.308317, 47.643051], [-122.308366, 47.643036], [-122.308265, 47.643001], [-122.308189, 47.643009], [-122.308137, 47.643026], [-122.308066, 47.643043], [-122.308022, 47.643049], [-122.307986, 47.643051], [-122.307805, 47.643098], [-122.307713, 47.643128], [-122.307681, 47.643143], [-122.307573, 47.643143], [-122.30751, 47.643145], [-122.307478, 47.643165], [-122.307436, 47.643183], [-122.307409, 47.643225], [-122.307474, 47.643225], [-122.307526, 47.643238], [-122.307559, 47.643256], [-122.307571, 47.643288], [-122.307622, 47.643306], [-122.307619, 47.643336], [-122.307587, 47.64335], [-122.307453, 47.643347], [-122.307405, 47.643354], [-122.307361, 47.643393], [-122.307308, 47.643407], [-122.307267, 47.643396], [-122.307235, 47.64341], [-122.307204, 47.643441], [-122.307158, 47.643467], [-122.307109, 47.643504], [-122.307122, 47.643539], [-122.307148, 47.643559], [-122.307188, 47.643582], [-122.307213, 47.643604], [-122.307261, 47.643641], [-122.307286, 47.64366], [-122.307343, 47.643714], [-122.307376, 47.643737], [-122.307414, 47.643764], [-122.307438, 47.643785], [-122.307471, 47.643803], [-122.307512, 47.643825], [-122.307538, 47.643844], [-122.307558, 47.643865], [-122.307585, 47.643892], [-122.307629, 47.643918], [-122.307679, 47.643952], [-122.307705, 47.643975], [-122.307729, 47.644005], [-122.307736, 47.644038], [-122.307763, 47.644081], [-122.307788, 47.644112], [-122.307809, 47.644152], [-122.307814, 47.644185], [-122.307834, 47.644213], [-122.307889, 47.644255], [-122.307949, 47.644293], [-122.307974, 47.64432], [-122.308015, 47.644351], [-122.308047, 47.644385], [-122.308068, 47.644419], [-122.308081, 47.644441], [-122.30811, 47.644468], [-122.308134, 47.644512], [-122.30815, 47.644533], [-122.308167, 47.644559], [-122.308171, 47.644592], [-122.308319, 47.64459], [-122.308532, 47.644589], [-122.308703, 47.64459], [-122.308705, 47.644728], [-122.308839, 47.644728], [-122.308839, 47.644869], [-122.30884, 47.645009], [-122.308878, 47.64499], [-122.308939, 47.645003], [-122.308986, 47.645022], [-122.309033, 47.645042], [-122.309109, 47.64507], [-122.309153, 47.645089], [-122.309195, 47.645109], [-122.309175, 47.645131], [-122.309142, 47.64517], [-122.309122, 47.645232], [-122.309179, 47.645246], [-122.30923, 47.645264], [-122.309264, 47.645283], [-122.309305, 47.645301], [-122.309335, 47.645315], [-122.309368, 47.645327], [-122.309401, 47.645339], [-122.30945, 47.645356], [-122.309494, 47.645373], [-122.30954, 47.645393], [-122.309574, 47.645407], [-122.309623, 47.645447], [-122.309634, 47.645476], [-122.309666, 47.645492], [-122.309706, 47.645513], [-122.309742, 47.645544], [-122.309752, 47.645573], [-122.309755, 47.645652], [-122.309756, 47.645797], [-122.309758, 47.645944], [-122.309761, 47.645993], [-122.309767, 47.646032], [-122.309772, 47.646064], [-122.30979, 47.646114], [-122.309805, 47.646142], [-122.309824, 47.646171], [-122.309847, 47.646208], [-122.309856, 47.646249], [-122.309858, 47.646302], [-122.309843, 47.646349], [-122.30982, 47.646381], [-122.309787, 47.646418], [-122.309763, 47.646448], [-122.309747, 47.646475], [-122.309747, 47.646528], [-122.309719, 47.646569], [-122.309704, 47.646599], [-122.309682, 47.646637], [-122.309642, 47.646693], [-122.309606, 47.646739], [-122.309569, 47.646779], [-122.309548, 47.646808], [-122.309537, 47.646832], [-122.30951, 47.646867], [-122.309481, 47.646883], [-122.309439, 47.646894], [-122.309365, 47.646901], [-122.309311, 47.646914], [-122.309275, 47.646924], [-122.309223, 47.64695], [-122.309179, 47.64696], [-122.309143, 47.646995], [-122.309117, 47.647018], [-122.30907, 47.647044], [-122.308861, 47.647045], [-122.308645, 47.647044], [-122.308497, 47.647043], [-122.308316, 47.647042], [-122.308094, 47.647042], [-122.307957, 47.647048], [-122.307745, 47.647048], [-122.307541, 47.647048], [-122.307337, 47.647047], [-122.307128, 47.647047], [-122.306928, 47.647054], [-122.306885, 47.647072], [-122.306835, 47.647075], [-122.306707, 47.647076], [-122.306621, 47.647077], [-122.306411, 47.647078], [-122.306204, 47.647079], [-122.305999, 47.647078], [-122.305777, 47.647078], [-122.305565, 47.647078], [-122.305356, 47.647079], [-122.305142, 47.647079], [-122.305038, 47.647081], [-122.304962, 47.647083], [-122.304745, 47.647082], [-122.30453, 47.647082], [-122.304386, 47.647083], [-122.304268, 47.647082], [-122.304061, 47.647082], [-122.303846, 47.647081], [-122.30364, 47.647079], [-122.303418, 47.647078], [-122.303286, 47.647076], [-122.303237, 47.647074], [-122.303182, 47.647044], [-122.303143, 47.647032], [-122.303057, 47.64703], [-122.302849, 47.647031], [-122.302636, 47.647031], [-122.302417, 47.647031], [-122.302267, 47.647029], [-122.302134, 47.647026], [-122.302013, 47.647026], [-122.301907, 47.647024], [-122.301764, 47.647023], [-122.301635, 47.647018], [-122.301591, 47.647017], [-122.301538, 47.647013], [-122.301409, 47.647011], [-122.301346, 47.64701], [-122.301299, 47.647018], [-122.301192, 47.647017], [-122.301103, 47.647012], [-122.300923, 47.647014], [-122.300831, 47.647006], [-122.300775, 47.646981], [-122.300751, 47.646954], [-122.300726, 47.646924], [-122.300699, 47.646903], [-122.300675, 47.646871], [-122.300668, 47.646834], [-122.300691, 47.646809], [-122.300685, 47.646763], [-122.300655, 47.64674], [-122.300631, 47.646722], [-122.300597, 47.646698], [-122.300557, 47.646663], [-122.300519, 47.64661], [-122.300477, 47.646584], [-122.300438, 47.646569], [-122.30039, 47.646552], [-122.300345, 47.646536], [-122.300298, 47.646514], [-122.300237, 47.646489], [-122.300149, 47.646477], [-122.300097, 47.646464], [-122.300058, 47.646453], [-122.300015, 47.646436], [-122.299957, 47.646411], [-122.29992, 47.646389], [-122.299884, 47.646375], [-122.299834, 47.646351], [-122.299799, 47.646339], [-122.299754, 47.646321], [-122.29973, 47.646302], [-122.299698, 47.64628], [-122.299664, 47.64625], [-122.299632, 47.646215], [-122.299615, 47.646183], [-122.299602, 47.646146], [-122.299579, 47.646126], [-122.299533, 47.646093], [-122.299504, 47.646071], [-122.299453, 47.646049], [-122.299414, 47.646014], [-122.299399, 47.645989], [-122.299413, 47.645956], [-122.299429, 47.645923], [-122.299467, 47.645893], [-122.299508, 47.645848], [-122.299507, 47.645815], [-122.299472, 47.645798], [-122.299432, 47.645784], [-122.299372, 47.645757], [-122.299341, 47.645739], [-122.299299, 47.645713], [-122.299265, 47.645698], [-122.299226, 47.645659], [-122.299208, 47.645635], [-122.299178, 47.645599], [-122.299149, 47.645555], [-122.299139, 47.645531], [-122.299098, 47.645467], [-122.299082, 47.645445], [-122.299059, 47.645402], [-122.299047, 47.645377], [-122.299004, 47.645312], [-122.298976, 47.645261], [-122.298952, 47.645224], [-122.298931, 47.645184], [-122.298901, 47.645156], [-122.298875, 47.645131], [-122.298845, 47.645109], [-122.298808, 47.645099], [-122.298769, 47.645083], [-122.29874, 47.645061], [-122.298705, 47.645037], [-122.298679, 47.645018], [-122.298676, 47.644971], [-122.29868, 47.644902], [-122.298679, 47.644853], [-122.298659, 47.644806], [-122.298634, 47.644784], [-122.298596, 47.644757], [-122.298542, 47.644739], [-122.298471, 47.644729], [-122.298389, 47.644722], [-122.298345, 47.644715], [-122.298287, 47.644708], [-122.298247, 47.644698], [-122.298209, 47.644688], [-122.298143, 47.644664], [-122.298032, 47.644651], [-122.297912, 47.644645], [-122.297873, 47.644634], [-122.297761, 47.644606], [-122.297716, 47.644593], [-122.297673, 47.644589], [-122.297633, 47.644579], [-122.297583, 47.644564], [-122.297541, 47.644553], [-122.297504, 47.644525], [-122.297496, 47.644471], [-122.297475, 47.644444], [-122.297445, 47.644419], [-122.297425, 47.644397], [-122.297413, 47.644371], [-122.297407, 47.644345], [-122.2974, 47.644317], [-122.297361, 47.644261], [-122.297334, 47.644209], [-122.297336, 47.64413], [-122.29736, 47.644107], [-122.297398, 47.644089], [-122.297458, 47.644096], [-122.297518, 47.644117], [-122.297581, 47.644124], [-122.297617, 47.644126], [-122.297659, 47.64414], [-122.297732, 47.644153], [-122.297811, 47.64416], [-122.297933, 47.64416], [-122.297976, 47.64417], [-122.298025, 47.644185], [-122.298064, 47.644193], [-122.298103, 47.644198], [-122.298147, 47.644215], [-122.298221, 47.64423], [-122.29827, 47.64423], [-122.298314, 47.644212], [-122.298344, 47.644189], [-122.298357, 47.644155], [-122.29837, 47.644121], [-122.298418, 47.644087], [-122.298457, 47.644072], [-122.298493, 47.644064], [-122.298544, 47.644047], [-122.298495, 47.644005], [-122.298457, 47.64395], [-122.298427, 47.643916], [-122.29839, 47.643879], [-122.298356, 47.643865], [-122.298309, 47.643854], [-122.298271, 47.643835], [-122.298239, 47.643792], [-122.29821, 47.643766], [-122.29817, 47.643741], [-122.298146, 47.643722], [-122.298118, 47.643694], [-122.298086, 47.643669], [-122.298047, 47.643638], [-122.298021, 47.643617], [-122.297993, 47.64358], [-122.297975, 47.643547], [-122.297936, 47.643542], [-122.297883, 47.643542], [-122.297847, 47.643535], [-122.29779, 47.643526], [-122.297733, 47.64351], [-122.297696, 47.643498], [-122.297673, 47.643477], [-122.297644, 47.643437], [-122.297619, 47.643412], [-122.297584, 47.643382], [-122.297562, 47.643361], [-122.297533, 47.643335], [-122.297489, 47.643313], [-122.297426, 47.643312], [-122.29739, 47.643319], [-122.297346, 47.643318], [-122.297308, 47.64331], [-122.297265, 47.643301], [-122.297219, 47.643286], [-122.297174, 47.64328], [-122.297132, 47.643279], [-122.297095, 47.643289], [-122.297055, 47.643312], [-122.297028, 47.64334], [-122.297004, 47.643363], [-122.296983, 47.643387], [-122.296951, 47.643402], [-122.296904, 47.643415], [-122.29687, 47.643422], [-122.296804, 47.643439], [-122.296756, 47.643442], [-122.296709, 47.643448], [-122.296666, 47.643453], [-122.296562, 47.643444], [-122.296309, 47.643397], [-122.296193, 47.643469], [-122.296203, 47.643619], [-122.296258, 47.643669], [-122.296218, 47.643777], [-122.29616, 47.643896], [-122.296126, 47.644019], [-122.296106, 47.64416], [-122.296098, 47.644319], [-122.296104, 47.644476], [-122.296089, 47.644622], [-122.296062, 47.644729], [-122.295966, 47.64482], [-122.295801, 47.644901], [-122.29568, 47.644935], [-122.295467, 47.64494], [-122.295042, 47.644947], [-122.294842, 47.64491], [-122.294791, 47.644826], [-122.294791, 47.644741], [-122.294778, 47.644685], [-122.29475, 47.644609], [-122.294734, 47.644531], [-122.294776, 47.644413], [-122.294783, 47.644277], [-122.294798, 47.644152], [-122.294813, 47.643989], [-122.294819, 47.643831], [-122.294816, 47.643678], [-122.294708, 47.643573], [-122.294644, 47.643505], [-122.29459, 47.643426], [-122.294617, 47.643321], [-122.294602, 47.643197], [-122.29457, 47.643074], [-122.294589, 47.642997], [-122.294665, 47.642922], [-122.294795, 47.64285], [-122.294941, 47.64277], [-122.295089, 47.642745], [-122.295175, 47.642751], [-122.295243, 47.642747], [-122.295306, 47.642755], [-122.295406, 47.642764], [-122.295449, 47.642747], [-122.295538, 47.64272], [-122.295639, 47.64269], [-122.295727, 47.642645], [-122.295775, 47.642585], [-122.295796, 47.642558], [-122.295822, 47.642525], [-122.295834, 47.642502], [-122.295865, 47.642479], [-122.295913, 47.642478], [-122.295991, 47.642478], [-122.296049, 47.642444], [-122.296065, 47.64242], [-122.296094, 47.642391], [-122.296119, 47.642358], [-122.296138, 47.642337], [-122.296194, 47.642303], [-122.296221, 47.642272], [-122.296244, 47.642217], [-122.296276, 47.642158], [-122.296287, 47.642125], [-122.296305, 47.642092], [-122.296332, 47.642053], [-122.296376, 47.642011], [-122.296403, 47.641966], [-122.296403, 47.641911], [-122.296412, 47.641877], [-122.296387, 47.641857], [-122.296355, 47.641821], [-122.2963, 47.641777], [-122.296278, 47.641733], [-122.296253, 47.641707], [-122.296223, 47.641681], [-122.296207, 47.641659], [-122.296169, 47.641596], [-122.296164, 47.641566], [-122.29616, 47.641496], [-122.296118, 47.641509], [-122.296058, 47.641507], [-122.296012, 47.641498], [-122.295976, 47.64152], [-122.295929, 47.64157], [-122.295883, 47.641606], [-122.295845, 47.641633], [-122.295769, 47.641697], [-122.295728, 47.641726], [-122.295695, 47.641744], [-122.295655, 47.641768], [-122.295629, 47.641794], [-122.295603, 47.641812], [-122.295563, 47.641826], [-122.295512, 47.641862], [-122.295498, 47.641888], [-122.295469, 47.64193], [-122.295448, 47.641983], [-122.295447, 47.64203], [-122.295463, 47.64207], [-122.295495, 47.642119], [-122.295512, 47.642155], [-122.295552, 47.642205], [-122.295572, 47.642262], [-122.295555, 47.642335], [-122.295525, 47.642412], [-122.295476, 47.642496], [-122.295385, 47.642565], [-122.29527, 47.642591], [-122.295136, 47.642564], [-122.294982, 47.642537], [-122.294886, 47.642495], [-122.294815, 47.642472], [-122.294825, 47.642426], [-122.294779, 47.642404], [-122.294709, 47.642305], [-122.294593, 47.642225], [-122.294493, 47.642162], [-122.294364, 47.642148], [-122.294252, 47.642123], [-122.294139, 47.642063], [-122.294083, 47.641954], [-122.294068, 47.641852], [-122.294111, 47.64174], [-122.29415, 47.641661], [-122.29419, 47.641571], [-122.29425, 47.641467], [-122.294272, 47.641369], [-122.294213, 47.641231], [-122.294103, 47.641135], [-122.294002, 47.641123], [-122.293946, 47.641223], [-122.293839, 47.641318], [-122.293762, 47.641393], [-122.293643, 47.641369], [-122.293581, 47.641422], [-122.29344, 47.641492], [-122.293357, 47.641597], [-122.293071, 47.641747], [-122.29289, 47.641802], [-122.292839, 47.641811], [-122.292837, 47.641779], [-122.292835, 47.641752], [-122.292834, 47.641725], [-122.292833, 47.641697], [-122.292832, 47.64167], [-122.292832, 47.641643], [-122.292832, 47.641615], [-122.292833, 47.641588], [-122.292834, 47.64156], [-122.292835, 47.641533], [-122.292837, 47.641506], [-122.292838, 47.641478], [-122.292841, 47.641451], [-122.292844, 47.641424], [-122.292847, 47.641397], [-122.292851, 47.641369], [-122.292858, 47.641342], [-122.292869, 47.641316], [-122.292883, 47.64129], [-122.2929, 47.641265], [-122.292919, 47.641242], [-122.292943, 47.641219], [-122.292968, 47.641198], [-122.293171, 47.640973], [-122.293541, 47.64072], [-122.293573, 47.640703], [-122.293607, 47.640688], [-122.293642, 47.640675], [-122.293678, 47.640662], [-122.293715, 47.640652], [-122.293754, 47.640642], [-122.293792, 47.640635], [-122.293832, 47.640629], [-122.293872, 47.640625], [-122.293912, 47.640622], [-122.293953, 47.640621], [-122.293993, 47.640622], [-122.294034, 47.640625], [-122.294074, 47.640629], [-122.294113, 47.640635], [-122.294148, 47.640641], [-122.294186, 47.64065], [-122.294224, 47.64066], [-122.294261, 47.640671], [-122.294296, 47.640684], [-122.294331, 47.640698], [-122.294365, 47.640713], [-122.294398, 47.640729], [-122.294429, 47.640747], [-122.294459, 47.640765], [-122.294487, 47.640785], [-122.294514, 47.640805], [-122.294539, 47.640827], [-122.294823, 47.641076], [-122.29485, 47.641097], [-122.294879, 47.641116], [-122.29491, 47.641134], [-122.294943, 47.64115], [-122.294977, 47.641164], [-122.295013, 47.641177], [-122.29505, 47.641188], [-122.295088, 47.641198], [-122.295127, 47.641205], [-122.295166, 47.641211], [-122.295206, 47.641215], [-122.295247, 47.641216], [-122.295288, 47.641216], [-122.295328, 47.641214], [-122.295368, 47.641211], [-122.295408, 47.641206], [-122.295447, 47.641201], [-122.295487, 47.641196], [-122.295527, 47.641191], [-122.295567, 47.641186], [-122.295607, 47.641178], [-122.295644, 47.641167], [-122.295681, 47.641156], [-122.295718, 47.641144], [-122.295753, 47.641131], [-122.295788, 47.641117], [-122.295823, 47.641103], [-122.295856, 47.641087], [-122.295889, 47.641071], [-122.295921, 47.641054], [-122.29596, 47.641032], [-122.29621, 47.640887], [-122.296423, 47.6407], [-122.296565, 47.640453], [-122.296586, 47.640429], [-122.296605, 47.640405], [-122.296622, 47.64038], [-122.296637, 47.640355], [-122.29665, 47.640329], [-122.296661, 47.640303], [-122.296671, 47.640276], [-122.296678, 47.640249], [-122.296683, 47.640222], [-122.296685, 47.640195], [-122.296731, 47.639997], [-122.296742, 47.639971], [-122.296752, 47.639944], [-122.296762, 47.639918], [-122.296772, 47.639891], [-122.296781, 47.639865], [-122.29679, 47.639838], [-122.296798, 47.639811], [-122.296807, 47.639784], [-122.296815, 47.639758], [-122.296822, 47.639731], [-122.296829, 47.639704], [-122.296836, 47.639677], [-122.296842, 47.63965], [-122.296848, 47.639623], [-122.296854, 47.639595], [-122.296859, 47.639568], [-122.296863, 47.639541], [-122.296868, 47.639514], [-122.296872, 47.639487], [-122.296876, 47.639459], [-122.296879, 47.639432], [-122.296882, 47.639405], [-122.296885, 47.639378], [-122.296887, 47.63935], [-122.296889, 47.639323], [-122.29689, 47.639296], [-122.296891, 47.639268], [-122.296892, 47.639241], [-122.296892, 47.639213], [-122.296892, 47.639186], [-122.296892, 47.639159], [-122.296891, 47.639131], [-122.296889, 47.6391], [-122.29691, 47.638757], [-122.296919, 47.638188], [-122.296922, 47.638161], [-122.296926, 47.638133], [-122.296932, 47.638106], [-122.296938, 47.638079], [-122.296946, 47.638052], [-122.296955, 47.638026], [-122.296964, 47.637999], [-122.296975, 47.637973], [-122.296987, 47.637947], [-122.297, 47.637921], [-122.297014, 47.637895], [-122.297029, 47.63787], [-122.297045, 47.637844], [-122.297062, 47.63782], [-122.29708, 47.637795], [-122.2971, 47.637771], [-122.297119, 47.637747], [-122.29714, 47.637724], [-122.297397, 47.637517], [-122.297961, 47.637091], [-122.297983, 47.637069], [-122.298005, 47.637045], [-122.298025, 47.637022], [-122.298045, 47.636998], [-122.298063, 47.636973], [-122.29808, 47.636948], [-122.298095, 47.636923], [-122.29811, 47.636898], [-122.298124, 47.636872], [-122.298136, 47.636846], [-122.298147, 47.636819], [-122.298157, 47.636793], [-122.298166, 47.636766], [-122.298173, 47.636739], [-122.298181, 47.636703], [-122.298185, 47.636676], [-122.298188, 47.636649], [-122.29819, 47.636621], [-122.298191, 47.636594], [-122.29819, 47.636567], [-122.298246, 47.636272], [-122.298445, 47.635384], [-122.298451, 47.635358], [-122.298456, 47.635331], [-122.298459, 47.635304], [-122.298461, 47.635277], [-122.298461, 47.63525], [-122.298459, 47.635224], [-122.298457, 47.635197], [-122.298452, 47.63517], [-122.298445, 47.635144], [-122.298438, 47.635117], [-122.298428, 47.635091], [-122.298417, 47.635066], [-122.298065, 47.634581], [-122.298048, 47.634557], [-122.298033, 47.634532], [-122.298018, 47.634507], [-122.298005, 47.634482], [-122.297992, 47.634456], [-122.29798, 47.634431], [-122.297968, 47.634405], [-122.297958, 47.634379], [-122.297948, 47.634353], [-122.297939, 47.634327], [-122.297931, 47.634301], [-122.297924, 47.634274], [-122.297917, 47.634248], [-122.297912, 47.634221], [-122.297907, 47.634194], [-122.297903, 47.634168], [-122.297899, 47.634141], [-122.297897, 47.634114], [-122.297896, 47.634087], [-122.297895, 47.634061], [-122.297914, 47.633821], [-122.29791, 47.633685], [-122.297906, 47.633658], [-122.297898, 47.633632], [-122.297885, 47.633606], [-122.297868, 47.633582], [-122.297848, 47.633559], [-122.297823, 47.633538], [-122.297795, 47.633519], [-122.297765, 47.633502], [-122.297193, 47.633106], [-122.297168, 47.633085], [-122.297146, 47.633063], [-122.297125, 47.63304], [-122.297107, 47.633016], [-122.297091, 47.632992], [-122.297078, 47.632966], [-122.297068, 47.63294], [-122.29706, 47.632914], [-122.297054, 47.632888], [-122.297052, 47.632861], [-122.297059, 47.632637], [-122.297074, 47.632244], [-122.297192, 47.631863], [-122.2972, 47.631839], [-122.297208, 47.631814], [-122.297216, 47.631788], [-122.297223, 47.631762], [-122.29723, 47.631736], [-122.297236, 47.63171], [-122.297242, 47.631684], [-122.297247, 47.631658], [-122.297252, 47.631632], [-122.297256, 47.631605], [-122.29726, 47.631579], [-122.297264, 47.631553], [-122.297267, 47.631527], [-122.297269, 47.6315], [-122.297271, 47.631474], [-122.297273, 47.631448], [-122.297274, 47.631421], [-122.297275, 47.631395], [-122.297275, 47.631369], [-122.297275, 47.631342], [-122.297274, 47.631316], [-122.297251, 47.630778], [-122.297437, 47.630966], [-122.297595, 47.63129], [-122.297672, 47.631632], [-122.297722, 47.632081], [-122.29774, 47.632245], [-122.298501, 47.632261], [-122.299327, 47.632266], [-122.299651, 47.632268], [-122.299719, 47.632419], [-122.299984, 47.632918], [-122.299998, 47.63294], [-122.300012, 47.632962], [-122.300025, 47.632985], [-122.300037, 47.633008], [-122.300048, 47.633032], [-122.300059, 47.633055], [-122.300069, 47.633078], [-122.300078, 47.633102], [-122.300086, 47.633126], [-122.300094, 47.633149], [-122.300101, 47.633173], [-122.300107, 47.633197], [-122.300112, 47.63322], [-122.300117, 47.633244], [-122.300359, 47.633532], [-122.300607, 47.633819], [-122.301044, 47.634329], [-122.301167, 47.634473], [-122.301187, 47.634493], [-122.301212, 47.634512], [-122.301238, 47.634528], [-122.301268, 47.634543], [-122.301301, 47.634555], [-122.301334, 47.634564], [-122.301369, 47.63457], [-122.301406, 47.634573], [-122.301442, 47.634574], [-122.301653, 47.634572], [-122.301702, 47.634571], [-122.301738, 47.634573], [-122.301773, 47.634577], [-122.301807, 47.634583], [-122.301841, 47.63459], [-122.301874, 47.6346], [-122.301905, 47.634611], [-122.301935, 47.634625], [-122.301963, 47.634639], [-122.30199, 47.634656], [-122.302302, 47.63482], [-122.302836, 47.635104], [-122.30332, 47.635357], [-122.303845, 47.635629], [-122.304284, 47.635775], [-122.304429, 47.635822], [-122.304548, 47.635861], [-122.304744, 47.635924], [-122.304916, 47.635943], [-122.30539, 47.635889], [-122.305652, 47.63582], [-122.305922, 47.635653], [-122.306092, 47.635462], [-122.30618, 47.635427], [-122.306309, 47.635416], [-122.30643, 47.635434], [-122.30652, 47.635494], [-122.306575, 47.635586], [-122.306583, 47.635692], [-122.306576, 47.635863], [-122.306576, 47.635907], [-122.306579, 47.636107], [-122.306646, 47.636145], [-122.30675, 47.636164], [-122.306966, 47.636141], [-122.307085, 47.636157], [-122.307414, 47.636309], [-122.307434, 47.636337], [-122.30746, 47.636363], [-122.307492, 47.636385], [-122.307529, 47.636404], [-122.30757, 47.636419], [-122.307614, 47.636429], [-122.307659, 47.636434], [-122.307706, 47.636434], [-122.307751, 47.63643], [-122.307795, 47.63642], [-122.307836, 47.636405], [-122.307876, 47.636385], [-122.30804, 47.636129], [-122.3082, 47.635878], [-122.308222, 47.63585], [-122.308249, 47.635825], [-122.308279, 47.635801], [-122.308312, 47.635779], [-122.308348, 47.635759], [-122.308387, 47.635742], [-122.308428, 47.635728], [-122.308471, 47.635716], [-122.308516, 47.635707], [-122.308561, 47.635701], [-122.308607, 47.635699], [-122.308654, 47.635699], [-122.308699, 47.635702], [-122.308745, 47.635708], [-122.308784, 47.635724], [-122.308799, 47.635754], [-122.308804, 47.635785], [-122.308798, 47.635816], [-122.308781, 47.635845], [-122.308755, 47.635871], [-122.308728, 47.635889], [-122.308702, 47.635915], [-122.308678, 47.635942], [-122.308656, 47.635969], [-122.308636, 47.635998], [-122.308618, 47.636027], [-122.308603, 47.636056], [-122.30859, 47.636086], [-122.308579, 47.636117], [-122.308571, 47.636147], [-122.308565, 47.636179], [-122.308561, 47.63621], [-122.30856, 47.636241], [-122.308562, 47.636272], [-122.308565, 47.636304], [-122.308572, 47.636335], [-122.308581, 47.636365], [-122.308592, 47.636396], [-122.308605, 47.636426], [-122.308623, 47.636458], [-122.309158, 47.637401], [-122.309185, 47.637466], [-122.309245, 47.637516], [-122.309294, 47.637541], [-122.309363, 47.63755], [-122.309419, 47.637534], [-122.309491, 47.637441], [-122.309571, 47.637292], [-122.309867, 47.637207], [-122.309924, 47.637188], [-122.310034, 47.637152], [-122.310134, 47.637097], [-122.310213, 47.637029], [-122.310271, 47.636951], [-122.310321, 47.636819], [-122.310364, 47.636701], [-122.310398, 47.636591], [-122.310416, 47.636569], [-122.310437, 47.636549], [-122.310461, 47.63653], [-122.310487, 47.636512], [-122.310515, 47.636496], [-122.310545, 47.636481], [-122.310577, 47.636469], [-122.31061, 47.636458], [-122.310645, 47.63645], [-122.310679, 47.636443], [-122.310715, 47.636439], [-122.31075, 47.636437], [-122.310799, 47.636437], [-122.310836, 47.636441], [-122.310872, 47.636446], [-122.310907, 47.636454], [-122.310941, 47.636464], [-122.310972, 47.636476], [-122.311003, 47.63649], [-122.311031, 47.636506], [-122.311057, 47.636524], [-122.31108, 47.636543], [-122.311101, 47.636564], [-122.31115, 47.636713], [-122.311164, 47.636826], [-122.311167, 47.637011], [-122.311168, 47.637293], [-122.311164, 47.637404], [-122.311087, 47.637514], [-122.311017, 47.637579], [-122.310966, 47.637642], [-122.310832, 47.637807], [-122.310809, 47.637836], [-122.310806, 47.637877], [-122.310801, 47.637966], [-122.310823, 47.638063], [-122.310867, 47.638155], [-122.310897, 47.638196], [-122.310935, 47.638247], [-122.31098, 47.638287], [-122.311023, 47.638328], [-122.311065, 47.638371], [-122.311106, 47.638413], [-122.311155, 47.638466], [-122.311293, 47.638615], [-122.311317, 47.638642], [-122.311515, 47.638752], [-122.311644, 47.638795], [-122.311784, 47.638821], [-122.311924, 47.63883], [-122.312028, 47.638825], [-122.312064, 47.638823], [-122.312202, 47.6388], [-122.312329, 47.638763], [-122.312447, 47.63871], [-122.312539, 47.638684], [-122.312667, 47.638695], [-122.31287, 47.638713], [-122.313172, 47.638813], [-122.313402, 47.638894], [-122.313785, 47.639028], [-122.313922, 47.639074], [-122.314179, 47.639167], [-122.31422, 47.639163], [-122.314262, 47.639159], [-122.314303, 47.639155], [-122.314344, 47.63915], [-122.314385, 47.639145], [-122.314426, 47.639138], [-122.314464, 47.639128], [-122.314502, 47.639116], [-122.314538, 47.639102], [-122.314571, 47.639085], [-122.314602, 47.639066], [-122.31463, 47.639045], [-122.314655, 47.639022], [-122.314677, 47.638998], [-122.314695, 47.638973], [-122.314709, 47.638947], [-122.31472, 47.63892], [-122.314727, 47.638892], [-122.31473, 47.638864], [-122.314729, 47.638836], [-122.314725, 47.638808], [-122.314716, 47.63878], [-122.31471, 47.638268], [-122.313987, 47.637747], [-122.313592, 47.637483], [-122.313599, 47.63629], [-122.313594, 47.635943], [-122.317245, 47.635924], [-122.319567, 47.635913], [-122.321216, 47.635904], [-122.321303, 47.635998], [-122.321358, 47.636135], [-122.321359, 47.637277], [-122.321316, 47.638465], [-122.321331, 47.639541], [-122.322315, 47.639533], [-122.322881, 47.639717], [-122.322874, 47.64001], [-122.322843, 47.641434], [-122.322833, 47.641471], [-122.322725, 47.641865], [-122.322711, 47.641889], [-122.322694, 47.641914], [-122.322676, 47.641937], [-122.322657, 47.641961], [-122.322635, 47.641983], [-122.32261, 47.642007], [-122.322582, 47.64203], [-122.322554, 47.642053], [-122.322523, 47.642074], [-122.322492, 47.642095], [-122.322459, 47.642114], [-122.322424, 47.642133], [-122.322389, 47.64215], [-122.322356, 47.642165], [-122.322325, 47.642177], [-122.32229, 47.64219], [-122.322255, 47.642202], [-122.322219, 47.642212], [-122.322182, 47.642222], [-122.321582, 47.642312], [-122.319901, 47.642476], [-122.318102, 47.642706], [-122.317055, 47.642839], [-122.315176, 47.643033]]]]
    },
    "properties": {
      "neighbourhood": "Montlake",
      "neighbourhood_group": "Capitol Hill"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.376337, 47.675918], [-122.37652, 47.676053], [-122.376547, 47.676069], [-122.376573, 47.676087], [-122.376598, 47.676105], [-122.376621, 47.676124], [-122.376654, 47.676155], [-122.376673, 47.676176], [-122.37669, 47.676197], [-122.376706, 47.676219], [-122.376721, 47.676242], [-122.376734, 47.676266], [-122.376745, 47.676289], [-122.376754, 47.676313], [-122.376761, 47.676337], [-122.376767, 47.676362], [-122.376771, 47.676387], [-122.376772, 47.676411], [-122.376772, 47.676436], [-122.376762, 47.676862], [-122.37676, 47.677539], [-122.37677, 47.678068], [-122.37677, 47.679202], [-122.37677, 47.680154], [-122.376768, 47.681194], [-122.376777, 47.682286], [-122.376787, 47.683371], [-122.376781, 47.68427], [-122.376785, 47.685181], [-122.376784, 47.686092], [-122.3768, 47.687007], [-122.376795, 47.687944], [-122.376803, 47.688976], [-122.376811, 47.690012], [-122.37681, 47.690534], [-122.37681, 47.690605], [-122.37511, 47.690617], [-122.373231, 47.690625], [-122.371404, 47.690637], [-122.369525, 47.690639], [-122.367607, 47.690642], [-122.366004, 47.690648], [-122.366003, 47.690492], [-122.365994, 47.68874], [-122.366006, 47.68629], [-122.365996, 47.684524], [-122.366033, 47.683252], [-122.366038, 47.683085], [-122.366007, 47.680592], [-122.36605, 47.676333], [-122.366054, 47.676005], [-122.366299, 47.676015], [-122.367446, 47.675953], [-122.368514, 47.675942], [-122.36953, 47.675977], [-122.370612, 47.675922], [-122.371141, 47.675958], [-122.371714, 47.675981], [-122.373288, 47.67594], [-122.375586, 47.675934], [-122.37608, 47.675897], [-122.376337, 47.675918]]]]
    },
    "properties": {
      "neighbourhood": "Whittier Heights",
      "neighbourhood_group": "Ballard"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.322881, 47.639717], [-122.322315, 47.639533], [-122.321331, 47.639541], [-122.321316, 47.638465], [-122.321359, 47.637277], [-122.321358, 47.636135], [-122.321303, 47.635998], [-122.321216, 47.635904], [-122.319567, 47.635913], [-122.317245, 47.635924], [-122.313594, 47.635943], [-122.313591, 47.63567], [-122.31352, 47.635359], [-122.31351, 47.63533], [-122.3135, 47.635301], [-122.313489, 47.635272], [-122.313478, 47.635243], [-122.313468, 47.63522], [-122.313456, 47.635191], [-122.313444, 47.635163], [-122.313431, 47.635134], [-122.313417, 47.635106], [-122.313403, 47.635077], [-122.313389, 47.635049], [-122.313376, 47.635026], [-122.313361, 47.634998], [-122.313345, 47.63497], [-122.313329, 47.634943], [-122.313312, 47.634915], [-122.313295, 47.634887], [-122.313278, 47.63486], [-122.31326, 47.634833], [-122.313241, 47.634805], [-122.313222, 47.634778], [-122.313203, 47.634751], [-122.313183, 47.634725], [-122.313163, 47.634698], [-122.313146, 47.634677], [-122.313125, 47.634651], [-122.31285, 47.634376], [-122.312822, 47.634354], [-122.312795, 47.634331], [-122.312773, 47.634312], [-122.312747, 47.634288], [-122.312722, 47.634263], [-122.312698, 47.634238], [-122.312676, 47.634212], [-122.312654, 47.634186], [-122.312634, 47.634159], [-122.312615, 47.634132], [-122.312597, 47.634105], [-122.31258, 47.634077], [-122.312567, 47.634055], [-122.312553, 47.634027], [-122.31254, 47.633998], [-122.312528, 47.633969], [-122.312517, 47.63394], [-122.312508, 47.633911], [-122.3125, 47.633882], [-122.312493, 47.633852], [-122.312488, 47.633822], [-122.312483, 47.633793], [-122.312481, 47.633763], [-122.312479, 47.633733], [-122.312479, 47.633703], [-122.31248, 47.633673], [-122.312483, 47.633643], [-122.312484, 47.632981], [-122.312497, 47.632333], [-122.31252, 47.630636], [-122.312546, 47.628692], [-122.312557, 47.627643], [-122.312566, 47.626892], [-122.312584, 47.626071], [-122.312607, 47.624381], [-122.312598, 47.623713], [-122.312656, 47.621443], [-122.312703, 47.620567], [-122.312728, 47.61967], [-122.312746, 47.618519], [-122.312751, 47.617629], [-122.312761, 47.616539], [-122.312761, 47.615085], [-122.312762, 47.614541], [-122.312763, 47.614498], [-122.313369, 47.614251], [-122.314419, 47.613811], [-122.315113, 47.613523], [-122.316141, 47.613103], [-122.316659, 47.612919], [-122.316752, 47.612896], [-122.319063, 47.612934], [-122.319442, 47.612941], [-122.31945, 47.614089], [-122.320832, 47.614076], [-122.322592, 47.614053], [-122.323285, 47.614044], [-122.323583, 47.614102], [-122.324327, 47.614092], [-122.326346, 47.614087], [-122.326906, 47.614093], [-122.327406, 47.614093], [-122.328757, 47.613531], [-122.330603, 47.612764], [-122.330343, 47.613395], [-122.329724, 47.61478], [-122.329255, 47.616067], [-122.329216, 47.616175], [-122.328842, 47.617595], [-122.328837, 47.617622], [-122.328831, 47.617648], [-122.328827, 47.617674], [-122.328822, 47.617701], [-122.328817, 47.617727], [-122.328812, 47.617753], [-122.328807, 47.61778], [-122.328802, 47.617806], [-122.328798, 47.617832], [-122.328793, 47.617859], [-122.328789, 47.617885], [-122.328785, 47.617912], [-122.32878, 47.617938], [-122.328776, 47.617964], [-122.328772, 47.617991], [-122.328768, 47.618017], [-122.328763, 47.618044], [-122.328759, 47.61807], [-122.328755, 47.618096], [-122.328751, 47.618123], [-122.328747, 47.618149], [-122.328744, 47.618176], [-122.32874, 47.618202], [-122.328736, 47.618228], [-122.328732, 47.618255], [-122.328729, 47.618281], [-122.328725, 47.618308], [-122.328722, 47.618334], [-122.328719, 47.618361], [-122.328715, 47.618387], [-122.328712, 47.618414], [-122.328709, 47.61844], [-122.328705, 47.618465], [-122.3287, 47.618513], [-122.328697, 47.618539], [-122.328694, 47.618566], [-122.328691, 47.618592], [-122.328688, 47.618619], [-122.328686, 47.618645], [-122.328683, 47.618672], [-122.328681, 47.618698], [-122.328678, 47.618725], [-122.328676, 47.618751], [-122.328673, 47.618778], [-122.32867, 47.618804], [-122.328668, 47.618831], [-122.328666, 47.618857], [-122.328664, 47.618884], [-122.328661, 47.61891], [-122.32866, 47.618937], [-122.328657, 47.618963], [-122.328656, 47.61899], [-122.328654, 47.619016], [-122.328651, 47.619043], [-122.32865, 47.619069], [-122.328648, 47.619096], [-122.328647, 47.619122], [-122.328645, 47.619149], [-122.328644, 47.619176], [-122.328637, 47.620731], [-122.328667, 47.622282], [-122.328668, 47.623853], [-122.328678, 47.625458], [-122.328669, 47.626945], [-122.328665, 47.626973], [-122.328662, 47.627], [-122.328658, 47.627026], [-122.328654, 47.627052], [-122.32865, 47.627079], [-122.328645, 47.627105], [-122.328641, 47.627132], [-122.328636, 47.627158], [-122.328631, 47.627184], [-122.328626, 47.627211], [-122.328621, 47.627237], [-122.328615, 47.627263], [-122.328609, 47.627289], [-122.328603, 47.627316], [-122.328598, 47.627342], [-122.328591, 47.627368], [-122.328585, 47.627394], [-122.328578, 47.62742], [-122.328571, 47.627447], [-122.328564, 47.627473], [-122.328557, 47.627499], [-122.32855, 47.627525], [-122.328542, 47.627551], [-122.328534, 47.627577], [-122.328526, 47.627603], [-122.328518, 47.627629], [-122.32851, 47.627655], [-122.328501, 47.627681], [-122.328492, 47.627707], [-122.328484, 47.627733], [-122.328475, 47.627758], [-122.328465, 47.627784], [-122.328453, 47.62782], [-122.328443, 47.627845], [-122.328433, 47.627871], [-122.328423, 47.627897], [-122.328412, 47.627922], [-122.328402, 47.627948], [-122.328392, 47.627974], [-122.328381, 47.627999], [-122.32837, 47.628025], [-122.328358, 47.62805], [-122.328347, 47.628075], [-122.328335, 47.628101], [-122.328324, 47.628126], [-122.328312, 47.628151], [-122.3283, 47.628177], [-122.328288, 47.628202], [-122.328275, 47.628227], [-122.328263, 47.628252], [-122.32825, 47.628277], [-122.328237, 47.628301], [-122.328223, 47.628326], [-122.328209, 47.628351], [-122.328195, 47.628376], [-122.328181, 47.628401], [-122.328166, 47.628425], [-122.328152, 47.62845], [-122.328136, 47.628474], [-122.328121, 47.628499], [-122.328106, 47.628523], [-122.32809, 47.628547], [-122.328074, 47.628572], [-122.328058, 47.628596], [-122.328041, 47.62862], [-122.328024, 47.628644], [-122.328007, 47.628668], [-122.32799, 47.628692], [-122.327973, 47.628716], [-122.327955, 47.628739], [-122.327937, 47.628763], [-122.327919, 47.628787], [-122.3279, 47.62881], [-122.327882, 47.628833], [-122.327863, 47.628857], [-122.327844, 47.62888], [-122.327825, 47.628903], [-122.327805, 47.628926], [-122.327786, 47.628949], [-122.327766, 47.628972], [-122.327746, 47.628995], [-122.327725, 47.629017], [-122.327705, 47.62904], [-122.327684, 47.629063], [-122.327662, 47.629085], [-122.327641, 47.629107], [-122.32762, 47.62913], [-122.327598, 47.629152], [-122.327576, 47.629174], [-122.327554, 47.629196], [-122.327532, 47.629218], [-122.327509, 47.629239], [-122.327486, 47.629261], [-122.327464, 47.629282], [-122.327435, 47.629309], [-122.327411, 47.629331], [-122.327388, 47.629352], [-122.327364, 47.629373], [-122.32734, 47.629394], [-122.327315, 47.629415], [-122.327291, 47.629436], [-122.327266, 47.629456], [-122.327242, 47.629477], [-122.326022, 47.630564], [-122.325085, 47.631397], [-122.325063, 47.631419], [-122.325042, 47.631442], [-122.325021, 47.631464], [-122.325, 47.631487], [-122.32498, 47.631509], [-122.32496, 47.631532], [-122.324939, 47.631555], [-122.324919, 47.631578], [-122.324899, 47.631601], [-122.324879, 47.631623], [-122.324859, 47.631646], [-122.32484, 47.63167], [-122.324821, 47.631693], [-122.324802, 47.631716], [-122.324783, 47.631739], [-122.324763, 47.631762], [-122.324745, 47.631786], [-122.324726, 47.631809], [-122.324708, 47.631832], [-122.32469, 47.631856], [-122.324671, 47.631879], [-122.324653, 47.631903], [-122.324635, 47.631927], [-122.324618, 47.63195], [-122.3246, 47.631974], [-122.324583, 47.631998], [-122.324566, 47.632022], [-122.324548, 47.632046], [-122.324531, 47.63207], [-122.324515, 47.632094], [-122.324498, 47.632118], [-122.324482, 47.632142], [-122.324465, 47.632166], [-122.324449, 47.63219], [-122.324433, 47.632214], [-122.324418, 47.632239], [-122.324402, 47.632263], [-122.324387, 47.632288], [-122.324371, 47.632312], [-122.324356, 47.632336], [-122.324341, 47.632361], [-122.324326, 47.632386], [-122.324311, 47.63241], [-122.324297, 47.632435], [-122.324282, 47.63246], [-122.324268, 47.632484], [-122.324254, 47.632509], [-122.32424, 47.632534], [-122.324226, 47.632559], [-122.324213, 47.632584], [-122.323796, 47.633606], [-122.323696, 47.633836], [-122.323603, 47.634065], [-122.323516, 47.634296], [-122.323435, 47.634528], [-122.32336, 47.634761], [-122.323327, 47.63487], [-122.323291, 47.634994], [-122.323224, 47.635241], [-122.323217, 47.635268], [-122.323204, 47.635317], [-122.323197, 47.635343], [-122.323191, 47.635369], [-122.323184, 47.635395], [-122.323178, 47.635421], [-122.323171, 47.635447], [-122.323165, 47.635474], [-122.323159, 47.6355], [-122.323152, 47.635526], [-122.323146, 47.635552], [-122.32314, 47.635579], [-122.323134, 47.635605], [-122.323128, 47.635631], [-122.323123, 47.635657], [-122.323117, 47.635684], [-122.323111, 47.63571], [-122.323106, 47.635736], [-122.3231, 47.635762], [-122.323095, 47.635789], [-122.32309, 47.635815], [-122.323085, 47.635841], [-122.323079, 47.635868], [-122.323075, 47.635894], [-122.323069, 47.63592], [-122.323064, 47.635947], [-122.32306, 47.635973], [-122.323055, 47.635999], [-122.32305, 47.636026], [-122.323046, 47.636052], [-122.323041, 47.636079], [-122.323037, 47.636105], [-122.323033, 47.636131], [-122.323028, 47.636158], [-122.323024, 47.636184], [-122.32302, 47.636211], [-122.323016, 47.636237], [-122.323012, 47.636263], [-122.323008, 47.63629], [-122.323005, 47.636316], [-122.323001, 47.636343], [-122.322997, 47.636369], [-122.322994, 47.636396], [-122.322991, 47.636422], [-122.322988, 47.636448], [-122.322984, 47.636475], [-122.322981, 47.636501], [-122.322978, 47.636528], [-122.322975, 47.636554], [-122.322972, 47.636581], [-122.322969, 47.636607], [-122.322966, 47.636634], [-122.322964, 47.63666], [-122.322961, 47.636687], [-122.322959, 47.636713], [-122.322956, 47.63674], [-122.322954, 47.636766], [-122.322951, 47.636793], [-122.322949, 47.636819], [-122.322947, 47.636846], [-122.322945, 47.636872], [-122.32291, 47.638448], [-122.322881, 47.639717]]]]
    },
    "properties": {
      "neighbourhood": "Broadway",
      "neighbourhood_group": "Capitol Hill"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.376337, 47.675918], [-122.376708, 47.675998], [-122.377903, 47.675998], [-122.379989, 47.675989], [-122.381828, 47.675992], [-122.383603, 47.67598], [-122.385436, 47.675959], [-122.387087, 47.675952], [-122.387702, 47.675948], [-122.388956, 47.675942], [-122.390449, 47.675926], [-122.391773, 47.675916], [-122.392827, 47.675915], [-122.392957, 47.675914], [-122.392956, 47.676329], [-122.39296, 47.67693], [-122.392961, 47.677509], [-122.392972, 47.678103], [-122.392975, 47.679252], [-122.392984, 47.679814], [-122.393002, 47.68113], [-122.393015, 47.682429], [-122.393016, 47.683734], [-122.393023, 47.685022], [-122.393031, 47.686345], [-122.393033, 47.687669], [-122.393046, 47.688996], [-122.393011, 47.690298], [-122.393002, 47.690581], [-122.392432, 47.690583], [-122.390348, 47.690563], [-122.388193, 47.690581], [-122.385833, 47.690577], [-122.383275, 47.690593], [-122.383201, 47.690594], [-122.381453, 47.690598], [-122.379876, 47.690599], [-122.379104, 47.690604], [-122.377118, 47.690603], [-122.37681, 47.690605], [-122.37681, 47.690534], [-122.376811, 47.690012], [-122.376803, 47.688976], [-122.376795, 47.687944], [-122.3768, 47.687007], [-122.376784, 47.686092], [-122.376785, 47.685181], [-122.376781, 47.68427], [-122.376787, 47.683371], [-122.376777, 47.682286], [-122.376768, 47.681194], [-122.37677, 47.680154], [-122.37677, 47.679202], [-122.37677, 47.678068], [-122.37676, 47.677539], [-122.376762, 47.676862], [-122.376772, 47.676436], [-122.376772, 47.676411], [-122.376771, 47.676387], [-122.376767, 47.676362], [-122.376761, 47.676337], [-122.376754, 47.676313], [-122.376745, 47.676289], [-122.376734, 47.676266], [-122.376721, 47.676242], [-122.376706, 47.676219], [-122.37669, 47.676197], [-122.376673, 47.676176], [-122.376654, 47.676155], [-122.376621, 47.676124], [-122.376598, 47.676105], [-122.376573, 47.676087], [-122.376547, 47.676069], [-122.37652, 47.676053], [-122.376337, 47.675918]]]]
    },
    "properties": {
      "neighbourhood": "Loyal Heights",
      "neighbourhood_group": "Ballard"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.297392, 47.71562], [-122.29433, 47.715573], [-122.291566, 47.715529], [-122.291499, 47.715529], [-122.29156, 47.714885], [-122.291567, 47.714858], [-122.291572, 47.714831], [-122.291577, 47.714803], [-122.291581, 47.714776], [-122.291584, 47.714752], [-122.291587, 47.714725], [-122.291588, 47.714698], [-122.291589, 47.71467], [-122.291589, 47.714643], [-122.291588, 47.714615], [-122.291586, 47.714588], [-122.291584, 47.714564], [-122.291581, 47.714537], [-122.291577, 47.71451], [-122.291572, 47.714483], [-122.291567, 47.714459], [-122.291561, 47.714432], [-122.291553, 47.714405], [-122.291545, 47.714378], [-122.291536, 47.714351], [-122.291527, 47.714325], [-122.291517, 47.714301], [-122.291506, 47.714275], [-122.291494, 47.714249], [-122.291481, 47.714223], [-122.291469, 47.714201], [-122.291455, 47.714175], [-122.291442, 47.714153], [-122.291426, 47.714127], [-122.291409, 47.714102], [-122.291394, 47.714081], [-122.291376, 47.714056], [-122.290958, 47.71349], [-122.290809, 47.713247], [-122.290796, 47.713222], [-122.290784, 47.713198], [-122.290772, 47.713173], [-122.29076, 47.713148], [-122.290749, 47.713123], [-122.290739, 47.713098], [-122.290729, 47.713073], [-122.29072, 47.713047], [-122.290712, 47.713022], [-122.290703, 47.712996], [-122.290696, 47.712971], [-122.290689, 47.712945], [-122.290683, 47.712919], [-122.290678, 47.712893], [-122.290673, 47.712867], [-122.290668, 47.712841], [-122.290664, 47.712815], [-122.290661, 47.712789], [-122.290659, 47.712763], [-122.290657, 47.712737], [-122.290655, 47.712711], [-122.290654, 47.712685], [-122.290655, 47.712659], [-122.290655, 47.712633], [-122.290656, 47.712607], [-122.290658, 47.712581], [-122.29066, 47.712556], [-122.290655, 47.71181], [-122.290692, 47.710722], [-122.290729, 47.709616], [-122.290756, 47.708503], [-122.290797, 47.707366], [-122.290838, 47.706228], [-122.290864, 47.705086], [-122.290865, 47.70506], [-122.290865, 47.705034], [-122.290866, 47.705008], [-122.290866, 47.704982], [-122.290866, 47.704955], [-122.290866, 47.704929], [-122.290867, 47.704903], [-122.290867, 47.704877], [-122.290867, 47.704851], [-122.290867, 47.704825], [-122.290867, 47.704799], [-122.290867, 47.704773], [-122.290867, 47.704747], [-122.290867, 47.704721], [-122.290867, 47.704694], [-122.290867, 47.704668], [-122.290866, 47.704642], [-122.290866, 47.704595], [-122.290865, 47.704569], [-122.290865, 47.704543], [-122.290864, 47.704516], [-122.290864, 47.70449], [-122.290863, 47.704464], [-122.290863, 47.704438], [-122.290862, 47.704412], [-122.290861, 47.704386], [-122.290861, 47.70436], [-122.29086, 47.704334], [-122.290859, 47.704308], [-122.290858, 47.704282], [-122.290857, 47.704256], [-122.290856, 47.704229], [-122.290855, 47.704203], [-122.290854, 47.704177], [-122.290853, 47.704151], [-122.290852, 47.704125], [-122.290851, 47.704099], [-122.290849, 47.704073], [-122.290848, 47.704047], [-122.290847, 47.704021], [-122.290845, 47.703995], [-122.290844, 47.703969], [-122.290843, 47.703943], [-122.290784, 47.702796], [-122.290726, 47.701649], [-122.290672, 47.700485], [-122.290619, 47.699338], [-122.290566, 47.698201], [-122.290563, 47.698175], [-122.29056, 47.698149], [-122.290558, 47.698123], [-122.290555, 47.698097], [-122.290553, 47.698071], [-122.29055, 47.698045], [-122.290548, 47.698019], [-122.290546, 47.697993], [-122.290544, 47.697967], [-122.290542, 47.697941], [-122.29054, 47.697915], [-122.290538, 47.697888], [-122.290537, 47.697862], [-122.290535, 47.697836], [-122.290534, 47.69781], [-122.290533, 47.697784], [-122.290532, 47.697758], [-122.290531, 47.697732], [-122.290523, 47.697453], [-122.291884, 47.697466], [-122.293316, 47.697478], [-122.294717, 47.697487], [-122.296128, 47.697497], [-122.297524, 47.697513], [-122.298192, 47.697514], [-122.298874, 47.697516], [-122.299425, 47.697521], [-122.300104, 47.697527], [-122.300802, 47.697529], [-122.302188, 47.697545], [-122.303559, 47.697558], [-122.30452, 47.697559], [-122.305462, 47.697564], [-122.305398, 47.697725], [-122.305088, 47.698184], [-122.304803, 47.698521], [-122.304317, 47.699104], [-122.303545, 47.700018], [-122.303374, 47.700213], [-122.303326, 47.700269], [-122.303145, 47.700476], [-122.302365, 47.701394], [-122.302346, 47.701418], [-122.302326, 47.701442], [-122.302307, 47.701467], [-122.302287, 47.701491], [-122.302268, 47.701516], [-122.302249, 47.70154], [-122.30223, 47.701565], [-122.302211, 47.70159], [-122.302192, 47.701614], [-122.302173, 47.701639], [-122.302155, 47.701664], [-122.302137, 47.701688], [-122.302118, 47.701713], [-122.3021, 47.701738], [-122.302082, 47.701763], [-122.302064, 47.701788], [-122.302048, 47.701811], [-122.302032, 47.701834], [-122.302015, 47.701857], [-122.301855, 47.702225], [-122.301728, 47.70252], [-122.301721, 47.702547], [-122.301713, 47.702574], [-122.301706, 47.702601], [-122.3017, 47.702629], [-122.301693, 47.702656], [-122.301687, 47.702683], [-122.301681, 47.702711], [-122.301675, 47.702738], [-122.301669, 47.702766], [-122.301664, 47.702793], [-122.301659, 47.702821], [-122.301655, 47.702848], [-122.30165, 47.702876], [-122.301645, 47.702903], [-122.301641, 47.702931], [-122.301637, 47.702958], [-122.301634, 47.702986], [-122.30163, 47.703014], [-122.301626, 47.703041], [-122.301624, 47.703069], [-122.301621, 47.703097], [-122.301618, 47.703124], [-122.301616, 47.703152], [-122.301614, 47.70318], [-122.301612, 47.703207], [-122.30161, 47.703235], [-122.301609, 47.703263], [-122.301608, 47.703291], [-122.301609, 47.703323], [-122.301603, 47.703351], [-122.301605, 47.703399], [-122.301605, 47.703427], [-122.301605, 47.703455], [-122.301605, 47.703482], [-122.301606, 47.70351], [-122.301607, 47.703538], [-122.301608, 47.703566], [-122.30161, 47.703593], [-122.301615, 47.704668], [-122.301625, 47.705747], [-122.301629, 47.706805], [-122.301628, 47.70683], [-122.301628, 47.706856], [-122.301627, 47.706881], [-122.301627, 47.706907], [-122.301626, 47.706932], [-122.301624, 47.706957], [-122.301624, 47.706983], [-122.301622, 47.707008], [-122.301621, 47.707034], [-122.301619, 47.707059], [-122.301617, 47.707084], [-122.301615, 47.70711], [-122.301613, 47.707135], [-122.301611, 47.707161], [-122.301609, 47.707186], [-122.301606, 47.707211], [-122.301603, 47.707237], [-122.301601, 47.707262], [-122.301598, 47.707287], [-122.301595, 47.707313], [-122.301592, 47.707338], [-122.301589, 47.707363], [-122.301585, 47.707389], [-122.301582, 47.707414], [-122.301578, 47.707439], [-122.301574, 47.707465], [-122.30157, 47.70749], [-122.301566, 47.707515], [-122.301562, 47.70754], [-122.301557, 47.707566], [-122.301552, 47.707591], [-122.301548, 47.707616], [-122.301543, 47.707641], [-122.301538, 47.707667], [-122.301533, 47.707692], [-122.301528, 47.707717], [-122.301522, 47.707742], [-122.301517, 47.707767], [-122.301511, 47.707792], [-122.301506, 47.707817], [-122.3015, 47.707843], [-122.301493, 47.707868], [-122.301487, 47.707893], [-122.301482, 47.707918], [-122.301473, 47.70796], [-122.301467, 47.707985], [-122.301461, 47.70801], [-122.301455, 47.708035], [-122.301449, 47.70806], [-122.301444, 47.708085], [-122.301437, 47.70811], [-122.301431, 47.708135], [-122.301425, 47.70816], [-122.301418, 47.708185], [-122.301412, 47.70821], [-122.301406, 47.708236], [-122.301399, 47.708261], [-122.301393, 47.708286], [-122.301386, 47.708311], [-122.301379, 47.708336], [-122.301372, 47.708361], [-122.301365, 47.708386], [-122.301358, 47.708411], [-122.301351, 47.708436], [-122.301344, 47.70846], [-122.301337, 47.708485], [-122.30133, 47.70851], [-122.301322, 47.708535], [-122.301314, 47.70856], [-122.301307, 47.708585], [-122.301299, 47.70861], [-122.301292, 47.708635], [-122.301284, 47.70866], [-122.301276, 47.708685], [-122.301268, 47.708709], [-122.30126, 47.708734], [-122.301252, 47.708759], [-122.301243, 47.708784], [-122.301235, 47.708809], [-122.301227, 47.708833], [-122.301218, 47.708858], [-122.30121, 47.708883], [-122.301201, 47.708908], [-122.301192, 47.708932], [-122.301184, 47.708957], [-122.301175, 47.708982], [-122.301166, 47.709007], [-122.30104, 47.709316], [-122.300949, 47.70952], [-122.300854, 47.709723], [-122.300753, 47.709924], [-122.300647, 47.710124], [-122.300466, 47.710423], [-122.299974, 47.711254], [-122.299463, 47.712134], [-122.299156, 47.712651], [-122.298873, 47.713129], [-122.298796, 47.71326], [-122.298254, 47.714164], [-122.297699, 47.715103], [-122.297417, 47.715579], [-122.297392, 47.71562]]]]
    },
    "properties": {
      "neighbourhood": "Meadowbrook",
      "neighbourhood_group": "Lake City"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.381531, 47.589496], [-122.38204, 47.590599], [-122.382248, 47.591038], [-122.382644, 47.591894], [-122.38301, 47.592662], [-122.383076, 47.592801], [-122.383212, 47.593106], [-122.383384, 47.593482], [-122.383545, 47.593833], [-122.383638, 47.593997], [-122.383416, 47.594033], [-122.383346, 47.594035], [-122.383304, 47.594041], [-122.383253, 47.594041], [-122.383208, 47.594041], [-122.38316, 47.59407], [-122.383078, 47.59408], [-122.38301, 47.594087], [-122.382939, 47.594087], [-122.382897, 47.594066], [-122.382874, 47.594041], [-122.382839, 47.594004], [-122.382822, 47.593979], [-122.382787, 47.59393], [-122.382749, 47.593855], [-122.382734, 47.593825], [-122.382718, 47.593796], [-122.38269, 47.593757], [-122.382668, 47.593726], [-122.382645, 47.593695], [-122.38262, 47.593667], [-122.382592, 47.593644], [-122.382544, 47.59361], [-122.382504, 47.59359], [-122.382469, 47.593576], [-122.382422, 47.593559], [-122.382378, 47.593545], [-122.382339, 47.593529], [-122.382304, 47.593512], [-122.382274, 47.59349], [-122.382245, 47.593466], [-122.382224, 47.593445], [-122.382196, 47.59342], [-122.382152, 47.593374], [-122.382136, 47.59335], [-122.382122, 47.593322], [-122.382108, 47.593292], [-122.382077, 47.59325], [-122.382059, 47.593225], [-122.382038, 47.593197], [-122.382018, 47.59317], [-122.382003, 47.593136], [-122.381997, 47.593108], [-122.382017, 47.593079], [-122.382085, 47.593058], [-122.382145, 47.593039], [-122.382194, 47.593021], [-122.382239, 47.593004], [-122.382295, 47.592985], [-122.382354, 47.592964], [-122.382386, 47.592949], [-122.382403, 47.592918], [-122.382383, 47.592874], [-122.382364, 47.592828], [-122.382353, 47.592802], [-122.38233, 47.59276], [-122.382301, 47.592698], [-122.382288, 47.592666], [-122.382279, 47.59264], [-122.382261, 47.592596], [-122.382235, 47.592567], [-122.382186, 47.59253], [-122.382139, 47.59253], [-122.382076, 47.592531], [-122.382038, 47.592531], [-122.381988, 47.592534], [-122.381923, 47.592524], [-122.381888, 47.592508], [-122.381859, 47.592483], [-122.38184, 47.592452], [-122.381833, 47.592424], [-122.381832, 47.592387], [-122.381839, 47.592358], [-122.381849, 47.592326], [-122.381858, 47.592296], [-122.381863, 47.592271], [-122.38187, 47.592238], [-122.38188, 47.592191], [-122.381887, 47.592164], [-122.381892, 47.592139], [-122.381893, 47.592111], [-122.381891, 47.592073], [-122.381886, 47.592034], [-122.381879, 47.591997], [-122.381867, 47.591958], [-122.381858, 47.591913], [-122.381845, 47.591879], [-122.381832, 47.591842], [-122.381816, 47.591801], [-122.381798, 47.591761], [-122.381781, 47.591708], [-122.381765, 47.591657], [-122.381751, 47.591586], [-122.381742, 47.591549], [-122.381735, 47.591519], [-122.381727, 47.591485], [-122.381712, 47.591426], [-122.381725, 47.59138], [-122.381748, 47.59136], [-122.38178, 47.591337], [-122.381809, 47.591322], [-122.381848, 47.591289], [-122.381882, 47.591245], [-122.381882, 47.59122], [-122.381878, 47.59119], [-122.381868, 47.591153], [-122.381849, 47.591108], [-122.381836, 47.591081], [-122.381822, 47.591057], [-122.381799, 47.591028], [-122.381764, 47.590992], [-122.381717, 47.590955], [-122.381658, 47.590908], [-122.38161, 47.590851], [-122.381583, 47.590796], [-122.381571, 47.590755], [-122.381565, 47.590722], [-122.381567, 47.59069], [-122.381569, 47.590644], [-122.38157, 47.590608], [-122.38157, 47.590573], [-122.381568, 47.590544], [-122.381575, 47.590514], [-122.381592, 47.590483], [-122.381637, 47.59047], [-122.381693, 47.590451], [-122.381681, 47.590406], [-122.38167, 47.59037], [-122.381663, 47.590342], [-122.381646, 47.590298], [-122.381625, 47.590259], [-122.381602, 47.590198], [-122.381577, 47.590139], [-122.381549, 47.590091], [-122.381513, 47.590037], [-122.381471, 47.589989], [-122.381443, 47.589952], [-122.381416, 47.589916], [-122.381372, 47.589871], [-122.381336, 47.589836], [-122.381312, 47.589811], [-122.381282, 47.589782], [-122.381234, 47.589745], [-122.381192, 47.589718], [-122.381144, 47.589701], [-122.381099, 47.589691], [-122.381062, 47.589685], [-122.381008, 47.589681], [-122.381007, 47.589709], [-122.380989, 47.589733], [-122.380945, 47.589731], [-122.380891, 47.589714], [-122.380829, 47.589699], [-122.380771, 47.589694], [-122.380727, 47.589692], [-122.380676, 47.589692], [-122.380638, 47.58969], [-122.380589, 47.589695], [-122.380543, 47.589696], [-122.380461, 47.58969], [-122.380394, 47.589675], [-122.380342, 47.589639], [-122.380308, 47.589617], [-122.380291, 47.589593], [-122.380268, 47.58956], [-122.380247, 47.589518], [-122.380219, 47.589483], [-122.380172, 47.589456], [-122.380145, 47.589434], [-122.380111, 47.589406], [-122.38009, 47.589374], [-122.380077, 47.589344], [-122.380083, 47.589319], [-122.380092, 47.589279], [-122.3801, 47.589251], [-122.380098, 47.589225], [-122.380083, 47.589187], [-122.380065, 47.589152], [-122.380044, 47.589104], [-122.380016, 47.58905], [-122.380015, 47.589007], [-122.380031, 47.588965], [-122.380066, 47.58894], [-122.380101, 47.588925], [-122.380153, 47.588907], [-122.380155, 47.588875], [-122.380139, 47.58883], [-122.38012, 47.588808], [-122.380091, 47.58878], [-122.380053, 47.588749], [-122.380006, 47.588711], [-122.379964, 47.588673], [-122.379923, 47.588642], [-122.379873, 47.588612], [-122.379836, 47.588584], [-122.379782, 47.588552], [-122.379734, 47.588522], [-122.379686, 47.588503], [-122.379642, 47.588489], [-122.379557, 47.588477], [-122.379501, 47.588483], [-122.379479, 47.588504], [-122.379466, 47.588536], [-122.379428, 47.588542], [-122.379391, 47.588545], [-122.379323, 47.588544], [-122.379279, 47.588515], [-122.379261, 47.588488], [-122.37924, 47.588455], [-122.379221, 47.58843], [-122.379199, 47.588394], [-122.379177, 47.588367], [-122.379153, 47.588341], [-122.379124, 47.588318], [-122.379084, 47.588297], [-122.379042, 47.588279], [-122.379008, 47.588265], [-122.378968, 47.588241], [-122.378925, 47.588214], [-122.378886, 47.588188], [-122.378855, 47.588166], [-122.378815, 47.58814], [-122.378775, 47.58811], [-122.378739, 47.588079], [-122.378705, 47.588037], [-122.378673, 47.587995], [-122.378652, 47.587976], [-122.37862, 47.587945], [-122.378597, 47.587919], [-122.378567, 47.587885], [-122.378544, 47.587865], [-122.378518, 47.587843], [-122.378467, 47.587815], [-122.378414, 47.587805], [-122.378348, 47.587798], [-122.378288, 47.587789], [-122.378253, 47.587779], [-122.378212, 47.587758], [-122.378179, 47.587738], [-122.378152, 47.587719], [-122.378122, 47.587693], [-122.378105, 47.58767], [-122.378089, 47.587643], [-122.378076, 47.587615], [-122.378063, 47.587586], [-122.378054, 47.587555], [-122.378051, 47.587509], [-122.378053, 47.587465], [-122.378066, 47.587432], [-122.378045, 47.587408], [-122.378017, 47.587375], [-122.377974, 47.58734], [-122.377946, 47.587324], [-122.37791, 47.587304], [-122.377866, 47.587277], [-122.377829, 47.587253], [-122.377785, 47.587232], [-122.377732, 47.587213], [-122.377692, 47.587219], [-122.377658, 47.587237], [-122.377614, 47.587248], [-122.377574, 47.587241], [-122.377517, 47.587217], [-122.377479, 47.587196], [-122.377451, 47.587179], [-122.377414, 47.587158], [-122.377384, 47.587141], [-122.377344, 47.587114], [-122.377286, 47.587094], [-122.37724, 47.587077], [-122.37721, 47.587063], [-122.377158, 47.587039], [-122.377115, 47.587012], [-122.37707, 47.586989], [-122.377013, 47.58696], [-122.376973, 47.586937], [-122.376941, 47.58691], [-122.37692, 47.586889], [-122.376889, 47.586871], [-122.37684, 47.586846], [-122.376812, 47.586828], [-122.376778, 47.58681], [-122.376734, 47.586793], [-122.376665, 47.586769], [-122.376606, 47.586751], [-122.37657, 47.586755], [-122.376531, 47.586767], [-122.376472, 47.586784], [-122.376418, 47.586791], [-122.376374, 47.586792], [-122.376355, 47.586771], [-122.376339, 47.586723], [-122.376314, 47.586694], [-122.37628, 47.586657], [-122.376245, 47.586621], [-122.376204, 47.586583], [-122.376159, 47.586532], [-122.376142, 47.586503], [-122.376105, 47.58647], [-122.375958, 47.58636], [-122.375829, 47.586275], [-122.375677, 47.586155], [-122.375637, 47.586128], [-122.37561, 47.586109], [-122.375572, 47.58608], [-122.375552, 47.586056], [-122.37554, 47.586024], [-122.375514, 47.585999], [-122.375486, 47.585965], [-122.375459, 47.585933], [-122.375443, 47.585909], [-122.37543, 47.58588], [-122.375419, 47.585852], [-122.375396, 47.585811], [-122.375355, 47.585752], [-122.375337, 47.585726], [-122.37531, 47.585689], [-122.375276, 47.585657], [-122.375241, 47.585635], [-122.375196, 47.585611], [-122.375139, 47.585586], [-122.375079, 47.585555], [-122.374998, 47.585508], [-122.374932, 47.585459], [-122.374812, 47.585386], [-122.374412, 47.585132], [-122.373843, 47.584739], [-122.373803, 47.584711], [-122.373755, 47.584676], [-122.373703, 47.584634], [-122.373607, 47.584577], [-122.373554, 47.584546], [-122.37351, 47.584509], [-122.373464, 47.584467], [-122.373412, 47.584415], [-122.373331, 47.584334], [-122.373274, 47.584283], [-122.373241, 47.58425], [-122.373202, 47.584214], [-122.373153, 47.584166], [-122.373097, 47.584117], [-122.373057, 47.584074], [-122.372986, 47.584026], [-122.372937, 47.583991], [-122.37288, 47.583965], [-122.372821, 47.583935], [-122.372779, 47.583904], [-122.372716, 47.583865], [-122.372664, 47.58382], [-122.372612, 47.583774], [-122.372585, 47.58373], [-122.372556, 47.583684], [-122.372533, 47.583633], [-122.372527, 47.58358], [-122.372529, 47.583547], [-122.37251, 47.583517], [-122.372476, 47.583492], [-122.372423, 47.583455], [-122.372377, 47.583417], [-122.37226, 47.583323], [-122.372206, 47.583319], [-122.372175, 47.58334], [-122.372132, 47.583366], [-122.37209, 47.583381], [-122.372026, 47.583393], [-122.37196, 47.583388], [-122.371848, 47.583368], [-122.371743, 47.583349], [-122.371602, 47.583327], [-122.371462, 47.583298], [-122.371329, 47.583276], [-122.371119, 47.583226], [-122.371065, 47.583215], [-122.370968, 47.5832], [-122.370892, 47.583189], [-122.370794, 47.583172], [-122.370691, 47.583159], [-122.370578, 47.583141], [-122.370449, 47.583123], [-122.370331, 47.583107], [-122.370167, 47.583085], [-122.370112, 47.58308], [-122.370075, 47.583083], [-122.370064, 47.583116], [-122.370063, 47.583142], [-122.370062, 47.583182], [-122.370062, 47.583208], [-122.370059, 47.583276], [-122.370059, 47.583336], [-122.370054, 47.583402], [-122.37005, 47.583443], [-122.370042, 47.583477], [-122.370026, 47.58351], [-122.369992, 47.583548], [-122.369948, 47.583573], [-122.36989, 47.583598], [-122.369822, 47.583633], [-122.369749, 47.583648], [-122.369677, 47.583667], [-122.369611, 47.583681], [-122.369537, 47.583706], [-122.36949, 47.583734], [-122.369433, 47.583769], [-122.3694, 47.583788], [-122.369359, 47.583795], [-122.369306, 47.583796], [-122.369247, 47.583785], [-122.369196, 47.583783], [-122.369112, 47.583788], [-122.369047, 47.583792], [-122.368988, 47.583809], [-122.368987, 47.583843], [-122.368987, 47.583893], [-122.36899, 47.583999], [-122.368991, 47.584081], [-122.368996, 47.58418], [-122.368998, 47.584266], [-122.368996, 47.58438], [-122.368992, 47.584478], [-122.36899, 47.584553], [-122.368986, 47.584622], [-122.368989, 47.584706], [-122.368988, 47.584961], [-122.368988, 47.585033], [-122.368962, 47.585053], [-122.368928, 47.585067], [-122.368879, 47.585087], [-122.368875, 47.58506], [-122.368873, 47.585033], [-122.368874, 47.584973], [-122.368872, 47.584881], [-122.368873, 47.584759], [-122.368843, 47.584719], [-122.368782, 47.584717], [-122.368702, 47.584717], [-122.368654, 47.58472], [-122.368645, 47.58475], [-122.36862, 47.584769], [-122.368593, 47.58479], [-122.368482, 47.584884], [-122.368431, 47.58492], [-122.368353, 47.584966], [-122.368288, 47.585008], [-122.368231, 47.585042], [-122.368183, 47.585074], [-122.368129, 47.585097], [-122.368092, 47.585106], [-122.368028, 47.585114], [-122.367981, 47.585095], [-122.36795, 47.585074], [-122.367888, 47.58504], [-122.36783, 47.584997], [-122.367749, 47.584925], [-122.367721, 47.584901], [-122.367674, 47.584859], [-122.367506, 47.584747], [-122.367453, 47.584726], [-122.367394, 47.584708], [-122.36731, 47.5847], [-122.367245, 47.584704], [-122.367176, 47.584729], [-122.367122, 47.584752], [-122.367075, 47.584771], [-122.367036, 47.584775], [-122.366997, 47.584758], [-122.366958, 47.58476], [-122.36689, 47.584778], [-122.366831, 47.584783], [-122.366774, 47.584773], [-122.366739, 47.584766], [-122.366689, 47.584762], [-122.366613, 47.584783], [-122.366593, 47.584804], [-122.366576, 47.58484], [-122.366528, 47.584838], [-122.366445, 47.584837], [-122.366364, 47.584837], [-122.36629, 47.584836], [-122.366252, 47.584838], [-122.36625, 47.584868], [-122.366251, 47.584908], [-122.366251, 47.584964], [-122.366222, 47.584984], [-122.36616, 47.584986], [-122.366087, 47.584972], [-122.366086, 47.584948], [-122.366086, 47.584891], [-122.366087, 47.584826], [-122.366084, 47.584745], [-122.366087, 47.584649], [-122.366086, 47.584553], [-122.366087, 47.584468], [-122.366072, 47.584405], [-122.366022, 47.584405], [-122.365803, 47.584407], [-122.36575, 47.584408], [-122.365691, 47.584417], [-122.365666, 47.584437], [-122.365467, 47.58444], [-122.365388, 47.584444], [-122.365293, 47.584447], [-122.365206, 47.584446], [-122.365131, 47.584445], [-122.365076, 47.584442], [-122.365021, 47.584435], [-122.364948, 47.584429], [-122.364865, 47.584425], [-122.364524, 47.58443], [-122.364433, 47.584432], [-122.364335, 47.584432], [-122.364275, 47.584432], [-122.364232, 47.584429], [-122.364161, 47.584425], [-122.36408, 47.584418], [-122.364025, 47.584421], [-122.363984, 47.584429], [-122.363939, 47.584426], [-122.363876, 47.584421], [-122.36381, 47.584417], [-122.363745, 47.584411], [-122.36366, 47.58441], [-122.363642, 47.584388], [-122.363607, 47.584373], [-122.363554, 47.584374], [-122.363468, 47.584377], [-122.363412, 47.584378], [-122.363321, 47.58438], [-122.363188, 47.584381], [-122.363128, 47.584379], [-122.363077, 47.584378], [-122.363013, 47.584382], [-122.362971, 47.584393], [-122.36293, 47.584401], [-122.362797, 47.584395], [-122.362735, 47.58438], [-122.362653, 47.584359], [-122.362573, 47.584333], [-122.362507, 47.584315], [-122.362452, 47.584301], [-122.36241, 47.58429], [-122.362336, 47.584254], [-122.362249, 47.584222], [-122.362195, 47.584197], [-122.362136, 47.584157], [-122.362114, 47.584128], [-122.362103, 47.584098], [-122.362098, 47.584065], [-122.362102, 47.58404], [-122.362118, 47.584005], [-122.362135, 47.583953], [-122.362155, 47.583871], [-122.362158, 47.583764], [-122.362117, 47.58355], [-122.362068, 47.583455], [-122.362006, 47.58337], [-122.36195, 47.583353], [-122.361903, 47.583318], [-122.361899, 47.583289], [-122.361904, 47.583202], [-122.361901, 47.583132], [-122.361897, 47.583029], [-122.361933, 47.583025], [-122.361937, 47.582998], [-122.361935, 47.582964], [-122.361933, 47.582921], [-122.36193, 47.582886], [-122.361918, 47.582842], [-122.36191, 47.582813], [-122.361908, 47.582785], [-122.361924, 47.582761], [-122.361954, 47.582734], [-122.361983, 47.582709], [-122.362015, 47.582675], [-122.362042, 47.582645], [-122.362057, 47.582591], [-122.362059, 47.582534], [-122.36205, 47.582287], [-122.362051, 47.582192], [-122.362053, 47.58209], [-122.362056, 47.581991], [-122.362066, 47.581896], [-122.36207, 47.581813], [-122.362072, 47.581736], [-122.362065, 47.58165], [-122.36206, 47.581576], [-122.362057, 47.581517], [-122.362048, 47.581461], [-122.362024, 47.581416], [-122.361987, 47.581385], [-122.361958, 47.581357], [-122.361923, 47.581347], [-122.361874, 47.581345], [-122.361828, 47.581344], [-122.361781, 47.581345], [-122.361739, 47.581347], [-122.361699, 47.581345], [-122.361697, 47.581314], [-122.361684, 47.581287], [-122.361678, 47.581261], [-122.361678, 47.581222], [-122.361675, 47.581147], [-122.361681, 47.581052], [-122.361682, 47.580915], [-122.361687, 47.580813], [-122.361685, 47.580738], [-122.361683, 47.5807], [-122.361682, 47.580657], [-122.361681, 47.580624], [-122.361706, 47.580601], [-122.361749, 47.5806], [-122.361802, 47.580599], [-122.361829, 47.580576], [-122.361829, 47.580543], [-122.361819, 47.580497], [-122.361761, 47.580496], [-122.361662, 47.580496], [-122.361551, 47.580497], [-122.361448, 47.580502], [-122.361406, 47.580503], [-122.361401, 47.580479], [-122.361399, 47.580432], [-122.361397, 47.580329], [-122.361397, 47.580238], [-122.361397, 47.580118], [-122.361395, 47.580067], [-122.361397, 47.579977], [-122.361395, 47.579843], [-122.361395, 47.579674], [-122.361397, 47.579501], [-122.361394, 47.57934], [-122.361391, 47.579182], [-122.361392, 47.579047], [-122.361392, 47.578911], [-122.361392, 47.578863], [-122.361392, 47.578694], [-122.361393, 47.578497], [-122.361391, 47.578327], [-122.36139, 47.578158], [-122.361391, 47.577962], [-122.361389, 47.577807], [-122.361393, 47.57765], [-122.361393, 47.57752], [-122.361397, 47.57739], [-122.361394, 47.577255], [-122.361393, 47.577099], [-122.361392, 47.576918], [-122.361393, 47.576734], [-122.361394, 47.576569], [-122.361387, 47.576414], [-122.361388, 47.576307], [-122.36139, 47.576137], [-122.36139, 47.57597], [-122.36139, 47.57581], [-122.361388, 47.575645], [-122.36139, 47.575454], [-122.361389, 47.57531], [-122.361393, 47.575148], [-122.361396, 47.574974], [-122.361398, 47.574815], [-122.361402, 47.574676], [-122.361396, 47.574541], [-122.361401, 47.574389], [-122.361398, 47.574234], [-122.361391, 47.574113], [-122.361391, 47.573994], [-122.361395, 47.573908], [-122.361394, 47.573864], [-122.36141, 47.57384], [-122.361412, 47.573808], [-122.361413, 47.573764], [-122.36141, 47.573698], [-122.3614, 47.573663], [-122.361361, 47.573659], [-122.3613, 47.573661], [-122.361156, 47.573664], [-122.360979, 47.573674], [-122.36092, 47.573679], [-122.360814, 47.573681], [-122.360652, 47.573674], [-122.360557, 47.573672], [-122.360478, 47.573667], [-122.360423, 47.573668], [-122.360418, 47.573697], [-122.360374, 47.573698], [-122.360266, 47.573697], [-122.360129, 47.573698], [-122.359984, 47.573698], [-122.359896, 47.573697], [-122.359851, 47.573701], [-122.359852, 47.573729], [-122.359855, 47.573764], [-122.35985, 47.573814], [-122.359812, 47.573818], [-122.359717, 47.57382], [-122.359591, 47.573821], [-122.359467, 47.573822], [-122.359201, 47.573818], [-122.359075, 47.573818], [-122.358965, 47.573817], [-122.358828, 47.573817], [-122.358676, 47.573817], [-122.358554, 47.573817], [-122.358458, 47.573817], [-122.35842, 47.573795], [-122.358418, 47.573758], [-122.358419, 47.573709], [-122.35839, 47.573683], [-122.358343, 47.573687], [-122.358271, 47.573686], [-122.358193, 47.573685], [-122.358112, 47.573675], [-122.357996, 47.573658], [-122.357927, 47.57364], [-122.357884, 47.573625], [-122.357855, 47.57361], [-122.357815, 47.573591], [-122.357783, 47.573567], [-122.357761, 47.573548], [-122.357733, 47.573529], [-122.357695, 47.573499], [-122.357656, 47.57347], [-122.357613, 47.573442], [-122.357573, 47.573408], [-122.357503, 47.573363], [-122.357449, 47.573319], [-122.357409, 47.573295], [-122.357323, 47.573228], [-122.357286, 47.573206], [-122.35723, 47.573152], [-122.357186, 47.573119], [-122.357161, 47.573094], [-122.35714, 47.573072], [-122.357082, 47.573021], [-122.357036, 47.572992], [-122.356993, 47.572971], [-122.356962, 47.572957], [-122.356884, 47.572911], [-122.356851, 47.572894], [-122.356801, 47.572874], [-122.356765, 47.572869], [-122.356671, 47.572867], [-122.35662, 47.572894], [-122.356557, 47.572923], [-122.356525, 47.572905], [-122.356481, 47.57287], [-122.356423, 47.57282], [-122.356367, 47.572772], [-122.356255, 47.572685], [-122.356168, 47.572614], [-122.356287, 47.572548], [-122.356363, 47.572507], [-122.356244, 47.572422], [-122.35616, 47.572354], [-122.356097, 47.572281], [-122.356168, 47.57225], [-122.356211, 47.572201], [-122.356256, 47.572156], [-122.356217, 47.572129], [-122.356175, 47.572095], [-122.356139, 47.572113], [-122.356058, 47.572144], [-122.35602, 47.572151], [-122.355932, 47.572156], [-122.35587, 47.572127], [-122.355809, 47.572082], [-122.355738, 47.572074], [-122.355687, 47.572038], [-122.355701, 47.572012], [-122.355663, 47.571975], [-122.355592, 47.571908], [-122.355467, 47.571825], [-122.355425, 47.571776], [-122.355367, 47.57174], [-122.355281, 47.571726], [-122.355197, 47.57168], [-122.355069, 47.571645], [-122.354951, 47.571588], [-122.354884, 47.571533], [-122.354862, 47.571455], [-122.354873, 47.571357], [-122.354876, 47.571243], [-122.354846, 47.571159], [-122.354745, 47.571089], [-122.354605, 47.57107], [-122.354479, 47.571089], [-122.354359, 47.571094], [-122.35428, 47.571048], [-122.354171, 47.570953], [-122.354067, 47.570855], [-122.353955, 47.570761], [-122.353822, 47.570664], [-122.353691, 47.570568], [-122.353553, 47.57046], [-122.353403, 47.570338], [-122.353273, 47.570237], [-122.353127, 47.570136], [-122.352987, 47.570024], [-122.352893, 47.569967], [-122.352853, 47.569892], [-122.352806, 47.56986], [-122.352842, 47.569815], [-122.352837, 47.569777], [-122.352784, 47.56974], [-122.352728, 47.569691], [-122.352719, 47.569645], [-122.352684, 47.56963], [-122.352633, 47.569642], [-122.352563, 47.569647], [-122.352448, 47.569696], [-122.352347, 47.569629], [-122.35217, 47.569505], [-122.351987, 47.569375], [-122.351784, 47.569224], [-122.351633, 47.569102], [-122.351466, 47.568984], [-122.351555, 47.568922], [-122.351536, 47.568899], [-122.351423, 47.568818], [-122.35128, 47.56871], [-122.351178, 47.568639], [-122.351108, 47.5686], [-122.351074, 47.568576], [-122.350963, 47.568623], [-122.350853, 47.56855], [-122.350879, 47.568521], [-122.350827, 47.568481], [-122.350807, 47.568424], [-122.350815, 47.568368], [-122.350778, 47.56832], [-122.350682, 47.568267], [-122.350594, 47.56821], [-122.350539, 47.568161], [-122.350517, 47.568106], [-122.350448, 47.568064], [-122.350372, 47.568014], [-122.350304, 47.567933], [-122.35027, 47.567863], [-122.350244, 47.567789], [-122.350236, 47.567734], [-122.350199, 47.567696], [-122.350172, 47.56764], [-122.350152, 47.567574], [-122.35015, 47.567485], [-122.350138, 47.567439], [-122.350131, 47.56739], [-122.350145, 47.567355], [-122.350175, 47.567315], [-122.350204, 47.56728], [-122.350253, 47.567226], [-122.350319, 47.567172], [-122.350364, 47.567119], [-122.350403, 47.567073], [-122.35042, 47.567021], [-122.350407, 47.566966], [-122.35041, 47.566884], [-122.350388, 47.566825], [-122.350323, 47.566788], [-122.350318, 47.566739], [-122.35031, 47.566668], [-122.350305, 47.56662], [-122.350307, 47.566591], [-122.350323, 47.566551], [-122.350291, 47.566481], [-122.350234, 47.56643], [-122.350242, 47.566364], [-122.350296, 47.566315], [-122.350353, 47.566261], [-122.350347, 47.566211], [-122.350275, 47.56618], [-122.35019, 47.566163], [-122.35015, 47.566173], [-122.350102, 47.566144], [-122.350042, 47.566068], [-122.349954, 47.565926], [-122.349858, 47.565946], [-122.349807, 47.565861], [-122.349894, 47.565838], [-122.349839, 47.565695], [-122.349888, 47.565685], [-122.349841, 47.565644], [-122.34976, 47.56556], [-122.349744, 47.565517], [-122.349707, 47.565468], [-122.349636, 47.565418], [-122.349545, 47.565372], [-122.34951, 47.565346], [-122.34951, 47.565291], [-122.349494, 47.565253], [-122.349463, 47.565236], [-122.349508, 47.565214], [-122.349497, 47.565143], [-122.349445, 47.565105], [-122.349327, 47.565102], [-122.349288, 47.56503], [-122.349136, 47.565065], [-122.34897, 47.565103], [-122.348955, 47.565081], [-122.348874, 47.564915], [-122.348756, 47.564659], [-122.34866, 47.564454], [-122.348562, 47.564244], [-122.348474, 47.564056], [-122.348392, 47.563896], [-122.348322, 47.563768], [-122.34826, 47.563609], [-122.348192, 47.563479], [-122.348144, 47.563376], [-122.34817, 47.563327], [-122.348242, 47.563263], [-122.348313, 47.5632], [-122.348445, 47.563093], [-122.348552, 47.562995], [-122.348736, 47.56282], [-122.348892, 47.562675], [-122.349035, 47.562541], [-122.34917, 47.562428], [-122.349249, 47.562355], [-122.349318, 47.562373], [-122.349374, 47.562401], [-122.349406, 47.562388], [-122.349454, 47.562345], [-122.349504, 47.562286], [-122.349398, 47.562216], [-122.349275, 47.562146], [-122.349324, 47.562086], [-122.349425, 47.562027], [-122.349489, 47.56205], [-122.349548, 47.562055], [-122.349581, 47.562026], [-122.349637, 47.561963], [-122.349687, 47.561982], [-122.349738, 47.562019], [-122.349758, 47.561978], [-122.349827, 47.561943], [-122.349865, 47.561917], [-122.349881, 47.561895], [-122.349871, 47.56187], [-122.349916, 47.561836], [-122.349978, 47.5618], [-122.35007, 47.561764], [-122.350127, 47.561751], [-122.350201, 47.561753], [-122.350241, 47.561762], [-122.350305, 47.561761], [-122.35034, 47.561721], [-122.350308, 47.561689], [-122.350251, 47.561637], [-122.350192, 47.561576], [-122.350115, 47.56151], [-122.350073, 47.561467], [-122.350038, 47.561422], [-122.350033, 47.56138], [-122.350036, 47.561338], [-122.350015, 47.561313], [-122.350007, 47.561278], [-122.350021, 47.56123], [-122.350049, 47.561177], [-122.350096, 47.561129], [-122.350176, 47.561094], [-122.350259, 47.561057], [-122.350365, 47.561035], [-122.350443, 47.561018], [-122.35052, 47.561], [-122.350571, 47.560978], [-122.350552, 47.560913], [-122.350526, 47.560834], [-122.350486, 47.560705], [-122.35041, 47.560616], [-122.350363, 47.56057], [-122.35032, 47.560505], [-122.350304, 47.560406], [-122.35029, 47.560285], [-122.350281, 47.560174], [-122.350272, 47.560095], [-122.350249, 47.560033], [-122.350255, 47.559977], [-122.350246, 47.5599], [-122.350228, 47.559845], [-122.350218, 47.559755], [-122.350227, 47.559672], [-122.350236, 47.559601], [-122.350233, 47.559535], [-122.350226, 47.5595], [-122.350217, 47.559426], [-122.350231, 47.559357], [-122.350261, 47.559284], [-122.350288, 47.559201], [-122.350312, 47.55916], [-122.350318, 47.559094], [-122.350318, 47.559065], [-122.350302, 47.558999], [-122.35032, 47.558946], [-122.350362, 47.558919], [-122.350376, 47.558875], [-122.350383, 47.5588], [-122.350385, 47.558704], [-122.350368, 47.558657], [-122.350362, 47.558593], [-122.350363, 47.558531], [-122.350366, 47.558495], [-122.350375, 47.558471], [-122.350427, 47.558452], [-122.350436, 47.558418], [-122.350434, 47.55838], [-122.350441, 47.558352], [-122.350458, 47.558324], [-122.350466, 47.558286], [-122.35047, 47.55824], [-122.350471, 47.558197], [-122.35047, 47.558168], [-122.35047, 47.558123], [-122.350473, 47.558079], [-122.35048, 47.558032], [-122.350481, 47.557996], [-122.35046, 47.557973], [-122.350464, 47.557947], [-122.350498, 47.557929], [-122.350434, 47.557899], [-122.350397, 47.557882], [-122.350356, 47.557852], [-122.350328, 47.557824], [-122.350309, 47.557786], [-122.350305, 47.557749], [-122.350283, 47.557723], [-122.350268, 47.557691], [-122.350264, 47.557651], [-122.350251, 47.557602], [-122.350217, 47.557552], [-122.350182, 47.557515], [-122.350151, 47.557471], [-122.350112, 47.557423], [-122.350094, 47.557376], [-122.350071, 47.557344], [-122.350031, 47.557323], [-122.349977, 47.557306], [-122.349939, 47.557279], [-122.349912, 47.55724], [-122.349897, 47.557195], [-122.349885, 47.557154], [-122.349858, 47.557112], [-122.349811, 47.557057], [-122.349728, 47.556962], [-122.349672, 47.55692], [-122.34961, 47.556858], [-122.34956, 47.556811], [-122.349489, 47.55675], [-122.349426, 47.556703], [-122.349375, 47.556657], [-122.349354, 47.556636], [-122.349331, 47.556612], [-122.349304, 47.556581], [-122.349268, 47.556553], [-122.349226, 47.556514], [-122.349177, 47.556463], [-122.349135, 47.556403], [-122.349107, 47.556369], [-122.349077, 47.556341], [-122.349034, 47.556312], [-122.348996, 47.556279], [-122.348952, 47.556243], [-122.348921, 47.556217], [-122.348884, 47.55621], [-122.34883, 47.556173], [-122.348789, 47.556136], [-122.348755, 47.556091], [-122.348747, 47.556049], [-122.348745, 47.556015], [-122.348771, 47.55598], [-122.348789, 47.555955], [-122.34875, 47.555942], [-122.348706, 47.555942], [-122.348659, 47.55594], [-122.348613, 47.555929], [-122.348567, 47.555913], [-122.348539, 47.555888], [-122.348505, 47.555862], [-122.348452, 47.555837], [-122.348406, 47.555813], [-122.348347, 47.555783], [-122.348282, 47.555744], [-122.348164, 47.555677], [-122.348116, 47.555655], [-122.348056, 47.555638], [-122.347977, 47.555615], [-122.347919, 47.555594], [-122.347873, 47.555569], [-122.347835, 47.555544], [-122.347776, 47.555489], [-122.347749, 47.555462], [-122.347745, 47.555357], [-122.347766, 47.555317], [-122.347719, 47.55531], [-122.347656, 47.555299], [-122.347584, 47.555283], [-122.347453, 47.555261], [-122.347343, 47.555241], [-122.347226, 47.555219], [-122.347125, 47.555196], [-122.347004, 47.555169], [-122.346888, 47.555146], [-122.346735, 47.555117], [-122.346574, 47.555082], [-122.346486, 47.555066], [-122.346427, 47.555081], [-122.34635, 47.555087], [-122.346166, 47.555048], [-122.346109, 47.554984], [-122.346057, 47.554988], [-122.345991, 47.554993], [-122.345928, 47.555005], [-122.34584, 47.555022], [-122.345691, 47.555043], [-122.345565, 47.55506], [-122.345385, 47.555088], [-122.345339, 47.55509], [-122.345258, 47.555094], [-122.345206, 47.5551], [-122.345134, 47.555114], [-122.34505, 47.555131], [-122.344936, 47.555146], [-122.344808, 47.555165], [-122.344682, 47.555181], [-122.344551, 47.5552], [-122.344442, 47.555215], [-122.344322, 47.555234], [-122.344236, 47.555246], [-122.344158, 47.555252], [-122.344102, 47.555254], [-122.344064, 47.555249], [-122.344024, 47.555251], [-122.343988, 47.55526], [-122.343939, 47.555267], [-122.343866, 47.55525], [-122.343818, 47.555231], [-122.343522, 47.554671], [-122.343029, 47.553735], [-122.342507, 47.552741], [-122.342323, 47.552367], [-122.342337, 47.552334], [-122.342394, 47.552291], [-122.342359, 47.552266], [-122.342324, 47.552264], [-122.342256, 47.552272], [-122.342126, 47.552294], [-122.341682, 47.55146], [-122.341827, 47.551452], [-122.341848, 47.551422], [-122.341846, 47.551271], [-122.341846, 47.551175], [-122.341835, 47.551077], [-122.341733, 47.551076], [-122.341636, 47.551075], [-122.341582, 47.551076], [-122.341581, 47.551111], [-122.341571, 47.551142], [-122.341509, 47.551141], [-122.341436, 47.551134], [-122.341432, 47.551097], [-122.341428, 47.551051], [-122.341425, 47.550985], [-122.341424, 47.550902], [-122.341426, 47.550831], [-122.341426, 47.550745], [-122.341429, 47.550643], [-122.341413, 47.550583], [-122.341342, 47.550569], [-122.341256, 47.550569], [-122.341254, 47.550608], [-122.341254, 47.550661], [-122.341245, 47.550743], [-122.341244, 47.550811], [-122.341207, 47.55081], [-122.341174, 47.550793], [-122.341152, 47.550727], [-122.34113, 47.55065], [-122.341114, 47.550595], [-122.341111, 47.550552], [-122.341147, 47.550547], [-122.341138, 47.550514], [-122.341089, 47.550504], [-122.341052, 47.550408], [-122.341013, 47.550323], [-122.340982, 47.550211], [-122.341023, 47.550207], [-122.341091, 47.550204], [-122.341107, 47.550228], [-122.34118, 47.550223], [-122.341235, 47.5502], [-122.341266, 47.550185], [-122.341302, 47.55017], [-122.34136, 47.550147], [-122.341397, 47.550135], [-122.341428, 47.550109], [-122.341439, 47.550083], [-122.341454, 47.550045], [-122.341463, 47.550005], [-122.341467, 47.549981], [-122.341468, 47.549943], [-122.341469, 47.549904], [-122.341469, 47.549852], [-122.341479, 47.549794], [-122.341483, 47.54975], [-122.341488, 47.549723], [-122.341509, 47.549703], [-122.341545, 47.549696], [-122.34158, 47.549684], [-122.341581, 47.549659], [-122.341576, 47.54963], [-122.341587, 47.549577], [-122.341627, 47.549559], [-122.341654, 47.549523], [-122.341677, 47.549484], [-122.341692, 47.549452], [-122.341706, 47.549401], [-122.34169, 47.549366], [-122.34167, 47.54934], [-122.341656, 47.549303], [-122.341654, 47.549278], [-122.341666, 47.54924], [-122.341705, 47.549218], [-122.341773, 47.549204], [-122.341827, 47.549197], [-122.341885, 47.549191], [-122.341929, 47.549178], [-122.341961, 47.549163], [-122.341993, 47.549139], [-122.342023, 47.549112], [-122.342062, 47.549073], [-122.342102, 47.549029], [-122.342142, 47.548972], [-122.342181, 47.548927], [-122.342203, 47.548896], [-122.342219, 47.54884], [-122.342226, 47.548785], [-122.342221, 47.548756], [-122.342292, 47.548674], [-122.34232, 47.548639], [-122.342367, 47.548585], [-122.342399, 47.548555], [-122.342446, 47.548518], [-122.342489, 47.548488], [-122.342537, 47.548446], [-122.342581, 47.548404], [-122.342565, 47.548366], [-122.342519, 47.548361], [-122.342471, 47.54836], [-122.342414, 47.54836], [-122.342359, 47.548359], [-122.342293, 47.548358], [-122.342257, 47.548357], [-122.34221, 47.548356], [-122.342163, 47.548356], [-122.342102, 47.548357], [-122.342056, 47.548358], [-122.34197, 47.54836], [-122.341917, 47.548362], [-122.341855, 47.548365], [-122.341807, 47.548367], [-122.341732, 47.548372], [-122.341667, 47.548377], [-122.341585, 47.548381], [-122.341504, 47.548382], [-122.341424, 47.548383], [-122.341344, 47.548381], [-122.341284, 47.548381], [-122.341196, 47.548376], [-122.3411, 47.548371], [-122.341013, 47.548366], [-122.340924, 47.548363], [-122.340842, 47.548351], [-122.340769, 47.548333], [-122.340714, 47.548304], [-122.340674, 47.548259], [-122.340643, 47.548219], [-122.340594, 47.548161], [-122.34052, 47.548177], [-122.340433, 47.548194], [-122.340316, 47.548222], [-122.340208, 47.548249], [-122.340155, 47.548256], [-122.340127, 47.548205], [-122.340066, 47.548089], [-122.340001, 47.547968], [-122.339939, 47.547846], [-122.339854, 47.547681], [-122.33978, 47.547545], [-122.339656, 47.547307], [-122.339568, 47.547137], [-122.339505, 47.547018], [-122.339444, 47.546902], [-122.339358, 47.54674], [-122.339306, 47.546642], [-122.339246, 47.546529], [-122.339145, 47.546337], [-122.33909, 47.546228], [-122.339037, 47.546132], [-122.338982, 47.546026], [-122.338919, 47.545908], [-122.338873, 47.545817], [-122.338806, 47.54569], [-122.338703, 47.545496], [-122.338649, 47.545393], [-122.338597, 47.545296], [-122.33854, 47.545189], [-122.338543, 47.545151], [-122.338673, 47.545118], [-122.338883, 47.54507], [-122.338912, 47.545056], [-122.338903, 47.545019], [-122.338884, 47.54497], [-122.338852, 47.54487], [-122.338822, 47.544806], [-122.338789, 47.544746], [-122.338766, 47.544696], [-122.338754, 47.544663], [-122.338734, 47.544617], [-122.338704, 47.544537], [-122.338682, 47.544508], [-122.338633, 47.54446], [-122.33861, 47.544423], [-122.338596, 47.544387], [-122.338589, 47.544355], [-122.338569, 47.544302], [-122.338536, 47.544291], [-122.338515, 47.544271], [-122.338497, 47.54423], [-122.338487, 47.544195], [-122.338469, 47.544145], [-122.338429, 47.544048], [-122.338402, 47.543997], [-122.338345, 47.543908], [-122.338329, 47.543881], [-122.338308, 47.543838], [-122.338272, 47.543769], [-122.338249, 47.543735], [-122.338209, 47.543695], [-122.33818, 47.543672], [-122.33812, 47.543629], [-122.338071, 47.543601], [-122.338017, 47.543588], [-122.337961, 47.543599], [-122.337937, 47.543627], [-122.337901, 47.543685], [-122.337857, 47.543699], [-122.337808, 47.543702], [-122.33777, 47.543699], [-122.337711, 47.543691], [-122.337674, 47.543681], [-122.337639, 47.543662], [-122.337579, 47.543626], [-122.337511, 47.543576], [-122.337486, 47.543545], [-122.337469, 47.54352], [-122.337438, 47.543489], [-122.337402, 47.543468], [-122.337363, 47.543458], [-122.337325, 47.543442], [-122.337284, 47.543405], [-122.337225, 47.543322], [-122.337167, 47.543255], [-122.337111, 47.543202], [-122.337031, 47.543143], [-122.336951, 47.543077], [-122.336833, 47.542973], [-122.33679, 47.542938], [-122.336737, 47.542905], [-122.336643, 47.542832], [-122.336484, 47.542733], [-122.336438, 47.542708], [-122.336353, 47.542664], [-122.336324, 47.54265], [-122.336309, 47.542624], [-122.3363, 47.542592], [-122.336279, 47.542564], [-122.336252, 47.542533], [-122.336222, 47.542486], [-122.336163, 47.542446], [-122.336119, 47.542419], [-122.336092, 47.542396], [-122.336046, 47.54235], [-122.335996, 47.542315], [-122.335926, 47.542278], [-122.335872, 47.54225], [-122.335835, 47.542239], [-122.335794, 47.542223], [-122.335762, 47.542239], [-122.335704, 47.542253], [-122.335662, 47.542281], [-122.335607, 47.542249], [-122.335517, 47.542187], [-122.335538, 47.542164], [-122.335561, 47.542139], [-122.335582, 47.542114], [-122.335602, 47.542088], [-122.335622, 47.542062], [-122.33564, 47.542035], [-122.335657, 47.542008], [-122.335672, 47.541981], [-122.335687, 47.541953], [-122.3357, 47.541925], [-122.335712, 47.541897], [-122.335724, 47.541869], [-122.336063, 47.541263], [-122.336077, 47.541235], [-122.336092, 47.541208], [-122.336109, 47.541181], [-122.336127, 47.541154], [-122.336146, 47.541128], [-122.336167, 47.541102], [-122.336189, 47.541077], [-122.336211, 47.541052], [-122.336235, 47.541028], [-122.336261, 47.541004], [-122.336287, 47.54098], [-122.336315, 47.540958], [-122.336344, 47.540936], [-122.336373, 47.540915], [-122.336404, 47.540894], [-122.336435, 47.540874], [-122.336468, 47.540855], [-122.336502, 47.540836], [-122.336536, 47.540818], [-122.336571, 47.540801], [-122.336607, 47.540785], [-122.336644, 47.540769], [-122.336682, 47.540755], [-122.33672, 47.540741], [-122.336759, 47.540728], [-122.336798, 47.540716], [-122.336838, 47.540705], [-122.336879, 47.540695], [-122.33692, 47.540685], [-122.336961, 47.540677], [-122.337003, 47.540669], [-122.337045, 47.540663], [-122.337087, 47.540657], [-122.33713, 47.540652], [-122.337173, 47.540648], [-122.337216, 47.540646], [-122.337259, 47.540644], [-122.337302, 47.540643], [-122.34231, 47.540258], [-122.342428, 47.54045], [-122.342635, 47.540402], [-122.343538, 47.541447], [-122.344276, 47.54327], [-122.344696, 47.545053], [-122.34509, 47.547141], [-122.345719, 47.549792], [-122.346092, 47.551146], [-122.346453, 47.552612], [-122.346461, 47.552636], [-122.346469, 47.552661], [-122.346477, 47.552685], [-122.346486, 47.552709], [-122.346494, 47.552733], [-122.346503, 47.552758], [-122.346512, 47.552782], [-122.34652, 47.552806], [-122.346529, 47.55283], [-122.346539, 47.552854], [-122.346548, 47.552878], [-122.346557, 47.552903], [-122.346566, 47.552927], [-122.346576, 47.552951], [-122.346586, 47.552975], [-122.346596, 47.552999], [-122.346606, 47.553023], [-122.346616, 47.553047], [-122.346626, 47.553071], [-122.346637, 47.553094], [-122.346647, 47.553118], [-122.346658, 47.553142], [-122.346669, 47.553166], [-122.34668, 47.55319], [-122.346691, 47.553214], [-122.346702, 47.553237], [-122.346713, 47.553261], [-122.346725, 47.553285], [-122.346736, 47.553308], [-122.346748, 47.553332], [-122.34676, 47.553356], [-122.346772, 47.553379], [-122.346784, 47.553403], [-122.346796, 47.553426], [-122.346808, 47.55345], [-122.346821, 47.553473], [-122.346834, 47.553496], [-122.346846, 47.55352], [-122.346859, 47.553543], [-122.346872, 47.553567], [-122.346885, 47.55359], [-122.346898, 47.553613], [-122.346912, 47.553636], [-122.346925, 47.55366], [-122.346938, 47.553683], [-122.346952, 47.553706], [-122.346966, 47.553729], [-122.34698, 47.553752], [-122.346994, 47.553775], [-122.347008, 47.553798], [-122.347022, 47.553821], [-122.347037, 47.553844], [-122.347051, 47.553867], [-122.347066, 47.55389], [-122.347081, 47.553912], [-122.347095, 47.553935], [-122.347111, 47.553958], [-122.347431, 47.554268], [-122.348314, 47.554934], [-122.348687, 47.555191], [-122.349429, 47.555701], [-122.349619, 47.555817], [-122.349742, 47.555902], [-122.350089, 47.556144], [-122.350236, 47.556231], [-122.350551, 47.55642], [-122.350615, 47.556462], [-122.350658, 47.556492], [-122.3507, 47.556522], [-122.350741, 47.556553], [-122.350782, 47.556584], [-122.350821, 47.556616], [-122.35086, 47.556649], [-122.350898, 47.556681], [-122.350936, 47.556715], [-122.350972, 47.556748], [-122.351008, 47.556782], [-122.351042, 47.556817], [-122.351076, 47.556852], [-122.351108, 47.556887], [-122.35114, 47.556923], [-122.351171, 47.556959], [-122.351201, 47.556995], [-122.351231, 47.557032], [-122.351258, 47.557069], [-122.351294, 47.557118], [-122.351309, 47.55714], [-122.351323, 47.557163], [-122.351338, 47.557185], [-122.351355, 47.557212], [-122.351369, 47.557235], [-122.351382, 47.557258], [-122.351395, 47.557281], [-122.351409, 47.557304], [-122.351421, 47.557327], [-122.351434, 47.55735], [-122.351446, 47.557373], [-122.351458, 47.557396], [-122.35147, 47.557419], [-122.351481, 47.557443], [-122.351492, 47.557466], [-122.351503, 47.557489], [-122.351513, 47.557513], [-122.351524, 47.557537], [-122.351534, 47.55756], [-122.351543, 47.557584], [-122.351553, 47.557608], [-122.351561, 47.557631], [-122.35157, 47.557655], [-122.351579, 47.557679], [-122.351587, 47.557703], [-122.351595, 47.557727], [-122.351603, 47.557751], [-122.35161, 47.557775], [-122.351617, 47.557799], [-122.351624, 47.557823], [-122.351631, 47.557847], [-122.351638, 47.557871], [-122.351645, 47.557896], [-122.35165, 47.55792], [-122.351659, 47.557959], [-122.351664, 47.557984], [-122.351668, 47.558008], [-122.351671, 47.558033], [-122.351675, 47.558057], [-122.351677, 47.558081], [-122.351679, 47.558106], [-122.351681, 47.558131], [-122.351682, 47.558155], [-122.351682, 47.55818], [-122.351694, 47.558579], [-122.351707, 47.559307], [-122.351709, 47.559414], [-122.351716, 47.559917], [-122.351727, 47.560596], [-122.351728, 47.561181], [-122.351729, 47.561205], [-122.351731, 47.56123], [-122.351732, 47.561255], [-122.351734, 47.561279], [-122.351736, 47.561304], [-122.351738, 47.561328], [-122.35174, 47.561353], [-122.351743, 47.561377], [-122.351745, 47.561402], [-122.351748, 47.561426], [-122.35175, 47.561451], [-122.351753, 47.561475], [-122.351756, 47.5615], [-122.351759, 47.561524], [-122.351762, 47.561549], [-122.351765, 47.561573], [-122.351769, 47.561598], [-122.351772, 47.561622], [-122.351776, 47.561647], [-122.35178, 47.561671], [-122.351883, 47.561912], [-122.352089, 47.562576], [-122.352533, 47.563845], [-122.352719, 47.564386], [-122.353039, 47.56522], [-122.353224, 47.565806], [-122.353372, 47.566254], [-122.353533, 47.566744], [-122.353682, 47.566986], [-122.353876, 47.567295], [-122.354164, 47.567745], [-122.354529, 47.568334], [-122.355202, 47.569397], [-122.355948, 47.570567], [-122.356202, 47.570958], [-122.356291, 47.570962], [-122.356756, 47.570982], [-122.357159, 47.571022], [-122.357401, 47.571051], [-122.357641, 47.571082], [-122.357881, 47.571116], [-122.35812, 47.571152], [-122.358358, 47.571192], [-122.358628, 47.571241], [-122.358848, 47.571283], [-122.358882, 47.57129], [-122.358916, 47.571296], [-122.358951, 47.571303], [-122.358986, 47.571309], [-122.35902, 47.571315], [-122.359055, 47.571322], [-122.359089, 47.571328], [-122.359124, 47.571334], [-122.359159, 47.57134], [-122.359193, 47.571345], [-122.359228, 47.571351], [-122.359263, 47.571357], [-122.359298, 47.571362], [-122.359333, 47.571368], [-122.359367, 47.571373], [-122.359404, 47.571379], [-122.359442, 47.571384], [-122.359479, 47.571389], [-122.359514, 47.571394], [-122.359549, 47.571399], [-122.359584, 47.571404], [-122.359619, 47.571408], [-122.359654, 47.571413], [-122.35969, 47.571417], [-122.359725, 47.571421], [-122.35976, 47.571426], [-122.359795, 47.57143], [-122.35983, 47.571434], [-122.359866, 47.571437], [-122.359902, 47.57144], [-122.359937, 47.571442], [-122.359973, 47.571444], [-122.360008, 47.571446], [-122.360044, 47.571448], [-122.36008, 47.57145], [-122.360115, 47.571452], [-122.360151, 47.571454], [-122.360187, 47.571455], [-122.360222, 47.571457], [-122.360258, 47.571458], [-122.360294, 47.57146], [-122.360329, 47.571461], [-122.360365, 47.571463], [-122.360401, 47.571464], [-122.360437, 47.571465], [-122.360472, 47.571466], [-122.360508, 47.571467], [-122.360544, 47.571468], [-122.36058, 47.571468], [-122.360615, 47.571469], [-122.360651, 47.57147], [-122.360687, 47.57147], [-122.360722, 47.571471], [-122.360758, 47.571471], [-122.360794, 47.571471], [-122.360832, 47.571472], [-122.36087, 47.571472], [-122.360908, 47.571472], [-122.360946, 47.571472], [-122.362038, 47.571475], [-122.363141, 47.571478], [-122.364236, 47.571484], [-122.365335, 47.571482], [-122.366434, 47.57148], [-122.367537, 47.571483], [-122.368632, 47.571481], [-122.369326, 47.571487], [-122.370186, 47.571481], [-122.370389, 47.571467], [-122.370434, 47.571464], [-122.370628, 47.571438], [-122.370628, 47.571496], [-122.37063, 47.571541], [-122.370634, 47.571585], [-122.370637, 47.571626], [-122.370641, 47.571669], [-122.370646, 47.571714], [-122.370651, 47.57176], [-122.370657, 47.571806], [-122.370662, 47.571852], [-122.370668, 47.571898], [-122.370673, 47.571945], [-122.370678, 47.571993], [-122.370683, 47.57204], [-122.370688, 47.572087], [-122.370694, 47.572135], [-122.370699, 47.572182], [-122.370705, 47.57223], [-122.37071, 47.572277], [-122.370715, 47.572325], [-122.37072, 47.572373], [-122.370725, 47.57242], [-122.37073, 47.572468], [-122.370735, 47.572515], [-122.37074, 47.572563], [-122.370869, 47.573683], [-122.370904, 47.574109], [-122.37099, 47.57467], [-122.371227, 47.575851], [-122.37147, 47.576874], [-122.37156, 47.57705], [-122.372249, 47.578247], [-122.372508, 47.578647], [-122.372519, 47.57867], [-122.372531, 47.578694], [-122.372541, 47.578717], [-122.37255, 47.578741], [-122.372559, 47.578765], [-122.372567, 47.578788], [-122.372574, 47.578812], [-122.372581, 47.578837], [-122.372587, 47.578861], [-122.372592, 47.578885], [-122.372596, 47.57891], [-122.3726, 47.578934], [-122.372603, 47.578958], [-122.372605, 47.578983], [-122.372606, 47.579007], [-122.372607, 47.579032], [-122.372607, 47.579057], [-122.372606, 47.579081], [-122.372605, 47.579106], [-122.372557, 47.57958], [-122.372484, 47.580231], [-122.372727, 47.580898], [-122.373082, 47.581811], [-122.373176, 47.582052], [-122.373256, 47.58216], [-122.373369, 47.582341], [-122.373926, 47.582968], [-122.374833, 47.583996], [-122.375534, 47.584839], [-122.376171, 47.58558], [-122.376284, 47.585776], [-122.376842, 47.586184], [-122.378554, 47.587394], [-122.380227, 47.588578], [-122.381531, 47.589496]], [[-122.350661, 47.557928], [-122.350717, 47.557974], [-122.350769, 47.557972], [-122.350792, 47.557941], [-122.350763, 47.557911], [-122.3507, 47.557918], [-122.350661, 47.557928]]]]
    },
    "properties": {
      "neighbourhood": "Industrial District",
      "neighbourhood_group": "Other neighborhoods"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.292418, 47.733753], [-122.292384, 47.732255], [-122.292376, 47.731973], [-122.292367, 47.731812], [-122.292358, 47.731544], [-122.292348, 47.731263], [-122.292341, 47.730982], [-122.29233, 47.730701], [-122.292321, 47.730419], [-122.292313, 47.730137], [-122.292302, 47.729857], [-122.292292, 47.729576], [-122.292283, 47.729296], [-122.292274, 47.729016], [-122.292265, 47.728736], [-122.292255, 47.728456], [-122.292246, 47.728176], [-122.292234, 47.727894], [-122.292228, 47.727612], [-122.292225, 47.727329], [-122.29223, 47.727045], [-122.292243, 47.726763], [-122.292264, 47.72648], [-122.292292, 47.726198], [-122.29233, 47.725916], [-122.292372, 47.725635], [-122.292422, 47.725355], [-122.292479, 47.725077], [-122.292543, 47.724799], [-122.292616, 47.724514], [-122.292699, 47.724229], [-122.292791, 47.723944], [-122.292887, 47.723659], [-122.292997, 47.723375], [-122.293115, 47.723091], [-122.293233, 47.722806], [-122.293369, 47.722521], [-122.293509, 47.722235], [-122.293662, 47.72195], [-122.29382, 47.721665], [-122.293989, 47.721383], [-122.294157, 47.721101], [-122.294322, 47.720818], [-122.294489, 47.72054], [-122.294653, 47.720262], [-122.294813, 47.719985], [-122.294978, 47.71971], [-122.29514, 47.719439], [-122.295235, 47.719276], [-122.296441, 47.71928], [-122.298264, 47.719287], [-122.30185, 47.71931], [-122.30334, 47.719328], [-122.305699, 47.719349], [-122.308348, 47.71938], [-122.310485, 47.719389], [-122.312451, 47.719414], [-122.31266, 47.719417], [-122.312675, 47.721218], [-122.312663, 47.723035], [-122.312664, 47.723996], [-122.31266, 47.724943], [-122.312655, 47.725892], [-122.312647, 47.726842], [-122.312669, 47.727797], [-122.312679, 47.728753], [-122.312688, 47.729708], [-122.312707, 47.730663], [-122.312721, 47.731625], [-122.312735, 47.732586], [-122.312745, 47.733553], [-122.312756, 47.733952], [-122.312629, 47.73395], [-122.310061, 47.733921], [-122.308695, 47.733906], [-122.30735, 47.733891], [-122.306151, 47.733877], [-122.30194, 47.733829], [-122.300593, 47.733818], [-122.299229, 47.733808], [-122.296527, 47.733786], [-122.293809, 47.733764], [-122.292418, 47.733753]]]]
    },
    "properties": {
      "neighbourhood": "Olympic Hills",
      "neighbourhood_group": "Lake City"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.308168, 47.690312], [-122.307768, 47.690309], [-122.30686, 47.690303], [-122.30682, 47.688489], [-122.306793, 47.687756], [-122.306767, 47.686411], [-122.306741, 47.685058], [-122.306708, 47.683689], [-122.306696, 47.68304], [-122.308306, 47.683048], [-122.310027, 47.683048], [-122.311711, 47.683049], [-122.312083, 47.683055], [-122.312082, 47.68303], [-122.312079, 47.683005], [-122.312076, 47.68298], [-122.312072, 47.682955], [-122.312067, 47.68293], [-122.312061, 47.682905], [-122.312055, 47.682881], [-122.312047, 47.682856], [-122.312039, 47.682832], [-122.31203, 47.682808], [-122.31202, 47.682784], [-122.312009, 47.68276], [-122.311997, 47.682736], [-122.311985, 47.682712], [-122.311971, 47.682689], [-122.311958, 47.682666], [-122.311943, 47.682643], [-122.311927, 47.68262], [-122.31191, 47.682598], [-122.311893, 47.682576], [-122.311875, 47.682554], [-122.311856, 47.682532], [-122.311835, 47.68251], [-122.31182, 47.682487], [-122.311805, 47.682465], [-122.31179, 47.682441], [-122.311777, 47.682418], [-122.311765, 47.682395], [-122.311753, 47.682371], [-122.311742, 47.682347], [-122.311732, 47.682323], [-122.311723, 47.682299], [-122.311714, 47.682274], [-122.311707, 47.68225], [-122.3117, 47.682225], [-122.311695, 47.6822], [-122.31169, 47.682176], [-122.311686, 47.682151], [-122.311683, 47.682126], [-122.311681, 47.682101], [-122.311679, 47.682076], [-122.311679, 47.682051], [-122.31168, 47.682026], [-122.311678, 47.681692], [-122.311662, 47.681118], [-122.311662, 47.681093], [-122.311662, 47.681068], [-122.311663, 47.681043], [-122.311666, 47.681018], [-122.311669, 47.680993], [-122.311673, 47.680968], [-122.311677, 47.680943], [-122.311683, 47.680918], [-122.311689, 47.680894], [-122.311698, 47.680864], [-122.311706, 47.680839], [-122.311716, 47.680815], [-122.311725, 47.680791], [-122.311736, 47.680767], [-122.311747, 47.680743], [-122.31176, 47.68072], [-122.311773, 47.680696], [-122.311786, 47.680673], [-122.311801, 47.68065], [-122.311816, 47.680627], [-122.311832, 47.680605], [-122.311851, 47.68058], [-122.311871, 47.680555], [-122.311889, 47.680534], [-122.311908, 47.680509], [-122.311925, 47.680487], [-122.31194, 47.680464], [-122.311954, 47.680441], [-122.311967, 47.680417], [-122.311979, 47.680394], [-122.311989, 47.68037], [-122.311999, 47.680346], [-122.312008, 47.680321], [-122.312016, 47.680297], [-122.312022, 47.680272], [-122.312027, 47.680247], [-122.312031, 47.680223], [-122.312035, 47.680198], [-122.312036, 47.680173], [-122.312037, 47.680148], [-122.312037, 47.680123], [-122.312035, 47.680098], [-122.312033, 47.680073], [-122.312029, 47.680048], [-122.312024, 47.680023], [-122.312015, 47.679373], [-122.311983, 47.678044], [-122.311945, 47.676729], [-122.311931, 47.675363], [-122.311922, 47.673994], [-122.311916, 47.672824], [-122.311914, 47.672097], [-122.311993, 47.672041], [-122.312331, 47.671763], [-122.313035, 47.671205], [-122.313034, 47.670985], [-122.313806, 47.671164], [-122.314415, 47.671313], [-122.315064, 47.671473], [-122.315745, 47.671634], [-122.316496, 47.671809], [-122.317252, 47.671991], [-122.318027, 47.672165], [-122.318815, 47.672343], [-122.319025, 47.672393], [-122.319058, 47.672403], [-122.31909, 47.672415], [-122.31912, 47.672428], [-122.31915, 47.672441], [-122.319178, 47.672456], [-122.319206, 47.672472], [-122.319233, 47.672488], [-122.319258, 47.672506], [-122.319281, 47.672524], [-122.319304, 47.672543], [-122.319324, 47.672563], [-122.319344, 47.672584], [-122.319608, 47.67288], [-122.320133, 47.673443], [-122.32065, 47.674], [-122.320772, 47.674132], [-122.320986, 47.674362], [-122.320953, 47.67448], [-122.320929, 47.674572], [-122.320909, 47.674656], [-122.320891, 47.674741], [-122.320876, 47.674825], [-122.320862, 47.67491], [-122.320852, 47.674995], [-122.320757, 47.675516], [-122.32071, 47.675844], [-122.320688, 47.676038], [-122.320651, 47.676544], [-122.32064, 47.67706], [-122.320648, 47.677575], [-122.320672, 47.678089], [-122.320692, 47.678604], [-122.320718, 47.679119], [-122.32074, 47.679632], [-122.320756, 47.680144], [-122.320811, 47.680652], [-122.32084, 47.680927], [-122.320886, 47.681155], [-122.32099, 47.681502], [-122.32105, 47.681679], [-122.321082, 47.681765], [-122.321108, 47.681829], [-122.321135, 47.681892], [-122.321164, 47.681954], [-122.321194, 47.682017], [-122.321226, 47.682079], [-122.32126, 47.682141], [-122.321296, 47.682202], [-122.321348, 47.682307], [-122.321385, 47.682377], [-122.321424, 47.682447], [-122.321465, 47.682515], [-122.321508, 47.682584], [-122.321553, 47.682652], [-122.321599, 47.682719], [-122.321762, 47.682958], [-122.321988, 47.683231], [-122.322111, 47.68337], [-122.322227, 47.683498], [-122.322346, 47.683624], [-122.322469, 47.683749], [-122.322586, 47.68386], [-122.322661, 47.683928], [-122.322737, 47.683995], [-122.322816, 47.684062], [-122.322896, 47.684127], [-122.322978, 47.684191], [-122.323061, 47.684255], [-122.323697, 47.684758], [-122.324339, 47.685256], [-122.32497, 47.685755], [-122.325608, 47.686255], [-122.326247, 47.686749], [-122.326878, 47.687247], [-122.326995, 47.687334], [-122.327083, 47.687403], [-122.32717, 47.687473], [-122.327254, 47.687543], [-122.327337, 47.687615], [-122.327418, 47.687688], [-122.327496, 47.687761], [-122.327801, 47.688058], [-122.328001, 47.688281], [-122.328138, 47.688436], [-122.328409, 47.6888], [-122.328481, 47.688901], [-122.328526, 47.688968], [-122.32857, 47.689036], [-122.328612, 47.689104], [-122.328652, 47.689172], [-122.32869, 47.689241], [-122.328727, 47.689311], [-122.328877, 47.689587], [-122.328975, 47.689832], [-122.329031, 47.689979], [-122.329058, 47.690056], [-122.329072, 47.690102], [-122.329027, 47.690146], [-122.328933, 47.690238], [-122.328795, 47.690371], [-122.328713, 47.690451], [-122.326568, 47.690424], [-122.325944, 47.690423], [-122.324201, 47.690407], [-122.322458, 47.69039], [-122.321987, 47.690393], [-122.320298, 47.690383], [-122.318162, 47.690372], [-122.316001, 47.690361], [-122.313865, 47.690347], [-122.311728, 47.690339], [-122.309606, 47.690324], [-122.308168, 47.690312]]]]
    },
    "properties": {
      "neighbourhood": "Roosevelt",
      "neighbourhood_group": "Other neighborhoods"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.343543, 47.628019], [-122.343558, 47.6275], [-122.34356, 47.627182], [-122.343562, 47.62714], [-122.343663, 47.625145], [-122.343642, 47.623779], [-122.344432, 47.623143], [-122.34626, 47.621778], [-122.347634, 47.620679], [-122.347928, 47.620464], [-122.349103, 47.619557], [-122.349805, 47.619011], [-122.350357, 47.61858], [-122.351348, 47.618585], [-122.35282, 47.618589], [-122.354292, 47.618593], [-122.355769, 47.6186], [-122.357237, 47.618607], [-122.357807, 47.618616], [-122.358447, 47.618608], [-122.358592, 47.618728], [-122.359281, 47.619299], [-122.360167, 47.620025], [-122.362288, 47.621785], [-122.363869, 47.623111], [-122.365411, 47.624379], [-122.366541, 47.625254], [-122.367412, 47.625887], [-122.368585, 47.626761], [-122.368333, 47.626726], [-122.367666, 47.626487], [-122.367432, 47.626393], [-122.366529, 47.626042], [-122.365719, 47.625726], [-122.364772, 47.62537], [-122.364657, 47.625275], [-122.364541, 47.625178], [-122.36454, 47.625228], [-122.364531, 47.625862], [-122.364407, 47.626442], [-122.364347, 47.626727], [-122.364355, 47.627016], [-122.363806, 47.626802], [-122.363218, 47.62674], [-122.363218, 47.626819], [-122.363221, 47.627241], [-122.363212, 47.628029], [-122.363162, 47.628851], [-122.36312, 47.629677], [-122.363119, 47.630522], [-122.36311, 47.631333], [-122.363105, 47.632323], [-122.361802, 47.632318], [-122.359895, 47.632324], [-122.358652, 47.632323], [-122.357891, 47.632318], [-122.356782, 47.632318], [-122.356734, 47.63229], [-122.356707, 47.632272], [-122.356681, 47.632253], [-122.356659, 47.632231], [-122.35664, 47.632209], [-122.356624, 47.632185], [-122.35661, 47.632158], [-122.356601, 47.632133], [-122.356596, 47.632107], [-122.356594, 47.632082], [-122.356598, 47.63149], [-122.356599, 47.6307], [-122.356609, 47.6306], [-122.356608, 47.629897], [-122.356675, 47.628955], [-122.356681, 47.628075], [-122.35584, 47.628071], [-122.355387, 47.628066], [-122.355263, 47.628127], [-122.354573, 47.628136], [-122.353669, 47.628142], [-122.35328, 47.62814], [-122.352614, 47.62814], [-122.351463, 47.628137], [-122.350155, 47.628141], [-122.350014, 47.628104], [-122.349852, 47.628108], [-122.349218, 47.628111], [-122.348424, 47.6281], [-122.347884, 47.628075], [-122.347671, 47.628068], [-122.347536, 47.628036], [-122.346892, 47.628034], [-122.346217, 47.628033], [-122.34402, 47.628019], [-122.343543, 47.628019]]]]
    },
    "properties": {
      "neighbourhood": "Lower Queen Anne",
      "neighbourhood_group": "Queen Anne"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.305462, 47.697564], [-122.30452, 47.697559], [-122.303559, 47.697558], [-122.302188, 47.697545], [-122.300802, 47.697529], [-122.300104, 47.697527], [-122.299425, 47.697521], [-122.298874, 47.697516], [-122.298192, 47.697514], [-122.297524, 47.697513], [-122.296128, 47.697497], [-122.294717, 47.697487], [-122.293316, 47.697478], [-122.291884, 47.697466], [-122.290523, 47.697453], [-122.290473, 47.697453], [-122.290381, 47.697452], [-122.28678, 47.697425], [-122.283998, 47.697413], [-122.28155, 47.697396], [-122.280032, 47.697378], [-122.28002, 47.696715], [-122.280008, 47.695602], [-122.280006, 47.694895], [-122.279986, 47.692936], [-122.279959, 47.690431], [-122.279953, 47.690117], [-122.279921, 47.68841], [-122.279867, 47.686471], [-122.279771, 47.683037], [-122.281564, 47.683036], [-122.283772, 47.68304], [-122.285162, 47.683043], [-122.28598, 47.683045], [-122.288173, 47.683043], [-122.290376, 47.683047], [-122.290478, 47.683047], [-122.292566, 47.683048], [-122.294739, 47.683046], [-122.296741, 47.683043], [-122.298944, 47.683041], [-122.3006, 47.683043], [-122.300755, 47.683044], [-122.300771, 47.683511], [-122.300792, 47.684331], [-122.300817, 47.685149], [-122.300828, 47.685963], [-122.300829, 47.686341], [-122.300827, 47.686365], [-122.300826, 47.686389], [-122.300827, 47.686414], [-122.300828, 47.686438], [-122.30083, 47.686462], [-122.300832, 47.686487], [-122.300835, 47.686511], [-122.300839, 47.686535], [-122.300843, 47.686559], [-122.300849, 47.686583], [-122.300855, 47.686607], [-122.300862, 47.686631], [-122.300877, 47.68667], [-122.300885, 47.686698], [-122.300895, 47.686721], [-122.301382, 47.687401], [-122.301403, 47.687421], [-122.301422, 47.687442], [-122.301441, 47.687462], [-122.301459, 47.687483], [-122.301477, 47.687505], [-122.301493, 47.687526], [-122.301509, 47.687548], [-122.301524, 47.68757], [-122.301538, 47.687593], [-122.301551, 47.687615], [-122.301564, 47.687638], [-122.301575, 47.687661], [-122.301586, 47.687684], [-122.301596, 47.687708], [-122.301604, 47.687731], [-122.301613, 47.687755], [-122.30162, 47.687779], [-122.301626, 47.687803], [-122.301632, 47.687827], [-122.301636, 47.687851], [-122.301648, 47.687948], [-122.301686, 47.688259], [-122.301604, 47.688756], [-122.301459, 47.689482], [-122.301451, 47.689506], [-122.301445, 47.68953], [-122.301441, 47.689554], [-122.301437, 47.689578], [-122.301436, 47.689602], [-122.301436, 47.689627], [-122.301438, 47.689651], [-122.301441, 47.689675], [-122.301446, 47.689699], [-122.301453, 47.689723], [-122.30146, 47.689747], [-122.30147, 47.68977], [-122.301481, 47.689793], [-122.301493, 47.689816], [-122.301507, 47.689839], [-122.301522, 47.689861], [-122.301668, 47.690264], [-122.30241, 47.690274], [-122.303151, 47.690284], [-122.304158, 47.690287], [-122.305973, 47.690296], [-122.30686, 47.690303], [-122.307768, 47.690309], [-122.308168, 47.690312], [-122.30807, 47.690382], [-122.307816, 47.69056], [-122.306699, 47.69134], [-122.306674, 47.691357], [-122.306647, 47.691376], [-122.30662, 47.691395], [-122.306572, 47.69143], [-122.306545, 47.691449], [-122.306521, 47.691467], [-122.306495, 47.691487], [-122.306469, 47.691506], [-122.306445, 47.691524], [-122.306419, 47.691544], [-122.306393, 47.691563], [-122.306344, 47.691601], [-122.306319, 47.691621], [-122.306296, 47.69164], [-122.306272, 47.69166], [-122.306249, 47.691679], [-122.306209, 47.691715], [-122.306186, 47.691737], [-122.306163, 47.691758], [-122.306143, 47.691778], [-122.306121, 47.6918], [-122.3061, 47.691822], [-122.306081, 47.691842], [-122.306061, 47.691864], [-122.30604, 47.691887], [-122.306021, 47.69191], [-122.306002, 47.691933], [-122.305984, 47.691956], [-122.305965, 47.691979], [-122.305947, 47.692002], [-122.30593, 47.692024], [-122.305913, 47.692047], [-122.305896, 47.692069], [-122.305879, 47.692092], [-122.305864, 47.692114], [-122.305832, 47.692159], [-122.305816, 47.692183], [-122.305801, 47.692205], [-122.305785, 47.692229], [-122.30577, 47.692253], [-122.305756, 47.692275], [-122.305727, 47.692322], [-122.305712, 47.692346], [-122.305698, 47.692371], [-122.305684, 47.692395], [-122.30567, 47.69242], [-122.305656, 47.692445], [-122.305643, 47.692469], [-122.30563, 47.692494], [-122.305606, 47.692539], [-122.305594, 47.692564], [-122.305583, 47.692587], [-122.305571, 47.692612], [-122.30556, 47.692635], [-122.305549, 47.69266], [-122.305528, 47.692709], [-122.305517, 47.692734], [-122.305513, 47.692759], [-122.305457, 47.693144], [-122.305499, 47.693611], [-122.305607, 47.694724], [-122.305638, 47.695179], [-122.305712, 47.695742], [-122.305756, 47.696305], [-122.305748, 47.696709], [-122.305637, 47.697127], [-122.305462, 47.697564]]]]
    },
    "properties": {
      "neighbourhood": "Wedgwood",
      "neighbourhood_group": "Other neighborhoods"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.366122, 47.711078], [-122.365922, 47.710962], [-122.365494, 47.711118], [-122.365091, 47.711153], [-122.364981, 47.711162], [-122.364885, 47.711139], [-122.364766, 47.71111], [-122.365024, 47.710823], [-122.365086, 47.710719], [-122.36515, 47.710581], [-122.365369, 47.710179], [-122.365381, 47.710156], [-122.365388, 47.710133], [-122.36539, 47.710108], [-122.365387, 47.710084], [-122.36538, 47.71006], [-122.365367, 47.710038], [-122.36535, 47.710016], [-122.364968, 47.709522], [-122.364824, 47.70935], [-122.364798, 47.709333], [-122.364768, 47.709319], [-122.364736, 47.709309], [-122.364702, 47.709302], [-122.364666, 47.709298], [-122.36463, 47.709301], [-122.364593, 47.709303], [-122.364559, 47.709312], [-122.364528, 47.709323], [-122.3645, 47.709338], [-122.363903, 47.709645], [-122.363877, 47.709662], [-122.363849, 47.709677], [-122.36382, 47.709691], [-122.363788, 47.709704], [-122.363756, 47.709714], [-122.363723, 47.709723], [-122.363688, 47.70973], [-122.363653, 47.709735], [-122.363618, 47.709739], [-122.363092, 47.709768], [-122.362794, 47.709761], [-122.362971, 47.709564], [-122.363411, 47.709359], [-122.363578, 47.709256], [-122.363597, 47.709236], [-122.363615, 47.709215], [-122.36363, 47.709193], [-122.363645, 47.709171], [-122.363657, 47.709148], [-122.363669, 47.709125], [-122.363678, 47.709102], [-122.363686, 47.709078], [-122.363693, 47.709054], [-122.363698, 47.70903], [-122.363701, 47.709006], [-122.363702, 47.708981], [-122.363702, 47.708957], [-122.3637, 47.708933], [-122.363704, 47.708756], [-122.362937, 47.708748], [-122.362918, 47.70764], [-122.361848, 47.706937], [-122.360792, 47.706933], [-122.360786, 47.706506], [-122.360771, 47.705784], [-122.360772, 47.705121], [-122.360987, 47.705123], [-122.362865, 47.705134], [-122.363861, 47.705153], [-122.365268, 47.705193], [-122.365527, 47.705137], [-122.36556, 47.705146], [-122.365596, 47.705153], [-122.365632, 47.705157], [-122.365669, 47.705159], [-122.365705, 47.705159], [-122.365742, 47.705156], [-122.366067, 47.705168], [-122.367471, 47.705164], [-122.368787, 47.705171], [-122.370098, 47.705175], [-122.371395, 47.705186], [-122.37276, 47.705183], [-122.374081, 47.705186], [-122.37477, 47.705189], [-122.375416, 47.705191], [-122.375418, 47.704414], [-122.37542, 47.703501], [-122.375423, 47.702598], [-122.37543, 47.701594], [-122.37543, 47.701531], [-122.376314, 47.70154], [-122.37663, 47.701538], [-122.376771, 47.701537], [-122.376776, 47.700876], [-122.37678, 47.699853], [-122.376784, 47.698834], [-122.376798, 47.697818], [-122.376797, 47.696809], [-122.376796, 47.69578], [-122.376801, 47.695283], [-122.3768, 47.69503], [-122.376798, 47.69469], [-122.377608, 47.694687], [-122.378968, 47.69468], [-122.380327, 47.69468], [-122.381672, 47.694673], [-122.382295, 47.694669], [-122.382331, 47.69467], [-122.382367, 47.69467], [-122.382403, 47.694671], [-122.38244, 47.69467], [-122.382476, 47.69467], [-122.382513, 47.694669], [-122.382549, 47.694668], [-122.382585, 47.694667], [-122.382621, 47.694665], [-122.382657, 47.694663], [-122.382693, 47.694661], [-122.382729, 47.694658], [-122.382765, 47.694655], [-122.382801, 47.694652], [-122.382819, 47.694629], [-122.382829, 47.694603], [-122.382838, 47.694577], [-122.382846, 47.694551], [-122.382854, 47.694525], [-122.382862, 47.694498], [-122.382869, 47.694472], [-122.382875, 47.694446], [-122.38288, 47.694419], [-122.382886, 47.694393], [-122.38289, 47.694366], [-122.382894, 47.69434], [-122.382897, 47.694315], [-122.3829, 47.694291], [-122.382903, 47.694267], [-122.382904, 47.694242], [-122.382894, 47.693641], [-122.382891, 47.692559], [-122.382896, 47.692078], [-122.382891, 47.692053], [-122.382888, 47.692029], [-122.382886, 47.692004], [-122.382885, 47.69198], [-122.382886, 47.691955], [-122.382888, 47.691931], [-122.382892, 47.691907], [-122.382896, 47.691882], [-122.382902, 47.691858], [-122.38291, 47.691834], [-122.382919, 47.691811], [-122.382929, 47.691787], [-122.38294, 47.691764], [-122.382953, 47.691741], [-122.382967, 47.691719], [-122.382986, 47.691696], [-122.383008, 47.691676], [-122.383029, 47.691656], [-122.383049, 47.691636], [-122.383069, 47.691616], [-122.383087, 47.691595], [-122.383106, 47.691574], [-122.383123, 47.691552], [-122.383139, 47.69153], [-122.383155, 47.691508], [-122.383169, 47.691486], [-122.383183, 47.691463], [-122.383196, 47.69144], [-122.383208, 47.691417], [-122.383219, 47.691394], [-122.383229, 47.691371], [-122.383239, 47.691347], [-122.383247, 47.691323], [-122.383255, 47.691299], [-122.383262, 47.691275], [-122.383267, 47.691251], [-122.383272, 47.691227], [-122.383276, 47.691202], [-122.383279, 47.691178], [-122.38328, 47.691154], [-122.383275, 47.690593], [-122.385833, 47.690577], [-122.388193, 47.690581], [-122.390348, 47.690563], [-122.392432, 47.690583], [-122.393002, 47.690581], [-122.39457, 47.690578], [-122.395264, 47.690574], [-122.397232, 47.690571], [-122.398309, 47.690571], [-122.398502, 47.690736], [-122.398561, 47.691952], [-122.399295, 47.693576], [-122.399576, 47.694543], [-122.3999, 47.69502], [-122.399922, 47.695047], [-122.399946, 47.695073], [-122.399972, 47.695099], [-122.399999, 47.695124], [-122.400027, 47.695149], [-122.400057, 47.695172], [-122.400088, 47.695195], [-122.400121, 47.695217], [-122.400155, 47.695238], [-122.40019, 47.695258], [-122.400226, 47.695277], [-122.400263, 47.695295], [-122.400302, 47.695312], [-122.400341, 47.695328], [-122.400381, 47.695343], [-122.400423, 47.695357], [-122.400465, 47.695369], [-122.400507, 47.695381], [-122.40055, 47.695391], [-122.400594, 47.6954], [-122.400639, 47.695408], [-122.400684, 47.695415], [-122.400729, 47.69542], [-122.400774, 47.695425], [-122.40082, 47.695428], [-122.400866, 47.69543], [-122.400912, 47.69543], [-122.400958, 47.69543], [-122.401003, 47.695428], [-122.40105, 47.695425], [-122.401095, 47.69542], [-122.401132, 47.695416], [-122.402363, 47.695276], [-122.402657, 47.696016], [-122.402195, 47.697209], [-122.402027, 47.697684], [-122.402107, 47.697682], [-122.401985, 47.69777], [-122.4019, 47.697828], [-122.401786, 47.697904], [-122.401525, 47.698029], [-122.401437, 47.698093], [-122.401344, 47.698155], [-122.40125, 47.698216], [-122.401113, 47.698301], [-122.401038, 47.698334], [-122.400925, 47.698379], [-122.400828, 47.698432], [-122.400739, 47.69847], [-122.40065, 47.698519], [-122.400568, 47.698562], [-122.400455, 47.698618], [-122.400339, 47.698668], [-122.400211, 47.698716], [-122.400096, 47.698761], [-122.39987, 47.698845], [-122.399555, 47.698983], [-122.399421, 47.699024], [-122.399299, 47.69907], [-122.399167, 47.699117], [-122.399038, 47.699157], [-122.398899, 47.699204], [-122.398659, 47.699309], [-122.39857, 47.699344], [-122.398434, 47.699392], [-122.398303, 47.699447], [-122.398198, 47.699483], [-122.398065, 47.69953], [-122.397699, 47.69964], [-122.397549, 47.699701], [-122.397262, 47.699808], [-122.396987, 47.699942], [-122.396892, 47.699969], [-122.396815, 47.699986], [-122.396782, 47.699997], [-122.396651, 47.700055], [-122.396513, 47.700094], [-122.396419, 47.700128], [-122.396328, 47.700155], [-122.396238, 47.700189], [-122.396197, 47.700199], [-122.396163, 47.700207], [-122.396126, 47.700224], [-122.396085, 47.700243], [-122.396051, 47.700253], [-122.396012, 47.700266], [-122.395967, 47.700287], [-122.395906, 47.700308], [-122.395819, 47.700332], [-122.395681, 47.70038], [-122.395623, 47.700407], [-122.395589, 47.70042], [-122.395542, 47.700431], [-122.395478, 47.700451], [-122.395396, 47.700485], [-122.395335, 47.700503], [-122.395266, 47.700531], [-122.39522, 47.70055], [-122.395178, 47.700567], [-122.395121, 47.700593], [-122.395072, 47.700603], [-122.395035, 47.700619], [-122.394998, 47.70063], [-122.394952, 47.700648], [-122.394913, 47.700661], [-122.39483, 47.700686], [-122.394689, 47.700727], [-122.394586, 47.700767], [-122.394551, 47.700782], [-122.394475, 47.700805], [-122.394288, 47.700862], [-122.394211, 47.700892], [-122.394162, 47.700911], [-122.394106, 47.700932], [-122.393918, 47.700996], [-122.393848, 47.701012], [-122.393814, 47.701025], [-122.393741, 47.701049], [-122.393702, 47.701065], [-122.393667, 47.701075], [-122.393582, 47.701114], [-122.393544, 47.701126], [-122.393494, 47.701144], [-122.39341, 47.701163], [-122.393372, 47.701174], [-122.39333, 47.701202], [-122.393287, 47.701225], [-122.393221, 47.701241], [-122.393178, 47.701257], [-122.393142, 47.701266], [-122.393071, 47.701289], [-122.393026, 47.701301], [-122.392917, 47.701345], [-122.392874, 47.701361], [-122.392822, 47.701374], [-122.392773, 47.701396], [-122.392691, 47.701424], [-122.392657, 47.701431], [-122.392616, 47.701443], [-122.392541, 47.701475], [-122.392466, 47.7015], [-122.392398, 47.701532], [-122.392329, 47.701554], [-122.392286, 47.701571], [-122.392214, 47.701599], [-122.392179, 47.701607], [-122.392118, 47.701627], [-122.392079, 47.701643], [-122.391982, 47.701669], [-122.391922, 47.701692], [-122.391856, 47.701723], [-122.391822, 47.701731], [-122.391779, 47.701746], [-122.391724, 47.701761], [-122.391681, 47.701775], [-122.391631, 47.701795], [-122.391603, 47.70181], [-122.391544, 47.701826], [-122.3915, 47.70184], [-122.391451, 47.701852], [-122.391367, 47.701891], [-122.391326, 47.701904], [-122.391269, 47.701927], [-122.391195, 47.701955], [-122.391153, 47.70197], [-122.3911, 47.701994], [-122.391058, 47.702004], [-122.391002, 47.702021], [-122.390955, 47.70203], [-122.39091, 47.702046], [-122.390873, 47.702064], [-122.390841, 47.702079], [-122.3908, 47.702098], [-122.390763, 47.702115], [-122.390714, 47.702129], [-122.390638, 47.702159], [-122.390594, 47.702171], [-122.390559, 47.70218], [-122.390522, 47.702197], [-122.390464, 47.702211], [-122.390383, 47.702252], [-122.390346, 47.702261], [-122.390298, 47.702279], [-122.390232, 47.702303], [-122.390172, 47.70232], [-122.390134, 47.702342], [-122.390088, 47.70236], [-122.390051, 47.702372], [-122.389996, 47.70239], [-122.389962, 47.702404], [-122.389894, 47.702432], [-122.389851, 47.70244], [-122.389812, 47.702452], [-122.38967, 47.702513], [-122.389602, 47.702536], [-122.389495, 47.702584], [-122.389439, 47.702602], [-122.389405, 47.702618], [-122.389349, 47.70265], [-122.389318, 47.702665], [-122.389263, 47.702686], [-122.389183, 47.702709], [-122.3891, 47.702739], [-122.389058, 47.702758], [-122.389026, 47.70277], [-122.388936, 47.702811], [-122.388846, 47.702858], [-122.388778, 47.702889], [-122.388656, 47.702946], [-122.388621, 47.702959], [-122.388551, 47.702995], [-122.388518, 47.70301], [-122.388477, 47.703029], [-122.388408, 47.703058], [-122.388367, 47.703076], [-122.388303, 47.703107], [-122.388262, 47.703122], [-122.388232, 47.703135], [-122.388161, 47.703179], [-122.388078, 47.703213], [-122.388033, 47.703225], [-122.387956, 47.703256], [-122.387911, 47.703279], [-122.387878, 47.703302], [-122.387816, 47.703342], [-122.387782, 47.703358], [-122.387716, 47.703393], [-122.38763, 47.703426], [-122.387576, 47.703451], [-122.387461, 47.703517], [-122.387425, 47.703538], [-122.387393, 47.703564], [-122.387356, 47.70359], [-122.387257, 47.703625], [-122.387204, 47.703652], [-122.387147, 47.703688], [-122.387117, 47.703702], [-122.38706, 47.703725], [-122.387014, 47.703747], [-122.386948, 47.703773], [-122.3869, 47.703808], [-122.386857, 47.703828], [-122.386817, 47.703853], [-122.386775, 47.703875], [-122.386737, 47.703902], [-122.386679, 47.703938], [-122.386642, 47.70395], [-122.386561, 47.703991], [-122.386475, 47.704052], [-122.386427, 47.704079], [-122.386371, 47.704106], [-122.386306, 47.704142], [-122.386259, 47.704168], [-122.386195, 47.704205], [-122.386155, 47.704224], [-122.386091, 47.704264], [-122.386052, 47.70429], [-122.386003, 47.704316], [-122.385939, 47.704361], [-122.385874, 47.704397], [-122.385842, 47.704419], [-122.385815, 47.704437], [-122.385754, 47.704466], [-122.385706, 47.704497], [-122.385672, 47.704516], [-122.385587, 47.70458], [-122.385537, 47.704604], [-122.385505, 47.704622], [-122.385461, 47.704649], [-122.385413, 47.704675], [-122.385379, 47.704697], [-122.385356, 47.704717], [-122.385323, 47.704739], [-122.385245, 47.704793], [-122.385207, 47.704819], [-122.385138, 47.704866], [-122.385098, 47.704887], [-122.38505, 47.704918], [-122.384994, 47.704962], [-122.384923, 47.705006], [-122.384883, 47.70504], [-122.384844, 47.705068], [-122.384734, 47.705151], [-122.384665, 47.705195], [-122.384588, 47.705252], [-122.384531, 47.705297], [-122.384494, 47.70532], [-122.384433, 47.705355], [-122.384388, 47.705386], [-122.384337, 47.705429], [-122.384271, 47.705472], [-122.384199, 47.705514], [-122.384163, 47.70554], [-122.384111, 47.705587], [-122.384055, 47.705627], [-122.383983, 47.705674], [-122.383909, 47.705727], [-122.383883, 47.705751], [-122.383814, 47.705809], [-122.383772, 47.705842], [-122.383722, 47.705893], [-122.383651, 47.705943], [-122.38359, 47.705996], [-122.383544, 47.706033], [-122.383509, 47.706059], [-122.383458, 47.706099], [-122.383345, 47.706175], [-122.383278, 47.706213], [-122.38322, 47.706254], [-122.383157, 47.706304], [-122.383097, 47.706349], [-122.383069, 47.706373], [-122.383033, 47.706402], [-122.382966, 47.706454], [-122.382891, 47.706506], [-122.382833, 47.706539], [-122.382773, 47.706589], [-122.382721, 47.706634], [-122.38269, 47.706664], [-122.382664, 47.706688], [-122.38261, 47.706726], [-122.382585, 47.706745], [-122.382534, 47.706775], [-122.382492, 47.706797], [-122.382427, 47.706841], [-122.382389, 47.706878], [-122.382345, 47.706915], [-122.382317, 47.706941], [-122.382289, 47.706977], [-122.382264, 47.707001], [-122.382202, 47.707043], [-122.382141, 47.707089], [-122.382044, 47.707154], [-122.382012, 47.707168], [-122.38195, 47.707207], [-122.381908, 47.707228], [-122.381877, 47.707246], [-122.381832, 47.707268], [-122.381808, 47.707296], [-122.381773, 47.707324], [-122.381749, 47.707349], [-122.381462, 47.707599], [-122.381389, 47.707652], [-122.381307, 47.707718], [-122.381254, 47.707764], [-122.381201, 47.707806], [-122.381105, 47.707888], [-122.381077, 47.707918], [-122.38104, 47.707958], [-122.380975, 47.708018], [-122.380886, 47.708107], [-122.380839, 47.708153], [-122.380803, 47.708184], [-122.380732, 47.708267], [-122.380688, 47.708326], [-122.380654, 47.708375], [-122.380624, 47.70841], [-122.380574, 47.708475], [-122.38045, 47.708673], [-122.380427, 47.708719], [-122.380385, 47.708773], [-122.380361, 47.708814], [-122.38034, 47.708872], [-122.380327, 47.70891], [-122.380036, 47.70881], [-122.377493, 47.708832], [-122.37286, 47.708895], [-122.370825, 47.70891], [-122.36828, 47.70883], [-122.366168, 47.708756], [-122.36612, 47.710334], [-122.366122, 47.711078]]]]
    },
    "properties": {
      "neighbourhood": "North Beach/Blue Ridge",
      "neighbourhood_group": "Other neighborhoods"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.402107, 47.697682], [-122.402027, 47.697684], [-122.402195, 47.697209], [-122.402657, 47.696016], [-122.402363, 47.695276], [-122.401132, 47.695416], [-122.401095, 47.69542], [-122.40105, 47.695425], [-122.401003, 47.695428], [-122.400958, 47.69543], [-122.400912, 47.69543], [-122.400866, 47.69543], [-122.40082, 47.695428], [-122.400774, 47.695425], [-122.400729, 47.69542], [-122.400684, 47.695415], [-122.400639, 47.695408], [-122.400594, 47.6954], [-122.40055, 47.695391], [-122.400507, 47.695381], [-122.400465, 47.695369], [-122.400423, 47.695357], [-122.400381, 47.695343], [-122.400341, 47.695328], [-122.400302, 47.695312], [-122.400263, 47.695295], [-122.400226, 47.695277], [-122.40019, 47.695258], [-122.400155, 47.695238], [-122.400121, 47.695217], [-122.400088, 47.695195], [-122.400057, 47.695172], [-122.400027, 47.695149], [-122.399999, 47.695124], [-122.399972, 47.695099], [-122.399946, 47.695073], [-122.399922, 47.695047], [-122.3999, 47.69502], [-122.399576, 47.694543], [-122.399295, 47.693576], [-122.398561, 47.691952], [-122.398502, 47.690736], [-122.398309, 47.690571], [-122.397232, 47.690571], [-122.395264, 47.690574], [-122.39457, 47.690578], [-122.393002, 47.690581], [-122.393011, 47.690298], [-122.393046, 47.688996], [-122.393033, 47.687669], [-122.393031, 47.686345], [-122.393023, 47.685022], [-122.393016, 47.683734], [-122.393015, 47.682429], [-122.393002, 47.68113], [-122.392984, 47.679814], [-122.392975, 47.679252], [-122.392972, 47.678103], [-122.392961, 47.677509], [-122.39296, 47.67693], [-122.392956, 47.676329], [-122.392957, 47.675914], [-122.395674, 47.67588], [-122.398264, 47.675864], [-122.398369, 47.675829], [-122.398373, 47.67409], [-122.398343, 47.672025], [-122.398338, 47.671094], [-122.398303, 47.669566], [-122.398306, 47.669455], [-122.398327, 47.668563], [-122.398338, 47.668121], [-122.398327, 47.667485], [-122.401013, 47.667682], [-122.401941, 47.66805], [-122.402004, 47.667846], [-122.401938, 47.667564], [-122.402051, 47.667607], [-122.402148, 47.667659], [-122.40221, 47.667699], [-122.402282, 47.667684], [-122.402346, 47.667683], [-122.402432, 47.667762], [-122.402478, 47.667816], [-122.40257, 47.667869], [-122.402623, 47.667909], [-122.402658, 47.667927], [-122.402751, 47.667949], [-122.40277, 47.667981], [-122.40277, 47.668016], [-122.402782, 47.668043], [-122.402869, 47.668059], [-122.402923, 47.668063], [-122.40294, 47.668088], [-122.402945, 47.668119], [-122.402953, 47.66816], [-122.403, 47.66817], [-122.403071, 47.66817], [-122.403153, 47.668167], [-122.40326, 47.668167], [-122.403318, 47.668164], [-122.403344, 47.668185], [-122.403407, 47.668219], [-122.40345, 47.668232], [-122.403508, 47.668243], [-122.403554, 47.668274], [-122.403566, 47.668299], [-122.403561, 47.668331], [-122.40359, 47.668356], [-122.403604, 47.668411], [-122.403605, 47.66844], [-122.403629, 47.668476], [-122.403701, 47.668478], [-122.403771, 47.668481], [-122.403838, 47.668503], [-122.403888, 47.668529], [-122.403917, 47.668559], [-122.403944, 47.668574], [-122.404016, 47.668596], [-122.404121, 47.668623], [-122.40416, 47.668659], [-122.404233, 47.668726], [-122.404364, 47.668827], [-122.404335, 47.668874], [-122.404361, 47.668895], [-122.404402, 47.668872], [-122.404521, 47.669006], [-122.404458, 47.669055], [-122.404486, 47.669107], [-122.404535, 47.669175], [-122.404531, 47.669207], [-122.404505, 47.669231], [-122.404505, 47.669272], [-122.404539, 47.669296], [-122.404605, 47.66931], [-122.404647, 47.669343], [-122.404735, 47.66946], [-122.404818, 47.669579], [-122.4049, 47.669692], [-122.404955, 47.669797], [-122.405001, 47.669894], [-122.405042, 47.669976], [-122.40507, 47.670043], [-122.40508, 47.670106], [-122.405117, 47.670158], [-122.405173, 47.67018], [-122.405205, 47.670235], [-122.405233, 47.670271], [-122.405293, 47.670312], [-122.405337, 47.67034], [-122.405386, 47.670415], [-122.405438, 47.670471], [-122.405484, 47.670497], [-122.405529, 47.67051], [-122.405567, 47.670512], [-122.405601, 47.670534], [-122.405659, 47.670626], [-122.4057, 47.670692], [-122.405778, 47.6707], [-122.405832, 47.670702], [-122.405832, 47.670727], [-122.405823, 47.670777], [-122.405812, 47.670826], [-122.405812, 47.670875], [-122.405861, 47.670943], [-122.405911, 47.670996], [-122.405944, 47.671031], [-122.405958, 47.671064], [-122.405956, 47.671106], [-122.405987, 47.671195], [-122.406017, 47.671264], [-122.406036, 47.671314], [-122.40607, 47.671367], [-122.406132, 47.67142], [-122.406166, 47.671445], [-122.406206, 47.671456], [-122.406206, 47.67149], [-122.406206, 47.67158], [-122.406194, 47.671631], [-122.406187, 47.671696], [-122.406183, 47.671771], [-122.406202, 47.671821], [-122.406207, 47.671852], [-122.406193, 47.671918], [-122.406197, 47.672004], [-122.406199, 47.67203], [-122.406205, 47.67207], [-122.406213, 47.672115], [-122.406215, 47.672161], [-122.406222, 47.672187], [-122.406268, 47.67222], [-122.406304, 47.672251], [-122.406333, 47.672294], [-122.406348, 47.672317], [-122.406393, 47.672356], [-122.406429, 47.672367], [-122.406477, 47.672382], [-122.406524, 47.672386], [-122.40657, 47.67239], [-122.40663, 47.672396], [-122.406767, 47.672394], [-122.406883, 47.672398], [-122.406934, 47.672402], [-122.40694, 47.672431], [-122.406962, 47.67257], [-122.406959, 47.672634], [-122.406959, 47.672838], [-122.406959, 47.672909], [-122.40696, 47.672943], [-122.40715, 47.672946], [-122.40732, 47.672946], [-122.407504, 47.672951], [-122.407601, 47.672951], [-122.407633, 47.672976], [-122.407632, 47.673016], [-122.407631, 47.673046], [-122.407674, 47.673062], [-122.407704, 47.673097], [-122.407703, 47.67314], [-122.407782, 47.673193], [-122.40783, 47.673222], [-122.407841, 47.673263], [-122.407801, 47.673384], [-122.407776, 47.673632], [-122.407778, 47.673736], [-122.407779, 47.673772], [-122.407843, 47.673776], [-122.407879, 47.673776], [-122.407964, 47.673775], [-122.408094, 47.673779], [-122.408131, 47.673779], [-122.408206, 47.673778], [-122.40824, 47.673794], [-122.40827, 47.67381], [-122.408293, 47.673831], [-122.408305, 47.673865], [-122.408313, 47.673917], [-122.408308, 47.673953], [-122.408285, 47.673975], [-122.408261, 47.673998], [-122.408202, 47.674007], [-122.408121, 47.674009], [-122.408086, 47.674032], [-122.408077, 47.674065], [-122.408076, 47.674106], [-122.408087, 47.674141], [-122.408088, 47.674173], [-122.408088, 47.674203], [-122.408085, 47.674233], [-122.408082, 47.674261], [-122.408093, 47.674285], [-122.408116, 47.674308], [-122.408149, 47.674324], [-122.408202, 47.674326], [-122.408297, 47.674326], [-122.408346, 47.674326], [-122.408448, 47.674324], [-122.408549, 47.674326], [-122.408602, 47.674328], [-122.408642, 47.674341], [-122.408669, 47.674365], [-122.408669, 47.674403], [-122.40863, 47.67443], [-122.408565, 47.674468], [-122.408512, 47.674493], [-122.408472, 47.674501], [-122.408431, 47.674501], [-122.408383, 47.674515], [-122.408343, 47.674534], [-122.408323, 47.674567], [-122.408314, 47.674618], [-122.408307, 47.674728], [-122.408301, 47.674813], [-122.408312, 47.674895], [-122.408325, 47.674939], [-122.408327, 47.67497], [-122.408351, 47.674999], [-122.408398, 47.675047], [-122.40846, 47.675081], [-122.408507, 47.67511], [-122.408544, 47.675132], [-122.408606, 47.675155], [-122.408648, 47.675166], [-122.408686, 47.675176], [-122.40874, 47.675194], [-122.408786, 47.675205], [-122.40885, 47.675226], [-122.408906, 47.675235], [-122.408967, 47.675259], [-122.408987, 47.675294], [-122.408987, 47.675323], [-122.408978, 47.67536], [-122.408959, 47.675393], [-122.408982, 47.675427], [-122.409018, 47.675451], [-122.409061, 47.675465], [-122.409094, 47.67548], [-122.409124, 47.675495], [-122.409165, 47.675521], [-122.409222, 47.675555], [-122.409253, 47.675567], [-122.409308, 47.675603], [-122.409344, 47.675624], [-122.409385, 47.675641], [-122.409448, 47.675657], [-122.409491, 47.675678], [-122.409576, 47.675718], [-122.409611, 47.675729], [-122.40966, 47.675747], [-122.409699, 47.675753], [-122.409784, 47.675777], [-122.409816, 47.675791], [-122.409849, 47.675822], [-122.409858, 47.675851], [-122.409861, 47.675876], [-122.409858, 47.675906], [-122.40985, 47.675977], [-122.409846, 47.676034], [-122.409856, 47.676144], [-122.409855, 47.676237], [-122.409855, 47.676325], [-122.40985, 47.676394], [-122.409837, 47.676505], [-122.409831, 47.676553], [-122.409822, 47.676594], [-122.409802, 47.676631], [-122.409777, 47.676647], [-122.409515, 47.676663], [-122.409138, 47.676667], [-122.408708, 47.67667], [-122.408398, 47.676668], [-122.40838, 47.676805], [-122.408386, 47.677037], [-122.407758, 47.677048], [-122.407613, 47.677287], [-122.40752, 47.677456], [-122.407401, 47.677645], [-122.407299, 47.67782], [-122.407195, 47.677988], [-122.407097, 47.678151], [-122.407007, 47.678313], [-122.406901, 47.678491], [-122.406807, 47.678652], [-122.406705, 47.678821], [-122.406602, 47.679001], [-122.406506, 47.679163], [-122.406385, 47.679358], [-122.406293, 47.679521], [-122.406188, 47.679688], [-122.406135, 47.679796], [-122.406166, 47.679887], [-122.406093, 47.680026], [-122.406005, 47.680174], [-122.405953, 47.680252], [-122.405853, 47.680283], [-122.405796, 47.680347], [-122.405729, 47.68048], [-122.405348, 47.680498], [-122.405324, 47.680527], [-122.405219, 47.680706], [-122.4051, 47.680901], [-122.405, 47.681067], [-122.4049, 47.681227], [-122.404784, 47.681424], [-122.404674, 47.681608], [-122.404545, 47.681815], [-122.404436, 47.681998], [-122.404341, 47.682144], [-122.404295, 47.682217], [-122.404239, 47.682308], [-122.404199, 47.682377], [-122.404151, 47.682459], [-122.404095, 47.682558], [-122.404034, 47.682659], [-122.403971, 47.682758], [-122.403922, 47.682831], [-122.403861, 47.682932], [-122.403817, 47.683013], [-122.403746, 47.683122], [-122.403693, 47.683204], [-122.403643, 47.683284], [-122.403595, 47.683361], [-122.40358, 47.683459], [-122.403559, 47.683595], [-122.40354, 47.683706], [-122.403522, 47.683832], [-122.403507, 47.683941], [-122.403491, 47.684049], [-122.403474, 47.684173], [-122.403455, 47.684299], [-122.403438, 47.684431], [-122.403424, 47.684532], [-122.403408, 47.684627], [-122.403389, 47.684746], [-122.403374, 47.684838], [-122.40336, 47.684932], [-122.403347, 47.685031], [-122.403332, 47.685132], [-122.403316, 47.685228], [-122.403298, 47.685326], [-122.403284, 47.685436], [-122.403272, 47.685519], [-122.403263, 47.685598], [-122.403256, 47.685642], [-122.403297, 47.685662], [-122.403332, 47.685672], [-122.403443, 47.685706], [-122.403541, 47.685742], [-122.403584, 47.685754], [-122.403674, 47.685783], [-122.403723, 47.685798], [-122.403795, 47.685817], [-122.403836, 47.685832], [-122.403871, 47.685853], [-122.403871, 47.685892], [-122.40387, 47.685917], [-122.403867, 47.685962], [-122.403864, 47.686005], [-122.403863, 47.686039], [-122.403859, 47.686071], [-122.403853, 47.686131], [-122.40385, 47.68621], [-122.403843, 47.68627], [-122.403841, 47.686329], [-122.403837, 47.686376], [-122.403831, 47.686489], [-122.403828, 47.686583], [-122.403832, 47.686643], [-122.403801, 47.68666], [-122.403756, 47.686661], [-122.403633, 47.68667], [-122.403556, 47.686678], [-122.403478, 47.686687], [-122.403449, 47.686715], [-122.403444, 47.686771], [-122.40344, 47.686803], [-122.403439, 47.686845], [-122.403437, 47.686876], [-122.403436, 47.686977], [-122.403423, 47.68701], [-122.403499, 47.687035], [-122.403562, 47.687046], [-122.403609, 47.687061], [-122.403666, 47.687082], [-122.403699, 47.6871], [-122.403704, 47.687133], [-122.403713, 47.687195], [-122.403758, 47.687213], [-122.403794, 47.687216], [-122.403829, 47.687219], [-122.403834, 47.687252], [-122.403804, 47.687266], [-122.403765, 47.687279], [-122.40373, 47.687285], [-122.403717, 47.687326], [-122.403703, 47.687354], [-122.403683, 47.687411], [-122.403662, 47.687463], [-122.403638, 47.687555], [-122.403631, 47.687598], [-122.403609, 47.687656], [-122.403594, 47.687705], [-122.403591, 47.687758], [-122.40358, 47.687797], [-122.403568, 47.68784], [-122.403555, 47.68787], [-122.403541, 47.687912], [-122.403527, 47.687965], [-122.403524, 47.687993], [-122.403519, 47.688023], [-122.40351, 47.688062], [-122.403491, 47.688117], [-122.403477, 47.68818], [-122.403461, 47.688218], [-122.403453, 47.688257], [-122.403444, 47.688293], [-122.403435, 47.688329], [-122.403433, 47.688362], [-122.403431, 47.688391], [-122.403422, 47.688441], [-122.403408, 47.688539], [-122.403404, 47.688587], [-122.403399, 47.688627], [-122.403394, 47.688694], [-122.403385, 47.688832], [-122.403379, 47.688945], [-122.403373, 47.689085], [-122.403372, 47.68919], [-122.403367, 47.689263], [-122.403357, 47.689334], [-122.40334, 47.689382], [-122.403314, 47.689435], [-122.403271, 47.689494], [-122.403248, 47.689517], [-122.403216, 47.689559], [-122.403214, 47.689616], [-122.40322, 47.689655], [-122.40322, 47.689688], [-122.403215, 47.689711], [-122.403215, 47.689742], [-122.403213, 47.68977], [-122.403213, 47.689795], [-122.403224, 47.689837], [-122.40324, 47.689861], [-122.40326, 47.689891], [-122.403289, 47.689931], [-122.403315, 47.690007], [-122.403344, 47.690081], [-122.403355, 47.690105], [-122.403374, 47.69013], [-122.403393, 47.690172], [-122.403406, 47.690206], [-122.403423, 47.690247], [-122.403439, 47.690269], [-122.403481, 47.690326], [-122.403523, 47.690396], [-122.403543, 47.69044], [-122.403595, 47.690526], [-122.403693, 47.690653], [-122.403725, 47.690698], [-122.403744, 47.690723], [-122.40378, 47.690763], [-122.403806, 47.690799], [-122.403823, 47.690835], [-122.403844, 47.690868], [-122.40391, 47.690953], [-122.403982, 47.69104], [-122.40402, 47.6911], [-122.404051, 47.691141], [-122.404075, 47.69117], [-122.4041, 47.69121], [-122.40413, 47.691252], [-122.404153, 47.69128], [-122.404231, 47.69134], [-122.404295, 47.691392], [-122.404384, 47.69147], [-122.404482, 47.691559], [-122.404543, 47.691607], [-122.404626, 47.691683], [-122.404695, 47.691753], [-122.404779, 47.691825], [-122.404855, 47.691899], [-122.404971, 47.692001], [-122.405052, 47.692071], [-122.405131, 47.692155], [-122.405207, 47.69223], [-122.405322, 47.692316], [-122.405442, 47.692406], [-122.405553, 47.692486], [-122.405625, 47.692567], [-122.405708, 47.692671], [-122.4058, 47.692805], [-122.405831, 47.692879], [-122.405858, 47.692947], [-122.405883, 47.693024], [-122.405897, 47.693112], [-122.405908, 47.693192], [-122.405911, 47.693274], [-122.405921, 47.693348], [-122.405921, 47.693429], [-122.405918, 47.693512], [-122.405905, 47.693595], [-122.405881, 47.693676], [-122.405767, 47.693816], [-122.405615, 47.693953], [-122.405514, 47.694037], [-122.405421, 47.694109], [-122.405281, 47.694201], [-122.405196, 47.694269], [-122.405104, 47.69433], [-122.40497, 47.69441], [-122.404861, 47.694476], [-122.404751, 47.694537], [-122.404616, 47.694609], [-122.404494, 47.694689], [-122.404396, 47.694758], [-122.404285, 47.694842], [-122.404192, 47.694911], [-122.404058, 47.695076], [-122.404055, 47.695159], [-122.404043, 47.695239], [-122.404021, 47.695326], [-122.404001, 47.695422], [-122.403977, 47.695516], [-122.403951, 47.695604], [-122.40392, 47.695697], [-122.403875, 47.695793], [-122.403851, 47.695869], [-122.40383, 47.695942], [-122.403797, 47.696025], [-122.403749, 47.696119], [-122.403704, 47.696209], [-122.403653, 47.696292], [-122.403593, 47.69638], [-122.403524, 47.696492], [-122.40346, 47.696569], [-122.403335, 47.696731], [-122.403269, 47.6968], [-122.403201, 47.696875], [-122.403124, 47.696954], [-122.403036, 47.697049], [-122.40297, 47.697112], [-122.40288, 47.697174], [-122.402801, 47.697215], [-122.40274, 47.697248], [-122.402684, 47.697286], [-122.402616, 47.697337], [-122.402527, 47.697417], [-122.402437, 47.697478], [-122.402323, 47.697558], [-122.402196, 47.697622], [-122.402107, 47.697682]]]]
    },
    "properties": {
      "neighbourhood": "Sunset Hill",
      "neighbourhood_group": "Ballard"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.292418, 47.733753], [-122.291097, 47.733742], [-122.289755, 47.733742], [-122.288413, 47.733742], [-122.286686, 47.733742], [-122.285709, 47.733742], [-122.284211, 47.733743], [-122.284125, 47.733733], [-122.284077, 47.733584], [-122.28403, 47.733584], [-122.284033, 47.73349], [-122.284077, 47.733491], [-122.284048, 47.733429], [-122.284007, 47.733356], [-122.283976, 47.73326], [-122.283926, 47.733165], [-122.283779, 47.733179], [-122.283669, 47.733084], [-122.283608, 47.733122], [-122.28346, 47.733022], [-122.283497, 47.733001], [-122.28344, 47.732963], [-122.283359, 47.732908], [-122.283407, 47.732874], [-122.28328, 47.73279], [-122.283305, 47.732769], [-122.283214, 47.732715], [-122.283183, 47.732733], [-122.28296, 47.732577], [-122.282892, 47.73254], [-122.282814, 47.732461], [-122.282774, 47.732419], [-122.282765, 47.732367], [-122.282725, 47.732331], [-122.282681, 47.732292], [-122.282629, 47.732258], [-122.282549, 47.7323], [-122.282475, 47.732253], [-122.282357, 47.732165], [-122.282323, 47.732181], [-122.282202, 47.732021], [-122.282168, 47.731983], [-122.282127, 47.731971], [-122.282093, 47.73198], [-122.282058, 47.731895], [-122.282018, 47.731841], [-122.281972, 47.731767], [-122.281884, 47.731723], [-122.281765, 47.731657], [-122.281663, 47.73161], [-122.281585, 47.731621], [-122.281556, 47.731603], [-122.281513, 47.731551], [-122.28144, 47.731476], [-122.281409, 47.731435], [-122.281352, 47.731331], [-122.281347, 47.731282], [-122.281313, 47.731247], [-122.281312, 47.731174], [-122.281325, 47.731063], [-122.28137, 47.73101], [-122.281404, 47.730961], [-122.281471, 47.730856], [-122.281505, 47.730772], [-122.281531, 47.7307], [-122.281568, 47.730632], [-122.281672, 47.730632], [-122.281674, 47.730582], [-122.28159, 47.730556], [-122.281603, 47.730507], [-122.281602, 47.730469], [-122.281565, 47.730465], [-122.281566, 47.73041], [-122.281635, 47.730407], [-122.281654, 47.730359], [-122.281665, 47.730315], [-122.28167, 47.730263], [-122.281663, 47.7302], [-122.281691, 47.730087], [-122.281805, 47.729907], [-122.281843, 47.729854], [-122.282046, 47.729859], [-122.282078, 47.729818], [-122.282102, 47.729757], [-122.282107, 47.729699], [-122.282102, 47.72962], [-122.28211, 47.729563], [-122.282123, 47.729518], [-122.281977, 47.729507], [-122.281894, 47.729469], [-122.281846, 47.729468], [-122.281826, 47.729413], [-122.281812, 47.729335], [-122.281769, 47.729288], [-122.281716, 47.729215], [-122.281683, 47.729104], [-122.281644, 47.728989], [-122.281468, 47.728786], [-122.281444, 47.728685], [-122.28143, 47.728616], [-122.281348, 47.728631], [-122.281332, 47.728595], [-122.281394, 47.728576], [-122.281314, 47.728531], [-122.281307, 47.72848], [-122.281309, 47.728446], [-122.281306, 47.728396], [-122.28132, 47.728355], [-122.281297, 47.728329], [-122.281296, 47.728295], [-122.281286, 47.728237], [-122.281254, 47.728185], [-122.281221, 47.728122], [-122.281174, 47.728021], [-122.281154, 47.72799], [-122.281103, 47.72792], [-122.281049, 47.727835], [-122.280979, 47.727704], [-122.280962, 47.727668], [-122.280953, 47.72763], [-122.280939, 47.727587], [-122.280884, 47.727528], [-122.280866, 47.727482], [-122.280852, 47.727428], [-122.280846, 47.727392], [-122.280776, 47.727302], [-122.280733, 47.727277], [-122.280673, 47.727157], [-122.28062, 47.727057], [-122.280645, 47.727022], [-122.280607, 47.72699], [-122.280542, 47.72692], [-122.280494, 47.726858], [-122.280451, 47.726791], [-122.280413, 47.726711], [-122.280336, 47.726606], [-122.280307, 47.72652], [-122.280278, 47.726425], [-122.280375, 47.72641], [-122.280364, 47.726374], [-122.280306, 47.726377], [-122.280281, 47.726276], [-122.280257, 47.72619], [-122.280268, 47.726123], [-122.280271, 47.726094], [-122.280235, 47.726081], [-122.280213, 47.726028], [-122.280157, 47.726033], [-122.28015, 47.726003], [-122.280139, 47.725951], [-122.280112, 47.725876], [-122.280106, 47.725836], [-122.280099, 47.725781], [-122.280085, 47.72571], [-122.280078, 47.725648], [-122.28009, 47.725585], [-122.280074, 47.725521], [-122.280085, 47.725476], [-122.280015, 47.72547], [-122.280014, 47.725366], [-122.280018, 47.725249], [-122.280198, 47.725248], [-122.2802, 47.725206], [-122.280224, 47.725088], [-122.280291, 47.725084], [-122.280298, 47.725042], [-122.280239, 47.725032], [-122.280248, 47.72494], [-122.280264, 47.724816], [-122.280253, 47.72472], [-122.280244, 47.724697], [-122.280327, 47.724667], [-122.280264, 47.724658], [-122.280316, 47.724565], [-122.280332, 47.724512], [-122.280342, 47.724487], [-122.280323, 47.724438], [-122.280372, 47.724316], [-122.280453, 47.724109], [-122.280542, 47.723893], [-122.28062, 47.723691], [-122.280694, 47.723497], [-122.280759, 47.723312], [-122.280799, 47.723159], [-122.280817, 47.723054], [-122.280978, 47.723051], [-122.281098, 47.723041], [-122.281111, 47.723008], [-122.281116, 47.722968], [-122.28108, 47.722942], [-122.280996, 47.722922], [-122.280862, 47.722905], [-122.280856, 47.722878], [-122.280892, 47.722717], [-122.280926, 47.722615], [-122.280948, 47.722544], [-122.28096, 47.722472], [-122.28097, 47.722378], [-122.280993, 47.722326], [-122.280945, 47.722292], [-122.280942, 47.722266], [-122.28094, 47.722193], [-122.28094, 47.722124], [-122.280942, 47.722025], [-122.28095, 47.721949], [-122.28096, 47.721911], [-122.280965, 47.721887], [-122.280955, 47.721863], [-122.280943, 47.721784], [-122.280935, 47.721722], [-122.28091, 47.721629], [-122.280898, 47.721538], [-122.280891, 47.721477], [-122.280874, 47.721388], [-122.28086, 47.721336], [-122.280849, 47.721281], [-122.280837, 47.721225], [-122.280826, 47.721167], [-122.28082, 47.721101], [-122.28082, 47.721068], [-122.28081, 47.721025], [-122.280802, 47.720984], [-122.280798, 47.720954], [-122.280789, 47.720915], [-122.280782, 47.72086], [-122.280774, 47.720808], [-122.280757, 47.720736], [-122.280739, 47.720672], [-122.280719, 47.720614], [-122.280706, 47.720574], [-122.280695, 47.720544], [-122.280671, 47.720482], [-122.280643, 47.720432], [-122.280619, 47.720402], [-122.280588, 47.72035], [-122.280571, 47.720313], [-122.280543, 47.720269], [-122.280513, 47.720224], [-122.280499, 47.720201], [-122.280498, 47.72017], [-122.28052, 47.720145], [-122.280529, 47.720107], [-122.280513, 47.720067], [-122.280486, 47.720021], [-122.280458, 47.719987], [-122.280428, 47.719962], [-122.280342, 47.71989], [-122.280285, 47.719843], [-122.280235, 47.719805], [-122.280158, 47.719765], [-122.280121, 47.719766], [-122.280084, 47.719767], [-122.280003, 47.719754], [-122.27996, 47.719741], [-122.279922, 47.719732], [-122.27983, 47.719723], [-122.279763, 47.719715], [-122.279716, 47.719707], [-122.279662, 47.719692], [-122.279622, 47.719658], [-122.279597, 47.719632], [-122.279564, 47.719607], [-122.279513, 47.719597], [-122.27947, 47.719588], [-122.279307, 47.719615], [-122.279253, 47.7196], [-122.279223, 47.719549], [-122.279227, 47.719513], [-122.279213, 47.71948], [-122.279162, 47.719458], [-122.279103, 47.71944], [-122.279071, 47.719416], [-122.279029, 47.719377], [-122.278987, 47.719321], [-122.278935, 47.71926], [-122.278879, 47.719192], [-122.278839, 47.719139], [-122.27879, 47.719064], [-122.278748, 47.718991], [-122.278717, 47.718905], [-122.278686, 47.718804], [-122.278662, 47.718719], [-122.278628, 47.718597], [-122.27858, 47.718445], [-122.278516, 47.718241], [-122.278484, 47.718102], [-122.27848, 47.718031], [-122.278477, 47.717992], [-122.278457, 47.717919], [-122.278428, 47.717847], [-122.27839, 47.717755], [-122.278348, 47.717618], [-122.278307, 47.71748], [-122.278286, 47.717376], [-122.278292, 47.717352], [-122.278272, 47.717293], [-122.278247, 47.717217], [-122.278181, 47.717123], [-122.278162, 47.717066], [-122.278132, 47.71699], [-122.278098, 47.716898], [-122.278046, 47.716738], [-122.278024, 47.716656], [-122.278011, 47.716583], [-122.27799, 47.716483], [-122.277967, 47.7164], [-122.277934, 47.716294], [-122.277901, 47.716283], [-122.27785, 47.716165], [-122.278855, 47.715598], [-122.279214, 47.715766], [-122.279247, 47.716243], [-122.279211, 47.716728], [-122.279486, 47.717056], [-122.280073, 47.717294], [-122.280407, 47.717648], [-122.280922, 47.717499], [-122.281695, 47.717307], [-122.282695, 47.717208], [-122.282976, 47.71739], [-122.2839, 47.717385], [-122.283888, 47.717278], [-122.283898, 47.715567], [-122.288793, 47.715525], [-122.291499, 47.715529], [-122.291566, 47.715529], [-122.29433, 47.715573], [-122.297392, 47.71562], [-122.296837, 47.716566], [-122.296403, 47.717304], [-122.296277, 47.717516], [-122.295819, 47.7183], [-122.295361, 47.71906], [-122.295235, 47.719276], [-122.29514, 47.719439], [-122.294978, 47.71971], [-122.294813, 47.719985], [-122.294653, 47.720262], [-122.294489, 47.72054], [-122.294322, 47.720818], [-122.294157, 47.721101], [-122.293989, 47.721383], [-122.29382, 47.721665], [-122.293662, 47.72195], [-122.293509, 47.722235], [-122.293369, 47.722521], [-122.293233, 47.722806], [-122.293115, 47.723091], [-122.292997, 47.723375], [-122.292887, 47.723659], [-122.292791, 47.723944], [-122.292699, 47.724229], [-122.292616, 47.724514], [-122.292543, 47.724799], [-122.292479, 47.725077], [-122.292422, 47.725355], [-122.292372, 47.725635], [-122.29233, 47.725916], [-122.292292, 47.726198], [-122.292264, 47.72648], [-122.292243, 47.726763], [-122.29223, 47.727045], [-122.292225, 47.727329], [-122.292228, 47.727612], [-122.292234, 47.727894], [-122.292246, 47.728176], [-122.292255, 47.728456], [-122.292265, 47.728736], [-122.292274, 47.729016], [-122.292283, 47.729296], [-122.292292, 47.729576], [-122.292302, 47.729857], [-122.292313, 47.730137], [-122.292321, 47.730419], [-122.29233, 47.730701], [-122.292341, 47.730982], [-122.292348, 47.731263], [-122.292358, 47.731544], [-122.292367, 47.731812], [-122.292376, 47.731973], [-122.292384, 47.732255], [-122.292418, 47.733753]]]]
    },
    "properties": {
      "neighbourhood": "Cedar Park",
      "neighbourhood_group": "Lake City"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.355639, 47.73413], [-122.355571, 47.73413], [-122.355374, 47.73413], [-122.354258, 47.73413], [-122.353039, 47.73413], [-122.351772, 47.73413], [-122.350506, 47.73413], [-122.347973, 47.734129], [-122.347801, 47.734129], [-122.347644, 47.734129], [-122.345288, 47.734128], [-122.345103, 47.734128], [-122.345101, 47.73403], [-122.345094, 47.733216], [-122.345086, 47.732922], [-122.345067, 47.731692], [-122.345054, 47.730476], [-122.345041, 47.729261], [-122.345028, 47.728056], [-122.345021, 47.726852], [-122.345003, 47.725648], [-122.344996, 47.724444], [-122.344987, 47.723168], [-122.34497, 47.722013], [-122.344954, 47.720869], [-122.344943, 47.719703], [-122.34492, 47.718361], [-122.344922, 47.717505], [-122.34489, 47.716639], [-122.344874, 47.715667], [-122.344855, 47.714711], [-122.344835, 47.713698], [-122.34482, 47.712684], [-122.344804, 47.711671], [-122.344789, 47.710657], [-122.344774, 47.709643], [-122.344758, 47.70863], [-122.344739, 47.707619], [-122.344724, 47.706865], [-122.344718, 47.706609], [-122.344703, 47.705599], [-122.344696, 47.705111], [-122.344695, 47.705051], [-122.345463, 47.705053], [-122.347186, 47.705057], [-122.347589, 47.705057], [-122.349595, 47.705066], [-122.350813, 47.705068], [-122.351849, 47.705073], [-122.353645, 47.705076], [-122.355374, 47.70508], [-122.355455, 47.705081], [-122.355472, 47.706899], [-122.355469, 47.707154], [-122.355482, 47.708335], [-122.355485, 47.709502], [-122.355493, 47.71067], [-122.355506, 47.711834], [-122.355509, 47.712998], [-122.355512, 47.714161], [-122.35552, 47.715332], [-122.355523, 47.716469], [-122.355534, 47.717312], [-122.355538, 47.71811], [-122.355537, 47.71899], [-122.355541, 47.719583], [-122.355547, 47.72103], [-122.35555, 47.722478], [-122.355554, 47.723948], [-122.35555, 47.725404], [-122.355559, 47.726608], [-122.355552, 47.727892], [-122.355552, 47.728742], [-122.355569, 47.729876], [-122.355561, 47.731044], [-122.355556, 47.732316], [-122.355575, 47.733513], [-122.355639, 47.73413]]]]
    },
    "properties": {
      "neighbourhood": "Bitter Lake",
      "neighbourhood_group": "Other neighborhoods"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.345103, 47.734128], [-122.344004, 47.734129], [-122.343432, 47.73413], [-122.342392, 47.734131], [-122.341335, 47.734131], [-122.341039, 47.734132], [-122.340751, 47.734132], [-122.339687, 47.734133], [-122.338638, 47.734133], [-122.338046, 47.734134], [-122.336981, 47.734135], [-122.335925, 47.734135], [-122.33534, 47.734136], [-122.334284, 47.734137], [-122.334151, 47.734136], [-122.333037, 47.734127], [-122.332926, 47.734126], [-122.331578, 47.734116], [-122.330237, 47.734105], [-122.329012, 47.734096], [-122.328888, 47.734095], [-122.325915, 47.734072], [-122.325699, 47.734069], [-122.324894, 47.734063], [-122.324711, 47.733588], [-122.324702, 47.733562], [-122.324693, 47.733535], [-122.324685, 47.733508], [-122.324677, 47.733481], [-122.324668, 47.733455], [-122.32466, 47.733428], [-122.324652, 47.733401], [-122.324644, 47.733374], [-122.324636, 47.733347], [-122.324628, 47.733321], [-122.32462, 47.733294], [-122.324612, 47.733267], [-122.324604, 47.73324], [-122.324597, 47.733213], [-122.324589, 47.733186], [-122.324582, 47.73316], [-122.324575, 47.733133], [-122.324567, 47.733106], [-122.32456, 47.733079], [-122.324553, 47.733052], [-122.324546, 47.733025], [-122.324539, 47.732998], [-122.324532, 47.732971], [-122.324526, 47.732944], [-122.324519, 47.732917], [-122.324513, 47.73289], [-122.324506, 47.732863], [-122.3245, 47.732836], [-122.324494, 47.732809], [-122.324487, 47.732782], [-122.324482, 47.732755], [-122.324475, 47.732728], [-122.324469, 47.732701], [-122.324463, 47.732674], [-122.324458, 47.732647], [-122.324452, 47.73262], [-122.324446, 47.732593], [-122.324441, 47.732566], [-122.324436, 47.732538], [-122.32443, 47.732511], [-122.324425, 47.732484], [-122.32442, 47.732457], [-122.324415, 47.73243], [-122.32441, 47.732403], [-122.324405, 47.732376], [-122.3244, 47.732349], [-122.324395, 47.732321], [-122.324391, 47.732294], [-122.324386, 47.732267], [-122.324382, 47.73224], [-122.324378, 47.732213], [-122.324373, 47.732186], [-122.324369, 47.732158], [-122.324365, 47.732131], [-122.324361, 47.732104], [-122.324357, 47.732077], [-122.324353, 47.73205], [-122.324349, 47.732022], [-122.324346, 47.731995], [-122.324342, 47.731968], [-122.324339, 47.731941], [-122.324335, 47.731913], [-122.324332, 47.731886], [-122.324329, 47.731859], [-122.324325, 47.731832], [-122.324323, 47.731804], [-122.32432, 47.731777], [-122.324317, 47.73175], [-122.324314, 47.731723], [-122.324311, 47.731695], [-122.324309, 47.731668], [-122.324306, 47.731641], [-122.324303, 47.731613], [-122.324301, 47.731586], [-122.324299, 47.731559], [-122.324297, 47.731532], [-122.324295, 47.731504], [-122.324292, 47.731466], [-122.32429, 47.731439], [-122.324289, 47.731411], [-122.324287, 47.731384], [-122.324285, 47.731357], [-122.324284, 47.731329], [-122.324282, 47.731302], [-122.324281, 47.731275], [-122.324279, 47.731247], [-122.324278, 47.73122], [-122.324277, 47.731193], [-122.324276, 47.731165], [-122.324275, 47.731138], [-122.324274, 47.731111], [-122.324274, 47.731083], [-122.324273, 47.731056], [-122.324272, 47.731029], [-122.324272, 47.731001], [-122.324271, 47.730974], [-122.324279, 47.729769], [-122.324292, 47.728571], [-122.324294, 47.727382], [-122.324306, 47.726108], [-122.324323, 47.724826], [-122.32432, 47.723483], [-122.324344, 47.722229], [-122.324337, 47.720902], [-122.324347, 47.719551], [-122.324347, 47.719524], [-122.324348, 47.719498], [-122.324349, 47.719471], [-122.32435, 47.719444], [-122.32435, 47.719418], [-122.324352, 47.719391], [-122.324353, 47.719364], [-122.324354, 47.719337], [-122.324356, 47.719311], [-122.324357, 47.719284], [-122.324358, 47.719257], [-122.324359, 47.71923], [-122.324361, 47.719204], [-122.324363, 47.719177], [-122.324364, 47.71915], [-122.324366, 47.719124], [-122.324368, 47.719097], [-122.32437, 47.71907], [-122.324372, 47.719043], [-122.324373, 47.719017], [-122.324376, 47.71899], [-122.324378, 47.718963], [-122.32438, 47.718937], [-122.324383, 47.71891], [-122.324385, 47.718883], [-122.324387, 47.718856], [-122.32439, 47.71883], [-122.324392, 47.718803], [-122.324395, 47.718776], [-122.324398, 47.71875], [-122.324401, 47.718723], [-122.324403, 47.718696], [-122.324406, 47.71867], [-122.324409, 47.718643], [-122.324412, 47.718616], [-122.324416, 47.71859], [-122.324419, 47.718563], [-122.324422, 47.718536], [-122.324425, 47.71851], [-122.324429, 47.718483], [-122.324432, 47.718456], [-122.324436, 47.71843], [-122.324439, 47.718403], [-122.324443, 47.718374], [-122.324447, 47.718347], [-122.324451, 47.71832], [-122.324455, 47.718294], [-122.324459, 47.718267], [-122.324463, 47.71824], [-122.324467, 47.718214], [-122.324471, 47.718187], [-122.324476, 47.718161], [-122.324483, 47.718135], [-122.32449, 47.718108], [-122.324497, 47.718082], [-122.324504, 47.718056], [-122.324511, 47.718029], [-122.324518, 47.718003], [-122.324525, 47.717977], [-122.324533, 47.71795], [-122.32454, 47.717924], [-122.324548, 47.717898], [-122.324555, 47.717872], [-122.324563, 47.717845], [-122.324571, 47.717819], [-122.324579, 47.717793], [-122.324587, 47.717767], [-122.324595, 47.717741], [-122.324603, 47.717714], [-122.324611, 47.717688], [-122.32462, 47.717662], [-122.324628, 47.717636], [-122.324636, 47.71761], [-122.324645, 47.717584], [-122.324654, 47.717558], [-122.324662, 47.717532], [-122.324671, 47.717506], [-122.324677, 47.717479], [-122.324697, 47.717433], [-122.324706, 47.717407], [-122.324715, 47.717381], [-122.324724, 47.717355], [-122.324734, 47.717329], [-122.324744, 47.717303], [-122.324753, 47.717277], [-122.324763, 47.717251], [-122.324773, 47.717225], [-122.324782, 47.7172], [-122.324793, 47.717174], [-122.324803, 47.717148], [-122.324813, 47.717122], [-122.324823, 47.717096], [-122.324834, 47.71707], [-122.324844, 47.717045], [-122.324953, 47.71682], [-122.325031, 47.716669], [-122.325113, 47.71652], [-122.3252, 47.716372], [-122.325289, 47.716224], [-122.325383, 47.716078], [-122.32548, 47.715933], [-122.325581, 47.715789], [-122.325686, 47.715646], [-122.326445, 47.714686], [-122.326642, 47.714436], [-122.328164, 47.712535], [-122.328601, 47.711978], [-122.328869, 47.711619], [-122.328926, 47.711544], [-122.329239, 47.711105], [-122.329394, 47.710834], [-122.329456, 47.710715], [-122.329505, 47.710615], [-122.329551, 47.710515], [-122.329594, 47.710415], [-122.329635, 47.710314], [-122.329673, 47.710212], [-122.329709, 47.71011], [-122.329742, 47.710008], [-122.329772, 47.709905], [-122.3298, 47.709802], [-122.329825, 47.709698], [-122.329847, 47.709595], [-122.329867, 47.709491], [-122.329884, 47.709386], [-122.329898, 47.709282], [-122.330008, 47.708635], [-122.332852, 47.708656], [-122.333932, 47.708652], [-122.33397, 47.708647], [-122.334008, 47.708642], [-122.334046, 47.708637], [-122.334085, 47.708631], [-122.334122, 47.708624], [-122.33416, 47.708617], [-122.334197, 47.708609], [-122.334234, 47.708601], [-122.334271, 47.708592], [-122.334307, 47.708583], [-122.334344, 47.708573], [-122.334379, 47.708563], [-122.334415, 47.708552], [-122.33445, 47.708541], [-122.334485, 47.708529], [-122.33452, 47.708517], [-122.334554, 47.708504], [-122.334588, 47.708491], [-122.334621, 47.708477], [-122.334654, 47.708463], [-122.334686, 47.708448], [-122.334718, 47.708433], [-122.334749, 47.708418], [-122.33478, 47.708402], [-122.334811, 47.708385], [-122.334841, 47.708368], [-122.33487, 47.708351], [-122.334899, 47.708333], [-122.334927, 47.708315], [-122.334955, 47.708297], [-122.334982, 47.708278], [-122.335009, 47.708258], [-122.335035, 47.708239], [-122.33506, 47.708219], [-122.335084, 47.708198], [-122.335109, 47.708178], [-122.335132, 47.708157], [-122.335155, 47.708135], [-122.335177, 47.708114], [-122.335543, 47.707626], [-122.335807, 47.707274], [-122.336091, 47.70697], [-122.336321, 47.706751], [-122.336612, 47.706489], [-122.337064, 47.706089], [-122.337699, 47.705519], [-122.337723, 47.7055], [-122.337747, 47.705482], [-122.337773, 47.705464], [-122.337799, 47.705446], [-122.337824, 47.705428], [-122.337851, 47.705411], [-122.337878, 47.705394], [-122.337906, 47.705377], [-122.337934, 47.705361], [-122.337962, 47.705345], [-122.337991, 47.705329], [-122.33802, 47.705314], [-122.33805, 47.705299], [-122.33808, 47.705285], [-122.33811, 47.70527], [-122.338141, 47.705257], [-122.338172, 47.705243], [-122.338203, 47.70523], [-122.338235, 47.705218], [-122.338267, 47.705205], [-122.3383, 47.705193], [-122.338333, 47.705182], [-122.338366, 47.705171], [-122.338399, 47.70516], [-122.338433, 47.70515], [-122.338467, 47.70514], [-122.338501, 47.705131], [-122.338535, 47.705122], [-122.33857, 47.705113], [-122.338605, 47.705105], [-122.33864, 47.705097], [-122.338675, 47.70509], [-122.338711, 47.705083], [-122.338747, 47.705076], [-122.338782, 47.70507], [-122.338818, 47.705065], [-122.338854, 47.70506], [-122.338891, 47.705055], [-122.338927, 47.705051], [-122.338964, 47.705047], [-122.339, 47.705044], [-122.339202, 47.705035], [-122.344695, 47.705051], [-122.344696, 47.705111], [-122.344703, 47.705599], [-122.344718, 47.706609], [-122.344724, 47.706865], [-122.344739, 47.707619], [-122.344758, 47.70863], [-122.344774, 47.709643], [-122.344789, 47.710657], [-122.344804, 47.711671], [-122.34482, 47.712684], [-122.344835, 47.713698], [-122.344855, 47.714711], [-122.344874, 47.715667], [-122.34489, 47.716639], [-122.344922, 47.717505], [-122.34492, 47.718361], [-122.344943, 47.719703], [-122.344954, 47.720869], [-122.34497, 47.722013], [-122.344987, 47.723168], [-122.344996, 47.724444], [-122.345003, 47.725648], [-122.345021, 47.726852], [-122.345028, 47.728056], [-122.345041, 47.729261], [-122.345054, 47.730476], [-122.345067, 47.731692], [-122.345086, 47.732922], [-122.345094, 47.733216], [-122.345101, 47.73403], [-122.345103, 47.734128]]]]
    },
    "properties": {
      "neighbourhood": "Haller Lake",
      "neighbourhood_group": "Northgate"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.324894, 47.734063], [-122.324687, 47.734062], [-122.324188, 47.734058], [-122.323483, 47.734053], [-122.3208, 47.734028], [-122.318116, 47.734002], [-122.315433, 47.733977], [-122.312756, 47.733952], [-122.312745, 47.733553], [-122.312735, 47.732586], [-122.312721, 47.731625], [-122.312707, 47.730663], [-122.312688, 47.729708], [-122.312679, 47.728753], [-122.312669, 47.727797], [-122.312647, 47.726842], [-122.312655, 47.725892], [-122.31266, 47.724943], [-122.312664, 47.723996], [-122.312663, 47.723035], [-122.312675, 47.721218], [-122.31266, 47.719417], [-122.312659, 47.719198], [-122.312642, 47.718269], [-122.312599, 47.716969], [-122.31257, 47.716089], [-122.312529, 47.714993], [-122.312507, 47.714347], [-122.312492, 47.713886], [-122.312464, 47.712889], [-122.312435, 47.711892], [-122.312427, 47.710895], [-122.312439, 47.709901], [-122.312432, 47.708942], [-122.31243, 47.708529], [-122.313056, 47.708533], [-122.314211, 47.708539], [-122.314735, 47.708541], [-122.317525, 47.708556], [-122.320625, 47.708579], [-122.323724, 47.708596], [-122.326833, 47.708613], [-122.327951, 47.708618], [-122.329671, 47.708632], [-122.330008, 47.708635], [-122.329898, 47.709282], [-122.329884, 47.709386], [-122.329867, 47.709491], [-122.329847, 47.709595], [-122.329825, 47.709698], [-122.3298, 47.709802], [-122.329772, 47.709905], [-122.329742, 47.710008], [-122.329709, 47.71011], [-122.329673, 47.710212], [-122.329635, 47.710314], [-122.329594, 47.710415], [-122.329551, 47.710515], [-122.329505, 47.710615], [-122.329456, 47.710715], [-122.329394, 47.710834], [-122.329239, 47.711105], [-122.328926, 47.711544], [-122.328869, 47.711619], [-122.328601, 47.711978], [-122.328164, 47.712535], [-122.326642, 47.714436], [-122.326445, 47.714686], [-122.325686, 47.715646], [-122.325581, 47.715789], [-122.32548, 47.715933], [-122.325383, 47.716078], [-122.325289, 47.716224], [-122.3252, 47.716372], [-122.325113, 47.71652], [-122.325031, 47.716669], [-122.324953, 47.71682], [-122.324844, 47.717045], [-122.324834, 47.71707], [-122.324823, 47.717096], [-122.324813, 47.717122], [-122.324803, 47.717148], [-122.324793, 47.717174], [-122.324782, 47.7172], [-122.324773, 47.717225], [-122.324763, 47.717251], [-122.324753, 47.717277], [-122.324744, 47.717303], [-122.324734, 47.717329], [-122.324724, 47.717355], [-122.324715, 47.717381], [-122.324706, 47.717407], [-122.324697, 47.717433], [-122.324677, 47.717479], [-122.324671, 47.717506], [-122.324662, 47.717532], [-122.324654, 47.717558], [-122.324645, 47.717584], [-122.324636, 47.71761], [-122.324628, 47.717636], [-122.32462, 47.717662], [-122.324611, 47.717688], [-122.324603, 47.717714], [-122.324595, 47.717741], [-122.324587, 47.717767], [-122.324579, 47.717793], [-122.324571, 47.717819], [-122.324563, 47.717845], [-122.324555, 47.717872], [-122.324548, 47.717898], [-122.32454, 47.717924], [-122.324533, 47.71795], [-122.324525, 47.717977], [-122.324518, 47.718003], [-122.324511, 47.718029], [-122.324504, 47.718056], [-122.324497, 47.718082], [-122.32449, 47.718108], [-122.324483, 47.718135], [-122.324476, 47.718161], [-122.324471, 47.718187], [-122.324467, 47.718214], [-122.324463, 47.71824], [-122.324459, 47.718267], [-122.324455, 47.718294], [-122.324451, 47.71832], [-122.324447, 47.718347], [-122.324443, 47.718374], [-122.324439, 47.718403], [-122.324436, 47.71843], [-122.324432, 47.718456], [-122.324429, 47.718483], [-122.324425, 47.71851], [-122.324422, 47.718536], [-122.324419, 47.718563], [-122.324416, 47.71859], [-122.324412, 47.718616], [-122.324409, 47.718643], [-122.324406, 47.71867], [-122.324403, 47.718696], [-122.324401, 47.718723], [-122.324398, 47.71875], [-122.324395, 47.718776], [-122.324392, 47.718803], [-122.32439, 47.71883], [-122.324387, 47.718856], [-122.324385, 47.718883], [-122.324383, 47.71891], [-122.32438, 47.718937], [-122.324378, 47.718963], [-122.324376, 47.71899], [-122.324373, 47.719017], [-122.324372, 47.719043], [-122.32437, 47.71907], [-122.324368, 47.719097], [-122.324366, 47.719124], [-122.324364, 47.71915], [-122.324363, 47.719177], [-122.324361, 47.719204], [-122.324359, 47.71923], [-122.324358, 47.719257], [-122.324357, 47.719284], [-122.324356, 47.719311], [-122.324354, 47.719337], [-122.324353, 47.719364], [-122.324352, 47.719391], [-122.32435, 47.719418], [-122.32435, 47.719444], [-122.324349, 47.719471], [-122.324348, 47.719498], [-122.324347, 47.719524], [-122.324347, 47.719551], [-122.324337, 47.720902], [-122.324344, 47.722229], [-122.32432, 47.723483], [-122.324323, 47.724826], [-122.324306, 47.726108], [-122.324294, 47.727382], [-122.324292, 47.728571], [-122.324279, 47.729769], [-122.324271, 47.730974], [-122.324272, 47.731001], [-122.324272, 47.731029], [-122.324273, 47.731056], [-122.324274, 47.731083], [-122.324274, 47.731111], [-122.324275, 47.731138], [-122.324276, 47.731165], [-122.324277, 47.731193], [-122.324278, 47.73122], [-122.324279, 47.731247], [-122.324281, 47.731275], [-122.324282, 47.731302], [-122.324284, 47.731329], [-122.324285, 47.731357], [-122.324287, 47.731384], [-122.324289, 47.731411], [-122.32429, 47.731439], [-122.324292, 47.731466], [-122.324295, 47.731504], [-122.324297, 47.731532], [-122.324299, 47.731559], [-122.324301, 47.731586], [-122.324303, 47.731613], [-122.324306, 47.731641], [-122.324309, 47.731668], [-122.324311, 47.731695], [-122.324314, 47.731723], [-122.324317, 47.73175], [-122.32432, 47.731777], [-122.324323, 47.731804], [-122.324325, 47.731832], [-122.324329, 47.731859], [-122.324332, 47.731886], [-122.324335, 47.731913], [-122.324339, 47.731941], [-122.324342, 47.731968], [-122.324346, 47.731995], [-122.324349, 47.732022], [-122.324353, 47.73205], [-122.324357, 47.732077], [-122.324361, 47.732104], [-122.324365, 47.732131], [-122.324369, 47.732158], [-122.324373, 47.732186], [-122.324378, 47.732213], [-122.324382, 47.73224], [-122.324386, 47.732267], [-122.324391, 47.732294], [-122.324395, 47.732321], [-122.3244, 47.732349], [-122.324405, 47.732376], [-122.32441, 47.732403], [-122.324415, 47.73243], [-122.32442, 47.732457], [-122.324425, 47.732484], [-122.32443, 47.732511], [-122.324436, 47.732538], [-122.324441, 47.732566], [-122.324446, 47.732593], [-122.324452, 47.73262], [-122.324458, 47.732647], [-122.324463, 47.732674], [-122.324469, 47.732701], [-122.324475, 47.732728], [-122.324482, 47.732755], [-122.324487, 47.732782], [-122.324494, 47.732809], [-122.3245, 47.732836], [-122.324506, 47.732863], [-122.324513, 47.73289], [-122.324519, 47.732917], [-122.324526, 47.732944], [-122.324532, 47.732971], [-122.324539, 47.732998], [-122.324546, 47.733025], [-122.324553, 47.733052], [-122.32456, 47.733079], [-122.324567, 47.733106], [-122.324575, 47.733133], [-122.324582, 47.73316], [-122.324589, 47.733186], [-122.324597, 47.733213], [-122.324604, 47.73324], [-122.324612, 47.733267], [-122.32462, 47.733294], [-122.324628, 47.733321], [-122.324636, 47.733347], [-122.324644, 47.733374], [-122.324652, 47.733401], [-122.32466, 47.733428], [-122.324668, 47.733455], [-122.324677, 47.733481], [-122.324685, 47.733508], [-122.324693, 47.733535], [-122.324702, 47.733562], [-122.324711, 47.733588], [-122.324894, 47.734063]]]]
    },
    "properties": {
      "neighbourhood": "Pinehurst",
      "neighbourhood_group": "Northgate"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.344695, 47.705051], [-122.339202, 47.705035], [-122.339, 47.705044], [-122.338964, 47.705047], [-122.338927, 47.705051], [-122.338891, 47.705055], [-122.338854, 47.70506], [-122.338818, 47.705065], [-122.338782, 47.70507], [-122.338747, 47.705076], [-122.338711, 47.705083], [-122.338675, 47.70509], [-122.33864, 47.705097], [-122.338605, 47.705105], [-122.33857, 47.705113], [-122.338535, 47.705122], [-122.338501, 47.705131], [-122.338467, 47.70514], [-122.338433, 47.70515], [-122.338399, 47.70516], [-122.338366, 47.705171], [-122.338333, 47.705182], [-122.3383, 47.705193], [-122.338267, 47.705205], [-122.338235, 47.705218], [-122.338203, 47.70523], [-122.338172, 47.705243], [-122.338141, 47.705257], [-122.33811, 47.70527], [-122.33808, 47.705285], [-122.33805, 47.705299], [-122.33802, 47.705314], [-122.337991, 47.705329], [-122.337962, 47.705345], [-122.337934, 47.705361], [-122.337906, 47.705377], [-122.337878, 47.705394], [-122.337851, 47.705411], [-122.337824, 47.705428], [-122.337799, 47.705446], [-122.337773, 47.705464], [-122.337747, 47.705482], [-122.337723, 47.7055], [-122.337699, 47.705519], [-122.337064, 47.706089], [-122.336612, 47.706489], [-122.336321, 47.706751], [-122.336091, 47.70697], [-122.335807, 47.707274], [-122.335543, 47.707626], [-122.335177, 47.708114], [-122.335155, 47.708135], [-122.335132, 47.708157], [-122.335109, 47.708178], [-122.335084, 47.708198], [-122.33506, 47.708219], [-122.335035, 47.708239], [-122.335009, 47.708258], [-122.334982, 47.708278], [-122.334955, 47.708297], [-122.334927, 47.708315], [-122.334899, 47.708333], [-122.33487, 47.708351], [-122.334841, 47.708368], [-122.334811, 47.708385], [-122.33478, 47.708402], [-122.334749, 47.708418], [-122.334718, 47.708433], [-122.334686, 47.708448], [-122.334654, 47.708463], [-122.334621, 47.708477], [-122.334588, 47.708491], [-122.334554, 47.708504], [-122.33452, 47.708517], [-122.334485, 47.708529], [-122.33445, 47.708541], [-122.334415, 47.708552], [-122.334379, 47.708563], [-122.334344, 47.708573], [-122.334307, 47.708583], [-122.334271, 47.708592], [-122.334234, 47.708601], [-122.334197, 47.708609], [-122.33416, 47.708617], [-122.334122, 47.708624], [-122.334085, 47.708631], [-122.334046, 47.708637], [-122.334008, 47.708642], [-122.33397, 47.708647], [-122.333932, 47.708652], [-122.332852, 47.708656], [-122.330008, 47.708635], [-122.329941, 47.706755], [-122.329768, 47.704552], [-122.32982, 47.703622], [-122.329862, 47.702925], [-122.329955, 47.701805], [-122.329923, 47.700708], [-122.329828, 47.69959], [-122.329567, 47.697577], [-122.329394, 47.695901], [-122.329291, 47.694499], [-122.329295, 47.692472], [-122.329265, 47.690889], [-122.329257, 47.690813], [-122.32925, 47.690735], [-122.329144, 47.690368], [-122.329125, 47.69029], [-122.329105, 47.690211], [-122.329101, 47.690119], [-122.329282, 47.690224], [-122.329314, 47.690239], [-122.329345, 47.690253], [-122.329377, 47.690267], [-122.329409, 47.690281], [-122.329442, 47.690294], [-122.329476, 47.690306], [-122.329509, 47.690318], [-122.329543, 47.69033], [-122.329578, 47.690341], [-122.329612, 47.690351], [-122.329648, 47.690361], [-122.329683, 47.690371], [-122.329719, 47.69038], [-122.329755, 47.690388], [-122.329791, 47.690396], [-122.329827, 47.690404], [-122.329864, 47.690411], [-122.329901, 47.690417], [-122.329938, 47.690423], [-122.329975, 47.690428], [-122.330013, 47.690433], [-122.33005, 47.690437], [-122.330088, 47.69044], [-122.330126, 47.690443], [-122.330164, 47.690446], [-122.330202, 47.690448], [-122.33024, 47.690449], [-122.330638, 47.69045], [-122.33297, 47.690469], [-122.333794, 47.690477], [-122.335951, 47.690486], [-122.337969, 47.69051], [-122.339663, 47.690531], [-122.341829, 47.690534], [-122.343375, 47.690557], [-122.344525, 47.690562], [-122.344535, 47.691497], [-122.344545, 47.692501], [-122.344556, 47.693505], [-122.344565, 47.694509], [-122.34458, 47.695513], [-122.344595, 47.696517], [-122.34461, 47.697521], [-122.344616, 47.698529], [-122.344631, 47.699536], [-122.344642, 47.700546], [-122.344652, 47.701557], [-122.34466, 47.702287], [-122.344663, 47.702567], [-122.344665, 47.702757], [-122.344673, 47.703578], [-122.344688, 47.704588], [-122.344695, 47.705051]]]]
    },
    "properties": {
      "neighbourhood": "North College Park",
      "neighbourhood_group": "Northgate"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.347308, 47.665005], [-122.348868, 47.665009], [-122.349793, 47.664992], [-122.349989, 47.665033], [-122.350304, 47.665039], [-122.351421, 47.665014], [-122.352496, 47.665019], [-122.35345, 47.665019], [-122.354365, 47.665019], [-122.355057, 47.665027], [-122.355414, 47.665032], [-122.355417, 47.66436], [-122.355425, 47.663661], [-122.355424, 47.663009], [-122.355428, 47.662527], [-122.355437, 47.662207], [-122.355438, 47.662141], [-122.355573, 47.662181], [-122.355865, 47.662258], [-122.356113, 47.662342], [-122.3562, 47.662384], [-122.356312, 47.662437], [-122.356477, 47.662538], [-122.356569, 47.662588], [-122.357014, 47.662834], [-122.357378, 47.663058], [-122.357704, 47.663306], [-122.358268, 47.663799], [-122.359051, 47.664492], [-122.359501, 47.664894], [-122.359643, 47.665046], [-122.359831, 47.665295], [-122.360257, 47.66601], [-122.360375, 47.666206], [-122.360744, 47.666817], [-122.360803, 47.666908], [-122.360803, 47.66719], [-122.360804, 47.668086], [-122.360805, 47.668979], [-122.360797, 47.669864], [-122.36079, 47.670749], [-122.360793, 47.671594], [-122.360788, 47.67243], [-122.360786, 47.673227], [-122.360778, 47.673926], [-122.360776, 47.674567], [-122.360772, 47.675295], [-122.360776, 47.675892], [-122.360691, 47.676004], [-122.360948, 47.675998], [-122.362245, 47.675995], [-122.362717, 47.675994], [-122.363648, 47.675993], [-122.364351, 47.675989], [-122.365228, 47.675992], [-122.366054, 47.676005], [-122.36605, 47.676333], [-122.366007, 47.680592], [-122.366038, 47.683085], [-122.366033, 47.683252], [-122.365072, 47.68324], [-122.360854, 47.683254], [-122.35672, 47.683281], [-122.352903, 47.683306], [-122.350224, 47.683296], [-122.346174, 47.683293], [-122.344486, 47.683305], [-122.344482, 47.682507], [-122.344493, 47.68138], [-122.344499, 47.681354], [-122.344505, 47.681328], [-122.344512, 47.681302], [-122.34452, 47.681277], [-122.344529, 47.681252], [-122.344539, 47.681226], [-122.34455, 47.681201], [-122.344561, 47.681176], [-122.344574, 47.681152], [-122.344588, 47.681127], [-122.344614, 47.681085], [-122.34463, 47.681061], [-122.344647, 47.681038], [-122.344664, 47.681015], [-122.344683, 47.680992], [-122.344702, 47.680969], [-122.344983, 47.680646], [-122.345003, 47.680623], [-122.345021, 47.680601], [-122.34504, 47.680578], [-122.345057, 47.680554], [-122.345074, 47.680531], [-122.34509, 47.680507], [-122.345105, 47.680483], [-122.34512, 47.680459], [-122.345133, 47.680437], [-122.345146, 47.680412], [-122.345159, 47.680388], [-122.345172, 47.680363], [-122.345184, 47.680338], [-122.345196, 47.680313], [-122.345207, 47.680288], [-122.345218, 47.680263], [-122.345229, 47.680238], [-122.345239, 47.680213], [-122.345249, 47.680188], [-122.345259, 47.680163], [-122.345268, 47.680137], [-122.345277, 47.680112], [-122.345285, 47.680086], [-122.345293, 47.680061], [-122.3453, 47.680035], [-122.345308, 47.68001], [-122.345314, 47.679984], [-122.345321, 47.679958], [-122.345327, 47.679932], [-122.345332, 47.679907], [-122.345337, 47.679881], [-122.345342, 47.679855], [-122.345346, 47.679829], [-122.34535, 47.679803], [-122.345389, 47.679435], [-122.34549, 47.678591], [-122.345507, 47.678328], [-122.345511, 47.678303], [-122.345521, 47.678277], [-122.345528, 47.678252], [-122.345535, 47.678226], [-122.345542, 47.678201], [-122.34555, 47.678175], [-122.345557, 47.67815], [-122.345564, 47.678124], [-122.345572, 47.678099], [-122.34558, 47.678073], [-122.345588, 47.678048], [-122.345596, 47.678023], [-122.345604, 47.677997], [-122.345612, 47.677972], [-122.345621, 47.677947], [-122.345629, 47.677921], [-122.345637, 47.677896], [-122.345646, 47.677871], [-122.345655, 47.677845], [-122.345664, 47.67782], [-122.345673, 47.677795], [-122.345682, 47.67777], [-122.345691, 47.677745], [-122.345701, 47.67772], [-122.34571, 47.677694], [-122.34572, 47.677669], [-122.345729, 47.677644], [-122.345739, 47.677619], [-122.345749, 47.677594], [-122.345759, 47.677569], [-122.345769, 47.677544], [-122.34578, 47.677519], [-122.345906, 47.677357], [-122.346597, 47.676479], [-122.346617, 47.676457], [-122.346636, 47.676434], [-122.346655, 47.676412], [-122.346672, 47.676389], [-122.346689, 47.676365], [-122.346706, 47.676342], [-122.346721, 47.676318], [-122.346735, 47.676294], [-122.346749, 47.67627], [-122.346762, 47.676245], [-122.346774, 47.676221], [-122.346785, 47.676196], [-122.346795, 47.676171], [-122.346805, 47.676146], [-122.346814, 47.67612], [-122.346822, 47.676095], [-122.346829, 47.67607], [-122.346835, 47.676044], [-122.34684, 47.676018], [-122.346845, 47.675993], [-122.346848, 47.675967], [-122.346851, 47.675941], [-122.346853, 47.675915], [-122.346853, 47.675889], [-122.346853, 47.675844], [-122.346852, 47.675818], [-122.346849, 47.675792], [-122.346847, 47.675766], [-122.346842, 47.67574], [-122.346838, 47.675714], [-122.346832, 47.675689], [-122.346825, 47.675663], [-122.346818, 47.675638], [-122.346809, 47.675612], [-122.3468, 47.675587], [-122.34679, 47.675562], [-122.346779, 47.675537], [-122.346768, 47.675513], [-122.346755, 47.675488], [-122.346741, 47.675464], [-122.346731, 47.675441], [-122.34672, 47.675416], [-122.346708, 47.675391], [-122.346696, 47.675367], [-122.346684, 47.675342], [-122.346671, 47.675318], [-122.346658, 47.675293], [-122.346645, 47.675269], [-122.346631, 47.675245], [-122.346618, 47.67522], [-122.346604, 47.675196], [-122.346589, 47.675172], [-122.346574, 47.675148], [-122.346559, 47.675124], [-122.346545, 47.6751], [-122.346529, 47.675077], [-122.346513, 47.675053], [-122.346497, 47.675029], [-122.346481, 47.675006], [-122.346464, 47.674983], [-122.346447, 47.674959], [-122.34643, 47.674936], [-122.346413, 47.674913], [-122.346395, 47.67489], [-122.346377, 47.674867], [-122.346359, 47.674844], [-122.34634, 47.674821], [-122.346322, 47.674799], [-122.346303, 47.674776], [-122.346283, 47.674754], [-122.346263, 47.674732], [-122.346244, 47.674709], [-122.346223, 47.674687], [-122.346203, 47.674665], [-122.346183, 47.674643], [-122.346162, 47.674622], [-122.346141, 47.6746], [-122.346119, 47.674578], [-122.346097, 47.674557], [-122.346076, 47.674536], [-122.346054, 47.674514], [-122.346031, 47.674493], [-122.346009, 47.674472], [-122.345986, 47.674452], [-122.345962, 47.674431], [-122.345939, 47.67441], [-122.345915, 47.67439], [-122.345891, 47.674369], [-122.345868, 47.674349], [-122.345843, 47.674329], [-122.345819, 47.674309], [-122.345794, 47.674289], [-122.345769, 47.67427], [-122.345743, 47.67425], [-122.345718, 47.674231], [-122.345692, 47.674212], [-122.345666, 47.674193], [-122.34564, 47.674174], [-122.344898, 47.673692], [-122.344394, 47.673188], [-122.344369, 47.673162], [-122.34435, 47.673139], [-122.34433, 47.673117], [-122.344311, 47.673095], [-122.344292, 47.673072], [-122.344274, 47.673049], [-122.344255, 47.673026], [-122.344237, 47.673004], [-122.34422, 47.67298], [-122.344202, 47.672957], [-122.344185, 47.672934], [-122.344168, 47.672911], [-122.344152, 47.672887], [-122.344136, 47.672864], [-122.34412, 47.67284], [-122.344104, 47.672816], [-122.344089, 47.672793], [-122.344074, 47.672769], [-122.344059, 47.672745], [-122.344046, 47.672721], [-122.344032, 47.672696], [-122.344018, 47.672672], [-122.344004, 47.672648], [-122.343991, 47.672623], [-122.343979, 47.672599], [-122.343967, 47.672574], [-122.343954, 47.67255], [-122.343943, 47.672525], [-122.343932, 47.6725], [-122.34392, 47.672475], [-122.34391, 47.672451], [-122.343899, 47.672426], [-122.343889, 47.672401], [-122.34388, 47.672375], [-122.34387, 47.67235], [-122.343861, 47.672325], [-122.343853, 47.6723], [-122.343844, 47.672274], [-122.343836, 47.672249], [-122.343828, 47.672224], [-122.343821, 47.672198], [-122.343814, 47.672173], [-122.343807, 47.672147], [-122.343801, 47.672122], [-122.343794, 47.672096], [-122.343789, 47.67207], [-122.343784, 47.672045], [-122.343779, 47.672019], [-122.343774, 47.671993], [-122.343769, 47.671967], [-122.343766, 47.671942], [-122.343762, 47.671916], [-122.343759, 47.67189], [-122.343756, 47.671864], [-122.343753, 47.671838], [-122.343752, 47.671813], [-122.343751, 47.671787], [-122.34375, 47.671761], [-122.343747, 47.671735], [-122.343743, 47.67171], [-122.343739, 47.671684], [-122.343733, 47.671658], [-122.343726, 47.671633], [-122.343718, 47.671607], [-122.343709, 47.671582], [-122.343699, 47.671557], [-122.343688, 47.671532], [-122.343676, 47.671508], [-122.343663, 47.671483], [-122.34365, 47.671459], [-122.343635, 47.671435], [-122.343619, 47.671411], [-122.343603, 47.671388], [-122.343587, 47.671364], [-122.34357, 47.671341], [-122.343553, 47.671318], [-122.343535, 47.671295], [-122.343517, 47.671272], [-122.343498, 47.671249], [-122.343479, 47.671226], [-122.343461, 47.671204], [-122.343441, 47.671182], [-122.34342, 47.67116], [-122.3434, 47.671138], [-122.343379, 47.671116], [-122.343357, 47.671095], [-122.343335, 47.671073], [-122.343313, 47.671052], [-122.343291, 47.671031], [-122.343267, 47.671011], [-122.343244, 47.67099], [-122.34322, 47.67097], [-122.343196, 47.67095], [-122.343171, 47.67093], [-122.343146, 47.67091], [-122.343121, 47.67089], [-122.343095, 47.670871], [-122.343069, 47.670852], [-122.343043, 47.670833], [-122.343016, 47.670815], [-122.342988, 47.670796], [-122.342961, 47.670778], [-122.342934, 47.67076], [-122.342905, 47.670743], [-122.342877, 47.670725], [-122.342848, 47.670708], [-122.342819, 47.670691], [-122.342789, 47.670675], [-122.34276, 47.670658], [-122.342729, 47.670642], [-122.342699, 47.670626], [-122.342668, 47.670611], [-122.342638, 47.670595], [-122.342606, 47.67058], [-122.342574, 47.670566], [-122.342543, 47.670551], [-122.34251, 47.670537], [-122.341536, 47.670237], [-122.340924, 47.670048], [-122.340891, 47.67004], [-122.340857, 47.67003], [-122.340824, 47.67002], [-122.340792, 47.67001], [-122.34076, 47.669998], [-122.340729, 47.669987], [-122.340697, 47.669974], [-122.340667, 47.669962], [-122.340637, 47.669948], [-122.340607, 47.669935], [-122.340578, 47.66992], [-122.340549, 47.669905], [-122.340521, 47.66989], [-122.340494, 47.669874], [-122.340467, 47.669858], [-122.340441, 47.669841], [-122.340415, 47.669824], [-122.340391, 47.669807], [-122.340366, 47.669789], [-122.34034, 47.669771], [-122.340316, 47.669753], [-122.340289, 47.669732], [-122.340265, 47.669712], [-122.340241, 47.669692], [-122.340218, 47.669671], [-122.340195, 47.66965], [-122.340174, 47.669629], [-122.340153, 47.669607], [-122.340132, 47.669585], [-122.340113, 47.669563], [-122.340094, 47.66954], [-122.340076, 47.669517], [-122.340059, 47.669494], [-122.340017, 47.66947], [-122.340018, 47.669439], [-122.340019, 47.669395], [-122.340022, 47.669199], [-122.340026, 47.668781], [-122.340032, 47.668756], [-122.340038, 47.66873], [-122.340042, 47.668705], [-122.340047, 47.668679], [-122.340052, 47.668654], [-122.340056, 47.668628], [-122.34006, 47.668602], [-122.340063, 47.668577], [-122.340066, 47.668551], [-122.34007, 47.668526], [-122.340073, 47.6685], [-122.340075, 47.668474], [-122.340077, 47.668449], [-122.340082, 47.667914], [-122.340087, 47.667087], [-122.340088, 47.666406], [-122.3401, 47.66573], [-122.340203, 47.665038], [-122.340449, 47.665043], [-122.342698, 47.665023], [-122.343219, 47.665011], [-122.34452, 47.664998], [-122.345092, 47.665011], [-122.346068, 47.665041], [-122.346093, 47.665024], [-122.346125, 47.665011], [-122.346159, 47.665004], [-122.34623, 47.665003], [-122.34645, 47.664997], [-122.347308, 47.665005]]]]
    },
    "properties": {
      "neighbourhood": "Phinney Ridge",
      "neighbourhood_group": "Other neighborhoods"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.267524, 47.690343], [-122.267311, 47.690345], [-122.266797, 47.690346], [-122.266731, 47.690263], [-122.266706, 47.690201], [-122.266681, 47.690172], [-122.266607, 47.690116], [-122.266558, 47.690076], [-122.266492, 47.69001], [-122.266446, 47.689963], [-122.266425, 47.689935], [-122.266382, 47.689887], [-122.266336, 47.689858], [-122.266297, 47.689848], [-122.266252, 47.689836], [-122.266214, 47.689812], [-122.266179, 47.689776], [-122.266149, 47.689758], [-122.266081, 47.689732], [-122.266009, 47.689705], [-122.265937, 47.689667], [-122.265864, 47.689624], [-122.265782, 47.689571], [-122.265714, 47.689526], [-122.265676, 47.689508], [-122.265582, 47.689469], [-122.265496, 47.689438], [-122.265406, 47.68941], [-122.265309, 47.689373], [-122.265214, 47.689329], [-122.265124, 47.689287], [-122.265038, 47.689251], [-122.265003, 47.689235], [-122.264955, 47.68922], [-122.264943, 47.689296], [-122.264901, 47.689296], [-122.264898, 47.68974], [-122.264922, 47.689774], [-122.265194, 47.689976], [-122.265066, 47.69005], [-122.264857, 47.689901], [-122.264644, 47.689746], [-122.264632, 47.689116], [-122.264597, 47.689102], [-122.264555, 47.689069], [-122.26452, 47.689044], [-122.264499, 47.689006], [-122.262949, 47.687717], [-122.261915, 47.68773], [-122.261871, 47.687756], [-122.261834, 47.687769], [-122.261833, 47.687815], [-122.261771, 47.687814], [-122.261687, 47.687809], [-122.261625, 47.687785], [-122.261599, 47.687758], [-122.26156, 47.687693], [-122.261533, 47.687672], [-122.261484, 47.687657], [-122.261438, 47.687656], [-122.261345, 47.687663], [-122.261215, 47.687664], [-122.261069, 47.68766], [-122.260998, 47.687653], [-122.260937, 47.687636], [-122.260909, 47.687619], [-122.26086, 47.687607], [-122.260822, 47.687601], [-122.260748, 47.687587], [-122.260712, 47.687587], [-122.26062, 47.687592], [-122.260533, 47.687596], [-122.260335, 47.687597], [-122.260117, 47.687597], [-122.260008, 47.687594], [-122.259915, 47.687593], [-122.259846, 47.687594], [-122.259782, 47.687596], [-122.259725, 47.687594], [-122.259583, 47.687592], [-122.259495, 47.687596], [-122.259439, 47.687598], [-122.259302, 47.687598], [-122.259247, 47.6876], [-122.259129, 47.687609], [-122.258997, 47.687619], [-122.258883, 47.687629], [-122.258783, 47.687639], [-122.258638, 47.687646], [-122.258571, 47.687654], [-122.258434, 47.687674], [-122.258396, 47.687679], [-122.258318, 47.687696], [-122.258281, 47.687704], [-122.258113, 47.687725], [-122.257943, 47.687749], [-122.257793, 47.687768], [-122.257723, 47.687782], [-122.257682, 47.687791], [-122.257623, 47.687801], [-122.25752, 47.687825], [-122.257444, 47.687838], [-122.257347, 47.687854], [-122.257145, 47.687884], [-122.257086, 47.68789], [-122.257015, 47.687898], [-122.256908, 47.687909], [-122.256855, 47.68792], [-122.25682, 47.68793], [-122.256762, 47.68795], [-122.256682, 47.687982], [-122.256615, 47.688008], [-122.25658, 47.688023], [-122.256552, 47.688039], [-122.256509, 47.688062], [-122.256474, 47.688075], [-122.256443, 47.688089], [-122.256364, 47.688128], [-122.256292, 47.688169], [-122.256194, 47.688212], [-122.256152, 47.688216], [-122.256071, 47.688194], [-122.256033, 47.688192], [-122.255969, 47.688189], [-122.255917, 47.688184], [-122.255843, 47.688169], [-122.255794, 47.688163], [-122.255747, 47.688156], [-122.255684, 47.688134], [-122.255637, 47.688102], [-122.255599, 47.688086], [-122.255563, 47.68808], [-122.25554, 47.688052], [-122.255529, 47.688008], [-122.255527, 47.687983], [-122.255506, 47.687943], [-122.255478, 47.687914], [-122.255427, 47.687881], [-122.255376, 47.687865], [-122.255293, 47.687827], [-122.255223, 47.687796], [-122.255178, 47.68778], [-122.255133, 47.687768], [-122.255085, 47.687757], [-122.255043, 47.687744], [-122.254993, 47.68773], [-122.254904, 47.687711], [-122.254862, 47.6877], [-122.254766, 47.68766], [-122.254713, 47.687647], [-122.254622, 47.687628], [-122.254549, 47.687606], [-122.2545, 47.687599], [-122.254426, 47.687604], [-122.254372, 47.68759], [-122.254304, 47.687546], [-122.254263, 47.68753], [-122.254191, 47.687516], [-122.254115, 47.687504], [-122.254081, 47.687493], [-122.254056, 47.687473], [-122.254004, 47.687467], [-122.253955, 47.687471], [-122.253898, 47.687465], [-122.253848, 47.687446], [-122.253798, 47.687435], [-122.25372, 47.687415], [-122.253657, 47.687394], [-122.253593, 47.687368], [-122.253541, 47.687338], [-122.253492, 47.68731], [-122.253463, 47.68729], [-122.253395, 47.687249], [-122.253309, 47.687215], [-122.253241, 47.687194], [-122.2532, 47.68718], [-122.253136, 47.687159], [-122.253004, 47.687116], [-122.252946, 47.687094], [-122.252905, 47.687079], [-122.252868, 47.687065], [-122.252824, 47.687043], [-122.252766, 47.68702], [-122.252702, 47.687007], [-122.252662, 47.686997], [-122.252575, 47.686984], [-122.252539, 47.686981], [-122.252397, 47.686966], [-122.252371, 47.686939], [-122.25234, 47.686924], [-122.252294, 47.686917], [-122.252206, 47.686914], [-122.252172, 47.686927], [-122.252131, 47.686921], [-122.252074, 47.686906], [-122.252007, 47.686906], [-122.251953, 47.686904], [-122.251943, 47.686855], [-122.251856, 47.686833], [-122.251872, 47.686807], [-122.251876, 47.686784], [-122.251837, 47.686759], [-122.251785, 47.686738], [-122.251721, 47.686722], [-122.251641, 47.686698], [-122.251538, 47.686673], [-122.251465, 47.686656], [-122.251379, 47.686627], [-122.251335, 47.68661], [-122.251267, 47.686583], [-122.251229, 47.686572], [-122.251172, 47.686563], [-122.251026, 47.686536], [-122.250922, 47.686519], [-122.250867, 47.686506], [-122.250812, 47.686492], [-122.250756, 47.68647], [-122.250673, 47.686437], [-122.250617, 47.686414], [-122.250555, 47.686392], [-122.2505, 47.68637], [-122.250465, 47.686357], [-122.250346, 47.686304], [-122.250324, 47.686274], [-122.250266, 47.686241], [-122.250238, 47.686225], [-122.250152, 47.686178], [-122.250119, 47.686161], [-122.250071, 47.686134], [-122.250036, 47.686114], [-122.249995, 47.68609], [-122.249961, 47.686073], [-122.249929, 47.686062], [-122.249865, 47.686044], [-122.249766, 47.686014], [-122.249648, 47.685984], [-122.249613, 47.68597], [-122.249542, 47.685952], [-122.249438, 47.685927], [-122.249395, 47.685917], [-122.249328, 47.685905], [-122.249239, 47.685889], [-122.249175, 47.685876], [-122.249135, 47.685864], [-122.249083, 47.685851], [-122.24893, 47.685815], [-122.248852, 47.685798], [-122.248787, 47.68578], [-122.248753, 47.685768], [-122.248689, 47.685744], [-122.248651, 47.685729], [-122.248603, 47.685699], [-122.24855, 47.685673], [-122.248479, 47.68564], [-122.248414, 47.685605], [-122.248344, 47.685575], [-122.248238, 47.685552], [-122.24817, 47.685535], [-122.248111, 47.685522], [-122.248027, 47.6855], [-122.247966, 47.685475], [-122.24792, 47.685454], [-122.247863, 47.685423], [-122.247808, 47.685378], [-122.247797, 47.685353], [-122.247791, 47.685298], [-122.247786, 47.685256], [-122.247765, 47.685183], [-122.247722, 47.685082], [-122.247697, 47.685041], [-122.247672, 47.684996], [-122.247624, 47.68494], [-122.247567, 47.684895], [-122.247508, 47.684842], [-122.24748, 47.684824], [-122.247437, 47.684802], [-122.247377, 47.684782], [-122.247328, 47.684769], [-122.247224, 47.68474], [-122.247148, 47.684715], [-122.247071, 47.684678], [-122.247051, 47.684647], [-122.247024, 47.684601], [-122.247, 47.684568], [-122.246953, 47.684531], [-122.246917, 47.6845], [-122.246887, 47.684472], [-122.246833, 47.684419], [-122.246787, 47.68438], [-122.24675, 47.684338], [-122.246731, 47.684309], [-122.246695, 47.684263], [-122.246678, 47.684236], [-122.246658, 47.684189], [-122.24665, 47.684145], [-122.246646, 47.684116], [-122.246653, 47.68408], [-122.246655, 47.684052], [-122.24665, 47.684022], [-122.246635, 47.683989], [-122.246622, 47.683961], [-122.246593, 47.683925], [-122.246556, 47.683897], [-122.246528, 47.68388], [-122.246494, 47.683862], [-122.246443, 47.683828], [-122.246373, 47.683786], [-122.246344, 47.683754], [-122.246261, 47.683693], [-122.246209, 47.683674], [-122.246166, 47.683646], [-122.246145, 47.683624], [-122.246105, 47.683578], [-122.246064, 47.683543], [-122.246013, 47.683485], [-122.245991, 47.68345], [-122.245976, 47.683418], [-122.245955, 47.683393], [-122.245936, 47.683369], [-122.245914, 47.683338], [-122.245878, 47.683301], [-122.245862, 47.683279], [-122.245842, 47.683251], [-122.245809, 47.683198], [-122.245805, 47.683133], [-122.245789, 47.683072], [-122.245764, 47.683037], [-122.245745, 47.683015], [-122.245727, 47.682977], [-122.245719, 47.682946], [-122.245712, 47.682913], [-122.245701, 47.682889], [-122.245689, 47.682854], [-122.245658, 47.682786], [-122.245643, 47.682754], [-122.245632, 47.682719], [-122.245629, 47.682691], [-122.245646, 47.682649], [-122.24569, 47.68256], [-122.245712, 47.68248], [-122.245725, 47.682415], [-122.245728, 47.682364], [-122.245724, 47.682321], [-122.245701, 47.682252], [-122.245689, 47.682228], [-122.245675, 47.6822], [-122.245655, 47.682138], [-122.245651, 47.682102], [-122.24565, 47.681964], [-122.245656, 47.681908], [-122.245672, 47.681825], [-122.245681, 47.681778], [-122.245694, 47.681725], [-122.245728, 47.681587], [-122.245738, 47.68154], [-122.245742, 47.681489], [-122.245771, 47.681438], [-122.245805, 47.681389], [-122.245817, 47.681365], [-122.245837, 47.681317], [-122.245848, 47.681274], [-122.245852, 47.681246], [-122.245857, 47.681193], [-122.245879, 47.681133], [-122.245901, 47.681064], [-122.245911, 47.681014], [-122.245919, 47.680978], [-122.245955, 47.680928], [-122.24597, 47.680905], [-122.245993, 47.680868], [-122.246017, 47.680833], [-122.246052, 47.680786], [-122.246072, 47.680751], [-122.246105, 47.68071], [-122.246133, 47.680686], [-122.246222, 47.680631], [-122.246288, 47.680594], [-122.246352, 47.68056], [-122.246387, 47.680539], [-122.246453, 47.68051], [-122.246492, 47.680495], [-122.246589, 47.680441], [-122.246661, 47.680392], [-122.246702, 47.680371], [-122.246749, 47.680345], [-122.246809, 47.680315], [-122.246895, 47.680262], [-122.24693, 47.680237], [-122.24697, 47.680215], [-122.247018, 47.68018], [-122.247053, 47.680161], [-122.247083, 47.680137], [-122.24712, 47.680102], [-122.247169, 47.680038], [-122.247218, 47.679996], [-122.247265, 47.679963], [-122.247303, 47.679918], [-122.247334, 47.679889], [-122.247366, 47.679854], [-122.247448, 47.679762], [-122.247489, 47.679714], [-122.24751, 47.679687], [-122.247547, 47.679627], [-122.247584, 47.679578], [-122.247623, 47.679498], [-122.247664, 47.679423], [-122.247666, 47.679367], [-122.247666, 47.679284], [-122.247662, 47.679258], [-122.247662, 47.679204], [-122.247654, 47.679161], [-122.24763, 47.679128], [-122.247632, 47.679094], [-122.247646, 47.679063], [-122.247691, 47.678985], [-122.247719, 47.678958], [-122.247788, 47.678916], [-122.247838, 47.67891], [-122.247889, 47.678898], [-122.247936, 47.678879], [-122.247971, 47.678861], [-122.247995, 47.678833], [-122.248031, 47.678811], [-122.248074, 47.678776], [-122.248096, 47.678734], [-122.248101, 47.678707], [-122.248153, 47.678703], [-122.248188, 47.678681], [-122.248208, 47.67866], [-122.248223, 47.678635], [-122.248238, 47.678592], [-122.248241, 47.678549], [-122.24825, 47.678518], [-122.248287, 47.678493], [-122.248328, 47.678482], [-122.248354, 47.678458], [-122.24837, 47.678423], [-122.248348, 47.67839], [-122.248345, 47.678364], [-122.248372, 47.678314], [-122.248399, 47.678297], [-122.248438, 47.678275], [-122.248475, 47.678243], [-122.248504, 47.678225], [-122.24854, 47.678198], [-122.248593, 47.678167], [-122.248643, 47.678122], [-122.248687, 47.678079], [-122.248705, 47.678053], [-122.248723, 47.678026], [-122.248778, 47.677976], [-122.248806, 47.677948], [-122.248831, 47.67793], [-122.248858, 47.677901], [-122.248884, 47.677879], [-122.248921, 47.677833], [-122.24899, 47.67775], [-122.249006, 47.677723], [-122.249037, 47.677683], [-122.249059, 47.67766], [-122.24909, 47.677609], [-122.249132, 47.67752], [-122.24915, 47.677487], [-122.249164, 47.677464], [-122.249195, 47.677417], [-122.249227, 47.67736], [-122.249247, 47.677321], [-122.249269, 47.677282], [-122.249285, 47.677255], [-122.249311, 47.677212], [-122.249306, 47.677183], [-122.249315, 47.677154], [-122.249359, 47.677111], [-122.249401, 47.677095], [-122.249445, 47.67709], [-122.249516, 47.67709], [-122.249595, 47.677079], [-122.249665, 47.677058], [-122.249735, 47.677032], [-122.24977, 47.676998], [-122.249814, 47.676968], [-122.249861, 47.676925], [-122.249898, 47.67687], [-122.249929, 47.676813], [-122.24995, 47.676764], [-122.249947, 47.676732], [-122.249914, 47.676716], [-122.249877, 47.676694], [-122.24984, 47.676672], [-122.249832, 47.676636], [-122.249812, 47.676603], [-122.249754, 47.676566], [-122.24971, 47.676524], [-122.249695, 47.67649], [-122.249697, 47.676459], [-122.249706, 47.676433], [-122.249724, 47.6764], [-122.249743, 47.676338], [-122.249754, 47.676282], [-122.249778, 47.676205], [-122.249811, 47.676107], [-122.249839, 47.676038], [-122.249862, 47.675997], [-122.249889, 47.675926], [-122.249889, 47.675862], [-122.249903, 47.675753], [-122.249906, 47.675704], [-122.249915, 47.675669], [-122.249955, 47.675624], [-122.249979, 47.6756], [-122.250042, 47.675534], [-122.250072, 47.67549], [-122.25011, 47.675443], [-122.250137, 47.675391], [-122.250159, 47.675322], [-122.250178, 47.675287], [-122.250205, 47.675246], [-122.250232, 47.675213], [-122.250262, 47.675183], [-122.250325, 47.675119], [-122.250345, 47.675069], [-122.250383, 47.674986], [-122.250402, 47.674926], [-122.250422, 47.674893], [-122.250443, 47.674853], [-122.250445, 47.674828], [-122.250435, 47.674766], [-122.250428, 47.674733], [-122.250429, 47.674697], [-122.250436, 47.674646], [-122.250435, 47.674588], [-122.250444, 47.674545], [-122.250449, 47.674506], [-122.250454, 47.674476], [-122.250465, 47.67445], [-122.25049, 47.674418], [-122.250538, 47.674361], [-122.250605, 47.674294], [-122.250697, 47.674219], [-122.250738, 47.674186], [-122.250795, 47.674149], [-122.25084, 47.674131], [-122.250927, 47.674103], [-122.251002, 47.674084], [-122.251061, 47.674066], [-122.251138, 47.674051], [-122.251197, 47.674035], [-122.251255, 47.674012], [-122.251319, 47.67398], [-122.251372, 47.67396], [-122.25144, 47.673932], [-122.251477, 47.673921], [-122.251516, 47.673896], [-122.251553, 47.67387], [-122.251594, 47.673837], [-122.251707, 47.673718], [-122.251746, 47.673663], [-122.25178, 47.673613], [-122.251814, 47.673566], [-122.252042, 47.673674], [-122.254393, 47.674077], [-122.254869, 47.673506], [-122.256767, 47.673522], [-122.257385, 47.673518], [-122.258153, 47.673512], [-122.258153, 47.674242], [-122.25817, 47.675231], [-122.258185, 47.675602], [-122.258188, 47.675696], [-122.258985, 47.675699], [-122.258979, 47.675569], [-122.258955, 47.674976], [-122.259128, 47.674976], [-122.259403, 47.674977], [-122.260558, 47.674982], [-122.261492, 47.674991], [-122.26221, 47.674992], [-122.262947, 47.674996], [-122.263533, 47.674995], [-122.263555, 47.675723], [-122.263627, 47.679137], [-122.263653, 47.681785], [-122.26374, 47.68325], [-122.263737, 47.68328], [-122.263734, 47.68331], [-122.263733, 47.68334], [-122.263732, 47.68337], [-122.263732, 47.6834], [-122.263732, 47.68343], [-122.263734, 47.68346], [-122.263736, 47.68349], [-122.263739, 47.68352], [-122.263743, 47.683549], [-122.263747, 47.683579], [-122.263752, 47.683609], [-122.263759, 47.683639], [-122.263765, 47.683668], [-122.263773, 47.683698], [-122.263781, 47.683727], [-122.26379, 47.683757], [-122.2638, 47.683786], [-122.263811, 47.683815], [-122.263822, 47.683844], [-122.263834, 47.683873], [-122.263847, 47.683902], [-122.263861, 47.68393], [-122.263875, 47.683958], [-122.26389, 47.683987], [-122.263906, 47.684015], [-122.263922, 47.684043], [-122.26394, 47.68407], [-122.263957, 47.684098], [-122.263976, 47.684125], [-122.263995, 47.684152], [-122.264015, 47.684179], [-122.264036, 47.684205], [-122.264057, 47.684231], [-122.264079, 47.684257], [-122.264102, 47.684283], [-122.264125, 47.684309], [-122.264149, 47.684334], [-122.264174, 47.684359], [-122.2642, 47.684384], [-122.264226, 47.684408], [-122.264252, 47.684432], [-122.264632, 47.685115], [-122.265059, 47.686229], [-122.265066, 47.686258], [-122.265073, 47.686288], [-122.265081, 47.686318], [-122.265088, 47.686347], [-122.265095, 47.686377], [-122.265103, 47.686406], [-122.265111, 47.686436], [-122.265119, 47.686465], [-122.265127, 47.686495], [-122.265136, 47.686524], [-122.265143, 47.686554], [-122.265152, 47.686583], [-122.265161, 47.686613], [-122.26517, 47.686642], [-122.265178, 47.686671], [-122.265188, 47.686701], [-122.265197, 47.68673], [-122.265206, 47.686759], [-122.265215, 47.686789], [-122.265225, 47.686818], [-122.265234, 47.686847], [-122.265244, 47.686876], [-122.265254, 47.686906], [-122.265264, 47.686935], [-122.265275, 47.686964], [-122.265285, 47.686993], [-122.265295, 47.687022], [-122.265306, 47.687051], [-122.265317, 47.68708], [-122.265328, 47.68711], [-122.265339, 47.687139], [-122.26535, 47.687168], [-122.265361, 47.687197], [-122.265373, 47.687226], [-122.265384, 47.687255], [-122.265396, 47.687283], [-122.265408, 47.687312], [-122.265419, 47.687341], [-122.265431, 47.68737], [-122.265443, 47.687399], [-122.265456, 47.687428], [-122.265468, 47.687457], [-122.265481, 47.687485], [-122.265494, 47.687514], [-122.265507, 47.687543], [-122.26552, 47.687571], [-122.265533, 47.6876], [-122.265546, 47.687629], [-122.265559, 47.687657], [-122.265573, 47.687686], [-122.265586, 47.687714], [-122.2656, 47.687743], [-122.265614, 47.687771], [-122.265628, 47.6878], [-122.265642, 47.687828], [-122.265657, 47.687857], [-122.265671, 47.687885], [-122.265686, 47.687913], [-122.2657, 47.687942], [-122.265715, 47.68797], [-122.26573, 47.687998], [-122.265745, 47.688026], [-122.26576, 47.688054], [-122.265775, 47.688083], [-122.265791, 47.688111], [-122.265806, 47.688139], [-122.265822, 47.688167], [-122.265838, 47.688195], [-122.265854, 47.688223], [-122.26587, 47.688251], [-122.265886, 47.688279], [-122.265902, 47.688307], [-122.265919, 47.688334], [-122.265935, 47.688362], [-122.265952, 47.68839], [-122.265969, 47.688418], [-122.265986, 47.688445], [-122.266003, 47.688473], [-122.26602, 47.688501], [-122.266037, 47.688528], [-122.266055, 47.688556], [-122.266073, 47.688583], [-122.266091, 47.688611], [-122.266108, 47.688638], [-122.266126, 47.688666], [-122.266144, 47.688693], [-122.266163, 47.68872], [-122.266181, 47.688748], [-122.266199, 47.688775], [-122.266218, 47.688802], [-122.266237, 47.688829], [-122.266255, 47.688857], [-122.266274, 47.688884], [-122.266293, 47.688911], [-122.266313, 47.688938], [-122.266332, 47.688965], [-122.266351, 47.688992], [-122.266371, 47.689019], [-122.26639, 47.689046], [-122.26641, 47.689072], [-122.26643, 47.689099], [-122.26645, 47.689126], [-122.26647, 47.689153], [-122.266491, 47.689179], [-122.266512, 47.689206], [-122.266532, 47.689233], [-122.266553, 47.689259], [-122.266573, 47.689286], [-122.266594, 47.689312], [-122.266615, 47.689338], [-122.266636, 47.689365], [-122.266658, 47.689391], [-122.266679, 47.689417], [-122.2667, 47.689444], [-122.266722, 47.68947], [-122.266744, 47.689496], [-122.266766, 47.689522], [-122.266788, 47.689548], [-122.26681, 47.689574], [-122.266832, 47.6896], [-122.266855, 47.689626], [-122.266877, 47.689652], [-122.2669, 47.689678], [-122.266922, 47.689703], [-122.266945, 47.689729], [-122.266968, 47.689755], [-122.266991, 47.68978], [-122.267014, 47.689806], [-122.267037, 47.689832], [-122.267524, 47.690343]]]]
    },
    "properties": {
      "neighbourhood": "Sand Point",
      "neighbourhood_group": "Other neighborhoods"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.279539, 47.675784], [-122.277362, 47.675782], [-122.277234, 47.675779], [-122.275862, 47.67578], [-122.275648, 47.675532], [-122.275627, 47.675511], [-122.275608, 47.675489], [-122.275593, 47.675466], [-122.275578, 47.675443], [-122.275567, 47.675419], [-122.275558, 47.675395], [-122.275551, 47.67537], [-122.275547, 47.675345], [-122.275545, 47.67532], [-122.275547, 47.675295], [-122.27555, 47.67527], [-122.275557, 47.675242], [-122.275566, 47.675218], [-122.275572, 47.675193], [-122.275574, 47.675168], [-122.275574, 47.675143], [-122.27557, 47.675118], [-122.275563, 47.675093], [-122.275554, 47.675069], [-122.275541, 47.675046], [-122.275525, 47.675023], [-122.275507, 47.675001], [-122.275486, 47.67498], [-122.275462, 47.674961], [-122.275436, 47.674943], [-122.275408, 47.674926], [-122.275374, 47.674916], [-122.275339, 47.674907], [-122.275304, 47.674899], [-122.275167, 47.674872], [-122.274921, 47.674866], [-122.274748, 47.674865], [-122.274708, 47.674871], [-122.274672, 47.674878], [-122.274638, 47.674888], [-122.274605, 47.674899], [-122.274574, 47.674912], [-122.274545, 47.674927], [-122.274517, 47.674944], [-122.274493, 47.674962], [-122.27447, 47.674982], [-122.27445, 47.675002], [-122.274432, 47.675024], [-122.274417, 47.675047], [-122.274388, 47.675186], [-122.27438, 47.67521], [-122.274369, 47.675234], [-122.274355, 47.675257], [-122.274337, 47.675279], [-122.274317, 47.6753], [-122.274295, 47.67532], [-122.27427, 47.675338], [-122.274243, 47.675355], [-122.274213, 47.67537], [-122.274181, 47.675383], [-122.273903, 47.675446], [-122.272331, 47.675758], [-122.271537, 47.675757], [-122.270411, 47.675758], [-122.269324, 47.675745], [-122.268611, 47.675748], [-122.267589, 47.675741], [-122.266974, 47.675739], [-122.265627, 47.675726], [-122.265239, 47.675727], [-122.263828, 47.675722], [-122.263555, 47.675723], [-122.263533, 47.674995], [-122.262947, 47.674996], [-122.26221, 47.674992], [-122.261492, 47.674991], [-122.260558, 47.674982], [-122.259403, 47.674977], [-122.259128, 47.674976], [-122.258955, 47.674976], [-122.258979, 47.675569], [-122.258985, 47.675699], [-122.258188, 47.675696], [-122.258185, 47.675602], [-122.25817, 47.675231], [-122.258153, 47.674242], [-122.258153, 47.673512], [-122.257385, 47.673518], [-122.256767, 47.673522], [-122.254869, 47.673506], [-122.254393, 47.674077], [-122.252042, 47.673674], [-122.251814, 47.673566], [-122.25184, 47.673519], [-122.251859, 47.673466], [-122.251868, 47.673428], [-122.251867, 47.673374], [-122.251862, 47.673338], [-122.251845, 47.673289], [-122.251822, 47.673244], [-122.251805, 47.673217], [-122.251792, 47.673186], [-122.251788, 47.673159], [-122.251789, 47.673123], [-122.251809, 47.673065], [-122.251825, 47.67304], [-122.251839, 47.673016], [-122.251854, 47.672962], [-122.251865, 47.672937], [-122.251891, 47.672907], [-122.251949, 47.672881], [-122.252001, 47.67285], [-122.252098, 47.67277], [-122.252121, 47.672737], [-122.252165, 47.67269], [-122.252196, 47.672634], [-122.252208, 47.67261], [-122.252239, 47.67258], [-122.252267, 47.672551], [-122.252278, 47.672528], [-122.252282, 47.67248], [-122.252291, 47.67245], [-122.252303, 47.672419], [-122.252321, 47.672391], [-122.252338, 47.672335], [-122.252327, 47.672293], [-122.252291, 47.672274], [-122.252229, 47.672236], [-122.252243, 47.672205], [-122.25232, 47.672185], [-122.252398, 47.672175], [-122.252458, 47.672168], [-122.252497, 47.672149], [-122.252527, 47.672131], [-122.252569, 47.672102], [-122.252602, 47.672086], [-122.252666, 47.672049], [-122.252711, 47.672028], [-122.252751, 47.672003], [-122.252783, 47.671973], [-122.252796, 47.671945], [-122.252765, 47.671929], [-122.252729, 47.671903], [-122.252809, 47.671826], [-122.252867, 47.671783], [-122.252909, 47.671786], [-122.252943, 47.671759], [-122.252922, 47.671734], [-122.252889, 47.671706], [-122.25289, 47.671674], [-122.252924, 47.671665], [-122.252973, 47.671666], [-122.253017, 47.671659], [-122.25306, 47.671638], [-122.253091, 47.67162], [-122.253149, 47.671561], [-122.253176, 47.671505], [-122.253211, 47.671476], [-122.253252, 47.671449], [-122.253291, 47.671435], [-122.253322, 47.671417], [-122.253383, 47.671392], [-122.253422, 47.671368], [-122.253445, 47.671348], [-122.253433, 47.671323], [-122.253441, 47.671295], [-122.253493, 47.671279], [-122.253535, 47.671262], [-122.253591, 47.67124], [-122.253638, 47.671228], [-122.253678, 47.671218], [-122.25371, 47.671205], [-122.253756, 47.671177], [-122.2538, 47.67116], [-122.253864, 47.671134], [-122.253923, 47.671106], [-122.253967, 47.671082], [-122.254008, 47.671047], [-122.254078, 47.670995], [-122.254113, 47.670965], [-122.254176, 47.670903], [-122.254199, 47.670872], [-122.25423, 47.670831], [-122.254241, 47.670802], [-122.254272, 47.670769], [-122.254302, 47.670742], [-122.254343, 47.670723], [-122.254427, 47.670661], [-122.254468, 47.670635], [-122.254521, 47.670592], [-122.254599, 47.670519], [-122.254646, 47.670473], [-122.254681, 47.670446], [-122.254716, 47.670428], [-122.254749, 47.670417], [-122.254808, 47.670389], [-122.254916, 47.670322], [-122.254945, 47.670306], [-122.25499, 47.67028], [-122.255033, 47.670256], [-122.255091, 47.670234], [-122.255117, 47.670195], [-122.255165, 47.670161], [-122.255233, 47.670113], [-122.255262, 47.670086], [-122.255284, 47.670051], [-122.255322, 47.670013], [-122.255342, 47.669989], [-122.255396, 47.669935], [-122.25543, 47.669909], [-122.255468, 47.669888], [-122.255497, 47.669869], [-122.255534, 47.669839], [-122.255586, 47.669802], [-122.255614, 47.669778], [-122.255644, 47.669758], [-122.255749, 47.669677], [-122.255778, 47.669652], [-122.255827, 47.66961], [-122.255868, 47.669572], [-122.255955, 47.669495], [-122.256044, 47.669434], [-122.256082, 47.669402], [-122.256119, 47.66937], [-122.256177, 47.669328], [-122.256293, 47.669234], [-122.256339, 47.6692], [-122.256376, 47.669171], [-122.256416, 47.669144], [-122.256469, 47.669102], [-122.256531, 47.669065], [-122.256566, 47.669053], [-122.256608, 47.669035], [-122.256639, 47.669016], [-122.25665, 47.66899], [-122.256612, 47.668971], [-122.25654, 47.668922], [-122.256463, 47.668873], [-122.256571, 47.668838], [-122.256613, 47.668831], [-122.256668, 47.668822], [-122.25672, 47.668809], [-122.256771, 47.668786], [-122.25681, 47.668776], [-122.256868, 47.668757], [-122.256904, 47.668745], [-122.256952, 47.668718], [-122.257004, 47.668683], [-122.257045, 47.668652], [-122.257086, 47.668639], [-122.257135, 47.668625], [-122.257201, 47.668592], [-122.257245, 47.668565], [-122.257291, 47.668531], [-122.257314, 47.66851], [-122.257353, 47.668477], [-122.257397, 47.668449], [-122.257422, 47.668427], [-122.257451, 47.66841], [-122.257492, 47.668384], [-122.25755, 47.66834], [-122.257577, 47.66832], [-122.257606, 47.668298], [-122.257648, 47.668274], [-122.257708, 47.668231], [-122.257742, 47.668211], [-122.257798, 47.668173], [-122.257838, 47.66815], [-122.257902, 47.668104], [-122.257925, 47.668084], [-122.257951, 47.668062], [-122.258009, 47.668034], [-122.258053, 47.668009], [-122.258077, 47.667987], [-122.258153, 47.667937], [-122.25823, 47.667862], [-122.258327, 47.667772], [-122.258374, 47.667741], [-122.258422, 47.667711], [-122.258462, 47.667686], [-122.25851, 47.667651], [-122.258543, 47.667624], [-122.258581, 47.667602], [-122.25864, 47.667559], [-122.258675, 47.667538], [-122.258717, 47.667508], [-122.258783, 47.667455], [-122.258811, 47.667437], [-122.258855, 47.667401], [-122.258914, 47.667373], [-122.258963, 47.667361], [-122.258996, 47.667329], [-122.258989, 47.667301], [-122.259017, 47.667278], [-122.259064, 47.667248], [-122.259134, 47.667199], [-122.259159, 47.667182], [-122.259196, 47.667156], [-122.259247, 47.667123], [-122.259295, 47.667092], [-122.259376, 47.667033], [-122.259408, 47.667007], [-122.259442, 47.666997], [-122.259486, 47.666988], [-122.259522, 47.666969], [-122.259616, 47.666931], [-122.259688, 47.666909], [-122.259759, 47.666872], [-122.259808, 47.666859], [-122.259892, 47.666831], [-122.259928, 47.666819], [-122.25998, 47.666792], [-122.260043, 47.666754], [-122.260082, 47.666729], [-122.260152, 47.666693], [-122.260182, 47.666679], [-122.260225, 47.66665], [-122.26027, 47.666624], [-122.260303, 47.666606], [-122.260343, 47.666596], [-122.260392, 47.666583], [-122.260435, 47.666566], [-122.260463, 47.666543], [-122.260493, 47.666525], [-122.260527, 47.666511], [-122.260575, 47.666488], [-122.260647, 47.66646], [-122.260685, 47.666445], [-122.260731, 47.666427], [-122.260765, 47.666414], [-122.260805, 47.666391], [-122.260858, 47.666367], [-122.260922, 47.666336], [-122.260991, 47.666319], [-122.261037, 47.666297], [-122.26108, 47.666287], [-122.261118, 47.666282], [-122.261159, 47.666273], [-122.261232, 47.666255], [-122.26127, 47.666244], [-122.261302, 47.666233], [-122.261337, 47.666219], [-122.261375, 47.666208], [-122.261409, 47.666198], [-122.261444, 47.666187], [-122.261482, 47.666174], [-122.261515, 47.666161], [-122.261564, 47.666138], [-122.26159, 47.666121], [-122.261614, 47.666103], [-122.261641, 47.666086], [-122.261665, 47.666066], [-122.26169, 47.666045], [-122.261705, 47.666021], [-122.261694, 47.665998], [-122.261709, 47.665975], [-122.261738, 47.665956], [-122.261774, 47.665947], [-122.26181, 47.665938], [-122.261846, 47.665939], [-122.261884, 47.665931], [-122.26192, 47.665925], [-122.261958, 47.665924], [-122.262002, 47.665922], [-122.262051, 47.665918], [-122.26211, 47.665909], [-122.262199, 47.665899], [-122.262239, 47.6659], [-122.262293, 47.665902], [-122.262336, 47.665897], [-122.2625, 47.665865], [-122.262609, 47.665839], [-122.262659, 47.665824], [-122.262716, 47.665818], [-122.262751, 47.66581], [-122.262793, 47.665797], [-122.26287, 47.66577], [-122.262941, 47.665754], [-122.263005, 47.665736], [-122.263095, 47.665716], [-122.263137, 47.665696], [-122.263217, 47.665662], [-122.263296, 47.66564], [-122.2634, 47.665633], [-122.263436, 47.665621], [-122.263489, 47.665608], [-122.263542, 47.665595], [-122.263652, 47.665562], [-122.263707, 47.665543], [-122.263761, 47.665531], [-122.263819, 47.665522], [-122.263878, 47.665509], [-122.263985, 47.66549], [-122.264094, 47.665468], [-122.264186, 47.665453], [-122.26426, 47.665435], [-122.264324, 47.665418], [-122.264407, 47.665403], [-122.264472, 47.665383], [-122.264538, 47.665375], [-122.264579, 47.665365], [-122.264639, 47.665346], [-122.264699, 47.665332], [-122.264746, 47.665321], [-122.264803, 47.665306], [-122.264857, 47.665296], [-122.264925, 47.665282], [-122.265012, 47.66527], [-122.265069, 47.665261], [-122.265115, 47.665253], [-122.265155, 47.665245], [-122.265196, 47.665232], [-122.265242, 47.665219], [-122.265319, 47.665205], [-122.265388, 47.665187], [-122.265456, 47.66517], [-122.2655, 47.665158], [-122.265605, 47.665137], [-122.265656, 47.665125], [-122.265713, 47.665116], [-122.265755, 47.665108], [-122.265858, 47.665083], [-122.265914, 47.66507], [-122.266019, 47.665039], [-122.266101, 47.665015], [-122.266158, 47.664994], [-122.266224, 47.664973], [-122.266291, 47.664944], [-122.266362, 47.66492], [-122.266405, 47.664905], [-122.266582, 47.664822], [-122.26666, 47.664798], [-122.266713, 47.664767], [-122.266766, 47.664733], [-122.266801, 47.66471], [-122.266861, 47.66468], [-122.266979, 47.664625], [-122.267024, 47.664607], [-122.267184, 47.664537], [-122.267253, 47.6645], [-122.267294, 47.664469], [-122.267333, 47.66443], [-122.26738, 47.664362], [-122.267403, 47.664315], [-122.267422, 47.664256], [-122.267429, 47.664166], [-122.267429, 47.6641], [-122.267425, 47.664066], [-122.267417, 47.664035], [-122.267411, 47.664006], [-122.267401, 47.663943], [-122.267393, 47.663814], [-122.267391, 47.663787], [-122.267371, 47.663685], [-122.267363, 47.663661], [-122.267338, 47.66356], [-122.267319, 47.663493], [-122.267303, 47.66345], [-122.267286, 47.663389], [-122.267272, 47.663312], [-122.267259, 47.663221], [-122.267259, 47.663194], [-122.267254, 47.663054], [-122.267253, 47.66303], [-122.267256, 47.66297], [-122.267268, 47.662893], [-122.267278, 47.662802], [-122.267284, 47.662721], [-122.267284, 47.662634], [-122.267292, 47.662594], [-122.267309, 47.662535], [-122.267333, 47.662516], [-122.267326, 47.662465], [-122.267337, 47.662416], [-122.267351, 47.66238], [-122.267382, 47.662321], [-122.267415, 47.662253], [-122.26745, 47.662182], [-122.267473, 47.662135], [-122.267491, 47.662085], [-122.267504, 47.662015], [-122.267506, 47.661949], [-122.267522, 47.661912], [-122.267551, 47.661853], [-122.267573, 47.661816], [-122.26758, 47.661789], [-122.267582, 47.661758], [-122.267554, 47.661723], [-122.267542, 47.661699], [-122.267528, 47.661589], [-122.267527, 47.661522], [-122.267544, 47.661459], [-122.267573, 47.661414], [-122.267598, 47.661358], [-122.267631, 47.661298], [-122.267642, 47.661269], [-122.267656, 47.661234], [-122.267663, 47.661207], [-122.267672, 47.661148], [-122.267675, 47.661095], [-122.26767, 47.661062], [-122.267655, 47.661037], [-122.267609, 47.661004], [-122.267612, 47.660957], [-122.267641, 47.660915], [-122.267641, 47.66089], [-122.267616, 47.660866], [-122.267605, 47.660838], [-122.267624, 47.660808], [-122.267625, 47.660754], [-122.267625, 47.660719], [-122.267637, 47.660691], [-122.267673, 47.660659], [-122.267693, 47.660612], [-122.267714, 47.660554], [-122.26773, 47.660497], [-122.267738, 47.660459], [-122.267749, 47.660417], [-122.267735, 47.660389], [-122.267751, 47.660351], [-122.267774, 47.660293], [-122.267787, 47.660257], [-122.267816, 47.660203], [-122.267834, 47.660181], [-122.267856, 47.660156], [-122.267879, 47.660118], [-122.267893, 47.660081], [-122.267906, 47.660021], [-122.267916, 47.659967], [-122.26793, 47.659904], [-122.267935, 47.659862], [-122.267937, 47.659808], [-122.267943, 47.659748], [-122.267958, 47.659692], [-122.26797, 47.659653], [-122.267981, 47.659625], [-122.268003, 47.659572], [-122.268015, 47.659549], [-122.268032, 47.659496], [-122.268049, 47.659458], [-122.268055, 47.659425], [-122.268046, 47.6594], [-122.268047, 47.659371], [-122.268064, 47.659326], [-122.268101, 47.659233], [-122.268113, 47.659197], [-122.268121, 47.659171], [-122.268141, 47.659129], [-122.268194, 47.659025], [-122.268217, 47.65899], [-122.268251, 47.65892], [-122.268291, 47.658834], [-122.268318, 47.658761], [-122.268336, 47.658717], [-122.26837, 47.658638], [-122.268383, 47.658612], [-122.268391, 47.658574], [-122.268406, 47.658539], [-122.268407, 47.658502], [-122.268432, 47.658472], [-122.268458, 47.658446], [-122.268476, 47.658413], [-122.268484, 47.658384], [-122.268476, 47.658328], [-122.268484, 47.658303], [-122.2685, 47.658281], [-122.268555, 47.658222], [-122.268574, 47.658199], [-122.268587, 47.658158], [-122.268583, 47.658128], [-122.26856, 47.658078], [-122.268594, 47.658053], [-122.268701, 47.658014], [-122.268755, 47.657984], [-122.268882, 47.657903], [-122.26892, 47.657866], [-122.268929, 47.657834], [-122.268948, 47.657796], [-122.26896, 47.657772], [-122.268942, 47.657743], [-122.26895, 47.657714], [-122.268999, 47.657684], [-122.269057, 47.657643], [-122.269079, 47.657623], [-122.269097, 47.657591], [-122.269092, 47.657561], [-122.269113, 47.657526], [-122.269143, 47.657487], [-122.269207, 47.657419], [-122.269271, 47.657354], [-122.269328, 47.657295], [-122.269397, 47.657227], [-122.269462, 47.657148], [-122.269474, 47.657111], [-122.26949, 47.657088], [-122.269513, 47.657065], [-122.269556, 47.657039], [-122.269597, 47.657019], [-122.269625, 47.656999], [-122.269662, 47.656954], [-122.2697, 47.656939], [-122.269782, 47.656925], [-122.269873, 47.656913], [-122.269933, 47.656899], [-122.270033, 47.656868], [-122.270108, 47.656832], [-122.270144, 47.656804], [-122.270192, 47.656778], [-122.270216, 47.656758], [-122.270265, 47.656728], [-122.27031, 47.656703], [-122.270346, 47.656684], [-122.270419, 47.656657], [-122.270474, 47.656624], [-122.270526, 47.656597], [-122.27058, 47.656568], [-122.270622, 47.656536], [-122.270678, 47.656512], [-122.270714, 47.656487], [-122.270767, 47.656459], [-122.270826, 47.656441], [-122.27086, 47.656414], [-122.270893, 47.656399], [-122.270934, 47.656389], [-122.270964, 47.656375], [-122.27099, 47.656354], [-122.271054, 47.656323], [-122.27114, 47.656263], [-122.271189, 47.656246], [-122.271196, 47.65622], [-122.271228, 47.656199], [-122.271282, 47.6562], [-122.271331, 47.656188], [-122.271377, 47.656168], [-122.271449, 47.656132], [-122.271523, 47.656093], [-122.271616, 47.656045], [-122.27169, 47.656007], [-122.271778, 47.65596], [-122.271847, 47.655919], [-122.271897, 47.655888], [-122.271932, 47.655863], [-122.271992, 47.655804], [-122.272034, 47.655748], [-122.27209, 47.6557], [-122.272143, 47.655669], [-122.272212, 47.655638], [-122.272252, 47.655616], [-122.27234, 47.655561], [-122.272386, 47.655529], [-122.272422, 47.655501], [-122.272469, 47.655467], [-122.272498, 47.655452], [-122.272528, 47.655434], [-122.272612, 47.655386], [-122.272634, 47.655367], [-122.272682, 47.655314], [-122.272709, 47.655275], [-122.272748, 47.655207], [-122.272753, 47.655157], [-122.272776, 47.655123], [-122.2728, 47.6551], [-122.272818, 47.655075], [-122.272834, 47.655053], [-122.272857, 47.65503], [-122.272879, 47.655009], [-122.272923, 47.65496], [-122.27296, 47.654926], [-122.273023, 47.654875], [-122.273073, 47.654831], [-122.273108, 47.654802], [-122.27317, 47.654744], [-122.273224, 47.654692], [-122.27327, 47.654651], [-122.273344, 47.654585], [-122.273389, 47.654545], [-122.273462, 47.654511], [-122.273472, 47.655112], [-122.273488, 47.656107], [-122.27349, 47.656599], [-122.273487, 47.656833], [-122.273489, 47.656858], [-122.273492, 47.656882], [-122.273497, 47.656905], [-122.273504, 47.656929], [-122.273513, 47.656952], [-122.273523, 47.656976], [-122.273535, 47.656998], [-122.273549, 47.657021], [-122.273564, 47.657042], [-122.27358, 47.657064], [-122.273599, 47.657085], [-122.273886, 47.657511], [-122.273989, 47.65766], [-122.273993, 47.658389], [-122.273839, 47.658389], [-122.273803, 47.658388], [-122.273767, 47.658386], [-122.273732, 47.658384], [-122.273695, 47.658381], [-122.273659, 47.658378], [-122.273624, 47.658374], [-122.273588, 47.658369], [-122.273553, 47.658363], [-122.27352, 47.658355], [-122.273487, 47.658346], [-122.273454, 47.658336], [-122.273422, 47.658324], [-122.273391, 47.658312], [-122.273362, 47.658298], [-122.273333, 47.658282], [-122.273306, 47.658266], [-122.273281, 47.658249], [-122.273257, 47.658232], [-122.273204, 47.658195], [-122.273173, 47.658179], [-122.273143, 47.658163], [-122.273111, 47.658148], [-122.273079, 47.658134], [-122.273046, 47.65812], [-122.273013, 47.658107], [-122.272979, 47.658094], [-122.272945, 47.658082], [-122.27291, 47.658071], [-122.272875, 47.65806], [-122.27284, 47.65805], [-122.272804, 47.65804], [-122.272768, 47.658031], [-122.272731, 47.658023], [-122.272694, 47.658015], [-122.272657, 47.658008], [-122.27262, 47.658002], [-122.272582, 47.657996], [-122.272543, 47.657997], [-122.272505, 47.657999], [-122.272466, 47.658002], [-122.272429, 47.658007], [-122.272439, 47.657679], [-122.272441, 47.657653], [-122.27244, 47.657627], [-122.272436, 47.657601], [-122.272428, 47.657576], [-122.272417, 47.657551], [-122.272403, 47.657527], [-122.272385, 47.657504], [-122.272365, 47.657482], [-122.272341, 47.657461], [-122.272318, 47.657439], [-122.2723, 47.657416], [-122.272278, 47.657395], [-122.272253, 47.657375], [-122.272225, 47.657357], [-122.272195, 47.657341], [-122.272162, 47.657327], [-122.272127, 47.657315], [-122.272092, 47.657305], [-122.272056, 47.657296], [-122.27202, 47.657287], [-122.271983, 47.65728], [-122.271945, 47.657273], [-122.271907, 47.657268], [-122.27187, 47.657263], [-122.271831, 47.65726], [-122.271793, 47.657257], [-122.271754, 47.657256], [-122.271716, 47.657255], [-122.271677, 47.657256], [-122.271639, 47.657257], [-122.271601, 47.65726], [-122.271562, 47.657264], [-122.271525, 47.65727], [-122.271488, 47.657277], [-122.271451, 47.657285], [-122.271415, 47.657295], [-122.27138, 47.657306], [-122.271346, 47.657318], [-122.271313, 47.657331], [-122.271281, 47.657345], [-122.27125, 47.657361], [-122.27122, 47.657378], [-122.271192, 47.657395], [-122.271165, 47.657414], [-122.27114, 47.657434], [-122.271116, 47.657454], [-122.271094, 47.657476], [-122.271074, 47.657498], [-122.271056, 47.657521], [-122.271038, 47.657544], [-122.271051, 47.657994], [-122.270221, 47.657985], [-122.26949, 47.658855], [-122.26906, 47.65937], [-122.268883, 47.661003], [-122.26892, 47.661281], [-122.268951, 47.661296], [-122.268982, 47.661312], [-122.269012, 47.661329], [-122.269041, 47.661346], [-122.269069, 47.661363], [-122.269096, 47.661382], [-122.269123, 47.661401], [-122.269148, 47.66142], [-122.269173, 47.66144], [-122.269197, 47.661461], [-122.26922, 47.661481], [-122.269242, 47.661503], [-122.269263, 47.661525], [-122.269283, 47.661547], [-122.269303, 47.66157], [-122.26932, 47.661593], [-122.269338, 47.661616], [-122.269354, 47.66164], [-122.269369, 47.661664], [-122.269382, 47.661688], [-122.269395, 47.661713], [-122.269407, 47.661737], [-122.269611, 47.662155], [-122.269835, 47.662783], [-122.269949, 47.662977], [-122.26998, 47.66299], [-122.270013, 47.662999], [-122.270048, 47.663003], [-122.270084, 47.663001], [-122.270119, 47.662995], [-122.270152, 47.662984], [-122.27018, 47.662969], [-122.270227, 47.662867], [-122.270273, 47.662776], [-122.270314, 47.662711], [-122.270446, 47.662532], [-122.270655, 47.662286], [-122.270888, 47.661992], [-122.271276, 47.661507], [-122.271294, 47.661483], [-122.271314, 47.661461], [-122.271336, 47.66144], [-122.271361, 47.661419], [-122.271387, 47.6614], [-122.271415, 47.661382], [-122.271444, 47.661366], [-122.271475, 47.66135], [-122.271505, 47.661337], [-122.271536, 47.661324], [-122.27157, 47.661312], [-122.271605, 47.661301], [-122.271641, 47.661292], [-122.271678, 47.661284], [-122.271715, 47.661277], [-122.271756, 47.661272], [-122.2719, 47.661276], [-122.272282, 47.661271], [-122.273571, 47.661285], [-122.274667, 47.661281], [-122.274702, 47.663081], [-122.274693, 47.664882], [-122.272767, 47.664887], [-122.270871, 47.664881], [-122.269345, 47.66488], [-122.271068, 47.666109], [-122.271959, 47.666718], [-122.273379, 47.667731], [-122.274077, 47.668313], [-122.274475, 47.668258], [-122.27452, 47.668256], [-122.274559, 47.668255], [-122.274597, 47.668253], [-122.274636, 47.668252], [-122.274674, 47.668252], [-122.274713, 47.668251], [-122.274751, 47.66825], [-122.27479, 47.66825], [-122.274829, 47.668249], [-122.274867, 47.668249], [-122.274906, 47.668249], [-122.274944, 47.668249], [-122.274983, 47.668249], [-122.275021, 47.66825], [-122.27506, 47.66825], [-122.275099, 47.668251], [-122.275137, 47.668252], [-122.275176, 47.668252], [-122.275214, 47.668253], [-122.275252, 47.668255], [-122.275291, 47.668256], [-122.27533, 47.668257], [-122.275368, 47.668259], [-122.275407, 47.66826], [-122.275445, 47.668262], [-122.275484, 47.668264], [-122.275522, 47.668266], [-122.27556, 47.668268], [-122.275599, 47.668271], [-122.275638, 47.668273], [-122.275676, 47.668276], [-122.275714, 47.668278], [-122.275752, 47.668281], [-122.275791, 47.668284], [-122.275829, 47.668287], [-122.275867, 47.668291], [-122.275905, 47.668294], [-122.275944, 47.668297], [-122.275982, 47.668301], [-122.27602, 47.668305], [-122.276058, 47.668309], [-122.276096, 47.668313], [-122.276134, 47.668317], [-122.276173, 47.668321], [-122.27621, 47.668326], [-122.276255, 47.66833], [-122.276293, 47.668334], [-122.276331, 47.668338], [-122.276369, 47.668342], [-122.276407, 47.668345], [-122.276445, 47.668348], [-122.276484, 47.668351], [-122.276522, 47.668354], [-122.276561, 47.668357], [-122.276599, 47.668359], [-122.276638, 47.668361], [-122.276676, 47.668363], [-122.276714, 47.668365], [-122.276753, 47.668367], [-122.276791, 47.668368], [-122.27683, 47.66837], [-122.276868, 47.668371], [-122.276907, 47.668372], [-122.276945, 47.668373], [-122.276984, 47.668373], [-122.277022, 47.668374], [-122.277061, 47.668374], [-122.2771, 47.668374], [-122.277138, 47.668374], [-122.277177, 47.668374], [-122.277215, 47.668373], [-122.277254, 47.668373], [-122.277292, 47.668372], [-122.277331, 47.668371], [-122.277369, 47.668369], [-122.277408, 47.668368], [-122.277446, 47.668366], [-122.277485, 47.668365], [-122.277524, 47.668363], [-122.277562, 47.66836], [-122.277601, 47.668358], [-122.277638, 47.668356], [-122.277677, 47.668353], [-122.277715, 47.66835], [-122.277753, 47.668347], [-122.277794, 47.668347], [-122.277832, 47.668345], [-122.277871, 47.668342], [-122.277909, 47.66834], [-122.277947, 47.668337], [-122.277986, 47.668335], [-122.278024, 47.668333], [-122.278063, 47.668331], [-122.278101, 47.668328], [-122.278139, 47.668325], [-122.278177, 47.668322], [-122.278216, 47.668318], [-122.278254, 47.668314], [-122.278292, 47.66831], [-122.27833, 47.668305], [-122.278368, 47.6683], [-122.278405, 47.668294], [-122.278442, 47.668288], [-122.27848, 47.668281], [-122.278517, 47.668275], [-122.278554, 47.668267], [-122.278591, 47.66826], [-122.278628, 47.668252], [-122.278664, 47.668244], [-122.278701, 47.668235], [-122.278737, 47.668226], [-122.278773, 47.668216], [-122.278808, 47.668206], [-122.278844, 47.668196], [-122.278879, 47.668186], [-122.278914, 47.668175], [-122.278949, 47.668163], [-122.278984, 47.668152], [-122.279018, 47.66814], [-122.279051, 47.668127], [-122.279086, 47.668115], [-122.279119, 47.668102], [-122.279152, 47.668088], [-122.279443, 47.66796], [-122.279444, 47.668135], [-122.279474, 47.671201], [-122.279483, 47.671994], [-122.279502, 47.672963], [-122.279513, 47.673943], [-122.279527, 47.67472], [-122.279539, 47.675784]]]]
    },
    "properties": {
      "neighbourhood": "Windermere",
      "neighbourhood_group": "Other neighborhoods"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.290151, 47.661175], [-122.289198, 47.661145], [-122.288809, 47.661142], [-122.288737, 47.661144], [-122.288657, 47.661147], [-122.288578, 47.66115], [-122.288499, 47.661155], [-122.288421, 47.66116], [-122.288342, 47.661166], [-122.288263, 47.661174], [-122.288185, 47.661182], [-122.288107, 47.661191], [-122.288029, 47.661201], [-122.287951, 47.661212], [-122.287874, 47.661223], [-122.287797, 47.661236], [-122.28772, 47.66125], [-122.287644, 47.661264], [-122.287568, 47.66128], [-122.287493, 47.661296], [-122.287418, 47.661313], [-122.287334, 47.661334], [-122.2873, 47.661342], [-122.287266, 47.661351], [-122.287232, 47.66136], [-122.287199, 47.66137], [-122.287165, 47.66138], [-122.287132, 47.66139], [-122.287099, 47.6614], [-122.287066, 47.661411], [-122.287034, 47.661422], [-122.287002, 47.661434], [-122.286969, 47.661446], [-122.286938, 47.661458], [-122.286907, 47.661471], [-122.286876, 47.661483], [-122.286805, 47.661511], [-122.286738, 47.661537], [-122.286672, 47.661565], [-122.286607, 47.661593], [-122.286542, 47.661622], [-122.286478, 47.661652], [-122.286415, 47.661682], [-122.286353, 47.661713], [-122.286291, 47.661745], [-122.28623, 47.661778], [-122.28617, 47.661812], [-122.286111, 47.661846], [-122.286054, 47.66188], [-122.285996, 47.661916], [-122.28594, 47.661952], [-122.285885, 47.661989], [-122.285831, 47.662026], [-122.285763, 47.662075], [-122.284962, 47.662845], [-122.284141, 47.663639], [-122.283364, 47.664381], [-122.282595, 47.665123], [-122.281825, 47.665863], [-122.281055, 47.666602], [-122.280286, 47.667346], [-122.280029, 47.667586], [-122.280006, 47.667607], [-122.279982, 47.667628], [-122.279934, 47.667667], [-122.27991, 47.667686], [-122.279886, 47.667704], [-122.279861, 47.667722], [-122.279836, 47.66774], [-122.27981, 47.667758], [-122.279785, 47.667775], [-122.279759, 47.667792], [-122.279732, 47.667809], [-122.279705, 47.667826], [-122.279677, 47.667842], [-122.27965, 47.667858], [-122.279622, 47.667874], [-122.279593, 47.667889], [-122.279564, 47.667904], [-122.279535, 47.667919], [-122.279506, 47.667933], [-122.279476, 47.667948], [-122.279443, 47.66796], [-122.279152, 47.668088], [-122.279119, 47.668102], [-122.279086, 47.668115], [-122.279051, 47.668127], [-122.279018, 47.66814], [-122.278984, 47.668152], [-122.278949, 47.668163], [-122.278914, 47.668175], [-122.278879, 47.668186], [-122.278844, 47.668196], [-122.278808, 47.668206], [-122.278773, 47.668216], [-122.278737, 47.668226], [-122.278701, 47.668235], [-122.278664, 47.668244], [-122.278628, 47.668252], [-122.278591, 47.66826], [-122.278554, 47.668267], [-122.278517, 47.668275], [-122.27848, 47.668281], [-122.278442, 47.668288], [-122.278405, 47.668294], [-122.278368, 47.6683], [-122.27833, 47.668305], [-122.278292, 47.66831], [-122.278254, 47.668314], [-122.278216, 47.668318], [-122.278177, 47.668322], [-122.278139, 47.668325], [-122.278101, 47.668328], [-122.278063, 47.668331], [-122.278024, 47.668333], [-122.277986, 47.668335], [-122.277947, 47.668337], [-122.277909, 47.66834], [-122.277871, 47.668342], [-122.277832, 47.668345], [-122.277794, 47.668347], [-122.277753, 47.668347], [-122.277715, 47.66835], [-122.277677, 47.668353], [-122.277638, 47.668356], [-122.277601, 47.668358], [-122.277562, 47.66836], [-122.277524, 47.668363], [-122.277485, 47.668365], [-122.277446, 47.668366], [-122.277408, 47.668368], [-122.277369, 47.668369], [-122.277331, 47.668371], [-122.277292, 47.668372], [-122.277254, 47.668373], [-122.277215, 47.668373], [-122.277177, 47.668374], [-122.277138, 47.668374], [-122.2771, 47.668374], [-122.277061, 47.668374], [-122.277022, 47.668374], [-122.276984, 47.668373], [-122.276945, 47.668373], [-122.276907, 47.668372], [-122.276868, 47.668371], [-122.27683, 47.66837], [-122.276791, 47.668368], [-122.276753, 47.668367], [-122.276714, 47.668365], [-122.276676, 47.668363], [-122.276638, 47.668361], [-122.276599, 47.668359], [-122.276561, 47.668357], [-122.276522, 47.668354], [-122.276484, 47.668351], [-122.276445, 47.668348], [-122.276407, 47.668345], [-122.276369, 47.668342], [-122.276331, 47.668338], [-122.276293, 47.668334], [-122.276255, 47.66833], [-122.27621, 47.668326], [-122.276173, 47.668321], [-122.276134, 47.668317], [-122.276096, 47.668313], [-122.276058, 47.668309], [-122.27602, 47.668305], [-122.275982, 47.668301], [-122.275944, 47.668297], [-122.275905, 47.668294], [-122.275867, 47.668291], [-122.275829, 47.668287], [-122.275791, 47.668284], [-122.275752, 47.668281], [-122.275714, 47.668278], [-122.275676, 47.668276], [-122.275638, 47.668273], [-122.275599, 47.668271], [-122.27556, 47.668268], [-122.275522, 47.668266], [-122.275484, 47.668264], [-122.275445, 47.668262], [-122.275407, 47.66826], [-122.275368, 47.668259], [-122.27533, 47.668257], [-122.275291, 47.668256], [-122.275252, 47.668255], [-122.275214, 47.668253], [-122.275176, 47.668252], [-122.275137, 47.668252], [-122.275099, 47.668251], [-122.27506, 47.66825], [-122.275021, 47.66825], [-122.274983, 47.668249], [-122.274944, 47.668249], [-122.274906, 47.668249], [-122.274867, 47.668249], [-122.274829, 47.668249], [-122.27479, 47.66825], [-122.274751, 47.66825], [-122.274713, 47.668251], [-122.274674, 47.668252], [-122.274636, 47.668252], [-122.274597, 47.668253], [-122.274559, 47.668255], [-122.27452, 47.668256], [-122.274475, 47.668258], [-122.274077, 47.668313], [-122.273379, 47.667731], [-122.271959, 47.666718], [-122.271068, 47.666109], [-122.269345, 47.66488], [-122.270871, 47.664881], [-122.272767, 47.664887], [-122.274693, 47.664882], [-122.274702, 47.663081], [-122.274667, 47.661281], [-122.273571, 47.661285], [-122.272282, 47.661271], [-122.2719, 47.661276], [-122.271756, 47.661272], [-122.271715, 47.661277], [-122.271678, 47.661284], [-122.271641, 47.661292], [-122.271605, 47.661301], [-122.27157, 47.661312], [-122.271536, 47.661324], [-122.271505, 47.661337], [-122.271475, 47.66135], [-122.271444, 47.661366], [-122.271415, 47.661382], [-122.271387, 47.6614], [-122.271361, 47.661419], [-122.271336, 47.66144], [-122.271314, 47.661461], [-122.271294, 47.661483], [-122.271276, 47.661507], [-122.270888, 47.661992], [-122.270655, 47.662286], [-122.270446, 47.662532], [-122.270314, 47.662711], [-122.270273, 47.662776], [-122.270227, 47.662867], [-122.27018, 47.662969], [-122.270152, 47.662984], [-122.270119, 47.662995], [-122.270084, 47.663001], [-122.270048, 47.663003], [-122.270013, 47.662999], [-122.26998, 47.66299], [-122.269949, 47.662977], [-122.269835, 47.662783], [-122.269611, 47.662155], [-122.269407, 47.661737], [-122.269395, 47.661713], [-122.269382, 47.661688], [-122.269369, 47.661664], [-122.269354, 47.66164], [-122.269338, 47.661616], [-122.26932, 47.661593], [-122.269303, 47.66157], [-122.269283, 47.661547], [-122.269263, 47.661525], [-122.269242, 47.661503], [-122.26922, 47.661481], [-122.269197, 47.661461], [-122.269173, 47.66144], [-122.269148, 47.66142], [-122.269123, 47.661401], [-122.269096, 47.661382], [-122.269069, 47.661363], [-122.269041, 47.661346], [-122.269012, 47.661329], [-122.268982, 47.661312], [-122.268951, 47.661296], [-122.26892, 47.661281], [-122.268883, 47.661003], [-122.26906, 47.65937], [-122.26949, 47.658855], [-122.270221, 47.657985], [-122.271051, 47.657994], [-122.271038, 47.657544], [-122.271056, 47.657521], [-122.271074, 47.657498], [-122.271094, 47.657476], [-122.271116, 47.657454], [-122.27114, 47.657434], [-122.271165, 47.657414], [-122.271192, 47.657395], [-122.27122, 47.657378], [-122.27125, 47.657361], [-122.271281, 47.657345], [-122.271313, 47.657331], [-122.271346, 47.657318], [-122.27138, 47.657306], [-122.271415, 47.657295], [-122.271451, 47.657285], [-122.271488, 47.657277], [-122.271525, 47.65727], [-122.271562, 47.657264], [-122.271601, 47.65726], [-122.271639, 47.657257], [-122.271677, 47.657256], [-122.271716, 47.657255], [-122.271754, 47.657256], [-122.271793, 47.657257], [-122.271831, 47.65726], [-122.27187, 47.657263], [-122.271907, 47.657268], [-122.271945, 47.657273], [-122.271983, 47.65728], [-122.27202, 47.657287], [-122.272056, 47.657296], [-122.272092, 47.657305], [-122.272127, 47.657315], [-122.272162, 47.657327], [-122.272195, 47.657341], [-122.272225, 47.657357], [-122.272253, 47.657375], [-122.272278, 47.657395], [-122.2723, 47.657416], [-122.272318, 47.657439], [-122.272341, 47.657461], [-122.272365, 47.657482], [-122.272385, 47.657504], [-122.272403, 47.657527], [-122.272417, 47.657551], [-122.272428, 47.657576], [-122.272436, 47.657601], [-122.27244, 47.657627], [-122.272441, 47.657653], [-122.272439, 47.657679], [-122.272429, 47.658007], [-122.272466, 47.658002], [-122.272505, 47.657999], [-122.272543, 47.657997], [-122.272582, 47.657996], [-122.27262, 47.658002], [-122.272657, 47.658008], [-122.272694, 47.658015], [-122.272731, 47.658023], [-122.272768, 47.658031], [-122.272804, 47.65804], [-122.27284, 47.65805], [-122.272875, 47.65806], [-122.27291, 47.658071], [-122.272945, 47.658082], [-122.272979, 47.658094], [-122.273013, 47.658107], [-122.273046, 47.65812], [-122.273079, 47.658134], [-122.273111, 47.658148], [-122.273143, 47.658163], [-122.273173, 47.658179], [-122.273204, 47.658195], [-122.273257, 47.658232], [-122.273281, 47.658249], [-122.273306, 47.658266], [-122.273333, 47.658282], [-122.273362, 47.658298], [-122.273391, 47.658312], [-122.273422, 47.658324], [-122.273454, 47.658336], [-122.273487, 47.658346], [-122.27352, 47.658355], [-122.273553, 47.658363], [-122.273588, 47.658369], [-122.273624, 47.658374], [-122.273659, 47.658378], [-122.273695, 47.658381], [-122.273732, 47.658384], [-122.273767, 47.658386], [-122.273803, 47.658388], [-122.273839, 47.658389], [-122.273993, 47.658389], [-122.273989, 47.65766], [-122.273886, 47.657511], [-122.273599, 47.657085], [-122.27358, 47.657064], [-122.273564, 47.657042], [-122.273549, 47.657021], [-122.273535, 47.656998], [-122.273523, 47.656976], [-122.273513, 47.656952], [-122.273504, 47.656929], [-122.273497, 47.656905], [-122.273492, 47.656882], [-122.273489, 47.656858], [-122.273487, 47.656833], [-122.27349, 47.656599], [-122.273488, 47.656107], [-122.273472, 47.655112], [-122.273462, 47.654511], [-122.273462, 47.654484], [-122.273555, 47.654406], [-122.273619, 47.654348], [-122.273643, 47.654321], [-122.273655, 47.654293], [-122.273659, 47.654257], [-122.273652, 47.654196], [-122.273652, 47.654171], [-122.27367, 47.654134], [-122.273702, 47.654113], [-122.273738, 47.654095], [-122.273785, 47.654093], [-122.273852, 47.654094], [-122.273886, 47.654083], [-122.273927, 47.654071], [-122.273966, 47.654067], [-122.274011, 47.654055], [-122.274048, 47.654036], [-122.274077, 47.654013], [-122.274126, 47.653971], [-122.274167, 47.653938], [-122.274218, 47.653904], [-122.274247, 47.65387], [-122.274232, 47.653841], [-122.274247, 47.653803], [-122.274268, 47.65376], [-122.274293, 47.653717], [-122.274307, 47.653673], [-122.274345, 47.653654], [-122.274384, 47.653673], [-122.274461, 47.653693], [-122.274575, 47.653627], [-122.274693, 47.65355], [-122.274739, 47.653525], [-122.274791, 47.653515], [-122.274828, 47.6535], [-122.2749, 47.65347], [-122.274948, 47.653442], [-122.274998, 47.653422], [-122.275037, 47.653399], [-122.275092, 47.653372], [-122.275146, 47.653347], [-122.275179, 47.653337], [-122.275238, 47.653317], [-122.27528, 47.653294], [-122.275326, 47.653275], [-122.2754, 47.653241], [-122.275451, 47.653216], [-122.275511, 47.653179], [-122.275565, 47.653151], [-122.275638, 47.653116], [-122.275681, 47.653077], [-122.275719, 47.653048], [-122.275762, 47.653015], [-122.275833, 47.652959], [-122.275887, 47.652927], [-122.275942, 47.652883], [-122.276062, 47.652768], [-122.276092, 47.652737], [-122.276193, 47.652638], [-122.276222, 47.652612], [-122.276276, 47.652575], [-122.276297, 47.652552], [-122.276302, 47.652516], [-122.276322, 47.652489], [-122.276378, 47.652431], [-122.27643, 47.652369], [-122.276409, 47.652349], [-122.276372, 47.652329], [-122.2764, 47.652297], [-122.276416, 47.652271], [-122.276432, 47.652228], [-122.276454, 47.652191], [-122.276493, 47.652178], [-122.276529, 47.652182], [-122.276556, 47.65216], [-122.276566, 47.65212], [-122.276557, 47.652088], [-122.276548, 47.652036], [-122.276531, 47.651993], [-122.276505, 47.651969], [-122.276462, 47.651953], [-122.276431, 47.651939], [-122.276405, 47.651904], [-122.276412, 47.651864], [-122.276401, 47.651818], [-122.276379, 47.651746], [-122.276354, 47.651682], [-122.276349, 47.651622], [-122.276345, 47.651581], [-122.276342, 47.651542], [-122.276335, 47.651498], [-122.276333, 47.651467], [-122.276327, 47.65142], [-122.27631, 47.65135], [-122.276298, 47.651293], [-122.276258, 47.651244], [-122.276239, 47.65121], [-122.276224, 47.651176], [-122.276211, 47.651147], [-122.276189, 47.6511], [-122.27617, 47.651054], [-122.276148, 47.651008], [-122.276148, 47.650977], [-122.276173, 47.650928], [-122.276139, 47.65091], [-122.276106, 47.65089], [-122.276083, 47.650862], [-122.276064, 47.650832], [-122.27603, 47.650787], [-122.27601, 47.650766], [-122.275969, 47.650744], [-122.275933, 47.650718], [-122.27591, 47.650688], [-122.275855, 47.650663], [-122.275793, 47.65065], [-122.275752, 47.650618], [-122.275673, 47.650541], [-122.275637, 47.650533], [-122.275606, 47.650512], [-122.275561, 47.650452], [-122.27552, 47.650437], [-122.275477, 47.650419], [-122.275438, 47.650399], [-122.275399, 47.650374], [-122.275353, 47.650335], [-122.275308, 47.650307], [-122.275286, 47.650262], [-122.275284, 47.650196], [-122.275269, 47.650139], [-122.275265, 47.650098], [-122.275273, 47.650033], [-122.27527, 47.649995], [-122.27525, 47.649942], [-122.275233, 47.649919], [-122.275224, 47.649885], [-122.275217, 47.649828], [-122.27522, 47.649802], [-122.27522, 47.649762], [-122.275217, 47.6497], [-122.275199, 47.649671], [-122.275185, 47.64964], [-122.275187, 47.649605], [-122.275189, 47.649575], [-122.275191, 47.64955], [-122.275195, 47.649505], [-122.27519, 47.649464], [-122.275197, 47.649425], [-122.27523, 47.649392], [-122.275295, 47.649357], [-122.275342, 47.649316], [-122.275346, 47.649287], [-122.275341, 47.649247], [-122.275311, 47.649206], [-122.275276, 47.649181], [-122.275243, 47.649169], [-122.275249, 47.649144], [-122.275266, 47.649087], [-122.27531, 47.649017], [-122.275363, 47.648947], [-122.275412, 47.64887], [-122.275425, 47.648841], [-122.275451, 47.648788], [-122.275468, 47.648738], [-122.275519, 47.648695], [-122.275558, 47.648679], [-122.275598, 47.648669], [-122.275676, 47.64864], [-122.275702, 47.648612], [-122.275708, 47.648575], [-122.275735, 47.648525], [-122.275796, 47.648462], [-122.275845, 47.648434], [-122.275869, 47.648411], [-122.275899, 47.648386], [-122.275927, 47.648363], [-122.275966, 47.648337], [-122.276004, 47.64831], [-122.276042, 47.648283], [-122.27608, 47.648256], [-122.276148, 47.648214], [-122.2762, 47.648198], [-122.276299, 47.648167], [-122.276384, 47.648125], [-122.276441, 47.648108], [-122.276505, 47.648101], [-122.276561, 47.648089], [-122.276609, 47.648072], [-122.276655, 47.648066], [-122.27674, 47.648053], [-122.2768, 47.648048], [-122.27687, 47.64805], [-122.276999, 47.648043], [-122.277044, 47.64804], [-122.277105, 47.648026], [-122.277202, 47.648023], [-122.277255, 47.648019], [-122.277309, 47.648029], [-122.277353, 47.648046], [-122.277434, 47.648104], [-122.277455, 47.648138], [-122.277483, 47.648156], [-122.277596, 47.648211], [-122.277692, 47.648247], [-122.277735, 47.64826], [-122.277812, 47.648295], [-122.277905, 47.648345], [-122.277958, 47.648373], [-122.277999, 47.648386], [-122.278046, 47.64841], [-122.278076, 47.648448], [-122.278116, 47.648458], [-122.278147, 47.648474], [-122.278176, 47.648497], [-122.278299, 47.648597], [-122.278356, 47.648655], [-122.27838, 47.648679], [-122.278437, 47.648732], [-122.278486, 47.648801], [-122.278503, 47.648834], [-122.278528, 47.648891], [-122.27852, 47.648918], [-122.278493, 47.648939], [-122.278439, 47.648961], [-122.278405, 47.648975], [-122.278344, 47.648992], [-122.27828, 47.649015], [-122.27825, 47.649032], [-122.278208, 47.649044], [-122.278197, 47.649076], [-122.278202, 47.6491], [-122.278215, 47.649126], [-122.278235, 47.649151], [-122.278259, 47.649193], [-122.278283, 47.649234], [-122.278294, 47.649264], [-122.278324, 47.649297], [-122.278334, 47.649327], [-122.278353, 47.64937], [-122.278387, 47.649445], [-122.278411, 47.649504], [-122.278426, 47.649538], [-122.278457, 47.649579], [-122.278453, 47.649607], [-122.278493, 47.649636], [-122.278546, 47.649693], [-122.278569, 47.649713], [-122.27862, 47.649752], [-122.278665, 47.649782], [-122.278781, 47.649837], [-122.278843, 47.64985], [-122.278882, 47.649864], [-122.278905, 47.649894], [-122.278892, 47.649926], [-122.278875, 47.649982], [-122.278888, 47.650004], [-122.278986, 47.650059], [-122.278984, 47.650108], [-122.278977, 47.65014], [-122.278973, 47.650195], [-122.278968, 47.650231], [-122.278961, 47.650276], [-122.278985, 47.650303], [-122.279003, 47.65033], [-122.279016, 47.650359], [-122.279039, 47.650403], [-122.279046, 47.650455], [-122.279045, 47.650483], [-122.279051, 47.65053], [-122.279048, 47.650567], [-122.279039, 47.650605], [-122.27905, 47.650631], [-122.27906, 47.650666], [-122.279082, 47.650695], [-122.279098, 47.650718], [-122.279144, 47.650764], [-122.279187, 47.650803], [-122.27923, 47.650831], [-122.279278, 47.650857], [-122.279275, 47.650889], [-122.279302, 47.650907], [-122.279332, 47.650923], [-122.279366, 47.650941], [-122.279412, 47.650964], [-122.279452, 47.650985], [-122.279518, 47.65101], [-122.27956, 47.651015], [-122.279597, 47.651023], [-122.279661, 47.651033], [-122.279711, 47.651037], [-122.279751, 47.651043], [-122.279784, 47.651052], [-122.279821, 47.651068], [-122.279887, 47.651102], [-122.279934, 47.651132], [-122.279945, 47.651181], [-122.279931, 47.651225], [-122.279973, 47.651252], [-122.280005, 47.651277], [-122.280106, 47.651357], [-122.280139, 47.651376], [-122.280169, 47.651396], [-122.280195, 47.651415], [-122.280224, 47.651434], [-122.28028, 47.651466], [-122.280315, 47.651491], [-122.280359, 47.651521], [-122.280375, 47.651544], [-122.280392, 47.65157], [-122.280425, 47.651596], [-122.280445, 47.651619], [-122.280481, 47.651652], [-122.280514, 47.651668], [-122.280579, 47.651691], [-122.280621, 47.651703], [-122.280649, 47.651719], [-122.280686, 47.651746], [-122.280746, 47.651781], [-122.280817, 47.651791], [-122.280872, 47.651823], [-122.280918, 47.651852], [-122.280977, 47.651891], [-122.28103, 47.65192], [-122.281065, 47.651937], [-122.281112, 47.651968], [-122.281092, 47.651993], [-122.281088, 47.652025], [-122.281108, 47.652058], [-122.281126, 47.652112], [-122.281135, 47.652152], [-122.281146, 47.65218], [-122.281155, 47.652213], [-122.281189, 47.652263], [-122.281238, 47.652325], [-122.281269, 47.652368], [-122.281289, 47.652389], [-122.28131, 47.65245], [-122.281305, 47.652491], [-122.281317, 47.652518], [-122.28136, 47.652548], [-122.281378, 47.652588], [-122.281376, 47.652631], [-122.28137, 47.652657], [-122.281367, 47.652684], [-122.281358, 47.652714], [-122.281346, 47.652749], [-122.28132, 47.6528], [-122.281298, 47.652837], [-122.281299, 47.652862], [-122.28129, 47.652905], [-122.281286, 47.652935], [-122.281266, 47.652974], [-122.281243, 47.652994], [-122.281198, 47.653034], [-122.281156, 47.653061], [-122.281132, 47.653079], [-122.281089, 47.653104], [-122.281053, 47.653137], [-122.281039, 47.653167], [-122.281024, 47.653199], [-122.280946, 47.653276], [-122.280942, 47.653314], [-122.281006, 47.653364], [-122.281055, 47.653378], [-122.281088, 47.653389], [-122.281129, 47.653416], [-122.281167, 47.653446], [-122.281222, 47.653474], [-122.281278, 47.653504], [-122.281399, 47.653564], [-122.281438, 47.653578], [-122.281563, 47.65362], [-122.281602, 47.653631], [-122.281702, 47.653672], [-122.281755, 47.653661], [-122.281861, 47.653665], [-122.281921, 47.653682], [-122.281975, 47.653697], [-122.282053, 47.653721], [-122.282105, 47.653756], [-122.282135, 47.653777], [-122.282181, 47.653783], [-122.282216, 47.653787], [-122.282272, 47.653801], [-122.282303, 47.653819], [-122.282402, 47.653882], [-122.282414, 47.653934], [-122.282494, 47.65399], [-122.282531, 47.654013], [-122.282561, 47.654037], [-122.282591, 47.65406], [-122.282668, 47.654107], [-122.282702, 47.654133], [-122.282765, 47.654172], [-122.282818, 47.654208], [-122.282849, 47.654227], [-122.282889, 47.654251], [-122.282956, 47.654287], [-122.283032, 47.654307], [-122.28311, 47.654329], [-122.283179, 47.654373], [-122.283253, 47.654426], [-122.283284, 47.654453], [-122.283314, 47.654486], [-122.283356, 47.654517], [-122.283446, 47.654596], [-122.283471, 47.654622], [-122.283497, 47.654651], [-122.283535, 47.654687], [-122.283571, 47.654716], [-122.283574, 47.654744], [-122.283561, 47.654768], [-122.283538, 47.654812], [-122.28358, 47.654844], [-122.283637, 47.654867], [-122.283683, 47.65486], [-122.283711, 47.654844], [-122.283733, 47.654817], [-122.283748, 47.654787], [-122.283767, 47.65474], [-122.283811, 47.654727], [-122.283842, 47.654702], [-122.283885, 47.6547], [-122.283961, 47.654707], [-122.284009, 47.654697], [-122.284077, 47.654692], [-122.284121, 47.654696], [-122.284158, 47.65469], [-122.284195, 47.654681], [-122.28424, 47.654674], [-122.284307, 47.654675], [-122.284404, 47.654673], [-122.284491, 47.654674], [-122.284554, 47.654675], [-122.284634, 47.654672], [-122.2847, 47.654667], [-122.284748, 47.654667], [-122.284872, 47.654662], [-122.284908, 47.654663], [-122.285026, 47.654663], [-122.285088, 47.65467], [-122.285126, 47.654672], [-122.28518, 47.654676], [-122.285216, 47.65468], [-122.285258, 47.65469], [-122.285305, 47.654713], [-122.285349, 47.654735], [-122.285364, 47.654762], [-122.285353, 47.654824], [-122.285374, 47.654855], [-122.285406, 47.654873], [-122.285466, 47.654894], [-122.285497, 47.654875], [-122.285537, 47.654881], [-122.285579, 47.654881], [-122.285666, 47.654873], [-122.285713, 47.654875], [-122.285751, 47.654882], [-122.285798, 47.654889], [-122.285856, 47.654887], [-122.285895, 47.654882], [-122.285955, 47.654873], [-122.285991, 47.654872], [-122.286012, 47.654842], [-122.28603, 47.654819], [-122.286066, 47.654818], [-122.286105, 47.654827], [-122.286161, 47.654831], [-122.286202, 47.654827], [-122.2863, 47.654855], [-122.286336, 47.65488], [-122.286385, 47.654869], [-122.286445, 47.654845], [-122.286492, 47.654854], [-122.286519, 47.654885], [-122.286536, 47.654912], [-122.286513, 47.654952], [-122.28645, 47.655015], [-122.286469, 47.655045], [-122.286492, 47.655067], [-122.286532, 47.655116], [-122.286555, 47.655145], [-122.286578, 47.65518], [-122.286599, 47.655213], [-122.286649, 47.655265], [-122.286661, 47.655292], [-122.286653, 47.655322], [-122.286645, 47.655347], [-122.286653, 47.655381], [-122.286668, 47.655405], [-122.286683, 47.655448], [-122.286708, 47.65548], [-122.286715, 47.655509], [-122.286731, 47.655539], [-122.286731, 47.655573], [-122.286733, 47.656942], [-122.286736, 47.658392], [-122.288591, 47.65842], [-122.290194, 47.658439], [-122.290156, 47.660823], [-122.290151, 47.661175]]]]
    },
    "properties": {
      "neighbourhood": "Laurelhurst",
      "neighbourhood_group": "Other neighborhoods"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.400936, 47.64682], [-122.399903, 47.646824], [-122.397994, 47.646819], [-122.396456, 47.646832], [-122.395576, 47.646832], [-122.395539, 47.646984], [-122.395511, 47.647283], [-122.395487, 47.647707], [-122.395492, 47.648241], [-122.395493, 47.648448], [-122.395497, 47.648472], [-122.395496, 47.648496], [-122.39549, 47.64852], [-122.395479, 47.648543], [-122.395464, 47.648565], [-122.395444, 47.648585], [-122.395421, 47.648604], [-122.395365, 47.648634], [-122.395114, 47.648642], [-122.394224, 47.64864], [-122.393339, 47.648652], [-122.39171, 47.648649], [-122.391047, 47.64865], [-122.391006, 47.64866], [-122.390972, 47.648667], [-122.390938, 47.648674], [-122.390903, 47.648681], [-122.390865, 47.648687], [-122.39083, 47.648693], [-122.390795, 47.648697], [-122.39076, 47.648702], [-122.390724, 47.648705], [-122.390689, 47.648708], [-122.390653, 47.648711], [-122.390617, 47.648713], [-122.390581, 47.648715], [-122.390542, 47.648716], [-122.390506, 47.648716], [-122.39047, 47.648716], [-122.390435, 47.648715], [-122.390399, 47.648714], [-122.390363, 47.648712], [-122.390328, 47.648709], [-122.390292, 47.648707], [-122.390256, 47.648703], [-122.390221, 47.648699], [-122.390186, 47.648694], [-122.390152, 47.648686], [-122.390119, 47.648677], [-122.390054, 47.648652], [-122.390022, 47.648642], [-122.389966, 47.64862], [-122.389937, 47.648606], [-122.389908, 47.648592], [-122.38988, 47.648576], [-122.389854, 47.648559], [-122.38983, 47.648542], [-122.389806, 47.648524], [-122.389784, 47.648505], [-122.388897, 47.648492], [-122.38759, 47.648492], [-122.385965, 47.64845], [-122.384279, 47.648455], [-122.382629, 47.648453], [-122.381975, 47.648459], [-122.381974, 47.64841], [-122.381968, 47.647694], [-122.38198, 47.646825], [-122.381982, 47.646795], [-122.381985, 47.646767], [-122.381988, 47.64674], [-122.381991, 47.646712], [-122.381995, 47.646685], [-122.382, 47.646658], [-122.382004, 47.64663], [-122.38201, 47.646603], [-122.382016, 47.646576], [-122.382023, 47.646549], [-122.38203, 47.646521], [-122.382037, 47.646494], [-122.382045, 47.646467], [-122.382054, 47.64644], [-122.382063, 47.646413], [-122.382073, 47.646387], [-122.382083, 47.64636], [-122.382093, 47.646333], [-122.382104, 47.646307], [-122.382116, 47.64628], [-122.382128, 47.646254], [-122.382141, 47.646228], [-122.382153, 47.646202], [-122.382167, 47.646176], [-122.382181, 47.64615], [-122.382196, 47.646124], [-122.382211, 47.646099], [-122.382227, 47.646073], [-122.382243, 47.646048], [-122.382259, 47.646023], [-122.382276, 47.645998], [-122.382293, 47.645973], [-122.382311, 47.645948], [-122.38233, 47.645923], [-122.382348, 47.645899], [-122.382368, 47.645875], [-122.382387, 47.64585], [-122.382408, 47.645826], [-122.382429, 47.645803], [-122.38245, 47.645779], [-122.382471, 47.645756], [-122.382493, 47.645732], [-122.382516, 47.645709], [-122.382538, 47.645687], [-122.384753, 47.642717], [-122.386695, 47.640108], [-122.388686, 47.637403], [-122.389415, 47.636419], [-122.390047, 47.635611], [-122.390735, 47.634975], [-122.3913, 47.634472], [-122.391333, 47.634455], [-122.391364, 47.634437], [-122.391395, 47.634419], [-122.391426, 47.634401], [-122.391456, 47.634382], [-122.391484, 47.634362], [-122.391513, 47.634343], [-122.39154, 47.634322], [-122.391567, 47.634301], [-122.391592, 47.63428], [-122.391618, 47.634258], [-122.391642, 47.634236], [-122.391665, 47.634214], [-122.391688, 47.634191], [-122.391709, 47.634167], [-122.39173, 47.634143], [-122.39175, 47.634119], [-122.391769, 47.634095], [-122.391787, 47.63407], [-122.391804, 47.634045], [-122.39182, 47.63402], [-122.391835, 47.633994], [-122.39185, 47.633969], [-122.391863, 47.633943], [-122.391875, 47.633916], [-122.391887, 47.63389], [-122.39188, 47.633281], [-122.391875, 47.632647], [-122.391821, 47.630002], [-122.391935, 47.630015], [-122.391994, 47.630024], [-122.392045, 47.630032], [-122.392098, 47.630044], [-122.392151, 47.630054], [-122.3922, 47.630062], [-122.392247, 47.630073], [-122.392301, 47.630085], [-122.392347, 47.630099], [-122.392398, 47.630109], [-122.392445, 47.63012], [-122.392495, 47.630131], [-122.392551, 47.630142], [-122.392589, 47.630154], [-122.392641, 47.630169], [-122.392678, 47.630184], [-122.392713, 47.630194], [-122.392752, 47.630202], [-122.3928, 47.630212], [-122.392835, 47.630228], [-122.392913, 47.630248], [-122.392967, 47.630261], [-122.393036, 47.630282], [-122.393087, 47.630294], [-122.393139, 47.630303], [-122.393184, 47.630317], [-122.393232, 47.630334], [-122.393286, 47.630342], [-122.393322, 47.630346], [-122.393399, 47.630364], [-122.393459, 47.630389], [-122.3935, 47.630402], [-122.393538, 47.63041], [-122.393592, 47.630421], [-122.393647, 47.63043], [-122.3937, 47.630435], [-122.393713, 47.631011], [-122.393625, 47.632241], [-122.394153, 47.632294], [-122.397209, 47.633272], [-122.397504, 47.633772], [-122.397875, 47.635755], [-122.397901, 47.636531], [-122.397923, 47.637715], [-122.39809, 47.638023], [-122.398355, 47.638223], [-122.399631, 47.639109], [-122.400407, 47.639117], [-122.400437, 47.639135], [-122.400468, 47.63915], [-122.4005, 47.639165], [-122.400534, 47.639179], [-122.400568, 47.639191], [-122.400604, 47.639202], [-122.400641, 47.639211], [-122.400678, 47.639219], [-122.400716, 47.639226], [-122.400754, 47.639231], [-122.400792, 47.639235], [-122.400832, 47.639237], [-122.400871, 47.639238], [-122.40091, 47.639237], [-122.400949, 47.639235], [-122.400987, 47.639231], [-122.401028, 47.639225], [-122.400989, 47.639837], [-122.400987, 47.642643], [-122.400944, 47.645488], [-122.400938, 47.646599], [-122.400936, 47.64682]]]]
    },
    "properties": {
      "neighbourhood": "Southeast Magnolia",
      "neighbourhood_group": "Magnolia"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.376295, 47.553787], [-122.372198, 47.553756], [-122.37055, 47.553751], [-122.369741, 47.553745], [-122.362961, 47.553721], [-122.363004, 47.55204], [-122.363024, 47.549874], [-122.363056, 47.547765], [-122.363036, 47.546774], [-122.362365, 47.54583], [-122.361211, 47.544343], [-122.361195, 47.543781], [-122.361197, 47.54195], [-122.36076, 47.5407], [-122.36088, 47.539701], [-122.361128, 47.537974], [-122.361155, 47.537792], [-122.361189, 47.53755], [-122.361301, 47.536583], [-122.361302, 47.535989], [-122.361106, 47.535361], [-122.360713, 47.534318], [-122.360471, 47.533715], [-122.360826, 47.533721], [-122.363219, 47.533691], [-122.365806, 47.533663], [-122.366713, 47.533696], [-122.368404, 47.533656], [-122.368477, 47.535561], [-122.365853, 47.535546], [-122.365845, 47.536631], [-122.367074, 47.536962], [-122.367317, 47.537193], [-122.367471, 47.537351], [-122.368421, 47.537373], [-122.370479, 47.537368], [-122.372598, 47.537385], [-122.376622, 47.537397], [-122.37659, 47.539472], [-122.376532, 47.541561], [-122.376509, 47.543661], [-122.376415, 47.546541], [-122.37641, 47.547254], [-122.376379, 47.549213], [-122.376324, 47.551178], [-122.376309, 47.553131], [-122.376295, 47.553739], [-122.376295, 47.553787]]]]
    },
    "properties": {
      "neighbourhood": "High Point",
      "neighbourhood_group": "Delridge"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.387222, 47.544869], [-122.387983, 47.54474], [-122.388428, 47.544662], [-122.388873, 47.544589], [-122.389321, 47.544521], [-122.389874, 47.544445], [-122.390571, 47.544335], [-122.390606, 47.544327], [-122.39064, 47.544317], [-122.390674, 47.544305], [-122.390712, 47.54429], [-122.390742, 47.544275], [-122.39077, 47.544259], [-122.390797, 47.544241], [-122.390821, 47.544222], [-122.390843, 47.544202], [-122.390863, 47.54418], [-122.390881, 47.544158], [-122.390896, 47.544135], [-122.390907, 47.54411], [-122.390915, 47.544086], [-122.390922, 47.544061], [-122.390927, 47.544036], [-122.39093, 47.544011], [-122.390931, 47.543985], [-122.39093, 47.54396], [-122.390936, 47.543333], [-122.390933, 47.543137], [-122.394336, 47.543167], [-122.394807, 47.542548], [-122.395535, 47.541604], [-122.396254, 47.540851], [-122.397504, 47.539939], [-122.397518, 47.539994], [-122.39752, 47.540028], [-122.397519, 47.540068], [-122.397513, 47.540104], [-122.397495, 47.540176], [-122.397482, 47.540236], [-122.397455, 47.540353], [-122.397444, 47.540405], [-122.397419, 47.540481], [-122.397394, 47.54054], [-122.397376, 47.540582], [-122.39733, 47.540721], [-122.397311, 47.54077], [-122.397286, 47.540818], [-122.397244, 47.540891], [-122.397188, 47.541006], [-122.397162, 47.541062], [-122.397147, 47.54111], [-122.397133, 47.541184], [-122.397115, 47.541232], [-122.397107, 47.541261], [-122.397105, 47.541344], [-122.397098, 47.541398], [-122.397101, 47.541427], [-122.397131, 47.541517], [-122.397135, 47.541542], [-122.397133, 47.541575], [-122.397127, 47.541619], [-122.397128, 47.541643], [-122.397138, 47.541697], [-122.397141, 47.541731], [-122.397145, 47.54184], [-122.39715, 47.541867], [-122.397167, 47.541911], [-122.397178, 47.541948], [-122.397181, 47.542029], [-122.397209, 47.542094], [-122.397215, 47.542118], [-122.39722, 47.542179], [-122.397231, 47.542213], [-122.397254, 47.542265], [-122.397287, 47.542356], [-122.397306, 47.54239], [-122.397358, 47.54247], [-122.397382, 47.542506], [-122.397451, 47.542595], [-122.397496, 47.542649], [-122.39756, 47.542718], [-122.397608, 47.542781], [-122.397633, 47.542826], [-122.397651, 47.542864], [-122.397685, 47.542978], [-122.397699, 47.543008], [-122.397726, 47.543048], [-122.397756, 47.543089], [-122.397831, 47.543208], [-122.39787, 47.543264], [-122.397917, 47.543324], [-122.397975, 47.543419], [-122.397996, 47.543458], [-122.398022, 47.543528], [-122.398046, 47.543595], [-122.398062, 47.543624], [-122.398091, 47.543662], [-122.39811, 47.543688], [-122.398146, 47.543745], [-122.398162, 47.543767], [-122.398185, 47.543795], [-122.398265, 47.543923], [-122.398295, 47.543959], [-122.398311, 47.543983], [-122.398337, 47.54404], [-122.39836, 47.544071], [-122.398386, 47.544128], [-122.398405, 47.54415], [-122.398474, 47.544256], [-122.398502, 47.544278], [-122.398526, 47.544306], [-122.39854, 47.54433], [-122.398577, 47.544332], [-122.398626, 47.544341], [-122.398633, 47.544418], [-122.398671, 47.544421], [-122.398674, 47.544454], [-122.398687, 47.54449], [-122.398696, 47.544524], [-122.398711, 47.544559], [-122.398724, 47.544589], [-122.398736, 47.544616], [-122.398752, 47.544652], [-122.398763, 47.544676], [-122.398773, 47.544701], [-122.398787, 47.544729], [-122.398816, 47.54477], [-122.398851, 47.544777], [-122.398867, 47.544812], [-122.398884, 47.544866], [-122.398901, 47.544916], [-122.39892, 47.54494], [-122.398934, 47.544966], [-122.398955, 47.545], [-122.398971, 47.545033], [-122.398991, 47.545064], [-122.399008, 47.545092], [-122.399023, 47.545123], [-122.39903, 47.545151], [-122.39905, 47.545177], [-122.399056, 47.545208], [-122.399069, 47.545236], [-122.399093, 47.545298], [-122.399097, 47.545329], [-122.399133, 47.54535], [-122.399152, 47.545373], [-122.399175, 47.545403], [-122.399192, 47.545434], [-122.3992, 47.545465], [-122.39923, 47.545515], [-122.399256, 47.545538], [-122.399272, 47.545562], [-122.399293, 47.545591], [-122.399304, 47.545616], [-122.399316, 47.545649], [-122.399342, 47.545688], [-122.399348, 47.545721], [-122.399401, 47.545782], [-122.399404, 47.545807], [-122.399419, 47.54585], [-122.399431, 47.54588], [-122.399444, 47.545906], [-122.399457, 47.545933], [-122.399475, 47.545968], [-122.399492, 47.545993], [-122.399494, 47.546021], [-122.399499, 47.546053], [-122.399503, 47.546111], [-122.399502, 47.546164], [-122.399503, 47.546326], [-122.399493, 47.546356], [-122.399493, 47.54641], [-122.399477, 47.54648], [-122.399464, 47.546546], [-122.39945, 47.546582], [-122.399439, 47.546611], [-122.399434, 47.546647], [-122.399425, 47.546673], [-122.399418, 47.546699], [-122.399408, 47.546727], [-122.399396, 47.546752], [-122.399389, 47.546781], [-122.399372, 47.546813], [-122.399346, 47.546846], [-122.399335, 47.546871], [-122.399304, 47.546907], [-122.399298, 47.546933], [-122.399281, 47.546961], [-122.399256, 47.547004], [-122.399253, 47.547029], [-122.39924, 47.547066], [-122.399223, 47.547106], [-122.399209, 47.547132], [-122.399194, 47.547167], [-122.399169, 47.547214], [-122.399143, 47.547253], [-122.399135, 47.547277], [-122.399079, 47.547355], [-122.399056, 47.547389], [-122.399047, 47.547418], [-122.399031, 47.54744], [-122.399001, 47.547466], [-122.398971, 47.5475], [-122.398956, 47.547528], [-122.398931, 47.547569], [-122.398902, 47.54761], [-122.398892, 47.547651], [-122.398871, 47.547674], [-122.398856, 47.547708], [-122.398838, 47.547739], [-122.398824, 47.547771], [-122.398805, 47.547793], [-122.398785, 47.54785], [-122.398771, 47.547883], [-122.398752, 47.547906], [-122.39875, 47.547938], [-122.39874, 47.547962], [-122.398729, 47.548018], [-122.398718, 47.54807], [-122.398712, 47.548102], [-122.398711, 47.548146], [-122.398704, 47.548177], [-122.398697, 47.548207], [-122.398684, 47.548234], [-122.398671, 47.548274], [-122.39866, 47.548318], [-122.39866, 47.548344], [-122.398641, 47.548379], [-122.398617, 47.548414], [-122.398601, 47.548455], [-122.398598, 47.548482], [-122.398574, 47.548509], [-122.398556, 47.548545], [-122.398546, 47.548582], [-122.398527, 47.54862], [-122.398504, 47.548691], [-122.398447, 47.548698], [-122.398448, 47.548826], [-122.398399, 47.548838], [-122.398401, 47.54898], [-122.398404, 47.549099], [-122.39847, 47.549099], [-122.398469, 47.549123], [-122.3984, 47.549128], [-122.398402, 47.549229], [-122.398436, 47.549237], [-122.398434, 47.549265], [-122.398311, 47.549266], [-122.39831, 47.549323], [-122.398305, 47.549349], [-122.398303, 47.549383], [-122.398296, 47.549487], [-122.398303, 47.549539], [-122.398304, 47.549678], [-122.398325, 47.549698], [-122.398398, 47.549699], [-122.398397, 47.549746], [-122.398399, 47.549885], [-122.398399, 47.549912], [-122.398342, 47.549932], [-122.398332, 47.550008], [-122.398331, 47.550037], [-122.398333, 47.550174], [-122.39833, 47.550233], [-122.398321, 47.550328], [-122.398323, 47.550457], [-122.398334, 47.550543], [-122.398372, 47.550549], [-122.398388, 47.550591], [-122.398403, 47.550615], [-122.398404, 47.550641], [-122.398423, 47.550676], [-122.398446, 47.550696], [-122.398446, 47.550727], [-122.398421, 47.550758], [-122.398423, 47.550795], [-122.398443, 47.550819], [-122.39846, 47.550841], [-122.398467, 47.550877], [-122.398503, 47.550901], [-122.398513, 47.550925], [-122.39855, 47.550936], [-122.398599, 47.550964], [-122.398605, 47.550995], [-122.398651, 47.551008], [-122.398676, 47.55104], [-122.398694, 47.551076], [-122.398718, 47.551105], [-122.398735, 47.55115], [-122.398732, 47.551193], [-122.398718, 47.551229], [-122.398701, 47.551313], [-122.398702, 47.551373], [-122.398718, 47.551399], [-122.398722, 47.551539], [-122.398721, 47.551663], [-122.398723, 47.551744], [-122.39874, 47.55178], [-122.398747, 47.551829], [-122.398762, 47.551866], [-122.398763, 47.551899], [-122.398771, 47.551951], [-122.398786, 47.551994], [-122.398792, 47.55202], [-122.398818, 47.552048], [-122.398851, 47.552107], [-122.398857, 47.552132], [-122.398873, 47.552154], [-122.398875, 47.552189], [-122.398874, 47.552222], [-122.398876, 47.552254], [-122.398887, 47.552291], [-122.398896, 47.552328], [-122.398898, 47.552354], [-122.398904, 47.552379], [-122.398918, 47.552409], [-122.39893, 47.552444], [-122.398944, 47.552479], [-122.398969, 47.552523], [-122.398981, 47.552549], [-122.399004, 47.552581], [-122.399014, 47.552609], [-122.399021, 47.552649], [-122.39903, 47.552676], [-122.399043, 47.5527], [-122.399055, 47.552743], [-122.399056, 47.552769], [-122.399068, 47.552798], [-122.399075, 47.552834], [-122.399091, 47.552878], [-122.399095, 47.552906], [-122.399102, 47.552935], [-122.399102, 47.552961], [-122.399112, 47.552991], [-122.399115, 47.553017], [-122.399158, 47.553069], [-122.39916, 47.553095], [-122.399184, 47.553164], [-122.399195, 47.553189], [-122.399215, 47.55322], [-122.399227, 47.553246], [-122.399253, 47.553275], [-122.399271, 47.553304], [-122.399307, 47.553353], [-122.399386, 47.553442], [-122.399403, 47.553473], [-122.399444, 47.553521], [-122.399503, 47.553592], [-122.399521, 47.553613], [-122.399607, 47.553705], [-122.399719, 47.553821], [-122.399833, 47.553939], [-122.399872, 47.553981], [-122.399905, 47.554006], [-122.399911, 47.55403], [-122.399911, 47.554057], [-122.399921, 47.554083], [-122.399924, 47.554112], [-122.399918, 47.554148], [-122.399933, 47.55417], [-122.399945, 47.5542], [-122.399951, 47.554232], [-122.399933, 47.554276], [-122.399931, 47.554308], [-122.399929, 47.554342], [-122.399909, 47.554364], [-122.399906, 47.554398], [-122.399899, 47.554428], [-122.399898, 47.55446], [-122.399894, 47.554485], [-122.399892, 47.554515], [-122.399882, 47.554562], [-122.399891, 47.554588], [-122.399887, 47.554627], [-122.399883, 47.554654], [-122.399894, 47.554677], [-122.399899, 47.554717], [-122.399897, 47.554751], [-122.399894, 47.554776], [-122.399904, 47.554825], [-122.399906, 47.554864], [-122.399907, 47.554892], [-122.39992, 47.554933], [-122.399921, 47.554957], [-122.399908, 47.554983], [-122.399916, 47.555009], [-122.399926, 47.555043], [-122.399948, 47.555082], [-122.399956, 47.555115], [-122.399973, 47.555141], [-122.399982, 47.555171], [-122.400011, 47.555195], [-122.400014, 47.555231], [-122.400017, 47.555271], [-122.40001, 47.555296], [-122.400013, 47.555349], [-122.400012, 47.555384], [-122.400023, 47.555407], [-122.400036, 47.555444], [-122.40005, 47.555475], [-122.400068, 47.555501], [-122.400083, 47.555528], [-122.400091, 47.555552], [-122.400099, 47.555577], [-122.400131, 47.555615], [-122.400167, 47.555625], [-122.400202, 47.555621], [-122.400243, 47.555634], [-122.40028, 47.555645], [-122.400305, 47.555676], [-122.40033, 47.555735], [-122.400358, 47.555785], [-122.400371, 47.55583], [-122.400389, 47.555855], [-122.400412, 47.555889], [-122.400426, 47.555918], [-122.400461, 47.55596], [-122.400471, 47.555994], [-122.400486, 47.556022], [-122.400522, 47.556072], [-122.400568, 47.556072], [-122.400608, 47.556079], [-122.400631, 47.556108], [-122.400649, 47.556143], [-122.400666, 47.556169], [-122.400698, 47.556213], [-122.400712, 47.556236], [-122.400732, 47.556266], [-122.400758, 47.556298], [-122.40077, 47.556321], [-122.400793, 47.556346], [-122.400809, 47.556376], [-122.400826, 47.55641], [-122.400833, 47.556434], [-122.400827, 47.556474], [-122.400834, 47.556505], [-122.400857, 47.556527], [-122.400909, 47.556585], [-122.400941, 47.556621], [-122.401038, 47.556725], [-122.401085, 47.55678], [-122.401098, 47.556804], [-122.401116, 47.556829], [-122.401126, 47.556859], [-122.401159, 47.556898], [-122.401176, 47.556919], [-122.401225, 47.556988], [-122.401266, 47.557017], [-122.401303, 47.557017], [-122.401348, 47.557019], [-122.401369, 47.557042], [-122.401402, 47.557077], [-122.401417, 47.5571], [-122.401448, 47.557135], [-122.401501, 47.557191], [-122.40156, 47.557256], [-122.401581, 47.557284], [-122.401603, 47.557322], [-122.401617, 47.557348], [-122.40163, 47.557373], [-122.401644, 47.557401], [-122.401668, 47.557429], [-122.401708, 47.557453], [-122.40176, 47.557492], [-122.401784, 47.557515], [-122.401828, 47.557569], [-122.401878, 47.557623], [-122.401915, 47.557626], [-122.401964, 47.557623], [-122.402003, 47.557624], [-122.402037, 47.55766], [-122.402091, 47.557732], [-122.402109, 47.557763], [-122.402142, 47.557832], [-122.402097, 47.557838], [-122.402091, 47.557864], [-122.402095, 47.557889], [-122.402118, 47.557927], [-122.402161, 47.557976], [-122.402242, 47.558055], [-122.402277, 47.558084], [-122.402329, 47.558138], [-122.402454, 47.558264], [-122.402491, 47.558297], [-122.402534, 47.558341], [-122.402582, 47.558393], [-122.402603, 47.558422], [-122.402618, 47.558453], [-122.402615, 47.558479], [-122.40264, 47.558507], [-122.402699, 47.558565], [-122.402737, 47.558567], [-122.40276, 47.558595], [-122.402773, 47.558618], [-122.402794, 47.558645], [-122.402811, 47.558668], [-122.402864, 47.558731], [-122.402881, 47.558759], [-122.40292, 47.558787], [-122.402955, 47.558806], [-122.402956, 47.558834], [-122.40296, 47.558863], [-122.402972, 47.558892], [-122.402974, 47.558921], [-122.40298, 47.558965], [-122.403005, 47.558994], [-122.403029, 47.559031], [-122.403071, 47.55908], [-122.403092, 47.559111], [-122.403131, 47.559123], [-122.403178, 47.559127], [-122.403207, 47.559166], [-122.403229, 47.559193], [-122.403245, 47.559218], [-122.40327, 47.559251], [-122.403269, 47.559281], [-122.403237, 47.559302], [-122.403179, 47.559311], [-122.403188, 47.559336], [-122.403198, 47.559389], [-122.403203, 47.559421], [-122.403209, 47.559445], [-122.403222, 47.559477], [-122.403221, 47.559504], [-122.403242, 47.559528], [-122.403305, 47.55959], [-122.403338, 47.559616], [-122.403371, 47.559644], [-122.403421, 47.559677], [-122.403457, 47.559715], [-122.403536, 47.559807], [-122.40355, 47.559838], [-122.403572, 47.559867], [-122.403629, 47.559937], [-122.403666, 47.559947], [-122.403713, 47.559948], [-122.403778, 47.559954], [-122.403819, 47.559961], [-122.403839, 47.559992], [-122.403866, 47.560024], [-122.403886, 47.560054], [-122.403903, 47.560085], [-122.403927, 47.560115], [-122.403943, 47.560151], [-122.403964, 47.560174], [-122.403992, 47.560217], [-122.404018, 47.560257], [-122.404028, 47.560294], [-122.404016, 47.560317], [-122.404031, 47.560355], [-122.404046, 47.560378], [-122.40406, 47.560408], [-122.404068, 47.560436], [-122.404078, 47.560461], [-122.404095, 47.560486], [-122.404099, 47.560513], [-122.404118, 47.560555], [-122.404131, 47.560579], [-122.404155, 47.560606], [-122.404212, 47.560663], [-122.404229, 47.560692], [-122.40424, 47.560716], [-122.404249, 47.560742], [-122.404258, 47.560781], [-122.404221, 47.560787], [-122.404233, 47.56083], [-122.404276, 47.560902], [-122.403922, 47.560965], [-122.403558, 47.560995], [-122.403005, 47.561041], [-122.402693, 47.561074], [-122.402654, 47.561076], [-122.402619, 47.561075], [-122.40258, 47.561071], [-122.402543, 47.561064], [-122.402039, 47.560865], [-122.401767, 47.560756], [-122.401154, 47.560517], [-122.400991, 47.560425], [-122.400878, 47.560365], [-122.400704, 47.560272], [-122.40063, 47.560181], [-122.400566, 47.56009], [-122.400555, 47.560067], [-122.400546, 47.560043], [-122.400537, 47.560019], [-122.400515, 47.559896], [-122.400509, 47.559872], [-122.400502, 47.559848], [-122.400494, 47.559824], [-122.400484, 47.5598], [-122.400472, 47.559777], [-122.400458, 47.559754], [-122.400443, 47.559732], [-122.400355, 47.559609], [-122.400172, 47.559492], [-122.400143, 47.559474], [-122.400115, 47.559455], [-122.400087, 47.559436], [-122.40006, 47.559417], [-122.400034, 47.559397], [-122.400008, 47.559377], [-122.399984, 47.559356], [-122.39996, 47.559336], [-122.399936, 47.559314], [-122.399914, 47.559293], [-122.399892, 47.55927], [-122.39987, 47.559248], [-122.39985, 47.559225], [-122.399831, 47.559202], [-122.399591, 47.558751], [-122.399529, 47.558684], [-122.39911, 47.558235], [-122.399091, 47.558212], [-122.399074, 47.558188], [-122.399057, 47.558161], [-122.399042, 47.558136], [-122.399029, 47.558111], [-122.399017, 47.558086], [-122.399006, 47.558061], [-122.398996, 47.558035], [-122.398988, 47.558009], [-122.398981, 47.557983], [-122.398975, 47.557956], [-122.398971, 47.55793], [-122.398968, 47.557904], [-122.398966, 47.557877], [-122.398919, 47.557622], [-122.398904, 47.557598], [-122.398883, 47.557575], [-122.398858, 47.557555], [-122.398829, 47.557537], [-122.398576, 47.557509], [-122.39769, 47.557489], [-122.397646, 47.55758], [-122.397638, 47.557985], [-122.397619, 47.559125], [-122.397614, 47.559387], [-122.396304, 47.55937], [-122.394442, 47.559362], [-122.392637, 47.559348], [-122.390863, 47.559342], [-122.389381, 47.559328], [-122.389262, 47.559326], [-122.388109, 47.559341], [-122.386794, 47.559311], [-122.386842, 47.55887], [-122.386859, 47.558193], [-122.386889, 47.557082], [-122.386926, 47.555976], [-122.386958, 47.554917], [-122.386989, 47.553849], [-122.387021, 47.552781], [-122.387052, 47.551714], [-122.387084, 47.550646], [-122.387115, 47.549578], [-122.387147, 47.548511], [-122.387172, 47.547443], [-122.387197, 47.546376], [-122.387222, 47.545308], [-122.387222, 47.544869]]]]
    },
    "properties": {
      "neighbourhood": "Seaview",
      "neighbourhood_group": "West Seattle"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.341787, 47.556108], [-122.339671, 47.555834], [-122.338345, 47.555663], [-122.337677, 47.554246], [-122.337432, 47.55406], [-122.337121, 47.554229], [-122.335236, 47.554179], [-122.334021, 47.554193], [-122.332353, 47.55422], [-122.330833, 47.554196], [-122.329413, 47.554237], [-122.328388, 47.554226], [-122.326912, 47.554193], [-122.325331, 47.554148], [-122.324986, 47.554132], [-122.324729, 47.554121], [-122.324318, 47.553739], [-122.323897, 47.553364], [-122.322819, 47.553365], [-122.321016, 47.55335], [-122.320978, 47.553368], [-122.320634, 47.55305], [-122.320191, 47.552704], [-122.319976, 47.552285], [-122.318865, 47.551247], [-122.318455, 47.550767], [-122.317832, 47.550111], [-122.317284, 47.549611], [-122.31693, 47.549278], [-122.316207, 47.54863], [-122.314028, 47.54749], [-122.313986, 47.54745], [-122.31305, 47.54656], [-122.309866, 47.543832], [-122.302152, 47.537378], [-122.298247, 47.53385], [-122.297847, 47.533022], [-122.295937, 47.533225], [-122.295704, 47.532402], [-122.293651, 47.527721], [-122.292214, 47.524443], [-122.292149, 47.524297], [-122.292283, 47.524299], [-122.293187, 47.524315], [-122.293464, 47.52432], [-122.293593, 47.524323], [-122.293721, 47.524325], [-122.295529, 47.524357], [-122.296678, 47.524378], [-122.297417, 47.524391], [-122.298897, 47.524418], [-122.300757, 47.524451], [-122.301287, 47.524461], [-122.301203, 47.524506], [-122.301121, 47.52453], [-122.30104, 47.524556], [-122.30096, 47.524583], [-122.300881, 47.524611], [-122.300803, 47.52464], [-122.300726, 47.524671], [-122.30065, 47.524703], [-122.300575, 47.524736], [-122.300502, 47.524771], [-122.30043, 47.524806], [-122.300358, 47.524843], [-122.300289, 47.524881], [-122.300221, 47.52492], [-122.300154, 47.524961], [-122.300089, 47.525002], [-122.300026, 47.525044], [-122.299963, 47.525088], [-122.299927, 47.525114], [-122.299893, 47.525141], [-122.29986, 47.525169], [-122.299829, 47.525198], [-122.2998, 47.525227], [-122.299773, 47.525258], [-122.299748, 47.525289], [-122.299724, 47.525321], [-122.299703, 47.525354], [-122.299684, 47.525387], [-122.299666, 47.52542], [-122.299651, 47.525454], [-122.299638, 47.525489], [-122.299627, 47.525524], [-122.299619, 47.525559], [-122.299612, 47.525594], [-122.299607, 47.52563], [-122.299605, 47.525666], [-122.299605, 47.525701], [-122.299608, 47.525737], [-122.299612, 47.525772], [-122.29962, 47.525822], [-122.29963, 47.525871], [-122.299642, 47.525921], [-122.299656, 47.52597], [-122.299672, 47.526018], [-122.29969, 47.526067], [-122.299709, 47.526115], [-122.299731, 47.526163], [-122.299972, 47.526612], [-122.300009, 47.526689], [-122.300044, 47.526767], [-122.300077, 47.526846], [-122.300109, 47.526924], [-122.300138, 47.527003], [-122.300165, 47.527082], [-122.30019, 47.527156], [-122.300213, 47.52723], [-122.300234, 47.527304], [-122.300253, 47.527378], [-122.300271, 47.527453], [-122.300286, 47.527528], [-122.300302, 47.527607], [-122.30032, 47.527686], [-122.30034, 47.527765], [-122.300362, 47.527844], [-122.300386, 47.527922], [-122.300413, 47.528], [-122.300442, 47.528078], [-122.300473, 47.528155], [-122.300507, 47.528232], [-122.300542, 47.528308], [-122.30058, 47.528384], [-122.300619, 47.52846], [-122.300661, 47.528535], [-122.300705, 47.528609], [-122.300751, 47.528683], [-122.300799, 47.528756], [-122.300849, 47.528828], [-122.300901, 47.5289], [-122.300955, 47.528971], [-122.301012, 47.529042], [-122.30107, 47.529112], [-122.30113, 47.529181], [-122.301175, 47.529226], [-122.301221, 47.529271], [-122.301269, 47.529315], [-122.301319, 47.529358], [-122.30137, 47.5294], [-122.301423, 47.529441], [-122.301477, 47.529482], [-122.301533, 47.529521], [-122.30159, 47.52956], [-122.301648, 47.529597], [-122.301708, 47.529634], [-122.30177, 47.529669], [-122.301832, 47.529704], [-122.301897, 47.529737], [-122.301962, 47.529769], [-122.302028, 47.5298], [-122.302096, 47.52983], [-122.302164, 47.529859], [-122.302234, 47.529886], [-122.302315, 47.529919], [-122.302397, 47.529951], [-122.30248, 47.529982], [-122.302563, 47.530011], [-122.302648, 47.53004], [-122.302733, 47.530068], [-122.302826, 47.530093], [-122.302918, 47.530119], [-122.303009, 47.530147], [-122.3031, 47.530176], [-122.303189, 47.530206], [-122.303278, 47.530237], [-122.303366, 47.53027], [-122.303452, 47.530304], [-122.303538, 47.530339], [-122.303623, 47.530375], [-122.303706, 47.530412], [-122.303789, 47.530451], [-122.30387, 47.53049], [-122.30395, 47.530531], [-122.304028, 47.530573], [-122.304106, 47.530616], [-122.304182, 47.53066], [-122.304257, 47.530705], [-122.304311, 47.530734], [-122.304364, 47.530765], [-122.304415, 47.530797], [-122.304465, 47.53083], [-122.304514, 47.530864], [-122.30456, 47.530899], [-122.304605, 47.530935], [-122.304649, 47.530972], [-122.304691, 47.53101], [-122.304731, 47.531048], [-122.304769, 47.531088], [-122.304805, 47.531128], [-122.30484, 47.531169], [-122.304872, 47.531211], [-122.304903, 47.531253], [-122.304932, 47.531296], [-122.304959, 47.53134], [-122.304983, 47.531384], [-122.305007, 47.531428], [-122.305027, 47.531473], [-122.305045, 47.531519], [-122.305062, 47.531565], [-122.305076, 47.531611], [-122.305089, 47.531657], [-122.305099, 47.531704], [-122.305527, 47.531707], [-122.307786, 47.531727], [-122.308489, 47.531733], [-122.308584, 47.531734], [-122.30899, 47.531737], [-122.309303, 47.53174], [-122.309397, 47.531741], [-122.313136, 47.531774], [-122.313283, 47.531775], [-122.316921, 47.53181], [-122.317836, 47.532347], [-122.317896, 47.532351], [-122.317961, 47.532388], [-122.318012, 47.532403], [-122.318099, 47.532429], [-122.318139, 47.532432], [-122.318188, 47.532435], [-122.318241, 47.532459], [-122.318262, 47.532512], [-122.318304, 47.532568], [-122.318418, 47.532647], [-122.318523, 47.532702], [-122.318599, 47.532722], [-122.318726, 47.532782], [-122.318843, 47.532839], [-122.318948, 47.532859], [-122.319088, 47.532874], [-122.319198, 47.532932], [-122.319394, 47.533012], [-122.319541, 47.533081], [-122.319658, 47.533142], [-122.319708, 47.533184], [-122.319784, 47.533217], [-122.319859, 47.533295], [-122.319966, 47.533354], [-122.320113, 47.53341], [-122.32018, 47.533473], [-122.320287, 47.533553], [-122.320382, 47.533597], [-122.320487, 47.533678], [-122.32063, 47.533794], [-122.320718, 47.533869], [-122.320846, 47.533957], [-122.320953, 47.534033], [-122.321019, 47.534105], [-122.320999, 47.534174], [-122.320777, 47.534311], [-122.320665, 47.534361], [-122.320513, 47.534426], [-122.320434, 47.534479], [-122.320387, 47.534521], [-122.32031, 47.534561], [-122.320233, 47.534605], [-122.320156, 47.534657], [-122.320086, 47.534706], [-122.32002, 47.534752], [-122.319957, 47.534807], [-122.319874, 47.534876], [-122.319793, 47.534939], [-122.319669, 47.535018], [-122.319566, 47.535096], [-122.319487, 47.535153], [-122.31941, 47.535215], [-122.319363, 47.535272], [-122.319315, 47.535311], [-122.319295, 47.535349], [-122.319248, 47.535404], [-122.31919, 47.535447], [-122.319126, 47.535489], [-122.319054, 47.535514], [-122.318986, 47.53554], [-122.31891, 47.535633], [-122.318624, 47.535986], [-122.318607, 47.536025], [-122.318592, 47.536057], [-122.318573, 47.53608], [-122.318593, 47.536116], [-122.318618, 47.536137], [-122.318648, 47.536171], [-122.318638, 47.536209], [-122.318624, 47.536243], [-122.318614, 47.536269], [-122.318586, 47.536288], [-122.318577, 47.536316], [-122.318571, 47.536358], [-122.318567, 47.536415], [-122.318555, 47.536461], [-122.318533, 47.536514], [-122.318516, 47.536559], [-122.318514, 47.53661], [-122.318505, 47.53665], [-122.318502, 47.53668], [-122.318546, 47.536773], [-122.318605, 47.536829], [-122.318629, 47.536886], [-122.318631, 47.536933], [-122.318613, 47.536966], [-122.318587, 47.536985], [-122.318567, 47.537029], [-122.318572, 47.537056], [-122.318582, 47.537082], [-122.318599, 47.537109], [-122.318663, 47.537135], [-122.318708, 47.537147], [-122.318767, 47.537169], [-122.31882, 47.537201], [-122.318883, 47.537219], [-122.318933, 47.53722], [-122.318973, 47.537206], [-122.319063, 47.537191], [-122.319085, 47.537168], [-122.319115, 47.537136], [-122.319143, 47.537106], [-122.319139, 47.537081], [-122.319132, 47.537033], [-122.319149, 47.536987], [-122.319163, 47.536939], [-122.319203, 47.536871], [-122.319255, 47.536818], [-122.319278, 47.536785], [-122.319147, 47.536755], [-122.319836, 47.535618], [-122.320621, 47.535104], [-122.321144, 47.534762], [-122.321875, 47.534741], [-122.321888, 47.534838], [-122.322026, 47.53487], [-122.322237, 47.53493], [-122.322348, 47.534961], [-122.322463, 47.535], [-122.322533, 47.535049], [-122.322614, 47.53511], [-122.322638, 47.535164], [-122.322663, 47.535201], [-122.322716, 47.535261], [-122.322754, 47.535299], [-122.32278, 47.535317], [-122.322841, 47.535323], [-122.322872, 47.535382], [-122.322907, 47.535459], [-122.32297, 47.535526], [-122.323025, 47.535538], [-122.323067, 47.53554], [-122.323118, 47.535541], [-122.323168, 47.535541], [-122.323244, 47.535546], [-122.323309, 47.535552], [-122.323373, 47.535577], [-122.323398, 47.535616], [-122.323422, 47.535642], [-122.323464, 47.535672], [-122.323503, 47.535698], [-122.323588, 47.535681], [-122.323662, 47.535685], [-122.323744, 47.535733], [-122.323854, 47.5358], [-122.323969, 47.535871], [-122.324063, 47.53592], [-122.324151, 47.535975], [-122.324212, 47.536045], [-122.324295, 47.536098], [-122.324397, 47.536173], [-122.324455, 47.536213], [-122.324546, 47.536286], [-122.324635, 47.536354], [-122.324735, 47.536412], [-122.324894, 47.536476], [-122.324972, 47.536534], [-122.325077, 47.53661], [-122.325188, 47.536686], [-122.325272, 47.536745], [-122.325347, 47.536814], [-122.325456, 47.536889], [-122.32555, 47.536973], [-122.325622, 47.537035], [-122.325675, 47.537083], [-122.325733, 47.537115], [-122.325802, 47.53714], [-122.325869, 47.537153], [-122.325916, 47.537167], [-122.325947, 47.537191], [-122.325962, 47.537222], [-122.326086, 47.537228], [-122.326605, 47.537594], [-122.326951, 47.537848], [-122.326862, 47.537909], [-122.326922, 47.537952], [-122.326979, 47.538009], [-122.326979, 47.538037], [-122.327017, 47.538081], [-122.32707, 47.538136], [-122.327149, 47.538211], [-122.327235, 47.538282], [-122.327326, 47.538332], [-122.327398, 47.538381], [-122.327471, 47.538441], [-122.327553, 47.538489], [-122.327608, 47.538524], [-122.327663, 47.538555], [-122.327708, 47.538601], [-122.327866, 47.538508], [-122.328258, 47.538792], [-122.3281, 47.538888], [-122.32812, 47.538911], [-122.328171, 47.538961], [-122.328208, 47.539031], [-122.328176, 47.539072], [-122.328087, 47.539129], [-122.327986, 47.539181], [-122.327912, 47.539222], [-122.327847, 47.539269], [-122.327817, 47.539313], [-122.327791, 47.539363], [-122.32781, 47.539393], [-122.327868, 47.53944], [-122.327918, 47.539476], [-122.327989, 47.539516], [-122.328041, 47.53954], [-122.328088, 47.539556], [-122.328145, 47.539564], [-122.328333, 47.539565], [-122.328442, 47.539566], [-122.328596, 47.539563], [-122.328732, 47.53956], [-122.328898, 47.539565], [-122.329032, 47.539572], [-122.329137, 47.539573], [-122.329242, 47.53957], [-122.329331, 47.539595], [-122.329416, 47.539629], [-122.329507, 47.539674], [-122.329576, 47.539718], [-122.329679, 47.539776], [-122.329754, 47.539826], [-122.329829, 47.539882], [-122.329907, 47.539938], [-122.329948, 47.539964], [-122.329975, 47.539981], [-122.33002, 47.540013], [-122.330101, 47.540058], [-122.330134, 47.540086], [-122.330193, 47.540121], [-122.330269, 47.540175], [-122.330311, 47.540205], [-122.330345, 47.540227], [-122.330369, 47.540249], [-122.330407, 47.540279], [-122.33045, 47.540301], [-122.330516, 47.540347], [-122.330579, 47.540388], [-122.330628, 47.54042], [-122.330662, 47.540441], [-122.330731, 47.540482], [-122.330789, 47.540525], [-122.330825, 47.540552], [-122.330855, 47.540577], [-122.330909, 47.540626], [-122.330994, 47.540681], [-122.331082, 47.540734], [-122.331109, 47.540759], [-122.331154, 47.540795], [-122.331176, 47.540821], [-122.331174, 47.540846], [-122.331274, 47.54093], [-122.331404, 47.541017], [-122.331503, 47.541089], [-122.331621, 47.541176], [-122.331693, 47.541225], [-122.331638, 47.541273], [-122.331681, 47.541304], [-122.331731, 47.541315], [-122.331734, 47.541339], [-122.331781, 47.541376], [-122.331818, 47.541353], [-122.331848, 47.541333], [-122.331902, 47.541366], [-122.332048, 47.541473], [-122.33219, 47.541577], [-122.3326, 47.541869], [-122.332529, 47.541925], [-122.332494, 47.541947], [-122.33232, 47.541951], [-122.332203, 47.54195], [-122.332074, 47.541951], [-122.331884, 47.54195], [-122.331746, 47.54195], [-122.33146, 47.541947], [-122.331161, 47.541944], [-122.330908, 47.541942], [-122.330907, 47.541987], [-122.330908, 47.542026], [-122.330908, 47.542094], [-122.330908, 47.542173], [-122.330908, 47.542223], [-122.330953, 47.542224], [-122.331053, 47.542225], [-122.331228, 47.542225], [-122.331471, 47.542224], [-122.331718, 47.542224], [-122.331858, 47.542225], [-122.332018, 47.542225], [-122.332213, 47.542228], [-122.332486, 47.54223], [-122.332494, 47.542311], [-122.332443, 47.542317], [-122.332303, 47.542317], [-122.332251, 47.542317], [-122.332251, 47.542345], [-122.332211, 47.542345], [-122.332017, 47.542346], [-122.331701, 47.542346], [-122.331336, 47.542346], [-122.33098, 47.542346], [-122.330737, 47.542348], [-122.330545, 47.542352], [-122.330294, 47.542356], [-122.330139, 47.54236], [-122.330075, 47.542356], [-122.330004, 47.542352], [-122.329964, 47.542359], [-122.329919, 47.542381], [-122.329886, 47.542402], [-122.329871, 47.542425], [-122.329863, 47.542461], [-122.329899, 47.542486], [-122.329941, 47.5425], [-122.329979, 47.542519], [-122.33001, 47.542551], [-122.330027, 47.542583], [-122.330034, 47.542627], [-122.330034, 47.542668], [-122.330036, 47.542715], [-122.330047, 47.542778], [-122.330058, 47.542834], [-122.330073, 47.542904], [-122.330087, 47.54295], [-122.330102, 47.542996], [-122.330117, 47.543027], [-122.330146, 47.543063], [-122.330176, 47.543097], [-122.330195, 47.543119], [-122.33023, 47.543116], [-122.330336, 47.543104], [-122.33053, 47.543087], [-122.33075, 47.543066], [-122.330916, 47.543059], [-122.33114, 47.543041], [-122.331562, 47.542994], [-122.331828, 47.542972], [-122.331868, 47.543079], [-122.331911, 47.543092], [-122.332002, 47.543076], [-122.332055, 47.543063], [-122.332055, 47.54302], [-122.332087, 47.543006], [-122.332223, 47.542976], [-122.332348, 47.542928], [-122.332522, 47.542863], [-122.332663, 47.542808], [-122.33283, 47.542747], [-122.332863, 47.542737], [-122.332893, 47.54277], [-122.332929, 47.542808], [-122.332974, 47.542812], [-122.333012, 47.542826], [-122.333052, 47.542848], [-122.333072, 47.542875], [-122.333107, 47.542867], [-122.333091, 47.542836], [-122.333077, 47.542811], [-122.333159, 47.542802], [-122.333229, 47.542804], [-122.333289, 47.542827], [-122.333356, 47.542839], [-122.333411, 47.542861], [-122.333451, 47.542869], [-122.33348, 47.542896], [-122.333488, 47.542923], [-122.333551, 47.542929], [-122.333683, 47.542948], [-122.333731, 47.54295], [-122.333773, 47.542945], [-122.333808, 47.542937], [-122.333847, 47.542935], [-122.333925, 47.542929], [-122.333973, 47.542929], [-122.334016, 47.542933], [-122.334136, 47.542949], [-122.334178, 47.542958], [-122.33426, 47.542985], [-122.334291, 47.542999], [-122.33432, 47.543022], [-122.33437, 47.543057], [-122.334405, 47.543075], [-122.334452, 47.543101], [-122.334485, 47.543128], [-122.334504, 47.543155], [-122.334558, 47.543207], [-122.334599, 47.543263], [-122.334629, 47.543293], [-122.334686, 47.543333], [-122.33479, 47.543386], [-122.334851, 47.543412], [-122.334873, 47.543432], [-122.334894, 47.543466], [-122.334917, 47.543486], [-122.334934, 47.543508], [-122.334962, 47.543525], [-122.335015, 47.543514], [-122.335061, 47.543498], [-122.335115, 47.543493], [-122.335161, 47.543488], [-122.335213, 47.543503], [-122.335283, 47.543539], [-122.335336, 47.543569], [-122.335385, 47.543597], [-122.335456, 47.543649], [-122.335522, 47.5437], [-122.335637, 47.543793], [-122.335709, 47.543859], [-122.335728, 47.54388], [-122.335742, 47.543905], [-122.335797, 47.543963], [-122.335816, 47.543993], [-122.335837, 47.544015], [-122.335916, 47.544071], [-122.335937, 47.544093], [-122.335973, 47.544122], [-122.336016, 47.544169], [-122.336052, 47.544231], [-122.33607, 47.544258], [-122.3361, 47.544298], [-122.336122, 47.54433], [-122.336157, 47.544372], [-122.33617, 47.544399], [-122.336189, 47.54442], [-122.336226, 47.544448], [-122.336253, 47.544466], [-122.33627, 47.544506], [-122.336274, 47.544542], [-122.336272, 47.544582], [-122.336254, 47.544688], [-122.336247, 47.544715], [-122.336227, 47.544757], [-122.33621, 47.544809], [-122.336201, 47.544844], [-122.336196, 47.544926], [-122.33619, 47.544951], [-122.336177, 47.544996], [-122.336164, 47.545043], [-122.336155, 47.545076], [-122.336146, 47.545126], [-122.336126, 47.545168], [-122.336103, 47.545222], [-122.336061, 47.545296], [-122.336047, 47.545331], [-122.336047, 47.545362], [-122.336039, 47.545408], [-122.336017, 47.545446], [-122.335997, 47.545478], [-122.335979, 47.545506], [-122.33595, 47.545544], [-122.33592, 47.545587], [-122.335898, 47.545621], [-122.335884, 47.545651], [-122.335867, 47.545688], [-122.33584, 47.545724], [-122.33578, 47.545771], [-122.335757, 47.545789], [-122.335732, 47.545818], [-122.335707, 47.545862], [-122.335699, 47.545887], [-122.335682, 47.545931], [-122.335663, 47.545965], [-122.335634, 47.546005], [-122.335609, 47.546042], [-122.335593, 47.546065], [-122.335552, 47.546123], [-122.335534, 47.546149], [-122.335515, 47.546186], [-122.335492, 47.546224], [-122.33547, 47.546262], [-122.335449, 47.546293], [-122.335431, 47.546319], [-122.335389, 47.546371], [-122.335361, 47.546393], [-122.335314, 47.54643], [-122.335282, 47.546459], [-122.33525, 47.546496], [-122.335217, 47.546535], [-122.335178, 47.546582], [-122.335154, 47.546613], [-122.335126, 47.546639], [-122.335095, 47.546668], [-122.335064, 47.546701], [-122.335034, 47.546733], [-122.335016, 47.54677], [-122.335012, 47.546809], [-122.334982, 47.546863], [-122.334962, 47.546903], [-122.334921, 47.546941], [-122.3349, 47.546981], [-122.334897, 47.547013], [-122.334885, 47.547037], [-122.334872, 47.547063], [-122.334853, 47.547094], [-122.334839, 47.547122], [-122.334836, 47.547178], [-122.334863, 47.547248], [-122.334864, 47.547289], [-122.334867, 47.547316], [-122.334876, 47.54734], [-122.334881, 47.547394], [-122.334882, 47.547435], [-122.334867, 47.547474], [-122.334853, 47.547514], [-122.334845, 47.54754], [-122.334841, 47.547574], [-122.334825, 47.5476], [-122.334852, 47.547647], [-122.334916, 47.547672], [-122.334973, 47.547694], [-122.335022, 47.547705], [-122.335099, 47.547694], [-122.335148, 47.547681], [-122.335192, 47.547666], [-122.335239, 47.547647], [-122.335307, 47.547611], [-122.335339, 47.547588], [-122.335371, 47.547565], [-122.335395, 47.547541], [-122.335436, 47.547502], [-122.335455, 47.547477], [-122.335482, 47.547446], [-122.335529, 47.547419], [-122.335558, 47.547388], [-122.335585, 47.547348], [-122.335606, 47.547319], [-122.335635, 47.547278], [-122.335657, 47.547255], [-122.335704, 47.54724], [-122.335742, 47.547239], [-122.335799, 47.54722], [-122.335814, 47.547192], [-122.335786, 47.547155], [-122.335802, 47.547127], [-122.335854, 47.547072], [-122.3359, 47.547046], [-122.335925, 47.547], [-122.335957, 47.546969], [-122.335997, 47.546946], [-122.336039, 47.546927], [-122.336096, 47.546898], [-122.336122, 47.546874], [-122.336148, 47.546843], [-122.336175, 47.546814], [-122.336197, 47.546792], [-122.336218, 47.546772], [-122.336242, 47.54675], [-122.336264, 47.546697], [-122.336286, 47.546667], [-122.336352, 47.546606], [-122.336382, 47.546581], [-122.336427, 47.546553], [-122.336465, 47.546534], [-122.336518, 47.54651], [-122.336553, 47.546493], [-122.336595, 47.546465], [-122.33663, 47.546447], [-122.336668, 47.54643], [-122.336699, 47.546415], [-122.336731, 47.546401], [-122.336795, 47.546375], [-122.336837, 47.546361], [-122.336883, 47.54636], [-122.336933, 47.546405], [-122.336968, 47.546451], [-122.337007, 47.546509], [-122.337039, 47.546555], [-122.337058, 47.546589], [-122.337096, 47.546648], [-122.337125, 47.546689], [-122.337133, 47.546745], [-122.337166, 47.546765], [-122.337197, 47.54678], [-122.337228, 47.546819], [-122.337246, 47.54687], [-122.337251, 47.546898], [-122.337237, 47.546932], [-122.33724, 47.546981], [-122.33728, 47.547069], [-122.337316, 47.547132], [-122.337354, 47.547192], [-122.337388, 47.547251], [-122.337435, 47.54732], [-122.337462, 47.547356], [-122.337492, 47.547419], [-122.337528, 47.54747], [-122.337578, 47.54752], [-122.337626, 47.547569], [-122.337678, 47.54763], [-122.337712, 47.54768], [-122.337725, 47.547708], [-122.337751, 47.547765], [-122.337779, 47.547817], [-122.337815, 47.547873], [-122.337867, 47.54795], [-122.337902, 47.548], [-122.337943, 47.548071], [-122.337974, 47.548125], [-122.337998, 47.54817], [-122.338009, 47.548208], [-122.338018, 47.548232], [-122.338021, 47.548262], [-122.33806, 47.548277], [-122.33814, 47.548314], [-122.338166, 47.548345], [-122.338192, 47.5484], [-122.338221, 47.548459], [-122.338247, 47.548517], [-122.338264, 47.548555], [-122.338276, 47.548619], [-122.338292, 47.548678], [-122.338295, 47.54875], [-122.338291, 47.548797], [-122.33829, 47.548843], [-122.338295, 47.548871], [-122.338311, 47.548903], [-122.33832, 47.548934], [-122.33831, 47.549003], [-122.338282, 47.549052], [-122.338257, 47.549091], [-122.338269, 47.54912], [-122.33828, 47.549172], [-122.3383, 47.549231], [-122.338318, 47.549263], [-122.338339, 47.549315], [-122.338347, 47.549341], [-122.338362, 47.549375], [-122.338385, 47.549409], [-122.338402, 47.549445], [-122.338426, 47.549518], [-122.338448, 47.54957], [-122.338454, 47.549616], [-122.338495, 47.549655], [-122.33851, 47.549692], [-122.338524, 47.549751], [-122.338539, 47.54979], [-122.338546, 47.549829], [-122.338604, 47.549823], [-122.338675, 47.549828], [-122.338727, 47.54986], [-122.338755, 47.549889], [-122.338786, 47.549926], [-122.338824, 47.549967], [-122.338845, 47.550002], [-122.338857, 47.550041], [-122.338867, 47.550077], [-122.338873, 47.55012], [-122.338877, 47.550144], [-122.338903, 47.550166], [-122.338942, 47.550196], [-122.338961, 47.550224], [-122.338974, 47.550249], [-122.339007, 47.550305], [-122.339016, 47.55033], [-122.339012, 47.550387], [-122.339042, 47.55043], [-122.339079, 47.550476], [-122.339109, 47.550508], [-122.339151, 47.550552], [-122.339184, 47.550605], [-122.339197, 47.550641], [-122.339216, 47.550678], [-122.339238, 47.550711], [-122.339259, 47.550752], [-122.339273, 47.550799], [-122.339279, 47.550832], [-122.339305, 47.550894], [-122.339352, 47.550967], [-122.33944, 47.551038], [-122.339464, 47.551092], [-122.33952, 47.55116], [-122.339557, 47.551226], [-122.339584, 47.551295], [-122.339599, 47.551359], [-122.339643, 47.551431], [-122.339694, 47.551501], [-122.339746, 47.551599], [-122.339784, 47.551691], [-122.339831, 47.551788], [-122.339884, 47.551883], [-122.339939, 47.551951], [-122.33998, 47.552015], [-122.340012, 47.552036], [-122.340051, 47.552072], [-122.340093, 47.552132], [-122.34011, 47.552179], [-122.340121, 47.552238], [-122.340157, 47.55229], [-122.340179, 47.55233], [-122.340193, 47.552363], [-122.340182, 47.552405], [-122.340189, 47.552443], [-122.340218, 47.55251], [-122.340243, 47.552596], [-122.340283, 47.552688], [-122.340315, 47.5528], [-122.340347, 47.552853], [-122.34039, 47.55291], [-122.340405, 47.552976], [-122.340432, 47.553066], [-122.340441, 47.553141], [-122.340459, 47.553216], [-122.340477, 47.553282], [-122.340511, 47.553343], [-122.340541, 47.553403], [-122.340582, 47.553477], [-122.340604, 47.553533], [-122.340622, 47.553619], [-122.340686, 47.553743], [-122.340707, 47.553779], [-122.340726, 47.5538], [-122.340718, 47.553843], [-122.340704, 47.553905], [-122.340673, 47.554032], [-122.340657, 47.554089], [-122.34067, 47.554135], [-122.340683, 47.554188], [-122.340707, 47.554248], [-122.340738, 47.554339], [-122.340747, 47.554393], [-122.340751, 47.554483], [-122.340743, 47.554544], [-122.340756, 47.554598], [-122.340812, 47.554655], [-122.34083, 47.554693], [-122.340868, 47.554717], [-122.340965, 47.554753], [-122.341031, 47.554771], [-122.341145, 47.554802], [-122.341222, 47.554831], [-122.341299, 47.554876], [-122.341365, 47.554864], [-122.341442, 47.554845], [-122.341488, 47.554841], [-122.341537, 47.554916], [-122.34158, 47.555006], [-122.34161, 47.555061], [-122.341543, 47.555081], [-122.34155, 47.55511], [-122.341623, 47.555093], [-122.341651, 47.555138], [-122.341695, 47.555227], [-122.341782, 47.555395], [-122.341818, 47.555475], [-122.341868, 47.555548], [-122.341912, 47.55563], [-122.341808, 47.555656], [-122.341701, 47.555683], [-122.341653, 47.555679], [-122.341556, 47.555664], [-122.341465, 47.555657], [-122.341388, 47.555658], [-122.341332, 47.555662], [-122.34132, 47.555716], [-122.341314, 47.555774], [-122.341314, 47.555812], [-122.341394, 47.555832], [-122.341536, 47.555859], [-122.341656, 47.555875], [-122.341744, 47.555882], [-122.341794, 47.5559], [-122.341795, 47.555952], [-122.341803, 47.555997], [-122.341797, 47.556064], [-122.341787, 47.556108]]]]
    },
    "properties": {
      "neighbourhood": "Georgetown",
      "neighbourhood_group": "Other neighborhoods"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.34231, 47.540258], [-122.337302, 47.540643], [-122.337259, 47.540644], [-122.337216, 47.540646], [-122.337173, 47.540648], [-122.33713, 47.540652], [-122.337087, 47.540657], [-122.337045, 47.540663], [-122.337003, 47.540669], [-122.336961, 47.540677], [-122.33692, 47.540685], [-122.336879, 47.540695], [-122.336838, 47.540705], [-122.336798, 47.540716], [-122.336759, 47.540728], [-122.33672, 47.540741], [-122.336682, 47.540755], [-122.336644, 47.540769], [-122.336607, 47.540785], [-122.336571, 47.540801], [-122.336536, 47.540818], [-122.336502, 47.540836], [-122.336468, 47.540855], [-122.336435, 47.540874], [-122.336404, 47.540894], [-122.336373, 47.540915], [-122.336344, 47.540936], [-122.336315, 47.540958], [-122.336287, 47.54098], [-122.336261, 47.541004], [-122.336235, 47.541028], [-122.336211, 47.541052], [-122.336189, 47.541077], [-122.336167, 47.541102], [-122.336146, 47.541128], [-122.336127, 47.541154], [-122.336109, 47.541181], [-122.336092, 47.541208], [-122.336077, 47.541235], [-122.336063, 47.541263], [-122.335724, 47.541869], [-122.335712, 47.541897], [-122.3357, 47.541925], [-122.335687, 47.541953], [-122.335672, 47.541981], [-122.335657, 47.542008], [-122.33564, 47.542035], [-122.335622, 47.542062], [-122.335602, 47.542088], [-122.335582, 47.542114], [-122.335561, 47.542139], [-122.335538, 47.542164], [-122.335517, 47.542187], [-122.335472, 47.542156], [-122.335444, 47.542139], [-122.335386, 47.542105], [-122.335334, 47.54207], [-122.335285, 47.542035], [-122.335255, 47.541999], [-122.335291, 47.541978], [-122.33533, 47.541962], [-122.33536, 47.541927], [-122.335346, 47.541904], [-122.335283, 47.54183], [-122.335259, 47.54181], [-122.335219, 47.541763], [-122.335203, 47.541737], [-122.335114, 47.541603], [-122.335079, 47.541542], [-122.335005, 47.541411], [-122.334978, 47.54137], [-122.33497, 47.541325], [-122.334988, 47.541189], [-122.334995, 47.541147], [-122.334987, 47.541066], [-122.334923, 47.541066], [-122.334842, 47.541067], [-122.334777, 47.541066], [-122.334656, 47.541065], [-122.334598, 47.541061], [-122.33446, 47.541054], [-122.334409, 47.541053], [-122.334369, 47.541055], [-122.334332, 47.541055], [-122.334297, 47.541053], [-122.334253, 47.541037], [-122.334227, 47.541014], [-122.334168, 47.540974], [-122.334131, 47.54095], [-122.334088, 47.540919], [-122.334066, 47.540899], [-122.334032, 47.540886], [-122.333961, 47.540831], [-122.333917, 47.540802], [-122.333881, 47.54078], [-122.333824, 47.540752], [-122.333797, 47.540731], [-122.33378, 47.540709], [-122.333748, 47.540687], [-122.33362, 47.540776], [-122.333586, 47.540796], [-122.333545, 47.540778], [-122.333505, 47.540743], [-122.333475, 47.540724], [-122.333448, 47.540702], [-122.333417, 47.540679], [-122.333386, 47.540656], [-122.333356, 47.540635], [-122.333317, 47.540607], [-122.3333, 47.540583], [-122.333332, 47.540565], [-122.333357, 47.540548], [-122.333382, 47.54053], [-122.333412, 47.540505], [-122.333442, 47.540482], [-122.333415, 47.540462], [-122.333388, 47.540443], [-122.333363, 47.540425], [-122.333348, 47.540395], [-122.333365, 47.54037], [-122.333331, 47.540362], [-122.333296, 47.540348], [-122.333266, 47.540329], [-122.333233, 47.540309], [-122.333199, 47.540288], [-122.333167, 47.540266], [-122.333139, 47.540245], [-122.333112, 47.540223], [-122.333096, 47.540201], [-122.333072, 47.540176], [-122.333048, 47.540153], [-122.333018, 47.540129], [-122.332981, 47.540102], [-122.332937, 47.540072], [-122.3329, 47.540047], [-122.332871, 47.540026], [-122.332842, 47.540006], [-122.332814, 47.539986], [-122.332776, 47.53996], [-122.332745, 47.539941], [-122.332709, 47.539925], [-122.332677, 47.539909], [-122.332636, 47.539883], [-122.332592, 47.539835], [-122.33248, 47.539766], [-122.332417, 47.53973], [-122.332357, 47.539674], [-122.332308, 47.539627], [-122.332231, 47.539579], [-122.332165, 47.539532], [-122.332139, 47.539508], [-122.332099, 47.539469], [-122.332105, 47.539445], [-122.332176, 47.539443], [-122.332286, 47.539443], [-122.332418, 47.539437], [-122.332603, 47.539435], [-122.332862, 47.53944], [-122.3329, 47.539434], [-122.333001, 47.539426], [-122.333038, 47.539421], [-122.333071, 47.539409], [-122.3331, 47.539391], [-122.333133, 47.539383], [-122.333179, 47.539376], [-122.333249, 47.539369], [-122.333326, 47.539358], [-122.33332, 47.539289], [-122.3333, 47.539215], [-122.33326, 47.539204], [-122.333225, 47.539195], [-122.33318, 47.539184], [-122.333104, 47.539189], [-122.333072, 47.5392], [-122.333037, 47.539218], [-122.332991, 47.539246], [-122.332947, 47.539269], [-122.332913, 47.539281], [-122.332881, 47.539293], [-122.332816, 47.539296], [-122.332754, 47.539312], [-122.332707, 47.539315], [-122.332662, 47.539303], [-122.332612, 47.5393], [-122.332544, 47.539289], [-122.332512, 47.539274], [-122.332468, 47.539228], [-122.332457, 47.539205], [-122.332438, 47.53914], [-122.332372, 47.539137], [-122.332311, 47.539137], [-122.332259, 47.539133], [-122.332199, 47.539145], [-122.33215, 47.539151], [-122.332102, 47.539166], [-122.3321, 47.5392], [-122.33201, 47.539178], [-122.332001, 47.539146], [-122.331926, 47.539133], [-122.331819, 47.539123], [-122.331733, 47.539117], [-122.331661, 47.539113], [-122.331603, 47.539123], [-122.331503, 47.539112], [-122.331409, 47.539086], [-122.33134, 47.539059], [-122.331278, 47.539026], [-122.331234, 47.53899], [-122.331164, 47.53894], [-122.331119, 47.538886], [-122.331066, 47.538864], [-122.33101, 47.538825], [-122.330959, 47.538802], [-122.330891, 47.538784], [-122.330804, 47.538735], [-122.330744, 47.538687], [-122.330652, 47.53862], [-122.330564, 47.538555], [-122.330494, 47.538515], [-122.330448, 47.538461], [-122.330404, 47.538426], [-122.330312, 47.538355], [-122.330308, 47.538303], [-122.330364, 47.538262], [-122.330304, 47.538259], [-122.330232, 47.538245], [-122.330167, 47.538201], [-122.330122, 47.538159], [-122.330114, 47.538125], [-122.330104, 47.538098], [-122.330077, 47.538049], [-122.330032, 47.538009], [-122.329988, 47.538013], [-122.329934, 47.538004], [-122.329879, 47.53799], [-122.32981, 47.537973], [-122.329751, 47.537931], [-122.329675, 47.53789], [-122.32958, 47.53784], [-122.329528, 47.537812], [-122.32945, 47.537755], [-122.329386, 47.537695], [-122.329306, 47.537644], [-122.329259, 47.537597], [-122.329192, 47.537552], [-122.32912, 47.537506], [-122.329055, 47.537467], [-122.328986, 47.53743], [-122.328929, 47.537397], [-122.328883, 47.53736], [-122.328812, 47.537333], [-122.328782, 47.537369], [-122.32889, 47.537453], [-122.32881, 47.537507], [-122.328703, 47.537428], [-122.328667, 47.537443], [-122.328297, 47.537173], [-122.328495, 47.537056], [-122.328428, 47.537005], [-122.32842, 47.536964], [-122.328405, 47.536932], [-122.328377, 47.536905], [-122.328335, 47.53688], [-122.328275, 47.536845], [-122.328225, 47.536821], [-122.328172, 47.53683], [-122.328134, 47.536856], [-122.328075, 47.536863], [-122.328, 47.536864], [-122.32795, 47.536846], [-122.327891, 47.536812], [-122.327714, 47.536681], [-122.327662, 47.536654], [-122.327588, 47.536599], [-122.327529, 47.536578], [-122.3275, 47.536555], [-122.327497, 47.536509], [-122.327504, 47.536452], [-122.327459, 47.536411], [-122.327422, 47.536375], [-122.327387, 47.536315], [-122.327455, 47.536261], [-122.327333, 47.536193], [-122.327145, 47.536079], [-122.326816, 47.535884], [-122.326757, 47.535893], [-122.326717, 47.535901], [-122.326675, 47.535904], [-122.326502, 47.535817], [-122.326354, 47.535718], [-122.326296, 47.535659], [-122.326292, 47.535612], [-122.326299, 47.535565], [-122.32626, 47.535556], [-122.326191, 47.535539], [-122.326126, 47.53552], [-122.326043, 47.535486], [-122.325952, 47.535426], [-122.325892, 47.535345], [-122.325903, 47.535321], [-122.325927, 47.5353], [-122.32588, 47.53529], [-122.325819, 47.535276], [-122.3258, 47.535251], [-122.325795, 47.535219], [-122.325775, 47.535175], [-122.325739, 47.535144], [-122.325697, 47.535122], [-122.325592, 47.535041], [-122.325559, 47.535008], [-122.325545, 47.534979], [-122.325535, 47.534938], [-122.325521, 47.534892], [-122.325474, 47.534865], [-122.325401, 47.534894], [-122.325286, 47.534776], [-122.325248, 47.534737], [-122.325227, 47.534696], [-122.325197, 47.534661], [-122.325192, 47.534609], [-122.325192, 47.534567], [-122.325196, 47.534542], [-122.32516, 47.534529], [-122.325106, 47.534513], [-122.325067, 47.534504], [-122.324728, 47.534786], [-122.323926, 47.534315], [-122.324009, 47.534253], [-122.323979, 47.534236], [-122.32394, 47.534209], [-122.323893, 47.534176], [-122.323863, 47.534158], [-122.323818, 47.53412], [-122.323808, 47.534089], [-122.3238, 47.534066], [-122.323781, 47.534009], [-122.323734, 47.534002], [-122.32362, 47.533999], [-122.323575, 47.533983], [-122.32354, 47.533966], [-122.323509, 47.533945], [-122.32344, 47.533914], [-122.323406, 47.533901], [-122.323355, 47.533878], [-122.323301, 47.533857], [-122.32325, 47.533839], [-122.3232, 47.53381], [-122.32314, 47.533753], [-122.323094, 47.533734], [-122.323031, 47.533699], [-122.322982, 47.533686], [-122.32291, 47.533663], [-122.322849, 47.533633], [-122.322787, 47.533607], [-122.32276, 47.53359], [-122.32272, 47.533577], [-122.322692, 47.533562], [-122.322631, 47.533512], [-122.322616, 47.533485], [-122.322601, 47.533454], [-122.322583, 47.533431], [-122.322556, 47.533411], [-122.32253, 47.533389], [-122.322473, 47.533355], [-122.322446, 47.533337], [-122.322396, 47.533318], [-122.322358, 47.533311], [-122.322319, 47.533295], [-122.322286, 47.533276], [-122.322144, 47.53337], [-122.32177, 47.533132], [-122.321906, 47.533024], [-122.321892, 47.532984], [-122.321831, 47.532934], [-122.321785, 47.532903], [-122.321731, 47.532866], [-122.321669, 47.532821], [-122.321634, 47.532794], [-122.321577, 47.532764], [-122.321547, 47.532738], [-122.321509, 47.53272], [-122.32147, 47.532694], [-122.321423, 47.532675], [-122.321382, 47.532655], [-122.321349, 47.532641], [-122.321308, 47.532628], [-122.321257, 47.53262], [-122.32122, 47.532618], [-122.321172, 47.532594], [-122.321151, 47.532569], [-122.321129, 47.532547], [-122.32109, 47.532509], [-122.321064, 47.53247], [-122.32104, 47.532433], [-122.320979, 47.532371], [-122.32095, 47.532357], [-122.320898, 47.532334], [-122.320847, 47.532313], [-122.320797, 47.532297], [-122.320754, 47.532276], [-122.320692, 47.532246], [-122.320657, 47.532232], [-122.320579, 47.53221], [-122.320537, 47.532196], [-122.320488, 47.532181], [-122.320453, 47.532168], [-122.320411, 47.532155], [-122.320356, 47.53213], [-122.320301, 47.53209], [-122.320272, 47.532049], [-122.320244, 47.532009], [-122.320232, 47.53197], [-122.3202, 47.531954], [-122.320166, 47.531931], [-122.320107, 47.5319], [-122.320053, 47.531852], [-122.320021, 47.531818], [-122.320004, 47.531766], [-122.320002, 47.531741], [-122.320004, 47.531712], [-122.320015, 47.531649], [-122.320014, 47.531602], [-122.319988, 47.531572], [-122.319961, 47.531546], [-122.319926, 47.531523], [-122.31989, 47.531491], [-122.319857, 47.531467], [-122.319779, 47.531428], [-122.319726, 47.531416], [-122.319658, 47.531441], [-122.319608, 47.531452], [-122.319542, 47.531455], [-122.319501, 47.531458], [-122.319449, 47.531461], [-122.319366, 47.531463], [-122.319293, 47.531463], [-122.319241, 47.531455], [-122.319193, 47.531445], [-122.319138, 47.531423], [-122.319094, 47.531397], [-122.319072, 47.531376], [-122.319051, 47.531349], [-122.319005, 47.531295], [-122.318962, 47.531258], [-122.318936, 47.531241], [-122.318915, 47.53122], [-122.318882, 47.531205], [-122.318848, 47.531193], [-122.31877, 47.531168], [-122.318741, 47.531153], [-122.318699, 47.531123], [-122.31867, 47.531105], [-122.318638, 47.531084], [-122.318562, 47.531031], [-122.318533, 47.531002], [-122.31848, 47.530967], [-122.318483, 47.53085], [-122.318488, 47.530575], [-122.31849, 47.530411], [-122.318495, 47.530137], [-122.3185, 47.529863], [-122.318508, 47.529435], [-122.318425, 47.529434], [-122.318323, 47.529434], [-122.318121, 47.529432], [-122.31802, 47.529431], [-122.317918, 47.52943], [-122.317818, 47.52943], [-122.317564, 47.529428], [-122.31757, 47.52906], [-122.317571, 47.528999], [-122.317571, 47.528973], [-122.317584, 47.528232], [-122.317481, 47.528172], [-122.317407, 47.52815], [-122.314895, 47.527388], [-122.314707, 47.527332], [-122.314571, 47.52729], [-122.313166, 47.526941], [-122.312894, 47.526874], [-122.312088, 47.526676], [-122.311781, 47.526574], [-122.311702, 47.526548], [-122.311326, 47.526161], [-122.31088, 47.525579], [-122.310817, 47.525497], [-122.310735, 47.525389], [-122.309841, 47.524614], [-122.309786, 47.524567], [-122.309732, 47.524521], [-122.309696, 47.524427], [-122.30969, 47.524338], [-122.309805, 47.523953], [-122.309805, 47.523896], [-122.309575, 47.523251], [-122.309713, 47.522345], [-122.309675, 47.522176], [-122.309798, 47.522177], [-122.312853, 47.522186], [-122.312899, 47.522186], [-122.313479, 47.522187], [-122.31353, 47.522188], [-122.314699, 47.522191], [-122.314982, 47.52219], [-122.315104, 47.52219], [-122.315265, 47.522193], [-122.315712, 47.522194], [-122.317556, 47.522199], [-122.317554, 47.521184], [-122.317553, 47.520645], [-122.317552, 47.52031], [-122.317546, 47.518665], [-122.317749, 47.518667], [-122.318377, 47.518669], [-122.318803, 47.51867], [-122.32022, 47.518674], [-122.320341, 47.518675], [-122.320463, 47.518675], [-122.321792, 47.518677], [-122.322256, 47.518682], [-122.32308, 47.518686], [-122.323228, 47.518686], [-122.323288, 47.518686], [-122.324069, 47.518688], [-122.324132, 47.518688], [-122.32479, 47.51869], [-122.324915, 47.51869], [-122.324977, 47.51869], [-122.325036, 47.51869], [-122.325879, 47.518691], [-122.32588, 47.51936], [-122.325882, 47.519936], [-122.325883, 47.520512], [-122.325884, 47.52091], [-122.329428, 47.520905], [-122.32948, 47.520905], [-122.329649, 47.520905], [-122.330918, 47.5209], [-122.332193, 47.520874], [-122.334256, 47.520871], [-122.334524, 47.520904], [-122.334662, 47.522317], [-122.334755, 47.52429], [-122.334845, 47.525437], [-122.334954, 47.526678], [-122.334368, 47.528128], [-122.334811, 47.530982], [-122.334899, 47.535464], [-122.334939, 47.536155], [-122.335665, 47.536589], [-122.336956, 47.537433], [-122.340229, 47.539287], [-122.341617, 47.539963], [-122.34231, 47.540258]]]]
    },
    "properties": {
      "neighbourhood": "South Park",
      "neighbourhood_group": "Other neighborhoods"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.376622, 47.537397], [-122.372598, 47.537385], [-122.370479, 47.537368], [-122.368421, 47.537373], [-122.367471, 47.537351], [-122.367317, 47.537193], [-122.367074, 47.536962], [-122.365845, 47.536631], [-122.365853, 47.535546], [-122.368477, 47.535561], [-122.368404, 47.533656], [-122.366713, 47.533696], [-122.365806, 47.533663], [-122.36584, 47.531878], [-122.366297, 47.531875], [-122.367146, 47.531891], [-122.36719, 47.529963], [-122.367145, 47.528302], [-122.365844, 47.528295], [-122.365829, 47.526492], [-122.364526, 47.526489], [-122.364532, 47.52485], [-122.364525, 47.52103], [-122.36569, 47.521026], [-122.367227, 47.52103], [-122.367262, 47.517379], [-122.368671, 47.517395], [-122.370027, 47.51741], [-122.370683, 47.517417], [-122.371366, 47.517427], [-122.373427, 47.517454], [-122.374575, 47.517462], [-122.375998, 47.517474], [-122.376896, 47.517489], [-122.376883, 47.518804], [-122.376791, 47.520876], [-122.376732, 47.522948], [-122.376673, 47.524997], [-122.376633, 47.527074], [-122.376653, 47.52829], [-122.376667, 47.52911], [-122.37666, 47.531181], [-122.376653, 47.533252], [-122.376655, 47.535329], [-122.376622, 47.537397]]]]
    },
    "properties": {
      "neighbourhood": "Roxhill",
      "neighbourhood_group": "Delridge"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.34231, 47.540258], [-122.341617, 47.539963], [-122.340229, 47.539287], [-122.336956, 47.537433], [-122.335665, 47.536589], [-122.334939, 47.536155], [-122.334899, 47.535464], [-122.334811, 47.530982], [-122.334368, 47.528128], [-122.334954, 47.526678], [-122.334845, 47.525437], [-122.334755, 47.52429], [-122.334662, 47.522317], [-122.334524, 47.520904], [-122.334256, 47.520871], [-122.332193, 47.520874], [-122.330918, 47.5209], [-122.329915, 47.519566], [-122.329688, 47.518459], [-122.329595, 47.518277], [-122.32962, 47.517865], [-122.329612, 47.517442], [-122.329603, 47.51739], [-122.32958, 47.517339], [-122.329542, 47.517292], [-122.329492, 47.517252], [-122.329432, 47.517218], [-122.329363, 47.517193], [-122.329288, 47.517177], [-122.329209, 47.517172], [-122.329175, 47.517128], [-122.328637, 47.516509], [-122.327532, 47.514395], [-122.32733, 47.51401], [-122.328186, 47.514004], [-122.328473, 47.514002], [-122.328676, 47.514001], [-122.328804, 47.514], [-122.329004, 47.513998], [-122.329445, 47.513998], [-122.330077, 47.513999], [-122.330207, 47.514247], [-122.330219, 47.51427], [-122.330231, 47.514294], [-122.330243, 47.514317], [-122.330256, 47.51434], [-122.330268, 47.514363], [-122.330281, 47.514386], [-122.330294, 47.514409], [-122.330308, 47.514432], [-122.330323, 47.514455], [-122.330337, 47.514478], [-122.330352, 47.5145], [-122.330368, 47.514522], [-122.330384, 47.514546], [-122.330401, 47.514568], [-122.330418, 47.51459], [-122.330434, 47.514612], [-122.330451, 47.514634], [-122.330469, 47.514656], [-122.330487, 47.514677], [-122.330505, 47.514699], [-122.330524, 47.51472], [-122.330543, 47.514741], [-122.330562, 47.514762], [-122.330582, 47.514782], [-122.330603, 47.514803], [-122.330624, 47.514823], [-122.33067, 47.514868], [-122.330974, 47.515168], [-122.331382, 47.515134], [-122.331403, 47.5151], [-122.333495, 47.514727], [-122.333633, 47.514768], [-122.33359, 47.51453], [-122.333973, 47.514524], [-122.334357, 47.514525], [-122.334268, 47.514022], [-122.334392, 47.514021], [-122.335706, 47.514007], [-122.337042, 47.513993], [-122.337124, 47.515017], [-122.337196, 47.515428], [-122.33722, 47.515563], [-122.337239, 47.515667], [-122.337283, 47.515917], [-122.337522, 47.517258], [-122.337928, 47.51726], [-122.340131, 47.517273], [-122.341601, 47.517281], [-122.342876, 47.517289], [-122.344149, 47.517296], [-122.345424, 47.517303], [-122.346697, 47.517311], [-122.34797, 47.517319], [-122.349244, 47.517326], [-122.350653, 47.517334], [-122.351735, 47.517341], [-122.352876, 47.517347], [-122.354017, 47.517354], [-122.35503, 47.51736], [-122.355059, 47.518009], [-122.355107, 47.519086], [-122.355131, 47.520809], [-122.355133, 47.520937], [-122.355062, 47.522791], [-122.355027, 47.52464], [-122.35507, 47.525588], [-122.354967, 47.526483], [-122.354985, 47.527377], [-122.354983, 47.528273], [-122.354985, 47.530006], [-122.354984, 47.531509], [-122.355072, 47.533689], [-122.353936, 47.533689], [-122.352626, 47.534174], [-122.352594, 47.534192], [-122.352562, 47.534208], [-122.352528, 47.534224], [-122.352493, 47.534239], [-122.352457, 47.534252], [-122.35242, 47.534264], [-122.352383, 47.534275], [-122.352344, 47.534285], [-122.352305, 47.534294], [-122.352265, 47.534302], [-122.352226, 47.534308], [-122.352185, 47.534313], [-122.352144, 47.534317], [-122.352104, 47.534319], [-122.352063, 47.53432], [-122.352022, 47.53432], [-122.351981, 47.534319], [-122.35194, 47.534316], [-122.351899, 47.534312], [-122.351859, 47.534307], [-122.351819, 47.534301], [-122.351779, 47.534293], [-122.351741, 47.534284], [-122.351702, 47.534274], [-122.351665, 47.534263], [-122.351628, 47.53425], [-122.350552, 47.534012], [-122.349433, 47.534027], [-122.347179, 47.534083], [-122.34716, 47.535989], [-122.347004, 47.536811], [-122.346609, 47.53848], [-122.346603, 47.538508], [-122.346596, 47.538535], [-122.34659, 47.538563], [-122.346582, 47.53859], [-122.346574, 47.538617], [-122.346564, 47.538644], [-122.346554, 47.538671], [-122.346544, 47.538698], [-122.346533, 47.538725], [-122.346521, 47.538752], [-122.346509, 47.538778], [-122.346496, 47.538805], [-122.346482, 47.538831], [-122.346468, 47.538857], [-122.346453, 47.538883], [-122.346437, 47.538908], [-122.346421, 47.538934], [-122.346404, 47.538959], [-122.346387, 47.538984], [-122.346368, 47.539009], [-122.34635, 47.539034], [-122.34633, 47.539059], [-122.346311, 47.539083], [-122.34629, 47.539107], [-122.346269, 47.539131], [-122.346247, 47.539154], [-122.346225, 47.539178], [-122.346202, 47.539201], [-122.346179, 47.539224], [-122.346154, 47.539246], [-122.34613, 47.539268], [-122.346105, 47.53929], [-122.346079, 47.539312], [-122.346053, 47.539333], [-122.346026, 47.539355], [-122.345999, 47.539375], [-122.345971, 47.539396], [-122.345943, 47.539416], [-122.345914, 47.539436], [-122.345885, 47.539455], [-122.345855, 47.539475], [-122.345825, 47.539493], [-122.345794, 47.539512], [-122.345763, 47.53953], [-122.345732, 47.539548], [-122.3457, 47.539565], [-122.345667, 47.539582], [-122.345635, 47.539599], [-122.345601, 47.539615], [-122.345568, 47.539631], [-122.345534, 47.539647], [-122.345499, 47.539662], [-122.345464, 47.539677], [-122.345429, 47.539691], [-122.345394, 47.539705], [-122.345358, 47.539719], [-122.345322, 47.539732], [-122.345284, 47.539745], [-122.34472, 47.539911], [-122.342635, 47.540402], [-122.342428, 47.54045], [-122.34231, 47.540258]]]]
    },
    "properties": {
      "neighbourhood": "Highland Park",
      "neighbourhood_group": "Delridge"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.292839, 47.641811], [-122.2927, 47.641836], [-122.292546, 47.641867], [-122.292421, 47.641923], [-122.29227, 47.641988], [-122.292158, 47.642058], [-122.292037, 47.64212], [-122.291964, 47.642121], [-122.291786, 47.642064], [-122.291594, 47.642004], [-122.29136, 47.641964], [-122.291119, 47.641941], [-122.290912, 47.64193], [-122.29068, 47.641965], [-122.290601, 47.64198], [-122.29042, 47.642016], [-122.290173, 47.64207], [-122.28993, 47.642126], [-122.289694, 47.642185], [-122.289861, 47.642186], [-122.289958, 47.642241], [-122.289913, 47.642326], [-122.289762, 47.642413], [-122.289608, 47.64251], [-122.28953, 47.642614], [-122.289424, 47.64272], [-122.28931, 47.642811], [-122.289149, 47.642772], [-122.289003, 47.642718], [-122.28893, 47.642727], [-122.288833, 47.642734], [-122.288663, 47.642812], [-122.288551, 47.642913], [-122.28844, 47.642986], [-122.288343, 47.642921], [-122.288326, 47.6428], [-122.288346, 47.642645], [-122.288408, 47.642484], [-122.288537, 47.642371], [-122.288524, 47.64228], [-122.288637, 47.642167], [-122.288753, 47.642096], [-122.288731, 47.642051], [-122.288447, 47.642126], [-122.288243, 47.642264], [-122.28822, 47.642357], [-122.288332, 47.642385], [-122.288429, 47.642313], [-122.288454, 47.642342], [-122.288358, 47.642445], [-122.288253, 47.642523], [-122.288238, 47.642556], [-122.288172, 47.642667], [-122.288097, 47.64272], [-122.288044, 47.642781], [-122.287976, 47.642828], [-122.287932, 47.642897], [-122.287775, 47.64295], [-122.287589, 47.643028], [-122.28745, 47.643156], [-122.287342, 47.64326], [-122.287205, 47.643371], [-122.28709, 47.643468], [-122.286981, 47.643591], [-122.286915, 47.643708], [-122.286875, 47.64381], [-122.286786, 47.643903], [-122.286627, 47.643897], [-122.28647, 47.643882], [-122.286305, 47.643883], [-122.286122, 47.64385], [-122.285954, 47.643841], [-122.285801, 47.643762], [-122.285694, 47.643706], [-122.285671, 47.643616], [-122.285684, 47.643546], [-122.285639, 47.643439], [-122.28553, 47.643362], [-122.28551, 47.643261], [-122.285544, 47.643164], [-122.285559, 47.643109], [-122.285627, 47.643025], [-122.285567, 47.642711], [-122.28547, 47.642607], [-122.285478, 47.64273], [-122.285419, 47.642782], [-122.285353, 47.64287], [-122.285306, 47.642935], [-122.285256, 47.642961], [-122.285183, 47.642896], [-122.285127, 47.642821], [-122.285069, 47.642736], [-122.284978, 47.642715], [-122.284803, 47.642707], [-122.2847, 47.642705], [-122.284655, 47.642662], [-122.284615, 47.642587], [-122.284527, 47.642575], [-122.284385, 47.642566], [-122.284382, 47.642615], [-122.284357, 47.642696], [-122.284274, 47.642683], [-122.284142, 47.642675], [-122.284029, 47.642671], [-122.283894, 47.642668], [-122.283759, 47.642663], [-122.283632, 47.642661], [-122.283529, 47.642676], [-122.283441, 47.642682], [-122.283323, 47.642668], [-122.283206, 47.64266], [-122.283124, 47.642635], [-122.282927, 47.642545], [-122.282806, 47.642525], [-122.282704, 47.642506], [-122.282538, 47.642512], [-122.282404, 47.642514], [-122.282129, 47.642418], [-122.281974, 47.642378], [-122.281877, 47.642346], [-122.281745, 47.642379], [-122.281664, 47.642459], [-122.281581, 47.642553], [-122.281519, 47.642624], [-122.281429, 47.642666], [-122.281297, 47.642701], [-122.281167, 47.642701], [-122.281009, 47.642696], [-122.280838, 47.642716], [-122.280667, 47.642724], [-122.280444, 47.642721], [-122.280254, 47.642722], [-122.280074, 47.64273], [-122.279902, 47.642717], [-122.279806, 47.642739], [-122.279651, 47.642774], [-122.279494, 47.642803], [-122.279395, 47.642826], [-122.279289, 47.642836], [-122.279221, 47.642787], [-122.279129, 47.64276], [-122.278994, 47.642758], [-122.27895, 47.642755], [-122.278853, 47.642748], [-122.278687, 47.642754], [-122.27852, 47.642757], [-122.27845, 47.642779], [-122.278423, 47.642839], [-122.278275, 47.642816], [-122.278135, 47.642781], [-122.277994, 47.642733], [-122.277868, 47.642668], [-122.277739, 47.642576], [-122.277648, 47.642491], [-122.277416, 47.642279], [-122.277304, 47.642164], [-122.27721, 47.642049], [-122.277148, 47.641928], [-122.277102, 47.641794], [-122.277074, 47.641682], [-122.276954, 47.641451], [-122.276866, 47.641351], [-122.276709, 47.641298], [-122.276536, 47.641254], [-122.276419, 47.641238], [-122.276318, 47.641196], [-122.276263, 47.640992], [-122.27628, 47.640892], [-122.27629, 47.640828], [-122.276044, 47.640827], [-122.275987, 47.640826], [-122.275942, 47.640825], [-122.275884, 47.640823], [-122.275807, 47.64082], [-122.27573, 47.640822], [-122.275651, 47.640823], [-122.27555, 47.640823], [-122.275438, 47.640822], [-122.275314, 47.640812], [-122.275283, 47.640782], [-122.275256, 47.640746], [-122.275237, 47.640719], [-122.275232, 47.640672], [-122.275256, 47.640628], [-122.275301, 47.640586], [-122.275392, 47.640585], [-122.275507, 47.640586], [-122.275634, 47.640585], [-122.275767, 47.640588], [-122.275886, 47.640592], [-122.276014, 47.640593], [-122.276128, 47.640595], [-122.276262, 47.640596], [-122.276316, 47.640588], [-122.276323, 47.640547], [-122.276338, 47.640511], [-122.276379, 47.640485], [-122.276496, 47.640486], [-122.276527, 47.640437], [-122.2765, 47.640404], [-122.27642, 47.640391], [-122.276422, 47.640322], [-122.27645, 47.640292], [-122.276486, 47.640271], [-122.276417, 47.640251], [-122.276339, 47.640193], [-122.276328, 47.640137], [-122.276319, 47.640092], [-122.276233, 47.640089], [-122.276156, 47.640089], [-122.276097, 47.640089], [-122.276044, 47.640088], [-122.275985, 47.640088], [-122.276003, 47.640058], [-122.275983, 47.640033], [-122.275886, 47.64003], [-122.275774, 47.640026], [-122.275651, 47.640023], [-122.275382, 47.640004], [-122.275289, 47.639997], [-122.275276, 47.63996], [-122.27527, 47.639871], [-122.275269, 47.639785], [-122.275325, 47.639786], [-122.275405, 47.639788], [-122.275428, 47.63976], [-122.275476, 47.639782], [-122.275543, 47.639781], [-122.275629, 47.639771], [-122.275673, 47.639794], [-122.27576, 47.639798], [-122.275804, 47.639775], [-122.275882, 47.639775], [-122.276007, 47.639775], [-122.27602, 47.639751], [-122.276122, 47.639752], [-122.276234, 47.639763], [-122.276234, 47.639794], [-122.276275, 47.639793], [-122.276371, 47.639794], [-122.276365, 47.639758], [-122.276546, 47.639753], [-122.276554, 47.639677], [-122.276563, 47.639536], [-122.276571, 47.639444], [-122.276571, 47.639417], [-122.276573, 47.639312], [-122.276565, 47.639127], [-122.27656, 47.638947], [-122.276567, 47.638775], [-122.276566, 47.638714], [-122.276562, 47.638685], [-122.276567, 47.638612], [-122.276575, 47.638539], [-122.276544, 47.638451], [-122.276489, 47.638452], [-122.276412, 47.638452], [-122.276306, 47.638445], [-122.276093, 47.638445], [-122.276097, 47.638409], [-122.27606, 47.638409], [-122.275976, 47.638401], [-122.275874, 47.638399], [-122.275812, 47.638389], [-122.275825, 47.638242], [-122.275829, 47.6382], [-122.275904, 47.638203], [-122.276004, 47.6382], [-122.276091, 47.638201], [-122.276091, 47.638161], [-122.276091, 47.638116], [-122.276099, 47.63806], [-122.276034, 47.638065], [-122.275973, 47.638063], [-122.275876, 47.638062], [-122.275781, 47.638057], [-122.275742, 47.638055], [-122.275745, 47.638011], [-122.275745, 47.637973], [-122.275753, 47.637949], [-122.275715, 47.63795], [-122.275624, 47.637955], [-122.275613, 47.637992], [-122.275557, 47.637991], [-122.275483, 47.637982], [-122.275485, 47.637926], [-122.275433, 47.637913], [-122.275438, 47.637881], [-122.275443, 47.637827], [-122.275488, 47.63783], [-122.275592, 47.637828], [-122.27574, 47.63783], [-122.275867, 47.637832], [-122.276026, 47.637835], [-122.27612, 47.637839], [-122.27612, 47.637807], [-122.275995, 47.637809], [-122.275934, 47.637809], [-122.275857, 47.6378], [-122.275809, 47.637784], [-122.27581, 47.637726], [-122.275809, 47.637648], [-122.275814, 47.63757], [-122.27582, 47.637496], [-122.275839, 47.637465], [-122.275845, 47.637424], [-122.275891, 47.637426], [-122.275961, 47.637448], [-122.275986, 47.637474], [-122.276052, 47.637473], [-122.276126, 47.637475], [-122.276134, 47.637427], [-122.276135, 47.637383], [-122.276141, 47.637286], [-122.276141, 47.637197], [-122.276155, 47.637137], [-122.276159, 47.637077], [-122.276157, 47.637032], [-122.276155, 47.636989], [-122.276173, 47.636929], [-122.27617, 47.636887], [-122.276179, 47.636821], [-122.276228, 47.636772], [-122.276299, 47.636712], [-122.276356, 47.636648], [-122.276399, 47.636562], [-122.276408, 47.636483], [-122.276387, 47.636416], [-122.276403, 47.636369], [-122.276436, 47.636317], [-122.276462, 47.636242], [-122.276462, 47.636187], [-122.276466, 47.636126], [-122.276473, 47.636044], [-122.27649, 47.635924], [-122.276498, 47.635813], [-122.276497, 47.635702], [-122.276511, 47.635502], [-122.276496, 47.635388], [-122.276474, 47.635297], [-122.27644, 47.635196], [-122.276442, 47.635068], [-122.276441, 47.635007], [-122.276441, 47.634857], [-122.276433, 47.634812], [-122.276405, 47.634753], [-122.276369, 47.634684], [-122.276329, 47.634645], [-122.276258, 47.63457], [-122.27618, 47.63451], [-122.276122, 47.634473], [-122.276072, 47.634439], [-122.276057, 47.634415], [-122.276055, 47.634304], [-122.276066, 47.634139], [-122.276072, 47.63406], [-122.276069, 47.634025], [-122.276091, 47.633995], [-122.27613, 47.633963], [-122.276055, 47.633912], [-122.275942, 47.633847], [-122.275997, 47.6338], [-122.276109, 47.633705], [-122.276152, 47.633728], [-122.276212, 47.633702], [-122.276211, 47.633638], [-122.276208, 47.633574], [-122.276131, 47.633574], [-122.276028, 47.633578], [-122.276022, 47.633609], [-122.275919, 47.633617], [-122.275824, 47.633612], [-122.275824, 47.633516], [-122.27583, 47.633447], [-122.275869, 47.633344], [-122.275918, 47.633343], [-122.276001, 47.633343], [-122.276128, 47.633339], [-122.276132, 47.633305], [-122.276146, 47.633231], [-122.276183, 47.633232], [-122.276244, 47.63323], [-122.276349, 47.633229], [-122.276391, 47.633232], [-122.276394, 47.633202], [-122.276398, 47.633176], [-122.276405, 47.633151], [-122.276426, 47.633119], [-122.276451, 47.633096], [-122.276461, 47.633057], [-122.276462, 47.632994], [-122.276447, 47.632962], [-122.276439, 47.632937], [-122.276438, 47.632894], [-122.276439, 47.632856], [-122.276439, 47.632815], [-122.276436, 47.632783], [-122.276441, 47.632753], [-122.276462, 47.632714], [-122.276506, 47.632695], [-122.276517, 47.63267], [-122.276529, 47.632637], [-122.276543, 47.632599], [-122.276565, 47.63254], [-122.276566, 47.632485], [-122.276558, 47.632442], [-122.276539, 47.63241], [-122.276518, 47.632383], [-122.276515, 47.632353], [-122.276518, 47.632296], [-122.276512, 47.632243], [-122.276506, 47.63216], [-122.276518, 47.632134], [-122.276546, 47.632071], [-122.276572, 47.632012], [-122.2766, 47.63194], [-122.276633, 47.631853], [-122.276674, 47.631791], [-122.276679, 47.631763], [-122.276693, 47.631718], [-122.276737, 47.631649], [-122.276765, 47.631588], [-122.276772, 47.631514], [-122.27675, 47.631471], [-122.276738, 47.631422], [-122.276732, 47.631396], [-122.276758, 47.63137], [-122.276812, 47.631327], [-122.276871, 47.631257], [-122.276897, 47.631222], [-122.276932, 47.63116], [-122.276991, 47.631082], [-122.277043, 47.631025], [-122.277071, 47.630992], [-122.277086, 47.630967], [-122.277101, 47.63094], [-122.277093, 47.630904], [-122.27708, 47.630878], [-122.277045, 47.630861], [-122.277006, 47.630843], [-122.277021, 47.630821], [-122.277027, 47.630778], [-122.277018, 47.630731], [-122.277004, 47.630688], [-122.276996, 47.630662], [-122.27699, 47.630623], [-122.276998, 47.630585], [-122.277019, 47.630554], [-122.277082, 47.630553], [-122.277153, 47.630552], [-122.277199, 47.630545], [-122.277242, 47.630539], [-122.277281, 47.630523], [-122.277322, 47.630503], [-122.277376, 47.630489], [-122.277422, 47.630467], [-122.277453, 47.630444], [-122.277496, 47.630434], [-122.27754, 47.63041], [-122.27758, 47.630381], [-122.277629, 47.630344], [-122.277675, 47.630311], [-122.277714, 47.630284], [-122.277767, 47.630249], [-122.277812, 47.63022], [-122.277869, 47.630176], [-122.27791, 47.630153], [-122.277949, 47.630128], [-122.277997, 47.630102], [-122.278052, 47.630064], [-122.278076, 47.630034], [-122.278096, 47.630011], [-122.278115, 47.629988], [-122.27815, 47.629941], [-122.278172, 47.62989], [-122.278192, 47.629845], [-122.27823, 47.62984], [-122.278265, 47.629817], [-122.278296, 47.629789], [-122.278326, 47.629766], [-122.278352, 47.629735], [-122.278383, 47.629697], [-122.27841, 47.629659], [-122.27843, 47.629628], [-122.278455, 47.629601], [-122.278492, 47.629556], [-122.278519, 47.629519], [-122.278554, 47.629473], [-122.278582, 47.629441], [-122.278608, 47.629412], [-122.278633, 47.629378], [-122.278657, 47.629348], [-122.278686, 47.62931], [-122.278711, 47.629276], [-122.278733, 47.629238], [-122.278766, 47.629168], [-122.278785, 47.629129], [-122.278809, 47.629069], [-122.278819, 47.629013], [-122.278809, 47.628969], [-122.278757, 47.628969], [-122.278716, 47.628969], [-122.278655, 47.628968], [-122.278579, 47.628969], [-122.278508, 47.628968], [-122.278423, 47.628967], [-122.278349, 47.62895], [-122.278348, 47.628904], [-122.278348, 47.628876], [-122.278349, 47.628844], [-122.278349, 47.628808], [-122.278342, 47.628763], [-122.278337, 47.628723], [-122.278339, 47.628687], [-122.278343, 47.628638], [-122.278389, 47.628638], [-122.27845, 47.628638], [-122.278509, 47.628638], [-122.278584, 47.62864], [-122.278671, 47.628641], [-122.278759, 47.628641], [-122.278881, 47.628643], [-122.278967, 47.628642], [-122.278973, 47.628591], [-122.278973, 47.628564], [-122.278973, 47.628529], [-122.279977, 47.628529], [-122.279974, 47.628618], [-122.279958, 47.629728], [-122.281348, 47.629743], [-122.281333, 47.630957], [-122.282611, 47.630953], [-122.285132, 47.630987], [-122.285421, 47.630788], [-122.287557, 47.629336], [-122.288775, 47.628498], [-122.292189, 47.626186], [-122.292436, 47.62602], [-122.292515, 47.626288], [-122.292529, 47.626311], [-122.292552, 47.626331], [-122.292578, 47.626347], [-122.292605, 47.626363], [-122.292631, 47.62638], [-122.292655, 47.626398], [-122.292678, 47.626416], [-122.292701, 47.626435], [-122.292723, 47.626454], [-122.292743, 47.626474], [-122.292762, 47.626495], [-122.292781, 47.626515], [-122.292797, 47.626537], [-122.292814, 47.626558], [-122.292828, 47.62658], [-122.292842, 47.626603], [-122.292854, 47.626626], [-122.292864, 47.626649], [-122.292875, 47.626672], [-122.292885, 47.626695], [-122.292894, 47.626719], [-122.292904, 47.626742], [-122.292912, 47.626765], [-122.29292, 47.626789], [-122.292927, 47.626813], [-122.292934, 47.626836], [-122.29294, 47.62686], [-122.292946, 47.626884], [-122.292951, 47.626908], [-122.292955, 47.626932], [-122.29296, 47.626956], [-122.292963, 47.62698], [-122.292967, 47.627004], [-122.29297, 47.627028], [-122.292974, 47.627052], [-122.292977, 47.627076], [-122.29298, 47.6271], [-122.292983, 47.627124], [-122.292986, 47.627148], [-122.292989, 47.627172], [-122.292991, 47.627196], [-122.292994, 47.62722], [-122.292996, 47.627244], [-122.292998, 47.627268], [-122.293003, 47.627292], [-122.293011, 47.627316], [-122.293019, 47.627339], [-122.293028, 47.627363], [-122.293038, 47.627386], [-122.29305, 47.62741], [-122.293061, 47.627433], [-122.293074, 47.627455], [-122.293087, 47.627478], [-122.293102, 47.6275], [-122.293117, 47.627522], [-122.293132, 47.627543], [-122.293149, 47.627565], [-122.293166, 47.627586], [-122.293184, 47.627607], [-122.293203, 47.627628], [-122.293223, 47.627649], [-122.293244, 47.627669], [-122.293265, 47.627689], [-122.293287, 47.627708], [-122.293309, 47.627727], [-122.293332, 47.627746], [-122.293356, 47.627764], [-122.29338, 47.627781], [-122.293418, 47.627806], [-122.293454, 47.62783], [-122.293491, 47.627853], [-122.293529, 47.627876], [-122.293567, 47.627899], [-122.293606, 47.62792], [-122.293645, 47.627942], [-122.293685, 47.627963], [-122.293725, 47.627983], [-122.293766, 47.628003], [-122.293807, 47.628023], [-122.293849, 47.628042], [-122.293891, 47.628061], [-122.293934, 47.628079], [-122.293977, 47.628096], [-122.294021, 47.628113], [-122.294065, 47.62813], [-122.29411, 47.628146], [-122.294155, 47.628161], [-122.2942, 47.628176], [-122.294246, 47.628191], [-122.294292, 47.628205], [-122.294345, 47.62822], [-122.294961, 47.628427], [-122.295325, 47.628553], [-122.295356, 47.628567], [-122.295386, 47.62858], [-122.295416, 47.628594], [-122.295445, 47.628608], [-122.295475, 47.628624], [-122.295503, 47.628639], [-122.295532, 47.628655], [-122.295559, 47.62867], [-122.295586, 47.628686], [-122.295614, 47.628702], [-122.29564, 47.628719], [-122.295665, 47.628736], [-122.295691, 47.628753], [-122.295713, 47.628772], [-122.295734, 47.628792], [-122.295754, 47.628812], [-122.295775, 47.628832], [-122.295794, 47.628852], [-122.295813, 47.628872], [-122.295832, 47.628893], [-122.295851, 47.628913], [-122.295869, 47.628934], [-122.295887, 47.628955], [-122.295903, 47.628976], [-122.29592, 47.628998], [-122.295937, 47.629019], [-122.295953, 47.629041], [-122.295968, 47.629062], [-122.295984, 47.629084], [-122.295998, 47.629106], [-122.296012, 47.629128], [-122.296026, 47.629151], [-122.296039, 47.629173], [-122.296052, 47.629196], [-122.296064, 47.629218], [-122.296076, 47.629241], [-122.296088, 47.629264], [-122.296099, 47.629287], [-122.296279, 47.629587], [-122.296331, 47.629663], [-122.296386, 47.629739], [-122.296443, 47.629814], [-122.296502, 47.629889], [-122.296562, 47.629962], [-122.296624, 47.630036], [-122.296727, 47.630152], [-122.296745, 47.630173], [-122.296763, 47.630194], [-122.296781, 47.630215], [-122.296799, 47.630236], [-122.296817, 47.630256], [-122.296835, 47.630277], [-122.296854, 47.630298], [-122.296873, 47.630318], [-122.296892, 47.630339], [-122.296911, 47.630359], [-122.29693, 47.630379], [-122.29695, 47.630399], [-122.296969, 47.63042], [-122.296989, 47.63044], [-122.297009, 47.63046], [-122.29703, 47.630481], [-122.297051, 47.6305], [-122.297071, 47.63052], [-122.297092, 47.63054], [-122.297113, 47.630559], [-122.297134, 47.630579], [-122.297155, 47.630598], [-122.297177, 47.630618], [-122.297197, 47.630638], [-122.297211, 47.630661], [-122.297223, 47.630683], [-122.297233, 47.630707], [-122.297241, 47.63073], [-122.297247, 47.630754], [-122.297251, 47.630778], [-122.297274, 47.631316], [-122.297275, 47.631342], [-122.297275, 47.631369], [-122.297275, 47.631395], [-122.297274, 47.631421], [-122.297273, 47.631448], [-122.297271, 47.631474], [-122.297269, 47.6315], [-122.297267, 47.631527], [-122.297264, 47.631553], [-122.29726, 47.631579], [-122.297256, 47.631605], [-122.297252, 47.631632], [-122.297247, 47.631658], [-122.297242, 47.631684], [-122.297236, 47.63171], [-122.29723, 47.631736], [-122.297223, 47.631762], [-122.297216, 47.631788], [-122.297208, 47.631814], [-122.2972, 47.631839], [-122.297192, 47.631863], [-122.297074, 47.632244], [-122.297059, 47.632637], [-122.297052, 47.632861], [-122.297054, 47.632888], [-122.29706, 47.632914], [-122.297068, 47.63294], [-122.297078, 47.632966], [-122.297091, 47.632992], [-122.297107, 47.633016], [-122.297125, 47.63304], [-122.297146, 47.633063], [-122.297168, 47.633085], [-122.297193, 47.633106], [-122.297765, 47.633502], [-122.297795, 47.633519], [-122.297823, 47.633538], [-122.297848, 47.633559], [-122.297868, 47.633582], [-122.297885, 47.633606], [-122.297898, 47.633632], [-122.297906, 47.633658], [-122.29791, 47.633685], [-122.297914, 47.633821], [-122.297895, 47.634061], [-122.297896, 47.634087], [-122.297897, 47.634114], [-122.297899, 47.634141], [-122.297903, 47.634168], [-122.297907, 47.634194], [-122.297912, 47.634221], [-122.297917, 47.634248], [-122.297924, 47.634274], [-122.297931, 47.634301], [-122.297939, 47.634327], [-122.297948, 47.634353], [-122.297958, 47.634379], [-122.297968, 47.634405], [-122.29798, 47.634431], [-122.297992, 47.634456], [-122.298005, 47.634482], [-122.298018, 47.634507], [-122.298033, 47.634532], [-122.298048, 47.634557], [-122.298065, 47.634581], [-122.298417, 47.635066], [-122.298428, 47.635091], [-122.298438, 47.635117], [-122.298445, 47.635144], [-122.298452, 47.63517], [-122.298457, 47.635197], [-122.298459, 47.635224], [-122.298461, 47.63525], [-122.298461, 47.635277], [-122.298459, 47.635304], [-122.298456, 47.635331], [-122.298451, 47.635358], [-122.298445, 47.635384], [-122.298246, 47.636272], [-122.29819, 47.636567], [-122.298191, 47.636594], [-122.29819, 47.636621], [-122.298188, 47.636649], [-122.298185, 47.636676], [-122.298181, 47.636703], [-122.298173, 47.636739], [-122.298166, 47.636766], [-122.298157, 47.636793], [-122.298147, 47.636819], [-122.298136, 47.636846], [-122.298124, 47.636872], [-122.29811, 47.636898], [-122.298095, 47.636923], [-122.29808, 47.636948], [-122.298063, 47.636973], [-122.298045, 47.636998], [-122.298025, 47.637022], [-122.298005, 47.637045], [-122.297983, 47.637069], [-122.297961, 47.637091], [-122.297397, 47.637517], [-122.29714, 47.637724], [-122.297119, 47.637747], [-122.2971, 47.637771], [-122.29708, 47.637795], [-122.297062, 47.63782], [-122.297045, 47.637844], [-122.297029, 47.63787], [-122.297014, 47.637895], [-122.297, 47.637921], [-122.296987, 47.637947], [-122.296975, 47.637973], [-122.296964, 47.637999], [-122.296955, 47.638026], [-122.296946, 47.638052], [-122.296938, 47.638079], [-122.296932, 47.638106], [-122.296926, 47.638133], [-122.296922, 47.638161], [-122.296919, 47.638188], [-122.29691, 47.638757], [-122.296889, 47.6391], [-122.296891, 47.639131], [-122.296892, 47.639159], [-122.296892, 47.639186], [-122.296892, 47.639213], [-122.296892, 47.639241], [-122.296891, 47.639268], [-122.29689, 47.639296], [-122.296889, 47.639323], [-122.296887, 47.63935], [-122.296885, 47.639378], [-122.296882, 47.639405], [-122.296879, 47.639432], [-122.296876, 47.639459], [-122.296872, 47.639487], [-122.296868, 47.639514], [-122.296863, 47.639541], [-122.296859, 47.639568], [-122.296854, 47.639595], [-122.296848, 47.639623], [-122.296842, 47.63965], [-122.296836, 47.639677], [-122.296829, 47.639704], [-122.296822, 47.639731], [-122.296815, 47.639758], [-122.296807, 47.639784], [-122.296798, 47.639811], [-122.29679, 47.639838], [-122.296781, 47.639865], [-122.296772, 47.639891], [-122.296762, 47.639918], [-122.296752, 47.639944], [-122.296742, 47.639971], [-122.296731, 47.639997], [-122.296685, 47.640195], [-122.296683, 47.640222], [-122.296678, 47.640249], [-122.296671, 47.640276], [-122.296661, 47.640303], [-122.29665, 47.640329], [-122.296637, 47.640355], [-122.296622, 47.64038], [-122.296605, 47.640405], [-122.296586, 47.640429], [-122.296565, 47.640453], [-122.296423, 47.6407], [-122.29621, 47.640887], [-122.29596, 47.641032], [-122.295921, 47.641054], [-122.295889, 47.641071], [-122.295856, 47.641087], [-122.295823, 47.641103], [-122.295788, 47.641117], [-122.295753, 47.641131], [-122.295718, 47.641144], [-122.295681, 47.641156], [-122.295644, 47.641167], [-122.295607, 47.641178], [-122.295567, 47.641186], [-122.295527, 47.641191], [-122.295487, 47.641196], [-122.295447, 47.641201], [-122.295408, 47.641206], [-122.295368, 47.641211], [-122.295328, 47.641214], [-122.295288, 47.641216], [-122.295247, 47.641216], [-122.295206, 47.641215], [-122.295166, 47.641211], [-122.295127, 47.641205], [-122.295088, 47.641198], [-122.29505, 47.641188], [-122.295013, 47.641177], [-122.294977, 47.641164], [-122.294943, 47.64115], [-122.29491, 47.641134], [-122.294879, 47.641116], [-122.29485, 47.641097], [-122.294823, 47.641076], [-122.294539, 47.640827], [-122.294514, 47.640805], [-122.294487, 47.640785], [-122.294459, 47.640765], [-122.294429, 47.640747], [-122.294398, 47.640729], [-122.294365, 47.640713], [-122.294331, 47.640698], [-122.294296, 47.640684], [-122.294261, 47.640671], [-122.294224, 47.64066], [-122.294186, 47.64065], [-122.294148, 47.640641], [-122.294113, 47.640635], [-122.294074, 47.640629], [-122.294034, 47.640625], [-122.293993, 47.640622], [-122.293953, 47.640621], [-122.293912, 47.640622], [-122.293872, 47.640625], [-122.293832, 47.640629], [-122.293792, 47.640635], [-122.293754, 47.640642], [-122.293715, 47.640652], [-122.293678, 47.640662], [-122.293642, 47.640675], [-122.293607, 47.640688], [-122.293573, 47.640703], [-122.293541, 47.64072], [-122.293171, 47.640973], [-122.292968, 47.641198], [-122.292943, 47.641219], [-122.292919, 47.641242], [-122.2929, 47.641265], [-122.292883, 47.64129], [-122.292869, 47.641316], [-122.292858, 47.641342], [-122.292851, 47.641369], [-122.292847, 47.641397], [-122.292844, 47.641424], [-122.292841, 47.641451], [-122.292838, 47.641478], [-122.292837, 47.641506], [-122.292835, 47.641533], [-122.292834, 47.64156], [-122.292833, 47.641588], [-122.292832, 47.641615], [-122.292832, 47.641643], [-122.292832, 47.64167], [-122.292833, 47.641697], [-122.292834, 47.641725], [-122.292835, 47.641752], [-122.292837, 47.641779], [-122.292839, 47.641811]]]]
    },
    "properties": {
      "neighbourhood": "Madison Park",
      "neighbourhood_group": "Capitol Hill"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.313594, 47.635943], [-122.313599, 47.63629], [-122.313592, 47.637483], [-122.313987, 47.637747], [-122.31471, 47.638268], [-122.314716, 47.63878], [-122.314725, 47.638808], [-122.314729, 47.638836], [-122.31473, 47.638864], [-122.314727, 47.638892], [-122.31472, 47.63892], [-122.314709, 47.638947], [-122.314695, 47.638973], [-122.314677, 47.638998], [-122.314655, 47.639022], [-122.31463, 47.639045], [-122.314602, 47.639066], [-122.314571, 47.639085], [-122.314538, 47.639102], [-122.314502, 47.639116], [-122.314464, 47.639128], [-122.314426, 47.639138], [-122.314385, 47.639145], [-122.314344, 47.63915], [-122.314303, 47.639155], [-122.314262, 47.639159], [-122.31422, 47.639163], [-122.314179, 47.639167], [-122.313922, 47.639074], [-122.313785, 47.639028], [-122.313402, 47.638894], [-122.313172, 47.638813], [-122.31287, 47.638713], [-122.312667, 47.638695], [-122.312539, 47.638684], [-122.312447, 47.63871], [-122.312329, 47.638763], [-122.312202, 47.6388], [-122.312064, 47.638823], [-122.312028, 47.638825], [-122.311924, 47.63883], [-122.311784, 47.638821], [-122.311644, 47.638795], [-122.311515, 47.638752], [-122.311317, 47.638642], [-122.311293, 47.638615], [-122.311155, 47.638466], [-122.311106, 47.638413], [-122.311065, 47.638371], [-122.311023, 47.638328], [-122.31098, 47.638287], [-122.310935, 47.638247], [-122.310897, 47.638196], [-122.310867, 47.638155], [-122.310823, 47.638063], [-122.310801, 47.637966], [-122.310806, 47.637877], [-122.310809, 47.637836], [-122.310832, 47.637807], [-122.310966, 47.637642], [-122.311017, 47.637579], [-122.311087, 47.637514], [-122.311164, 47.637404], [-122.311168, 47.637293], [-122.311167, 47.637011], [-122.311164, 47.636826], [-122.31115, 47.636713], [-122.311101, 47.636564], [-122.31108, 47.636543], [-122.311057, 47.636524], [-122.311031, 47.636506], [-122.311003, 47.63649], [-122.310972, 47.636476], [-122.310941, 47.636464], [-122.310907, 47.636454], [-122.310872, 47.636446], [-122.310836, 47.636441], [-122.310799, 47.636437], [-122.31075, 47.636437], [-122.310715, 47.636439], [-122.310679, 47.636443], [-122.310645, 47.63645], [-122.31061, 47.636458], [-122.310577, 47.636469], [-122.310545, 47.636481], [-122.310515, 47.636496], [-122.310487, 47.636512], [-122.310461, 47.63653], [-122.310437, 47.636549], [-122.310416, 47.636569], [-122.310398, 47.636591], [-122.310364, 47.636701], [-122.310321, 47.636819], [-122.310271, 47.636951], [-122.310213, 47.637029], [-122.310134, 47.637097], [-122.310034, 47.637152], [-122.309924, 47.637188], [-122.309867, 47.637207], [-122.309571, 47.637292], [-122.309491, 47.637441], [-122.309419, 47.637534], [-122.309363, 47.63755], [-122.309294, 47.637541], [-122.309245, 47.637516], [-122.309185, 47.637466], [-122.309158, 47.637401], [-122.308623, 47.636458], [-122.308605, 47.636426], [-122.308592, 47.636396], [-122.308581, 47.636365], [-122.308572, 47.636335], [-122.308565, 47.636304], [-122.308562, 47.636272], [-122.30856, 47.636241], [-122.308561, 47.63621], [-122.308565, 47.636179], [-122.308571, 47.636147], [-122.308579, 47.636117], [-122.30859, 47.636086], [-122.308603, 47.636056], [-122.308618, 47.636027], [-122.308636, 47.635998], [-122.308656, 47.635969], [-122.308678, 47.635942], [-122.308702, 47.635915], [-122.308728, 47.635889], [-122.308755, 47.635871], [-122.308781, 47.635845], [-122.308798, 47.635816], [-122.308804, 47.635785], [-122.308799, 47.635754], [-122.308784, 47.635724], [-122.308745, 47.635708], [-122.308699, 47.635702], [-122.308654, 47.635699], [-122.308607, 47.635699], [-122.308561, 47.635701], [-122.308516, 47.635707], [-122.308471, 47.635716], [-122.308428, 47.635728], [-122.308387, 47.635742], [-122.308348, 47.635759], [-122.308312, 47.635779], [-122.308279, 47.635801], [-122.308249, 47.635825], [-122.308222, 47.63585], [-122.3082, 47.635878], [-122.30804, 47.636129], [-122.307876, 47.636385], [-122.307836, 47.636405], [-122.307795, 47.63642], [-122.307751, 47.63643], [-122.307706, 47.636434], [-122.307659, 47.636434], [-122.307614, 47.636429], [-122.30757, 47.636419], [-122.307529, 47.636404], [-122.307492, 47.636385], [-122.30746, 47.636363], [-122.307434, 47.636337], [-122.307414, 47.636309], [-122.307085, 47.636157], [-122.306966, 47.636141], [-122.30675, 47.636164], [-122.306646, 47.636145], [-122.306579, 47.636107], [-122.306576, 47.635907], [-122.306576, 47.635863], [-122.306583, 47.635692], [-122.306575, 47.635586], [-122.30652, 47.635494], [-122.30643, 47.635434], [-122.306309, 47.635416], [-122.30618, 47.635427], [-122.306092, 47.635462], [-122.305922, 47.635653], [-122.305652, 47.63582], [-122.30539, 47.635889], [-122.304916, 47.635943], [-122.304744, 47.635924], [-122.304548, 47.635861], [-122.304429, 47.635822], [-122.304284, 47.635775], [-122.303845, 47.635629], [-122.30332, 47.635357], [-122.302836, 47.635104], [-122.302302, 47.63482], [-122.30199, 47.634656], [-122.301963, 47.634639], [-122.301935, 47.634625], [-122.301905, 47.634611], [-122.301874, 47.6346], [-122.301841, 47.63459], [-122.301807, 47.634583], [-122.301773, 47.634577], [-122.301738, 47.634573], [-122.301702, 47.634571], [-122.301653, 47.634572], [-122.301442, 47.634574], [-122.301406, 47.634573], [-122.301369, 47.63457], [-122.301334, 47.634564], [-122.301301, 47.634555], [-122.301268, 47.634543], [-122.301238, 47.634528], [-122.301212, 47.634512], [-122.301187, 47.634493], [-122.301167, 47.634473], [-122.301044, 47.634329], [-122.300607, 47.633819], [-122.300359, 47.633532], [-122.300117, 47.633244], [-122.300112, 47.63322], [-122.300107, 47.633197], [-122.300101, 47.633173], [-122.300094, 47.633149], [-122.300086, 47.633126], [-122.300078, 47.633102], [-122.300069, 47.633078], [-122.300059, 47.633055], [-122.300048, 47.633032], [-122.300037, 47.633008], [-122.300025, 47.632985], [-122.300012, 47.632962], [-122.299998, 47.63294], [-122.299984, 47.632918], [-122.299719, 47.632419], [-122.299651, 47.632268], [-122.299327, 47.632266], [-122.298501, 47.632261], [-122.29774, 47.632245], [-122.297722, 47.632081], [-122.297672, 47.631632], [-122.297595, 47.63129], [-122.297437, 47.630966], [-122.297251, 47.630778], [-122.297247, 47.630754], [-122.297241, 47.63073], [-122.297233, 47.630707], [-122.297223, 47.630683], [-122.297211, 47.630661], [-122.297197, 47.630638], [-122.297177, 47.630618], [-122.297155, 47.630598], [-122.297134, 47.630579], [-122.297113, 47.630559], [-122.297092, 47.63054], [-122.297071, 47.63052], [-122.297051, 47.6305], [-122.29703, 47.630481], [-122.297009, 47.63046], [-122.296989, 47.63044], [-122.296969, 47.63042], [-122.29695, 47.630399], [-122.29693, 47.630379], [-122.296911, 47.630359], [-122.296892, 47.630339], [-122.296873, 47.630318], [-122.296854, 47.630298], [-122.296835, 47.630277], [-122.296817, 47.630256], [-122.296799, 47.630236], [-122.296781, 47.630215], [-122.296763, 47.630194], [-122.296745, 47.630173], [-122.296727, 47.630152], [-122.296624, 47.630036], [-122.296562, 47.629962], [-122.296502, 47.629889], [-122.296443, 47.629814], [-122.296386, 47.629739], [-122.296331, 47.629663], [-122.296279, 47.629587], [-122.296099, 47.629287], [-122.296088, 47.629264], [-122.296076, 47.629241], [-122.296064, 47.629218], [-122.296052, 47.629196], [-122.296039, 47.629173], [-122.296026, 47.629151], [-122.296012, 47.629128], [-122.295998, 47.629106], [-122.295984, 47.629084], [-122.295968, 47.629062], [-122.295953, 47.629041], [-122.295937, 47.629019], [-122.29592, 47.628998], [-122.295903, 47.628976], [-122.295887, 47.628955], [-122.295869, 47.628934], [-122.295851, 47.628913], [-122.295832, 47.628893], [-122.295813, 47.628872], [-122.295794, 47.628852], [-122.295775, 47.628832], [-122.295754, 47.628812], [-122.295734, 47.628792], [-122.295713, 47.628772], [-122.295691, 47.628753], [-122.295665, 47.628736], [-122.29564, 47.628719], [-122.295614, 47.628702], [-122.295586, 47.628686], [-122.295559, 47.62867], [-122.295532, 47.628655], [-122.295503, 47.628639], [-122.295475, 47.628624], [-122.295445, 47.628608], [-122.295416, 47.628594], [-122.295386, 47.62858], [-122.295356, 47.628567], [-122.295325, 47.628553], [-122.294961, 47.628427], [-122.294345, 47.62822], [-122.294292, 47.628205], [-122.294246, 47.628191], [-122.2942, 47.628176], [-122.294155, 47.628161], [-122.29411, 47.628146], [-122.294065, 47.62813], [-122.294021, 47.628113], [-122.293977, 47.628096], [-122.293934, 47.628079], [-122.293891, 47.628061], [-122.293849, 47.628042], [-122.293807, 47.628023], [-122.293766, 47.628003], [-122.293725, 47.627983], [-122.293685, 47.627963], [-122.293645, 47.627942], [-122.293606, 47.62792], [-122.293567, 47.627899], [-122.293529, 47.627876], [-122.293491, 47.627853], [-122.293454, 47.62783], [-122.293418, 47.627806], [-122.29338, 47.627781], [-122.293356, 47.627764], [-122.293332, 47.627746], [-122.293309, 47.627727], [-122.293287, 47.627708], [-122.293265, 47.627689], [-122.293244, 47.627669], [-122.293223, 47.627649], [-122.293203, 47.627628], [-122.293184, 47.627607], [-122.293166, 47.627586], [-122.293149, 47.627565], [-122.293132, 47.627543], [-122.293117, 47.627522], [-122.293102, 47.6275], [-122.293087, 47.627478], [-122.293074, 47.627455], [-122.293061, 47.627433], [-122.29305, 47.62741], [-122.293038, 47.627386], [-122.293028, 47.627363], [-122.293019, 47.627339], [-122.293011, 47.627316], [-122.293003, 47.627292], [-122.292998, 47.627268], [-122.292996, 47.627244], [-122.292994, 47.62722], [-122.292991, 47.627196], [-122.292989, 47.627172], [-122.292986, 47.627148], [-122.292983, 47.627124], [-122.29298, 47.6271], [-122.292977, 47.627076], [-122.292974, 47.627052], [-122.29297, 47.627028], [-122.292967, 47.627004], [-122.292963, 47.62698], [-122.29296, 47.626956], [-122.292955, 47.626932], [-122.292951, 47.626908], [-122.292946, 47.626884], [-122.29294, 47.62686], [-122.292934, 47.626836], [-122.292927, 47.626813], [-122.29292, 47.626789], [-122.292912, 47.626765], [-122.292904, 47.626742], [-122.292894, 47.626719], [-122.292885, 47.626695], [-122.292875, 47.626672], [-122.292864, 47.626649], [-122.292854, 47.626626], [-122.292842, 47.626603], [-122.292828, 47.62658], [-122.292814, 47.626558], [-122.292797, 47.626537], [-122.292781, 47.626515], [-122.292762, 47.626495], [-122.292743, 47.626474], [-122.292723, 47.626454], [-122.292701, 47.626435], [-122.292678, 47.626416], [-122.292655, 47.626398], [-122.292631, 47.62638], [-122.292605, 47.626363], [-122.292578, 47.626347], [-122.292552, 47.626331], [-122.292529, 47.626311], [-122.292515, 47.626288], [-122.292436, 47.62602], [-122.292485, 47.625987], [-122.292895, 47.625713], [-122.293781, 47.625116], [-122.294788, 47.624439], [-122.296169, 47.623491], [-122.296425, 47.623319], [-122.297757, 47.622423], [-122.298043, 47.622228], [-122.299699, 47.621097], [-122.300101, 47.620832], [-122.300627, 47.620485], [-122.301389, 47.619961], [-122.302426, 47.619248], [-122.30254, 47.61917], [-122.304148, 47.618067], [-122.304747, 47.617824], [-122.306132, 47.617262], [-122.307007, 47.616897], [-122.307538, 47.616675], [-122.309258, 47.615962], [-122.309843, 47.615713], [-122.310186, 47.615572], [-122.311007, 47.615234], [-122.311439, 47.615054], [-122.312527, 47.614594], [-122.312763, 47.614498], [-122.312762, 47.614541], [-122.312761, 47.615085], [-122.312761, 47.616539], [-122.312751, 47.617629], [-122.312746, 47.618519], [-122.312728, 47.61967], [-122.312703, 47.620567], [-122.312656, 47.621443], [-122.312598, 47.623713], [-122.312607, 47.624381], [-122.312584, 47.626071], [-122.312566, 47.626892], [-122.312557, 47.627643], [-122.312546, 47.628692], [-122.31252, 47.630636], [-122.312497, 47.632333], [-122.312484, 47.632981], [-122.312483, 47.633643], [-122.31248, 47.633673], [-122.312479, 47.633703], [-122.312479, 47.633733], [-122.312481, 47.633763], [-122.312483, 47.633793], [-122.312488, 47.633822], [-122.312493, 47.633852], [-122.3125, 47.633882], [-122.312508, 47.633911], [-122.312517, 47.63394], [-122.312528, 47.633969], [-122.31254, 47.633998], [-122.312553, 47.634027], [-122.312567, 47.634055], [-122.31258, 47.634077], [-122.312597, 47.634105], [-122.312615, 47.634132], [-122.312634, 47.634159], [-122.312654, 47.634186], [-122.312676, 47.634212], [-122.312698, 47.634238], [-122.312722, 47.634263], [-122.312747, 47.634288], [-122.312773, 47.634312], [-122.312795, 47.634331], [-122.312822, 47.634354], [-122.31285, 47.634376], [-122.313125, 47.634651], [-122.313146, 47.634677], [-122.313163, 47.634698], [-122.313183, 47.634725], [-122.313203, 47.634751], [-122.313222, 47.634778], [-122.313241, 47.634805], [-122.31326, 47.634833], [-122.313278, 47.63486], [-122.313295, 47.634887], [-122.313312, 47.634915], [-122.313329, 47.634943], [-122.313345, 47.63497], [-122.313361, 47.634998], [-122.313376, 47.635026], [-122.313389, 47.635049], [-122.313403, 47.635077], [-122.313417, 47.635106], [-122.313431, 47.635134], [-122.313444, 47.635163], [-122.313456, 47.635191], [-122.313468, 47.63522], [-122.313478, 47.635243], [-122.313489, 47.635272], [-122.3135, 47.635301], [-122.31351, 47.63533], [-122.31352, 47.635359], [-122.313591, 47.63567], [-122.313594, 47.635943]]]]
    },
    "properties": {
      "neighbourhood": "Stevens",
      "neighbourhood_group": "Capitol Hill"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.379689, 47.712486], [-122.37963, 47.712524], [-122.379563, 47.712564], [-122.379539, 47.712583], [-122.379489, 47.712634], [-122.379413, 47.712692], [-122.379377, 47.71273], [-122.379335, 47.712778], [-122.379296, 47.712823], [-122.37927, 47.712867], [-122.37922, 47.712906], [-122.379184, 47.712926], [-122.379102, 47.713002], [-122.379048, 47.713047], [-122.37898, 47.713116], [-122.378938, 47.713165], [-122.378895, 47.713212], [-122.378832, 47.713296], [-122.378807, 47.713328], [-122.37879, 47.713354], [-122.378771, 47.713376], [-122.378738, 47.713407], [-122.378717, 47.713428], [-122.378649, 47.713481], [-122.378624, 47.713506], [-122.378561, 47.713586], [-122.378539, 47.71362], [-122.378522, 47.71365], [-122.378456, 47.713715], [-122.378412, 47.713762], [-122.378342, 47.713825], [-122.378314, 47.713854], [-122.378296, 47.713878], [-122.378274, 47.713914], [-122.378227, 47.713972], [-122.378194, 47.714024], [-122.378166, 47.71405], [-122.378104, 47.714096], [-122.378071, 47.714128], [-122.378024, 47.71419], [-122.377758, 47.714496], [-122.377732, 47.714534], [-122.377708, 47.714566], [-122.377692, 47.714589], [-122.37767, 47.714614], [-122.377639, 47.714659], [-122.37762, 47.714681], [-122.377582, 47.714718], [-122.377553, 47.714744], [-122.377525, 47.714776], [-122.377504, 47.714801], [-122.377278, 47.715063], [-122.377112, 47.715299], [-122.377049, 47.715387], [-122.376956, 47.715488], [-122.376862, 47.715625], [-122.376811, 47.715693], [-122.376777, 47.715749], [-122.376731, 47.715827], [-122.376689, 47.715889], [-122.376651, 47.715956], [-122.376604, 47.716018], [-122.376573, 47.716076], [-122.376548, 47.716127], [-122.376522, 47.716172], [-122.376495, 47.716225], [-122.376471, 47.71628], [-122.376435, 47.716335], [-122.376399, 47.716389], [-122.376368, 47.716447], [-122.376338, 47.716497], [-122.376296, 47.716578], [-122.376271, 47.716634], [-122.376256, 47.716689], [-122.376235, 47.716759], [-122.376211, 47.716821], [-122.376187, 47.716872], [-122.376159, 47.716907], [-122.376127, 47.716932], [-122.376105, 47.716976], [-122.376091, 47.717009], [-122.376066, 47.717074], [-122.376033, 47.717141], [-122.376012, 47.7172], [-122.375985, 47.717268], [-122.375956, 47.717332], [-122.375927, 47.71739], [-122.375908, 47.717448], [-122.375884, 47.717501], [-122.375871, 47.717555], [-122.37585, 47.717603], [-122.375852, 47.717665], [-122.375845, 47.717704], [-122.375828, 47.717762], [-122.37581, 47.717832], [-122.375796, 47.717896], [-122.375778, 47.717938], [-122.375763, 47.71801], [-122.375759, 47.71806], [-122.375757, 47.718116], [-122.375755, 47.718161], [-122.375738, 47.718213], [-122.375733, 47.718238], [-122.375724, 47.718306], [-122.375724, 47.718343], [-122.375716, 47.718387], [-122.375713, 47.718449], [-122.375723, 47.718504], [-122.375725, 47.718563], [-122.375723, 47.718592], [-122.375701, 47.718633], [-122.375704, 47.718723], [-122.375709, 47.718782], [-122.375716, 47.71881], [-122.375721, 47.718868], [-122.37574, 47.718941], [-122.375765, 47.719002], [-122.375779, 47.719067], [-122.375788, 47.71912], [-122.375801, 47.719194], [-122.375824, 47.719249], [-122.375827, 47.719287], [-122.375832, 47.719333], [-122.375845, 47.719392], [-122.375863, 47.719457], [-122.375879, 47.719519], [-122.375895, 47.719583], [-122.37591, 47.719638], [-122.375927, 47.719709], [-122.375969, 47.7198], [-122.375968, 47.719824], [-122.375974, 47.719849], [-122.375996, 47.719903], [-122.376012, 47.719966], [-122.376024, 47.720025], [-122.376047, 47.720095], [-122.37606, 47.720152], [-122.376081, 47.720211], [-122.376094, 47.720263], [-122.37611, 47.720329], [-122.376126, 47.720395], [-122.376143, 47.72047], [-122.376157, 47.720538], [-122.376171, 47.720602], [-122.376186, 47.720673], [-122.376193, 47.720734], [-122.376204, 47.720802], [-122.376212, 47.720871], [-122.37622, 47.720938], [-122.376225, 47.720994], [-122.376231, 47.721049], [-122.376232, 47.721108], [-122.37623, 47.721166], [-122.376224, 47.721226], [-122.37622, 47.721322], [-122.376218, 47.721371], [-122.376211, 47.721431], [-122.376207, 47.721473], [-122.376201, 47.72151], [-122.376191, 47.721571], [-122.376185, 47.721625], [-122.376168, 47.721659], [-122.37616, 47.721693], [-122.376141, 47.721765], [-122.376126, 47.721828], [-122.376112, 47.721901], [-122.376094, 47.72197], [-122.376077, 47.722042], [-122.376059, 47.722097], [-122.376042, 47.722152], [-122.376024, 47.722213], [-122.376, 47.722287], [-122.375971, 47.722373], [-122.375944, 47.722444], [-122.375918, 47.722506], [-122.375883, 47.72259], [-122.375849, 47.722684], [-122.375819, 47.722761], [-122.375791, 47.722824], [-122.375758, 47.722898], [-122.375741, 47.722933], [-122.375709, 47.723], [-122.375681, 47.723053], [-122.375651, 47.723127], [-122.375609, 47.723209], [-122.37556, 47.723302], [-122.375505, 47.723408], [-122.375483, 47.723441], [-122.375446, 47.723509], [-122.375378, 47.723614], [-122.375324, 47.723692], [-122.375268, 47.723778], [-122.375202, 47.723872], [-122.375169, 47.723915], [-122.375133, 47.723966], [-122.375112, 47.723994], [-122.375066, 47.724059], [-122.375048, 47.724083], [-122.374986, 47.724165], [-122.374918, 47.724259], [-122.374881, 47.724308], [-122.374843, 47.724353], [-122.374811, 47.724394], [-122.374762, 47.724456], [-122.374742, 47.724485], [-122.37469, 47.724556], [-122.374623, 47.724643], [-122.374553, 47.724732], [-122.374525, 47.724764], [-122.374469, 47.724841], [-122.374403, 47.724923], [-122.374358, 47.72498], [-122.374334, 47.725014], [-122.374286, 47.725079], [-122.374271, 47.7251], [-122.374212, 47.725178], [-122.374153, 47.725262], [-122.374087, 47.725342], [-122.374019, 47.725403], [-122.373969, 47.725451], [-122.373915, 47.725519], [-122.373871, 47.725588], [-122.373824, 47.725663], [-122.373784, 47.725722], [-122.373749, 47.725781], [-122.373713, 47.725854], [-122.373683, 47.725928], [-122.373657, 47.725987], [-122.373637, 47.72604], [-122.373625, 47.726083], [-122.373617, 47.72613], [-122.373596, 47.726177], [-122.373561, 47.726228], [-122.373535, 47.726268], [-122.373524, 47.726297], [-122.37351, 47.72634], [-122.373493, 47.726392], [-122.373477, 47.72645], [-122.373467, 47.72649], [-122.373451, 47.726548], [-122.373435, 47.726611], [-122.373417, 47.726691], [-122.373405, 47.726751], [-122.373391, 47.726824], [-122.37338, 47.72688], [-122.373371, 47.726943], [-122.373367, 47.72697], [-122.373361, 47.727025], [-122.373349, 47.727119], [-122.373342, 47.727157], [-122.373332, 47.727219], [-122.373322, 47.727314], [-122.37331, 47.727422], [-122.373298, 47.727498], [-122.373291, 47.72758], [-122.373282, 47.727646], [-122.373281, 47.727685], [-122.373273, 47.727751], [-122.373266, 47.727796], [-122.373258, 47.727846], [-122.373251, 47.72791], [-122.373241, 47.727974], [-122.373231, 47.728057], [-122.373221, 47.728144], [-122.373211, 47.728213], [-122.373199, 47.728288], [-122.373189, 47.728353], [-122.373178, 47.728421], [-122.373169, 47.728501], [-122.373161, 47.728589], [-122.373153, 47.728663], [-122.373147, 47.728745], [-122.373139, 47.728841], [-122.373138, 47.7289], [-122.373141, 47.728944], [-122.373136, 47.728977], [-122.373137, 47.729028], [-122.373135, 47.72907], [-122.373135, 47.729113], [-122.373136, 47.729162], [-122.373135, 47.729221], [-122.373135, 47.729273], [-122.373138, 47.729321], [-122.373144, 47.72937], [-122.373149, 47.729428], [-122.373157, 47.729494], [-122.373161, 47.729555], [-122.373167, 47.729609], [-122.373173, 47.729666], [-122.373178, 47.729716], [-122.373186, 47.72977], [-122.373196, 47.729819], [-122.373203, 47.729866], [-122.373211, 47.729911], [-122.373219, 47.729953], [-122.373227, 47.729987], [-122.37324, 47.730036], [-122.373248, 47.730074], [-122.373256, 47.730109], [-122.373267, 47.730135], [-122.373277, 47.730169], [-122.373286, 47.730247], [-122.373297, 47.730292], [-122.373303, 47.730323], [-122.373329, 47.730362], [-122.373349, 47.730409], [-122.373364, 47.730481], [-122.373377, 47.730541], [-122.373389, 47.730597], [-122.373397, 47.730665], [-122.373413, 47.730695], [-122.373423, 47.730718], [-122.37342, 47.730743], [-122.373412, 47.730773], [-122.373429, 47.730828], [-122.373427, 47.730891], [-122.373431, 47.730928], [-122.373446, 47.730984], [-122.373457, 47.731039], [-122.373469, 47.731101], [-122.373481, 47.731168], [-122.37349, 47.731197], [-122.373511, 47.73126], [-122.373521, 47.731322], [-122.37353, 47.73138], [-122.373545, 47.731445], [-122.373561, 47.731511], [-122.373578, 47.731575], [-122.373594, 47.731634], [-122.373607, 47.731692], [-122.373623, 47.731747], [-122.373641, 47.73181], [-122.373654, 47.731875], [-122.373693, 47.731912], [-122.373714, 47.731943], [-122.373746, 47.732011], [-122.373754, 47.732047], [-122.373748, 47.732073], [-122.373734, 47.732098], [-122.373758, 47.732172], [-122.373777, 47.732231], [-122.373798, 47.732279], [-122.373817, 47.732341], [-122.373835, 47.732397], [-122.373852, 47.732455], [-122.373866, 47.732485], [-122.373887, 47.732539], [-122.37391, 47.732595], [-122.373938, 47.732657], [-122.373969, 47.732678], [-122.373976, 47.732708], [-122.373986, 47.732762], [-122.374008, 47.732821], [-122.374034, 47.732876], [-122.374057, 47.732945], [-122.374085, 47.733009], [-122.374108, 47.733049], [-122.374138, 47.733101], [-122.374158, 47.733151], [-122.374156, 47.733177], [-122.37417, 47.733205], [-122.374196, 47.733259], [-122.374221, 47.733294], [-122.374248, 47.733328], [-122.374272, 47.733364], [-122.37429, 47.733402], [-122.374317, 47.733469], [-122.374364, 47.733529], [-122.374376, 47.733561], [-122.374408, 47.73363], [-122.374434, 47.733674], [-122.374473, 47.733723], [-122.374495, 47.733763], [-122.374523, 47.733827], [-122.374548, 47.733872], [-122.374554, 47.733907], [-122.374548, 47.733948], [-122.374548, 47.733989], [-122.374567, 47.734024], [-122.374573, 47.734049], [-122.374597, 47.734101], [-122.374617, 47.734165], [-122.366289, 47.734151], [-122.361977, 47.734143], [-122.36093, 47.734141], [-122.359168, 47.734137], [-122.355639, 47.73413], [-122.355575, 47.733513], [-122.355556, 47.732316], [-122.355561, 47.731044], [-122.355569, 47.729876], [-122.355552, 47.728742], [-122.355552, 47.727892], [-122.355559, 47.726608], [-122.35555, 47.725404], [-122.355554, 47.723948], [-122.35555, 47.722478], [-122.355547, 47.72103], [-122.355541, 47.719583], [-122.355537, 47.71899], [-122.355538, 47.71811], [-122.355534, 47.717312], [-122.355523, 47.716469], [-122.35552, 47.715332], [-122.355512, 47.714161], [-122.355509, 47.712998], [-122.355506, 47.711834], [-122.355493, 47.71067], [-122.355485, 47.709502], [-122.355482, 47.708335], [-122.355469, 47.707154], [-122.355472, 47.706899], [-122.355455, 47.705081], [-122.357259, 47.705091], [-122.35913, 47.705103], [-122.360772, 47.705121], [-122.360771, 47.705784], [-122.360786, 47.706506], [-122.360792, 47.706933], [-122.361848, 47.706937], [-122.362918, 47.70764], [-122.362937, 47.708748], [-122.363704, 47.708756], [-122.3637, 47.708933], [-122.363702, 47.708957], [-122.363702, 47.708981], [-122.363701, 47.709006], [-122.363698, 47.70903], [-122.363693, 47.709054], [-122.363686, 47.709078], [-122.363678, 47.709102], [-122.363669, 47.709125], [-122.363657, 47.709148], [-122.363645, 47.709171], [-122.36363, 47.709193], [-122.363615, 47.709215], [-122.363597, 47.709236], [-122.363578, 47.709256], [-122.363411, 47.709359], [-122.362971, 47.709564], [-122.362794, 47.709761], [-122.363092, 47.709768], [-122.363618, 47.709739], [-122.363653, 47.709735], [-122.363688, 47.70973], [-122.363723, 47.709723], [-122.363756, 47.709714], [-122.363788, 47.709704], [-122.36382, 47.709691], [-122.363849, 47.709677], [-122.363877, 47.709662], [-122.363903, 47.709645], [-122.3645, 47.709338], [-122.364528, 47.709323], [-122.364559, 47.709312], [-122.364593, 47.709303], [-122.36463, 47.709301], [-122.364666, 47.709298], [-122.364702, 47.709302], [-122.364736, 47.709309], [-122.364768, 47.709319], [-122.364798, 47.709333], [-122.364824, 47.70935], [-122.364968, 47.709522], [-122.36535, 47.710016], [-122.365367, 47.710038], [-122.36538, 47.71006], [-122.365387, 47.710084], [-122.36539, 47.710108], [-122.365388, 47.710133], [-122.365381, 47.710156], [-122.365369, 47.710179], [-122.36515, 47.710581], [-122.365086, 47.710719], [-122.365024, 47.710823], [-122.364766, 47.71111], [-122.364885, 47.711139], [-122.364981, 47.711162], [-122.365091, 47.711153], [-122.365494, 47.711118], [-122.365922, 47.710962], [-122.366122, 47.711078], [-122.36612, 47.710334], [-122.366168, 47.708756], [-122.36828, 47.70883], [-122.370825, 47.70891], [-122.37286, 47.708895], [-122.377493, 47.708832], [-122.380036, 47.70881], [-122.380327, 47.70891], [-122.380315, 47.708953], [-122.380303, 47.708984], [-122.380248, 47.709113], [-122.380201, 47.709174], [-122.380185, 47.709212], [-122.380177, 47.70926], [-122.380152, 47.709303], [-122.380141, 47.709333], [-122.380132, 47.70938], [-122.380125, 47.709426], [-122.380114, 47.709466], [-122.380098, 47.709516], [-122.380092, 47.709548], [-122.380086, 47.709606], [-122.380074, 47.709671], [-122.380066, 47.709701], [-122.380057, 47.70974], [-122.380049, 47.70981], [-122.380035, 47.709863], [-122.380028, 47.709921], [-122.380017, 47.709979], [-122.380016, 47.71001], [-122.380022, 47.710074], [-122.380015, 47.710107], [-122.380019, 47.710157], [-122.380035, 47.710203], [-122.380043, 47.71025], [-122.380051, 47.710289], [-122.380029, 47.710418], [-122.380025, 47.710447], [-122.380027, 47.710494], [-122.380019, 47.710563], [-122.380006, 47.710621], [-122.380002, 47.710694], [-122.380001, 47.710728], [-122.380002, 47.710763], [-122.379987, 47.710873], [-122.379988, 47.710912], [-122.379992, 47.710947], [-122.380002, 47.710983], [-122.379995, 47.711048], [-122.379992, 47.711082], [-122.379968, 47.711177], [-122.379962, 47.711231], [-122.379947, 47.711317], [-122.379938, 47.711359], [-122.379911, 47.711427], [-122.379899, 47.71146], [-122.379879, 47.711542], [-122.379879, 47.711595], [-122.379881, 47.711631], [-122.379881, 47.711748], [-122.379863, 47.711799], [-122.379853, 47.711823], [-122.3798, 47.711878], [-122.379732, 47.711918], [-122.379761, 47.711945], [-122.379793, 47.711964], [-122.37983, 47.711998], [-122.379828, 47.712059], [-122.379813, 47.712122], [-122.379813, 47.71219], [-122.379824, 47.712215], [-122.379853, 47.712232], [-122.379909, 47.712243], [-122.379936, 47.712278], [-122.379829, 47.712376], [-122.37976, 47.71244], [-122.379689, 47.712486]]]]
    },
    "properties": {
      "neighbourhood": "Broadview",
      "neighbourhood_group": "Other neighborhoods"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.360803, 47.666908], [-122.360744, 47.666817], [-122.360375, 47.666206], [-122.360257, 47.66601], [-122.359831, 47.665295], [-122.359643, 47.665046], [-122.359501, 47.664894], [-122.359051, 47.664492], [-122.358268, 47.663799], [-122.357704, 47.663306], [-122.357378, 47.663058], [-122.357014, 47.662834], [-122.356569, 47.662588], [-122.356477, 47.662538], [-122.356312, 47.662437], [-122.3562, 47.662384], [-122.356113, 47.662342], [-122.355865, 47.662258], [-122.355573, 47.662181], [-122.355438, 47.662141], [-122.355437, 47.662207], [-122.355428, 47.662527], [-122.355424, 47.663009], [-122.355425, 47.663661], [-122.355417, 47.66436], [-122.355414, 47.665032], [-122.355057, 47.665027], [-122.354365, 47.665019], [-122.35345, 47.665019], [-122.352496, 47.665019], [-122.351421, 47.665014], [-122.350304, 47.665039], [-122.349989, 47.665033], [-122.349793, 47.664992], [-122.348868, 47.665009], [-122.347308, 47.665005], [-122.34731, 47.66468], [-122.347318, 47.663484], [-122.34733, 47.662195], [-122.347339, 47.661389], [-122.345725, 47.66139], [-122.343897, 47.661379], [-122.342154, 47.661377], [-122.342188, 47.660647], [-122.342253, 47.659254], [-122.342319, 47.65786], [-122.342384, 47.656467], [-122.342449, 47.655074], [-122.342514, 47.653681], [-122.342598, 47.652242], [-122.342675, 47.650804], [-122.342705, 47.650005], [-122.342734, 47.649202], [-122.342788, 47.648322], [-122.342816, 47.648031], [-122.342887, 47.648036], [-122.342956, 47.648057], [-122.343012, 47.64806], [-122.343043, 47.648033], [-122.343085, 47.648026], [-122.343086, 47.647991], [-122.34309, 47.647932], [-122.343096, 47.64787], [-122.343099, 47.647808], [-122.343105, 47.647739], [-122.34311, 47.64766], [-122.34317, 47.647656], [-122.343174, 47.647605], [-122.343179, 47.647549], [-122.343184, 47.647511], [-122.343213, 47.647491], [-122.343276, 47.64749], [-122.343393, 47.647504], [-122.343457, 47.647504], [-122.343503, 47.647526], [-122.343569, 47.647526], [-122.343653, 47.647536], [-122.343656, 47.647579], [-122.34366, 47.647637], [-122.343662, 47.647698], [-122.343672, 47.64779], [-122.34377, 47.647791], [-122.343771, 47.647829], [-122.34377, 47.647893], [-122.343772, 47.64795], [-122.343772, 47.648015], [-122.343772, 47.64806], [-122.343771, 47.648086], [-122.343805, 47.648104], [-122.34392, 47.64812], [-122.344024, 47.648133], [-122.344137, 47.648148], [-122.344167, 47.648167], [-122.34417, 47.648194], [-122.344182, 47.648268], [-122.344231, 47.648279], [-122.344268, 47.648288], [-122.34435, 47.648299], [-122.344387, 47.648305], [-122.344463, 47.648313], [-122.344552, 47.648324], [-122.344644, 47.648332], [-122.344763, 47.648334], [-122.344814, 47.648319], [-122.344829, 47.648275], [-122.344836, 47.648245], [-122.344874, 47.648235], [-122.344999, 47.648233], [-122.345071, 47.648224], [-122.345129, 47.648217], [-122.345182, 47.648209], [-122.34526, 47.648222], [-122.345315, 47.648235], [-122.345412, 47.648255], [-122.345448, 47.648273], [-122.345463, 47.648342], [-122.345481, 47.648367], [-122.345554, 47.648366], [-122.345666, 47.648361], [-122.345796, 47.648357], [-122.345876, 47.648357], [-122.345956, 47.648357], [-122.346043, 47.648357], [-122.346094, 47.64836], [-122.346133, 47.648377], [-122.346159, 47.648395], [-122.346205, 47.648429], [-122.346208, 47.648456], [-122.346224, 47.648518], [-122.346298, 47.648562], [-122.346347, 47.648585], [-122.346399, 47.648596], [-122.346451, 47.648597], [-122.346555, 47.648613], [-122.346681, 47.648628], [-122.346737, 47.64863], [-122.346785, 47.648623], [-122.346831, 47.648596], [-122.346867, 47.648575], [-122.346927, 47.648561], [-122.346963, 47.648541], [-122.346991, 47.648521], [-122.347008, 47.648483], [-122.347016, 47.648439], [-122.34702, 47.648374], [-122.34702, 47.64832], [-122.347015, 47.648295], [-122.347013, 47.64826], [-122.347016, 47.648235], [-122.347014, 47.648192], [-122.34702, 47.64813], [-122.347021, 47.648095], [-122.347031, 47.64803], [-122.347016, 47.647978], [-122.347015, 47.647924], [-122.347015, 47.647899], [-122.347027, 47.647868], [-122.347068, 47.647815], [-122.347076, 47.647786], [-122.347094, 47.64775], [-122.347114, 47.647729], [-122.34715, 47.647699], [-122.347185, 47.647674], [-122.347243, 47.647648], [-122.347282, 47.647632], [-122.34732, 47.647615], [-122.347363, 47.647602], [-122.347428, 47.647581], [-122.347505, 47.647558], [-122.347541, 47.647547], [-122.347629, 47.647523], [-122.347672, 47.647513], [-122.347712, 47.647506], [-122.347792, 47.647489], [-122.347933, 47.64746], [-122.348038, 47.64745], [-122.348084, 47.647449], [-122.348129, 47.64745], [-122.34818, 47.647455], [-122.348245, 47.647464], [-122.348311, 47.647477], [-122.348405, 47.647496], [-122.348439, 47.647506], [-122.348475, 47.647515], [-122.348516, 47.647529], [-122.34859, 47.647562], [-122.348695, 47.647598], [-122.348767, 47.647621], [-122.348821, 47.647645], [-122.348897, 47.647672], [-122.348943, 47.647691], [-122.349019, 47.647718], [-122.349068, 47.647742], [-122.349115, 47.647758], [-122.349187, 47.647785], [-122.349261, 47.647812], [-122.349348, 47.647846], [-122.349395, 47.647857], [-122.349456, 47.647879], [-122.349572, 47.647918], [-122.349622, 47.647926], [-122.349676, 47.647935], [-122.34977, 47.647962], [-122.349807, 47.647981], [-122.349843, 47.648017], [-122.349886, 47.648054], [-122.349914, 47.648095], [-122.349944, 47.648137], [-122.350002, 47.648174], [-122.350081, 47.648215], [-122.35014, 47.648237], [-122.350193, 47.648259], [-122.350273, 47.64829], [-122.35032, 47.648313], [-122.350365, 47.648333], [-122.350431, 47.648365], [-122.350468, 47.648381], [-122.350524, 47.648403], [-122.350597, 47.648438], [-122.350638, 47.648453], [-122.350689, 47.648478], [-122.350802, 47.648529], [-122.350857, 47.648552], [-122.350897, 47.648567], [-122.350992, 47.648611], [-122.351031, 47.648626], [-122.351067, 47.648645], [-122.351099, 47.648661], [-122.351154, 47.648685], [-122.351207, 47.648716], [-122.35127, 47.648747], [-122.351341, 47.648788], [-122.351391, 47.648808], [-122.351439, 47.64883], [-122.351486, 47.648851], [-122.351581, 47.648889], [-122.351626, 47.648905], [-122.35171, 47.648941], [-122.351769, 47.648962], [-122.351827, 47.648986], [-122.35187, 47.649002], [-122.351941, 47.649031], [-122.35198, 47.649046], [-122.352034, 47.649067], [-122.352075, 47.649086], [-122.352165, 47.649121], [-122.352238, 47.649153], [-122.352277, 47.649172], [-122.352359, 47.649204], [-122.352454, 47.649247], [-122.352485, 47.649262], [-122.352641, 47.649332], [-122.352681, 47.64935], [-122.352727, 47.649369], [-122.352796, 47.649397], [-122.352872, 47.649426], [-122.352909, 47.649451], [-122.352925, 47.649475], [-122.352953, 47.649505], [-122.352987, 47.649527], [-122.353059, 47.649556], [-122.353122, 47.649585], [-122.353195, 47.649616], [-122.353275, 47.649656], [-122.353349, 47.64969], [-122.353423, 47.649726], [-122.353475, 47.64975], [-122.353508, 47.649764], [-122.353547, 47.649765], [-122.353636, 47.649772], [-122.353666, 47.649786], [-122.353709, 47.649804], [-122.353794, 47.64984], [-122.353886, 47.649881], [-122.353974, 47.64992], [-122.354029, 47.649947], [-122.354066, 47.649961], [-122.354104, 47.649979], [-122.354265, 47.650051], [-122.354359, 47.650092], [-122.354406, 47.650114], [-122.354469, 47.650141], [-122.354554, 47.65018], [-122.354639, 47.650224], [-122.354738, 47.65027], [-122.354779, 47.65029], [-122.354839, 47.650316], [-122.354937, 47.650362], [-122.354988, 47.650387], [-122.355039, 47.650414], [-122.355089, 47.650436], [-122.35524, 47.650504], [-122.355328, 47.650546], [-122.355383, 47.650571], [-122.355416, 47.650587], [-122.355447, 47.650601], [-122.355506, 47.650631], [-122.355608, 47.650677], [-122.35564, 47.650694], [-122.355746, 47.650742], [-122.355857, 47.650793], [-122.3559, 47.65081], [-122.355949, 47.65083], [-122.356034, 47.650874], [-122.356081, 47.650894], [-122.356236, 47.650976], [-122.356334, 47.651031], [-122.356394, 47.651065], [-122.356439, 47.651085], [-122.356551, 47.651132], [-122.356583, 47.651144], [-122.356614, 47.651157], [-122.35666, 47.651177], [-122.356747, 47.651213], [-122.356782, 47.65123], [-122.356863, 47.651267], [-122.356903, 47.651288], [-122.357008, 47.65134], [-122.357052, 47.651361], [-122.357087, 47.651373], [-122.357258, 47.651463], [-122.357386, 47.651525], [-122.357653, 47.651652], [-122.357906, 47.651776], [-122.358098, 47.651871], [-122.35839, 47.652014], [-122.358502, 47.652056], [-122.358579, 47.652092], [-122.358613, 47.652121], [-122.358812, 47.652222], [-122.359065, 47.652346], [-122.359307, 47.652467], [-122.359549, 47.652585], [-122.359766, 47.6527], [-122.360011, 47.652824], [-122.3602, 47.65292], [-122.36046, 47.653051], [-122.360697, 47.65317], [-122.360878, 47.653269], [-122.360927, 47.653273], [-122.360971, 47.653308], [-122.361115, 47.6534], [-122.36117, 47.653453], [-122.361276, 47.653498], [-122.36134, 47.653519], [-122.361495, 47.653607], [-122.361699, 47.653723], [-122.361823, 47.653801], [-122.361919, 47.65388], [-122.362021, 47.65394], [-122.362131, 47.653998], [-122.36228, 47.654066], [-122.362391, 47.654125], [-122.362526, 47.654169], [-122.362599, 47.654221], [-122.362692, 47.65428], [-122.362838, 47.654365], [-122.363155, 47.654513], [-122.363499, 47.654705], [-122.363683, 47.654813], [-122.363725, 47.654851], [-122.363879, 47.65493], [-122.363916, 47.654946], [-122.363964, 47.654966], [-122.363999, 47.654984], [-122.364038, 47.655007], [-122.364073, 47.655021], [-122.36412, 47.655038], [-122.364149, 47.655056], [-122.364176, 47.655073], [-122.364219, 47.655076], [-122.364256, 47.655095], [-122.364307, 47.655124], [-122.364343, 47.655146], [-122.364391, 47.655172], [-122.364422, 47.655193], [-122.36445, 47.655216], [-122.364506, 47.655247], [-122.364553, 47.655268], [-122.364585, 47.655286], [-122.364621, 47.655309], [-122.364648, 47.655325], [-122.364693, 47.655353], [-122.36472, 47.655373], [-122.364756, 47.655392], [-122.364788, 47.655407], [-122.364836, 47.65544], [-122.364861, 47.655459], [-122.36489, 47.65548], [-122.364957, 47.655511], [-122.365018, 47.655543], [-122.365059, 47.655568], [-122.365097, 47.655587], [-122.365192, 47.655636], [-122.365224, 47.655658], [-122.365265, 47.655676], [-122.365313, 47.655664], [-122.365339, 47.655681], [-122.365368, 47.655697], [-122.3654, 47.655717], [-122.365452, 47.655751], [-122.365491, 47.655772], [-122.365538, 47.655798], [-122.36558, 47.655817], [-122.365633, 47.655847], [-122.365688, 47.655878], [-122.365726, 47.655899], [-122.365755, 47.655917], [-122.365796, 47.655944], [-122.365776, 47.655966], [-122.365812, 47.655985], [-122.365857, 47.656009], [-122.365889, 47.656026], [-122.365925, 47.65605], [-122.365956, 47.656067], [-122.365986, 47.656084], [-122.366018, 47.656098], [-122.366049, 47.656117], [-122.366072, 47.656136], [-122.366139, 47.656168], [-122.366194, 47.656195], [-122.366221, 47.656213], [-122.366259, 47.656232], [-122.366301, 47.656253], [-122.366351, 47.656281], [-122.366383, 47.656302], [-122.366409, 47.656323], [-122.366435, 47.656341], [-122.366479, 47.656361], [-122.366543, 47.656395], [-122.36659, 47.656422], [-122.366672, 47.656464], [-122.366731, 47.656498], [-122.366765, 47.656514], [-122.366797, 47.65653], [-122.366094, 47.657025], [-122.365899, 47.657162], [-122.36504, 47.657761], [-122.36504, 47.658142], [-122.365385, 47.658489], [-122.36612, 47.659351], [-122.366156, 47.661474], [-122.364137, 47.661457], [-122.36344, 47.661458], [-122.362146, 47.661457], [-122.360791, 47.661466], [-122.36079, 47.662374], [-122.360789, 47.662562], [-122.36079, 47.662665], [-122.3608, 47.663497], [-122.360802, 47.664433], [-122.360804, 47.665358], [-122.360801, 47.666277], [-122.360803, 47.666908]]]]
    },
    "properties": {
      "neighbourhood": "Fremont",
      "neighbourhood_group": "Other neighborhoods"
    }
  }]
};
},{}],"hgUf":[function(require,module,exports) {
module.exports = {
  "type": "FeatureCollection",
  "features": [{
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-97.890016, 30.209412], [-97.889286, 30.208708], [-97.888672, 30.207904], [-97.88822, 30.207299], [-97.88752, 30.206345], [-97.886872, 30.205469], [-97.886517, 30.205022], [-97.886029, 30.204487], [-97.88542, 30.203912], [-97.884924, 30.203498], [-97.884474, 30.203157], [-97.884007, 30.202848], [-97.883473, 30.202527], [-97.88299, 30.202254], [-97.882506, 30.202013], [-97.881903, 30.201707], [-97.881386, 30.201494], [-97.880723, 30.201256], [-97.879919, 30.200993], [-97.879385, 30.200851], [-97.878781, 30.200713], [-97.878058, 30.200553], [-97.877606, 30.200478], [-97.876957, 30.200411], [-97.876312, 30.200365], [-97.87568, 30.200342], [-97.875091, 30.200326], [-97.874472, 30.200349], [-97.873762, 30.200394], [-97.873041, 30.200473], [-97.872354, 30.200575], [-97.871806, 30.200691], [-97.871298, 30.200814], [-97.870575, 30.200965], [-97.870402, 30.201], [-97.870068, 30.201057], [-97.869675, 30.20111], [-97.869287, 30.201144], [-97.868994, 30.201157], [-97.868727, 30.201166], [-97.868366, 30.201156], [-97.868055, 30.201134], [-97.867844, 30.20111], [-97.867544, 30.201072], [-97.867155, 30.201023], [-97.866875, 30.200973], [-97.866577, 30.200929], [-97.866333, 30.200875], [-97.866088, 30.200807], [-97.866602, 30.199898], [-97.867284, 30.198864], [-97.867964, 30.197958], [-97.868428, 30.197266], [-97.868908, 30.196565], [-97.869282, 30.195937], [-97.869009, 30.195902], [-97.868832, 30.195923], [-97.86855, 30.195975], [-97.868227, 30.195911], [-97.867898, 30.195905], [-97.867706, 30.195901], [-97.867346, 30.195771], [-97.867099, 30.195659], [-97.866788, 30.195537], [-97.866613, 30.195473], [-97.866451, 30.195401], [-97.866196, 30.195243], [-97.865956, 30.195081], [-97.865837, 30.194988], [-97.865654, 30.194822], [-97.865524, 30.194594], [-97.865608, 30.194343], [-97.865652, 30.194014], [-97.865685, 30.1938], [-97.865711, 30.193605], [-97.865742, 30.193372], [-97.865886, 30.193157], [-97.866022, 30.192871], [-97.866112, 30.192683], [-97.866189, 30.192528], [-97.86621, 30.192377], [-97.866237, 30.192014], [-97.866251, 30.19185], [-97.866221, 30.191599], [-97.866149, 30.19135], [-97.866085, 30.191063], [-97.866053, 30.190927], [-97.865965, 30.190799], [-97.865865, 30.190693], [-97.865701, 30.190549], [-97.865453, 30.190399], [-97.865147, 30.190332], [-97.864861, 30.190258], [-97.864665, 30.19032], [-97.864517, 30.190394], [-97.864363, 30.190466], [-97.864199, 30.190542], [-97.864012, 30.19058], [-97.863697, 30.19061], [-97.863444, 30.190613], [-97.863139, 30.19061], [-97.862826, 30.190571], [-97.862655, 30.190499], [-97.862454, 30.19033], [-97.862366, 30.190031], [-97.862223, 30.189825], [-97.862035, 30.189634], [-97.861893, 30.189466], [-97.861698, 30.189221], [-97.861591, 30.189089], [-97.861496, 30.188978], [-97.861359, 30.188829], [-97.861271, 30.188704], [-97.861029, 30.188594], [-97.86081, 30.188373], [-97.860778, 30.188235], [-97.860801, 30.188098], [-97.86087, 30.187865], [-97.86095, 30.187732], [-97.860999, 30.187576], [-97.86107, 30.187327], [-97.86114, 30.187199], [-97.861251, 30.186965], [-97.861393, 30.186756], [-97.861525, 30.186591], [-97.861721, 30.186361], [-97.861971, 30.186113], [-97.86208, 30.185988], [-97.862236, 30.185846], [-97.862456, 30.185663], [-97.862596, 30.185588], [-97.862961, 30.185458], [-97.862911, 30.185223], [-97.862906, 30.184987], [-97.86306, 30.184858], [-97.86319, 30.184775], [-97.86337, 30.184531], [-97.863473, 30.184395], [-97.863558, 30.184268], [-97.863696, 30.184017], [-97.863845, 30.183737], [-97.863895, 30.183606], [-97.863909, 30.183323], [-97.863883, 30.183185], [-97.863782, 30.182875], [-97.863716, 30.182722], [-97.863663, 30.182564], [-97.863606, 30.182404], [-97.863514, 30.182138], [-97.863435, 30.18201], [-97.863375, 30.181877], [-97.863287, 30.181738], [-97.86303, 30.181403], [-97.862894, 30.181219], [-97.862654, 30.18098], [-97.862489, 30.180837], [-97.862238, 30.180637], [-97.862089, 30.180513], [-97.861908, 30.180319], [-97.861675, 30.180177], [-97.861497, 30.180168], [-97.861266, 30.180032], [-97.861089, 30.179822], [-97.860937, 30.179745], [-97.860744, 30.179535], [-97.860417, 30.179254], [-97.860197, 30.179096], [-97.860005, 30.178949], [-97.859845, 30.178822], [-97.859558, 30.178687], [-97.859285, 30.178377], [-97.859182, 30.178234], [-97.859029, 30.178036], [-97.858768, 30.177833], [-97.858652, 30.177737], [-97.858543, 30.177611], [-97.858407, 30.177392], [-97.858368, 30.177256], [-97.858406, 30.176993], [-97.85854, 30.176814], [-97.858622, 30.176681], [-97.858829, 30.176412], [-97.859027, 30.176226], [-97.859215, 30.175969], [-97.859295, 30.175789], [-97.859107, 30.17565], [-97.858928, 30.175562], [-97.858653, 30.175512], [-97.858475, 30.17552], [-97.858263, 30.175576], [-97.857782, 30.175727], [-97.85762, 30.175756], [-97.857362, 30.17576], [-97.85711, 30.175722], [-97.856872, 30.175695], [-97.855472, 30.175506], [-97.855021, 30.175437], [-97.856017, 30.173795], [-97.856437, 30.17319], [-97.857012, 30.172395], [-97.857373, 30.17175], [-97.857637, 30.171378], [-97.858056, 30.170828], [-97.858617, 30.170564], [-97.859351, 30.170006], [-97.859809, 30.169105], [-97.860154, 30.168459], [-97.860345, 30.167421], [-97.860269, 30.166338], [-97.860206, 30.165245], [-97.860191, 30.164126], [-97.860159, 30.16302], [-97.860076, 30.161558], [-97.86002, 30.159684], [-97.859977, 30.158841], [-97.85995, 30.158302], [-97.859897, 30.157283], [-97.859889, 30.157126], [-97.85985, 30.156947], [-97.859793, 30.156734], [-97.859708, 30.156542], [-97.859585, 30.156347], [-97.85947, 30.156194], [-97.858885, 30.155429], [-97.858189, 30.154593], [-97.857841, 30.154185], [-97.857577, 30.153858], [-97.85689, 30.15267], [-97.856039, 30.150861], [-97.854901, 30.148468], [-97.85206, 30.149351], [-97.850264, 30.14939], [-97.848351, 30.149433], [-97.847103, 30.149461], [-97.846939, 30.144661], [-97.846889, 30.142958], [-97.846933, 30.142631], [-97.847165, 30.1423], [-97.8475, 30.142021], [-97.846623, 30.140984], [-97.8473, 30.140507], [-97.847774, 30.140629], [-97.84808, 30.140685], [-97.84824, 30.14071], [-97.848537, 30.140715], [-97.848864, 30.14073], [-97.849041, 30.140731], [-97.849215, 30.140701], [-97.849446, 30.140568], [-97.849551, 30.140463], [-97.849639, 30.140231], [-97.849638, 30.140082], [-97.84964, 30.139923], [-97.849742, 30.139688], [-97.850017, 30.139559], [-97.850373, 30.139555], [-97.850597, 30.139567], [-97.85078, 30.139601], [-97.850962, 30.139657], [-97.851207, 30.139722], [-97.851376, 30.13975], [-97.851697, 30.139781], [-97.851892, 30.139832], [-97.852351, 30.13994], [-97.852595, 30.139994], [-97.852751, 30.140041], [-97.852962, 30.140108], [-97.853154, 30.140181], [-97.853419, 30.140282], [-97.853681, 30.140449], [-97.853813, 30.140523], [-97.854066, 30.140619], [-97.854212, 30.140691], [-97.854357, 30.140771], [-97.854563, 30.140882], [-97.854819, 30.140988], [-97.855041, 30.141114], [-97.855343, 30.141386], [-97.855608, 30.141427], [-97.855878, 30.141452], [-97.856054, 30.141472], [-97.85633, 30.141444], [-97.856638, 30.141403], [-97.857039, 30.141312], [-97.857232, 30.141236], [-97.857519, 30.141236], [-97.857698, 30.141278], [-97.857984, 30.141369], [-97.858121, 30.141437], [-97.858316, 30.14154], [-97.858526, 30.141654], [-97.858777, 30.141849], [-97.858943, 30.141981], [-97.859132, 30.142139], [-97.859482, 30.142421], [-97.859635, 30.142539], [-97.859862, 30.142698], [-97.860155, 30.142728], [-97.860334, 30.14277], [-97.860502, 30.14287], [-97.860673, 30.142972], [-97.86083, 30.143071], [-97.860976, 30.143181], [-97.861114, 30.143316], [-97.861237, 30.143439], [-97.861419, 30.143622], [-97.861612, 30.14387], [-97.861735, 30.144148], [-97.861715, 30.14429], [-97.861694, 30.144438], [-97.861651, 30.14458], [-97.861544, 30.144845], [-97.861314, 30.145127], [-97.861172, 30.145325], [-97.861058, 30.145529], [-97.861018, 30.145754], [-97.861237, 30.145915], [-97.861388, 30.145959], [-97.861721, 30.146075], [-97.861945, 30.146258], [-97.862046, 30.146516], [-97.862051, 30.1467], [-97.861942, 30.14694], [-97.861818, 30.147191], [-97.8618, 30.147438], [-97.861892, 30.147668], [-97.862167, 30.147673], [-97.862419, 30.14759], [-97.862723, 30.147541], [-97.863036, 30.147476], [-97.863253, 30.147461], [-97.863416, 30.14748], [-97.863783, 30.147575], [-97.86403, 30.14777], [-97.864114, 30.147901], [-97.864219, 30.148148], [-97.864466, 30.148306], [-97.864633, 30.148348], [-97.864826, 30.148437], [-97.865051, 30.14845], [-97.865296, 30.148559], [-97.865512, 30.148712], [-97.865657, 30.148822], [-97.865797, 30.148921], [-97.865941, 30.148984], [-97.86612, 30.149031], [-97.866459, 30.149145], [-97.866686, 30.14924], [-97.866859, 30.149312], [-97.867159, 30.149423], [-97.867308, 30.149475], [-97.867587, 30.149607], [-97.867748, 30.149734], [-97.868015, 30.149827], [-97.868324, 30.149937], [-97.868574, 30.150044], [-97.868708, 30.150143], [-97.86883, 30.150236], [-97.868981, 30.150291], [-97.869189, 30.150358], [-97.869417, 30.150409], [-97.869744, 30.150476], [-97.870042, 30.150554], [-97.870201, 30.150636], [-97.870358, 30.150741], [-97.870538, 30.150879], [-97.870674, 30.150956], [-97.870989, 30.151083], [-97.87119, 30.151161], [-97.871321, 30.151238], [-97.871587, 30.151417], [-97.871726, 30.151496], [-97.872031, 30.151656], [-97.872218, 30.151723], [-97.872509, 30.151839], [-97.872672, 30.151899], [-97.872847, 30.151974], [-97.873063, 30.152058], [-97.873225, 30.152111], [-97.873375, 30.152166], [-97.873655, 30.152229], [-97.873986, 30.152277], [-97.874172, 30.152278], [-97.874408, 30.152282], [-97.874614, 30.152286], [-97.874779, 30.152289], [-97.874975, 30.152279], [-97.87542, 30.152233], [-97.875582, 30.152206], [-97.875809, 30.152174], [-97.875993, 30.152159], [-97.876219, 30.152133], [-97.876405, 30.152111], [-97.876609, 30.152107], [-97.876782, 30.152091], [-97.876957, 30.152086], [-97.87717, 30.152057], [-97.877356, 30.152022], [-97.877698, 30.152001], [-97.87786, 30.151999], [-97.878201, 30.152017], [-97.878361, 30.152017], [-97.878692, 30.152045], [-97.878863, 30.152051], [-97.879037, 30.152046], [-97.879199, 30.152055], [-97.879564, 30.152098], [-97.879728, 30.152153], [-97.879867, 30.152241], [-97.879979, 30.152348], [-97.880221, 30.152592], [-97.880403, 30.152774], [-97.880523, 30.15287], [-97.880822, 30.153126], [-97.880932, 30.153224], [-97.881083, 30.15337], [-97.881199, 30.153493], [-97.881359, 30.153683], [-97.881508, 30.153821], [-97.881612, 30.153955], [-97.881754, 30.154161], [-97.881925, 30.154387], [-97.882084, 30.154597], [-97.882202, 30.154747], [-97.882328, 30.154997], [-97.882404, 30.155131], [-97.882509, 30.155303], [-97.882693, 30.155607], [-97.882828, 30.155793], [-97.882954, 30.155986], [-97.883066, 30.156125], [-97.883195, 30.156312], [-97.883311, 30.156468], [-97.883441, 30.156608], [-97.883729, 30.156916], [-97.883877, 30.157057], [-97.884046, 30.157195], [-97.884218, 30.15733], [-97.8844, 30.157465], [-97.88456, 30.157578], [-97.88482, 30.157776], [-97.884926, 30.157885], [-97.885142, 30.15806], [-97.885312, 30.158203], [-97.885529, 30.158395], [-97.885665, 30.158502], [-97.885861, 30.158668], [-97.886047, 30.1588], [-97.886227, 30.15893], [-97.886462, 30.159078], [-97.886592, 30.159168], [-97.88675, 30.159268], [-97.886954, 30.159379], [-97.887113, 30.159462], [-97.887401, 30.159657], [-97.887579, 30.159726], [-97.887877, 30.159784], [-97.888075, 30.159807], [-97.888406, 30.159844], [-97.888704, 30.159778], [-97.888853, 30.159712], [-97.889022, 30.159652], [-97.889185, 30.159595], [-97.889268, 30.159357], [-97.889352, 30.159213], [-97.889512, 30.158867], [-97.889645, 30.158536], [-97.889714, 30.158376], [-97.889814, 30.158097], [-97.889857, 30.157845], [-97.890058, 30.157673], [-97.890266, 30.157498], [-97.890546, 30.157349], [-97.890723, 30.157289], [-97.890962, 30.157225], [-97.891138, 30.157193], [-97.891299, 30.15716], [-97.89164, 30.157158], [-97.891813, 30.157219], [-97.891968, 30.157415], [-97.892275, 30.157555], [-97.892526, 30.157684], [-97.892789, 30.157829], [-97.893105, 30.157978], [-97.893432, 30.158108], [-97.893658, 30.158184], [-97.893829, 30.158253], [-97.894182, 30.158408], [-97.89434, 30.158486], [-97.894483, 30.158582], [-97.894619, 30.158659], [-97.894774, 30.158728], [-97.894947, 30.158792], [-97.895189, 30.15889], [-97.895352, 30.158931], [-97.895525, 30.158981], [-97.895725, 30.159043], [-97.895866, 30.159112], [-97.895993, 30.159194], [-97.896104, 30.159306], [-97.896196, 30.159418], [-97.896369, 30.159611], [-97.896454, 30.159725], [-97.89657, 30.159851], [-97.896715, 30.160016], [-97.896845, 30.160159], [-97.897006, 30.160423], [-97.89705, 30.160559], [-97.897124, 30.16081], [-97.897188, 30.160957], [-97.897255, 30.161096], [-97.897329, 30.161254], [-97.897384, 30.161404], [-97.897419, 30.161638], [-97.89742, 30.1619], [-97.897358, 30.162251], [-97.897366, 30.162399], [-97.897361, 30.162561], [-97.89734, 30.162707], [-97.897354, 30.162867], [-97.897384, 30.163071], [-97.897406, 30.1635], [-97.897408, 30.163673], [-97.897404, 30.163836], [-97.897395, 30.164033], [-97.897355, 30.164283], [-97.897342, 30.164434], [-97.89734, 30.164574], [-97.897335, 30.164728], [-97.897343, 30.164882], [-97.89736, 30.165094], [-97.897393, 30.165232], [-97.897434, 30.165384], [-97.897507, 30.165537], [-97.897608, 30.165737], [-97.897696, 30.165854], [-97.897805, 30.165986], [-97.898043, 30.166147], [-97.898325, 30.166216], [-97.898488, 30.166246], [-97.898648, 30.16626], [-97.898908, 30.166268], [-97.899216, 30.166252], [-97.899565, 30.166179], [-97.899756, 30.166089], [-97.89994, 30.166001], [-97.900165, 30.165901], [-97.900336, 30.165827], [-97.900496, 30.165773], [-97.900673, 30.16571], [-97.900884, 30.165634], [-97.901097, 30.165553], [-97.901344, 30.165445], [-97.901614, 30.165329], [-97.901769, 30.165274], [-97.901984, 30.165171], [-97.902195, 30.165068], [-97.902426, 30.164949], [-97.902714, 30.1648], [-97.902872, 30.164729], [-97.903085, 30.164615], [-97.903281, 30.164497], [-97.903441, 30.16441], [-97.903696, 30.164271], [-97.904099, 30.164597], [-97.90447, 30.164861], [-97.905115, 30.165319], [-97.914185, 30.171765], [-97.928737, 30.182103], [-97.928796, 30.184418], [-97.928875, 30.185706], [-97.928856, 30.186201], [-97.928703, 30.186927], [-97.92845, 30.18748], [-97.926524, 30.190673], [-97.926398, 30.19086], [-97.926026, 30.191379], [-97.925205, 30.1924], [-97.924184, 30.19364], [-97.921081, 30.198359], [-97.919906, 30.200053], [-97.919217, 30.201132], [-97.91829, 30.202283], [-97.917557, 30.203177], [-97.916477, 30.203657], [-97.915149, 30.203949], [-97.912762, 30.20447], [-97.911998, 30.204794], [-97.911549, 30.205124], [-97.910879, 30.206189], [-97.91012, 30.207214], [-97.909184, 30.208753], [-97.908738, 30.209254], [-97.908196, 30.209598], [-97.907455, 30.209895], [-97.90626, 30.209858], [-97.903924, 30.209347], [-97.903365, 30.209303], [-97.901412, 30.209313], [-97.900887, 30.209393], [-97.899768, 30.209826], [-97.89922, 30.210245], [-97.898881, 30.210629], [-97.897447, 30.212901], [-97.896843, 30.213857], [-97.896498, 30.214403], [-97.894689, 30.217317], [-97.894372, 30.218158], [-97.894279, 30.218407], [-97.894164, 30.218174], [-97.893986, 30.217967], [-97.893791, 30.217693], [-97.893593, 30.217343], [-97.893457, 30.217038], [-97.893334, 30.216667], [-97.893259, 30.216382], [-97.893233, 30.216187], [-97.893205, 30.215746], [-97.893211, 30.215185], [-97.893228, 30.214539], [-97.893233, 30.214], [-97.893171, 30.213413], [-97.893103, 30.213151], [-97.892959, 30.212705], [-97.892751, 30.212275], [-97.892556, 30.211966], [-97.89219, 30.211511], [-97.891883, 30.211202], [-97.891244, 30.210585], [-97.8904, 30.209777], [-97.890016, 30.209412]]]]
    },
    "properties": {
      "neighbourhood": "78739",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-97.636577, 30.402658], [-97.637538, 30.398205], [-97.637555, 30.398127], [-97.639561, 30.388836], [-97.640538, 30.38324], [-97.639676, 30.38282], [-97.637649, 30.381755], [-97.633479, 30.379643], [-97.633284, 30.379377], [-97.633221, 30.378985], [-97.633032, 30.378759], [-97.63285, 30.37867], [-97.632661, 30.378578], [-97.630735, 30.377635], [-97.627718, 30.37616], [-97.627634, 30.375938], [-97.627751, 30.375526], [-97.627612, 30.375305], [-97.626195, 30.374571], [-97.624322, 30.373605], [-97.625025, 30.372599], [-97.62513, 30.372478], [-97.623322, 30.371582], [-97.622302, 30.371035], [-97.621326, 30.370527], [-97.620552, 30.370189], [-97.619527, 30.369862], [-97.618574, 30.369597], [-97.616823, 30.369274], [-97.6167, 30.369051], [-97.616653, 30.368817], [-97.616711, 30.368631], [-97.616865, 30.368428], [-97.616963, 30.36824], [-97.616934, 30.368019], [-97.616854, 30.367806], [-97.61683, 30.367618], [-97.61688, 30.36741], [-97.616802, 30.367227], [-97.616688, 30.367107], [-97.616504, 30.366921], [-97.616327, 30.366733], [-97.616114, 30.366564], [-97.615872, 30.366352], [-97.615742, 30.366149], [-97.615632, 30.365951], [-97.615549, 30.365776], [-97.61551, 30.365596], [-97.615471, 30.365378], [-97.615383, 30.365176], [-97.615223, 30.365106], [-97.615065, 30.365007], [-97.615132, 30.364862], [-97.615059, 30.364671], [-97.614904, 30.364541], [-97.614723, 30.364435], [-97.614621, 30.36426], [-97.614407, 30.364173], [-97.61434, 30.364001], [-97.614196, 30.363893], [-97.614128, 30.363691], [-97.614004, 30.363532], [-97.613872, 30.363392], [-97.613741, 30.363268], [-97.613504, 30.363271], [-97.613274, 30.363313], [-97.613109, 30.363205], [-97.612914, 30.363143], [-97.612711, 30.363015], [-97.612495, 30.362917], [-97.612346, 30.362771], [-97.612166, 30.362629], [-97.611997, 30.362461], [-97.611899, 30.36231], [-97.611801, 30.362148], [-97.611801, 30.361948], [-97.611684, 30.361753], [-97.611571, 30.361607], [-97.611454, 30.361418], [-97.611339, 30.361247], [-97.611259, 30.361086], [-97.611122, 30.36094], [-97.610822, 30.360857], [-97.610558, 30.360794], [-97.610401, 30.360743], [-97.610153, 30.360612], [-97.609997, 30.360465], [-97.609848, 30.360336], [-97.609626, 30.360295], [-97.609412, 30.360362], [-97.609202, 30.360413], [-97.60898, 30.360325], [-97.608753, 30.360277], [-97.60852, 30.360349], [-97.608278, 30.360388], [-97.608017, 30.360368], [-97.607787, 30.360264], [-97.607622, 30.360137], [-97.607422, 30.360125], [-97.607176, 30.360106], [-97.606939, 30.360131], [-97.606736, 30.360212], [-97.60648, 30.360352], [-97.606203, 30.360393], [-97.606091, 30.359065], [-97.606205, 30.358729], [-97.609461, 30.353482], [-97.608971, 30.352231], [-97.607353, 30.351553], [-97.606885, 30.350605], [-97.606937, 30.349602], [-97.606963, 30.34946], [-97.607104, 30.349245], [-97.607195, 30.349044], [-97.607373, 30.348896], [-97.607564, 30.348788], [-97.607743, 30.348687], [-97.607887, 30.34853], [-97.607929, 30.348174], [-97.607938, 30.347932], [-97.60792, 30.347728], [-97.607966, 30.347498], [-97.608118, 30.347331], [-97.608297, 30.347224], [-97.608499, 30.347044], [-97.608501, 30.346901], [-97.608543, 30.34666], [-97.608658, 30.346445], [-97.608578, 30.346251], [-97.608514, 30.34606], [-97.608598, 30.345897], [-97.608734, 30.345726], [-97.608901, 30.345419], [-97.60903, 30.345191], [-97.609107, 30.345058], [-97.609074, 30.344873], [-97.609222, 30.344719], [-97.609391, 30.344582], [-97.609511, 30.344415], [-97.609576, 30.344179], [-97.609542, 30.343912], [-97.609505, 30.343763], [-97.60946, 30.343426], [-97.609429, 30.343282], [-97.609614, 30.34303], [-97.610485, 30.34235], [-97.610935, 30.341744], [-97.611432, 30.341545], [-97.611818, 30.341771], [-97.612207, 30.34212], [-97.612448, 30.34226], [-97.612751, 30.342338], [-97.61317, 30.342377], [-97.613304, 30.342053], [-97.613282, 30.341653], [-97.613216, 30.341369], [-97.613086, 30.341017], [-97.612947, 30.340755], [-97.612728, 30.340464], [-97.612502, 30.340187], [-97.612084, 30.339738], [-97.611749, 30.339467], [-97.611555, 30.339323], [-97.611241, 30.339137], [-97.610913, 30.338943], [-97.609716, 30.33845], [-97.609448, 30.33828], [-97.609148, 30.338084], [-97.608882, 30.337852], [-97.608664, 30.337592], [-97.608367, 30.337121], [-97.608094, 30.336463], [-97.607512, 30.334814], [-97.60747, 30.334654], [-97.6091, 30.334221], [-97.611797, 30.333503], [-97.613982, 30.332938], [-97.614149, 30.332898], [-97.614988, 30.332671], [-97.617251, 30.332083], [-97.618127, 30.331857], [-97.618454, 30.331762], [-97.618713, 30.33171], [-97.619694, 30.331516], [-97.620161, 30.331414], [-97.620338, 30.33139], [-97.621523, 30.331231], [-97.622595, 30.331085], [-97.623228, 30.331049], [-97.623896, 30.331008], [-97.626049, 30.330859], [-97.626885, 30.330802], [-97.628255, 30.33071], [-97.628521, 30.330694], [-97.629607, 30.330617], [-97.630969, 30.330539], [-97.632547, 30.330446], [-97.634288, 30.330325], [-97.636044, 30.330203], [-97.6366, 30.33016], [-97.637514, 30.330096], [-97.638079, 30.330053], [-97.638941, 30.33], [-97.6402, 30.329897], [-97.640862, 30.329853], [-97.64261, 30.329722], [-97.642843, 30.329708], [-97.644016, 30.329619], [-97.645142, 30.329552], [-97.646403, 30.329477], [-97.647268, 30.329402], [-97.647573, 30.329375], [-97.649209, 30.329233], [-97.649865, 30.329189], [-97.651214, 30.329099], [-97.651942, 30.329051], [-97.652901, 30.328989], [-97.653419, 30.328953], [-97.654163, 30.328905], [-97.654789, 30.328863], [-97.657493, 30.328678], [-97.657692, 30.328665], [-97.658961, 30.328576], [-97.662317, 30.32836], [-97.663675, 30.328273], [-97.664326, 30.328193], [-97.664523, 30.328169], [-97.665041, 30.328084], [-97.665502, 30.328011], [-97.665894, 30.327915], [-97.666899, 30.327655], [-97.667335, 30.327538], [-97.668685, 30.327175], [-97.669135, 30.327022], [-97.670256, 30.32663], [-97.673325, 30.325558], [-97.674037, 30.326093], [-97.674533, 30.326466], [-97.675503, 30.327193], [-97.675923, 30.32751], [-97.676283, 30.327707], [-97.677128, 30.328164], [-97.678284, 30.328733], [-97.679806, 30.32948], [-97.682494, 30.330737], [-97.683812, 30.331391], [-97.685135, 30.331999], [-97.68634, 30.332593], [-97.685835, 30.333356], [-97.685315, 30.334143], [-97.684784, 30.334951], [-97.684257, 30.335799], [-97.68382, 30.336447], [-97.683223, 30.337342], [-97.68231, 30.338775], [-97.681187, 30.340482], [-97.680643, 30.341271], [-97.680443, 30.341528], [-97.680131, 30.341937], [-97.679841, 30.34227], [-97.679539, 30.342613], [-97.679071, 30.343156], [-97.678546, 30.343723], [-97.678333, 30.343957], [-97.678066, 30.344326], [-97.677915, 30.344639], [-97.6778, 30.344876], [-97.677502, 30.345805], [-97.677459, 30.345939], [-97.677253, 30.346611], [-97.677111, 30.347117], [-97.676801, 30.348139], [-97.676459, 30.349296], [-97.676193, 30.350165], [-97.675948, 30.350817], [-97.675631, 30.351385], [-97.675253, 30.352002], [-97.674954, 30.352496], [-97.674737, 30.352846], [-97.674355, 30.35343], [-97.674155, 30.353709], [-97.673804, 30.354285], [-97.673417, 30.354871], [-97.673108, 30.355351], [-97.672599, 30.3561], [-97.672151, 30.356745], [-97.671677, 30.357483], [-97.670845, 30.358808], [-97.670252, 30.359731], [-97.669547, 30.360817], [-97.668866, 30.361864], [-97.66871, 30.362141], [-97.668594, 30.362403], [-97.668503, 30.362654], [-97.668456, 30.362937], [-97.668462, 30.363256], [-97.668507, 30.363787], [-97.668673, 30.365642], [-97.668706, 30.36605], [-97.668797, 30.367044], [-97.668783, 30.36736], [-97.668725, 30.367684], [-97.668558, 30.368186], [-97.668437, 30.36844], [-97.668107, 30.36895], [-97.667477, 30.369979], [-97.666729, 30.371127], [-97.666235, 30.371854], [-97.665989, 30.372179], [-97.665751, 30.372408], [-97.665564, 30.37255], [-97.665292, 30.372736], [-97.664867, 30.372934], [-97.663596, 30.373546], [-97.662671, 30.373983], [-97.66192, 30.374344], [-97.661369, 30.374624], [-97.660868, 30.374905], [-97.660457, 30.375169], [-97.660257, 30.375363], [-97.659933, 30.375672], [-97.659668, 30.37598], [-97.659041, 30.376784], [-97.65868, 30.377277], [-97.658307, 30.377624], [-97.657915, 30.377897], [-97.657636, 30.378012], [-97.655546, 30.378738], [-97.655018, 30.378914], [-97.654379, 30.379234], [-97.653957, 30.379533], [-97.653419, 30.380077], [-97.652892, 30.380605], [-97.651855, 30.38172], [-97.650412, 30.383287], [-97.650023, 30.383818], [-97.649499, 30.384902], [-97.648975, 30.38606], [-97.648586, 30.386924], [-97.648501, 30.387112], [-97.647837, 30.388303], [-97.647515, 30.388928], [-97.647213, 30.389494], [-97.646762, 30.390458], [-97.646424, 30.391271], [-97.645825, 30.392235], [-97.644906, 30.393753], [-97.644327, 30.39469], [-97.643639, 30.395682], [-97.642856, 30.396873], [-97.645102, 30.398204], [-97.649373, 30.401139], [-97.646657, 30.403259], [-97.647172, 30.401519], [-97.646309, 30.401035], [-97.644805, 30.403793], [-97.645431, 30.404665], [-97.642295, 30.406245], [-97.641896, 30.405904], [-97.641834, 30.405806], [-97.641821, 30.405787], [-97.641781, 30.405748], [-97.64157, 30.405544], [-97.641354, 30.40535], [-97.641279, 30.405283], [-97.640795, 30.404821], [-97.640287, 30.404566], [-97.63945, 30.404159], [-97.638442, 30.403652], [-97.637676, 30.403198], [-97.637497, 30.403111], [-97.636577, 30.402658]]]]
    },
    "properties": {
      "neighbourhood": "78754",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-97.873028, 30.438064], [-97.873346, 30.436983], [-97.873363, 30.43661], [-97.873291, 30.436212], [-97.87298, 30.435799], [-97.871984, 30.435302], [-97.87179, 30.435152], [-97.871642, 30.434935], [-97.871599, 30.43467], [-97.871627, 30.434464], [-97.871734, 30.434243], [-97.871984, 30.434105], [-97.872433, 30.43377], [-97.872766, 30.433633], [-97.872875, 30.433526], [-97.873001, 30.433294], [-97.873087, 30.433178], [-97.87326, 30.433008], [-97.873343, 30.432836], [-97.873653, 30.431929], [-97.87368, 30.431784], [-97.873704, 30.431635], [-97.873708, 30.431493], [-97.873696, 30.431151], [-97.873734, 30.430893], [-97.873807, 30.430636], [-97.87393, 30.430196], [-97.873922, 30.429934], [-97.873852, 30.429741], [-97.873694, 30.42949], [-97.87333, 30.429082], [-97.872942, 30.428466], [-97.872553, 30.427304], [-97.872444, 30.426875], [-97.872538, 30.42554], [-97.87256, 30.425274], [-97.872356, 30.424464], [-97.871974, 30.423874], [-97.87123, 30.422729], [-97.870289, 30.42168], [-97.869405, 30.420513], [-97.869, 30.419095], [-97.868958, 30.417196], [-97.868756, 30.416623], [-97.867284, 30.414697], [-97.866684, 30.413555], [-97.8659, 30.41288], [-97.864826, 30.412375], [-97.864327, 30.411879], [-97.863787, 30.41101], [-97.862908, 30.409043], [-97.861585, 30.408031], [-97.859894, 30.407311], [-97.858534, 30.406597], [-97.858166, 30.406367], [-97.857627, 30.405861], [-97.85629, 30.405253], [-97.855184, 30.404582], [-97.854068, 30.403691], [-97.85877, 30.396617], [-97.863686, 30.395496], [-97.866864, 30.39477], [-97.866885, 30.393437], [-97.870367, 30.39325], [-97.870614, 30.392661], [-97.863734, 30.393695], [-97.867887, 30.387283], [-97.869194, 30.385265], [-97.870738, 30.382881], [-97.863109, 30.357171], [-97.862884, 30.357082], [-97.862885, 30.356867], [-97.863002, 30.356661], [-97.863166, 30.356515], [-97.863348, 30.356376], [-97.863441, 30.35624], [-97.863521, 30.35603], [-97.863483, 30.355814], [-97.863522, 30.355636], [-97.863634, 30.355465], [-97.863796, 30.355347], [-97.863902, 30.355168], [-97.863901, 30.354992], [-97.863956, 30.354781], [-97.863973, 30.354641], [-97.864042, 30.354439], [-97.864011, 30.354221], [-97.86413, 30.35408], [-97.86413, 30.35388], [-97.863946, 30.353508], [-97.863887, 30.353317], [-97.864132, 30.353167], [-97.86463, 30.35283], [-97.865208, 30.35244], [-97.867391, 30.350961], [-97.87185, 30.347672], [-97.874407, 30.34633], [-97.875285, 30.345868], [-97.877735, 30.344845], [-97.879054, 30.344449], [-97.879873, 30.344207], [-97.880281, 30.344082], [-97.881284, 30.343783], [-97.881827, 30.34365], [-97.882518, 30.343531], [-97.883524, 30.343385], [-97.884389, 30.343303], [-97.884964, 30.343289], [-97.885499, 30.34328], [-97.886569, 30.343212], [-97.888109, 30.343077], [-97.888861, 30.342995], [-97.889798, 30.342894], [-97.890425, 30.342813], [-97.89086, 30.342755], [-97.892124, 30.342534], [-97.892929, 30.342388], [-97.894324, 30.342068], [-97.895172, 30.341861], [-97.896073, 30.341617], [-97.896236, 30.341576], [-97.896441, 30.341525], [-97.896632, 30.34146], [-97.896831, 30.341386], [-97.89704, 30.341291], [-97.897203, 30.341226], [-97.897545, 30.341053], [-97.898044, 30.340796], [-97.898544, 30.34052], [-97.899148, 30.340176], [-97.899649, 30.339864], [-97.900108, 30.339606], [-97.900547, 30.339292], [-97.900883, 30.338996], [-97.901262, 30.338649], [-97.901725, 30.338176], [-97.901899, 30.338009], [-97.90204, 30.337871], [-97.903152, 30.336957], [-97.904016, 30.336083], [-97.904838, 30.335279], [-97.905641, 30.334386], [-97.906674, 30.333336], [-97.907302, 30.332886], [-97.907993, 30.332327], [-97.908409, 30.332123], [-97.908699, 30.332021], [-97.909158, 30.33176], [-97.909598, 30.33143], [-97.909955, 30.331118], [-97.910334, 30.330768], [-97.910672, 30.330364], [-97.911156, 30.329815], [-97.911284, 30.329735], [-97.911745, 30.329491], [-97.912449, 30.329116], [-97.913376, 30.328512], [-97.914052, 30.328107], [-97.914221, 30.328006], [-97.914941, 30.32759], [-97.916006, 30.327066], [-97.916809, 30.326715], [-97.917636, 30.326362], [-97.918494, 30.326076], [-97.919447, 30.32575], [-97.920133, 30.325614], [-97.920676, 30.325536], [-97.920961, 30.325495], [-97.921768, 30.325458], [-97.922586, 30.32549], [-97.923492, 30.325576], [-97.924174, 30.325649], [-97.924796, 30.325762], [-97.925138, 30.325846], [-97.925559, 30.32595], [-97.926307, 30.326159], [-97.926908, 30.326366], [-97.927649, 30.326627], [-97.928547, 30.327051], [-97.928877, 30.327181], [-97.929257, 30.327331], [-97.930258, 30.327867], [-97.931247, 30.328562], [-97.932233, 30.3294], [-97.933078, 30.330076], [-97.933305, 30.330358], [-97.9334, 30.330475], [-97.933557, 30.330671], [-97.933796, 30.330945], [-97.934332, 30.331719], [-97.934687, 30.332331], [-97.935015, 30.33314], [-97.935166, 30.333696], [-97.935208, 30.334461], [-97.935055, 30.335135], [-97.934702, 30.335824], [-97.934462, 30.336637], [-97.934202, 30.336921], [-97.933676, 30.337428], [-97.932542, 30.338446], [-97.931851, 30.338947], [-97.930652, 30.34013], [-97.930335, 30.340498], [-97.930217, 30.341081], [-97.930018, 30.341666], [-97.929428, 30.34226], [-97.92887, 30.342893], [-97.928437, 30.343383], [-97.92812, 30.343787], [-97.927636, 30.34424], [-97.927472, 30.344396], [-97.927194, 30.34466], [-97.926753, 30.345007], [-97.926476, 30.345307], [-97.926248, 30.34555], [-97.925869, 30.345865], [-97.925447, 30.346319], [-97.925046, 30.346793], [-97.924645, 30.347195], [-97.924366, 30.347443], [-97.923725, 30.347819], [-97.923414, 30.348066], [-97.923264, 30.348184], [-97.922469, 30.348813], [-97.921717, 30.349296], [-97.921004, 30.349888], [-97.92029, 30.350499], [-97.919412, 30.351071], [-97.918487, 30.351933], [-97.917897, 30.352338], [-97.917282, 30.353093], [-97.916461, 30.353925], [-97.916072, 30.354569], [-97.91597, 30.354716], [-97.915518, 30.355362], [-97.914869, 30.356618], [-97.914437, 30.35741], [-97.914366, 30.357593], [-97.914196, 30.358032], [-97.913911, 30.358704], [-97.913685, 30.359502], [-97.913312, 30.360422], [-97.913199, 30.361083], [-97.913168, 30.361258], [-97.913159, 30.361599], [-97.912979, 30.362237], [-97.913008, 30.362718], [-97.913087, 30.362984], [-97.913235, 30.363474], [-97.913319, 30.364259], [-97.91343, 30.365589], [-97.913437, 30.366112], [-97.913567, 30.36659], [-97.913698, 30.366997], [-97.91375, 30.367427], [-97.913778, 30.367972], [-97.913815, 30.368473], [-97.913918, 30.36902], [-97.913993, 30.369868], [-97.914087, 30.370374], [-97.914178, 30.370931], [-97.914253, 30.371513], [-97.914263, 30.371722], [-97.914244, 30.372021], [-97.914204, 30.372378], [-97.914157, 30.372762], [-97.914143, 30.373073], [-97.914206, 30.373536], [-97.914266, 30.374068], [-97.914329, 30.374446], [-97.914383, 30.374804], [-97.914409, 30.375206], [-97.914417, 30.37566], [-97.914391, 30.376449], [-97.91437, 30.376787], [-97.914339, 30.377053], [-97.914344, 30.377452], [-97.914358, 30.377763], [-97.914382, 30.378525], [-97.914398, 30.379359], [-97.914468, 30.379883], [-97.914533, 30.380387], [-97.914558, 30.380594], [-97.914588, 30.381467], [-97.914652, 30.382617], [-97.914697, 30.383259], [-97.914704, 30.383812], [-97.914651, 30.384284], [-97.9146, 30.384698], [-97.914574, 30.384907], [-97.914434, 30.385562], [-97.91433, 30.386033], [-97.914149, 30.386714], [-97.913996, 30.387033], [-97.913842, 30.387467], [-97.913682, 30.387712], [-97.913449, 30.387977], [-97.913236, 30.388182], [-97.913142, 30.388345], [-97.912811, 30.38882], [-97.912367, 30.389301], [-97.911838, 30.389808], [-97.909758, 30.391161], [-97.909573, 30.391251], [-97.908877, 30.391587], [-97.90795, 30.391954], [-97.907276, 30.392327], [-97.903051, 30.392896], [-97.899293, 30.393619], [-97.897582, 30.394357], [-97.896715, 30.39519], [-97.896171, 30.396431], [-97.896258, 30.397858], [-97.896336, 30.398167], [-97.896482, 30.39875], [-97.896902, 30.40004], [-97.897651, 30.401267], [-97.898776, 30.402248], [-97.900152, 30.403058], [-97.902378, 30.404382], [-97.902782, 30.40464], [-97.90353, 30.405116], [-97.904864, 30.405977], [-97.905957, 30.406702], [-97.906321, 30.406929], [-97.906879, 30.407655], [-97.907125, 30.408091], [-97.907489, 30.408733], [-97.907851, 30.410682], [-97.907825, 30.411685], [-97.907812, 30.412213], [-97.907239, 30.415409], [-97.90702, 30.41634], [-97.90641, 30.418941], [-97.906001, 30.420454], [-97.905767, 30.421292], [-97.904853, 30.42117], [-97.903842, 30.421313], [-97.902871, 30.421506], [-97.901795, 30.421755], [-97.900778, 30.422179], [-97.899783, 30.422501], [-97.898873, 30.422696], [-97.898508, 30.422752], [-97.898151, 30.422808], [-97.897503, 30.423258], [-97.89706, 30.423695], [-97.896286, 30.424198], [-97.895811, 30.424312], [-97.895103, 30.424318], [-97.894459, 30.424234], [-97.893658, 30.424236], [-97.892955, 30.424385], [-97.892189, 30.424601], [-97.891335, 30.425011], [-97.890541, 30.425497], [-97.889913, 30.425947], [-97.889524, 30.426132], [-97.889081, 30.426341], [-97.888479, 30.42656], [-97.887962, 30.426658], [-97.887406, 30.426719], [-97.886792, 30.426619], [-97.88622, 30.426448], [-97.885708, 30.426384], [-97.885213, 30.426446], [-97.884818, 30.426598], [-97.884318, 30.426874], [-97.883691, 30.427272], [-97.883237, 30.427725], [-97.882611, 30.428497], [-97.881949, 30.429466], [-97.881389, 30.430471], [-97.881161, 30.430898], [-97.881087, 30.431037], [-97.880957, 30.431282], [-97.880069, 30.431444], [-97.879408, 30.431538], [-97.879052, 30.43151], [-97.878157, 30.431363], [-97.87784, 30.431346], [-97.876212, 30.431417], [-97.876039, 30.431633], [-97.875718, 30.432048], [-97.875501, 30.432688], [-97.875365, 30.433103], [-97.875287, 30.433371], [-97.875221, 30.43362], [-97.874993, 30.433948], [-97.87483, 30.434515], [-97.874776, 30.434852], [-97.874795, 30.435141], [-97.874849, 30.43556], [-97.874963, 30.4362], [-97.874979, 30.43672], [-97.874903, 30.437143], [-97.874741, 30.437486], [-97.874724, 30.437502], [-97.874724, 30.437502], [-97.874467, 30.437739], [-97.873946, 30.437969], [-97.873525, 30.438079], [-97.873318, 30.43808], [-97.873309, 30.43808], [-97.873048, 30.438065], [-97.873028, 30.438064]]]]
    },
    "properties": {
      "neighbourhood": "78732",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-98.018756, 30.241665], [-98.016169, 30.240614], [-98.015626, 30.240605], [-98.014991, 30.240673], [-98.014427, 30.240874], [-98.013949, 30.241353], [-98.012933, 30.241705], [-98.012759, 30.241763], [-98.012025, 30.242005], [-98.011423, 30.242311], [-98.01072, 30.242708], [-98.010415, 30.242644], [-98.010264, 30.24169], [-98.009914, 30.240155], [-98.009625, 30.239289], [-98.009345, 30.238945], [-98.008864, 30.238271], [-98.008604, 30.237936], [-98.007744, 30.236595], [-98.006937, 30.235714], [-98.006332, 30.235211], [-98.005277, 30.234262], [-98.003258, 30.233051], [-98.002329, 30.232608], [-98.001532, 30.232362], [-98.00073, 30.232298], [-98.000065, 30.232415], [-97.999358, 30.232807], [-97.998826, 30.233064], [-97.998242, 30.233215], [-97.997686, 30.23342], [-97.996376, 30.233465], [-97.995482, 30.233465], [-97.995023, 30.233489], [-97.994187, 30.233639], [-97.993489, 30.233654], [-97.992781, 30.233465], [-97.991546, 30.232958], [-97.990646, 30.2327], [-97.989303, 30.232516], [-97.988992, 30.232472], [-97.987807, 30.233058], [-97.985731, 30.232805], [-97.985297, 30.233171], [-97.985173, 30.23326], [-97.983322, 30.233702], [-97.982679, 30.233926], [-97.982268, 30.233933], [-97.98222, 30.233919], [-97.98093, 30.233559], [-97.979136, 30.233135], [-97.975535, 30.231138], [-97.974113, 30.230326], [-97.971929, 30.22948], [-97.970277, 30.228429], [-97.968343, 30.228253], [-97.967331, 30.227995], [-97.966651, 30.227798], [-97.966178, 30.227671], [-97.964947, 30.227225], [-97.963589, 30.226661], [-97.963306, 30.226441], [-97.961001, 30.225309], [-97.959253, 30.2246], [-97.957045, 30.2233], [-97.956055, 30.221994], [-97.955961, 30.222052], [-97.955113, 30.222573], [-97.95345, 30.22331], [-97.953117, 30.223474], [-97.947486, 30.225759], [-97.944945, 30.226881], [-97.94213, 30.228016], [-97.938264, 30.229605], [-97.934972, 30.230451], [-97.931937, 30.23098], [-97.92755, 30.231717], [-97.926122, 30.231974], [-97.919591, 30.2331], [-97.912316, 30.234417], [-97.911217, 30.234501], [-97.910175, 30.234495], [-97.910165, 30.234493], [-97.90952, 30.234367], [-97.908665, 30.234227], [-97.90199, 30.232241], [-97.90133, 30.232047], [-97.900972, 30.231939], [-97.900563, 30.231802], [-97.900073, 30.231655], [-97.899069, 30.231333], [-97.895698, 30.230323], [-97.894939, 30.230166], [-97.89372, 30.229856], [-97.891743, 30.229557], [-97.888446, 30.229198], [-97.888306, 30.229192], [-97.888515, 30.228561], [-97.891305, 30.224106], [-97.892601, 30.221997], [-97.893223, 30.22106], [-97.893619, 30.220064], [-97.894279, 30.218407], [-97.894372, 30.218158], [-97.894689, 30.217317], [-97.896498, 30.214403], [-97.896843, 30.213857], [-97.897447, 30.212901], [-97.898881, 30.210629], [-97.89922, 30.210245], [-97.899768, 30.209826], [-97.900887, 30.209393], [-97.901412, 30.209313], [-97.903365, 30.209303], [-97.903924, 30.209347], [-97.90626, 30.209858], [-97.907455, 30.209895], [-97.908196, 30.209598], [-97.908738, 30.209254], [-97.909184, 30.208753], [-97.91012, 30.207214], [-97.910879, 30.206189], [-97.911549, 30.205124], [-97.911998, 30.204794], [-97.912762, 30.20447], [-97.915149, 30.203949], [-97.916477, 30.203657], [-97.917557, 30.203177], [-97.91829, 30.202283], [-97.919217, 30.201132], [-97.919906, 30.200053], [-97.921081, 30.198359], [-97.924184, 30.19364], [-97.925205, 30.1924], [-97.926026, 30.191379], [-97.926398, 30.19086], [-97.926524, 30.190673], [-97.92845, 30.18748], [-97.928703, 30.186927], [-97.928856, 30.186201], [-97.928875, 30.185706], [-97.928796, 30.184418], [-97.928737, 30.182103], [-97.928798, 30.180275], [-97.928761, 30.178107], [-97.928696, 30.176941], [-97.928737, 30.17677], [-97.92872, 30.175759], [-97.929048, 30.175457], [-97.931207, 30.173467], [-97.931253, 30.173452], [-97.931397, 30.170853], [-97.919878, 30.166207], [-97.918062, 30.158107], [-97.910961, 30.161561], [-97.908098, 30.162953], [-97.905513, 30.160406], [-97.906156, 30.154653], [-97.896956, 30.149303], [-97.902219, 30.132568], [-97.901078, 30.130184], [-97.900305, 30.125788], [-97.90254, 30.124387], [-97.912392, 30.124628], [-97.914919, 30.112927], [-97.925606, 30.10522], [-97.947189, 30.110943], [-97.947717, 30.111083], [-97.951055, 30.115301], [-97.995407, 30.120632], [-98.010263, 30.131872], [-98.01026, 30.131875], [-98.010257, 30.131878], [-97.996017, 30.141132], [-97.993812, 30.142176], [-97.985871, 30.146846], [-97.993771, 30.151869], [-97.993987, 30.153611], [-97.994233, 30.1538], [-98.008945, 30.153614], [-98.008951, 30.153614], [-98.009056, 30.15523], [-98.009059, 30.158445], [-98.008615, 30.162004], [-98.008673, 30.166226], [-98.008097, 30.168317], [-98.005415, 30.17175], [-98.004679, 30.174179], [-98.003799, 30.175761], [-98.003246, 30.176482], [-98.00312, 30.176903], [-98.0021, 30.180334], [-98.002067, 30.181727], [-98.001069, 30.18419], [-98.000588, 30.186675], [-98.000226, 30.190285], [-97.997451, 30.192113], [-97.997939, 30.194336], [-97.997383, 30.196124], [-97.997508, 30.196768], [-97.997514, 30.196795], [-97.999276, 30.196478], [-98.003842, 30.196363], [-98.008139, 30.196293], [-98.008238, 30.196292], [-98.012105, 30.196678], [-98.011889, 30.198008], [-98.01242, 30.198813], [-98.013888, 30.20011], [-98.014102, 30.200303], [-98.014613, 30.201869], [-98.015622, 30.203983], [-98.015941, 30.205911], [-98.01713, 30.208235], [-98.01745, 30.20859], [-98.020828, 30.211035], [-98.02299, 30.215463], [-98.023239, 30.21574], [-98.024411, 30.217205], [-98.024571, 30.218127], [-98.025135, 30.219058], [-98.02483, 30.221685], [-98.026664, 30.225472], [-98.026594, 30.226139], [-98.026373, 30.226927], [-98.022917, 30.232263], [-98.0228, 30.232577], [-98.02505, 30.23407], [-98.024725, 30.236201], [-98.026395, 30.23746], [-98.02658, 30.238368], [-98.027165, 30.240002], [-98.028249, 30.240656], [-98.029825, 30.242329], [-98.029327, 30.244771], [-98.027462, 30.245958], [-98.02665, 30.245567], [-98.025428, 30.24516], [-98.023613, 30.244555], [-98.021459, 30.243317], [-98.018756, 30.241665]]]]
    },
    "properties": {
      "neighbourhood": "78737",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-97.727922, 30.329055], [-97.727604, 30.328526], [-97.727417, 30.32803], [-97.727379, 30.327856], [-97.727354, 30.327592], [-97.727314, 30.327393], [-97.727262, 30.327166], [-97.727117, 30.326745], [-97.726879, 30.32638], [-97.726779, 30.326254], [-97.726638, 30.32615], [-97.726336, 30.325943], [-97.726623, 30.3255], [-97.728077, 30.32322], [-97.728252, 30.322948], [-97.728738, 30.322147], [-97.72882, 30.322011], [-97.729393, 30.321087], [-97.730291, 30.319607], [-97.730821, 30.31877], [-97.731133, 30.318265], [-97.731441, 30.317782], [-97.731736, 30.317364], [-97.732176, 30.316699], [-97.732642, 30.316566], [-97.73301, 30.316441], [-97.73343, 30.316296], [-97.735263, 30.315714], [-97.735512, 30.315617], [-97.735694, 30.315527], [-97.735876, 30.315432], [-97.736012, 30.315347], [-97.736148, 30.315251], [-97.736316, 30.315125], [-97.736505, 30.314977], [-97.736689, 30.314799], [-97.736806, 30.314651], [-97.736977, 30.314423], [-97.737133, 30.314148], [-97.737304, 30.313893], [-97.737571, 30.313464], [-97.73854, 30.312098], [-97.739311, 30.31101], [-97.740039, 30.30995], [-97.740718, 30.308913], [-97.74139, 30.307862], [-97.741895, 30.307091], [-97.742381, 30.306254], [-97.743049, 30.305197], [-97.744148, 30.30572], [-97.745705, 30.306409], [-97.746378, 30.306709], [-97.747506, 30.307089], [-97.747845, 30.307159], [-97.748145, 30.307358], [-97.748237, 30.307497], [-97.748298, 30.307655], [-97.748464, 30.30806], [-97.748542, 30.308235], [-97.748648, 30.30846], [-97.748745, 30.308695], [-97.748834, 30.308906], [-97.7488, 30.309084], [-97.748853, 30.309308], [-97.748902, 30.309568], [-97.748907, 30.309766], [-97.748921, 30.310008], [-97.74893, 30.310148], [-97.748956, 30.310451], [-97.748977, 30.310829], [-97.748962, 30.31098], [-97.748925, 30.311199], [-97.748866, 30.311511], [-97.748785, 30.311804], [-97.748761, 30.31204], [-97.748712, 30.312218], [-97.748668, 30.31236], [-97.748608, 30.312557], [-97.748614, 30.31278], [-97.748715, 30.312911], [-97.748826, 30.313056], [-97.748919, 30.313251], [-97.748987, 30.313516], [-97.749012, 30.313651], [-97.749058, 30.313922], [-97.749079, 30.314076], [-97.749106, 30.314294], [-97.749146, 30.314655], [-97.749111, 30.314847], [-97.749079, 30.315039], [-97.749121, 30.315235], [-97.749184, 30.315368], [-97.749246, 30.315669], [-97.749226, 30.316024], [-97.749041, 30.316419], [-97.748914, 30.316853], [-97.748876, 30.317117], [-97.748896, 30.317299], [-97.749089, 30.317583], [-97.74921, 30.317784], [-97.749133, 30.317977], [-97.749094, 30.318219], [-97.749109, 30.318758], [-97.749121, 30.318929], [-97.749203, 30.319186], [-97.749241, 30.319393], [-97.749325, 30.319736], [-97.749357, 30.319946], [-97.749343, 30.320209], [-97.749324, 30.320481], [-97.749292, 30.320717], [-97.74926, 30.320862], [-97.748919, 30.320943], [-97.748516, 30.320899], [-97.748359, 30.320852], [-97.748194, 30.32078], [-97.747906, 30.320697], [-97.747679, 30.320652], [-97.747367, 30.320535], [-97.747184, 30.320397], [-97.746985, 30.320316], [-97.746789, 30.320243], [-97.746402, 30.320109], [-97.746125, 30.320056], [-97.745909, 30.320058], [-97.74568, 30.320254], [-97.745455, 30.320453], [-97.745344, 30.320679], [-97.745265, 30.320809], [-97.745161, 30.321049], [-97.745162, 30.32122], [-97.745193, 30.32136], [-97.745231, 30.321532], [-97.745288, 30.321767], [-97.745389, 30.322049], [-97.745518, 30.322286], [-97.745699, 30.322575], [-97.745799, 30.32277], [-97.745879, 30.323005], [-97.745919, 30.323237], [-97.745885, 30.323437], [-97.745819, 30.323675], [-97.745792, 30.323856], [-97.745785, 30.32401], [-97.745783, 30.324233], [-97.745753, 30.324515], [-97.74575, 30.32468], [-97.74577, 30.324942], [-97.745824, 30.325177], [-97.745859, 30.325376], [-97.74593, 30.325619], [-97.745977, 30.325818], [-97.746042, 30.32602], [-97.746186, 30.326268], [-97.746366, 30.326459], [-97.746497, 30.326585], [-97.746643, 30.326767], [-97.746808, 30.32699], [-97.746917, 30.327218], [-97.746989, 30.327505], [-97.747, 30.327695], [-97.747016, 30.327869], [-97.747036, 30.328092], [-97.747071, 30.328318], [-97.747066, 30.32848], [-97.747053, 30.328642], [-97.747033, 30.328868], [-97.747005, 30.329167], [-97.747001, 30.329414], [-97.746964, 30.329548], [-97.746898, 30.329789], [-97.746804, 30.329922], [-97.746706, 30.330057], [-97.746593, 30.330162], [-97.746372, 30.330383], [-97.746343, 30.330529], [-97.746422, 30.330767], [-97.746565, 30.331003], [-97.746734, 30.331202], [-97.746847, 30.331298], [-97.746983, 30.331413], [-97.747162, 30.331574], [-97.747292, 30.331733], [-97.747438, 30.331885], [-97.747786, 30.332156], [-97.747984, 30.332294], [-97.748137, 30.332369], [-97.748659, 30.33266], [-97.748785, 30.332759], [-97.748929, 30.332908], [-97.749074, 30.333056], [-97.749177, 30.333212], [-97.749248, 30.333343], [-97.749362, 30.333516], [-97.749497, 30.333722], [-97.749605, 30.333889], [-97.749687, 30.334083], [-97.749731, 30.334282], [-97.749744, 30.334497], [-97.749182, 30.334645], [-97.74755, 30.335209], [-97.747069, 30.335376], [-97.745996, 30.335789], [-97.74558, 30.33581], [-97.744902, 30.335667], [-97.743913, 30.335422], [-97.742951, 30.335215], [-97.741908, 30.335104], [-97.740926, 30.335045], [-97.740449, 30.335], [-97.739822, 30.334852], [-97.738917, 30.334419], [-97.738495, 30.334209], [-97.736757, 30.333382], [-97.735625, 30.33282], [-97.734781, 30.332371], [-97.734567, 30.332306], [-97.732406, 30.331264], [-97.731593, 30.330871], [-97.729482, 30.329882], [-97.728218, 30.329265], [-97.727922, 30.329055]]]]
    },
    "properties": {
      "neighbourhood": "78756",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-97.736173, 30.159865], [-97.735912, 30.155058], [-97.734309, 30.15337], [-97.7277, 30.141548], [-97.715478, 30.135539], [-97.716647, 30.132413], [-97.710118, 30.128996], [-97.70004, 30.145386], [-97.699872, 30.145528], [-97.696916, 30.144172], [-97.696916, 30.144164], [-97.696162, 30.132806], [-97.696065, 30.130865], [-97.695915, 30.128673], [-97.695175, 30.115725], [-97.695156, 30.115334], [-97.694943, 30.112321], [-97.694918, 30.111757], [-97.694726, 30.107487], [-97.694678, 30.10703], [-97.694521, 30.104339], [-97.693893, 30.09352], [-97.6937, 30.089471], [-97.693082, 30.075857], [-97.694337, 30.075108], [-97.697465, 30.078633], [-97.698941, 30.079857], [-97.702856, 30.084101], [-97.707756, 30.088341], [-97.714636, 30.088534], [-97.714667, 30.088678], [-97.715924, 30.088533], [-97.717821, 30.088547], [-97.72195, 30.088642], [-97.722473, 30.08868], [-97.722917, 30.088846], [-97.723336, 30.088893], [-97.723944, 30.089087], [-97.726635, 30.090666], [-97.727426, 30.090949], [-97.728276, 30.091062], [-97.729239, 30.091035], [-97.730306, 30.092781], [-97.732407, 30.093538], [-97.72005, 30.113054], [-97.740785, 30.124279], [-97.756262, 30.100403], [-97.758879, 30.101674], [-97.759926, 30.102171], [-97.763187, 30.103683], [-97.764481, 30.104328], [-97.777871, 30.110768], [-97.778846, 30.111255], [-97.781789, 30.112653], [-97.782311, 30.112743], [-97.78529, 30.112775], [-97.806258, 30.112484], [-97.806521, 30.11195], [-97.806679, 30.111642], [-97.807144, 30.110737], [-97.807861, 30.109415], [-97.808549, 30.107915], [-97.80863, 30.107741], [-97.809453, 30.105974], [-97.811182, 30.102505], [-97.811222, 30.101001], [-97.811238, 30.100369], [-97.810961, 30.097087], [-97.815578, 30.10039], [-97.813559, 30.103357], [-97.811325, 30.106641], [-97.811372, 30.112494], [-97.809, 30.11249], [-97.807858, 30.112475], [-97.807142, 30.112962], [-97.806692, 30.113269], [-97.805579, 30.115982], [-97.804547, 30.118525], [-97.8035, 30.121145], [-97.802453, 30.123759], [-97.801418, 30.126387], [-97.800399, 30.128971], [-97.799523, 30.131226], [-97.798482, 30.133862], [-97.797864, 30.135446], [-97.797707, 30.135849], [-97.796969, 30.137712], [-97.796615, 30.138627], [-97.796123, 30.139877], [-97.796012, 30.140174], [-97.795575, 30.141373], [-97.79489, 30.143279], [-97.794226, 30.145089], [-97.793352, 30.147528], [-97.792667, 30.14942], [-97.792266, 30.150683], [-97.791557, 30.1531], [-97.791012, 30.154954], [-97.790216, 30.157642], [-97.789878, 30.157503], [-97.78644, 30.155941], [-97.786023, 30.155969], [-97.785102, 30.156275], [-97.78436, 30.156571], [-97.782933, 30.157274], [-97.782195, 30.157427], [-97.780438, 30.157601], [-97.777972, 30.157929], [-97.77761, 30.158065], [-97.776597, 30.158548], [-97.776406, 30.158626], [-97.776204, 30.158691], [-97.776032, 30.158737], [-97.775878, 30.158775], [-97.775495, 30.158842], [-97.774639, 30.158905], [-97.774353, 30.158915], [-97.773903, 30.158981], [-97.771567, 30.15952], [-97.771409, 30.159552], [-97.771258, 30.159599], [-97.770919, 30.159787], [-97.77024, 30.160483], [-97.769977, 30.160632], [-97.769665, 30.160639], [-97.769622, 30.159189], [-97.769245, 30.157518], [-97.767168, 30.158194], [-97.766633, 30.158279], [-97.764547, 30.157528], [-97.762548, 30.156709], [-97.762109, 30.156646], [-97.761748, 30.156941], [-97.759954, 30.159729], [-97.75972, 30.159843], [-97.759307, 30.159846], [-97.756821, 30.158676], [-97.754734, 30.15829], [-97.75273, 30.15792], [-97.75228, 30.157952], [-97.750915, 30.160254], [-97.750579, 30.160495], [-97.750173, 30.160539], [-97.746055, 30.158489], [-97.745335, 30.159517], [-97.745133, 30.159813], [-97.743355, 30.162778], [-97.742935, 30.163492], [-97.741634, 30.165551], [-97.73871, 30.16407], [-97.736831, 30.16311], [-97.736573, 30.16297], [-97.736411, 30.162868], [-97.736265, 30.162741], [-97.736047, 30.162418], [-97.735988, 30.162141], [-97.736021, 30.161859], [-97.736106, 30.161575], [-97.736189, 30.161356], [-97.736234, 30.161225], [-97.736302, 30.160965], [-97.736333, 30.160597], [-97.736298, 30.160355], [-97.736227, 30.160114], [-97.736173, 30.159865]]]]
    },
    "properties": {
      "neighbourhood": "78747",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-97.706766, 30.322105], [-97.70693, 30.320901], [-97.70714, 30.319533], [-97.707308, 30.318321], [-97.70751, 30.316972], [-97.707696, 30.315889], [-97.707867, 30.314892], [-97.707967, 30.314616], [-97.708254, 30.313797], [-97.708549, 30.312928], [-97.708618, 30.312743], [-97.709013, 30.311931], [-97.709345, 30.311275], [-97.709977, 30.310127], [-97.710315, 30.309562], [-97.710487, 30.30928], [-97.71095, 30.308563], [-97.711854, 30.307135], [-97.71272, 30.305808], [-97.712953, 30.305452], [-97.713921, 30.303962], [-97.714935, 30.302365], [-97.715466, 30.301513], [-97.716408, 30.300005], [-97.717396, 30.298403], [-97.718064, 30.2973], [-97.718768, 30.296145], [-97.719363, 30.295192], [-97.719984, 30.294226], [-97.720174, 30.294304], [-97.721036, 30.294731], [-97.723286, 30.295792], [-97.723412, 30.295638], [-97.724418, 30.296159], [-97.726779, 30.297252], [-97.727272, 30.297482], [-97.728118, 30.297868], [-97.728537, 30.298082], [-97.728929, 30.298233], [-97.729778, 30.298707], [-97.730745, 30.299175], [-97.730929, 30.299283], [-97.731571, 30.29958], [-97.73214, 30.299864], [-97.732609, 30.300104], [-97.733548, 30.30053], [-97.73471, 30.301071], [-97.735241, 30.301337], [-97.736311, 30.301857], [-97.738147, 30.302741], [-97.739258, 30.30333], [-97.739784, 30.30358], [-97.741431, 30.304425], [-97.743049, 30.305197], [-97.742381, 30.306254], [-97.741895, 30.307091], [-97.74139, 30.307862], [-97.740718, 30.308913], [-97.740039, 30.30995], [-97.739311, 30.31101], [-97.73854, 30.312098], [-97.737571, 30.313464], [-97.737304, 30.313893], [-97.737133, 30.314148], [-97.736977, 30.314423], [-97.736806, 30.314651], [-97.736689, 30.314799], [-97.736505, 30.314977], [-97.736316, 30.315125], [-97.736148, 30.315251], [-97.736012, 30.315347], [-97.735876, 30.315432], [-97.735694, 30.315527], [-97.735512, 30.315617], [-97.735263, 30.315714], [-97.73343, 30.316296], [-97.73301, 30.316441], [-97.732642, 30.316566], [-97.732176, 30.316699], [-97.731736, 30.317364], [-97.731441, 30.317782], [-97.731133, 30.318265], [-97.730821, 30.31877], [-97.730291, 30.319607], [-97.729393, 30.321087], [-97.72882, 30.322011], [-97.728738, 30.322147], [-97.728252, 30.322948], [-97.728077, 30.32322], [-97.726623, 30.3255], [-97.726336, 30.325943], [-97.726146, 30.325818], [-97.72594, 30.325541], [-97.725845, 30.325405], [-97.725521, 30.324873], [-97.725403, 30.324678], [-97.725264, 30.324524], [-97.725087, 30.324333], [-97.724884, 30.324156], [-97.72383, 30.323502], [-97.722728, 30.323108], [-97.721988, 30.32295], [-97.721146, 30.32287], [-97.720434, 30.322723], [-97.719558, 30.322422], [-97.718956, 30.322143], [-97.718574, 30.321964], [-97.717641, 30.321494], [-97.716678, 30.32104], [-97.715968, 30.320685], [-97.715374, 30.320422], [-97.714621, 30.320311], [-97.714079, 30.320316], [-97.713731, 30.320342], [-97.713467, 30.320356], [-97.713229, 30.320381], [-97.712923, 30.320416], [-97.712645, 30.320446], [-97.712126, 30.320548], [-97.711594, 30.320672], [-97.711277, 30.320762], [-97.711003, 30.320842], [-97.710671, 30.320939], [-97.710282, 30.321052], [-97.709625, 30.321259], [-97.709419, 30.321324], [-97.708582, 30.32159], [-97.707628, 30.321892], [-97.707251, 30.321986], [-97.706766, 30.322105]]]]
    },
    "properties": {
      "neighbourhood": "78751",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-97.733661, 30.285364], [-97.732949, 30.28525], [-97.731951, 30.286807], [-97.730268, 30.286847], [-97.729278, 30.28822], [-97.726781, 30.287095], [-97.728238, 30.282738], [-97.730454, 30.280296], [-97.731177, 30.280836], [-97.732197, 30.278965], [-97.735694, 30.279976], [-97.733511, 30.281251], [-97.734248, 30.283074], [-97.737438, 30.283457], [-97.737077, 30.287341], [-97.739403, 30.287516], [-97.738934, 30.291813], [-97.738931, 30.291813], [-97.736584, 30.291642], [-97.73681, 30.289535], [-97.734852, 30.289173], [-97.734466, 30.288303], [-97.73416, 30.287946], [-97.734034, 30.287085], [-97.73354, 30.287047], [-97.733661, 30.285364]]]]
    },
    "properties": {
      "neighbourhood": "78712",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-98.006219, 30.360791], [-98.004242, 30.360384], [-98.003198, 30.360563], [-98.000181, 30.361064], [-97.99948, 30.360493], [-97.999151, 30.36025], [-97.998986, 30.360126], [-97.998339, 30.359498], [-97.997807, 30.358985], [-97.997541, 30.358695], [-97.997011, 30.358121], [-97.996669, 30.357749], [-97.996408, 30.357395], [-97.996217, 30.357059], [-97.996145, 30.356931], [-97.996068, 30.356627], [-97.99601, 30.356087], [-97.996002, 30.355534], [-97.995984, 30.354115], [-97.995908, 30.352848], [-97.995841, 30.352624], [-97.995551, 30.352314], [-97.995332, 30.352134], [-97.994967, 30.351984], [-97.994038, 30.35153], [-97.993679, 30.351501], [-97.993389, 30.351499], [-97.993024, 30.351624], [-97.992789, 30.351765], [-97.992468, 30.351916], [-97.992103, 30.352176], [-97.991588, 30.352547], [-97.991402, 30.352876], [-97.991041, 30.353513], [-97.990888, 30.353782], [-97.990464, 30.354531], [-97.990253, 30.354868], [-97.989847, 30.355515], [-97.989668, 30.355666], [-97.98941, 30.355815], [-97.989144, 30.355857], [-97.988856, 30.355874], [-97.988615, 30.355839], [-97.988227, 30.355711], [-97.987654, 30.355426], [-97.987065, 30.355209], [-97.986759, 30.355159], [-97.986457, 30.355162], [-97.986084, 30.355281], [-97.98582, 30.355367], [-97.98513, 30.35574], [-97.984149, 30.356266], [-97.984001, 30.356321], [-97.983703, 30.356503], [-97.98347, 30.356647], [-97.983046, 30.356991], [-97.982708, 30.357266], [-97.982571, 30.357343], [-97.982244, 30.357439], [-97.981973, 30.357459], [-97.981467, 30.357433], [-97.980817, 30.357363], [-97.980514, 30.35733], [-97.980016, 30.35734], [-97.979445, 30.35747], [-97.978909, 30.357523], [-97.978831, 30.357076], [-97.978698, 30.356436], [-97.978456, 30.355667], [-97.978358, 30.355327], [-97.978233, 30.355022], [-97.978042, 30.354647], [-97.977807, 30.354269], [-97.977626, 30.35415], [-97.977408, 30.353808], [-97.977259, 30.35356], [-97.977177, 30.353399], [-97.97712, 30.353263], [-97.977039, 30.353045], [-97.976926, 30.352583], [-97.976889, 30.35242], [-97.976857, 30.352224], [-97.976831, 30.352001], [-97.976818, 30.351819], [-97.976821, 30.351674], [-97.97684, 30.351399], [-97.976931, 30.351216], [-97.977047, 30.349907], [-97.97716, 30.349081], [-97.977255, 30.348368], [-97.977218, 30.347646], [-97.977148, 30.347288], [-97.97699, 30.34633], [-97.976951, 30.346126], [-97.976926, 30.34598], [-97.97688, 30.345809], [-97.976829, 30.345648], [-97.97677, 30.345507], [-97.976668, 30.34537], [-97.976543, 30.34525], [-97.976373, 30.345106], [-97.976224, 30.345007], [-97.975174, 30.344446], [-97.974843, 30.34425], [-97.974711, 30.344163], [-97.973124, 30.343344], [-97.971995, 30.342707], [-97.970602, 30.341909], [-97.970106, 30.34163], [-97.969261, 30.341396], [-97.970398, 30.337145], [-97.964269, 30.32742], [-97.961779, 30.330551], [-97.963277, 30.332086], [-97.96174, 30.332433], [-97.962104, 30.333787], [-97.962503, 30.335268], [-97.95972, 30.340252], [-97.959025, 30.341111], [-97.955037, 30.340644], [-97.953546, 30.342173], [-97.95152, 30.344091], [-97.9513, 30.344134], [-97.951006, 30.344041], [-97.950719, 30.343815], [-97.950572, 30.343675], [-97.950441, 30.343576], [-97.950312, 30.343489], [-97.949977, 30.343262], [-97.94976, 30.343135], [-97.949544, 30.342985], [-97.949332, 30.342808], [-97.949112, 30.34265], [-97.948918, 30.342467], [-97.948781, 30.342344], [-97.948643, 30.342267], [-97.94828, 30.342216], [-97.94801, 30.342225], [-97.947789, 30.342295], [-97.947664, 30.342416], [-97.947497, 30.342532], [-97.947294, 30.342608], [-97.947043, 30.3426], [-97.946732, 30.342471], [-97.946525, 30.342373], [-97.946304, 30.342289], [-97.946186, 30.342144], [-97.946005, 30.341976], [-97.945815, 30.341851], [-97.945616, 30.341773], [-97.945465, 30.341696], [-97.945276, 30.341577], [-97.94509, 30.341403], [-97.944927, 30.341232], [-97.944769, 30.341084], [-97.944545, 30.340931], [-97.944392, 30.340813], [-97.94433, 30.340668], [-97.944259, 30.340354], [-97.944229, 30.340161], [-97.944136, 30.339997], [-97.944032, 30.339766], [-97.94381, 30.339528], [-97.943686, 30.339438], [-97.943436, 30.339351], [-97.943203, 30.339311], [-97.942867, 30.339285], [-97.942632, 30.339281], [-97.942319, 30.339256], [-97.942148, 30.339247], [-97.941967, 30.339252], [-97.941682, 30.339274], [-97.941486, 30.339301], [-97.941287, 30.339316], [-97.941034, 30.339323], [-97.940778, 30.339224], [-97.940631, 30.33909], [-97.940511, 30.338887], [-97.940384, 30.338711], [-97.940288, 30.338591], [-97.940148, 30.338445], [-97.939957, 30.338285], [-97.939812, 30.338079], [-97.939719, 30.337915], [-97.939625, 30.337753], [-97.939395, 30.337598], [-97.939192, 30.337481], [-97.938944, 30.337455], [-97.938788, 30.337554], [-97.938743, 30.337775], [-97.938696, 30.337959], [-97.93864, 30.338145], [-97.938593, 30.338314], [-97.938602, 30.338559], [-97.938602, 30.33881], [-97.938512, 30.339067], [-97.938412, 30.339202], [-97.938325, 30.339324], [-97.938211, 30.339493], [-97.93808, 30.339573], [-97.93792, 30.3396], [-97.937736, 30.339572], [-97.937514, 30.33951], [-97.937309, 30.339451], [-97.937119, 30.339382], [-97.936962, 30.339326], [-97.936818, 30.339247], [-97.936678, 30.339159], [-97.936455, 30.338918], [-97.936366, 30.33879], [-97.936286, 30.338643], [-97.936217, 30.338515], [-97.936035, 30.338286], [-97.935955, 30.338147], [-97.93587, 30.338011], [-97.935846, 30.337765], [-97.93593, 30.337588], [-97.935998, 30.337372], [-97.936073, 30.337242], [-97.936178, 30.337084], [-97.936287, 30.336984], [-97.936392, 30.336865], [-97.936574, 30.336742], [-97.93662, 30.336553], [-97.936387, 30.336541], [-97.936233, 30.336584], [-97.935985, 30.33669], [-97.935847, 30.336767], [-97.935556, 30.33683], [-97.935375, 30.336758], [-97.935208, 30.336651], [-97.93508, 30.336489], [-97.935123, 30.336242], [-97.935055, 30.335135], [-97.935208, 30.334461], [-97.935166, 30.333696], [-97.935015, 30.33314], [-97.934687, 30.332331], [-97.934332, 30.331719], [-97.933796, 30.330945], [-97.933557, 30.330671], [-97.9334, 30.330475], [-97.933305, 30.330358], [-97.933078, 30.330076], [-97.932233, 30.3294], [-97.931247, 30.328562], [-97.930258, 30.327867], [-97.929257, 30.327331], [-97.928877, 30.327181], [-97.928547, 30.327051], [-97.927649, 30.326627], [-97.926908, 30.326366], [-97.926307, 30.326159], [-97.925559, 30.32595], [-97.925138, 30.325846], [-97.924796, 30.325762], [-97.924174, 30.325649], [-97.923492, 30.325576], [-97.922586, 30.32549], [-97.921768, 30.325458], [-97.920961, 30.325495], [-97.920676, 30.325536], [-97.920133, 30.325614], [-97.919447, 30.32575], [-97.918494, 30.326076], [-97.917636, 30.326362], [-97.916809, 30.326715], [-97.916006, 30.327066], [-97.914941, 30.32759], [-97.914221, 30.328006], [-97.914052, 30.328107], [-97.913376, 30.328512], [-97.912449, 30.329116], [-97.911745, 30.329491], [-97.911506, 30.32917], [-97.911345, 30.32895], [-97.911128, 30.328775], [-97.910913, 30.328595], [-97.910945, 30.328406], [-97.911097, 30.328211], [-97.911143, 30.327986], [-97.911008, 30.327838], [-97.910796, 30.32768], [-97.910633, 30.327512], [-97.910632, 30.327327], [-97.910791, 30.327085], [-97.910935, 30.326893], [-97.910952, 30.326698], [-97.91083, 30.326544], [-97.91086, 30.326377], [-97.911085, 30.326205], [-97.911058, 30.325996], [-97.911028, 30.325819], [-97.911151, 30.325593], [-97.911244, 30.325452], [-97.911279, 30.325205], [-97.91123, 30.325006], [-97.911185, 30.324758], [-97.911205, 30.324577], [-97.911083, 30.324396], [-97.911224, 30.324115], [-97.911254, 30.323909], [-97.911149, 30.323682], [-97.911117, 30.323489], [-97.911169, 30.323286], [-97.911223, 30.322977], [-97.911314, 30.322797], [-97.911554, 30.322642], [-97.911714, 30.322474], [-97.911816, 30.322284], [-97.91188, 30.322087], [-97.911941, 30.321788], [-97.911923, 30.321543], [-97.911832, 30.321354], [-97.911737, 30.32124], [-97.911637, 30.321087], [-97.911518, 30.320889], [-97.91144, 30.320745], [-97.911343, 30.320548], [-97.911259, 30.320392], [-97.911188, 30.320245], [-97.911058, 30.320025], [-97.910932, 30.319827], [-97.910899, 30.319632], [-97.910872, 30.319433], [-97.910835, 30.319017], [-97.910804, 30.318739], [-97.910767, 30.318455], [-97.910707, 30.318267], [-97.910621, 30.318111], [-97.910531, 30.317966], [-97.910469, 30.317786], [-97.910452, 30.317525], [-97.910434, 30.317269], [-97.910428, 30.317114], [-97.910444, 30.316856], [-97.910472, 30.316653], [-97.910504, 30.31645], [-97.910534, 30.316278], [-97.910585, 30.316039], [-97.910522, 30.315766], [-97.910475, 30.315539], [-97.910446, 30.315316], [-97.910421, 30.314988], [-97.910422, 30.314733], [-97.910422, 30.314491], [-97.910428, 30.31421], [-97.91048, 30.314024], [-97.91057, 30.313822], [-97.910679, 30.313582], [-97.910702, 30.313371], [-97.910736, 30.313154], [-97.910766, 30.312965], [-97.910779, 30.312776], [-97.91078, 30.312613], [-97.910773, 30.312396], [-97.910599, 30.312244], [-97.910446, 30.312118], [-97.91039, 30.311938], [-97.91032, 30.311815], [-97.908973, 30.309543], [-97.908841, 30.309298], [-97.908721, 30.309051], [-97.908595, 30.308865], [-97.908436, 30.308708], [-97.908264, 30.308528], [-97.908105, 30.308333], [-97.908022, 30.308177], [-97.907953, 30.308028], [-97.907779, 30.307793], [-97.907616, 30.307606], [-97.907468, 30.307471], [-97.907315, 30.307344], [-97.907066, 30.307188], [-97.90713, 30.306942], [-97.907196, 30.306726], [-97.907366, 30.306606], [-97.907585, 30.306623], [-97.907757, 30.3065], [-97.907971, 30.306405], [-97.908198, 30.306418], [-97.908469, 30.30647], [-97.908739, 30.306648], [-97.908895, 30.306733], [-97.909123, 30.306845], [-97.909274, 30.306928], [-97.909532, 30.307045], [-97.909756, 30.307088], [-97.909998, 30.307095], [-97.91025, 30.307062], [-97.910478, 30.307008], [-97.910657, 30.306998], [-97.91088, 30.306942], [-97.911077, 30.306866], [-97.911312, 30.30679], [-97.911506, 30.30667], [-97.911715, 30.306531], [-97.911826, 30.30639], [-97.911958, 30.30614], [-97.912084, 30.305958], [-97.91223, 30.305749], [-97.91233, 30.305635], [-97.912495, 30.305446], [-97.912571, 30.305282], [-97.912749, 30.305118], [-97.912943, 30.305025], [-97.913186, 30.304911], [-97.913361, 30.304791], [-97.913596, 30.304644], [-97.913801, 30.304538], [-97.91398, 30.304415], [-97.914141, 30.304313], [-97.914388, 30.304159], [-97.914586, 30.304033], [-97.914803, 30.303913], [-97.915072, 30.30377], [-97.915245, 30.303666], [-97.915427, 30.303543], [-97.915595, 30.303425], [-97.915834, 30.303308], [-97.915983, 30.303245], [-97.916193, 30.303189], [-97.916429, 30.303179], [-97.916618, 30.303142], [-97.916913, 30.303021], [-97.917148, 30.302904], [-97.917328, 30.302833], [-97.917569, 30.302692], [-97.917756, 30.302533], [-97.917924, 30.302366], [-97.918155, 30.302145], [-97.918294, 30.30204], [-97.918464, 30.30192], [-97.918605, 30.301744], [-97.918687, 30.301605], [-97.918813, 30.301431], [-97.918896, 30.301315], [-97.918989, 30.301165], [-97.919104, 30.30092], [-97.919189, 30.300627], [-97.919174, 30.300398], [-97.919171, 30.300129], [-97.919143, 30.299848], [-97.919122, 30.299647], [-97.919155, 30.299446], [-97.91917, 30.299282], [-97.919219, 30.299052], [-97.919331, 30.298867], [-97.919475, 30.298644], [-97.919562, 30.298519], [-97.919728, 30.298269], [-97.919878, 30.298096], [-97.919999, 30.297983], [-97.920172, 30.297824], [-97.920314, 30.297692], [-97.920499, 30.297563], [-97.920681, 30.297448], [-97.920885, 30.297312], [-97.921113, 30.297181], [-97.921378, 30.29703], [-97.921659, 30.2969], [-97.921841, 30.296758], [-97.922035, 30.296665], [-97.922318, 30.296596], [-97.922526, 30.296452], [-97.922647, 30.2963], [-97.922837, 30.296191], [-97.923015, 30.296123], [-97.923248, 30.296033], [-97.923546, 30.296039], [-97.923771, 30.296024], [-97.923941, 30.296024], [-97.924179, 30.296023], [-97.924416, 30.29619], [-97.924654, 30.296327], [-97.924815, 30.296352], [-97.925411, 30.296319], [-97.925592, 30.296369], [-97.925963, 30.296343], [-97.926195, 30.296268], [-97.926467, 30.296088], [-97.926646, 30.295943], [-97.926878, 30.295832], [-97.926983, 30.295672], [-97.927136, 30.295529], [-97.927145, 30.295331], [-97.927086, 30.295126], [-97.9271, 30.294984], [-97.927109, 30.294769], [-97.927112, 30.294613], [-97.927117, 30.294467], [-97.927119, 30.294283], [-97.92707, 30.294073], [-97.927031, 30.293836], [-97.927034, 30.293629], [-97.927034, 30.293448], [-97.927065, 30.293198], [-97.927085, 30.292981], [-97.927052, 30.292796], [-97.926933, 30.292624], [-97.926729, 30.29248], [-97.926629, 30.29237], [-97.926625, 30.292167], [-97.926407, 30.29208], [-97.926161, 30.291982], [-97.925912, 30.291887], [-97.925745, 30.291804], [-97.92554, 30.291715], [-97.925276, 30.291605], [-97.924958, 30.2915], [-97.924634, 30.291406], [-97.924458, 30.291364], [-97.924203, 30.291302], [-97.924051, 30.291255], [-97.9238, 30.291275], [-97.923472, 30.291304], [-97.923063, 30.291239], [-97.922838, 30.291216], [-97.922543, 30.291182], [-97.922165, 30.291104], [-97.921854, 30.291043], [-97.921535, 30.290968], [-97.921288, 30.290887], [-97.921022, 30.290766], [-97.920885, 30.290692], [-97.92064, 30.290525], [-97.920378, 30.290388], [-97.920208, 30.290302], [-97.920031, 30.290203], [-97.919852, 30.290084], [-97.919589, 30.289917], [-97.919335, 30.289725], [-97.919226, 30.289627], [-97.919105, 30.289506], [-97.918908, 30.289291], [-97.918821, 30.289176], [-97.918726, 30.288982], [-97.918692, 30.288761], [-97.918684, 30.28856], [-97.91865, 30.288378], [-97.918707, 30.288162], [-97.918819, 30.287961], [-97.918936, 30.287751], [-97.919101, 30.28763], [-97.919321, 30.287563], [-97.919543, 30.287537], [-97.919816, 30.287534], [-97.920061, 30.287566], [-97.920451, 30.287683], [-97.92069, 30.287801], [-97.920902, 30.28795], [-97.921136, 30.288092], [-97.921319, 30.288203], [-97.921533, 30.288331], [-97.921748, 30.288464], [-97.921987, 30.288606], [-97.922207, 30.288695], [-97.922458, 30.288777], [-97.922659, 30.288852], [-97.922891, 30.288915], [-97.923156, 30.288961], [-97.923381, 30.288973], [-97.923631, 30.28895], [-97.923844, 30.288905], [-97.924177, 30.288809], [-97.924368, 30.288753], [-97.924586, 30.288707], [-97.924738, 30.288644], [-97.9249, 30.288587], [-97.925057, 30.288416], [-97.925259, 30.288255], [-97.925479, 30.287968], [-97.92559, 30.287805], [-97.925764, 30.287701], [-97.925934, 30.287544], [-97.926118, 30.287328], [-97.926173, 30.287142], [-97.926127, 30.286951], [-97.926092, 30.286786], [-97.926029, 30.286512], [-97.925929, 30.286318], [-97.925703, 30.286151], [-97.925545, 30.28609], [-97.925307, 30.286028], [-97.92516, 30.285902], [-97.925056, 30.285795], [-97.924942, 30.285581], [-97.924893, 30.285369], [-97.924869, 30.285233], [-97.924817, 30.284883], [-97.924776, 30.284624], [-97.924766, 30.28442], [-97.924772, 30.28422], [-97.924783, 30.28392], [-97.924806, 30.283626], [-97.924855, 30.283423], [-97.924948, 30.283186], [-97.925102, 30.282974], [-97.92521, 30.282861], [-97.925341, 30.282715], [-97.925462, 30.282577], [-97.92564, 30.282421], [-97.925841, 30.282279], [-97.926017, 30.282111], [-97.926268, 30.282067], [-97.926498, 30.282134], [-97.926748, 30.282318], [-97.927016, 30.282485], [-97.927317, 30.282573], [-97.927681, 30.282696], [-97.927889, 30.282771], [-97.928062, 30.282821], [-97.928324, 30.28293], [-97.92865, 30.283068], [-97.928855, 30.283166], [-97.929063, 30.283258], [-97.92928, 30.28338], [-97.929478, 30.28351], [-97.929694, 30.283682], [-97.929887, 30.283787], [-97.930264, 30.283949], [-97.930477, 30.284046], [-97.930706, 30.284163], [-97.930856, 30.28424], [-97.931089, 30.284324], [-97.93135, 30.284414], [-97.931607, 30.284488], [-97.931967, 30.284577], [-97.932252, 30.284621], [-97.932469, 30.284628], [-97.932736, 30.284575], [-97.932958, 30.284541], [-97.933181, 30.284463], [-97.933363, 30.284345], [-97.933523, 30.284216], [-97.93374, 30.284058], [-97.933957, 30.28382], [-97.934143, 30.283743], [-97.934356, 30.283659], [-97.934488, 30.283478], [-97.934581, 30.283345], [-97.93464, 30.283159], [-97.934654, 30.282955], [-97.93464, 30.282738], [-97.934636, 30.282501], [-97.934574, 30.282299], [-97.934452, 30.282113], [-97.934262, 30.281881], [-97.934154, 30.28175], [-97.934004, 30.281541], [-97.933848, 30.281351], [-97.933693, 30.281133], [-97.933539, 30.280855], [-97.933414, 30.280663], [-97.933331, 30.280546], [-97.933193, 30.280384], [-97.933087, 30.280267], [-97.932962, 30.28016], [-97.932766, 30.280068], [-97.932634, 30.279917], [-97.932578, 30.279715], [-97.93246, 30.279394], [-97.932417, 30.279182], [-97.932406, 30.279016], [-97.932389, 30.278867], [-97.932379, 30.278644], [-97.932442, 30.278327], [-97.932491, 30.27808], [-97.932513, 30.277902], [-97.932546, 30.277696], [-97.932653, 30.2775], [-97.932834, 30.277355], [-97.933218, 30.277335], [-97.933384, 30.27734], [-97.933661, 30.277384], [-97.933809, 30.277431], [-97.93417, 30.277594], [-97.934573, 30.277731], [-97.934838, 30.277813], [-97.935079, 30.2779], [-97.935373, 30.278021], [-97.935653, 30.278128], [-97.935897, 30.278243], [-97.936077, 30.27834], [-97.936319, 30.27849], [-97.936551, 30.278624], [-97.936693, 30.278698], [-97.93688, 30.278817], [-97.937057, 30.278938], [-97.93724, 30.279082], [-97.937417, 30.279226], [-97.937596, 30.279377], [-97.937833, 30.279569], [-97.938083, 30.279788], [-97.938316, 30.279971], [-97.938501, 30.280101], [-97.938747, 30.280285], [-97.93896, 30.280432], [-97.939117, 30.280531], [-97.939322, 30.280656], [-97.939519, 30.280811], [-97.939704, 30.28096], [-97.940032, 30.281035], [-97.940219, 30.281052], [-97.940519, 30.281071], [-97.940915, 30.281046], [-97.941168, 30.281026], [-97.941415, 30.281014], [-97.941743, 30.280992], [-97.941921, 30.280974], [-97.942125, 30.280936], [-97.942368, 30.280831], [-97.942539, 30.280699], [-97.942668, 30.280515], [-97.942755, 30.280324], [-97.942966, 30.280146], [-97.943152, 30.279982], [-97.94333, 30.279793], [-97.94335, 30.279617], [-97.943307, 30.279446], [-97.943185, 30.279262], [-97.943082, 30.279067], [-97.943001, 30.278854], [-97.942836, 30.27865], [-97.942656, 30.27846], [-97.942492, 30.278289], [-97.94241, 30.278103], [-97.942364, 30.277924], [-97.942279, 30.277598], [-97.94221, 30.277404], [-97.942131, 30.277229], [-97.942106, 30.277041], [-97.942055, 30.276815], [-97.942049, 30.27657], [-97.942144, 30.276322], [-97.942272, 30.276123], [-97.942496, 30.275979], [-97.942774, 30.275847], [-97.942931, 30.275764], [-97.94324, 30.275547], [-97.943504, 30.275351], [-97.943733, 30.275213], [-97.943964, 30.2752], [-97.944207, 30.275414], [-97.94444, 30.275616], [-97.944598, 30.275727], [-97.944724, 30.275842], [-97.944943, 30.275926], [-97.945078, 30.276008], [-97.945296, 30.276158], [-97.945523, 30.27628], [-97.945703, 30.27636], [-97.945951, 30.276478], [-97.946187, 30.27657], [-97.946335, 30.276625], [-97.946503, 30.276681], [-97.946741, 30.276735], [-97.946897, 30.276765], [-97.947178, 30.276798], [-97.94735, 30.276812], [-97.947654, 30.276831], [-97.947939, 30.276839], [-97.948297, 30.276775], [-97.948593, 30.276709], [-97.948881, 30.27662], [-97.949261, 30.276506], [-97.9495, 30.27645], [-97.949832, 30.27636], [-97.94999, 30.276322], [-97.950143, 30.276273], [-97.95029, 30.276218], [-97.950438, 30.276165], [-97.950581, 30.276107], [-97.950865, 30.275967], [-97.951011, 30.275904], [-97.951164, 30.275849], [-97.951381, 30.275759], [-97.951708, 30.275628], [-97.95192, 30.275569], [-97.952128, 30.275619], [-97.952295, 30.275815], [-97.952529, 30.275962], [-97.95275, 30.276008], [-97.953008, 30.276032], [-97.953219, 30.276041], [-97.953489, 30.276049], [-97.953804, 30.276055], [-97.954092, 30.276065], [-97.954392, 30.276052], [-97.954642, 30.276122], [-97.954889, 30.276292], [-97.955134, 30.276404], [-97.955393, 30.276486], [-97.955574, 30.276511], [-97.955732, 30.276539], [-97.955988, 30.276593], [-97.956224, 30.27665], [-97.95638, 30.276694], [-97.956605, 30.276745], [-97.956793, 30.276789], [-97.95694, 30.276839], [-97.957146, 30.276898], [-97.957365, 30.276899], [-97.957688, 30.276941], [-97.957916, 30.276854], [-97.958051, 30.276755], [-97.958271, 30.276597], [-97.958551, 30.276426], [-97.958776, 30.276331], [-97.958981, 30.276272], [-97.959142, 30.276244], [-97.959333, 30.276182], [-97.959595, 30.276082], [-97.959806, 30.275995], [-97.959892, 30.275835], [-97.960006, 30.275675], [-97.960212, 30.275577], [-97.960352, 30.275513], [-97.96051, 30.275255], [-97.960627, 30.275037], [-97.960642, 30.274815], [-97.960649, 30.274611], [-97.960642, 30.274377], [-97.960622, 30.27416], [-97.960603, 30.273937], [-97.960546, 30.273743], [-97.960449, 30.273518], [-97.960379, 30.273371], [-97.960253, 30.273171], [-97.960102, 30.273033], [-97.959895, 30.272914], [-97.959586, 30.272889], [-97.959372, 30.272874], [-97.959176, 30.272799], [-97.959002, 30.272727], [-97.958648, 30.272591], [-97.958324, 30.272456], [-97.958132, 30.27237], [-97.957939, 30.272278], [-97.957692, 30.272128], [-97.957341, 30.271899], [-97.957171, 30.27178], [-97.957034, 30.271632], [-97.956935, 30.271509], [-97.95677, 30.271203], [-97.956644, 30.27092], [-97.956651, 30.27072], [-97.956643, 30.270566], [-97.956633, 30.270381], [-97.956474, 30.270208], [-97.956348, 30.269985], [-97.956336, 30.269762], [-97.956369, 30.269628], [-97.956517, 30.269411], [-97.956944, 30.269287], [-97.957112, 30.269224], [-97.957271, 30.269183], [-97.957522, 30.269174], [-97.957759, 30.269186], [-97.958035, 30.269219], [-97.958272, 30.269204], [-97.958479, 30.269219], [-97.958913, 30.26931], [-97.959207, 30.269367], [-97.959374, 30.269398], [-97.959745, 30.269476], [-97.959926, 30.269515], [-97.960115, 30.269621], [-97.960312, 30.269809], [-97.960599, 30.269921], [-97.960974, 30.270066], [-97.961189, 30.270158], [-97.961407, 30.270228], [-97.961554, 30.270307], [-97.961722, 30.270409], [-97.961985, 30.270524], [-97.962286, 30.270659], [-97.962492, 30.270765], [-97.96268, 30.270851], [-97.962893, 30.270923], [-97.963132, 30.270983], [-97.963451, 30.271044], [-97.963648, 30.271072], [-97.963933, 30.271132], [-97.964131, 30.271172], [-97.96436, 30.271215], [-97.964655, 30.27125], [-97.964979, 30.271187], [-97.96517, 30.271087], [-97.965333, 30.27098], [-97.965534, 30.270791], [-97.965646, 30.270625], [-97.96572, 30.270497], [-97.965738, 30.270308], [-97.965836, 30.270001], [-97.965888, 30.26984], [-97.965936, 30.26966], [-97.965962, 30.269473], [-97.966033, 30.269271], [-97.96609, 30.269096], [-97.966149, 30.268968], [-97.966284, 30.268712], [-97.966368, 30.26851], [-97.966394, 30.268298], [-97.966315, 30.268102], [-97.966215, 30.267921], [-97.966134, 30.267799], [-97.966099, 30.267537], [-97.966064, 30.267294], [-97.966024, 30.267073], [-97.966015, 30.266848], [-97.966085, 30.266645], [-97.966162, 30.266471], [-97.966205, 30.266296], [-97.966282, 30.266099], [-97.966369, 30.265916], [-97.966535, 30.265653], [-97.966693, 30.265419], [-97.966885, 30.26529], [-97.967139, 30.265226], [-97.967362, 30.2652], [-97.967536, 30.265165], [-97.967796, 30.265167], [-97.968009, 30.265168], [-97.968269, 30.265096], [-97.968513, 30.265024], [-97.968776, 30.264962], [-97.969107, 30.264784], [-97.969317, 30.26473], [-97.969523, 30.264806], [-97.969702, 30.26488], [-97.96997, 30.265023], [-97.970152, 30.265139], [-97.970374, 30.265305], [-97.970669, 30.26555], [-97.970824, 30.265748], [-97.970951, 30.265946], [-97.971133, 30.266166], [-97.971286, 30.266378], [-97.971401, 30.266551], [-97.971527, 30.266688], [-97.971667, 30.266867], [-97.971794, 30.267039], [-97.971915, 30.267204], [-97.972049, 30.267396], [-97.972225, 30.26771], [-97.972316, 30.267893], [-97.972375, 30.268026], [-97.972449, 30.26822], [-97.972602, 30.268605], [-97.97264, 30.268741], [-97.972694, 30.268877], [-97.972858, 30.269166], [-97.973019, 30.269342], [-97.973257, 30.269456], [-97.973443, 30.269619], [-97.973576, 30.269792], [-97.973753, 30.270046], [-97.97386, 30.270251], [-97.973924, 30.270459], [-97.973965, 30.270696], [-97.973971, 30.270834], [-97.973996, 30.270977], [-97.974075, 30.271193], [-97.974233, 30.271435], [-97.974387, 30.271647], [-97.974486, 30.271778], [-97.974716, 30.272057], [-97.974902, 30.272215], [-97.975189, 30.272347], [-97.975354, 30.272391], [-97.975642, 30.272437], [-97.975967, 30.27246], [-97.976202, 30.272437], [-97.976456, 30.272362], [-97.976722, 30.272259], [-97.976931, 30.27212], [-97.977087, 30.271972], [-97.977201, 30.271784], [-97.9773, 30.27156], [-97.977395, 30.271309], [-97.97748, 30.271135], [-97.977563, 30.270916], [-97.977635, 30.270744], [-97.977685, 30.270528], [-97.977684, 30.270324], [-97.977665, 30.270156], [-97.977615, 30.269938], [-97.977578, 30.269715], [-97.97754, 30.269508], [-97.977507, 30.269339], [-97.977471, 30.269171], [-97.977438, 30.269016], [-97.977383, 30.268803], [-97.977352, 30.268657], [-97.97729, 30.268268], [-97.977275, 30.267946], [-97.977291, 30.267743], [-97.977333, 30.267565], [-97.977397, 30.267387], [-97.977468, 30.267218], [-97.977538, 30.267063], [-97.977632, 30.266894], [-97.977809, 30.266806], [-97.978025, 30.266486], [-97.978098, 30.266355], [-97.978259, 30.266188], [-97.978449, 30.266076], [-97.978662, 30.265989], [-97.978887, 30.265853], [-97.979142, 30.265629], [-97.979358, 30.265407], [-97.979448, 30.265239], [-97.979583, 30.265076], [-97.97975, 30.264966], [-97.979977, 30.264927], [-97.980242, 30.264959], [-97.980436, 30.265029], [-97.980684, 30.265113], [-97.980916, 30.265205], [-97.981323, 30.265422], [-97.981454, 30.265506], [-97.981641, 30.265636], [-97.981849, 30.265775], [-97.982055, 30.265969], [-97.982194, 30.266109], [-97.982454, 30.266424], [-97.982569, 30.266594], [-97.98281, 30.266912], [-97.982882, 30.267037], [-97.983, 30.267243], [-97.983091, 30.26744], [-97.983036, 30.267837], [-97.983015, 30.268046], [-97.982951, 30.268232], [-97.98273, 30.268319], [-97.982659, 30.268524], [-97.98263, 30.268754], [-97.982596, 30.269028], [-97.982552, 30.269267], [-97.982514, 30.269445], [-97.982446, 30.269749], [-97.9824, 30.269943], [-97.98237, 30.270174], [-97.982366, 30.270311], [-97.98237, 30.270463], [-97.982383, 30.270614], [-97.982404, 30.271019], [-97.982419, 30.271253], [-97.982453, 30.271454], [-97.982556, 30.271709], [-97.982703, 30.271951], [-97.982807, 30.272107], [-97.982978, 30.272311], [-97.98309, 30.272418], [-97.983288, 30.272589], [-97.983493, 30.272744], [-97.98365, 30.272876], [-97.983832, 30.273006], [-97.984056, 30.273142], [-97.98435, 30.273279], [-97.984514, 30.273354], [-97.984745, 30.27341], [-97.984981, 30.273431], [-97.985227, 30.273309], [-97.985433, 30.273159], [-97.985596, 30.273002], [-97.985852, 30.272721], [-97.985987, 30.272586], [-97.986121, 30.272429], [-97.986272, 30.272245], [-97.986412, 30.271972], [-97.986495, 30.271795], [-97.986573, 30.271645], [-97.986651, 30.271493], [-97.986802, 30.271303], [-97.986853, 30.271092], [-97.986958, 30.270926], [-97.98706, 30.2707], [-97.986976, 30.270404], [-97.986932, 30.270191], [-97.986935, 30.269977], [-97.98695, 30.269832], [-97.987009, 30.269505], [-97.987043, 30.269341], [-97.987127, 30.269114], [-97.987183, 30.268986], [-97.987279, 30.268784], [-97.987504, 30.268436], [-97.987611, 30.268262], [-97.987723, 30.268091], [-97.987812, 30.267972], [-97.988012, 30.267764], [-97.988136, 30.267642], [-97.988243, 30.26754], [-97.988448, 30.267406], [-97.988691, 30.267336], [-97.988924, 30.267304], [-97.989099, 30.267283], [-97.989333, 30.267262], [-97.989807, 30.267213], [-97.990072, 30.267204], [-97.990425, 30.267148], [-97.990616, 30.267129], [-97.990793, 30.267121], [-97.9911, 30.267119], [-97.991266, 30.267141], [-97.991486, 30.267195], [-97.991713, 30.267212], [-97.991945, 30.267222], [-97.992225, 30.267219], [-97.992478, 30.267273], [-97.99277, 30.267394], [-97.992971, 30.267557], [-97.993192, 30.267658], [-97.993394, 30.267713], [-97.99361, 30.267745], [-97.993769, 30.267762], [-97.993992, 30.26784], [-97.994248, 30.267814], [-97.994502, 30.267657], [-97.994697, 30.267421], [-97.99483, 30.267297], [-97.994975, 30.267159], [-97.995395, 30.266771], [-97.995541, 30.266628], [-97.995653, 30.266531], [-97.995968, 30.266297], [-97.996177, 30.266133], [-97.996341, 30.265944], [-97.996298, 30.265687], [-97.996295, 30.265509], [-97.996217, 30.265265], [-97.996196, 30.265113], [-97.996428, 30.265085], [-97.996793, 30.265067], [-97.99697, 30.265045], [-97.997191, 30.264945], [-97.997389, 30.264874], [-97.997549, 30.264833], [-97.997781, 30.264821], [-97.99799, 30.264835], [-97.998239, 30.264851], [-97.998577, 30.264879], [-97.998766, 30.264896], [-97.999061, 30.26494], [-97.999323, 30.265033], [-97.999488, 30.265113], [-97.999676, 30.265213], [-97.999827, 30.265364], [-97.999881, 30.265494], [-97.999961, 30.265628], [-98.000117, 30.265806], [-98.000226, 30.265918], [-98.000413, 30.266073], [-98.000735, 30.266222], [-98.000945, 30.266341], [-98.001089, 30.266407], [-98.00124, 30.266459], [-98.0014, 30.266614], [-98.00177, 30.267063], [-98.001972, 30.267309], [-98.002088, 30.267448], [-98.002267, 30.267619], [-98.002495, 30.267811], [-98.002656, 30.26794], [-98.002843, 30.268122], [-98.003052, 30.268365], [-98.003169, 30.268513], [-98.003317, 30.268651], [-98.003533, 30.268723], [-98.003718, 30.268762], [-98.004171, 30.268801], [-98.00461, 30.268831], [-98.004872, 30.268805], [-98.00511, 30.268735], [-98.00525, 30.2686], [-98.005242, 30.268369], [-98.005194, 30.268126], [-98.005084, 30.267825], [-98.004975, 30.26749], [-98.004942, 30.267344], [-98.004907, 30.267153], [-98.0049, 30.266966], [-98.004931, 30.266738], [-98.005029, 30.266531], [-98.005258, 30.266395], [-98.00549, 30.266308], [-98.005707, 30.26629], [-98.005961, 30.266281], [-98.006118, 30.266295], [-98.006365, 30.266322], [-98.006749, 30.266356], [-98.006964, 30.266385], [-98.00716, 30.266432], [-98.007343, 30.266491], [-98.007524, 30.266557], [-98.007867, 30.26669], [-98.008178, 30.266814], [-98.008581, 30.26697], [-98.008803, 30.267029], [-98.009082, 30.267108], [-98.009347, 30.267143], [-98.009567, 30.267147], [-98.0098, 30.267143], [-98.009979, 30.267132], [-98.010285, 30.267091], [-98.010639, 30.267007], [-98.010826, 30.266966], [-98.011112, 30.266914], [-98.011356, 30.266844], [-98.011514, 30.266775], [-98.011693, 30.266688], [-98.012103, 30.266511], [-98.012373, 30.266403], [-98.012658, 30.266298], [-98.012966, 30.266166], [-98.013216, 30.266072], [-98.013394, 30.266017], [-98.013746, 30.265933], [-98.014036, 30.265853], [-98.014187, 30.265806], [-98.014422, 30.265709], [-98.014612, 30.265489], [-98.014851, 30.265337], [-98.015099, 30.265231], [-98.015359, 30.265164], [-98.015584, 30.265127], [-98.015823, 30.265118], [-98.016058, 30.265117], [-98.016333, 30.265122], [-98.016625, 30.265267], [-98.016728, 30.265412], [-98.016907, 30.265707], [-98.01708, 30.265977], [-98.017172, 30.266124], [-98.017252, 30.266269], [-98.01738, 30.266513], [-98.017505, 30.266771], [-98.017634, 30.267084], [-98.017788, 30.267469], [-98.017876, 30.267663], [-98.017995, 30.267885], [-98.018103, 30.268041], [-98.018248, 30.268198], [-98.018356, 30.268299], [-98.018529, 30.268451], [-98.018686, 30.268572], [-98.018937, 30.268716], [-98.019206, 30.268823], [-98.019457, 30.268877], [-98.019663, 30.268826], [-98.01985, 30.268705], [-98.019976, 30.268622], [-98.02011, 30.268529], [-98.020339, 30.268329], [-98.020492, 30.268178], [-98.020644, 30.268016], [-98.020871, 30.267748], [-98.021201, 30.267388], [-98.021468, 30.267002], [-98.021844, 30.267209], [-98.024782, 30.268829], [-98.024854, 30.268869], [-98.025025, 30.268964], [-98.024862, 30.271032], [-98.024829, 30.271444], [-98.024479, 30.275875], [-98.024418, 30.276649], [-98.021835, 30.285648], [-98.020913, 30.288859], [-98.020434, 30.290526], [-98.020796, 30.29065], [-98.022628, 30.290897], [-98.029151, 30.292228], [-98.030641, 30.292235], [-98.033517, 30.29187], [-98.038683, 30.291423], [-98.039517, 30.291351], [-98.041534, 30.291603], [-98.045082, 30.29087], [-98.045748, 30.290812], [-98.046915, 30.290712], [-98.050217, 30.288364], [-98.051708, 30.287629], [-98.052847, 30.287388], [-98.055131, 30.287244], [-98.057208, 30.286915], [-98.058865, 30.286485], [-98.059968, 30.286285], [-98.061308, 30.285923], [-98.06216, 30.285823], [-98.062882, 30.285822], [-98.063837, 30.286078], [-98.06482, 30.2865], [-98.071453, 30.289684], [-98.062996, 30.292117], [-98.066895, 30.296859], [-98.067434, 30.297514], [-98.067209, 30.297565], [-98.067041, 30.297609], [-98.066809, 30.297701], [-98.066583, 30.297818], [-98.066345, 30.297913], [-98.066199, 30.297993], [-98.065916, 30.297974], [-98.065638, 30.297958], [-98.065391, 30.297959], [-98.065134, 30.297957], [-98.064907, 30.297981], [-98.064663, 30.298045], [-98.064443, 30.298187], [-98.0643, 30.298339], [-98.064199, 30.298537], [-98.064155, 30.29871], [-98.064124, 30.298874], [-98.064098, 30.299017], [-98.064031, 30.299151], [-98.063878, 30.299343], [-98.063719, 30.29939], [-98.063491, 30.299474], [-98.063263, 30.299574], [-98.06296, 30.299684], [-98.062767, 30.299763], [-98.062497, 30.299852], [-98.06228, 30.299909], [-98.062121, 30.299945], [-98.06188, 30.299995], [-98.061723, 30.300034], [-98.061324, 30.300153], [-98.061081, 30.300229], [-98.06085, 30.300293], [-98.060579, 30.300365], [-98.060408, 30.300423], [-98.060089, 30.300492], [-98.059789, 30.300527], [-98.059507, 30.300531], [-98.059214, 30.300526], [-98.059006, 30.300522], [-98.05872, 30.300539], [-98.058466, 30.300595], [-98.058216, 30.300656], [-98.058069, 30.300816], [-98.058191, 30.300978], [-98.058336, 30.301164], [-98.058409, 30.301295], [-98.058461, 30.301469], [-98.058457, 30.301766], [-98.058369, 30.301938], [-98.058192, 30.302091], [-98.057967, 30.302211], [-98.057779, 30.302299], [-98.057571, 30.302419], [-98.057332, 30.30259], [-98.057161, 30.302755], [-98.057072, 30.302949], [-98.057069, 30.303147], [-98.057143, 30.303371], [-98.057216, 30.303589], [-98.057215, 30.30379], [-98.057245, 30.304027], [-98.05726, 30.304193], [-98.057216, 30.304428], [-98.057152, 30.304573], [-98.057009, 30.304741], [-98.056812, 30.304836], [-98.056755, 30.305033], [-98.056707, 30.305236], [-98.056586, 30.305468], [-98.056582, 30.305652], [-98.056724, 30.30583], [-98.056787, 30.306021], [-98.056898, 30.30623], [-98.057113, 30.306409], [-98.057386, 30.306535], [-98.057547, 30.306577], [-98.057789, 30.306663], [-98.058066, 30.306811], [-98.058224, 30.306946], [-98.058285, 30.30723], [-98.058307, 30.307467], [-98.058369, 30.307727], [-98.05842, 30.307876], [-98.058485, 30.308018], [-98.058541, 30.308156], [-98.058619, 30.30832], [-98.058646, 30.308568], [-98.058541, 30.308786], [-98.058428, 30.308889], [-98.058316, 30.30901], [-98.05815, 30.309205], [-98.057928, 30.309422], [-98.057792, 30.309581], [-98.057712, 30.309712], [-98.057557, 30.309937], [-98.057433, 30.310103], [-98.057346, 30.310217], [-98.057108, 30.310353], [-98.056989, 30.310447], [-98.056766, 30.310605], [-98.056563, 30.310693], [-98.056368, 30.310758], [-98.056289, 30.31096], [-98.056325, 30.311181], [-98.056345, 30.311343], [-98.056441, 30.311628], [-98.056531, 30.311877], [-98.05658, 30.312186], [-98.056596, 30.312352], [-98.056592, 30.312569], [-98.056415, 30.312709], [-98.056216, 30.312801], [-98.056173, 30.312979], [-98.056196, 30.3132], [-98.056249, 30.313412], [-98.056252, 30.313613], [-98.056241, 30.313808], [-98.056126, 30.313974], [-98.055971, 30.314073], [-98.05582, 30.314205], [-98.055785, 30.314372], [-98.055767, 30.31452], [-98.055792, 30.314752], [-98.0558, 30.314892], [-98.055827, 30.315044], [-98.055839, 30.315275], [-98.055835, 30.315421], [-98.05584, 30.315633], [-98.055816, 30.315814], [-98.055694, 30.316046], [-98.055556, 30.316208], [-98.05538, 30.316293], [-98.055214, 30.316331], [-98.055004, 30.316377], [-98.054851, 30.316446], [-98.054612, 30.316488], [-98.054351, 30.316547], [-98.054087, 30.316641], [-98.05387, 30.316742], [-98.053717, 30.316863], [-98.053514, 30.317074], [-98.053373, 30.317269], [-98.053281, 30.317441], [-98.05318, 30.317634], [-98.053056, 30.317883], [-98.052907, 30.318053], [-98.052675, 30.318222], [-98.052496, 30.318346], [-98.052315, 30.318469], [-98.052046, 30.318635], [-98.051888, 30.318731], [-98.051744, 30.318827], [-98.051626, 30.318921], [-98.051437, 30.319036], [-98.051293, 30.319111], [-98.051107, 30.319239], [-98.050917, 30.319404], [-98.050817, 30.319526], [-98.050647, 30.319721], [-98.050469, 30.319902], [-98.050343, 30.320021], [-98.050171, 30.320177], [-98.049969, 30.320281], [-98.049567, 30.320375], [-98.049291, 30.320428], [-98.04893, 30.32054], [-98.048722, 30.320622], [-98.048478, 30.320757], [-98.048297, 30.320914], [-98.048149, 30.321079], [-98.048037, 30.321239], [-98.047917, 30.321416], [-98.047682, 30.321687], [-98.047506, 30.32189], [-98.047375, 30.322069], [-98.047272, 30.322185], [-98.047164, 30.322296], [-98.047023, 30.322439], [-98.046856, 30.322585], [-98.04662, 30.322702], [-98.046362, 30.322777], [-98.046153, 30.322806], [-98.045979, 30.3228], [-98.045649, 30.322748], [-98.045435, 30.322703], [-98.045177, 30.322637], [-98.045012, 30.322585], [-98.04484, 30.322543], [-98.04465, 30.322485], [-98.044465, 30.322446], [-98.044236, 30.322392], [-98.044063, 30.322376], [-98.043905, 30.322362], [-98.043674, 30.322399], [-98.043534, 30.322567], [-98.043523, 30.322765], [-98.0436, 30.322893], [-98.043689, 30.323026], [-98.043808, 30.323204], [-98.043993, 30.323433], [-98.044149, 30.323634], [-98.044298, 30.32384], [-98.044469, 30.324107], [-98.044551, 30.324232], [-98.044748, 30.324453], [-98.044867, 30.324598], [-98.045011, 30.324785], [-98.045142, 30.325032], [-98.045216, 30.325256], [-98.045258, 30.325403], [-98.045285, 30.32559], [-98.045281, 30.325731], [-98.045191, 30.325919], [-98.045005, 30.325992], [-98.04479, 30.326019], [-98.044578, 30.325957], [-98.044368, 30.325832], [-98.04415, 30.325699], [-98.043962, 30.325556], [-98.043778, 30.325473], [-98.043564, 30.325483], [-98.043466, 30.32564], [-98.043527, 30.325848], [-98.043751, 30.326003], [-98.043918, 30.326127], [-98.044043, 30.326267], [-98.044092, 30.326477], [-98.043995, 30.326659], [-98.043721, 30.326668], [-98.043468, 30.326617], [-98.043283, 30.326635], [-98.043038, 30.326716], [-98.042848, 30.326878], [-98.042772, 30.327064], [-98.042752, 30.327346], [-98.042748, 30.327492], [-98.042796, 30.327749], [-98.042843, 30.327986], [-98.042877, 30.328201], [-98.042933, 30.328406], [-98.043018, 30.328605], [-98.043173, 30.328836], [-98.043313, 30.32899], [-98.043466, 30.329194], [-98.043582, 30.329394], [-98.043682, 30.329558], [-98.043749, 30.329729], [-98.043793, 30.32997], [-98.043827, 30.330165], [-98.043853, 30.330389], [-98.043805, 30.330699], [-98.043756, 30.331091], [-98.043734, 30.331261], [-98.043723, 30.331445], [-98.043695, 30.331736], [-98.043688, 30.331929], [-98.043704, 30.332113], [-98.043697, 30.33247], [-98.04369, 30.332663], [-98.043682, 30.332861], [-98.043676, 30.33302], [-98.043647, 30.333171], [-98.0436, 30.333484], [-98.043565, 30.333678], [-98.043511, 30.333881], [-98.043449, 30.334064], [-98.043328, 30.334298], [-98.043227, 30.334516], [-98.043081, 30.334731], [-98.042895, 30.334901], [-98.042696, 30.335038], [-98.042371, 30.335068], [-98.042188, 30.33507], [-98.041939, 30.33506], [-98.041684, 30.334995], [-98.041524, 30.334923], [-98.041308, 30.334853], [-98.04105, 30.334843], [-98.040793, 30.334916], [-98.040604, 30.335039], [-98.040513, 30.335216], [-98.040456, 30.335432], [-98.04044, 30.335641], [-98.040538, 30.335772], [-98.040616, 30.335947], [-98.040613, 30.336101], [-98.040591, 30.336295], [-98.040485, 30.336483], [-98.04031, 30.336733], [-98.040182, 30.336918], [-98.039991, 30.33692], [-98.039589, 30.336976], [-98.039283, 30.33702], [-98.039106, 30.337039], [-98.038844, 30.337067], [-98.038642, 30.337086], [-98.038353, 30.337111], [-98.038122, 30.337126], [-98.037884, 30.337124], [-98.037597, 30.337158], [-98.03735, 30.337261], [-98.037179, 30.337373], [-98.037033, 30.337505], [-98.036844, 30.337672], [-98.036653, 30.337826], [-98.036481, 30.337977], [-98.036345, 30.338084], [-98.036174, 30.338238], [-98.036012, 30.338416], [-98.035909, 30.338541], [-98.035671, 30.338823], [-98.034334, 30.337886], [-98.032809, 30.33664], [-98.03169, 30.335933], [-98.029812, 30.335071], [-98.027465, 30.333225], [-98.026268, 30.332672], [-98.025165, 30.33216], [-98.024524, 30.3315], [-98.022881, 30.330227], [-98.019696, 30.329042], [-98.01803, 30.328077], [-98.017528, 30.327837], [-98.015132, 30.326171], [-98.011926, 30.323987], [-98.010627, 30.363676], [-98.010405, 30.363455], [-98.01028, 30.363192], [-98.010155, 30.362969], [-98.010027, 30.362838], [-98.009775, 30.362734], [-98.009506, 30.362671], [-98.009329, 30.362583], [-98.009167, 30.362459], [-98.009081, 30.362309], [-98.009036, 30.362151], [-98.006219, 30.360791]]]]
    },
    "properties": {
      "neighbourhood": "78738",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-97.623382, 30.264594], [-97.621263, 30.262679], [-97.619661, 30.261031], [-97.616278, 30.259895], [-97.613974, 30.258996], [-97.611818, 30.256997], [-97.609424, 30.255549], [-97.606204, 30.254452], [-97.604178, 30.25354], [-97.60167, 30.252691], [-97.598677, 30.251376], [-97.597937, 30.251402], [-97.59642, 30.251553], [-97.595643, 30.251457], [-97.588658, 30.250086], [-97.587709, 30.249574], [-97.584437, 30.247809], [-97.583215, 30.247409], [-97.582031, 30.24751], [-97.579375, 30.248116], [-97.577945, 30.248308], [-97.575756, 30.248833], [-97.572982, 30.248836], [-97.570666, 30.249097], [-97.569037, 30.248999], [-97.566328, 30.248344], [-97.564804, 30.24814], [-97.561598, 30.248566], [-97.560975, 30.248866], [-97.560724, 30.249028], [-97.560541, 30.248969], [-97.560354, 30.248952], [-97.560074, 30.248896], [-97.559798, 30.24884], [-97.559617, 30.248859], [-97.559163, 30.248989], [-97.558799, 30.24908], [-97.558799, 30.248758], [-97.558808, 30.248616], [-97.558659, 30.248387], [-97.558425, 30.24817], [-97.55832, 30.248069], [-97.558066, 30.247986], [-97.558107, 30.247814], [-97.55818, 30.247628], [-97.558136, 30.247484], [-97.558019, 30.247366], [-97.557895, 30.247237], [-97.557823, 30.247007], [-97.557939, 30.246801], [-97.55823, 30.246771], [-97.558444, 30.246916], [-97.558783, 30.246901], [-97.559, 30.247008], [-97.558812, 30.247191], [-97.559002, 30.247299], [-97.559176, 30.247284], [-97.55941, 30.24724], [-97.559691, 30.247149], [-97.559916, 30.247003], [-97.560193, 30.24702], [-97.560407, 30.246642], [-97.560448, 30.246393], [-97.560473, 30.24625], [-97.560615, 30.246149], [-97.560746, 30.245885], [-97.560829, 30.245645], [-97.560752, 30.245407], [-97.560652, 30.245283], [-97.560547, 30.245157], [-97.560437, 30.245037], [-97.560323, 30.244932], [-97.560091, 30.244782], [-97.55982, 30.244693], [-97.559528, 30.244935], [-97.559365, 30.245201], [-97.55917, 30.24537], [-97.558913, 30.245411], [-97.558736, 30.245236], [-97.558694, 30.245002], [-97.558756, 30.244811], [-97.558651, 30.244605], [-97.55859, 30.24446], [-97.558554, 30.244325], [-97.558552, 30.24408], [-97.558732, 30.244059], [-97.558883, 30.24395], [-97.558966, 30.243704], [-97.55881, 30.243428], [-97.558657, 30.243257], [-97.558482, 30.243064], [-97.558411, 30.242905], [-97.558348, 30.242717], [-97.558303, 30.242548], [-97.558276, 30.242396], [-97.558192, 30.242078], [-97.558193, 30.241776], [-97.558186, 30.241632], [-97.558063, 30.241418], [-97.557894, 30.241387], [-97.557676, 30.241374], [-97.557517, 30.241359], [-97.557254, 30.241279], [-97.557022, 30.241065], [-97.55685, 30.240853], [-97.556746, 30.24074], [-97.556506, 30.240633], [-97.556256, 30.240763], [-97.556085, 30.240965], [-97.556035, 30.241236], [-97.556085, 30.241716], [-97.556097, 30.241854], [-97.556049, 30.2421], [-97.555914, 30.242342], [-97.555743, 30.242523], [-97.55555, 30.242579], [-97.555357, 30.242608], [-97.555002, 30.242672], [-97.554814, 30.242709], [-97.554545, 30.242821], [-97.554248, 30.242856], [-97.554074, 30.242822], [-97.553828, 30.242781], [-97.553657, 30.242755], [-97.553338, 30.242754], [-97.553052, 30.242839], [-97.552801, 30.242968], [-97.552534, 30.243006], [-97.552333, 30.242922], [-97.552042, 30.242833], [-97.551784, 30.242709], [-97.551626, 30.24261], [-97.551432, 30.242506], [-97.551248, 30.242423], [-97.550596, 30.242263], [-97.550698, 30.24202], [-97.550887, 30.241823], [-97.551042, 30.241631], [-97.551137, 30.241496], [-97.551233, 30.241322], [-97.551286, 30.241131], [-97.551291, 30.240944], [-97.551253, 30.240783], [-97.55111, 30.240577], [-97.550893, 30.240534], [-97.550606, 30.24045], [-97.550395, 30.240402], [-97.550223, 30.240376], [-97.550036, 30.240366], [-97.549878, 30.240388], [-97.549745, 30.240624], [-97.549672, 30.240766], [-97.54937, 30.241078], [-97.549224, 30.241196], [-97.548904, 30.241329], [-97.548653, 30.241351], [-97.54848, 30.241345], [-97.548177, 30.241286], [-97.548028, 30.241236], [-97.547543, 30.240994], [-97.547358, 30.240913], [-97.547137, 30.240845], [-97.546951, 30.240814], [-97.546708, 30.240795], [-97.546407, 30.240794], [-97.546232, 30.240817], [-97.546046, 30.240863], [-97.545612, 30.240925], [-97.545106, 30.240895], [-97.544936, 30.240872], [-97.544747, 30.240796], [-97.54432, 30.240454], [-97.544211, 30.24035], [-97.544091, 30.240226], [-97.543845, 30.239684], [-97.543747, 30.239421], [-97.543662, 30.239216], [-97.543652, 30.239034], [-97.54368, 30.238792], [-97.54381, 30.238413], [-97.543895, 30.238225], [-97.543968, 30.237971], [-97.544069, 30.237783], [-97.544118, 30.237545], [-97.544147, 30.23718], [-97.544224, 30.236854], [-97.544365, 30.236692], [-97.544508, 30.236456], [-97.544582, 30.236306], [-97.544704, 30.236199], [-97.545009, 30.236085], [-97.545353, 30.23593], [-97.545622, 30.235831], [-97.545808, 30.235794], [-97.546085, 30.235792], [-97.546397, 30.235873], [-97.546903, 30.235777], [-97.547338, 30.23561], [-97.547525, 30.235578], [-97.547769, 30.235471], [-97.547923, 30.23524], [-97.547769, 30.234835], [-97.547657, 30.23472], [-97.547483, 30.234513], [-97.547315, 30.23446], [-97.547123, 30.234467], [-97.546969, 30.234496], [-97.546769, 30.234539], [-97.546498, 30.234494], [-97.546379, 30.234368], [-97.546326, 30.234103], [-97.546243, 30.233895], [-97.54618, 30.233742], [-97.54613, 30.233581], [-97.546082, 30.233349], [-97.545988, 30.232816], [-97.545863, 30.232585], [-97.545657, 30.232366], [-97.54541, 30.232256], [-97.545122, 30.232137], [-97.545012, 30.232003], [-97.544905, 30.231822], [-97.544768, 30.231571], [-97.544624, 30.231238], [-97.544555, 30.231083], [-97.54446, 30.230913], [-97.544268, 30.230524], [-97.544076, 30.230184], [-97.543992, 30.23], [-97.543859, 30.229753], [-97.543734, 30.229439], [-97.543686, 30.22924], [-97.543595, 30.228878], [-97.543604, 30.228675], [-97.543543, 30.228412], [-97.543515, 30.228233], [-97.54339, 30.227875], [-97.54331, 30.227733], [-97.543112, 30.227467], [-97.542913, 30.227227], [-97.542675, 30.227021], [-97.542476, 30.226909], [-97.542169, 30.226792], [-97.541833, 30.226452], [-97.54162, 30.226051], [-97.541566, 30.225866], [-97.541581, 30.225591], [-97.541646, 30.225342], [-97.541795, 30.225255], [-97.542264, 30.224902], [-97.542623, 30.22475], [-97.543127, 30.224423], [-97.543255, 30.224275], [-97.543394, 30.224135], [-97.54361, 30.22398], [-97.543971, 30.223679], [-97.544254, 30.223215], [-97.544495, 30.222819], [-97.544589, 30.222703], [-97.54469, 30.222587], [-97.544995, 30.22242], [-97.545238, 30.22234], [-97.545433, 30.222322], [-97.54559, 30.222257], [-97.545751, 30.22215], [-97.546044, 30.221885], [-97.546222, 30.221701], [-97.546471, 30.221512], [-97.546787, 30.221252], [-97.546702, 30.220804], [-97.546636, 30.220621], [-97.546558, 30.220422], [-97.546492, 30.220288], [-97.546432, 30.22013], [-97.546396, 30.219983], [-97.54631, 30.219852], [-97.546191, 30.219679], [-97.54602, 30.219252], [-97.546058, 30.218595], [-97.546163, 30.218367], [-97.546297, 30.217984], [-97.547789, 30.216851], [-97.548522, 30.21638], [-97.549095, 30.215848], [-97.549803, 30.215203], [-97.55108, 30.213812], [-97.551772, 30.21285], [-97.55225, 30.212019], [-97.55248, 30.211735], [-97.552811, 30.211437], [-97.553079, 30.211176], [-97.553355, 30.21086], [-97.553721, 30.210401], [-97.554085, 30.209946], [-97.554547, 30.209371], [-97.554881, 30.208998], [-97.555251, 30.208643], [-97.555617, 30.208354], [-97.555952, 30.208141], [-97.556293, 30.207923], [-97.556627, 30.207735], [-97.556797, 30.20767], [-97.557204, 30.207541], [-97.557516, 30.207504], [-97.557729, 30.207481], [-97.558061, 30.207474], [-97.5581, 30.207473], [-97.558515, 30.20749], [-97.559125, 30.207528], [-97.559495, 30.207536], [-97.559621, 30.207539], [-97.560179, 30.207603], [-97.560661, 30.207693], [-97.561016, 30.207795], [-97.561335, 30.207933], [-97.561658, 30.20813], [-97.562078, 30.20839], [-97.562333, 30.20856], [-97.562512, 30.20874], [-97.56265, 30.208944], [-97.562773, 30.209164], [-97.56283, 30.209396], [-97.562825, 30.209597], [-97.562843, 30.209762], [-97.562883, 30.209978], [-97.562947, 30.210166], [-97.563012, 30.210313], [-97.563112, 30.21045], [-97.563286, 30.210638], [-97.563508, 30.210904], [-97.563703, 30.211139], [-97.563829, 30.21123], [-97.563989, 30.211346], [-97.564689, 30.211703], [-97.565212, 30.21197], [-97.5656, 30.212105], [-97.565926, 30.212211], [-97.566372, 30.212325], [-97.566974, 30.212459], [-97.567468, 30.21256], [-97.568066, 30.212642], [-97.56841, 30.212688], [-97.568845, 30.212777], [-97.569202, 30.212851], [-97.569496, 30.212918], [-97.570147, 30.213061], [-97.570841, 30.213216], [-97.571164, 30.213297], [-97.572028, 30.213489], [-97.572458, 30.213595], [-97.572956, 30.213705], [-97.573459, 30.213831], [-97.573796, 30.213923], [-97.574201, 30.214048], [-97.574613, 30.214186], [-97.574967, 30.214257], [-97.575424, 30.2143], [-97.575784, 30.214307], [-97.57591, 30.21431], [-97.57634, 30.2143], [-97.576622, 30.21427], [-97.577005, 30.214204], [-97.577231, 30.214157], [-97.577399, 30.214125], [-97.577848, 30.214046], [-97.578257, 30.213959], [-97.578556, 30.213861], [-97.578777, 30.213761], [-97.579099, 30.213584], [-97.579488, 30.21338], [-97.57965, 30.213285], [-97.579913, 30.213046], [-97.580106, 30.212866], [-97.580367, 30.212596], [-97.580491, 30.212497], [-97.580678, 30.212344], [-97.581101, 30.212078], [-97.581379, 30.211842], [-97.581642, 30.211537], [-97.581767, 30.211345], [-97.581835, 30.211187], [-97.581862, 30.210984], [-97.581894, 30.210613], [-97.581895, 30.210365], [-97.58176, 30.210247], [-97.581688, 30.210119], [-97.581672, 30.209962], [-97.581723, 30.209746], [-97.581842, 30.209635], [-97.58232, 30.209329], [-97.582475, 30.209159], [-97.582666, 30.208974], [-97.58298, 30.208774], [-97.583394, 30.208558], [-97.583565, 30.208514], [-97.583863, 30.208279], [-97.584028, 30.208156], [-97.584277, 30.207977], [-97.584477, 30.207857], [-97.584616, 30.207778], [-97.58479, 30.207694], [-97.585046, 30.207592], [-97.585204, 30.207532], [-97.585713, 30.207345], [-97.586129, 30.207194], [-97.58633, 30.207133], [-97.586494, 30.207067], [-97.586681, 30.206978], [-97.586856, 30.206905], [-97.587102, 30.206808], [-97.587279, 30.20676], [-97.587535, 30.206663], [-97.587678, 30.206598], [-97.587927, 30.20646], [-97.588142, 30.206264], [-97.588321, 30.206202], [-97.588499, 30.20615], [-97.58868, 30.206105], [-97.588974, 30.206069], [-97.589004, 30.206065], [-97.589187, 30.206077], [-97.589469, 30.206114], [-97.589816, 30.20614], [-97.590081, 30.206204], [-97.590248, 30.206221], [-97.590527, 30.206238], [-97.590828, 30.206277], [-97.591151, 30.20635], [-97.591425, 30.206436], [-97.591871, 30.206534], [-97.592184, 30.206645], [-97.592484, 30.206778], [-97.592631, 30.20683], [-97.592813, 30.206884], [-97.593139, 30.206968], [-97.593312, 30.207024], [-97.593507, 30.207094], [-97.593679, 30.207158], [-97.593931, 30.207271], [-97.594061, 30.20735], [-97.594227, 30.207461], [-97.59438, 30.207572], [-97.594619, 30.207756], [-97.594854, 30.207909], [-97.594958, 30.208052], [-97.595093, 30.208239], [-97.595285, 30.208502], [-97.595381, 30.208707], [-97.595421, 30.208945], [-97.595406, 30.209219], [-97.595316, 30.209468], [-97.595236, 30.209661], [-97.595136, 30.209953], [-97.594982, 30.210412], [-97.594922, 30.210763], [-97.594865, 30.211042], [-97.594756, 30.211463], [-97.594714, 30.211674], [-97.594697, 30.212004], [-97.594687, 30.212359], [-97.594651, 30.212718], [-97.594582, 30.213127], [-97.594569, 30.213544], [-97.594552, 30.213885], [-97.594586, 30.214114], [-97.594706, 30.214562], [-97.594838, 30.214925], [-97.594953, 30.215261], [-97.594998, 30.215429], [-97.595042, 30.215601], [-97.595135, 30.215834], [-97.595269, 30.216235], [-97.595517, 30.21686], [-97.595681, 30.217223], [-97.595731, 30.217491], [-97.595762, 30.218009], [-97.595758, 30.218163], [-97.595724, 30.218644], [-97.595714, 30.21899], [-97.595696, 30.219314], [-97.595679, 30.219622], [-97.595639, 30.219888], [-97.59554, 30.220317], [-97.595479, 30.220547], [-97.595365, 30.22077], [-97.595233, 30.221012], [-97.595037, 30.221209], [-97.594896, 30.221346], [-97.594655, 30.221517], [-97.594357, 30.221651], [-97.594137, 30.221723], [-97.593916, 30.221823], [-97.593622, 30.221965], [-97.593415, 30.22209], [-97.593166, 30.222272], [-97.592911, 30.222486], [-97.592754, 30.222656], [-97.592648, 30.222824], [-97.592567, 30.223018], [-97.592493, 30.223173], [-97.592409, 30.223391], [-97.592334, 30.223593], [-97.592275, 30.223823], [-97.592234, 30.224031], [-97.592212, 30.224276], [-97.59222, 30.224512], [-97.592253, 30.224716], [-97.592286, 30.224912], [-97.592317, 30.225147], [-97.592322, 30.225392], [-97.592338, 30.225681], [-97.592365, 30.225869], [-97.59241, 30.226004], [-97.592511, 30.226248], [-97.592588, 30.226429], [-97.592709, 30.22661], [-97.593043, 30.227052], [-97.593264, 30.227315], [-97.593453, 30.227495], [-97.593616, 30.227636], [-97.593928, 30.22786], [-97.594236, 30.228024], [-97.594523, 30.228165], [-97.594765, 30.228266], [-97.594958, 30.228328], [-97.595169, 30.228371], [-97.595436, 30.228415], [-97.595716, 30.228454], [-97.596203, 30.228517], [-97.596388, 30.228527], [-97.596449, 30.22853], [-97.596799, 30.228527], [-97.597101, 30.228475], [-97.59725, 30.228424], [-97.597419, 30.228312], [-97.59773, 30.228052], [-97.597958, 30.227867], [-97.598158, 30.227766], [-97.598358, 30.227696], [-97.598524, 30.227667], [-97.598947, 30.227621], [-97.599311, 30.227604], [-97.600494, 30.227357], [-97.601748, 30.227065], [-97.602503, 30.22699], [-97.603092, 30.226796], [-97.603482, 30.2264], [-97.603715, 30.225808], [-97.603889, 30.22535], [-97.603955, 30.224746], [-97.603983, 30.224494], [-97.604, 30.223529], [-97.604215, 30.222871], [-97.604696, 30.221871], [-97.604922, 30.221282], [-97.605116, 30.219397], [-97.605321, 30.218483], [-97.606062, 30.216991], [-97.60658, 30.216309], [-97.606947, 30.216102], [-97.608219, 30.216052], [-97.608523, 30.21604], [-97.610419, 30.215634], [-97.610671, 30.215582], [-97.611439, 30.215268], [-97.612909, 30.21407], [-97.613471, 30.213961], [-97.614814, 30.21378], [-97.615545, 30.213458], [-97.618945, 30.211335], [-97.620723, 30.210677], [-97.620996, 30.210578], [-97.622944, 30.210292], [-97.62511, 30.209906], [-97.626008, 30.209719], [-97.627041, 30.209504], [-97.628433, 30.209093], [-97.62965, 30.208649], [-97.630211, 30.208386], [-97.631109, 30.208063], [-97.631535, 30.207888], [-97.632057, 30.207679], [-97.63286, 30.207481], [-97.63289, 30.207474], [-97.634138, 30.207605], [-97.634525, 30.207665], [-97.63472, 30.207691], [-97.634955, 30.207732], [-97.635221, 30.20779], [-97.63567, 30.207907], [-97.635903, 30.207955], [-97.636284, 30.208018], [-97.636625, 30.20807], [-97.636918, 30.208134], [-97.637395, 30.208237], [-97.637467, 30.208252], [-97.637675, 30.208202], [-97.63782, 30.208062], [-97.638251, 30.208061], [-97.638283, 30.208061], [-97.638626, 30.208071], [-97.638767, 30.208134], [-97.638926, 30.208217], [-97.639343, 30.208229], [-97.639592, 30.208275], [-97.639823, 30.208341], [-97.640734, 30.208629], [-97.641298, 30.208894], [-97.642073, 30.209293], [-97.642879, 30.209585], [-97.643511, 30.209807], [-97.644163, 30.210038], [-97.645408, 30.210361], [-97.646163, 30.210737], [-97.647271, 30.211388], [-97.648327, 30.212078], [-97.649353, 30.212812], [-97.649756, 30.213087], [-97.649979, 30.213183], [-97.650404, 30.213387], [-97.650685, 30.213571], [-97.650883, 30.213859], [-97.650977, 30.214163], [-97.651012, 30.214379], [-97.652237, 30.215714], [-97.652947, 30.216727], [-97.653661, 30.217614], [-97.654177, 30.218232], [-97.654457, 30.218521], [-97.654753, 30.218902], [-97.655012, 30.219174], [-97.65531, 30.219538], [-97.655631, 30.219811], [-97.656308, 30.220557], [-97.656726, 30.221028], [-97.65714, 30.221625], [-97.657507, 30.222433], [-97.657743, 30.222991], [-97.657813, 30.223154], [-97.657968, 30.223507], [-97.658308, 30.224551], [-97.658582, 30.225541], [-97.658801, 30.226137], [-97.658923, 30.226761], [-97.658746, 30.227382], [-97.658256, 30.228098], [-97.657677, 30.228713], [-97.657008, 30.229392], [-97.656631, 30.229684], [-97.655458, 30.230589], [-97.655306, 30.230787], [-97.654779, 30.23143], [-97.65357, 30.233036], [-97.65335, 30.233207], [-97.652947, 30.233235], [-97.652735, 30.233269], [-97.652109, 30.233536], [-97.651671, 30.23378], [-97.651294, 30.23405], [-97.650768, 30.234805], [-97.649873, 30.235727], [-97.649448, 30.235834], [-97.648779, 30.2359], [-97.647743, 30.236407], [-97.647581, 30.236442], [-97.647419, 30.236469], [-97.647258, 30.236496], [-97.646845, 30.236514], [-97.646446, 30.236512], [-97.646069, 30.236515], [-97.645525, 30.236553], [-97.645346, 30.236599], [-97.645162, 30.236655], [-97.644789, 30.236777], [-97.644502, 30.236848], [-97.644067, 30.23699], [-97.643862, 30.237049], [-97.64348, 30.237178], [-97.643021, 30.237345], [-97.642596, 30.237484], [-97.642216, 30.237597], [-97.64202, 30.237651], [-97.641701, 30.237694], [-97.641457, 30.237705], [-97.641223, 30.237719], [-97.640913, 30.237743], [-97.640533, 30.237812], [-97.640062, 30.237904], [-97.639355, 30.238076], [-97.638691, 30.238244], [-97.638346, 30.238333], [-97.638155, 30.238389], [-97.637981, 30.238446], [-97.637773, 30.238502], [-97.637609, 30.238532], [-97.637392, 30.238566], [-97.637044, 30.238638], [-97.636729, 30.238692], [-97.636508, 30.238745], [-97.636154, 30.238834], [-97.635767, 30.238958], [-97.635501, 30.239037], [-97.635286, 30.239096], [-97.634785, 30.23927], [-97.634507, 30.239352], [-97.634233, 30.23944], [-97.634044, 30.239494], [-97.633732, 30.239597], [-97.633553, 30.239665], [-97.63332, 30.239808], [-97.633047, 30.240006], [-97.632964, 30.240136], [-97.632902, 30.240344], [-97.632831, 30.24053], [-97.632737, 30.240668], [-97.632616, 30.240885], [-97.63236, 30.241075], [-97.632083, 30.241325], [-97.631762, 30.241561], [-97.631342, 30.241895], [-97.630944, 30.242242], [-97.630576, 30.24255], [-97.630436, 30.242679], [-97.62936, 30.244092], [-97.628801, 30.244936], [-97.628329, 30.245759], [-97.628034, 30.246281], [-97.627747, 30.24652], [-97.627278, 30.247228], [-97.626627, 30.248323], [-97.626214, 30.249139], [-97.625901, 30.249826], [-97.6258, 30.250316], [-97.625765, 30.250629], [-97.625731, 30.250801], [-97.625721, 30.251109], [-97.625751, 30.251489], [-97.625757, 30.251852], [-97.625785, 30.252175], [-97.625828, 30.252508], [-97.625939, 30.25308], [-97.62604, 30.253707], [-97.626065, 30.25434], [-97.62611, 30.25477], [-97.626151, 30.254944], [-97.626229, 30.255113], [-97.62652, 30.255592], [-97.62691, 30.255958], [-97.627477, 30.256157], [-97.628004, 30.256141], [-97.62863, 30.255997], [-97.629855, 30.255877], [-97.630067, 30.255857], [-97.630419, 30.255832], [-97.630639, 30.255811], [-97.630942, 30.255763], [-97.631244, 30.255736], [-97.631565, 30.255713], [-97.631858, 30.255694], [-97.632177, 30.255701], [-97.632433, 30.255723], [-97.632687, 30.255767], [-97.63298, 30.255781], [-97.633355, 30.255781], [-97.63408, 30.255804], [-97.634601, 30.255821], [-97.63503, 30.255843], [-97.635422, 30.255885], [-97.635859, 30.255949], [-97.636141, 30.255988], [-97.636487, 30.256034], [-97.636787, 30.256087], [-97.637014, 30.256141], [-97.637278, 30.256202], [-97.637495, 30.256261], [-97.637785, 30.256347], [-97.638086, 30.256392], [-97.638413, 30.256462], [-97.638704, 30.256518], [-97.638923, 30.256522], [-97.639143, 30.256527], [-97.639445, 30.256492], [-97.639757, 30.256444], [-97.639949, 30.256431], [-97.640251, 30.256437], [-97.640433, 30.256466], [-97.641218, 30.256755], [-97.64163, 30.257561], [-97.641718, 30.261573], [-97.641726, 30.261713], [-97.641817, 30.261839], [-97.641987, 30.261966], [-97.642181, 30.262119], [-97.642396, 30.262253], [-97.642639, 30.262475], [-97.642964, 30.262603], [-97.643264, 30.262664], [-97.643502, 30.262724], [-97.64374, 30.262793], [-97.643915, 30.262868], [-97.644208, 30.262973], [-97.644362, 30.26302], [-97.644537, 30.26306], [-97.644797, 30.263101], [-97.64507, 30.26317], [-97.645316, 30.2632], [-97.645484, 30.263245], [-97.645702, 30.263268], [-97.646658, 30.263228], [-97.647713, 30.263101], [-97.648181, 30.262839], [-97.648768, 30.262711], [-97.6499, 30.262449], [-97.651574, 30.262399], [-97.652284, 30.26229], [-97.653394, 30.262164], [-97.654237, 30.262182], [-97.657918, 30.261618], [-97.660991, 30.260773], [-97.663637, 30.259255], [-97.667347, 30.257001], [-97.667907, 30.25662], [-97.669225, 30.256094], [-97.671275, 30.254773], [-97.671537, 30.25455], [-97.671667, 30.254313], [-97.671689, 30.253761], [-97.671624, 30.252978], [-97.671729, 30.252794], [-97.67185, 30.252584], [-97.672225, 30.252105], [-97.672726, 30.251258], [-97.673121, 30.250815], [-97.674265, 30.249953], [-97.675137, 30.249333], [-97.67598, 30.248825], [-97.677342, 30.248188], [-97.677807, 30.247972], [-97.679714, 30.247318], [-97.681104, 30.246731], [-97.682457, 30.246289], [-97.683503, 30.246255], [-97.684992, 30.245995], [-97.687873, 30.245812], [-97.68845, 30.245508], [-97.688726, 30.245403], [-97.688911, 30.245352], [-97.689204, 30.245333], [-97.689352, 30.245276], [-97.689537, 30.245255], [-97.690314, 30.24551], [-97.690745, 30.245594], [-97.691116, 30.245585], [-97.691331, 30.245575], [-97.691413, 30.246025], [-97.691586, 30.247159], [-97.69172, 30.248105], [-97.691861, 30.248477], [-97.690398, 30.249074], [-97.688633, 30.24967], [-97.687317, 30.250053], [-97.68525, 30.250513], [-97.683363, 30.250997], [-97.682255, 30.25143], [-97.681132, 30.252029], [-97.68007, 30.252747], [-97.679423, 30.253311], [-97.678671, 30.254219], [-97.677793, 30.25548], [-97.677077, 30.256637], [-97.676417, 30.257666], [-97.67569, 30.2588], [-97.675097, 30.259704], [-97.67481, 30.260154], [-97.673478, 30.262239], [-97.672874, 30.26317], [-97.67229, 30.264079], [-97.671806, 30.264847], [-97.671123, 30.265895], [-97.67077, 30.266471], [-97.670469, 30.267061], [-97.670256, 30.267549], [-97.670051, 30.268095], [-97.669912, 30.268557], [-97.669749, 30.269139], [-97.669618, 30.269667], [-97.669407, 30.270439], [-97.669136, 30.271467], [-97.668913, 30.272312], [-97.668736, 30.272996], [-97.66855, 30.273614], [-97.668316, 30.274486], [-97.668033, 30.275578], [-97.667822, 30.276341], [-97.667493, 30.277561], [-97.667267, 30.278505], [-97.667044, 30.279353], [-97.666586, 30.281035], [-97.666361, 30.281908], [-97.665983, 30.283407], [-97.665396, 30.285639], [-97.664791, 30.285547], [-97.664049, 30.285421], [-97.661974, 30.28507], [-97.659823, 30.284725], [-97.657317, 30.284233], [-97.655598, 30.283691], [-97.654658, 30.283322], [-97.65318, 30.282769], [-97.648743, 30.2811], [-97.647999, 30.280828], [-97.645568, 30.279944], [-97.643796, 30.279258], [-97.643116, 30.279004], [-97.641219, 30.278282], [-97.63931, 30.277868], [-97.637795, 30.277165], [-97.637583, 30.277015], [-97.637274, 30.276794], [-97.635902, 30.275285], [-97.633566, 30.272139], [-97.632069, 30.271423], [-97.629825, 30.270641], [-97.628312, 30.269886], [-97.626656, 30.268723], [-97.626027, 30.267497], [-97.625368, 30.266762], [-97.623382, 30.264594]]]]
    },
    "properties": {
      "neighbourhood": "78725",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-97.736001, 30.378569], [-97.733558, 30.377072], [-97.732979, 30.376717], [-97.732384, 30.376125], [-97.73152, 30.37572], [-97.73092, 30.375391], [-97.730446, 30.375178], [-97.729697, 30.374789], [-97.729343, 30.374606], [-97.72859, 30.374213], [-97.72778, 30.373793], [-97.726744, 30.373354], [-97.726314, 30.373152], [-97.725058, 30.372519], [-97.72456, 30.372267], [-97.723348, 30.371733], [-97.72195, 30.371119], [-97.721417, 30.370883], [-97.72077, 30.370539], [-97.720253, 30.370193], [-97.719866, 30.369809], [-97.719672, 30.369618], [-97.719132, 30.368861], [-97.71878, 30.368241], [-97.718634, 30.367864], [-97.718538, 30.367551], [-97.718388, 30.367053], [-97.718203, 30.366186], [-97.718062, 30.365525], [-97.71793, 30.364907], [-97.717775, 30.364392], [-97.717479, 30.363203], [-97.717308, 30.362515], [-97.716831, 30.361078], [-97.71672, 30.36074], [-97.716548, 30.360013], [-97.716226, 30.358876], [-97.715999, 30.358071], [-97.715791, 30.357184], [-97.715346, 30.355591], [-97.714888, 30.354179], [-97.714698, 30.353592], [-97.714245, 30.352196], [-97.714115, 30.351797], [-97.713627, 30.35014], [-97.713322, 30.349278], [-97.713046, 30.348494], [-97.712776, 30.348052], [-97.712459, 30.347666], [-97.712816, 30.347117], [-97.713037, 30.346778], [-97.713452, 30.346137], [-97.713616, 30.345888], [-97.714171, 30.345123], [-97.714564, 30.344584], [-97.714964, 30.343973], [-97.715958, 30.342349], [-97.717823, 30.339411], [-97.718851, 30.337721], [-97.719109, 30.337361], [-97.719555, 30.336702], [-97.720165, 30.335683], [-97.721241, 30.333999], [-97.722757, 30.331643], [-97.72354, 30.330377], [-97.723709, 30.330117], [-97.725192, 30.327804], [-97.727382, 30.328863], [-97.727922, 30.329055], [-97.728218, 30.329265], [-97.729482, 30.329882], [-97.731593, 30.330871], [-97.732406, 30.331264], [-97.734567, 30.332306], [-97.734781, 30.332371], [-97.735625, 30.33282], [-97.736757, 30.333382], [-97.738495, 30.334209], [-97.738917, 30.334419], [-97.739822, 30.334852], [-97.740449, 30.335], [-97.740926, 30.335045], [-97.741908, 30.335104], [-97.742951, 30.335215], [-97.743913, 30.335422], [-97.744902, 30.335667], [-97.74558, 30.33581], [-97.745996, 30.335789], [-97.747069, 30.335376], [-97.74755, 30.335209], [-97.749182, 30.334645], [-97.749744, 30.334497], [-97.750365, 30.334471], [-97.751533, 30.334563], [-97.752591, 30.334956], [-97.753726, 30.335529], [-97.754302, 30.335816], [-97.754797, 30.336084], [-97.75504, 30.336248], [-97.754969, 30.336415], [-97.754777, 30.336837], [-97.754622, 30.337172], [-97.754543, 30.337344], [-97.754487, 30.33748], [-97.754435, 30.33762], [-97.754375, 30.337775], [-97.754311, 30.337934], [-97.754197, 30.338193], [-97.753912, 30.338803], [-97.753528, 30.339609], [-97.753074, 30.340579], [-97.752774, 30.341214], [-97.752333, 30.342162], [-97.752019, 30.342827], [-97.751584, 30.343745], [-97.751165, 30.344644], [-97.750825, 30.345369], [-97.750362, 30.346355], [-97.750026, 30.347064], [-97.749639, 30.347895], [-97.749299, 30.348636], [-97.748945, 30.34938], [-97.748751, 30.349791], [-97.748512, 30.350301], [-97.748267, 30.350826], [-97.748179, 30.351009], [-97.747998, 30.351399], [-97.747933, 30.351538], [-97.747844, 30.351728], [-97.747677, 30.352082], [-97.747526, 30.352407], [-97.747332, 30.352815], [-97.747198, 30.353104], [-97.747015, 30.353491], [-97.746866, 30.353807], [-97.746642, 30.354284], [-97.746506, 30.354575], [-97.746303, 30.355011], [-97.746142, 30.355357], [-97.745969, 30.35572], [-97.745827, 30.356022], [-97.74567, 30.356357], [-97.745551, 30.356611], [-97.74542, 30.356886], [-97.745208, 30.357338], [-97.745061, 30.357651], [-97.744853, 30.358093], [-97.744682, 30.358461], [-97.74452, 30.358804], [-97.744383, 30.359101], [-97.74423, 30.359439], [-97.744151, 30.359619], [-97.744076, 30.359799], [-97.744007, 30.359951], [-97.743933, 30.360104], [-97.743819, 30.360333], [-97.74371, 30.36057], [-97.743534, 30.36099], [-97.74343, 30.361238], [-97.744187, 30.361259], [-97.744668, 30.361255], [-97.744647, 30.361299], [-97.744462, 30.361688], [-97.744184, 30.362274], [-97.74389, 30.362892], [-97.743644, 30.363621], [-97.743304, 30.36444], [-97.743244, 30.364757], [-97.742972, 30.366207], [-97.742731, 30.367231], [-97.741962, 30.367959], [-97.740887, 30.36746], [-97.738165, 30.373893], [-97.736611, 30.377565], [-97.736204, 30.378539], [-97.736152, 30.378669], [-97.736001, 30.378569]]]]
    },
    "properties": {
      "neighbourhood": "78757",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-97.671057, 30.471321], [-97.670572, 30.469739], [-97.670545, 30.469652], [-97.670116, 30.468248], [-97.669137, 30.465103], [-97.668675, 30.463782], [-97.667791, 30.460911], [-97.667541, 30.460161], [-97.666531, 30.456705], [-97.666454, 30.456246], [-97.666375, 30.45584], [-97.66631, 30.45533], [-97.666241, 30.45251], [-97.66624, 30.452463], [-97.66639, 30.451336], [-97.666739, 30.44953], [-97.666989, 30.448061], [-97.667532, 30.445355], [-97.6678, 30.443953], [-97.667939, 30.443249], [-97.668432, 30.440533], [-97.668488, 30.440309], [-97.668664, 30.439339], [-97.669433, 30.435306], [-97.670282, 30.430907], [-97.670493, 30.429712], [-97.67124, 30.425775], [-97.671495, 30.424442], [-97.671507, 30.424375], [-97.671862, 30.424528], [-97.672174, 30.424699], [-97.67226, 30.424745], [-97.673126, 30.425179], [-97.674106, 30.425667], [-97.67538, 30.426301], [-97.676064, 30.42661], [-97.676041, 30.426636], [-97.676605, 30.4269], [-97.684287, 30.430688], [-97.684754, 30.430895], [-97.685129, 30.432313], [-97.685616, 30.433387], [-97.686118, 30.434494], [-97.68826, 30.43566], [-97.688795, 30.435951], [-97.688894, 30.435998], [-97.69239, 30.437685], [-97.69454, 30.438638], [-97.695471, 30.439125], [-97.695774, 30.439453], [-97.695956, 30.440073], [-97.696363, 30.439991], [-97.696457, 30.439983], [-97.696756, 30.43996], [-97.697291, 30.440037], [-97.698405, 30.440346], [-97.700814, 30.441113], [-97.702876, 30.44177], [-97.704113, 30.442301], [-97.705628, 30.442952], [-97.709951, 30.444808], [-97.714048, 30.446568], [-97.714079, 30.446581], [-97.714441, 30.446831], [-97.715011, 30.447226], [-97.71544, 30.447523], [-97.715964, 30.447886], [-97.716396, 30.448185], [-97.717228, 30.448761], [-97.717452, 30.448916], [-97.717634, 30.449042], [-97.71794, 30.449254], [-97.719657, 30.449221], [-97.720448, 30.449206], [-97.721274, 30.44919], [-97.725038, 30.449118], [-97.725606, 30.449107], [-97.725613, 30.449107], [-97.725892, 30.449772], [-97.725981, 30.450445], [-97.725943, 30.450868], [-97.725617, 30.451551], [-97.725271, 30.452009], [-97.721294, 30.454791], [-97.721072, 30.454946], [-97.720638, 30.455496], [-97.720435, 30.455978], [-97.719987, 30.456962], [-97.719726, 30.457449], [-97.719423, 30.457737], [-97.718823, 30.458033], [-97.718107, 30.458327], [-97.717723, 30.45852], [-97.717396, 30.458862], [-97.715162, 30.462227], [-97.713175, 30.465325], [-97.711855, 30.467319], [-97.707655, 30.473419], [-97.707813, 30.473494], [-97.708038, 30.473642], [-97.708132, 30.473875], [-97.708023, 30.474131], [-97.70788, 30.474213], [-97.707667, 30.474415], [-97.707526, 30.474607], [-97.707397, 30.474825], [-97.707119, 30.475306], [-97.706875, 30.475766], [-97.706738, 30.475956], [-97.706621, 30.476137], [-97.706532, 30.476295], [-97.70643, 30.476455], [-97.706357, 30.476586], [-97.706283, 30.476714], [-97.706164, 30.476893], [-97.70603, 30.477085], [-97.705951, 30.477207], [-97.705789, 30.477432], [-97.705695, 30.477571], [-97.705614, 30.47774], [-97.705551, 30.477928], [-97.705492, 30.47826], [-97.70541, 30.478492], [-97.705279, 30.478671], [-97.705095, 30.478815], [-97.704883, 30.478902], [-97.704542, 30.478801], [-97.704397, 30.478617], [-97.704248, 30.478493], [-97.704174, 30.478367], [-97.704082, 30.47811], [-97.704037, 30.47796], [-97.703969, 30.477742], [-97.703891, 30.47747], [-97.703826, 30.477257], [-97.703765, 30.477077], [-97.703681, 30.476853], [-97.703575, 30.476677], [-97.703464, 30.476543], [-97.703266, 30.476325], [-97.702952, 30.476137], [-97.702643, 30.476015], [-97.702344, 30.475926], [-97.702116, 30.475888], [-97.701901, 30.475865], [-97.70168, 30.475846], [-97.701505, 30.475826], [-97.701346, 30.475818], [-97.701175, 30.47582], [-97.700998, 30.475838], [-97.700746, 30.475877], [-97.700456, 30.475953], [-97.700177, 30.476044], [-97.699958, 30.476141], [-97.6998, 30.476165], [-97.699606, 30.476032], [-97.69943, 30.47582], [-97.699274, 30.475588], [-97.699207, 30.47543], [-97.699084, 30.475161], [-97.699005, 30.474964], [-97.69892, 30.47475], [-97.698842, 30.474567], [-97.698785, 30.474434], [-97.698714, 30.47427], [-97.698635, 30.474065], [-97.698452, 30.473968], [-97.698315, 30.473778], [-97.698193, 30.473676], [-97.698042, 30.473585], [-97.697777, 30.473506], [-97.697445, 30.473488], [-97.697209, 30.473321], [-97.697065, 30.473252], [-97.696909, 30.47316], [-97.696727, 30.473047], [-97.696572, 30.472953], [-97.696319, 30.472945], [-97.695995, 30.473018], [-97.695869, 30.472804], [-97.695742, 30.472567], [-97.69557, 30.472352], [-97.695452, 30.472253], [-97.695342, 30.472152], [-97.695092, 30.472205], [-97.694925, 30.472072], [-97.694715, 30.472073], [-97.694523, 30.472163], [-97.694312, 30.472172], [-97.694145, 30.472174], [-97.693898, 30.472191], [-97.693724, 30.472053], [-97.693608, 30.47196], [-97.69352, 30.47174], [-97.693344, 30.471828], [-97.693217, 30.471968], [-97.693054, 30.472083], [-97.692805, 30.471984], [-97.692552, 30.471839], [-97.692433, 30.471608], [-97.692304, 30.471438], [-97.692142, 30.471404], [-97.69209, 30.471238], [-97.691945, 30.4711], [-97.690602, 30.472327], [-97.690038, 30.472832], [-97.687632, 30.475096], [-97.686538, 30.476127], [-97.685426, 30.477163], [-97.683894, 30.478616], [-97.683586, 30.47886], [-97.683286, 30.479049], [-97.682837, 30.479246], [-97.682494, 30.479346], [-97.682197, 30.479406], [-97.681685, 30.479451], [-97.68038, 30.479537], [-97.678957, 30.479614], [-97.676103, 30.479795], [-97.674639, 30.479896], [-97.674403, 30.479922], [-97.674278, 30.479936], [-97.673829, 30.479987], [-97.673372, 30.47841], [-97.672973, 30.477315], [-97.672663, 30.476307], [-97.671057, 30.471321]]]]
    },
    "properties": {
      "neighbourhood": "78728",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-97.683353, 30.214323], [-97.683314, 30.211357], [-97.683284, 30.208893], [-97.683283, 30.206921], [-97.683316, 30.20532], [-97.683418, 30.204022], [-97.683546, 30.202517], [-97.683598, 30.201817], [-97.683798, 30.200468], [-97.684065, 30.198719], [-97.684577, 30.195564], [-97.685298, 30.191161], [-97.685697, 30.189728], [-97.6863, 30.187618], [-97.68734, 30.183926], [-97.688524, 30.179723], [-97.688994, 30.17811], [-97.689697, 30.175556], [-97.690131, 30.174022], [-97.690663, 30.172119], [-97.691194, 30.170251], [-97.691507, 30.169158], [-97.691798, 30.168113], [-97.692318, 30.166264], [-97.692849, 30.164361], [-97.693447, 30.162547], [-97.694255, 30.15988], [-97.696401, 30.152608], [-97.696686, 30.151437], [-97.69693, 30.14978], [-97.696982, 30.147653], [-97.696916, 30.144172], [-97.699872, 30.145528], [-97.70004, 30.145386], [-97.710118, 30.128996], [-97.716647, 30.132413], [-97.715478, 30.135539], [-97.7277, 30.141548], [-97.734309, 30.15337], [-97.735912, 30.155058], [-97.736173, 30.159865], [-97.736227, 30.160114], [-97.736298, 30.160355], [-97.736333, 30.160597], [-97.736302, 30.160965], [-97.736234, 30.161225], [-97.736189, 30.161356], [-97.736106, 30.161575], [-97.736021, 30.161859], [-97.735988, 30.162141], [-97.736047, 30.162418], [-97.736265, 30.162741], [-97.736411, 30.162868], [-97.736573, 30.16297], [-97.736831, 30.16311], [-97.73871, 30.16407], [-97.741634, 30.165551], [-97.742935, 30.163492], [-97.743355, 30.162778], [-97.745133, 30.159813], [-97.745335, 30.159517], [-97.746055, 30.158489], [-97.750173, 30.160539], [-97.750579, 30.160495], [-97.750915, 30.160254], [-97.75228, 30.157952], [-97.75273, 30.15792], [-97.754734, 30.15829], [-97.756821, 30.158676], [-97.759307, 30.159846], [-97.75972, 30.159843], [-97.759954, 30.159729], [-97.761748, 30.156941], [-97.762109, 30.156646], [-97.762548, 30.156709], [-97.764547, 30.157528], [-97.766633, 30.158279], [-97.767168, 30.158194], [-97.769245, 30.157518], [-97.769622, 30.159189], [-97.769665, 30.160639], [-97.769977, 30.160632], [-97.77024, 30.160483], [-97.770919, 30.159787], [-97.771258, 30.159599], [-97.771409, 30.159552], [-97.771567, 30.15952], [-97.773903, 30.158981], [-97.774353, 30.158915], [-97.774639, 30.158905], [-97.775495, 30.158842], [-97.775878, 30.158775], [-97.776032, 30.158737], [-97.776204, 30.158691], [-97.776406, 30.158626], [-97.776597, 30.158548], [-97.77761, 30.158065], [-97.777972, 30.157929], [-97.780438, 30.157601], [-97.782195, 30.157427], [-97.782933, 30.157274], [-97.78436, 30.156571], [-97.785102, 30.156275], [-97.786023, 30.155969], [-97.78644, 30.155941], [-97.789878, 30.157503], [-97.790216, 30.157642], [-97.790055, 30.158219], [-97.789731, 30.159318], [-97.789467, 30.160154], [-97.789216, 30.160851], [-97.788826, 30.161844], [-97.788471, 30.162679], [-97.788074, 30.163532], [-97.787649, 30.164376], [-97.787255, 30.165105], [-97.786843, 30.165826], [-97.786368, 30.166578], [-97.786078, 30.167029], [-97.785736, 30.167558], [-97.785295, 30.168215], [-97.784684, 30.169152], [-97.783758, 30.170563], [-97.782611, 30.172306], [-97.781485, 30.17403], [-97.779896, 30.176438], [-97.778969, 30.177842], [-97.777865, 30.179514], [-97.777475, 30.180111], [-97.776117, 30.182191], [-97.775074, 30.183784], [-97.774327, 30.184927], [-97.773464, 30.186211], [-97.772959, 30.186998], [-97.772295, 30.188019], [-97.771858, 30.188632], [-97.77021, 30.190821], [-97.768092, 30.193482], [-97.765209, 30.197052], [-97.76351, 30.199139], [-97.76181, 30.201222], [-97.760041, 30.203409], [-97.758439, 30.205379], [-97.757393, 30.206728], [-97.756469, 30.208029], [-97.755794, 30.209083], [-97.75513, 30.210227], [-97.754341, 30.211556], [-97.753635, 30.212736], [-97.752352, 30.214888], [-97.751969, 30.215557], [-97.751878, 30.215709], [-97.751687, 30.215689], [-97.751395, 30.215642], [-97.751067, 30.215602], [-97.750839, 30.2156], [-97.750513, 30.215621], [-97.750235, 30.215654], [-97.749878, 30.215726], [-97.749119, 30.215912], [-97.747895, 30.216204], [-97.747374, 30.21632], [-97.746897, 30.216401], [-97.746387, 30.216465], [-97.746048, 30.216488], [-97.74556, 30.216508], [-97.745064, 30.216509], [-97.744595, 30.216483], [-97.743343, 30.216378], [-97.743037, 30.216353], [-97.742476, 30.216311], [-97.741648, 30.216253], [-97.741, 30.216207], [-97.740548, 30.216179], [-97.739716, 30.216107], [-97.738998, 30.216035], [-97.738273, 30.215926], [-97.737306, 30.215791], [-97.736423, 30.215666], [-97.735645, 30.215551], [-97.734832, 30.21543], [-97.733626, 30.215241], [-97.732354, 30.215055], [-97.731269, 30.214904], [-97.730259, 30.214749], [-97.729791, 30.214687], [-97.728855, 30.214553], [-97.727619, 30.214371], [-97.726285, 30.214162], [-97.725406, 30.214034], [-97.723898, 30.213816], [-97.722259, 30.213585], [-97.72131, 30.21345], [-97.719855, 30.213225], [-97.718827, 30.213075], [-97.717782, 30.212921], [-97.716912, 30.212796], [-97.716077, 30.212672], [-97.715208, 30.212542], [-97.714687, 30.212462], [-97.713581, 30.212297], [-97.712952, 30.212209], [-97.712156, 30.212105], [-97.711884, 30.212091], [-97.711283, 30.212076], [-97.71095, 30.21208], [-97.71051, 30.212104], [-97.710022, 30.212152], [-97.709514, 30.21223], [-97.709007, 30.212329], [-97.708535, 30.212449], [-97.708043, 30.212607], [-97.70752, 30.212775], [-97.706976, 30.212937], [-97.706463, 30.2131], [-97.705741, 30.213335], [-97.704856, 30.213619], [-97.704094, 30.213865], [-97.703487, 30.214064], [-97.701844, 30.214594], [-97.700556, 30.215008], [-97.698824, 30.215569], [-97.697531, 30.215977], [-97.696132, 30.216438], [-97.695198, 30.216735], [-97.694241, 30.217043], [-97.693409, 30.217311], [-97.691801, 30.217823], [-97.690658, 30.218215], [-97.690162, 30.218391], [-97.689713, 30.218602], [-97.688982, 30.219008], [-97.688456, 30.219305], [-97.687761, 30.219681], [-97.686843, 30.220196], [-97.686254, 30.220519], [-97.685572, 30.220896], [-97.684905, 30.221253], [-97.684219, 30.221586], [-97.683624, 30.221835], [-97.683188, 30.222029], [-97.683261, 30.219269], [-97.683346, 30.21695], [-97.683364, 30.215536], [-97.683353, 30.214323]]]]
    },
    "properties": {
      "neighbourhood": "78744",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-97.922125, 30.293004], [-97.919183, 30.291169], [-97.918543, 30.290417], [-97.918076, 30.28961], [-97.917564, 30.288729], [-97.916764, 30.286505], [-97.916869, 30.284582], [-97.917028, 30.281662], [-97.91683, 30.280024], [-97.914807, 30.276348], [-97.914354, 30.275465], [-97.91293, 30.272756], [-97.910145, 30.268732], [-97.909477, 30.267358], [-97.909208, 30.266756], [-97.908694, 30.264808], [-97.907885, 30.261341], [-97.907384, 30.260129], [-97.90456, 30.257141], [-97.899968, 30.252764], [-97.898112, 30.251667], [-97.8944, 30.249894], [-97.893799, 30.249599], [-97.889861, 30.247649], [-97.888524, 30.246993], [-97.886968, 30.246207], [-97.886028, 30.24554], [-97.884863, 30.244602], [-97.88233, 30.2421], [-97.881557, 30.241294], [-97.880102, 30.239481], [-97.878982, 30.237828], [-97.878481, 30.237104], [-97.877393, 30.235743], [-97.876734, 30.235173], [-97.875921, 30.234698], [-97.875345, 30.234131], [-97.875141, 30.233866], [-97.874957, 30.233304], [-97.87541, 30.233093], [-97.875943, 30.232842], [-97.876493, 30.232536], [-97.876864, 30.232307], [-97.877374, 30.231992], [-97.879434, 30.230785], [-97.88035, 30.230245], [-97.880967, 30.22994], [-97.881486, 30.229714], [-97.882229, 30.229458], [-97.883062, 30.229243], [-97.883642, 30.229131], [-97.88417, 30.229055], [-97.885253, 30.229016], [-97.885693, 30.229015], [-97.885806, 30.229015], [-97.886362, 30.22907], [-97.887136, 30.229142], [-97.888306, 30.229192], [-97.888446, 30.229198], [-97.891743, 30.229557], [-97.89372, 30.229856], [-97.894939, 30.230166], [-97.895698, 30.230323], [-97.899069, 30.231333], [-97.900073, 30.231655], [-97.900563, 30.231802], [-97.900972, 30.231939], [-97.90133, 30.232047], [-97.90199, 30.232241], [-97.908665, 30.234227], [-97.90952, 30.234367], [-97.910165, 30.234493], [-97.910175, 30.234495], [-97.911217, 30.234501], [-97.912316, 30.234417], [-97.919591, 30.2331], [-97.926122, 30.231974], [-97.92755, 30.231717], [-97.931937, 30.23098], [-97.934972, 30.230451], [-97.938264, 30.229605], [-97.94213, 30.228016], [-97.944945, 30.226881], [-97.947486, 30.225759], [-97.953117, 30.223474], [-97.95345, 30.22331], [-97.955113, 30.222573], [-97.955961, 30.222052], [-97.956055, 30.221994], [-97.957045, 30.2233], [-97.959253, 30.2246], [-97.961001, 30.225309], [-97.963306, 30.226441], [-97.963589, 30.226661], [-97.964947, 30.227225], [-97.966178, 30.227671], [-97.966651, 30.227798], [-97.967331, 30.227995], [-97.968343, 30.228253], [-97.970277, 30.228429], [-97.971929, 30.22948], [-97.974113, 30.230326], [-97.975535, 30.231138], [-97.979136, 30.233135], [-97.98093, 30.233559], [-97.98222, 30.233919], [-97.982268, 30.233933], [-97.982679, 30.233926], [-97.983322, 30.233702], [-97.985173, 30.23326], [-97.985297, 30.233171], [-97.985731, 30.232805], [-97.987807, 30.233058], [-97.988992, 30.232472], [-97.989303, 30.232516], [-97.990646, 30.2327], [-97.991546, 30.232958], [-97.992781, 30.233465], [-97.993489, 30.233654], [-97.994187, 30.233639], [-97.995023, 30.233489], [-97.995482, 30.233465], [-97.996376, 30.233465], [-97.997686, 30.23342], [-97.998242, 30.233215], [-97.998826, 30.233064], [-97.999358, 30.232807], [-98.000065, 30.232415], [-98.00073, 30.232298], [-98.001532, 30.232362], [-98.002329, 30.232608], [-98.003258, 30.233051], [-98.005277, 30.234262], [-98.006332, 30.235211], [-98.006937, 30.235714], [-98.007744, 30.236595], [-98.008604, 30.237936], [-98.008864, 30.238271], [-98.009345, 30.238945], [-98.009625, 30.239289], [-98.009914, 30.240155], [-98.010264, 30.24169], [-98.010415, 30.242644], [-98.01072, 30.242708], [-98.011423, 30.242311], [-98.012025, 30.242005], [-98.012759, 30.241763], [-98.012933, 30.241705], [-98.013949, 30.241353], [-98.014427, 30.240874], [-98.014991, 30.240673], [-98.015626, 30.240605], [-98.016169, 30.240614], [-98.018756, 30.241665], [-98.021459, 30.243317], [-98.023613, 30.244555], [-98.025428, 30.24516], [-98.02665, 30.245567], [-98.027462, 30.245958], [-98.027795, 30.246058], [-98.028363, 30.246039], [-98.028499, 30.247869], [-98.027766, 30.249601], [-98.020299, 30.262659], [-98.02086, 30.266666], [-98.021468, 30.267002], [-98.021201, 30.267388], [-98.020871, 30.267748], [-98.020644, 30.268016], [-98.020492, 30.268178], [-98.020339, 30.268329], [-98.02011, 30.268529], [-98.019976, 30.268622], [-98.01985, 30.268705], [-98.019663, 30.268826], [-98.019457, 30.268877], [-98.019206, 30.268823], [-98.018937, 30.268716], [-98.018686, 30.268572], [-98.018529, 30.268451], [-98.018356, 30.268299], [-98.018248, 30.268198], [-98.018103, 30.268041], [-98.017995, 30.267885], [-98.017876, 30.267663], [-98.017788, 30.267469], [-98.017634, 30.267084], [-98.017505, 30.266771], [-98.01738, 30.266513], [-98.017252, 30.266269], [-98.017172, 30.266124], [-98.01708, 30.265977], [-98.016907, 30.265707], [-98.016728, 30.265412], [-98.016625, 30.265267], [-98.016333, 30.265122], [-98.016058, 30.265117], [-98.015823, 30.265118], [-98.015584, 30.265127], [-98.015359, 30.265164], [-98.015099, 30.265231], [-98.014851, 30.265337], [-98.014612, 30.265489], [-98.014422, 30.265709], [-98.014187, 30.265806], [-98.014036, 30.265853], [-98.013746, 30.265933], [-98.013394, 30.266017], [-98.013216, 30.266072], [-98.012966, 30.266166], [-98.012658, 30.266298], [-98.012373, 30.266403], [-98.012103, 30.266511], [-98.011693, 30.266688], [-98.011514, 30.266775], [-98.011356, 30.266844], [-98.011112, 30.266914], [-98.010826, 30.266966], [-98.010639, 30.267007], [-98.010285, 30.267091], [-98.009979, 30.267132], [-98.0098, 30.267143], [-98.009567, 30.267147], [-98.009347, 30.267143], [-98.009082, 30.267108], [-98.008803, 30.267029], [-98.008581, 30.26697], [-98.008178, 30.266814], [-98.007867, 30.26669], [-98.007524, 30.266557], [-98.007343, 30.266491], [-98.00716, 30.266432], [-98.006964, 30.266385], [-98.006749, 30.266356], [-98.006365, 30.266322], [-98.006118, 30.266295], [-98.005961, 30.266281], [-98.005707, 30.26629], [-98.00549, 30.266308], [-98.005258, 30.266395], [-98.005029, 30.266531], [-98.004931, 30.266738], [-98.0049, 30.266966], [-98.004907, 30.267153], [-98.004942, 30.267344], [-98.004975, 30.26749], [-98.005084, 30.267825], [-98.005194, 30.268126], [-98.005242, 30.268369], [-98.00525, 30.2686], [-98.00511, 30.268735], [-98.004872, 30.268805], [-98.00461, 30.268831], [-98.004171, 30.268801], [-98.003718, 30.268762], [-98.003533, 30.268723], [-98.003317, 30.268651], [-98.003169, 30.268513], [-98.003052, 30.268365], [-98.002843, 30.268122], [-98.002656, 30.26794], [-98.002495, 30.267811], [-98.002267, 30.267619], [-98.002088, 30.267448], [-98.001972, 30.267309], [-98.00177, 30.267063], [-98.0014, 30.266614], [-98.00124, 30.266459], [-98.001089, 30.266407], [-98.000945, 30.266341], [-98.000735, 30.266222], [-98.000413, 30.266073], [-98.000226, 30.265918], [-98.000117, 30.265806], [-97.999961, 30.265628], [-97.999881, 30.265494], [-97.999827, 30.265364], [-97.999676, 30.265213], [-97.999488, 30.265113], [-97.999323, 30.265033], [-97.999061, 30.26494], [-97.998766, 30.264896], [-97.998577, 30.264879], [-97.998239, 30.264851], [-97.99799, 30.264835], [-97.997781, 30.264821], [-97.997549, 30.264833], [-97.997389, 30.264874], [-97.997191, 30.264945], [-97.99697, 30.265045], [-97.996793, 30.265067], [-97.996428, 30.265085], [-97.996196, 30.265113], [-97.996217, 30.265265], [-97.996295, 30.265509], [-97.996298, 30.265687], [-97.996341, 30.265944], [-97.996177, 30.266133], [-97.995968, 30.266297], [-97.995653, 30.266531], [-97.995541, 30.266628], [-97.995395, 30.266771], [-97.994975, 30.267159], [-97.99483, 30.267297], [-97.994697, 30.267421], [-97.994502, 30.267657], [-97.994248, 30.267814], [-97.993992, 30.26784], [-97.993769, 30.267762], [-97.99361, 30.267745], [-97.993394, 30.267713], [-97.993192, 30.267658], [-97.992971, 30.267557], [-97.99277, 30.267394], [-97.992478, 30.267273], [-97.992225, 30.267219], [-97.991945, 30.267222], [-97.991713, 30.267212], [-97.991486, 30.267195], [-97.991266, 30.267141], [-97.9911, 30.267119], [-97.990793, 30.267121], [-97.990616, 30.267129], [-97.990425, 30.267148], [-97.990072, 30.267204], [-97.989807, 30.267213], [-97.989333, 30.267262], [-97.989099, 30.267283], [-97.988924, 30.267304], [-97.988691, 30.267336], [-97.988448, 30.267406], [-97.988243, 30.26754], [-97.988136, 30.267642], [-97.988012, 30.267764], [-97.987812, 30.267972], [-97.987723, 30.268091], [-97.987611, 30.268262], [-97.987504, 30.268436], [-97.987279, 30.268784], [-97.987183, 30.268986], [-97.987127, 30.269114], [-97.987043, 30.269341], [-97.987009, 30.269505], [-97.98695, 30.269832], [-97.986935, 30.269977], [-97.986932, 30.270191], [-97.986976, 30.270404], [-97.98706, 30.2707], [-97.986958, 30.270926], [-97.986853, 30.271092], [-97.986802, 30.271303], [-97.986651, 30.271493], [-97.986573, 30.271645], [-97.986495, 30.271795], [-97.986412, 30.271972], [-97.986272, 30.272245], [-97.986121, 30.272429], [-97.985987, 30.272586], [-97.985852, 30.272721], [-97.985596, 30.273002], [-97.985433, 30.273159], [-97.985227, 30.273309], [-97.984981, 30.273431], [-97.984745, 30.27341], [-97.984514, 30.273354], [-97.98435, 30.273279], [-97.984056, 30.273142], [-97.983832, 30.273006], [-97.98365, 30.272876], [-97.983493, 30.272744], [-97.983288, 30.272589], [-97.98309, 30.272418], [-97.982978, 30.272311], [-97.982807, 30.272107], [-97.982703, 30.271951], [-97.982556, 30.271709], [-97.982453, 30.271454], [-97.982419, 30.271253], [-97.982404, 30.271019], [-97.982383, 30.270614], [-97.98237, 30.270463], [-97.982366, 30.270311], [-97.98237, 30.270174], [-97.9824, 30.269943], [-97.982446, 30.269749], [-97.982514, 30.269445], [-97.982552, 30.269267], [-97.982596, 30.269028], [-97.98263, 30.268754], [-97.982659, 30.268524], [-97.98273, 30.268319], [-97.982951, 30.268232], [-97.983015, 30.268046], [-97.983036, 30.267837], [-97.983091, 30.26744], [-97.983, 30.267243], [-97.982882, 30.267037], [-97.98281, 30.266912], [-97.982569, 30.266594], [-97.982454, 30.266424], [-97.982194, 30.266109], [-97.982055, 30.265969], [-97.981849, 30.265775], [-97.981641, 30.265636], [-97.981454, 30.265506], [-97.981323, 30.265422], [-97.980916, 30.265205], [-97.980684, 30.265113], [-97.980436, 30.265029], [-97.980242, 30.264959], [-97.979977, 30.264927], [-97.97975, 30.264966], [-97.979583, 30.265076], [-97.979448, 30.265239], [-97.979358, 30.265407], [-97.979142, 30.265629], [-97.978887, 30.265853], [-97.978662, 30.265989], [-97.978449, 30.266076], [-97.978259, 30.266188], [-97.978098, 30.266355], [-97.978025, 30.266486], [-97.977809, 30.266806], [-97.977632, 30.266894], [-97.977538, 30.267063], [-97.977468, 30.267218], [-97.977397, 30.267387], [-97.977333, 30.267565], [-97.977291, 30.267743], [-97.977275, 30.267946], [-97.97729, 30.268268], [-97.977352, 30.268657], [-97.977383, 30.268803], [-97.977438, 30.269016], [-97.977471, 30.269171], [-97.977507, 30.269339], [-97.97754, 30.269508], [-97.977578, 30.269715], [-97.977615, 30.269938], [-97.977665, 30.270156], [-97.977684, 30.270324], [-97.977685, 30.270528], [-97.977635, 30.270744], [-97.977563, 30.270916], [-97.97748, 30.271135], [-97.977395, 30.271309], [-97.9773, 30.27156], [-97.977201, 30.271784], [-97.977087, 30.271972], [-97.976931, 30.27212], [-97.976722, 30.272259], [-97.976456, 30.272362], [-97.976202, 30.272437], [-97.975967, 30.27246], [-97.975642, 30.272437], [-97.975354, 30.272391], [-97.975189, 30.272347], [-97.974902, 30.272215], [-97.974716, 30.272057], [-97.974486, 30.271778], [-97.974387, 30.271647], [-97.974233, 30.271435], [-97.974075, 30.271193], [-97.973996, 30.270977], [-97.973971, 30.270834], [-97.973965, 30.270696], [-97.973924, 30.270459], [-97.97386, 30.270251], [-97.973753, 30.270046], [-97.973576, 30.269792], [-97.973443, 30.269619], [-97.973257, 30.269456], [-97.973019, 30.269342], [-97.972858, 30.269166], [-97.972694, 30.268877], [-97.97264, 30.268741], [-97.972602, 30.268605], [-97.972449, 30.26822], [-97.972375, 30.268026], [-97.972316, 30.267893], [-97.972225, 30.26771], [-97.972049, 30.267396], [-97.971915, 30.267204], [-97.971794, 30.267039], [-97.971667, 30.266867], [-97.971527, 30.266688], [-97.971401, 30.266551], [-97.971286, 30.266378], [-97.971133, 30.266166], [-97.970951, 30.265946], [-97.970824, 30.265748], [-97.970669, 30.26555], [-97.970374, 30.265305], [-97.970152, 30.265139], [-97.96997, 30.265023], [-97.969702, 30.26488], [-97.969523, 30.264806], [-97.969317, 30.26473], [-97.969107, 30.264784], [-97.968776, 30.264962], [-97.968513, 30.265024], [-97.968269, 30.265096], [-97.968009, 30.265168], [-97.967796, 30.265167], [-97.967536, 30.265165], [-97.967362, 30.2652], [-97.967139, 30.265226], [-97.966885, 30.26529], [-97.966693, 30.265419], [-97.966535, 30.265653], [-97.966369, 30.265916], [-97.966282, 30.266099], [-97.966205, 30.266296], [-97.966162, 30.266471], [-97.966085, 30.266645], [-97.966015, 30.266848], [-97.966024, 30.267073], [-97.966064, 30.267294], [-97.966099, 30.267537], [-97.966134, 30.267799], [-97.966215, 30.267921], [-97.966315, 30.268102], [-97.966394, 30.268298], [-97.966368, 30.26851], [-97.966284, 30.268712], [-97.966149, 30.268968], [-97.96609, 30.269096], [-97.966033, 30.269271], [-97.965962, 30.269473], [-97.965936, 30.26966], [-97.965888, 30.26984], [-97.965836, 30.270001], [-97.965738, 30.270308], [-97.96572, 30.270497], [-97.965646, 30.270625], [-97.965534, 30.270791], [-97.965333, 30.27098], [-97.96517, 30.271087], [-97.964979, 30.271187], [-97.964655, 30.27125], [-97.96436, 30.271215], [-97.964131, 30.271172], [-97.963933, 30.271132], [-97.963648, 30.271072], [-97.963451, 30.271044], [-97.963132, 30.270983], [-97.962893, 30.270923], [-97.96268, 30.270851], [-97.962492, 30.270765], [-97.962286, 30.270659], [-97.961985, 30.270524], [-97.961722, 30.270409], [-97.961554, 30.270307], [-97.961407, 30.270228], [-97.961189, 30.270158], [-97.960974, 30.270066], [-97.960599, 30.269921], [-97.960312, 30.269809], [-97.960115, 30.269621], [-97.959926, 30.269515], [-97.959745, 30.269476], [-97.959374, 30.269398], [-97.959207, 30.269367], [-97.958913, 30.26931], [-97.958479, 30.269219], [-97.958272, 30.269204], [-97.958035, 30.269219], [-97.957759, 30.269186], [-97.957522, 30.269174], [-97.957271, 30.269183], [-97.957112, 30.269224], [-97.956944, 30.269287], [-97.956517, 30.269411], [-97.956369, 30.269628], [-97.956336, 30.269762], [-97.956348, 30.269985], [-97.956474, 30.270208], [-97.956633, 30.270381], [-97.956643, 30.270566], [-97.956651, 30.27072], [-97.956644, 30.27092], [-97.95677, 30.271203], [-97.956935, 30.271509], [-97.957034, 30.271632], [-97.957171, 30.27178], [-97.957341, 30.271899], [-97.957692, 30.272128], [-97.957939, 30.272278], [-97.958132, 30.27237], [-97.958324, 30.272456], [-97.958648, 30.272591], [-97.959002, 30.272727], [-97.959176, 30.272799], [-97.959372, 30.272874], [-97.959586, 30.272889], [-97.959895, 30.272914], [-97.960102, 30.273033], [-97.960253, 30.273171], [-97.960379, 30.273371], [-97.960449, 30.273518], [-97.960546, 30.273743], [-97.960603, 30.273937], [-97.960622, 30.27416], [-97.960642, 30.274377], [-97.960649, 30.274611], [-97.960642, 30.274815], [-97.960627, 30.275037], [-97.96051, 30.275255], [-97.960352, 30.275513], [-97.960212, 30.275577], [-97.960006, 30.275675], [-97.959892, 30.275835], [-97.959806, 30.275995], [-97.959595, 30.276082], [-97.959333, 30.276182], [-97.959142, 30.276244], [-97.958981, 30.276272], [-97.958776, 30.276331], [-97.958551, 30.276426], [-97.958271, 30.276597], [-97.958051, 30.276755], [-97.957916, 30.276854], [-97.957688, 30.276941], [-97.957365, 30.276899], [-97.957146, 30.276898], [-97.95694, 30.276839], [-97.956793, 30.276789], [-97.956605, 30.276745], [-97.95638, 30.276694], [-97.956224, 30.27665], [-97.955988, 30.276593], [-97.955732, 30.276539], [-97.955574, 30.276511], [-97.955393, 30.276486], [-97.955134, 30.276404], [-97.954889, 30.276292], [-97.954642, 30.276122], [-97.954392, 30.276052], [-97.954092, 30.276065], [-97.953804, 30.276055], [-97.953489, 30.276049], [-97.953219, 30.276041], [-97.953008, 30.276032], [-97.95275, 30.276008], [-97.952529, 30.275962], [-97.952295, 30.275815], [-97.952128, 30.275619], [-97.95192, 30.275569], [-97.951708, 30.275628], [-97.951381, 30.275759], [-97.951164, 30.275849], [-97.951011, 30.275904], [-97.950865, 30.275967], [-97.950581, 30.276107], [-97.950438, 30.276165], [-97.95029, 30.276218], [-97.950143, 30.276273], [-97.94999, 30.276322], [-97.949832, 30.27636], [-97.9495, 30.27645], [-97.949261, 30.276506], [-97.948881, 30.27662], [-97.948593, 30.276709], [-97.948297, 30.276775], [-97.947939, 30.276839], [-97.947654, 30.276831], [-97.94735, 30.276812], [-97.947178, 30.276798], [-97.946897, 30.276765], [-97.946741, 30.276735], [-97.946503, 30.276681], [-97.946335, 30.276625], [-97.946187, 30.27657], [-97.945951, 30.276478], [-97.945703, 30.27636], [-97.945523, 30.27628], [-97.945296, 30.276158], [-97.945078, 30.276008], [-97.944943, 30.275926], [-97.944724, 30.275842], [-97.944598, 30.275727], [-97.94444, 30.275616], [-97.944207, 30.275414], [-97.943964, 30.2752], [-97.943733, 30.275213], [-97.943504, 30.275351], [-97.94324, 30.275547], [-97.942931, 30.275764], [-97.942774, 30.275847], [-97.942496, 30.275979], [-97.942272, 30.276123], [-97.942144, 30.276322], [-97.942049, 30.27657], [-97.942055, 30.276815], [-97.942106, 30.277041], [-97.942131, 30.277229], [-97.94221, 30.277404], [-97.942279, 30.277598], [-97.942364, 30.277924], [-97.94241, 30.278103], [-97.942492, 30.278289], [-97.942656, 30.27846], [-97.942836, 30.27865], [-97.943001, 30.278854], [-97.943082, 30.279067], [-97.943185, 30.279262], [-97.943307, 30.279446], [-97.94335, 30.279617], [-97.94333, 30.279793], [-97.943152, 30.279982], [-97.942966, 30.280146], [-97.942755, 30.280324], [-97.942668, 30.280515], [-97.942539, 30.280699], [-97.942368, 30.280831], [-97.942125, 30.280936], [-97.941921, 30.280974], [-97.941743, 30.280992], [-97.941415, 30.281014], [-97.941168, 30.281026], [-97.940915, 30.281046], [-97.940519, 30.281071], [-97.940219, 30.281052], [-97.940032, 30.281035], [-97.939704, 30.28096], [-97.939519, 30.280811], [-97.939322, 30.280656], [-97.939117, 30.280531], [-97.93896, 30.280432], [-97.938747, 30.280285], [-97.938501, 30.280101], [-97.938316, 30.279971], [-97.938083, 30.279788], [-97.937833, 30.279569], [-97.937596, 30.279377], [-97.937417, 30.279226], [-97.93724, 30.279082], [-97.937057, 30.278938], [-97.93688, 30.278817], [-97.936693, 30.278698], [-97.936551, 30.278624], [-97.936319, 30.27849], [-97.936077, 30.27834], [-97.935897, 30.278243], [-97.935653, 30.278128], [-97.935373, 30.278021], [-97.935079, 30.2779], [-97.934838, 30.277813], [-97.934573, 30.277731], [-97.93417, 30.277594], [-97.933809, 30.277431], [-97.933661, 30.277384], [-97.933384, 30.27734], [-97.933218, 30.277335], [-97.932834, 30.277355], [-97.932653, 30.2775], [-97.932546, 30.277696], [-97.932513, 30.277902], [-97.932491, 30.27808], [-97.932442, 30.278327], [-97.932379, 30.278644], [-97.932389, 30.278867], [-97.932406, 30.279016], [-97.932417, 30.279182], [-97.93246, 30.279394], [-97.932578, 30.279715], [-97.932634, 30.279917], [-97.932766, 30.280068], [-97.932962, 30.28016], [-97.933087, 30.280267], [-97.933193, 30.280384], [-97.933331, 30.280546], [-97.933414, 30.280663], [-97.933539, 30.280855], [-97.933693, 30.281133], [-97.933848, 30.281351], [-97.934004, 30.281541], [-97.934154, 30.28175], [-97.934262, 30.281881], [-97.934452, 30.282113], [-97.934574, 30.282299], [-97.934636, 30.282501], [-97.93464, 30.282738], [-97.934654, 30.282955], [-97.93464, 30.283159], [-97.934581, 30.283345], [-97.934488, 30.283478], [-97.934356, 30.283659], [-97.934143, 30.283743], [-97.933957, 30.28382], [-97.93374, 30.284058], [-97.933523, 30.284216], [-97.933363, 30.284345], [-97.933181, 30.284463], [-97.932958, 30.284541], [-97.932736, 30.284575], [-97.932469, 30.284628], [-97.932252, 30.284621], [-97.931967, 30.284577], [-97.931607, 30.284488], [-97.93135, 30.284414], [-97.931089, 30.284324], [-97.930856, 30.28424], [-97.930706, 30.284163], [-97.930477, 30.284046], [-97.930264, 30.283949], [-97.929887, 30.283787], [-97.929694, 30.283682], [-97.929478, 30.28351], [-97.92928, 30.28338], [-97.929063, 30.283258], [-97.928855, 30.283166], [-97.92865, 30.283068], [-97.928324, 30.28293], [-97.928062, 30.282821], [-97.927889, 30.282771], [-97.927681, 30.282696], [-97.927317, 30.282573], [-97.927016, 30.282485], [-97.926748, 30.282318], [-97.926498, 30.282134], [-97.926268, 30.282067], [-97.926017, 30.282111], [-97.925841, 30.282279], [-97.92564, 30.282421], [-97.925462, 30.282577], [-97.925341, 30.282715], [-97.92521, 30.282861], [-97.925102, 30.282974], [-97.924948, 30.283186], [-97.924855, 30.283423], [-97.924806, 30.283626], [-97.924783, 30.28392], [-97.924772, 30.28422], [-97.924766, 30.28442], [-97.924776, 30.284624], [-97.924817, 30.284883], [-97.924869, 30.285233], [-97.924893, 30.285369], [-97.924942, 30.285581], [-97.925056, 30.285795], [-97.92516, 30.285902], [-97.925307, 30.286028], [-97.925545, 30.28609], [-97.925703, 30.286151], [-97.925929, 30.286318], [-97.926029, 30.286512], [-97.926092, 30.286786], [-97.926127, 30.286951], [-97.926173, 30.287142], [-97.926118, 30.287328], [-97.925934, 30.287544], [-97.925764, 30.287701], [-97.92559, 30.287805], [-97.925479, 30.287968], [-97.925259, 30.288255], [-97.925057, 30.288416], [-97.9249, 30.288587], [-97.924738, 30.288644], [-97.924586, 30.288707], [-97.924368, 30.288753], [-97.924177, 30.288809], [-97.923844, 30.288905], [-97.923631, 30.28895], [-97.923381, 30.288973], [-97.923156, 30.288961], [-97.922891, 30.288915], [-97.922659, 30.288852], [-97.922458, 30.288777], [-97.922207, 30.288695], [-97.921987, 30.288606], [-97.921748, 30.288464], [-97.921533, 30.288331], [-97.921319, 30.288203], [-97.921136, 30.288092], [-97.920902, 30.28795], [-97.92069, 30.287801], [-97.920451, 30.287683], [-97.920061, 30.287566], [-97.919816, 30.287534], [-97.919543, 30.287537], [-97.919321, 30.287563], [-97.919101, 30.28763], [-97.918936, 30.287751], [-97.918819, 30.287961], [-97.918707, 30.288162], [-97.91865, 30.288378], [-97.918684, 30.28856], [-97.918692, 30.288761], [-97.918726, 30.288982], [-97.918821, 30.289176], [-97.918908, 30.289291], [-97.919105, 30.289506], [-97.919226, 30.289627], [-97.919335, 30.289725], [-97.919589, 30.289917], [-97.919852, 30.290084], [-97.920031, 30.290203], [-97.920208, 30.290302], [-97.920378, 30.290388], [-97.92064, 30.290525], [-97.920885, 30.290692], [-97.921022, 30.290766], [-97.921288, 30.290887], [-97.921535, 30.290968], [-97.921854, 30.291043], [-97.922165, 30.291104], [-97.922543, 30.291182], [-97.922838, 30.291216], [-97.923063, 30.291239], [-97.923472, 30.291304], [-97.9238, 30.291275], [-97.924051, 30.291255], [-97.924203, 30.291302], [-97.924458, 30.291364], [-97.924634, 30.291406], [-97.924958, 30.2915], [-97.925276, 30.291605], [-97.92554, 30.291715], [-97.925745, 30.291804], [-97.925912, 30.291887], [-97.926161, 30.291982], [-97.926407, 30.29208], [-97.926625, 30.292167], [-97.926629, 30.29237], [-97.926729, 30.29248], [-97.926933, 30.292624], [-97.927052, 30.292796], [-97.927085, 30.292981], [-97.927065, 30.293198], [-97.927034, 30.293448], [-97.927034, 30.293629], [-97.927031, 30.293836], [-97.92707, 30.294073], [-97.927119, 30.294283], [-97.927117, 30.294467], [-97.927112, 30.294613], [-97.927109, 30.294769], [-97.9271, 30.294984], [-97.927086, 30.295126], [-97.927145, 30.295331], [-97.927136, 30.295529], [-97.926983, 30.295672], [-97.926878, 30.295832], [-97.926646, 30.295943], [-97.926467, 30.296088], [-97.926195, 30.296268], [-97.925963, 30.296343], [-97.925404, 30.295714], [-97.92355, 30.293888], [-97.922125, 30.293004]]]]
    },
    "properties": {
      "neighbourhood": "78736",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-97.691861, 30.248477], [-97.69172, 30.248105], [-97.691586, 30.247159], [-97.691413, 30.246025], [-97.691331, 30.245575], [-97.691869, 30.24543], [-97.692286, 30.245238], [-97.692431, 30.245169], [-97.69251, 30.24494], [-97.692671, 30.244756], [-97.693155, 30.244672], [-97.693737, 30.244638], [-97.694269, 30.24464], [-97.694554, 30.244701], [-97.694742, 30.244777], [-97.694988, 30.244859], [-97.695462, 30.245017], [-97.695589, 30.245116], [-97.695648, 30.245274], [-97.695604, 30.245696], [-97.695577, 30.24602], [-97.695656, 30.246151], [-97.695898, 30.246382], [-97.696016, 30.246508], [-97.696247, 30.246714], [-97.696514, 30.246843], [-97.696644, 30.246763], [-97.696876, 30.246594], [-97.696984, 30.246467], [-97.69718, 30.246249], [-97.697511, 30.245843], [-97.697888, 30.245606], [-97.69807, 30.245618], [-97.698326, 30.245673], [-97.698582, 30.245766], [-97.698802, 30.245867], [-97.699006, 30.245995], [-97.699248, 30.246209], [-97.699475, 30.246483], [-97.69961, 30.246587], [-97.699769, 30.246764], [-97.699804, 30.246899], [-97.699809, 30.24704], [-97.699807, 30.247243], [-97.699833, 30.247414], [-97.699867, 30.24758], [-97.699913, 30.247763], [-97.699952, 30.24792], [-97.700051, 30.248167], [-97.700109, 30.248424], [-97.700251, 30.248823], [-97.700422, 30.249041], [-97.700609, 30.249215], [-97.700748, 30.249314], [-97.70098, 30.249476], [-97.701345, 30.249665], [-97.701682, 30.249779], [-97.702251, 30.249967], [-97.703233, 30.250067], [-97.704665, 30.250195], [-97.705817, 30.250191], [-97.706276, 30.250201], [-97.706525, 30.250242], [-97.706704, 30.2503], [-97.707136, 30.250502], [-97.707894, 30.250515], [-97.708602, 30.250521], [-97.708833, 30.250498], [-97.709419, 30.250438], [-97.710587, 30.250289], [-97.710886, 30.250301], [-97.711049, 30.250263], [-97.711215, 30.25023], [-97.711387, 30.25016], [-97.711902, 30.249997], [-97.712403, 30.250035], [-97.712979, 30.250151], [-97.713417, 30.250325], [-97.713606, 30.250367], [-97.714481, 30.250339], [-97.717491, 30.249165], [-97.719533, 30.248063], [-97.721285, 30.247227], [-97.722485, 30.246827], [-97.723209, 30.246699], [-97.72537, 30.246317], [-97.725849, 30.24642], [-97.726138, 30.246514], [-97.726957, 30.246943], [-97.727545, 30.247175], [-97.728662, 30.247613], [-97.730813, 30.248358], [-97.732443, 30.249162], [-97.732664, 30.249298], [-97.733174, 30.24957], [-97.733744, 30.249859], [-97.733963, 30.249976], [-97.734139, 30.250071], [-97.734424, 30.250208], [-97.735183, 30.250353], [-97.735451, 30.250413], [-97.735684, 30.250465], [-97.735889, 30.250541], [-97.735988, 30.251013], [-97.736277, 30.252386], [-97.736488, 30.253405], [-97.736677, 30.254418], [-97.736839, 30.25526], [-97.73699, 30.256102], [-97.73711, 30.256924], [-97.737137, 30.2575], [-97.73711, 30.258121], [-97.737016, 30.258806], [-97.736893, 30.259321], [-97.736702, 30.259958], [-97.736373, 30.260914], [-97.736054, 30.261878], [-97.735561, 30.263224], [-97.735222, 30.264141], [-97.734731, 30.265449], [-97.733806, 30.267947], [-97.733572, 30.268602], [-97.733267, 30.269424], [-97.732986, 30.270182], [-97.732776, 30.270742], [-97.732529, 30.271416], [-97.732249, 30.272156], [-97.732084, 30.272642], [-97.731906, 30.273194], [-97.731741, 30.273672], [-97.731585, 30.274233], [-97.731335, 30.275047], [-97.731192, 30.275498], [-97.731098, 30.275807], [-97.730956, 30.276208], [-97.730829, 30.276517], [-97.730632, 30.276964], [-97.730356, 30.277544], [-97.730114, 30.278056], [-97.730048, 30.278506], [-97.729512, 30.278489], [-97.729078, 30.278511], [-97.728487, 30.278568], [-97.725138, 30.279105], [-97.724097, 30.279295], [-97.723179, 30.279475], [-97.722199, 30.279653], [-97.721237, 30.279806], [-97.720211, 30.279994], [-97.719998, 30.280004], [-97.719249, 30.280134], [-97.718608, 30.280201], [-97.71827, 30.280288], [-97.717271, 30.280438], [-97.716232, 30.280601], [-97.715268, 30.280754], [-97.714289, 30.280957], [-97.713371, 30.281098], [-97.712439, 30.281238], [-97.711537, 30.281404], [-97.709458, 30.281705], [-97.708529, 30.281821], [-97.708058, 30.281897], [-97.707717, 30.281961], [-97.707001, 30.282065], [-97.705553, 30.282296], [-97.703945, 30.282572], [-97.703036, 30.281153], [-97.702117, 30.279734], [-97.701715, 30.279019], [-97.701241, 30.278297], [-97.700703, 30.277629], [-97.700329, 30.276862], [-97.698437, 30.274661], [-97.697907, 30.273556], [-97.696706, 30.269557], [-97.696272, 30.268101], [-97.696047, 30.267359], [-97.695509, 30.26561], [-97.694586, 30.262516], [-97.694534, 30.262353], [-97.693864, 30.260095], [-97.693619, 30.259314], [-97.693352, 30.258285], [-97.69277, 30.255154], [-97.692546, 30.253725], [-97.692464, 30.253104], [-97.692547, 30.252823], [-97.692487, 30.250773], [-97.692449, 30.250368], [-97.692401, 30.250064], [-97.692296, 30.24979], [-97.692191, 30.249556], [-97.692051, 30.248981], [-97.691861, 30.248477]]]]
    },
    "properties": {
      "neighbourhood": "78702",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-97.706525, 30.250242], [-97.706276, 30.250201], [-97.705817, 30.250191], [-97.704665, 30.250195], [-97.703233, 30.250067], [-97.702251, 30.249967], [-97.701682, 30.249779], [-97.701345, 30.249665], [-97.70098, 30.249476], [-97.700748, 30.249314], [-97.700609, 30.249215], [-97.700422, 30.249041], [-97.700251, 30.248823], [-97.700109, 30.248424], [-97.700051, 30.248167], [-97.699952, 30.24792], [-97.699913, 30.247763], [-97.699867, 30.24758], [-97.699833, 30.247414], [-97.699807, 30.247243], [-97.699809, 30.24704], [-97.699804, 30.246899], [-97.699769, 30.246764], [-97.69961, 30.246587], [-97.699475, 30.246483], [-97.699248, 30.246209], [-97.699006, 30.245995], [-97.698802, 30.245867], [-97.698582, 30.245766], [-97.698326, 30.245673], [-97.69807, 30.245618], [-97.697888, 30.245606], [-97.697511, 30.245843], [-97.69718, 30.246249], [-97.696984, 30.246467], [-97.696876, 30.246594], [-97.696644, 30.246763], [-97.696514, 30.246843], [-97.696247, 30.246714], [-97.696016, 30.246508], [-97.695898, 30.246382], [-97.695656, 30.246151], [-97.695577, 30.24602], [-97.695604, 30.245696], [-97.695648, 30.245274], [-97.695589, 30.245116], [-97.695462, 30.245017], [-97.694988, 30.244859], [-97.694742, 30.244777], [-97.694554, 30.244701], [-97.694269, 30.24464], [-97.693737, 30.244638], [-97.693155, 30.244672], [-97.692671, 30.244756], [-97.69251, 30.24494], [-97.692431, 30.245169], [-97.692286, 30.245238], [-97.691869, 30.24543], [-97.691331, 30.245575], [-97.691284, 30.245316], [-97.69116, 30.244428], [-97.691081, 30.243934], [-97.690668, 30.242822], [-97.69038, 30.242349], [-97.689532, 30.241454], [-97.688478, 30.24023], [-97.687829, 30.239175], [-97.687233, 30.238238], [-97.686628, 30.237147], [-97.685944, 30.23592], [-97.685403, 30.234999], [-97.684771, 30.233883], [-97.683981, 30.23245], [-97.683497, 30.231458], [-97.683179, 30.230478], [-97.682993, 30.229707], [-97.682927, 30.229351], [-97.682846, 30.228656], [-97.68274, 30.22784], [-97.682683, 30.227121], [-97.682693, 30.226342], [-97.682752, 30.225703], [-97.682906, 30.224983], [-97.683019, 30.224267], [-97.683108, 30.223592], [-97.683139, 30.223103], [-97.683161, 30.22254], [-97.68317, 30.222044], [-97.683188, 30.222037], [-97.683188, 30.222029], [-97.683624, 30.221835], [-97.684219, 30.221586], [-97.684905, 30.221253], [-97.685572, 30.220896], [-97.686254, 30.220519], [-97.686843, 30.220196], [-97.687761, 30.219681], [-97.688456, 30.219305], [-97.688982, 30.219008], [-97.689713, 30.218602], [-97.690162, 30.218391], [-97.690658, 30.218215], [-97.691801, 30.217823], [-97.693409, 30.217311], [-97.694241, 30.217043], [-97.695198, 30.216735], [-97.696132, 30.216438], [-97.697531, 30.215977], [-97.698824, 30.215569], [-97.700556, 30.215008], [-97.701844, 30.214594], [-97.703487, 30.214064], [-97.704094, 30.213865], [-97.704856, 30.213619], [-97.705741, 30.213335], [-97.706463, 30.2131], [-97.706976, 30.212937], [-97.70752, 30.212775], [-97.708043, 30.212607], [-97.708535, 30.212449], [-97.709007, 30.212329], [-97.709514, 30.21223], [-97.710022, 30.212152], [-97.71051, 30.212104], [-97.71095, 30.21208], [-97.711283, 30.212076], [-97.711884, 30.212091], [-97.712156, 30.212105], [-97.712952, 30.212209], [-97.713581, 30.212297], [-97.714687, 30.212462], [-97.715208, 30.212542], [-97.716077, 30.212672], [-97.716912, 30.212796], [-97.717782, 30.212921], [-97.718827, 30.213075], [-97.719855, 30.213225], [-97.72131, 30.21345], [-97.722259, 30.213585], [-97.723898, 30.213816], [-97.725406, 30.214034], [-97.726285, 30.214162], [-97.727619, 30.214371], [-97.728855, 30.214553], [-97.729791, 30.214687], [-97.730259, 30.214749], [-97.731269, 30.214904], [-97.732354, 30.215055], [-97.733626, 30.215241], [-97.734832, 30.21543], [-97.735645, 30.215551], [-97.736423, 30.215666], [-97.737306, 30.215791], [-97.738273, 30.215926], [-97.738998, 30.216035], [-97.739716, 30.216107], [-97.740548, 30.216179], [-97.741, 30.216207], [-97.741648, 30.216253], [-97.742476, 30.216311], [-97.743037, 30.216353], [-97.743343, 30.216378], [-97.744595, 30.216483], [-97.745064, 30.216509], [-97.74556, 30.216508], [-97.746048, 30.216488], [-97.746387, 30.216465], [-97.746897, 30.216401], [-97.747374, 30.21632], [-97.747895, 30.216204], [-97.749119, 30.215912], [-97.749878, 30.215726], [-97.750235, 30.215654], [-97.750513, 30.215621], [-97.750839, 30.2156], [-97.751067, 30.215602], [-97.751395, 30.215642], [-97.751687, 30.215689], [-97.751878, 30.215709], [-97.751662, 30.216068], [-97.751381, 30.216541], [-97.750852, 30.217424], [-97.750322, 30.218326], [-97.749935, 30.218976], [-97.749517, 30.219671], [-97.749085, 30.220405], [-97.748771, 30.220938], [-97.748437, 30.221501], [-97.748032, 30.22218], [-97.747665, 30.222802], [-97.747292, 30.223436], [-97.746971, 30.223971], [-97.74633, 30.22505], [-97.745702, 30.22611], [-97.745237, 30.226882], [-97.744694, 30.227795], [-97.744053, 30.228876], [-97.743601, 30.229643], [-97.743, 30.230651], [-97.742541, 30.231434], [-97.742168, 30.232056], [-97.741776, 30.232728], [-97.74137, 30.233402], [-97.741135, 30.233793], [-97.740781, 30.234388], [-97.740499, 30.234872], [-97.740277, 30.235247], [-97.740015, 30.235676], [-97.739714, 30.23619], [-97.739452, 30.236641], [-97.739138, 30.237171], [-97.738851, 30.237649], [-97.738451, 30.238318], [-97.737947, 30.239171], [-97.737593, 30.239761], [-97.737115, 30.240571], [-97.736867, 30.240989], [-97.736513, 30.241584], [-97.736141, 30.242212], [-97.735852, 30.242688], [-97.735558, 30.243193], [-97.735367, 30.243552], [-97.735234, 30.243869], [-97.735138, 30.24415], [-97.735049, 30.244473], [-97.734968, 30.244917], [-97.734941, 30.245199], [-97.734929, 30.245425], [-97.734924, 30.245609], [-97.734947, 30.245948], [-97.734971, 30.246198], [-97.735036, 30.246552], [-97.735158, 30.24714], [-97.735286, 30.247723], [-97.735413, 30.24835], [-97.735612, 30.249303], [-97.735847, 30.250339], [-97.735889, 30.250541], [-97.735684, 30.250465], [-97.735451, 30.250413], [-97.735183, 30.250353], [-97.734424, 30.250208], [-97.734139, 30.250071], [-97.733963, 30.249976], [-97.733744, 30.249859], [-97.733174, 30.24957], [-97.732664, 30.249298], [-97.732443, 30.249162], [-97.730813, 30.248358], [-97.728662, 30.247613], [-97.727545, 30.247175], [-97.726957, 30.246943], [-97.726138, 30.246514], [-97.725849, 30.24642], [-97.72537, 30.246317], [-97.723209, 30.246699], [-97.722485, 30.246827], [-97.721285, 30.247227], [-97.719533, 30.248063], [-97.717491, 30.249165], [-97.714481, 30.250339], [-97.713606, 30.250367], [-97.713417, 30.250325], [-97.712979, 30.250151], [-97.712403, 30.250035], [-97.711902, 30.249997], [-97.711387, 30.25016], [-97.711215, 30.25023], [-97.711049, 30.250263], [-97.710886, 30.250301], [-97.710587, 30.250289], [-97.709419, 30.250438], [-97.708833, 30.250498], [-97.708602, 30.250521], [-97.707894, 30.250515], [-97.707136, 30.250502], [-97.706704, 30.2503], [-97.706525, 30.250242]]]]
    },
    "properties": {
      "neighbourhood": "78741",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-97.651577, 30.201428], [-97.652865, 30.200654], [-97.652964, 30.200662], [-97.654465, 30.200784], [-97.654467, 30.200778], [-97.655038, 30.199019], [-97.653079, 30.197204], [-97.653023, 30.197152], [-97.651687, 30.198386], [-97.651638, 30.198431], [-97.646638, 30.194392], [-97.646858, 30.194063], [-97.651381, 30.186944], [-97.656615, 30.184084], [-97.656698, 30.184101], [-97.659101, 30.184582], [-97.660101, 30.186627], [-97.660203, 30.186615], [-97.662494, 30.186347], [-97.66461, 30.182898], [-97.670546, 30.173219], [-97.667055, 30.171811], [-97.66386, 30.170521], [-97.663998, 30.168448], [-97.660521, 30.166427], [-97.660678, 30.166303], [-97.662566, 30.163496], [-97.662975, 30.162839], [-97.669075, 30.153513], [-97.670211, 30.153067], [-97.670423, 30.151886], [-97.671812, 30.149335], [-97.673434, 30.146439], [-97.673569, 30.145504], [-97.672702, 30.144199], [-97.663063, 30.139595], [-97.659395, 30.137904], [-97.656118, 30.136309], [-97.644989, 30.130935], [-97.644383, 30.130766], [-97.642077, 30.127563], [-97.641345, 30.126376], [-97.643865, 30.12246], [-97.649673, 30.113258], [-97.650507, 30.110707], [-97.654423, 30.104339], [-97.656761, 30.100535], [-97.655744, 30.099419], [-97.660469, 30.095211], [-97.655909, 30.091301], [-97.652839, 30.088645], [-97.64987, 30.086124], [-97.648192, 30.085099], [-97.640813, 30.078879], [-97.642751, 30.077146], [-97.642014, 30.076201], [-97.642968, 30.075277], [-97.643706, 30.074562], [-97.646105, 30.07224], [-97.646678, 30.071685], [-97.649953, 30.068439], [-97.652534, 30.070611], [-97.653332, 30.071282], [-97.654467, 30.072211], [-97.659415, 30.076456], [-97.666296, 30.082029], [-97.671597, 30.086331], [-97.673395, 30.083206], [-97.693082, 30.075857], [-97.6937, 30.089471], [-97.693893, 30.09352], [-97.694521, 30.104339], [-97.694678, 30.10703], [-97.694726, 30.107487], [-97.694918, 30.111757], [-97.694943, 30.112321], [-97.695156, 30.115334], [-97.695175, 30.115725], [-97.695915, 30.128673], [-97.696065, 30.130865], [-97.696162, 30.132806], [-97.696916, 30.144164], [-97.696916, 30.144172], [-97.696982, 30.147653], [-97.69693, 30.14978], [-97.696686, 30.151437], [-97.696401, 30.152608], [-97.694255, 30.15988], [-97.693447, 30.162547], [-97.692849, 30.164361], [-97.692318, 30.166264], [-97.691798, 30.168113], [-97.691507, 30.169158], [-97.691194, 30.170251], [-97.690663, 30.172119], [-97.690131, 30.174022], [-97.689697, 30.175556], [-97.688994, 30.17811], [-97.688524, 30.179723], [-97.68734, 30.183926], [-97.6863, 30.187618], [-97.685697, 30.189728], [-97.685298, 30.191161], [-97.684577, 30.195564], [-97.684065, 30.198719], [-97.683798, 30.200468], [-97.683598, 30.201817], [-97.683546, 30.202517], [-97.683418, 30.204022], [-97.683316, 30.20532], [-97.683283, 30.206921], [-97.683284, 30.208893], [-97.683314, 30.211357], [-97.683353, 30.214323], [-97.683364, 30.215536], [-97.683346, 30.21695], [-97.683261, 30.219269], [-97.683188, 30.222029], [-97.683188, 30.222037], [-97.68317, 30.222044], [-97.682796, 30.222186], [-97.68235, 30.222366], [-97.68184, 30.222554], [-97.681336, 30.222703], [-97.680941, 30.222786], [-97.680323, 30.222864], [-97.67978, 30.222916], [-97.679765, 30.222915], [-97.679367, 30.222902], [-97.678854, 30.222852], [-97.678317, 30.222731], [-97.677744, 30.222582], [-97.67728, 30.222437], [-97.676795, 30.222251], [-97.676537, 30.222139], [-97.675555, 30.221764], [-97.674895, 30.221497], [-97.674269, 30.221201], [-97.673716, 30.220922], [-97.672873, 30.220487], [-97.672191, 30.220151], [-97.672119, 30.220116], [-97.67048, 30.219276], [-97.669432, 30.218746], [-97.668849, 30.218431], [-97.667951, 30.21797], [-97.666177, 30.217044], [-97.664137, 30.215888], [-97.662889, 30.215182], [-97.661872, 30.2146], [-97.660003, 30.213574], [-97.658238, 30.21264], [-97.656808, 30.211937], [-97.655309, 30.211226], [-97.653865, 30.210497], [-97.652367, 30.209753], [-97.652085, 30.205371], [-97.651577, 30.201428]]]]
    },
    "properties": {
      "neighbourhood": "78719",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-97.640433, 30.256466], [-97.640251, 30.256437], [-97.639949, 30.256431], [-97.639757, 30.256444], [-97.639445, 30.256492], [-97.639143, 30.256527], [-97.638923, 30.256522], [-97.638704, 30.256518], [-97.638413, 30.256462], [-97.638086, 30.256392], [-97.637785, 30.256347], [-97.637495, 30.256261], [-97.637278, 30.256202], [-97.637014, 30.256141], [-97.636787, 30.256087], [-97.636487, 30.256034], [-97.636141, 30.255988], [-97.635859, 30.255949], [-97.635422, 30.255885], [-97.63503, 30.255843], [-97.634601, 30.255821], [-97.63408, 30.255804], [-97.633355, 30.255781], [-97.63298, 30.255781], [-97.632687, 30.255767], [-97.632433, 30.255723], [-97.632177, 30.255701], [-97.631858, 30.255694], [-97.631565, 30.255713], [-97.631244, 30.255736], [-97.630942, 30.255763], [-97.630639, 30.255811], [-97.630419, 30.255832], [-97.630067, 30.255857], [-97.629855, 30.255877], [-97.62863, 30.255997], [-97.628004, 30.256141], [-97.627477, 30.256157], [-97.62691, 30.255958], [-97.62652, 30.255592], [-97.626229, 30.255113], [-97.626151, 30.254944], [-97.62611, 30.25477], [-97.626065, 30.25434], [-97.62604, 30.253707], [-97.625939, 30.25308], [-97.625828, 30.252508], [-97.625785, 30.252175], [-97.625757, 30.251852], [-97.625751, 30.251489], [-97.625721, 30.251109], [-97.625731, 30.250801], [-97.625765, 30.250629], [-97.6258, 30.250316], [-97.625901, 30.249826], [-97.626214, 30.249139], [-97.626627, 30.248323], [-97.627278, 30.247228], [-97.627747, 30.24652], [-97.628034, 30.246281], [-97.628329, 30.245759], [-97.628801, 30.244936], [-97.62936, 30.244092], [-97.630436, 30.242679], [-97.630576, 30.24255], [-97.630944, 30.242242], [-97.631342, 30.241895], [-97.631762, 30.241561], [-97.632083, 30.241325], [-97.63236, 30.241075], [-97.632616, 30.240885], [-97.632737, 30.240668], [-97.632831, 30.24053], [-97.632902, 30.240344], [-97.632964, 30.240136], [-97.633047, 30.240006], [-97.63332, 30.239808], [-97.633553, 30.239665], [-97.633732, 30.239597], [-97.634044, 30.239494], [-97.634233, 30.23944], [-97.634507, 30.239352], [-97.634785, 30.23927], [-97.635286, 30.239096], [-97.635501, 30.239037], [-97.635767, 30.238958], [-97.636154, 30.238834], [-97.636508, 30.238745], [-97.636729, 30.238692], [-97.637044, 30.238638], [-97.637392, 30.238566], [-97.637609, 30.238532], [-97.637773, 30.238502], [-97.637981, 30.238446], [-97.638155, 30.238389], [-97.638346, 30.238333], [-97.638691, 30.238244], [-97.639355, 30.238076], [-97.640062, 30.237904], [-97.640533, 30.237812], [-97.640913, 30.237743], [-97.641223, 30.237719], [-97.641457, 30.237705], [-97.641701, 30.237694], [-97.64202, 30.237651], [-97.642216, 30.237597], [-97.642596, 30.237484], [-97.643021, 30.237345], [-97.64348, 30.237178], [-97.643862, 30.237049], [-97.644067, 30.23699], [-97.644502, 30.236848], [-97.644789, 30.236777], [-97.645162, 30.236655], [-97.645346, 30.236599], [-97.645525, 30.236553], [-97.646069, 30.236515], [-97.646446, 30.236512], [-97.646845, 30.236514], [-97.647258, 30.236496], [-97.647419, 30.236469], [-97.647581, 30.236442], [-97.647743, 30.236407], [-97.648779, 30.2359], [-97.649448, 30.235834], [-97.649873, 30.235727], [-97.650768, 30.234805], [-97.651294, 30.23405], [-97.651671, 30.23378], [-97.652109, 30.233536], [-97.652735, 30.233269], [-97.652947, 30.233235], [-97.65335, 30.233207], [-97.65357, 30.233036], [-97.654779, 30.23143], [-97.655306, 30.230787], [-97.655458, 30.230589], [-97.656631, 30.229684], [-97.657008, 30.229392], [-97.657677, 30.228713], [-97.658256, 30.228098], [-97.658409, 30.22825], [-97.658585, 30.228273], [-97.658746, 30.228308], [-97.658804, 30.228321], [-97.659013, 30.22829], [-97.659166, 30.228224], [-97.659311, 30.228103], [-97.659521, 30.227967], [-97.659658, 30.227753], [-97.659936, 30.227759], [-97.660062, 30.227762], [-97.660213, 30.227935], [-97.660508, 30.227944], [-97.660764, 30.228035], [-97.661004, 30.228042], [-97.661088, 30.228044], [-97.661301, 30.228045], [-97.661415, 30.228046], [-97.661731, 30.228099], [-97.661963, 30.22812], [-97.66208, 30.228131], [-97.662231, 30.227977], [-97.662293, 30.227847], [-97.662514, 30.227714], [-97.662656, 30.227623], [-97.662895, 30.227534], [-97.662902, 30.227532], [-97.663057, 30.227538], [-97.663178, 30.227543], [-97.663323, 30.227475], [-97.663394, 30.227352], [-97.663509, 30.227143], [-97.663758, 30.226981], [-97.663783, 30.226965], [-97.663944, 30.226995], [-97.664112, 30.227114], [-97.664418, 30.227253], [-97.664665, 30.227387], [-97.665129, 30.22749], [-97.665399, 30.227537], [-97.665622, 30.227553], [-97.665901, 30.227577], [-97.666002, 30.227586], [-97.666396, 30.227492], [-97.666486, 30.227362], [-97.666473, 30.227186], [-97.6663, 30.227022], [-97.665973, 30.226686], [-97.665981, 30.226457], [-97.666021, 30.226324], [-97.666137, 30.22615], [-97.666357, 30.225956], [-97.666499, 30.225852], [-97.666696, 30.225741], [-97.666903, 30.225465], [-97.666981, 30.225337], [-97.666895, 30.225184], [-97.666716, 30.225081], [-97.666902, 30.224912], [-97.666924, 30.224892], [-97.666948, 30.224871], [-97.667773, 30.225062], [-97.668762, 30.225443], [-97.669971, 30.226424], [-97.670039, 30.226479], [-97.670735, 30.225852], [-97.670999, 30.225599], [-97.671383, 30.225258], [-97.672733, 30.224081], [-97.672456, 30.22385], [-97.672306, 30.223731], [-97.671391, 30.222997], [-97.670175, 30.221998], [-97.670496, 30.221692], [-97.671144, 30.221075], [-97.672191, 30.220151], [-97.672873, 30.220487], [-97.673716, 30.220922], [-97.674269, 30.221201], [-97.674895, 30.221497], [-97.675555, 30.221764], [-97.676537, 30.222139], [-97.676795, 30.222251], [-97.67728, 30.222437], [-97.677744, 30.222582], [-97.678317, 30.222731], [-97.678854, 30.222852], [-97.679367, 30.222902], [-97.679765, 30.222915], [-97.67978, 30.222916], [-97.680323, 30.222864], [-97.680941, 30.222786], [-97.681336, 30.222703], [-97.68184, 30.222554], [-97.68235, 30.222366], [-97.682796, 30.222186], [-97.68317, 30.222044], [-97.683161, 30.22254], [-97.683139, 30.223103], [-97.683108, 30.223592], [-97.683019, 30.224267], [-97.682906, 30.224983], [-97.682752, 30.225703], [-97.682693, 30.226342], [-97.682683, 30.227121], [-97.68274, 30.22784], [-97.682846, 30.228656], [-97.682927, 30.229351], [-97.682993, 30.229707], [-97.683179, 30.230478], [-97.683497, 30.231458], [-97.683981, 30.23245], [-97.684771, 30.233883], [-97.685403, 30.234999], [-97.685944, 30.23592], [-97.686628, 30.237147], [-97.687233, 30.238238], [-97.687829, 30.239175], [-97.688478, 30.24023], [-97.689532, 30.241454], [-97.69038, 30.242349], [-97.690668, 30.242822], [-97.691081, 30.243934], [-97.69116, 30.244428], [-97.691284, 30.245316], [-97.691331, 30.245575], [-97.691116, 30.245585], [-97.690745, 30.245594], [-97.690314, 30.24551], [-97.689537, 30.245255], [-97.689352, 30.245276], [-97.689204, 30.245333], [-97.688911, 30.245352], [-97.688726, 30.245403], [-97.68845, 30.245508], [-97.687873, 30.245812], [-97.684992, 30.245995], [-97.683503, 30.246255], [-97.682457, 30.246289], [-97.681104, 30.246731], [-97.679714, 30.247318], [-97.677807, 30.247972], [-97.677342, 30.248188], [-97.67598, 30.248825], [-97.675137, 30.249333], [-97.674265, 30.249953], [-97.673121, 30.250815], [-97.672726, 30.251258], [-97.672225, 30.252105], [-97.67185, 30.252584], [-97.671729, 30.252794], [-97.671624, 30.252978], [-97.671689, 30.253761], [-97.671667, 30.254313], [-97.671537, 30.25455], [-97.671275, 30.254773], [-97.669225, 30.256094], [-97.667907, 30.25662], [-97.667347, 30.257001], [-97.663637, 30.259255], [-97.660991, 30.260773], [-97.657918, 30.261618], [-97.654237, 30.262182], [-97.653394, 30.262164], [-97.652284, 30.26229], [-97.651574, 30.262399], [-97.6499, 30.262449], [-97.648768, 30.262711], [-97.648181, 30.262839], [-97.647713, 30.263101], [-97.646658, 30.263228], [-97.645702, 30.263268], [-97.645484, 30.263245], [-97.645316, 30.2632], [-97.64507, 30.26317], [-97.644797, 30.263101], [-97.644537, 30.26306], [-97.644362, 30.26302], [-97.644208, 30.262973], [-97.643915, 30.262868], [-97.64374, 30.262793], [-97.643502, 30.262724], [-97.643264, 30.262664], [-97.642964, 30.262603], [-97.642639, 30.262475], [-97.642396, 30.262253], [-97.642181, 30.262119], [-97.641987, 30.261966], [-97.641817, 30.261839], [-97.641726, 30.261713], [-97.641718, 30.261573], [-97.64163, 30.257561], [-97.641218, 30.256755], [-97.640433, 30.256466]]]]
    },
    "properties": {
      "neighbourhood": "78742",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-97.703945, 30.282572], [-97.705553, 30.282296], [-97.707001, 30.282065], [-97.707717, 30.281961], [-97.708058, 30.281897], [-97.708529, 30.281821], [-97.709458, 30.281705], [-97.711537, 30.281404], [-97.712439, 30.281238], [-97.713371, 30.281098], [-97.714289, 30.280957], [-97.715268, 30.280754], [-97.716232, 30.280601], [-97.717271, 30.280438], [-97.71827, 30.280288], [-97.718608, 30.280201], [-97.719249, 30.280134], [-97.719998, 30.280004], [-97.720211, 30.279994], [-97.721237, 30.279806], [-97.722199, 30.279653], [-97.723179, 30.279475], [-97.724097, 30.279295], [-97.725138, 30.279105], [-97.728487, 30.278568], [-97.729078, 30.278511], [-97.729512, 30.278489], [-97.730048, 30.278506], [-97.729824, 30.278664], [-97.729435, 30.279453], [-97.729112, 30.280068], [-97.728746, 30.280682], [-97.728298, 30.281372], [-97.72777, 30.282167], [-97.727122, 30.283163], [-97.726812, 30.283649], [-97.726383, 30.284309], [-97.726, 30.284884], [-97.725526, 30.285595], [-97.725106, 30.286241], [-97.724741, 30.286811], [-97.72433, 30.287463], [-97.723928, 30.28809], [-97.723371, 30.288962], [-97.722822, 30.289836], [-97.722403, 30.290488], [-97.721855, 30.291343], [-97.721189, 30.292369], [-97.720523, 30.293395], [-97.719984, 30.294226], [-97.719363, 30.295192], [-97.718768, 30.296145], [-97.718064, 30.2973], [-97.717396, 30.298403], [-97.716408, 30.300005], [-97.715466, 30.301513], [-97.714935, 30.302365], [-97.713921, 30.303962], [-97.712953, 30.305452], [-97.712592, 30.30528], [-97.712277, 30.305127], [-97.711693, 30.304851], [-97.711382, 30.304702], [-97.711188, 30.304528], [-97.71105, 30.304379], [-97.710912, 30.304228], [-97.710773, 30.304076], [-97.710636, 30.303928], [-97.710496, 30.303776], [-97.710378, 30.303647], [-97.710259, 30.303518], [-97.710141, 30.303389], [-97.710023, 30.303261], [-97.709904, 30.303129], [-97.709748, 30.302961], [-97.70955, 30.302745], [-97.709295, 30.302467], [-97.709215, 30.301368], [-97.708973, 30.301182], [-97.708783, 30.300908], [-97.708947, 30.300631], [-97.709041, 30.300482], [-97.709135, 30.300332], [-97.709229, 30.300183], [-97.709324, 30.300034], [-97.709513, 30.299735], [-97.709613, 30.299578], [-97.709905, 30.299113], [-97.710056, 30.298907], [-97.709738, 30.298653], [-97.709457, 30.298384], [-97.709213, 30.298115], [-97.709077, 30.297952], [-97.708914, 30.297726], [-97.708715, 30.297406], [-97.708553, 30.297108], [-97.708351, 30.296661], [-97.708248, 30.296379], [-97.708147, 30.296002], [-97.708084, 30.295644], [-97.708022, 30.2952], [-97.707961, 30.294706], [-97.707893, 30.294223], [-97.707856, 30.293953], [-97.707789, 30.293418], [-97.707729, 30.29293], [-97.707655, 30.292365], [-97.70752, 30.291369], [-97.707418, 30.290534], [-97.707214, 30.289036], [-97.707062, 30.288103], [-97.706941, 30.287652], [-97.706694, 30.286973], [-97.70648, 30.286436], [-97.706324, 30.286171], [-97.706091, 30.285806], [-97.705758, 30.285288], [-97.705481, 30.284946], [-97.705285, 30.284582], [-97.704859, 30.283919], [-97.704415, 30.283244], [-97.703945, 30.282572]]]]
    },
    "properties": {
      "neighbourhood": "78722",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-97.766056, 30.312954], [-97.764822, 30.312239], [-97.764173, 30.311849], [-97.763962, 30.311653], [-97.763122, 30.3108], [-97.762674, 30.31048], [-97.762142, 30.310208], [-97.761624, 30.30995], [-97.759327, 30.309376], [-97.758273, 30.309154], [-97.757808, 30.309067], [-97.75758, 30.309024], [-97.75718, 30.30897], [-97.757009, 30.308939], [-97.756332, 30.308832], [-97.755887, 30.308735], [-97.755507, 30.308677], [-97.754803, 30.308586], [-97.754623, 30.30858], [-97.754291, 30.308482], [-97.752614, 30.308097], [-97.751601, 30.307801], [-97.751166, 30.307468], [-97.750777, 30.307196], [-97.750469, 30.307039], [-97.750227, 30.306783], [-97.749868, 30.306465], [-97.749471, 30.306105], [-97.749298, 30.305934], [-97.749223, 30.305735], [-97.749319, 30.305362], [-97.749308, 30.305208], [-97.749259, 30.304987], [-97.748807, 30.304769], [-97.748976, 30.30453], [-97.749138, 30.304336], [-97.74927, 30.304182], [-97.749412, 30.303956], [-97.749473, 30.303812], [-97.749649, 30.303447], [-97.749858, 30.303225], [-97.749976, 30.303107], [-97.750062, 30.302822], [-97.75009, 30.302672], [-97.74991, 30.302561], [-97.749645, 30.302437], [-97.749535, 30.302297], [-97.749399, 30.302031], [-97.749272, 30.301792], [-97.749095, 30.30151], [-97.748821, 30.301227], [-97.748688, 30.301103], [-97.748561, 30.300999], [-97.748302, 30.300804], [-97.748005, 30.30057], [-97.747784, 30.300408], [-97.747563, 30.300236], [-97.747379, 30.300045], [-97.747291, 30.299909], [-97.747131, 30.299622], [-97.74711, 30.299484], [-97.747185, 30.299238], [-97.747397, 30.299045], [-97.747722, 30.299024], [-97.747904, 30.299041], [-97.748221, 30.299048], [-97.748493, 30.299045], [-97.748828, 30.298952], [-97.74905, 30.298885], [-97.749324, 30.298696], [-97.749467, 30.298553], [-97.749743, 30.298184], [-97.749908, 30.297965], [-97.750068, 30.297858], [-97.750113, 30.297576], [-97.750022, 30.297425], [-97.749756, 30.297219], [-97.749621, 30.297145], [-97.749444, 30.296963], [-97.74935, 30.296801], [-97.749248, 30.296494], [-97.749183, 30.296182], [-97.749146, 30.296041], [-97.74909, 30.295897], [-97.749001, 30.295749], [-97.748838, 30.295515], [-97.748714, 30.29527], [-97.748555, 30.295063], [-97.748373, 30.294837], [-97.748282, 30.294717], [-97.748078, 30.294366], [-97.747975, 30.294147], [-97.747828, 30.293836], [-97.747717, 30.293597], [-97.747641, 30.29345], [-97.747482, 30.293075], [-97.747396, 30.292804], [-97.747438, 30.292604], [-97.747578, 30.292456], [-97.747851, 30.292296], [-97.748087, 30.292251], [-97.748413, 30.292189], [-97.748606, 30.292182], [-97.748799, 30.29217], [-97.749096, 30.292112], [-97.749472, 30.292073], [-97.749785, 30.292099], [-97.750194, 30.292156], [-97.750557, 30.292114], [-97.750998, 30.29201], [-97.751232, 30.291922], [-97.751393, 30.291721], [-97.751531, 30.291609], [-97.75172, 30.291379], [-97.751827, 30.291103], [-97.75187, 30.290865], [-97.75194, 30.290616], [-97.751994, 30.290314], [-97.752125, 30.290111], [-97.752371, 30.289876], [-97.752563, 30.289663], [-97.752934, 30.289186], [-97.753126, 30.288932], [-97.753283, 30.288737], [-97.753361, 30.288612], [-97.753462, 30.288443], [-97.75359, 30.288066], [-97.753742, 30.287475], [-97.753878, 30.286928], [-97.753904, 30.286532], [-97.753901, 30.286112], [-97.753916, 30.285845], [-97.753928, 30.285708], [-97.75397, 30.285458], [-97.754098, 30.285329], [-97.754257, 30.285151], [-97.754386, 30.285005], [-97.754522, 30.284785], [-97.754497, 30.284649], [-97.754487, 30.284391], [-97.75409, 30.284119], [-97.753766, 30.283933], [-97.75348, 30.283754], [-97.753195, 30.283567], [-97.752998, 30.283445], [-97.752854, 30.283324], [-97.752659, 30.283196], [-97.752375, 30.283017], [-97.751954, 30.282832], [-97.751798, 30.282766], [-97.751645, 30.282661], [-97.75145, 30.282531], [-97.751229, 30.282337], [-97.751151, 30.282214], [-97.751043, 30.281973], [-97.750996, 30.281831], [-97.750944, 30.281638], [-97.750905, 30.281472], [-97.750864, 30.281292], [-97.750819, 30.280975], [-97.750788, 30.280658], [-97.750776, 30.280419], [-97.750862, 30.280063], [-97.750937, 30.27991], [-97.750961, 30.279768], [-97.751, 30.279463], [-97.751027, 30.279318], [-97.751063, 30.279165], [-97.751085, 30.279], [-97.751096, 30.278857], [-97.751109, 30.278657], [-97.751054, 30.278381], [-97.750949, 30.278101], [-97.750853, 30.277906], [-97.750599, 30.277769], [-97.750486, 30.277539], [-97.750388, 30.277289], [-97.750286, 30.277045], [-97.750208, 30.27687], [-97.750148, 30.276591], [-97.750207, 30.276436], [-97.750377, 30.276222], [-97.750519, 30.276112], [-97.750662, 30.276013], [-97.750903, 30.275839], [-97.751014, 30.275726], [-97.751156, 30.275561], [-97.751267, 30.275431], [-97.751404, 30.275057], [-97.751502, 30.274823], [-97.751631, 30.274696], [-97.751746, 30.274577], [-97.751886, 30.274388], [-97.751983, 30.274246], [-97.752053, 30.274124], [-97.752003, 30.273906], [-97.751831, 30.273828], [-97.751594, 30.273672], [-97.751445, 30.27349], [-97.751396, 30.273242], [-97.751335, 30.273089], [-97.751302, 30.27294], [-97.7513, 30.2728], [-97.75133, 30.272646], [-97.751291, 30.272395], [-97.751232, 30.27224], [-97.751125, 30.272001], [-97.750937, 30.271701], [-97.750814, 30.271473], [-97.750843, 30.271182], [-97.750957, 30.27095], [-97.751149, 30.270715], [-97.751231, 30.270595], [-97.751237, 30.270463], [-97.750601, 30.270256], [-97.751633, 30.267452], [-97.75255, 30.26747], [-97.753689, 30.266387], [-97.753794, 30.266216], [-97.753913, 30.266015], [-97.754165, 30.265588], [-97.754473, 30.265067], [-97.754791, 30.265043], [-97.755365, 30.265211], [-97.755984, 30.265421], [-97.756544, 30.265669], [-97.756686, 30.265744], [-97.757735, 30.266296], [-97.75885, 30.266788], [-97.759922, 30.267225], [-97.760657, 30.267526], [-97.761859, 30.268015], [-97.762338, 30.268211], [-97.763764, 30.268793], [-97.766316, 30.269741], [-97.766711, 30.269886], [-97.768271, 30.270665], [-97.769682, 30.27162], [-97.77072, 30.272747], [-97.771245, 30.273274], [-97.771562, 30.273592], [-97.771772, 30.273805], [-97.771912, 30.273945], [-97.772148, 30.274181], [-97.772779, 30.274889], [-97.774809, 30.27622], [-97.774997, 30.276353], [-97.776663, 30.277538], [-97.776871, 30.277705], [-97.77948, 30.27977], [-97.780348, 30.2805], [-97.78295, 30.28303], [-97.783893, 30.283945], [-97.784268, 30.28431], [-97.784888, 30.285378], [-97.785336, 30.286149], [-97.785415, 30.286753], [-97.785582, 30.288032], [-97.785589, 30.288283], [-97.785583, 30.288492], [-97.785539, 30.28881], [-97.785532, 30.289074], [-97.785508, 30.289304], [-97.785504, 30.289467], [-97.785547, 30.289905], [-97.785647, 30.290198], [-97.785828, 30.290656], [-97.78592, 30.290924], [-97.785875, 30.291278], [-97.785766, 30.291653], [-97.785637, 30.29209], [-97.785607, 30.292224], [-97.785527, 30.292613], [-97.785261, 30.293161], [-97.785385, 30.293408], [-97.785474, 30.29355], [-97.785798, 30.293614], [-97.78597, 30.293607], [-97.786228, 30.293584], [-97.786543, 30.293624], [-97.786968, 30.293847], [-97.786944, 30.294226], [-97.786937, 30.294382], [-97.786918, 30.294632], [-97.786887, 30.294863], [-97.786803, 30.295246], [-97.786745, 30.295446], [-97.786363, 30.296464], [-97.78622, 30.296813], [-97.786131, 30.297029], [-97.78592, 30.297506], [-97.785727, 30.297876], [-97.785473, 30.298303], [-97.78506, 30.298911], [-97.784808, 30.299244], [-97.784454, 30.299718], [-97.784053, 30.300323], [-97.78387, 30.300644], [-97.783716, 30.30085], [-97.783498, 30.30111], [-97.783101, 30.30155], [-97.782762, 30.301915], [-97.782333, 30.302393], [-97.782055, 30.302685], [-97.781848, 30.302901], [-97.781327, 30.303438], [-97.781065, 30.303729], [-97.780505, 30.304433], [-97.779951, 30.305173], [-97.779532, 30.305731], [-97.779153, 30.306219], [-97.778912, 30.306629], [-97.778523, 30.307386], [-97.77844, 30.307547], [-97.778224, 30.307961], [-97.778034, 30.308556], [-97.777496, 30.310196], [-97.777139, 30.311547], [-97.777156, 30.312491], [-97.77702, 30.313113], [-97.776946, 30.31345], [-97.776765, 30.31366], [-97.774711, 30.312863], [-97.774173, 30.312646], [-97.773834, 30.312598], [-97.772927, 30.312739], [-97.772277, 30.312908], [-97.7716, 30.313164], [-97.770532, 30.313885], [-97.770131, 30.314119], [-97.76904, 30.314529], [-97.767956, 30.313958], [-97.767567, 30.313787], [-97.767355, 30.313654], [-97.767155, 30.313537], [-97.766056, 30.312954]]]]
    },
    "properties": {
      "neighbourhood": "78703",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-97.707397, 30.474825], [-97.707526, 30.474607], [-97.707667, 30.474415], [-97.70788, 30.474213], [-97.708023, 30.474131], [-97.708132, 30.473875], [-97.708038, 30.473642], [-97.707813, 30.473494], [-97.707655, 30.473419], [-97.711855, 30.467319], [-97.713175, 30.465325], [-97.715162, 30.462227], [-97.717396, 30.458862], [-97.717723, 30.45852], [-97.718107, 30.458327], [-97.718823, 30.458033], [-97.719423, 30.457737], [-97.719726, 30.457449], [-97.719987, 30.456962], [-97.720435, 30.455978], [-97.720638, 30.455496], [-97.721072, 30.454946], [-97.721294, 30.454791], [-97.721286, 30.455039], [-97.721263, 30.455222], [-97.721223, 30.455494], [-97.721177, 30.455763], [-97.721128, 30.456034], [-97.721002, 30.45676], [-97.720917, 30.457262], [-97.720844, 30.457689], [-97.720816, 30.457881], [-97.72078, 30.458175], [-97.720743, 30.458559], [-97.720677, 30.459339], [-97.720646, 30.459693], [-97.720598, 30.46025], [-97.720546, 30.460838], [-97.720481, 30.461618], [-97.720424, 30.462271], [-97.720377, 30.462806], [-97.720326, 30.463389], [-97.720273, 30.464001], [-97.720258, 30.464157], [-97.720244, 30.464316], [-97.720213, 30.464673], [-97.720171, 30.465154], [-97.720109, 30.46587], [-97.720055, 30.466485], [-97.719992, 30.467216], [-97.719939, 30.467828], [-97.719888, 30.468424], [-97.719824, 30.469151], [-97.719803, 30.46942], [-97.719757, 30.469978], [-97.719744, 30.470192], [-97.719737, 30.470404], [-97.719739, 30.47064], [-97.719758, 30.470874], [-97.719795, 30.471109], [-97.719842, 30.471319], [-97.719903, 30.471524], [-97.719974, 30.471718], [-97.720059, 30.471917], [-97.720167, 30.472126], [-97.720297, 30.472343], [-97.72045, 30.472564], [-97.72062, 30.472773], [-97.720912, 30.473093], [-97.721378, 30.473581], [-97.721885, 30.474105], [-97.722067, 30.474288], [-97.722358, 30.474552], [-97.722572, 30.474722], [-97.7228, 30.47488], [-97.723037, 30.47502], [-97.723284, 30.475149], [-97.72356, 30.47527], [-97.723844, 30.475377], [-97.724042, 30.475436], [-97.724241, 30.475493], [-97.724443, 30.475541], [-97.725103, 30.475689], [-97.726056, 30.475898], [-97.726871, 30.476077], [-97.727892, 30.476301], [-97.728938, 30.476529], [-97.729324, 30.476614], [-97.729567, 30.476665], [-97.729852, 30.476726], [-97.730041, 30.476768], [-97.730231, 30.476805], [-97.730422, 30.476837], [-97.730688, 30.47687], [-97.730955, 30.476897], [-97.731231, 30.476905], [-97.731507, 30.476903], [-97.732271, 30.476869], [-97.73307, 30.476822], [-97.733831, 30.476776], [-97.734479, 30.476737], [-97.73501, 30.476707], [-97.735646, 30.47667], [-97.736299, 30.476631], [-97.736807, 30.476603], [-97.737006, 30.476588], [-97.737298, 30.476563], [-97.737483, 30.476537], [-97.737666, 30.476499], [-97.73797, 30.476423], [-97.738179, 30.476361], [-97.738453, 30.476279], [-97.738917, 30.476131], [-97.739665, 30.475902], [-97.740399, 30.475669], [-97.741047, 30.475465], [-97.741607, 30.475289], [-97.742239, 30.47509], [-97.74248, 30.475015], [-97.74272, 30.47494], [-97.743015, 30.47485], [-97.743312, 30.474765], [-97.743493, 30.474722], [-97.743675, 30.474684], [-97.743858, 30.474649], [-97.744032, 30.47462], [-97.744208, 30.474599], [-97.744383, 30.474578], [-97.744857, 30.474521], [-97.748673, 30.474064], [-97.748955, 30.474037], [-97.749239, 30.474015], [-97.749523, 30.474002], [-97.749807, 30.473996], [-97.750092, 30.473999], [-97.750381, 30.474008], [-97.75067, 30.474028], [-97.751073, 30.474066], [-97.751311, 30.474095], [-97.751548, 30.47413], [-97.751784, 30.474174], [-97.752019, 30.47422], [-97.752264, 30.474271], [-97.752508, 30.474331], [-97.75275, 30.474397], [-97.752988, 30.47447], [-97.753228, 30.474549], [-97.753467, 30.474631], [-97.753705, 30.474713], [-97.753942, 30.474797], [-97.755116, 30.475212], [-97.756331, 30.47564], [-97.757898, 30.476191], [-97.759163, 30.476638], [-97.761006, 30.477288], [-97.761298, 30.47742], [-97.761443, 30.477495], [-97.763478, 30.476834], [-97.764664, 30.476445], [-97.76491, 30.476387], [-97.766691, 30.475804], [-97.768021, 30.475426], [-97.768762, 30.475215], [-97.769719, 30.47499], [-97.770889, 30.474785], [-97.773711, 30.474648], [-97.775502, 30.474456], [-97.776207, 30.474379], [-97.777094, 30.47421], [-97.778071, 30.47394], [-97.780079, 30.473293], [-97.780632, 30.473092], [-97.783538, 30.472198], [-97.784893, 30.471782], [-97.786948, 30.471124], [-97.789516, 30.47032], [-97.789824, 30.470224], [-97.790101, 30.47015], [-97.797019, 30.468164], [-97.798782, 30.472926], [-97.798841, 30.473081], [-97.798937, 30.473287], [-97.799387, 30.474256], [-97.799863, 30.475049], [-97.800235, 30.47551], [-97.80074, 30.476183], [-97.803244, 30.479365], [-97.803354, 30.479502], [-97.803824, 30.480072], [-97.804685, 30.481164], [-97.805142, 30.481762], [-97.805549, 30.482367], [-97.805752, 30.482786], [-97.807203, 30.48603], [-97.808438, 30.488854], [-97.808507, 30.489015], [-97.808179, 30.489146], [-97.807983, 30.489194], [-97.807728, 30.489241], [-97.807499, 30.489286], [-97.807342, 30.489349], [-97.807089, 30.489537], [-97.806936, 30.489693], [-97.806856, 30.489904], [-97.806891, 30.4901], [-97.807108, 30.490285], [-97.807404, 30.490434], [-97.807592, 30.490512], [-97.80789, 30.490601], [-97.808103, 30.490624], [-97.808373, 30.490522], [-97.808637, 30.490513], [-97.808903, 30.490629], [-97.809075, 30.490957], [-97.809187, 30.491528], [-97.809103, 30.491884], [-97.808885, 30.49221], [-97.808652, 30.492233], [-97.808396, 30.492247], [-97.80803, 30.492234], [-97.807687, 30.492186], [-97.807482, 30.492193], [-97.80722, 30.492298], [-97.80698, 30.492549], [-97.806898, 30.492693], [-97.806754, 30.493205], [-97.806711, 30.493347], [-97.806559, 30.493707], [-97.806379, 30.494025], [-97.806079, 30.494083], [-97.806054, 30.494297], [-97.806194, 30.494464], [-97.80626, 30.494716], [-97.80624, 30.494892], [-97.806134, 30.495123], [-97.806032, 30.495242], [-97.805893, 30.495372], [-97.805735, 30.495503], [-97.805531, 30.495692], [-97.805352, 30.495812], [-97.804794, 30.495933], [-97.804576, 30.495997], [-97.804395, 30.495988], [-97.803734, 30.496094], [-97.803532, 30.496156], [-97.803358, 30.496232], [-97.80303, 30.49641], [-97.802858, 30.496472], [-97.802471, 30.496674], [-97.801978, 30.496859], [-97.801632, 30.496919], [-97.801403, 30.497068], [-97.801177, 30.497185], [-97.800884, 30.497193], [-97.800594, 30.497289], [-97.800329, 30.497424], [-97.800024, 30.497599], [-97.799843, 30.497788], [-97.799708, 30.497909], [-97.799569, 30.498], [-97.799445, 30.49816], [-97.799265, 30.498321], [-97.798972, 30.498522], [-97.79883, 30.49869], [-97.798674, 30.498736], [-97.798502, 30.498867], [-97.798285, 30.499196], [-97.7981, 30.499288], [-97.797869, 30.49938], [-97.797687, 30.499621], [-97.797545, 30.499822], [-97.797424, 30.500007], [-97.7973, 30.500227], [-97.797149, 30.500554], [-97.796996, 30.500845], [-97.796872, 30.501063], [-97.796715, 30.501453], [-97.796508, 30.501628], [-97.796349, 30.501911], [-97.796208, 30.502158], [-97.796123, 30.502322], [-97.796071, 30.502475], [-97.795929, 30.502683], [-97.79575, 30.502845], [-97.795619, 30.502944], [-97.795426, 30.503144], [-97.795247, 30.503261], [-97.795072, 30.503324], [-97.794898, 30.503417], [-97.794699, 30.503528], [-97.794499, 30.503654], [-97.794267, 30.503776], [-97.794004, 30.503897], [-97.793743, 30.503941], [-97.793579, 30.503976], [-97.793432, 30.504056], [-97.793228, 30.504231], [-97.792999, 30.504364], [-97.792784, 30.504505], [-97.792624, 30.504659], [-97.792343, 30.504835], [-97.792155, 30.504982], [-97.791957, 30.505116], [-97.7918, 30.505168], [-97.791552, 30.505276], [-97.791301, 30.50537], [-97.791105, 30.50544], [-97.790801, 30.505522], [-97.790502, 30.505596], [-97.790197, 30.50565], [-97.790033, 30.505749], [-97.789787, 30.505774], [-97.789528, 30.50578], [-97.789285, 30.505742], [-97.78911, 30.505714], [-97.788789, 30.505642], [-97.788531, 30.505579], [-97.788357, 30.505411], [-97.788207, 30.505234], [-97.78791, 30.505195], [-97.787599, 30.505217], [-97.787235, 30.505171], [-97.787079, 30.505124], [-97.786929, 30.505063], [-97.78663, 30.504983], [-97.786448, 30.504946], [-97.786164, 30.504897], [-97.78601, 30.504825], [-97.785759, 30.504702], [-97.785596, 30.504646], [-97.785437, 30.504594], [-97.785169, 30.504489], [-97.784937, 30.504421], [-97.784683, 30.504356], [-97.784525, 30.504314], [-97.784371, 30.504273], [-97.784094, 30.504226], [-97.78394, 30.504182], [-97.783449, 30.503955], [-97.783186, 30.503817], [-97.782929, 30.503688], [-97.782422, 30.50364], [-97.782231, 30.503664], [-97.782046, 30.503693], [-97.781716, 30.503752], [-97.781398, 30.503886], [-97.781241, 30.503944], [-97.780973, 30.503971], [-97.780713, 30.503974], [-97.780362, 30.503956], [-97.779758, 30.503892], [-97.779475, 30.503848], [-97.779254, 30.503813], [-97.77892, 30.503766], [-97.778737, 30.503707], [-97.778271, 30.50361], [-97.777862, 30.503574], [-97.777573, 30.503574], [-97.77731, 30.50358], [-97.776972, 30.503617], [-97.776617, 30.50367], [-97.776288, 30.503749], [-97.776122, 30.503825], [-97.775878, 30.50401], [-97.775654, 30.504196], [-97.775551, 30.504304], [-97.775238, 30.504974], [-97.775064, 30.505402], [-97.774907, 30.50568], [-97.774825, 30.505799], [-97.774717, 30.505929], [-97.774556, 30.506069], [-97.774282, 30.506195], [-97.77385, 30.506264], [-97.773587, 30.50625], [-97.773381, 30.506133], [-97.772719, 30.505518], [-97.772501, 30.505348], [-97.772277, 30.505234], [-97.772016, 30.505209], [-97.771856, 30.505242], [-97.77151, 30.505384], [-97.771147, 30.505566], [-97.770702, 30.505813], [-97.769913, 30.506276], [-97.769519, 30.506414], [-97.769347, 30.506485], [-97.769008, 30.506736], [-97.768489, 30.507177], [-97.768265, 30.507357], [-97.767956, 30.50759], [-97.767739, 30.507729], [-97.767479, 30.507817], [-97.76732, 30.507839], [-97.767142, 30.507843], [-97.766699, 30.507801], [-97.766017, 30.508217], [-97.765784, 30.508341], [-97.765327, 30.508517], [-97.765099, 30.5086], [-97.764949, 30.508693], [-97.764812, 30.508773], [-97.764537, 30.508856], [-97.764288, 30.508875], [-97.76411, 30.508861], [-97.763835, 30.508836], [-97.763597, 30.508859], [-97.763115, 30.508981], [-97.762944, 30.509022], [-97.762679, 30.509047], [-97.762473, 30.509067], [-97.762141, 30.509127], [-97.761923, 30.509147], [-97.76164, 30.509108], [-97.761487, 30.50907], [-97.761254, 30.50898], [-97.761024, 30.508843], [-97.760892, 30.50875], [-97.76066, 30.508607], [-97.760417, 30.508589], [-97.760133, 30.508633], [-97.75988, 30.508636], [-97.759714, 30.508622], [-97.759428, 30.508602], [-97.759213, 30.50859], [-97.759001, 30.508651], [-97.758749, 30.508756], [-97.758578, 30.508698], [-97.758373, 30.508694], [-97.758171, 30.508791], [-97.758045, 30.508904], [-97.757935, 30.509004], [-97.757835, 30.50909], [-97.757801, 30.50912], [-97.757661, 30.509301], [-97.757558, 30.509544], [-97.75743, 30.509775], [-97.757322, 30.50999], [-97.75726, 30.510203], [-97.757156, 30.510377], [-97.757037, 30.510504], [-97.756915, 30.510658], [-97.756754, 30.51085], [-97.756702, 30.511028], [-97.756618, 30.511153], [-97.756523, 30.511313], [-97.756431, 30.511433], [-97.75629, 30.511658], [-97.756199, 30.51186], [-97.756178, 30.512077], [-97.756114, 30.512317], [-97.756041, 30.512453], [-97.755968, 30.5126], [-97.755828, 30.512804], [-97.755669, 30.512991], [-97.755459, 30.513173], [-97.755278, 30.513315], [-97.755043, 30.513512], [-97.754893, 30.513665], [-97.754767, 30.513767], [-97.75459, 30.513874], [-97.754464, 30.514036], [-97.754245, 30.514156], [-97.754036, 30.514245], [-97.753791, 30.514386], [-97.753532, 30.514543], [-97.753221, 30.514616], [-97.753003, 30.514675], [-97.752773, 30.514753], [-97.752533, 30.514869], [-97.752305, 30.514969], [-97.752079, 30.515039], [-97.751831, 30.515125], [-97.751583, 30.515202], [-97.75131, 30.515337], [-97.751168, 30.515422], [-97.751015, 30.515515], [-97.750636, 30.515703], [-97.750394, 30.515838], [-97.750144, 30.515996], [-97.749963, 30.516099], [-97.74966, 30.516275], [-97.749476, 30.51637], [-97.749253, 30.516522], [-97.749127, 30.516611], [-97.748965, 30.516756], [-97.748807, 30.51681], [-97.748669, 30.516893], [-97.74847, 30.51698], [-97.748122, 30.517179], [-97.747885, 30.517334], [-97.746905, 30.517993], [-97.746633, 30.518211], [-97.74645, 30.518309], [-97.746207, 30.518527], [-97.746058, 30.518653], [-97.74585, 30.518896], [-97.745028, 30.519061], [-97.740252, 30.51935], [-97.737745, 30.520135], [-97.737127, 30.5205], [-97.735967, 30.521128], [-97.735119, 30.521356], [-97.735994, 30.520279], [-97.736243, 30.520276], [-97.736506, 30.520168], [-97.736747, 30.519917], [-97.736898, 30.519642], [-97.737214, 30.519261], [-97.737457, 30.51906], [-97.73793, 30.518739], [-97.738057, 30.518634], [-97.738138, 30.51851], [-97.737933, 30.517972], [-97.736958, 30.515735], [-97.736609, 30.514911], [-97.737523, 30.514638], [-97.738382, 30.514378], [-97.741033, 30.513584], [-97.740777, 30.512804], [-97.740517, 30.512061], [-97.740245, 30.511354], [-97.738801, 30.511067], [-97.736916, 30.51074], [-97.736949, 30.510243], [-97.737101, 30.509572], [-97.7374, 30.508327], [-97.737476, 30.507954], [-97.737576, 30.50767], [-97.737696, 30.507216], [-97.737871, 30.506763], [-97.738064, 30.506285], [-97.738245, 30.505855], [-97.738756, 30.504891], [-97.738817, 30.504758], [-97.738983, 30.504492], [-97.740041, 30.502885], [-97.74043, 30.502353], [-97.740531, 30.502199], [-97.740768, 30.501689], [-97.740874, 30.501081], [-97.7409, 30.500644], [-97.740875, 30.500245], [-97.740832, 30.500073], [-97.740732, 30.499804], [-97.740636, 30.499483], [-97.740481, 30.499252], [-97.740145, 30.498739], [-97.739079, 30.497582], [-97.738429, 30.496859], [-97.737512, 30.495916], [-97.737388, 30.495829], [-97.737049, 30.495596], [-97.736868, 30.495491], [-97.736716, 30.495408], [-97.736267, 30.495226], [-97.735863, 30.495124], [-97.735384, 30.495048], [-97.734949, 30.495023], [-97.7346, 30.495024], [-97.733427, 30.495064], [-97.731343, 30.495137], [-97.730267, 30.495187], [-97.729974, 30.495192], [-97.729538, 30.49518], [-97.729184, 30.495132], [-97.728693, 30.495004], [-97.728217, 30.494793], [-97.727814, 30.494595], [-97.727108, 30.494226], [-97.725796, 30.493534], [-97.713305, 30.486585], [-97.710838, 30.485374], [-97.709963, 30.484688], [-97.709841, 30.484548], [-97.709727, 30.484438], [-97.709581, 30.48429], [-97.70937, 30.484131], [-97.709256, 30.483903], [-97.709192, 30.483754], [-97.709114, 30.48348], [-97.709119, 30.483194], [-97.709174, 30.482953], [-97.70926, 30.482726], [-97.709299, 30.482438], [-97.709289, 30.482281], [-97.709252, 30.482143], [-97.709278, 30.481858], [-97.709255, 30.481637], [-97.709222, 30.481482], [-97.709222, 30.481257], [-97.709302, 30.480975], [-97.709358, 30.480767], [-97.709407, 30.480526], [-97.709375, 30.480295], [-97.709336, 30.480063], [-97.709295, 30.479878], [-97.709276, 30.479621], [-97.709221, 30.479392], [-97.709024, 30.479132], [-97.708789, 30.478929], [-97.708401, 30.478484], [-97.708193, 30.478307], [-97.707987, 30.478025], [-97.707915, 30.477712], [-97.707923, 30.477413], [-97.707845, 30.477109], [-97.707722, 30.476864], [-97.707658, 30.476236], [-97.70768, 30.475667], [-97.707692, 30.475205], [-97.707659, 30.47505], [-97.707539, 30.474902], [-97.707397, 30.474825]]]]
    },
    "properties": {
      "neighbourhood": "78717",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-97.82331, 30.23486], [-97.821215, 30.233862], [-97.820708, 30.233618], [-97.820266, 30.233447], [-97.819798, 30.233306], [-97.819322, 30.233189], [-97.818777, 30.233105], [-97.81835, 30.233085], [-97.818364, 30.232931], [-97.818417, 30.232638], [-97.8185, 30.232384], [-97.818599, 30.232185], [-97.82029, 30.229542], [-97.821968, 30.226899], [-97.822691, 30.225802], [-97.823418, 30.224703], [-97.824215, 30.223494], [-97.82475, 30.222683], [-97.825685, 30.221191], [-97.826567, 30.219784], [-97.827002, 30.219127], [-97.827637, 30.218105], [-97.827995, 30.217556], [-97.829725, 30.214854], [-97.830329, 30.213853], [-97.830537, 30.213527], [-97.830908, 30.21293], [-97.831205, 30.212471], [-97.83157, 30.211873], [-97.832079, 30.211077], [-97.832349, 30.210719], [-97.832637, 30.210373], [-97.833011, 30.209896], [-97.83334, 30.209454], [-97.833669, 30.208976], [-97.834086, 30.208327], [-97.83443, 30.207795], [-97.834859, 30.207124], [-97.835196, 30.206608], [-97.835646, 30.205902], [-97.836031, 30.205252], [-97.836363, 30.204697], [-97.836682, 30.204156], [-97.837119, 30.20345], [-97.837748, 30.202419], [-97.838205, 30.2017], [-97.838754, 30.200825], [-97.839356, 30.19986], [-97.840163, 30.198564], [-97.841135, 30.197089], [-97.842125, 30.19556], [-97.842214, 30.19529], [-97.842852, 30.194477], [-97.843769, 30.193048], [-97.844658, 30.191624], [-97.845452, 30.190391], [-97.846484, 30.188761], [-97.847501, 30.187161], [-97.848266, 30.185952], [-97.849142, 30.184553], [-97.849806, 30.183526], [-97.850008, 30.1832], [-97.850424, 30.182572], [-97.850856, 30.181926], [-97.851254, 30.181315], [-97.851974, 30.180191], [-97.852817, 30.17887], [-97.853139, 30.17837], [-97.853482, 30.177824], [-97.853907, 30.177167], [-97.854514, 30.1762], [-97.855021, 30.175437], [-97.855472, 30.175506], [-97.856872, 30.175695], [-97.85711, 30.175722], [-97.857362, 30.17576], [-97.85762, 30.175756], [-97.857782, 30.175727], [-97.858263, 30.175576], [-97.858475, 30.17552], [-97.858653, 30.175512], [-97.858928, 30.175562], [-97.859107, 30.17565], [-97.859295, 30.175789], [-97.859215, 30.175969], [-97.859027, 30.176226], [-97.858829, 30.176412], [-97.858622, 30.176681], [-97.85854, 30.176814], [-97.858406, 30.176993], [-97.858368, 30.177256], [-97.858407, 30.177392], [-97.858543, 30.177611], [-97.858652, 30.177737], [-97.858768, 30.177833], [-97.859029, 30.178036], [-97.859182, 30.178234], [-97.859285, 30.178377], [-97.859558, 30.178687], [-97.859845, 30.178822], [-97.860005, 30.178949], [-97.860197, 30.179096], [-97.860417, 30.179254], [-97.860744, 30.179535], [-97.860937, 30.179745], [-97.861089, 30.179822], [-97.861266, 30.180032], [-97.861497, 30.180168], [-97.861675, 30.180177], [-97.861908, 30.180319], [-97.862089, 30.180513], [-97.862238, 30.180637], [-97.862489, 30.180837], [-97.862654, 30.18098], [-97.862894, 30.181219], [-97.86303, 30.181403], [-97.863287, 30.181738], [-97.863375, 30.181877], [-97.863435, 30.18201], [-97.863514, 30.182138], [-97.863606, 30.182404], [-97.863663, 30.182564], [-97.863716, 30.182722], [-97.863782, 30.182875], [-97.863883, 30.183185], [-97.863909, 30.183323], [-97.863895, 30.183606], [-97.863845, 30.183737], [-97.863696, 30.184017], [-97.863558, 30.184268], [-97.863473, 30.184395], [-97.86337, 30.184531], [-97.86319, 30.184775], [-97.86306, 30.184858], [-97.862906, 30.184987], [-97.862911, 30.185223], [-97.862961, 30.185458], [-97.862596, 30.185588], [-97.862456, 30.185663], [-97.862236, 30.185846], [-97.86208, 30.185988], [-97.861971, 30.186113], [-97.861721, 30.186361], [-97.861525, 30.186591], [-97.861393, 30.186756], [-97.861251, 30.186965], [-97.86114, 30.187199], [-97.86107, 30.187327], [-97.860999, 30.187576], [-97.86095, 30.187732], [-97.86087, 30.187865], [-97.860801, 30.188098], [-97.860778, 30.188235], [-97.86081, 30.188373], [-97.861029, 30.188594], [-97.861271, 30.188704], [-97.861359, 30.188829], [-97.861496, 30.188978], [-97.861591, 30.189089], [-97.861698, 30.189221], [-97.861893, 30.189466], [-97.862035, 30.189634], [-97.862223, 30.189825], [-97.862366, 30.190031], [-97.862454, 30.19033], [-97.862655, 30.190499], [-97.862826, 30.190571], [-97.863139, 30.19061], [-97.863444, 30.190613], [-97.863697, 30.19061], [-97.864012, 30.19058], [-97.864199, 30.190542], [-97.864363, 30.190466], [-97.864517, 30.190394], [-97.864665, 30.19032], [-97.864861, 30.190258], [-97.865147, 30.190332], [-97.865453, 30.190399], [-97.865701, 30.190549], [-97.865865, 30.190693], [-97.865965, 30.190799], [-97.866053, 30.190927], [-97.866085, 30.191063], [-97.866149, 30.19135], [-97.866221, 30.191599], [-97.866251, 30.19185], [-97.866237, 30.192014], [-97.86621, 30.192377], [-97.866189, 30.192528], [-97.866112, 30.192683], [-97.866022, 30.192871], [-97.865886, 30.193157], [-97.865742, 30.193372], [-97.865711, 30.193605], [-97.865685, 30.1938], [-97.865652, 30.194014], [-97.865608, 30.194343], [-97.865524, 30.194594], [-97.865654, 30.194822], [-97.865837, 30.194988], [-97.865956, 30.195081], [-97.866196, 30.195243], [-97.866451, 30.195401], [-97.866613, 30.195473], [-97.866788, 30.195537], [-97.867099, 30.195659], [-97.867346, 30.195771], [-97.867706, 30.195901], [-97.867898, 30.195905], [-97.868227, 30.195911], [-97.86855, 30.195975], [-97.868832, 30.195923], [-97.869009, 30.195902], [-97.869282, 30.195937], [-97.868908, 30.196565], [-97.868428, 30.197266], [-97.867964, 30.197958], [-97.867284, 30.198864], [-97.866602, 30.199898], [-97.866088, 30.200807], [-97.866333, 30.200875], [-97.866577, 30.200929], [-97.866875, 30.200973], [-97.867155, 30.201023], [-97.867544, 30.201072], [-97.867844, 30.20111], [-97.868055, 30.201134], [-97.868366, 30.201156], [-97.868727, 30.201166], [-97.868994, 30.201157], [-97.869287, 30.201144], [-97.869675, 30.20111], [-97.870068, 30.201057], [-97.870402, 30.201], [-97.870575, 30.200965], [-97.871298, 30.200814], [-97.871806, 30.200691], [-97.872354, 30.200575], [-97.873041, 30.200473], [-97.873762, 30.200394], [-97.874472, 30.200349], [-97.875091, 30.200326], [-97.87568, 30.200342], [-97.876312, 30.200365], [-97.876957, 30.200411], [-97.877606, 30.200478], [-97.878058, 30.200553], [-97.878781, 30.200713], [-97.879385, 30.200851], [-97.879919, 30.200993], [-97.880723, 30.201256], [-97.881386, 30.201494], [-97.881903, 30.201707], [-97.882506, 30.202013], [-97.88299, 30.202254], [-97.883473, 30.202527], [-97.884007, 30.202848], [-97.884474, 30.203157], [-97.884924, 30.203498], [-97.88542, 30.203912], [-97.886029, 30.204487], [-97.886517, 30.205022], [-97.886872, 30.205469], [-97.88752, 30.206345], [-97.88822, 30.207299], [-97.888672, 30.207904], [-97.889286, 30.208708], [-97.890016, 30.209412], [-97.8904, 30.209777], [-97.891244, 30.210585], [-97.891883, 30.211202], [-97.89219, 30.211511], [-97.892556, 30.211966], [-97.892751, 30.212275], [-97.892959, 30.212705], [-97.893103, 30.213151], [-97.893171, 30.213413], [-97.893233, 30.214], [-97.893228, 30.214539], [-97.893211, 30.215185], [-97.893205, 30.215746], [-97.893233, 30.216187], [-97.893259, 30.216382], [-97.893334, 30.216667], [-97.893457, 30.217038], [-97.893593, 30.217343], [-97.893791, 30.217693], [-97.893986, 30.217967], [-97.894164, 30.218174], [-97.894279, 30.218407], [-97.893619, 30.220064], [-97.893223, 30.22106], [-97.892601, 30.221997], [-97.891305, 30.224106], [-97.888515, 30.228561], [-97.888306, 30.229192], [-97.887136, 30.229142], [-97.886362, 30.22907], [-97.885806, 30.229015], [-97.885693, 30.229015], [-97.885253, 30.229016], [-97.88417, 30.229055], [-97.883642, 30.229131], [-97.883062, 30.229243], [-97.882229, 30.229458], [-97.881486, 30.229714], [-97.880967, 30.22994], [-97.88035, 30.230245], [-97.879434, 30.230785], [-97.877374, 30.231992], [-97.876864, 30.232307], [-97.876493, 30.232536], [-97.875943, 30.232842], [-97.87541, 30.233093], [-97.874957, 30.233304], [-97.874398, 30.233439], [-97.873921, 30.233589], [-97.873596, 30.233671], [-97.873164, 30.233767], [-97.872844, 30.233833], [-97.872548, 30.233882], [-97.871872, 30.23396], [-97.871246, 30.233986], [-97.870862, 30.234001], [-97.870639, 30.234013], [-97.8681, 30.23405], [-97.867622, 30.234054], [-97.867208, 30.234021], [-97.866844, 30.233984], [-97.866354, 30.233947], [-97.866026, 30.233924], [-97.865695, 30.233924], [-97.865419, 30.233954], [-97.86514, 30.234012], [-97.864645, 30.234121], [-97.864031, 30.234309], [-97.8634, 30.234498], [-97.862857, 30.234666], [-97.862003, 30.234917], [-97.861551, 30.235056], [-97.861224, 30.235133], [-97.860785, 30.235218], [-97.860288, 30.235313], [-97.859765, 30.235391], [-97.859368, 30.235432], [-97.858569, 30.235477], [-97.857725, 30.235472], [-97.857732, 30.235197], [-97.857569, 30.235208], [-97.856806, 30.235243], [-97.856286, 30.235288], [-97.854012, 30.235321], [-97.852646, 30.235379], [-97.85153, 30.235457], [-97.849834, 30.235636], [-97.848279, 30.235823], [-97.846222, 30.236099], [-97.844661, 30.236292], [-97.843107, 30.236429], [-97.84178, 30.236491], [-97.840292, 30.236561], [-97.838814, 30.236596], [-97.83521, 30.236592], [-97.832997, 30.236593], [-97.832054, 30.236596], [-97.830388, 30.236577], [-97.829353, 30.236549], [-97.828688, 30.236508], [-97.827976, 30.23642], [-97.827071, 30.236265], [-97.8261, 30.236012], [-97.825524, 30.235825], [-97.824757, 30.23554], [-97.824058, 30.235227], [-97.82331, 30.23486]]]]
    },
    "properties": {
      "neighbourhood": "78749",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-97.843974, 30.393573], [-97.841825, 30.392932], [-97.840706, 30.392607], [-97.840421, 30.392519], [-97.839883, 30.392341], [-97.839375, 30.39224], [-97.839033, 30.39225], [-97.838759, 30.392182], [-97.838323, 30.392165], [-97.835189, 30.392085], [-97.832536, 30.392146], [-97.831835, 30.392052], [-97.831151, 30.391896], [-97.830158, 30.391503], [-97.829213, 30.390975], [-97.827313, 30.389824], [-97.822065, 30.3861], [-97.817735, 30.383058], [-97.816519, 30.382567], [-97.814587, 30.38262], [-97.81322, 30.382268], [-97.811266, 30.381974], [-97.811074, 30.381885], [-97.809166, 30.381009], [-97.807623, 30.379952], [-97.807092, 30.379527], [-97.806713, 30.379222], [-97.806032, 30.378428], [-97.805416, 30.377351], [-97.80491, 30.375732], [-97.804626, 30.374959], [-97.80429, 30.373748], [-97.80297, 30.370958], [-97.801991, 30.369497], [-97.801108, 30.368352], [-97.800121, 30.367615], [-97.798898, 30.367099], [-97.797562, 30.366742], [-97.79715, 30.366341], [-97.796755, 30.365995], [-97.796423, 30.365433], [-97.796002, 30.363348], [-97.795397, 30.362522], [-97.79401, 30.361562], [-97.793432, 30.36075], [-97.79298, 30.3601], [-97.792799, 30.359923], [-97.792664, 30.359813], [-97.792402, 30.35964], [-97.792258, 30.35955], [-97.791999, 30.359445], [-97.791844, 30.359398], [-97.79165, 30.35934], [-97.791493, 30.359312], [-97.791202, 30.359276], [-97.791414, 30.358763], [-97.791708, 30.358221], [-97.792076, 30.357547], [-97.792626, 30.356664], [-97.79309, 30.355919], [-97.793481, 30.355292], [-97.793812, 30.354762], [-97.79532, 30.352448], [-97.796145, 30.351068], [-97.796958, 30.349896], [-97.797699, 30.350405], [-97.797998, 30.350612], [-97.79905, 30.35121], [-97.799951, 30.351608], [-97.800199, 30.351714], [-97.801787, 30.352276], [-97.802753, 30.352403], [-97.804028, 30.352392], [-97.804938, 30.352176], [-97.80583, 30.351875], [-97.806733, 30.351373], [-97.807277, 30.350944], [-97.807503, 30.350766], [-97.808555, 30.349726], [-97.809276, 30.348928], [-97.809511, 30.348669], [-97.810348, 30.347313], [-97.811015, 30.346168], [-97.81127, 30.345832], [-97.811972, 30.344905], [-97.812775, 30.343783], [-97.813315, 30.343026], [-97.814105, 30.342087], [-97.815054, 30.340956], [-97.818021, 30.337791], [-97.819524, 30.33628], [-97.822034, 30.333084], [-97.8242, 30.330329], [-97.824356, 30.330184], [-97.825533, 30.329093], [-97.827737, 30.327046], [-97.829234, 30.326036], [-97.830478, 30.325221], [-97.832347, 30.324375], [-97.834233, 30.323947], [-97.837796, 30.323694], [-97.839983, 30.324218], [-97.841567, 30.324961], [-97.841893, 30.325317], [-97.842947, 30.32647], [-97.843812, 30.328019], [-97.843987, 30.328727], [-97.844296, 30.329973], [-97.844683, 30.332967], [-97.844708, 30.333155], [-97.845107, 30.336779], [-97.845133, 30.337286], [-97.84536, 30.339589], [-97.845499, 30.340318], [-97.845741, 30.341594], [-97.846141, 30.343615], [-97.846397, 30.344832], [-97.846822, 30.345872], [-97.847213, 30.346773], [-97.847346, 30.347076], [-97.847918, 30.347961], [-97.849411, 30.35013], [-97.84981, 30.350622], [-97.850772, 30.351408], [-97.851645, 30.352112], [-97.853388, 30.353158], [-97.853843, 30.353387], [-97.85493, 30.353936], [-97.85621, 30.354459], [-97.857352, 30.354819], [-97.858622, 30.354951], [-97.859527, 30.354916], [-97.860765, 30.354725], [-97.861864, 30.354317], [-97.862643, 30.353994], [-97.863047, 30.353823], [-97.863887, 30.353317], [-97.863946, 30.353508], [-97.86413, 30.35388], [-97.86413, 30.35408], [-97.864011, 30.354221], [-97.864042, 30.354439], [-97.863973, 30.354641], [-97.863956, 30.354781], [-97.863901, 30.354992], [-97.863902, 30.355168], [-97.863796, 30.355347], [-97.863634, 30.355465], [-97.863522, 30.355636], [-97.863483, 30.355814], [-97.863521, 30.35603], [-97.863441, 30.35624], [-97.863348, 30.356376], [-97.863166, 30.356515], [-97.863002, 30.356661], [-97.862885, 30.356867], [-97.862884, 30.357082], [-97.863109, 30.357171], [-97.870738, 30.382881], [-97.869194, 30.385265], [-97.867887, 30.387283], [-97.863734, 30.393695], [-97.870614, 30.392661], [-97.870367, 30.39325], [-97.866885, 30.393437], [-97.866864, 30.39477], [-97.863686, 30.395496], [-97.85877, 30.396617], [-97.854068, 30.403691], [-97.85323, 30.403076], [-97.852733, 30.402574], [-97.852529, 30.402342], [-97.852373, 30.402014], [-97.852046, 30.401562], [-97.851785, 30.401145], [-97.851604, 30.400844], [-97.850893, 30.399648], [-97.850298, 30.398641], [-97.849535, 30.397402], [-97.849062, 30.396909], [-97.848817, 30.396615], [-97.847167, 30.395684], [-97.845937, 30.394939], [-97.845536, 30.394588], [-97.845409, 30.394492], [-97.84472, 30.393961], [-97.844257, 30.393697], [-97.843974, 30.393573]]]]
    },
    "properties": {
      "neighbourhood": "78730",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-97.792073, 30.231829], [-97.78922, 30.230466], [-97.78777, 30.229753], [-97.786591, 30.229179], [-97.785824, 30.228845], [-97.785162, 30.228593], [-97.784487, 30.228381], [-97.783835, 30.228214], [-97.783253, 30.228087], [-97.782468, 30.22797], [-97.781836, 30.227905], [-97.781002, 30.227847], [-97.778688, 30.227748], [-97.776685, 30.227676], [-97.775622, 30.227676], [-97.774571, 30.227697], [-97.773914, 30.227714], [-97.773198, 30.227699], [-97.77259, 30.227638], [-97.771948, 30.22754], [-97.771367, 30.227393], [-97.770799, 30.227217], [-97.770267, 30.227], [-97.769806, 30.226804], [-97.769406, 30.226598], [-97.768866, 30.226257], [-97.767963, 30.225647], [-97.76686, 30.224888], [-97.76564, 30.224096], [-97.764596, 30.22338], [-97.763481, 30.222642], [-97.762859, 30.222258], [-97.762142, 30.221848], [-97.761376, 30.22147], [-97.759714, 30.220669], [-97.758204, 30.219965], [-97.757321, 30.219523], [-97.756533, 30.21904], [-97.755679, 30.21839], [-97.755038, 30.217827], [-97.754458, 30.217183], [-97.753971, 30.216634], [-97.753656, 30.216391], [-97.753174, 30.21609], [-97.752642, 30.215892], [-97.752315, 30.215795], [-97.752111, 30.21575], [-97.751878, 30.215709], [-97.751969, 30.215557], [-97.752352, 30.214888], [-97.753635, 30.212736], [-97.754341, 30.211556], [-97.75513, 30.210227], [-97.755794, 30.209083], [-97.756469, 30.208029], [-97.757393, 30.206728], [-97.758439, 30.205379], [-97.760041, 30.203409], [-97.76181, 30.201222], [-97.76351, 30.199139], [-97.765209, 30.197052], [-97.768092, 30.193482], [-97.77021, 30.190821], [-97.771858, 30.188632], [-97.772295, 30.188019], [-97.772959, 30.186998], [-97.773464, 30.186211], [-97.774327, 30.184927], [-97.775074, 30.183784], [-97.776117, 30.182191], [-97.777475, 30.180111], [-97.777865, 30.179514], [-97.778969, 30.177842], [-97.779896, 30.176438], [-97.781485, 30.17403], [-97.782611, 30.172306], [-97.783758, 30.170563], [-97.784684, 30.169152], [-97.785295, 30.168215], [-97.785736, 30.167558], [-97.786078, 30.167029], [-97.78643, 30.167036], [-97.786978, 30.167069], [-97.788239, 30.167113], [-97.788556, 30.167166], [-97.788516, 30.16829], [-97.788396, 30.168678], [-97.78812, 30.169116], [-97.78775, 30.169499], [-97.785962, 30.170819], [-97.785277, 30.172951], [-97.784913, 30.174156], [-97.784004, 30.177045], [-97.783216, 30.179563], [-97.782767, 30.180967], [-97.781978, 30.183397], [-97.782846, 30.18329], [-97.783822, 30.183233], [-97.784421, 30.182967], [-97.784864, 30.182929], [-97.785464, 30.183131], [-97.786233, 30.183275], [-97.786799, 30.183185], [-97.787261, 30.183056], [-97.788135, 30.18281], [-97.788993, 30.182673], [-97.790775, 30.183294], [-97.791249, 30.183433], [-97.792672, 30.183876], [-97.794086, 30.185224], [-97.794829, 30.185101], [-97.795074, 30.185117], [-97.795375, 30.185448], [-97.795566, 30.185542], [-97.795837, 30.185559], [-97.796279, 30.185554], [-97.797745, 30.185539], [-97.798101, 30.185546], [-97.798283, 30.185566], [-97.799224, 30.185758], [-97.799406, 30.185783], [-97.800495, 30.1858], [-97.80148, 30.185783], [-97.80287, 30.185761], [-97.804423, 30.185679], [-97.809528, 30.185607], [-97.812905, 30.185544], [-97.816306, 30.185927], [-97.819509, 30.187453], [-97.822819, 30.189138], [-97.825248, 30.190432], [-97.82681, 30.188078], [-97.827496, 30.188068], [-97.8315, 30.189996], [-97.83342, 30.190957], [-97.836142, 30.192262], [-97.837564, 30.192991], [-97.840831, 30.194589], [-97.842214, 30.19529], [-97.842125, 30.19556], [-97.841135, 30.197089], [-97.840163, 30.198564], [-97.839356, 30.19986], [-97.838754, 30.200825], [-97.838205, 30.2017], [-97.837748, 30.202419], [-97.837119, 30.20345], [-97.836682, 30.204156], [-97.836363, 30.204697], [-97.836031, 30.205252], [-97.835646, 30.205902], [-97.835196, 30.206608], [-97.834859, 30.207124], [-97.83443, 30.207795], [-97.834086, 30.208327], [-97.833669, 30.208976], [-97.83334, 30.209454], [-97.833011, 30.209896], [-97.832637, 30.210373], [-97.832349, 30.210719], [-97.832079, 30.211077], [-97.83157, 30.211873], [-97.831205, 30.212471], [-97.830908, 30.21293], [-97.830537, 30.213527], [-97.830329, 30.213853], [-97.829725, 30.214854], [-97.827995, 30.217556], [-97.827637, 30.218105], [-97.827002, 30.219127], [-97.826567, 30.219784], [-97.825685, 30.221191], [-97.82475, 30.222683], [-97.824215, 30.223494], [-97.823418, 30.224703], [-97.822691, 30.225802], [-97.821968, 30.226899], [-97.82029, 30.229542], [-97.818599, 30.232185], [-97.8185, 30.232384], [-97.818417, 30.232638], [-97.818364, 30.232931], [-97.81835, 30.233085], [-97.818027, 30.233071], [-97.817677, 30.23308], [-97.816858, 30.233158], [-97.813357, 30.233551], [-97.812447, 30.233626], [-97.811847, 30.233615], [-97.811258, 30.233554], [-97.810735, 30.233463], [-97.810115, 30.233283], [-97.809051, 30.23288], [-97.807929, 30.23244], [-97.806947, 30.23208], [-97.80616, 30.231905], [-97.805496, 30.23182], [-97.804872, 30.231799], [-97.804221, 30.231839], [-97.803426, 30.231966], [-97.802011, 30.232222], [-97.800672, 30.232492], [-97.799564, 30.232773], [-97.798432, 30.233091], [-97.798019, 30.233234], [-97.797699, 30.233401], [-97.797081, 30.233736], [-97.796338, 30.234158], [-97.795666, 30.233716], [-97.795018, 30.233351], [-97.792073, 30.231829]]]]
    },
    "properties": {
      "neighbourhood": "78745",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-97.745979, 30.361377], [-97.745259, 30.361261], [-97.744668, 30.361255], [-97.744187, 30.361259], [-97.74343, 30.361238], [-97.743534, 30.36099], [-97.74371, 30.36057], [-97.743819, 30.360333], [-97.743933, 30.360104], [-97.744007, 30.359951], [-97.744076, 30.359799], [-97.744151, 30.359619], [-97.74423, 30.359439], [-97.744383, 30.359101], [-97.74452, 30.358804], [-97.744682, 30.358461], [-97.744853, 30.358093], [-97.745061, 30.357651], [-97.745208, 30.357338], [-97.74542, 30.356886], [-97.745551, 30.356611], [-97.74567, 30.356357], [-97.745827, 30.356022], [-97.745969, 30.35572], [-97.746142, 30.355357], [-97.746303, 30.355011], [-97.746506, 30.354575], [-97.746642, 30.354284], [-97.746866, 30.353807], [-97.747015, 30.353491], [-97.747198, 30.353104], [-97.747332, 30.352815], [-97.747526, 30.352407], [-97.747677, 30.352082], [-97.747844, 30.351728], [-97.747933, 30.351538], [-97.747998, 30.351399], [-97.748179, 30.351009], [-97.748267, 30.350826], [-97.748512, 30.350301], [-97.748751, 30.349791], [-97.748945, 30.34938], [-97.749299, 30.348636], [-97.749639, 30.347895], [-97.750026, 30.347064], [-97.750362, 30.346355], [-97.750825, 30.345369], [-97.751165, 30.344644], [-97.751584, 30.343745], [-97.752019, 30.342827], [-97.752333, 30.342162], [-97.752774, 30.341214], [-97.753074, 30.340579], [-97.753528, 30.339609], [-97.753912, 30.338803], [-97.754197, 30.338193], [-97.754311, 30.337934], [-97.754375, 30.337775], [-97.754435, 30.33762], [-97.754487, 30.33748], [-97.754543, 30.337344], [-97.754622, 30.337172], [-97.754777, 30.336837], [-97.754969, 30.336415], [-97.75504, 30.336248], [-97.754797, 30.336084], [-97.754302, 30.335816], [-97.753726, 30.335529], [-97.752591, 30.334956], [-97.751533, 30.334563], [-97.750365, 30.334471], [-97.749744, 30.334497], [-97.749731, 30.334282], [-97.749687, 30.334083], [-97.749605, 30.333889], [-97.749497, 30.333722], [-97.749362, 30.333516], [-97.749248, 30.333343], [-97.749177, 30.333212], [-97.749074, 30.333056], [-97.748929, 30.332908], [-97.748785, 30.332759], [-97.748659, 30.33266], [-97.748137, 30.332369], [-97.747984, 30.332294], [-97.747786, 30.332156], [-97.747438, 30.331885], [-97.747292, 30.331733], [-97.747162, 30.331574], [-97.746983, 30.331413], [-97.746847, 30.331298], [-97.746734, 30.331202], [-97.746565, 30.331003], [-97.746422, 30.330767], [-97.746343, 30.330529], [-97.746372, 30.330383], [-97.746593, 30.330162], [-97.746706, 30.330057], [-97.746804, 30.329922], [-97.746898, 30.329789], [-97.746964, 30.329548], [-97.747001, 30.329414], [-97.747005, 30.329167], [-97.747033, 30.328868], [-97.747053, 30.328642], [-97.747066, 30.32848], [-97.747071, 30.328318], [-97.747036, 30.328092], [-97.747016, 30.327869], [-97.747, 30.327695], [-97.746989, 30.327505], [-97.746917, 30.327218], [-97.746808, 30.32699], [-97.746643, 30.326767], [-97.746497, 30.326585], [-97.746366, 30.326459], [-97.746186, 30.326268], [-97.746042, 30.32602], [-97.745977, 30.325818], [-97.74593, 30.325619], [-97.745859, 30.325376], [-97.745824, 30.325177], [-97.74577, 30.324942], [-97.74575, 30.32468], [-97.745753, 30.324515], [-97.745783, 30.324233], [-97.745785, 30.32401], [-97.745792, 30.323856], [-97.745819, 30.323675], [-97.745885, 30.323437], [-97.745919, 30.323237], [-97.745879, 30.323005], [-97.745799, 30.32277], [-97.745699, 30.322575], [-97.745518, 30.322286], [-97.745389, 30.322049], [-97.745288, 30.321767], [-97.745231, 30.321532], [-97.745193, 30.32136], [-97.745162, 30.32122], [-97.745161, 30.321049], [-97.745265, 30.320809], [-97.745344, 30.320679], [-97.745455, 30.320453], [-97.74568, 30.320254], [-97.745909, 30.320058], [-97.746125, 30.320056], [-97.746402, 30.320109], [-97.746789, 30.320243], [-97.746985, 30.320316], [-97.747184, 30.320397], [-97.747367, 30.320535], [-97.747679, 30.320652], [-97.747906, 30.320697], [-97.748194, 30.32078], [-97.748359, 30.320852], [-97.748516, 30.320899], [-97.748919, 30.320943], [-97.74926, 30.320862], [-97.749292, 30.320717], [-97.749324, 30.320481], [-97.749343, 30.320209], [-97.749357, 30.319946], [-97.749325, 30.319736], [-97.749241, 30.319393], [-97.749203, 30.319186], [-97.749121, 30.318929], [-97.749109, 30.318758], [-97.749094, 30.318219], [-97.749133, 30.317977], [-97.74921, 30.317784], [-97.749089, 30.317583], [-97.748896, 30.317299], [-97.748876, 30.317117], [-97.748914, 30.316853], [-97.749041, 30.316419], [-97.749226, 30.316024], [-97.749246, 30.315669], [-97.749184, 30.315368], [-97.749121, 30.315235], [-97.749079, 30.315039], [-97.749111, 30.314847], [-97.749146, 30.314655], [-97.749106, 30.314294], [-97.749079, 30.314076], [-97.749058, 30.313922], [-97.749012, 30.313651], [-97.748987, 30.313516], [-97.748919, 30.313251], [-97.748826, 30.313056], [-97.748715, 30.312911], [-97.748614, 30.31278], [-97.748608, 30.312557], [-97.748668, 30.31236], [-97.748712, 30.312218], [-97.748761, 30.31204], [-97.748785, 30.311804], [-97.748866, 30.311511], [-97.748925, 30.311199], [-97.748962, 30.31098], [-97.748977, 30.310829], [-97.748956, 30.310451], [-97.74893, 30.310148], [-97.748921, 30.310008], [-97.748907, 30.309766], [-97.748902, 30.309568], [-97.748853, 30.309308], [-97.7488, 30.309084], [-97.748834, 30.308906], [-97.748745, 30.308695], [-97.748648, 30.30846], [-97.748542, 30.308235], [-97.748464, 30.30806], [-97.748298, 30.307655], [-97.748237, 30.307497], [-97.748145, 30.307358], [-97.747845, 30.307159], [-97.747806, 30.30688], [-97.747658, 30.306567], [-97.747537, 30.306333], [-97.747462, 30.306128], [-97.747466, 30.305911], [-97.74755, 30.305687], [-97.747711, 30.305514], [-97.747925, 30.305356], [-97.748283, 30.305045], [-97.748459, 30.304919], [-97.748807, 30.304769], [-97.749259, 30.304987], [-97.749308, 30.305208], [-97.749319, 30.305362], [-97.749223, 30.305735], [-97.749298, 30.305934], [-97.749471, 30.306105], [-97.749868, 30.306465], [-97.750227, 30.306783], [-97.750469, 30.307039], [-97.750777, 30.307196], [-97.751166, 30.307468], [-97.751601, 30.307801], [-97.752614, 30.308097], [-97.754291, 30.308482], [-97.754623, 30.30858], [-97.754803, 30.308586], [-97.755507, 30.308677], [-97.755887, 30.308735], [-97.756332, 30.308832], [-97.757009, 30.308939], [-97.75718, 30.30897], [-97.75758, 30.309024], [-97.757808, 30.309067], [-97.758273, 30.309154], [-97.759327, 30.309376], [-97.761624, 30.30995], [-97.762142, 30.310208], [-97.762674, 30.31048], [-97.763122, 30.3108], [-97.763962, 30.311653], [-97.764173, 30.311849], [-97.764822, 30.312239], [-97.766056, 30.312954], [-97.767155, 30.313537], [-97.767355, 30.313654], [-97.767567, 30.313787], [-97.767956, 30.313958], [-97.76904, 30.314529], [-97.770131, 30.314119], [-97.770532, 30.313885], [-97.7716, 30.313164], [-97.772277, 30.312908], [-97.772927, 30.312739], [-97.773834, 30.312598], [-97.774173, 30.312646], [-97.774711, 30.312863], [-97.776765, 30.31366], [-97.776479, 30.313993], [-97.776292, 30.314251], [-97.776207, 30.315269], [-97.776194, 30.315431], [-97.776076, 30.316818], [-97.776024, 30.317994], [-97.776092, 30.319296], [-97.776212, 30.32069], [-97.776296, 30.321674], [-97.776484, 30.322327], [-97.776631, 30.323006], [-97.776797, 30.323483], [-97.77705, 30.324211], [-97.77753, 30.325502], [-97.777935, 30.326528], [-97.778382, 30.327464], [-97.778793, 30.328256], [-97.779384, 30.329348], [-97.779693, 30.329949], [-97.780124, 30.330741], [-97.780716, 30.33168], [-97.781045, 30.332228], [-97.781243, 30.332556], [-97.781899, 30.333645], [-97.781976, 30.333773], [-97.782706, 30.33491], [-97.783103, 30.335561], [-97.784322, 30.337648], [-97.784738, 30.33836], [-97.785074, 30.338936], [-97.786231, 30.340918], [-97.786551, 30.34137], [-97.787387, 30.342384], [-97.78768, 30.342762], [-97.788302, 30.343561], [-97.789689, 30.344826], [-97.791184, 30.346024], [-97.791459, 30.346247], [-97.792353, 30.346856], [-97.7937, 30.347768], [-97.794479, 30.348326], [-97.79486, 30.3486], [-97.795523, 30.349072], [-97.796222, 30.349573], [-97.796596, 30.349756], [-97.796788, 30.349829], [-97.796958, 30.349896], [-97.796145, 30.351068], [-97.79532, 30.352448], [-97.793812, 30.354762], [-97.793481, 30.355292], [-97.79309, 30.355919], [-97.792626, 30.356664], [-97.792076, 30.357547], [-97.791708, 30.358221], [-97.791414, 30.358763], [-97.791202, 30.359276], [-97.791046, 30.359655], [-97.790944, 30.359983], [-97.790759, 30.360582], [-97.790579, 30.361161], [-97.790531, 30.361449], [-97.790389, 30.362026], [-97.790255, 30.362747], [-97.7902, 30.363365], [-97.790154, 30.363881], [-97.790136, 30.364079], [-97.789986, 30.365308], [-97.789897, 30.366038], [-97.789824, 30.366644], [-97.789776, 30.367034], [-97.789481, 30.36777], [-97.789342, 30.368004], [-97.789106, 30.368428], [-97.788983, 30.368652], [-97.788809, 30.368896], [-97.788407, 30.369286], [-97.787992, 30.369688], [-97.787747, 30.369925], [-97.787238, 30.370352], [-97.787002, 30.370551], [-97.786246, 30.371188], [-97.785691, 30.371658], [-97.785449, 30.37186], [-97.784742, 30.372456], [-97.784198, 30.372916], [-97.783941, 30.373133], [-97.78328, 30.37369], [-97.78245, 30.374388], [-97.781574, 30.375127], [-97.781089, 30.375536], [-97.780375, 30.376137], [-97.780135, 30.376339], [-97.779404, 30.376957], [-97.778943, 30.377344], [-97.778293, 30.377892], [-97.777843, 30.378271], [-97.777099, 30.3789], [-97.7764, 30.379488], [-97.775665, 30.380109], [-97.77482, 30.380777], [-97.774536, 30.380999], [-97.773954, 30.381353], [-97.77348, 30.38158], [-97.7727, 30.381991], [-97.771333, 30.382662], [-97.76897, 30.383809], [-97.76758, 30.384482], [-97.766746, 30.38501], [-97.766674, 30.384871], [-97.76645, 30.384433], [-97.766035, 30.383621], [-97.765956, 30.383454], [-97.76587, 30.383249], [-97.765748, 30.382719], [-97.765666, 30.38237], [-97.765627, 30.382139], [-97.765613, 30.381914], [-97.765612, 30.381902], [-97.765571, 30.3817], [-97.765531, 30.381496], [-97.765489, 30.381294], [-97.765449, 30.38109], [-97.765408, 30.380886], [-97.765367, 30.380684], [-97.765327, 30.38048], [-97.765286, 30.380278], [-97.765247, 30.380074], [-97.765206, 30.379869], [-97.765167, 30.379668], [-97.765128, 30.379464], [-97.765089, 30.379259], [-97.765051, 30.379058], [-97.765017, 30.378853], [-97.764996, 30.378647], [-97.764976, 30.37844], [-97.764942, 30.378236], [-97.764882, 30.378039], [-97.764742, 30.377885], [-97.764669, 30.377741], [-97.76464, 30.377688], [-97.764544, 30.37751], [-97.764437, 30.377362], [-97.763947, 30.376684], [-97.763773, 30.376502], [-97.763606, 30.376328], [-97.763416, 30.376145], [-97.763112, 30.375969], [-97.762886, 30.375818], [-97.762625, 30.375742], [-97.762329, 30.375678], [-97.761965, 30.375572], [-97.761681, 30.375505], [-97.761215, 30.37537], [-97.7603, 30.375016], [-97.759811, 30.374769], [-97.759373, 30.374409], [-97.759372, 30.374408], [-97.75937, 30.374406], [-97.759161, 30.374215], [-97.758983, 30.373939], [-97.758105, 30.372309], [-97.758048, 30.372219], [-97.757814, 30.371855], [-97.75768, 30.371751], [-97.757523, 30.37166], [-97.757336, 30.37158], [-97.757225, 30.371533], [-97.755972, 30.370999], [-97.755787, 30.370892], [-97.755677, 30.370828], [-97.755472, 30.370635], [-97.755285, 30.370459], [-97.755105, 30.370195], [-97.75437, 30.368689], [-97.753821, 30.368191], [-97.752957, 30.367269], [-97.752425, 30.366882], [-97.750976, 30.366154], [-97.750226, 30.365586], [-97.749861, 30.364998], [-97.74945, 30.364039], [-97.749364, 30.363838], [-97.749059, 30.363491], [-97.748249, 30.362785], [-97.747547, 30.362262], [-97.747038, 30.36188], [-97.74647, 30.361539], [-97.745979, 30.361377]]]]
    },
    "properties": {
      "neighbourhood": "78731",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-97.8315, 30.189996], [-97.827496, 30.188068], [-97.82681, 30.188078], [-97.825248, 30.190432], [-97.822819, 30.189138], [-97.819509, 30.187453], [-97.816306, 30.185927], [-97.812905, 30.185544], [-97.809528, 30.185607], [-97.804423, 30.185679], [-97.80287, 30.185761], [-97.80148, 30.185783], [-97.800495, 30.1858], [-97.799406, 30.185783], [-97.799224, 30.185758], [-97.798283, 30.185566], [-97.798101, 30.185546], [-97.797745, 30.185539], [-97.796279, 30.185554], [-97.795837, 30.185559], [-97.795566, 30.185542], [-97.795375, 30.185448], [-97.795074, 30.185117], [-97.794829, 30.185101], [-97.794086, 30.185224], [-97.792672, 30.183876], [-97.791249, 30.183433], [-97.790775, 30.183294], [-97.788993, 30.182673], [-97.788135, 30.18281], [-97.787261, 30.183056], [-97.786799, 30.183185], [-97.786233, 30.183275], [-97.785464, 30.183131], [-97.784864, 30.182929], [-97.784421, 30.182967], [-97.783822, 30.183233], [-97.782846, 30.18329], [-97.781978, 30.183397], [-97.782767, 30.180967], [-97.783216, 30.179563], [-97.784004, 30.177045], [-97.784913, 30.174156], [-97.785277, 30.172951], [-97.785962, 30.170819], [-97.78775, 30.169499], [-97.78812, 30.169116], [-97.788396, 30.168678], [-97.788516, 30.16829], [-97.788556, 30.167166], [-97.788239, 30.167113], [-97.786978, 30.167069], [-97.78643, 30.167036], [-97.786078, 30.167029], [-97.786368, 30.166578], [-97.786843, 30.165826], [-97.787255, 30.165105], [-97.787649, 30.164376], [-97.788074, 30.163532], [-97.788471, 30.162679], [-97.788826, 30.161844], [-97.789216, 30.160851], [-97.789467, 30.160154], [-97.789731, 30.159318], [-97.790055, 30.158219], [-97.790216, 30.157642], [-97.791012, 30.154954], [-97.791557, 30.1531], [-97.792266, 30.150683], [-97.792667, 30.14942], [-97.793352, 30.147528], [-97.794226, 30.145089], [-97.79489, 30.143279], [-97.795575, 30.141373], [-97.796012, 30.140174], [-97.796123, 30.139877], [-97.796615, 30.138627], [-97.796969, 30.137712], [-97.797707, 30.135849], [-97.797864, 30.135446], [-97.798857, 30.135761], [-97.799666, 30.135623], [-97.80125, 30.135352], [-97.801688, 30.135251], [-97.802443, 30.135076], [-97.803511, 30.134826], [-97.803885, 30.134697], [-97.804421, 30.134512], [-97.804519, 30.13447], [-97.805303, 30.134109], [-97.805916, 30.133608], [-97.806091, 30.133486], [-97.806807, 30.132983], [-97.807148, 30.132864], [-97.806946, 30.134348], [-97.806897, 30.13499], [-97.806614, 30.135142], [-97.806466, 30.135272], [-97.80637, 30.13538], [-97.80624, 30.135529], [-97.806008, 30.135868], [-97.805758, 30.136202], [-97.805419, 30.13667], [-97.805116, 30.137086], [-97.804897, 30.137378], [-97.804612, 30.13777], [-97.804362, 30.138092], [-97.804197, 30.138276], [-97.804032, 30.138469], [-97.803888, 30.138714], [-97.803725, 30.138976], [-97.803637, 30.139345], [-97.803565, 30.13957], [-97.803479, 30.139711], [-97.803327, 30.139985], [-97.802345, 30.141571], [-97.803402, 30.14209], [-97.804436, 30.142602], [-97.804033, 30.143221], [-97.803881, 30.143426], [-97.804799, 30.143662], [-97.805736, 30.143876], [-97.808562, 30.144581], [-97.80966, 30.144869], [-97.81042, 30.144796], [-97.810821, 30.144614], [-97.811183, 30.144374], [-97.8115, 30.144004], [-97.812733, 30.142529], [-97.813009, 30.142301], [-97.813191, 30.142175], [-97.813344, 30.14206], [-97.81363, 30.141999], [-97.814337, 30.141898], [-97.81551, 30.142039], [-97.817828, 30.141994], [-97.818595, 30.141896], [-97.818898, 30.141842], [-97.820594, 30.141421], [-97.822012, 30.141023], [-97.823233, 30.140717], [-97.828529, 30.140636], [-97.829665, 30.140543], [-97.830321, 30.140602], [-97.831403, 30.140582], [-97.832968, 30.140522], [-97.835742, 30.140469], [-97.837793, 30.140454], [-97.838691, 30.140736], [-97.840158, 30.14129], [-97.840673, 30.141476], [-97.84222, 30.142468], [-97.842648, 30.142697], [-97.843245, 30.142802], [-97.844088, 30.142648], [-97.846623, 30.140984], [-97.8475, 30.142021], [-97.847165, 30.1423], [-97.846933, 30.142631], [-97.846889, 30.142958], [-97.846939, 30.144661], [-97.847103, 30.149461], [-97.848351, 30.149433], [-97.850264, 30.14939], [-97.85206, 30.149351], [-97.854901, 30.148468], [-97.856039, 30.150861], [-97.85689, 30.15267], [-97.857577, 30.153858], [-97.857841, 30.154185], [-97.858189, 30.154593], [-97.858885, 30.155429], [-97.85947, 30.156194], [-97.859585, 30.156347], [-97.859708, 30.156542], [-97.859793, 30.156734], [-97.85985, 30.156947], [-97.859889, 30.157126], [-97.859897, 30.157283], [-97.85995, 30.158302], [-97.859977, 30.158841], [-97.86002, 30.159684], [-97.860076, 30.161558], [-97.860159, 30.16302], [-97.860191, 30.164126], [-97.860206, 30.165245], [-97.860269, 30.166338], [-97.860345, 30.167421], [-97.860154, 30.168459], [-97.859809, 30.169105], [-97.859351, 30.170006], [-97.858617, 30.170564], [-97.858056, 30.170828], [-97.857637, 30.171378], [-97.857373, 30.17175], [-97.857012, 30.172395], [-97.856437, 30.17319], [-97.856017, 30.173795], [-97.855021, 30.175437], [-97.854514, 30.1762], [-97.853907, 30.177167], [-97.853482, 30.177824], [-97.853139, 30.17837], [-97.852817, 30.17887], [-97.851974, 30.180191], [-97.851254, 30.181315], [-97.850856, 30.181926], [-97.850424, 30.182572], [-97.850008, 30.1832], [-97.849806, 30.183526], [-97.849142, 30.184553], [-97.848266, 30.185952], [-97.847501, 30.187161], [-97.846484, 30.188761], [-97.845452, 30.190391], [-97.844658, 30.191624], [-97.843769, 30.193048], [-97.842852, 30.194477], [-97.842214, 30.19529], [-97.840831, 30.194589], [-97.837564, 30.192991], [-97.836142, 30.192262], [-97.83342, 30.190957], [-97.8315, 30.189996]]]]
    },
    "properties": {
      "neighbourhood": "78748",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-97.721378, 30.473581], [-97.720912, 30.473093], [-97.72062, 30.472773], [-97.72045, 30.472564], [-97.720297, 30.472343], [-97.720167, 30.472126], [-97.720059, 30.471917], [-97.719974, 30.471718], [-97.719903, 30.471524], [-97.719842, 30.471319], [-97.719795, 30.471109], [-97.719758, 30.470874], [-97.719739, 30.47064], [-97.719737, 30.470404], [-97.719744, 30.470192], [-97.719757, 30.469978], [-97.719803, 30.46942], [-97.719824, 30.469151], [-97.719888, 30.468424], [-97.719939, 30.467828], [-97.719992, 30.467216], [-97.720055, 30.466485], [-97.720109, 30.46587], [-97.720171, 30.465154], [-97.720213, 30.464673], [-97.720244, 30.464316], [-97.720258, 30.464157], [-97.720273, 30.464001], [-97.720326, 30.463389], [-97.720377, 30.462806], [-97.720424, 30.462271], [-97.720481, 30.461618], [-97.720546, 30.460838], [-97.720598, 30.46025], [-97.720646, 30.459693], [-97.720677, 30.459339], [-97.720743, 30.458559], [-97.72078, 30.458175], [-97.720816, 30.457881], [-97.720844, 30.457689], [-97.720917, 30.457262], [-97.721002, 30.45676], [-97.721128, 30.456034], [-97.721177, 30.455763], [-97.721223, 30.455494], [-97.721263, 30.455222], [-97.721286, 30.455039], [-97.721294, 30.454791], [-97.725271, 30.452009], [-97.725617, 30.451551], [-97.725943, 30.450868], [-97.725981, 30.450445], [-97.725892, 30.449772], [-97.725613, 30.449107], [-97.726252, 30.449095], [-97.727787, 30.448504], [-97.728487, 30.448234], [-97.728477, 30.448184], [-97.738619, 30.445093], [-97.739756, 30.444747], [-97.742896, 30.443598], [-97.746352, 30.442334], [-97.752521, 30.440005], [-97.753067, 30.439799], [-97.753498, 30.439636], [-97.754234, 30.439386], [-97.754785, 30.439199], [-97.755104, 30.439091], [-97.75547, 30.438969], [-97.758003, 30.438148], [-97.760445, 30.437356], [-97.761636, 30.436974], [-97.762594, 30.436667], [-97.763914, 30.436243], [-97.767011, 30.43525], [-97.769056, 30.434488], [-97.769069, 30.434481], [-97.769569, 30.434221], [-97.769833, 30.434402], [-97.77275, 30.435803], [-97.774467, 30.436654], [-97.775391, 30.437109], [-97.776559, 30.437754], [-97.778605, 30.439052], [-97.779301, 30.439492], [-97.780789, 30.440435], [-97.782168, 30.441309], [-97.783449, 30.442069], [-97.784168, 30.442537], [-97.784707, 30.442889], [-97.785529, 30.443422], [-97.786602, 30.44412], [-97.788007, 30.445034], [-97.788824, 30.445597], [-97.789305, 30.446041], [-97.789701, 30.44647], [-97.789996, 30.446899], [-97.79025, 30.447463], [-97.790436, 30.447873], [-97.790659, 30.448736], [-97.790872, 30.44956], [-97.791053, 30.450485], [-97.791169, 30.451073], [-97.791374, 30.452122], [-97.791549, 30.452711], [-97.791616, 30.453023], [-97.791731, 30.453559], [-97.791954, 30.454592], [-97.792032, 30.45496], [-97.79214, 30.455457], [-97.792248, 30.45596], [-97.792486, 30.45671], [-97.792654, 30.457241], [-97.792835, 30.457811], [-97.792978, 30.458152], [-97.79336, 30.459076], [-97.793456, 30.459424], [-97.793703, 30.459932], [-97.794156, 30.46111], [-97.794155, 30.4613], [-97.794363, 30.461541], [-97.794627, 30.462214], [-97.794796, 30.462633], [-97.795862, 30.465294], [-97.795946, 30.465505], [-97.796543, 30.466925], [-97.796698, 30.467332], [-97.797019, 30.468164], [-97.790101, 30.47015], [-97.789824, 30.470224], [-97.789516, 30.47032], [-97.786948, 30.471124], [-97.784893, 30.471782], [-97.783538, 30.472198], [-97.780632, 30.473092], [-97.780079, 30.473293], [-97.778071, 30.47394], [-97.777094, 30.47421], [-97.776207, 30.474379], [-97.775502, 30.474456], [-97.773711, 30.474648], [-97.770889, 30.474785], [-97.769719, 30.47499], [-97.768762, 30.475215], [-97.768021, 30.475426], [-97.766691, 30.475804], [-97.76491, 30.476387], [-97.764664, 30.476445], [-97.763478, 30.476834], [-97.761443, 30.477495], [-97.761298, 30.47742], [-97.761006, 30.477288], [-97.759163, 30.476638], [-97.757898, 30.476191], [-97.756331, 30.47564], [-97.755116, 30.475212], [-97.753942, 30.474797], [-97.753705, 30.474713], [-97.753467, 30.474631], [-97.753228, 30.474549], [-97.752988, 30.47447], [-97.75275, 30.474397], [-97.752508, 30.474331], [-97.752264, 30.474271], [-97.752019, 30.47422], [-97.751784, 30.474174], [-97.751548, 30.47413], [-97.751311, 30.474095], [-97.751073, 30.474066], [-97.75067, 30.474028], [-97.750381, 30.474008], [-97.750092, 30.473999], [-97.749807, 30.473996], [-97.749523, 30.474002], [-97.749239, 30.474015], [-97.748955, 30.474037], [-97.748673, 30.474064], [-97.744857, 30.474521], [-97.744383, 30.474578], [-97.744208, 30.474599], [-97.744032, 30.47462], [-97.743858, 30.474649], [-97.743675, 30.474684], [-97.743493, 30.474722], [-97.743312, 30.474765], [-97.743015, 30.47485], [-97.74272, 30.47494], [-97.74248, 30.475015], [-97.742239, 30.47509], [-97.741607, 30.475289], [-97.741047, 30.475465], [-97.740399, 30.475669], [-97.739665, 30.475902], [-97.738917, 30.476131], [-97.738453, 30.476279], [-97.738179, 30.476361], [-97.73797, 30.476423], [-97.737666, 30.476499], [-97.737483, 30.476537], [-97.737298, 30.476563], [-97.737006, 30.476588], [-97.736807, 30.476603], [-97.736299, 30.476631], [-97.735646, 30.47667], [-97.73501, 30.476707], [-97.734479, 30.476737], [-97.733831, 30.476776], [-97.73307, 30.476822], [-97.732271, 30.476869], [-97.731507, 30.476903], [-97.731231, 30.476905], [-97.730955, 30.476897], [-97.730688, 30.47687], [-97.730422, 30.476837], [-97.730231, 30.476805], [-97.730041, 30.476768], [-97.729852, 30.476726], [-97.729567, 30.476665], [-97.729324, 30.476614], [-97.728938, 30.476529], [-97.727892, 30.476301], [-97.726871, 30.476077], [-97.726056, 30.475898], [-97.725103, 30.475689], [-97.724443, 30.475541], [-97.724241, 30.475493], [-97.724042, 30.475436], [-97.723844, 30.475377], [-97.72356, 30.47527], [-97.723284, 30.475149], [-97.723037, 30.47502], [-97.7228, 30.47488], [-97.722572, 30.474722], [-97.722358, 30.474552], [-97.722067, 30.474288], [-97.721885, 30.474105], [-97.721378, 30.473581]]]]
    },
    "properties": {
      "neighbourhood": "78729",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-97.68634, 30.332593], [-97.685135, 30.331999], [-97.683812, 30.331391], [-97.682494, 30.330737], [-97.679806, 30.32948], [-97.678284, 30.328733], [-97.677128, 30.328164], [-97.676283, 30.327707], [-97.675923, 30.32751], [-97.675503, 30.327193], [-97.674533, 30.326466], [-97.674037, 30.326093], [-97.673325, 30.325558], [-97.674176, 30.325268], [-97.675392, 30.324845], [-97.676523, 30.324447], [-97.677379, 30.324146], [-97.678943, 30.323592], [-97.680192, 30.323181], [-97.681636, 30.322705], [-97.682262, 30.322492], [-97.683313, 30.322134], [-97.6841, 30.321892], [-97.684648, 30.321799], [-97.685095, 30.32172], [-97.685447, 30.321686], [-97.686557, 30.321558], [-97.68675, 30.321545], [-97.688247, 30.321458], [-97.688987, 30.321404], [-97.690054, 30.321289], [-97.690476, 30.321273], [-97.69102, 30.321257], [-97.69198, 30.321227], [-97.692905, 30.321199], [-97.693695, 30.321251], [-97.69422, 30.321287], [-97.694965, 30.32133], [-97.695353, 30.321354], [-97.696099, 30.321416], [-97.696593, 30.321457], [-97.697264, 30.321525], [-97.697906, 30.321594], [-97.699333, 30.321766], [-97.700742, 30.321935], [-97.701014, 30.321965], [-97.701723, 30.322016], [-97.702915, 30.322101], [-97.704677, 30.322225], [-97.705324, 30.322271], [-97.705982, 30.322243], [-97.706373, 30.322174], [-97.706766, 30.322105], [-97.707251, 30.321986], [-97.707628, 30.321892], [-97.708582, 30.32159], [-97.709419, 30.321324], [-97.709625, 30.321259], [-97.710282, 30.321052], [-97.710671, 30.320939], [-97.711003, 30.320842], [-97.711277, 30.320762], [-97.711594, 30.320672], [-97.712126, 30.320548], [-97.712645, 30.320446], [-97.712923, 30.320416], [-97.713229, 30.320381], [-97.713467, 30.320356], [-97.713731, 30.320342], [-97.714079, 30.320316], [-97.714621, 30.320311], [-97.715374, 30.320422], [-97.715968, 30.320685], [-97.716678, 30.32104], [-97.717641, 30.321494], [-97.718574, 30.321964], [-97.718956, 30.322143], [-97.719558, 30.322422], [-97.720434, 30.322723], [-97.721146, 30.32287], [-97.721988, 30.32295], [-97.722728, 30.323108], [-97.72383, 30.323502], [-97.724884, 30.324156], [-97.725087, 30.324333], [-97.725264, 30.324524], [-97.725403, 30.324678], [-97.725521, 30.324873], [-97.725845, 30.325405], [-97.72594, 30.325541], [-97.726146, 30.325818], [-97.726336, 30.325943], [-97.726638, 30.32615], [-97.726779, 30.326254], [-97.726879, 30.32638], [-97.727117, 30.326745], [-97.727262, 30.327166], [-97.727314, 30.327393], [-97.727354, 30.327592], [-97.727379, 30.327856], [-97.727417, 30.32803], [-97.727604, 30.328526], [-97.727922, 30.329055], [-97.727382, 30.328863], [-97.725192, 30.327804], [-97.723709, 30.330117], [-97.72354, 30.330377], [-97.722757, 30.331643], [-97.721241, 30.333999], [-97.720165, 30.335683], [-97.719555, 30.336702], [-97.719109, 30.337361], [-97.718851, 30.337721], [-97.717823, 30.339411], [-97.715958, 30.342349], [-97.714964, 30.343973], [-97.714564, 30.344584], [-97.714171, 30.345123], [-97.713616, 30.345888], [-97.713452, 30.346137], [-97.713037, 30.346778], [-97.712816, 30.347117], [-97.712459, 30.347666], [-97.71216, 30.347406], [-97.712024, 30.347296], [-97.711508, 30.346978], [-97.710933, 30.346716], [-97.71042, 30.346524], [-97.709273, 30.346099], [-97.708759, 30.345909], [-97.708397, 30.345729], [-97.707913, 30.345485], [-97.707456, 30.345256], [-97.706337, 30.34457], [-97.705219, 30.343873], [-97.70469, 30.343543], [-97.704101, 30.343047], [-97.703747, 30.342718], [-97.702942, 30.341865], [-97.702185, 30.341066], [-97.701694, 30.340547], [-97.701296, 30.340063], [-97.701065, 30.339852], [-97.700608, 30.339496], [-97.700104, 30.339167], [-97.699558, 30.33885], [-97.69878, 30.338389], [-97.696697, 30.337381], [-97.695468, 30.336786], [-97.693265, 30.335839], [-97.691442, 30.33497], [-97.689988, 30.334324], [-97.687495, 30.333129], [-97.68634, 30.332593]]]]
    },
    "properties": {
      "neighbourhood": "78752",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-97.560724, 30.249028], [-97.560975, 30.248866], [-97.561598, 30.248566], [-97.564804, 30.24814], [-97.566328, 30.248344], [-97.569037, 30.248999], [-97.570666, 30.249097], [-97.572982, 30.248836], [-97.575756, 30.248833], [-97.577945, 30.248308], [-97.579375, 30.248116], [-97.582031, 30.24751], [-97.583215, 30.247409], [-97.584437, 30.247809], [-97.587709, 30.249574], [-97.588658, 30.250086], [-97.595643, 30.251457], [-97.59642, 30.251553], [-97.597937, 30.251402], [-97.598677, 30.251376], [-97.60167, 30.252691], [-97.604178, 30.25354], [-97.606204, 30.254452], [-97.609424, 30.255549], [-97.611818, 30.256997], [-97.613974, 30.258996], [-97.616278, 30.259895], [-97.619661, 30.261031], [-97.621263, 30.262679], [-97.623382, 30.264594], [-97.625368, 30.266762], [-97.626027, 30.267497], [-97.626656, 30.268723], [-97.628312, 30.269886], [-97.629825, 30.270641], [-97.632069, 30.271423], [-97.633566, 30.272139], [-97.635902, 30.275285], [-97.637274, 30.276794], [-97.637583, 30.277015], [-97.637795, 30.277165], [-97.63931, 30.277868], [-97.641219, 30.278282], [-97.643116, 30.279004], [-97.643796, 30.279258], [-97.645568, 30.279944], [-97.647999, 30.280828], [-97.648743, 30.2811], [-97.65318, 30.282769], [-97.654658, 30.283322], [-97.655598, 30.283691], [-97.657317, 30.284233], [-97.659823, 30.284725], [-97.661974, 30.28507], [-97.664049, 30.285421], [-97.664791, 30.285547], [-97.665396, 30.285639], [-97.664831, 30.287778], [-97.664249, 30.289884], [-97.66381, 30.291654], [-97.662572, 30.296348], [-97.661337, 30.300924], [-97.661121, 30.301698], [-97.661047, 30.302191], [-97.660951, 30.302929], [-97.660882, 30.303838], [-97.66083, 30.304632], [-97.660859, 30.305191], [-97.660899, 30.305893], [-97.660948, 30.306323], [-97.661194, 30.30772], [-97.661472, 30.30901], [-97.662153, 30.312014], [-97.662515, 30.31357], [-97.662702, 30.31438], [-97.662903, 30.315267], [-97.663039, 30.315765], [-97.663207, 30.316183], [-97.663404, 30.316603], [-97.663688, 30.317167], [-97.663989, 30.317682], [-97.664406, 30.318326], [-97.66487, 30.318883], [-97.665643, 30.319628], [-97.666142, 30.320026], [-97.667932, 30.321364], [-97.670324, 30.323207], [-97.673325, 30.325558], [-97.670256, 30.32663], [-97.669135, 30.327022], [-97.668685, 30.327175], [-97.667335, 30.327538], [-97.666899, 30.327655], [-97.665894, 30.327915], [-97.665502, 30.328011], [-97.665041, 30.328084], [-97.664523, 30.328169], [-97.664326, 30.328193], [-97.663675, 30.328273], [-97.662317, 30.32836], [-97.658961, 30.328576], [-97.657692, 30.328665], [-97.657493, 30.328678], [-97.654789, 30.328863], [-97.654163, 30.328905], [-97.653419, 30.328953], [-97.652901, 30.328989], [-97.651942, 30.329051], [-97.651214, 30.329099], [-97.649865, 30.329189], [-97.649209, 30.329233], [-97.647573, 30.329375], [-97.647268, 30.329402], [-97.646403, 30.329477], [-97.645142, 30.329552], [-97.644016, 30.329619], [-97.642843, 30.329708], [-97.64261, 30.329722], [-97.640862, 30.329853], [-97.6402, 30.329897], [-97.638941, 30.33], [-97.638079, 30.330053], [-97.637514, 30.330096], [-97.6366, 30.33016], [-97.636044, 30.330203], [-97.634288, 30.330325], [-97.632547, 30.330446], [-97.630969, 30.330539], [-97.629607, 30.330617], [-97.628521, 30.330694], [-97.628255, 30.33071], [-97.626885, 30.330802], [-97.626049, 30.330859], [-97.623896, 30.331008], [-97.623228, 30.331049], [-97.622595, 30.331085], [-97.621523, 30.331231], [-97.620338, 30.33139], [-97.620161, 30.331414], [-97.619694, 30.331516], [-97.618713, 30.33171], [-97.618454, 30.331762], [-97.618127, 30.331857], [-97.617251, 30.332083], [-97.614988, 30.332671], [-97.614149, 30.332898], [-97.613982, 30.332938], [-97.611797, 30.333503], [-97.6091, 30.334221], [-97.60747, 30.334654], [-97.606029, 30.33505], [-97.604175, 30.335601], [-97.602909, 30.33607], [-97.601548, 30.33656], [-97.599691, 30.33725], [-97.599385, 30.337364], [-97.599332, 30.337096], [-97.60413, 30.329145], [-97.605297, 30.326607], [-97.605379, 30.326375], [-97.602442, 30.326221], [-97.599278, 30.326063], [-97.597697, 30.325391], [-97.59594, 30.324388], [-97.593652, 30.323311], [-97.591119, 30.32209], [-97.585399, 30.319333], [-97.591958, 30.309019], [-97.572213, 30.299453], [-97.570565, 30.298523], [-97.56956, 30.297501], [-97.568811, 30.296439], [-97.573376, 30.289689], [-97.573321, 30.289531], [-97.576572, 30.284309], [-97.57678, 30.284327], [-97.577251, 30.283471], [-97.578333, 30.281396], [-97.578921, 30.28024], [-97.579945, 30.275839], [-97.581281, 30.273659], [-97.57979, 30.27286], [-97.57775, 30.271892], [-97.5746, 30.270781], [-97.572106, 30.270092], [-97.569101, 30.269065], [-97.56804, 30.268418], [-97.566958, 30.267498], [-97.56618, 30.266403], [-97.565597, 30.264803], [-97.565196, 30.26365], [-97.564542, 30.262426], [-97.562864, 30.260844], [-97.555246, 30.257026], [-97.554942, 30.25689], [-97.554689, 30.256822], [-97.554577, 30.256143], [-97.555171, 30.255971], [-97.555785, 30.255643], [-97.556074, 30.255419], [-97.556362, 30.255067], [-97.559156, 30.250639], [-97.5601, 30.24957], [-97.560379, 30.249255], [-97.560724, 30.249028]]]]
    },
    "properties": {
      "neighbourhood": "78724",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-97.754473, 30.265067], [-97.754099, 30.264883], [-97.753764, 30.264805], [-97.752654, 30.264568], [-97.751991, 30.264158], [-97.751627, 30.264], [-97.751047, 30.263851], [-97.750478, 30.263658], [-97.749951, 30.263608], [-97.749732, 30.263588], [-97.749433, 30.263472], [-97.748758, 30.263219], [-97.748484, 30.263114], [-97.748127, 30.262972], [-97.747807, 30.262847], [-97.747536, 30.262743], [-97.747114, 30.262542], [-97.746639, 30.262252], [-97.746481, 30.262183], [-97.745853, 30.261933], [-97.745445, 30.261766], [-97.745303, 30.261705], [-97.745078, 30.26161], [-97.744892, 30.261532], [-97.744236, 30.261136], [-97.743937, 30.260899], [-97.74368, 30.260696], [-97.743157, 30.260165], [-97.742814, 30.25971], [-97.742506, 30.259159], [-97.742218, 30.258604], [-97.74211, 30.258145], [-97.742003, 30.257554], [-97.741918, 30.25701], [-97.741199, 30.255258], [-97.740982, 30.254789], [-97.740722, 30.254453], [-97.740345, 30.253978], [-97.739598, 30.253146], [-97.73922, 30.252759], [-97.738568, 30.252157], [-97.738476, 30.25204], [-97.738264, 30.251837], [-97.737846, 30.251524], [-97.737141, 30.251188], [-97.736319, 30.250767], [-97.736158, 30.250689], [-97.735889, 30.250541], [-97.735847, 30.250339], [-97.735612, 30.249303], [-97.735413, 30.24835], [-97.735286, 30.247723], [-97.735158, 30.24714], [-97.735036, 30.246552], [-97.734971, 30.246198], [-97.734947, 30.245948], [-97.734924, 30.245609], [-97.734929, 30.245425], [-97.734941, 30.245199], [-97.734968, 30.244917], [-97.735049, 30.244473], [-97.735138, 30.24415], [-97.735234, 30.243869], [-97.735367, 30.243552], [-97.735558, 30.243193], [-97.735852, 30.242688], [-97.736141, 30.242212], [-97.736513, 30.241584], [-97.736867, 30.240989], [-97.737115, 30.240571], [-97.737593, 30.239761], [-97.737947, 30.239171], [-97.738451, 30.238318], [-97.738851, 30.237649], [-97.739138, 30.237171], [-97.739452, 30.236641], [-97.739714, 30.23619], [-97.740015, 30.235676], [-97.740277, 30.235247], [-97.740499, 30.234872], [-97.740781, 30.234388], [-97.741135, 30.233793], [-97.74137, 30.233402], [-97.741776, 30.232728], [-97.742168, 30.232056], [-97.742541, 30.231434], [-97.743, 30.230651], [-97.743601, 30.229643], [-97.744053, 30.228876], [-97.744694, 30.227795], [-97.745237, 30.226882], [-97.745702, 30.22611], [-97.74633, 30.22505], [-97.746971, 30.223971], [-97.747292, 30.223436], [-97.747665, 30.222802], [-97.748032, 30.22218], [-97.748437, 30.221501], [-97.748771, 30.220938], [-97.749085, 30.220405], [-97.749517, 30.219671], [-97.749935, 30.218976], [-97.750322, 30.218326], [-97.750852, 30.217424], [-97.751381, 30.216541], [-97.751662, 30.216068], [-97.751878, 30.215709], [-97.752111, 30.21575], [-97.752315, 30.215795], [-97.752642, 30.215892], [-97.753174, 30.21609], [-97.753656, 30.216391], [-97.753971, 30.216634], [-97.754458, 30.217183], [-97.755038, 30.217827], [-97.755679, 30.21839], [-97.756533, 30.21904], [-97.757321, 30.219523], [-97.758204, 30.219965], [-97.759714, 30.220669], [-97.761376, 30.22147], [-97.762142, 30.221848], [-97.762859, 30.222258], [-97.763481, 30.222642], [-97.764596, 30.22338], [-97.76564, 30.224096], [-97.76686, 30.224888], [-97.767963, 30.225647], [-97.768866, 30.226257], [-97.769406, 30.226598], [-97.769806, 30.226804], [-97.770267, 30.227], [-97.770799, 30.227217], [-97.771367, 30.227393], [-97.771948, 30.22754], [-97.77259, 30.227638], [-97.773198, 30.227699], [-97.773914, 30.227714], [-97.774571, 30.227697], [-97.775622, 30.227676], [-97.776685, 30.227676], [-97.778688, 30.227748], [-97.781002, 30.227847], [-97.781836, 30.227905], [-97.782468, 30.22797], [-97.783253, 30.228087], [-97.783835, 30.228214], [-97.784487, 30.228381], [-97.785162, 30.228593], [-97.785824, 30.228845], [-97.786591, 30.229179], [-97.78777, 30.229753], [-97.78922, 30.230466], [-97.792073, 30.231829], [-97.795018, 30.233351], [-97.795666, 30.233716], [-97.796338, 30.234158], [-97.79679, 30.234536], [-97.797476, 30.235245], [-97.797936, 30.235917], [-97.798392, 30.236735], [-97.799175, 30.238315], [-97.800388, 30.240765], [-97.801772, 30.243562], [-97.802288, 30.24476], [-97.802067, 30.244827], [-97.801764, 30.244931], [-97.801274, 30.245144], [-97.801047, 30.245233], [-97.800812, 30.245267], [-97.800597, 30.245285], [-97.800418, 30.245301], [-97.800185, 30.245307], [-97.799811, 30.245275], [-97.799559, 30.245234], [-97.799303, 30.245207], [-97.79899, 30.245193], [-97.79868, 30.245184], [-97.798379, 30.245153], [-97.798243, 30.245073], [-97.797807, 30.245004], [-97.797635, 30.244973], [-97.797364, 30.24491], [-97.797111, 30.244812], [-97.796963, 30.244743], [-97.79682, 30.244674], [-97.796563, 30.24454], [-97.79641, 30.244451], [-97.796214, 30.244332], [-97.795955, 30.244156], [-97.795796, 30.244018], [-97.795619, 30.243899], [-97.795379, 30.243807], [-97.795151, 30.243717], [-97.794985, 30.243636], [-97.794793, 30.243545], [-97.794537, 30.243424], [-97.794311, 30.24331], [-97.79408, 30.243198], [-97.79385, 30.243149], [-97.793614, 30.243136], [-97.793382, 30.243104], [-97.79319, 30.242941], [-97.79309, 30.242832], [-97.792932, 30.242622], [-97.792831, 30.242458], [-97.792795, 30.242322], [-97.792683, 30.24213], [-97.792544, 30.241993], [-97.792362, 30.241879], [-97.791989, 30.24185], [-97.79166, 30.241923], [-97.79142, 30.24196], [-97.791069, 30.241983], [-97.790639, 30.241983], [-97.790416, 30.241989], [-97.790092, 30.242032], [-97.789859, 30.242102], [-97.789657, 30.242252], [-97.789493, 30.242422], [-97.789299, 30.242699], [-97.789137, 30.242907], [-97.789049, 30.243029], [-97.788918, 30.24326], [-97.788851, 30.243501], [-97.788818, 30.243701], [-97.788804, 30.243998], [-97.788767, 30.244192], [-97.788725, 30.244409], [-97.78871, 30.244587], [-97.788764, 30.24488], [-97.788829, 30.245189], [-97.788847, 30.245377], [-97.788883, 30.245556], [-97.788974, 30.245753], [-97.789087, 30.245901], [-97.789237, 30.246108], [-97.789374, 30.246289], [-97.789521, 30.246427], [-97.789773, 30.24658], [-97.790053, 30.246735], [-97.790272, 30.246863], [-97.790458, 30.246965], [-97.790666, 30.247041], [-97.790938, 30.247082], [-97.791118, 30.24722], [-97.791385, 30.247383], [-97.791704, 30.247562], [-97.791845, 30.247645], [-97.791992, 30.247749], [-97.792207, 30.247806], [-97.792361, 30.247845], [-97.792565, 30.247876], [-97.792742, 30.247924], [-97.793107, 30.248014], [-97.793269, 30.24803], [-97.793431, 30.248045], [-97.793727, 30.24802], [-97.793984, 30.24797], [-97.794244, 30.247945], [-97.794491, 30.247881], [-97.794664, 30.247835], [-97.794928, 30.247769], [-97.795118, 30.247737], [-97.795445, 30.24768], [-97.795857, 30.247672], [-97.796024, 30.24767], [-97.796194, 30.247753], [-97.796359, 30.24783], [-97.796478, 30.247954], [-97.79664, 30.248097], [-97.796727, 30.248294], [-97.796749, 30.248498], [-97.79675, 30.24871], [-97.796751, 30.248867], [-97.796709, 30.2491], [-97.796636, 30.249417], [-97.796613, 30.2497], [-97.796546, 30.249913], [-97.796496, 30.250116], [-97.796479, 30.25033], [-97.796425, 30.250623], [-97.796386, 30.25084], [-97.796355, 30.2511], [-97.796301, 30.251336], [-97.796289, 30.25149], [-97.796267, 30.25166], [-97.796208, 30.25189], [-97.796144, 30.252053], [-97.796093, 30.252184], [-97.796113, 30.252358], [-97.796136, 30.252557], [-97.796074, 30.252767], [-97.796023, 30.25292], [-97.79591, 30.253124], [-97.795811, 30.253304], [-97.79568, 30.253458], [-97.795459, 30.253607], [-97.795242, 30.253738], [-97.795021, 30.253844], [-97.794755, 30.253954], [-97.794534, 30.254068], [-97.794231, 30.254122], [-97.793902, 30.254162], [-97.79367, 30.254254], [-97.793451, 30.254327], [-97.793224, 30.25441], [-97.792998, 30.254477], [-97.792728, 30.254565], [-97.792543, 30.254642], [-97.792176, 30.254786], [-97.791858, 30.254884], [-97.791674, 30.254924], [-97.791374, 30.255061], [-97.791111, 30.255116], [-97.790895, 30.255186], [-97.790645, 30.255297], [-97.790391, 30.25541], [-97.790178, 30.255491], [-97.78979, 30.255602], [-97.789557, 30.255699], [-97.789415, 30.25577], [-97.789236, 30.25586], [-97.789074, 30.255934], [-97.788855, 30.256054], [-97.788675, 30.256143], [-97.788328, 30.256274], [-97.788068, 30.256387], [-97.787919, 30.25645], [-97.787639, 30.256546], [-97.787473, 30.256587], [-97.787087, 30.256725], [-97.786843, 30.256814], [-97.786581, 30.256902], [-97.786322, 30.257002], [-97.786045, 30.257161], [-97.785834, 30.25725], [-97.785684, 30.257294], [-97.785375, 30.257406], [-97.785167, 30.257542], [-97.784983, 30.257665], [-97.784728, 30.257894], [-97.784577, 30.2581], [-97.784447, 30.258334], [-97.784382, 30.258462], [-97.784318, 30.258593], [-97.784246, 30.258797], [-97.784218, 30.258943], [-97.784186, 30.25919], [-97.784209, 30.259372], [-97.784332, 30.259539], [-97.784523, 30.259686], [-97.784715, 30.259827], [-97.785002, 30.259869], [-97.785217, 30.25995], [-97.785358, 30.260066], [-97.785462, 30.260186], [-97.785491, 30.26042], [-97.785372, 30.260654], [-97.785258, 30.260765], [-97.785012, 30.260994], [-97.784823, 30.261094], [-97.784559, 30.261196], [-97.784361, 30.261261], [-97.78412, 30.261301], [-97.783887, 30.261486], [-97.783707, 30.261587], [-97.783475, 30.261642], [-97.783233, 30.261654], [-97.782974, 30.26169], [-97.782753, 30.261722], [-97.782505, 30.261752], [-97.782265, 30.261841], [-97.782067, 30.261983], [-97.781873, 30.262089], [-97.781553, 30.262215], [-97.781388, 30.262291], [-97.781157, 30.262408], [-97.780923, 30.262538], [-97.780671, 30.262613], [-97.780346, 30.262683], [-97.780089, 30.262725], [-97.779853, 30.2628], [-97.779635, 30.26287], [-97.779461, 30.26288], [-97.778986, 30.262857], [-97.778664, 30.262848], [-97.778414, 30.262856], [-97.77824, 30.262845], [-97.777977, 30.262875], [-97.777764, 30.262937], [-97.777544, 30.263001], [-97.77723, 30.263091], [-97.776878, 30.263241], [-97.776702, 30.263292], [-97.77649, 30.263346], [-97.776238, 30.263404], [-97.775982, 30.263462], [-97.775681, 30.26352], [-97.775441, 30.263556], [-97.774827, 30.263651], [-97.774588, 30.263657], [-97.774223, 30.263647], [-97.774062, 30.263644], [-97.773894, 30.263643], [-97.773609, 30.263652], [-97.773154, 30.263678], [-97.772428, 30.263611], [-97.772074, 30.263585], [-97.7718, 30.263585], [-97.771435, 30.263608], [-97.771179, 30.263652], [-97.770946, 30.26373], [-97.770564, 30.263822], [-97.770369, 30.263867], [-97.769345, 30.264097], [-97.769108, 30.264062], [-97.768851, 30.264046], [-97.768679, 30.264034], [-97.768471, 30.264058], [-97.768263, 30.264064], [-97.768038, 30.264057], [-97.767792, 30.264066], [-97.767477, 30.264134], [-97.767252, 30.264223], [-97.76704, 30.264296], [-97.766773, 30.264406], [-97.766593, 30.264463], [-97.766438, 30.264512], [-97.766236, 30.264555], [-97.766076, 30.264612], [-97.765916, 30.264672], [-97.76576, 30.264773], [-97.76559, 30.264883], [-97.765446, 30.264984], [-97.76528, 30.265069], [-97.765106, 30.26514], [-97.7649, 30.265232], [-97.764711, 30.265319], [-97.76444, 30.265423], [-97.764229, 30.265516], [-97.764032, 30.26563], [-97.763856, 30.265725], [-97.763677, 30.26584], [-97.763449, 30.265967], [-97.763209, 30.2661], [-97.762967, 30.266175], [-97.762773, 30.266278], [-97.762619, 30.266336], [-97.762385, 30.26646], [-97.762157, 30.266574], [-97.761983, 30.266664], [-97.761827, 30.266755], [-97.761375, 30.267034], [-97.760657, 30.267526], [-97.759922, 30.267225], [-97.75885, 30.266788], [-97.757735, 30.266296], [-97.756686, 30.265744], [-97.756544, 30.265669], [-97.755984, 30.265421], [-97.755365, 30.265211], [-97.754791, 30.265043], [-97.754473, 30.265067]]]]
    },
    "properties": {
      "neighbourhood": "78704",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-97.671507, 30.424375], [-97.671226, 30.424321], [-97.671047, 30.424286], [-97.670439, 30.424113], [-97.664181, 30.421087], [-97.661509, 30.419757], [-97.65962, 30.418805], [-97.658555, 30.418127], [-97.657385, 30.417259], [-97.656436, 30.416526], [-97.655648, 30.41553], [-97.654721, 30.414445], [-97.654248, 30.414078], [-97.651651, 30.412808], [-97.651301, 30.412594], [-97.650883, 30.412283], [-97.650541, 30.41194], [-97.649838, 30.410785], [-97.649359, 30.410128], [-97.648661, 30.409651], [-97.648498, 30.409561], [-97.644527, 30.40767], [-97.642775, 30.406846], [-97.642398, 30.406563], [-97.642067, 30.406365], [-97.642204, 30.406293], [-97.642295, 30.406245], [-97.645431, 30.404665], [-97.644805, 30.403793], [-97.646309, 30.401035], [-97.647172, 30.401519], [-97.646657, 30.403259], [-97.649373, 30.401139], [-97.645102, 30.398204], [-97.642856, 30.396873], [-97.643639, 30.395682], [-97.644327, 30.39469], [-97.644906, 30.393753], [-97.645825, 30.392235], [-97.646424, 30.391271], [-97.646762, 30.390458], [-97.647213, 30.389494], [-97.647515, 30.388928], [-97.647837, 30.388303], [-97.648501, 30.387112], [-97.648586, 30.386924], [-97.648975, 30.38606], [-97.649499, 30.384902], [-97.650023, 30.383818], [-97.650412, 30.383287], [-97.651855, 30.38172], [-97.652892, 30.380605], [-97.653419, 30.380077], [-97.653957, 30.379533], [-97.654379, 30.379234], [-97.655018, 30.378914], [-97.655546, 30.378738], [-97.657636, 30.378012], [-97.657915, 30.377897], [-97.658307, 30.377624], [-97.65868, 30.377277], [-97.659041, 30.376784], [-97.659668, 30.37598], [-97.659933, 30.375672], [-97.660257, 30.375363], [-97.660457, 30.375169], [-97.660868, 30.374905], [-97.661369, 30.374624], [-97.66192, 30.374344], [-97.662671, 30.373983], [-97.663596, 30.373546], [-97.664867, 30.372934], [-97.665292, 30.372736], [-97.665564, 30.37255], [-97.665751, 30.372408], [-97.665989, 30.372179], [-97.666235, 30.371854], [-97.666729, 30.371127], [-97.667477, 30.369979], [-97.668107, 30.36895], [-97.668437, 30.36844], [-97.668558, 30.368186], [-97.668725, 30.367684], [-97.668783, 30.36736], [-97.668797, 30.367044], [-97.668706, 30.36605], [-97.668673, 30.365642], [-97.668507, 30.363787], [-97.668462, 30.363256], [-97.668456, 30.362937], [-97.668503, 30.362654], [-97.668594, 30.362403], [-97.66871, 30.362141], [-97.668866, 30.361864], [-97.669547, 30.360817], [-97.670252, 30.359731], [-97.670845, 30.358808], [-97.671677, 30.357483], [-97.672151, 30.356745], [-97.672599, 30.3561], [-97.673108, 30.355351], [-97.673417, 30.354871], [-97.673804, 30.354285], [-97.674155, 30.353709], [-97.674355, 30.35343], [-97.674737, 30.352846], [-97.674954, 30.352496], [-97.675253, 30.352002], [-97.675631, 30.351385], [-97.675948, 30.350817], [-97.676193, 30.350165], [-97.676459, 30.349296], [-97.676801, 30.348139], [-97.677111, 30.347117], [-97.677253, 30.346611], [-97.677459, 30.345939], [-97.677502, 30.345805], [-97.6778, 30.344876], [-97.677915, 30.344639], [-97.678066, 30.344326], [-97.678333, 30.343957], [-97.678546, 30.343723], [-97.679071, 30.343156], [-97.679539, 30.342613], [-97.679841, 30.34227], [-97.680131, 30.341937], [-97.680443, 30.341528], [-97.680643, 30.341271], [-97.681187, 30.340482], [-97.68231, 30.338775], [-97.683223, 30.337342], [-97.68382, 30.336447], [-97.684257, 30.335799], [-97.684784, 30.334951], [-97.685315, 30.334143], [-97.685835, 30.333356], [-97.68634, 30.332593], [-97.687495, 30.333129], [-97.689988, 30.334324], [-97.691442, 30.33497], [-97.693265, 30.335839], [-97.695468, 30.336786], [-97.696697, 30.337381], [-97.69878, 30.338389], [-97.699558, 30.33885], [-97.700104, 30.339167], [-97.700608, 30.339496], [-97.701065, 30.339852], [-97.701296, 30.340063], [-97.701694, 30.340547], [-97.702185, 30.341066], [-97.702942, 30.341865], [-97.703747, 30.342718], [-97.704101, 30.343047], [-97.70469, 30.343543], [-97.705219, 30.343873], [-97.706337, 30.34457], [-97.707456, 30.345256], [-97.707913, 30.345485], [-97.708397, 30.345729], [-97.708759, 30.345909], [-97.709273, 30.346099], [-97.71042, 30.346524], [-97.710933, 30.346716], [-97.711508, 30.346978], [-97.712024, 30.347296], [-97.71216, 30.347406], [-97.712459, 30.347666], [-97.71223, 30.348005], [-97.712091, 30.348214], [-97.711789, 30.348557], [-97.711405, 30.348994], [-97.711023, 30.349429], [-97.710568, 30.349808], [-97.709884, 30.35027], [-97.709153, 30.35081], [-97.707269, 30.352111], [-97.705638, 30.353351], [-97.704068, 30.354524], [-97.702936, 30.355339], [-97.702688, 30.355497], [-97.701263, 30.35657], [-97.700387, 30.357273], [-97.700108, 30.357647], [-97.699679, 30.358254], [-97.698085, 30.361117], [-97.697003, 30.363059], [-97.695996, 30.36487], [-97.694587, 30.36736], [-97.693009, 30.370175], [-97.692387, 30.371177], [-97.691612, 30.372665], [-97.691155, 30.373511], [-97.690776, 30.37413], [-97.690142, 30.375267], [-97.689754, 30.375892], [-97.689309, 30.376738], [-97.688948, 30.377396], [-97.688756, 30.377686], [-97.688287, 30.378482], [-97.687684, 30.37954], [-97.68633, 30.382012], [-97.685188, 30.384005], [-97.685088, 30.384256], [-97.684997, 30.384496], [-97.68473, 30.385079], [-97.684253, 30.386056], [-97.682903, 30.389362], [-97.682209, 30.390948], [-97.681964, 30.391543], [-97.681769, 30.392045], [-97.681037, 30.393878], [-97.680769, 30.394505], [-97.680672, 30.394748], [-97.680514, 30.395141], [-97.679588, 30.39766], [-97.679397, 30.399152], [-97.679342, 30.399553], [-97.679166, 30.401785], [-97.679081, 30.402818], [-97.678972, 30.403442], [-97.678543, 30.405824], [-97.678232, 30.407839], [-97.678236, 30.40784], [-97.678236, 30.40784], [-97.678288, 30.407857], [-97.678316, 30.407866], [-97.678344, 30.407876], [-97.678366, 30.407882], [-97.678374, 30.407885], [-97.678462, 30.407913], [-97.678697, 30.40799], [-97.678775, 30.408015], [-97.678884, 30.40805], [-97.679146, 30.408136], [-97.679375, 30.40821], [-97.679692, 30.408313], [-97.680456, 30.408562], [-97.681053, 30.408767], [-97.680954, 30.409448], [-97.680867, 30.410044], [-97.680641, 30.411587], [-97.680427, 30.413057], [-97.68028, 30.414062], [-97.679497, 30.416535], [-97.677901, 30.418963], [-97.679297, 30.420398], [-97.675909, 30.423259], [-97.677417, 30.425088], [-97.676064, 30.42661], [-97.67538, 30.426301], [-97.674106, 30.425667], [-97.673126, 30.425179], [-97.67226, 30.424745], [-97.672174, 30.424699], [-97.671862, 30.424528], [-97.671507, 30.424375]]]]
    },
    "properties": {
      "neighbourhood": "78753",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-97.729778, 30.298707], [-97.728929, 30.298233], [-97.728537, 30.298082], [-97.728118, 30.297868], [-97.727272, 30.297482], [-97.726779, 30.297252], [-97.724418, 30.296159], [-97.723412, 30.295638], [-97.723286, 30.295792], [-97.721036, 30.294731], [-97.720174, 30.294304], [-97.719984, 30.294226], [-97.720523, 30.293395], [-97.721189, 30.292369], [-97.721855, 30.291343], [-97.722403, 30.290488], [-97.722822, 30.289836], [-97.723371, 30.288962], [-97.723928, 30.28809], [-97.72433, 30.287463], [-97.724741, 30.286811], [-97.725106, 30.286241], [-97.725526, 30.285595], [-97.726, 30.284884], [-97.726383, 30.284309], [-97.726812, 30.283649], [-97.727122, 30.283163], [-97.72777, 30.282167], [-97.728298, 30.281372], [-97.728746, 30.280682], [-97.729112, 30.280068], [-97.729435, 30.279453], [-97.729824, 30.278664], [-97.730048, 30.278506], [-97.730264, 30.278521], [-97.730486, 30.278559], [-97.732197, 30.278965], [-97.731177, 30.280836], [-97.730454, 30.280296], [-97.728238, 30.282738], [-97.726781, 30.287095], [-97.729278, 30.28822], [-97.730268, 30.286847], [-97.731951, 30.286807], [-97.732949, 30.28525], [-97.733661, 30.285364], [-97.73354, 30.287047], [-97.734034, 30.287085], [-97.73416, 30.287946], [-97.734466, 30.288303], [-97.734852, 30.289173], [-97.73681, 30.289535], [-97.736584, 30.291642], [-97.738931, 30.291813], [-97.738934, 30.291813], [-97.739403, 30.287516], [-97.737077, 30.287341], [-97.737438, 30.283457], [-97.734248, 30.283074], [-97.733511, 30.281251], [-97.735694, 30.279976], [-97.736774, 30.280295], [-97.738107, 30.280688], [-97.739243, 30.280981], [-97.739439, 30.28102], [-97.739907, 30.281176], [-97.740508, 30.281328], [-97.741017, 30.28149], [-97.741628, 30.28165], [-97.74208, 30.281803], [-97.742687, 30.28195], [-97.743216, 30.282098], [-97.743741, 30.282238], [-97.744187, 30.282382], [-97.744833, 30.282546], [-97.745175, 30.282663], [-97.745926, 30.282884], [-97.746735, 30.283104], [-97.747185, 30.283231], [-97.748319, 30.283551], [-97.749503, 30.283872], [-97.749817, 30.283939], [-97.751225, 30.283813], [-97.751455, 30.283793], [-97.751622, 30.28378], [-97.751798, 30.283745], [-97.752058, 30.283629], [-97.75225, 30.283507], [-97.752402, 30.283381], [-97.752659, 30.283196], [-97.752854, 30.283324], [-97.752998, 30.283445], [-97.753195, 30.283567], [-97.75348, 30.283754], [-97.753766, 30.283933], [-97.75409, 30.284119], [-97.754487, 30.284391], [-97.754497, 30.284649], [-97.754522, 30.284785], [-97.754386, 30.285005], [-97.754257, 30.285151], [-97.754098, 30.285329], [-97.75397, 30.285458], [-97.753928, 30.285708], [-97.753916, 30.285845], [-97.753901, 30.286112], [-97.753904, 30.286532], [-97.753878, 30.286928], [-97.753742, 30.287475], [-97.75359, 30.288066], [-97.753462, 30.288443], [-97.753361, 30.288612], [-97.753283, 30.288737], [-97.753126, 30.288932], [-97.752934, 30.289186], [-97.752563, 30.289663], [-97.752371, 30.289876], [-97.752125, 30.290111], [-97.751994, 30.290314], [-97.75194, 30.290616], [-97.75187, 30.290865], [-97.751827, 30.291103], [-97.75172, 30.291379], [-97.751531, 30.291609], [-97.751393, 30.291721], [-97.751232, 30.291922], [-97.750998, 30.29201], [-97.750557, 30.292114], [-97.750194, 30.292156], [-97.749785, 30.292099], [-97.749472, 30.292073], [-97.749096, 30.292112], [-97.748799, 30.29217], [-97.748606, 30.292182], [-97.748413, 30.292189], [-97.748087, 30.292251], [-97.747851, 30.292296], [-97.747578, 30.292456], [-97.747438, 30.292604], [-97.747396, 30.292804], [-97.747482, 30.293075], [-97.747641, 30.29345], [-97.747717, 30.293597], [-97.747828, 30.293836], [-97.747975, 30.294147], [-97.748078, 30.294366], [-97.748282, 30.294717], [-97.748373, 30.294837], [-97.748555, 30.295063], [-97.748714, 30.29527], [-97.748838, 30.295515], [-97.749001, 30.295749], [-97.74909, 30.295897], [-97.749146, 30.296041], [-97.749183, 30.296182], [-97.749248, 30.296494], [-97.74935, 30.296801], [-97.749444, 30.296963], [-97.749621, 30.297145], [-97.749756, 30.297219], [-97.750022, 30.297425], [-97.750113, 30.297576], [-97.750068, 30.297858], [-97.749908, 30.297965], [-97.749743, 30.298184], [-97.749467, 30.298553], [-97.749324, 30.298696], [-97.74905, 30.298885], [-97.748828, 30.298952], [-97.748493, 30.299045], [-97.748221, 30.299048], [-97.747904, 30.299041], [-97.747722, 30.299024], [-97.747397, 30.299045], [-97.747185, 30.299238], [-97.74711, 30.299484], [-97.747131, 30.299622], [-97.747291, 30.299909], [-97.747379, 30.300045], [-97.747563, 30.300236], [-97.747784, 30.300408], [-97.748005, 30.30057], [-97.748302, 30.300804], [-97.748561, 30.300999], [-97.748688, 30.301103], [-97.748821, 30.301227], [-97.749095, 30.30151], [-97.749272, 30.301792], [-97.749399, 30.302031], [-97.749535, 30.302297], [-97.749645, 30.302437], [-97.74991, 30.302561], [-97.75009, 30.302672], [-97.750062, 30.302822], [-97.749976, 30.303107], [-97.749858, 30.303225], [-97.749649, 30.303447], [-97.749473, 30.303812], [-97.749412, 30.303956], [-97.74927, 30.304182], [-97.749138, 30.304336], [-97.748976, 30.30453], [-97.748807, 30.304769], [-97.748459, 30.304919], [-97.748283, 30.305045], [-97.747925, 30.305356], [-97.747711, 30.305514], [-97.74755, 30.305687], [-97.747466, 30.305911], [-97.747462, 30.306128], [-97.747537, 30.306333], [-97.747658, 30.306567], [-97.747806, 30.30688], [-97.747845, 30.307159], [-97.747506, 30.307089], [-97.746378, 30.306709], [-97.745705, 30.306409], [-97.744148, 30.30572], [-97.743049, 30.305197], [-97.741431, 30.304425], [-97.739784, 30.30358], [-97.739258, 30.30333], [-97.738147, 30.302741], [-97.736311, 30.301857], [-97.735241, 30.301337], [-97.73471, 30.301071], [-97.733548, 30.30053], [-97.732609, 30.300104], [-97.73214, 30.299864], [-97.731571, 30.29958], [-97.730929, 30.299283], [-97.730745, 30.299175], [-97.729778, 30.298707]]]]
    },
    "properties": {
      "neighbourhood": "78705",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-97.71223, 30.348005], [-97.712459, 30.347666], [-97.712776, 30.348052], [-97.713046, 30.348494], [-97.713322, 30.349278], [-97.713627, 30.35014], [-97.714115, 30.351797], [-97.714245, 30.352196], [-97.714698, 30.353592], [-97.714888, 30.354179], [-97.715346, 30.355591], [-97.715791, 30.357184], [-97.715999, 30.358071], [-97.716226, 30.358876], [-97.716548, 30.360013], [-97.71672, 30.36074], [-97.716831, 30.361078], [-97.717308, 30.362515], [-97.717479, 30.363203], [-97.717775, 30.364392], [-97.71793, 30.364907], [-97.718062, 30.365525], [-97.718203, 30.366186], [-97.718388, 30.367053], [-97.718538, 30.367551], [-97.718634, 30.367864], [-97.71878, 30.368241], [-97.719132, 30.368861], [-97.719672, 30.369618], [-97.719866, 30.369809], [-97.720253, 30.370193], [-97.72077, 30.370539], [-97.721417, 30.370883], [-97.72195, 30.371119], [-97.723348, 30.371733], [-97.72456, 30.372267], [-97.725058, 30.372519], [-97.726314, 30.373152], [-97.726744, 30.373354], [-97.72778, 30.373793], [-97.72859, 30.374213], [-97.729343, 30.374606], [-97.729697, 30.374789], [-97.730446, 30.375178], [-97.73092, 30.375391], [-97.73152, 30.37572], [-97.732384, 30.376125], [-97.732979, 30.376717], [-97.733558, 30.377072], [-97.736001, 30.378569], [-97.736152, 30.378669], [-97.735939, 30.379207], [-97.735771, 30.37963], [-97.73559, 30.381683], [-97.732666, 30.39781], [-97.730158, 30.401073], [-97.727909, 30.403712], [-97.724697, 30.406164], [-97.720237, 30.408197], [-97.718688, 30.408689], [-97.716095, 30.40906], [-97.713139, 30.409877], [-97.711783, 30.410251], [-97.711503, 30.410439], [-97.710954, 30.410809], [-97.710162, 30.411342], [-97.709602, 30.412017], [-97.708837, 30.412941], [-97.708314, 30.413572], [-97.707942, 30.414021], [-97.706717, 30.415499], [-97.706133, 30.416204], [-97.705632, 30.416808], [-97.705277, 30.418078], [-97.705121, 30.41864], [-97.704652, 30.419271], [-97.704216, 30.420374], [-97.703562, 30.420044], [-97.702155, 30.419056], [-97.701637, 30.418717], [-97.700862, 30.418332], [-97.699024, 30.41739], [-97.696403, 30.416047], [-97.695917, 30.415798], [-97.695776, 30.41573], [-97.693286, 30.414532], [-97.690709, 30.413296], [-97.684747, 30.410428], [-97.682959, 30.409568], [-97.682831, 30.409514], [-97.681053, 30.408767], [-97.680456, 30.408562], [-97.679692, 30.408313], [-97.679375, 30.40821], [-97.679146, 30.408136], [-97.678884, 30.40805], [-97.678775, 30.408015], [-97.678697, 30.40799], [-97.678462, 30.407913], [-97.678374, 30.407885], [-97.678366, 30.407882], [-97.678344, 30.407876], [-97.678316, 30.407866], [-97.678288, 30.407857], [-97.678236, 30.40784], [-97.678236, 30.40784], [-97.678232, 30.407839], [-97.678543, 30.405824], [-97.678972, 30.403442], [-97.679081, 30.402818], [-97.679166, 30.401785], [-97.679342, 30.399553], [-97.679397, 30.399152], [-97.679588, 30.39766], [-97.680514, 30.395141], [-97.680672, 30.394748], [-97.680769, 30.394505], [-97.681037, 30.393878], [-97.681769, 30.392045], [-97.681964, 30.391543], [-97.682209, 30.390948], [-97.682903, 30.389362], [-97.684253, 30.386056], [-97.68473, 30.385079], [-97.684997, 30.384496], [-97.685088, 30.384256], [-97.685188, 30.384005], [-97.68633, 30.382012], [-97.687684, 30.37954], [-97.688287, 30.378482], [-97.688756, 30.377686], [-97.688948, 30.377396], [-97.689309, 30.376738], [-97.689754, 30.375892], [-97.690142, 30.375267], [-97.690776, 30.37413], [-97.691155, 30.373511], [-97.691612, 30.372665], [-97.692387, 30.371177], [-97.693009, 30.370175], [-97.694587, 30.36736], [-97.695996, 30.36487], [-97.697003, 30.363059], [-97.698085, 30.361117], [-97.699679, 30.358254], [-97.700108, 30.357647], [-97.700387, 30.357273], [-97.701263, 30.35657], [-97.702688, 30.355497], [-97.702936, 30.355339], [-97.704068, 30.354524], [-97.705638, 30.353351], [-97.707269, 30.352111], [-97.709153, 30.35081], [-97.709884, 30.35027], [-97.710568, 30.349808], [-97.711023, 30.349429], [-97.711405, 30.348994], [-97.711789, 30.348557], [-97.712091, 30.348214], [-97.71223, 30.348005]]]]
    },
    "properties": {
      "neighbourhood": "78758",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-97.776631, 30.323006], [-97.776484, 30.322327], [-97.776296, 30.321674], [-97.776212, 30.32069], [-97.776092, 30.319296], [-97.776024, 30.317994], [-97.776076, 30.316818], [-97.776194, 30.315431], [-97.776207, 30.315269], [-97.776292, 30.314251], [-97.776479, 30.313993], [-97.776765, 30.31366], [-97.776946, 30.31345], [-97.77702, 30.313113], [-97.777156, 30.312491], [-97.777139, 30.311547], [-97.777496, 30.310196], [-97.778034, 30.308556], [-97.778224, 30.307961], [-97.77844, 30.307547], [-97.778523, 30.307386], [-97.778912, 30.306629], [-97.779153, 30.306219], [-97.779532, 30.305731], [-97.779951, 30.305173], [-97.780505, 30.304433], [-97.781065, 30.303729], [-97.781327, 30.303438], [-97.781848, 30.302901], [-97.782055, 30.302685], [-97.782333, 30.302393], [-97.782762, 30.301915], [-97.783101, 30.30155], [-97.783498, 30.30111], [-97.783716, 30.30085], [-97.78387, 30.300644], [-97.784053, 30.300323], [-97.784454, 30.299718], [-97.784808, 30.299244], [-97.78506, 30.298911], [-97.785473, 30.298303], [-97.785727, 30.297876], [-97.78592, 30.297506], [-97.786131, 30.297029], [-97.78622, 30.296813], [-97.786363, 30.296464], [-97.786745, 30.295446], [-97.786803, 30.295246], [-97.786887, 30.294863], [-97.786918, 30.294632], [-97.786937, 30.294382], [-97.786944, 30.294226], [-97.786968, 30.293847], [-97.786543, 30.293624], [-97.786228, 30.293584], [-97.78597, 30.293607], [-97.785798, 30.293614], [-97.785474, 30.29355], [-97.785385, 30.293408], [-97.785261, 30.293161], [-97.785527, 30.292613], [-97.785607, 30.292224], [-97.785637, 30.29209], [-97.785766, 30.291653], [-97.785875, 30.291278], [-97.78592, 30.290924], [-97.785828, 30.290656], [-97.785647, 30.290198], [-97.785547, 30.289905], [-97.785504, 30.289467], [-97.785508, 30.289304], [-97.785532, 30.289074], [-97.785539, 30.28881], [-97.785583, 30.288492], [-97.785589, 30.288283], [-97.785582, 30.288032], [-97.785415, 30.286753], [-97.785336, 30.286149], [-97.784888, 30.285378], [-97.784268, 30.28431], [-97.783893, 30.283945], [-97.78295, 30.28303], [-97.780348, 30.2805], [-97.77948, 30.27977], [-97.776871, 30.277705], [-97.776663, 30.277538], [-97.774997, 30.276353], [-97.774809, 30.27622], [-97.772779, 30.274889], [-97.772148, 30.274181], [-97.771912, 30.273945], [-97.771772, 30.273805], [-97.771562, 30.273592], [-97.771245, 30.273274], [-97.77072, 30.272747], [-97.769682, 30.27162], [-97.768271, 30.270665], [-97.766711, 30.269886], [-97.766316, 30.269741], [-97.763764, 30.268793], [-97.762338, 30.268211], [-97.761859, 30.268015], [-97.760657, 30.267526], [-97.761375, 30.267034], [-97.761827, 30.266755], [-97.761983, 30.266664], [-97.762157, 30.266574], [-97.762385, 30.26646], [-97.762619, 30.266336], [-97.762773, 30.266278], [-97.762967, 30.266175], [-97.763209, 30.2661], [-97.763449, 30.265967], [-97.763677, 30.26584], [-97.763856, 30.265725], [-97.764032, 30.26563], [-97.764229, 30.265516], [-97.76444, 30.265423], [-97.764711, 30.265319], [-97.7649, 30.265232], [-97.765106, 30.26514], [-97.76528, 30.265069], [-97.765446, 30.264984], [-97.76559, 30.264883], [-97.76576, 30.264773], [-97.765916, 30.264672], [-97.766076, 30.264612], [-97.766236, 30.264555], [-97.766438, 30.264512], [-97.766593, 30.264463], [-97.766773, 30.264406], [-97.76704, 30.264296], [-97.767252, 30.264223], [-97.767477, 30.264134], [-97.767792, 30.264066], [-97.768038, 30.264057], [-97.768263, 30.264064], [-97.768471, 30.264058], [-97.768679, 30.264034], [-97.768851, 30.264046], [-97.769108, 30.264062], [-97.769345, 30.264097], [-97.770369, 30.263867], [-97.770564, 30.263822], [-97.770946, 30.26373], [-97.771179, 30.263652], [-97.771435, 30.263608], [-97.7718, 30.263585], [-97.772074, 30.263585], [-97.772428, 30.263611], [-97.773154, 30.263678], [-97.773609, 30.263652], [-97.773894, 30.263643], [-97.774062, 30.263644], [-97.774223, 30.263647], [-97.774588, 30.263657], [-97.774827, 30.263651], [-97.775441, 30.263556], [-97.775681, 30.26352], [-97.775982, 30.263462], [-97.776238, 30.263404], [-97.77649, 30.263346], [-97.776702, 30.263292], [-97.776878, 30.263241], [-97.77723, 30.263091], [-97.777544, 30.263001], [-97.777764, 30.262937], [-97.777977, 30.262875], [-97.77824, 30.262845], [-97.778414, 30.262856], [-97.778664, 30.262848], [-97.778986, 30.262857], [-97.779461, 30.26288], [-97.779635, 30.26287], [-97.779853, 30.2628], [-97.780089, 30.262725], [-97.780346, 30.262683], [-97.780671, 30.262613], [-97.780923, 30.262538], [-97.781157, 30.262408], [-97.781388, 30.262291], [-97.781553, 30.262215], [-97.781873, 30.262089], [-97.782067, 30.261983], [-97.782265, 30.261841], [-97.782505, 30.261752], [-97.782753, 30.261722], [-97.782974, 30.26169], [-97.783233, 30.261654], [-97.783475, 30.261642], [-97.783707, 30.261587], [-97.783887, 30.261486], [-97.78412, 30.261301], [-97.784361, 30.261261], [-97.784559, 30.261196], [-97.784823, 30.261094], [-97.785012, 30.260994], [-97.785258, 30.260765], [-97.785372, 30.260654], [-97.785491, 30.26042], [-97.785462, 30.260186], [-97.785358, 30.260066], [-97.785217, 30.25995], [-97.785002, 30.259869], [-97.784715, 30.259827], [-97.784523, 30.259686], [-97.784332, 30.259539], [-97.784209, 30.259372], [-97.784186, 30.25919], [-97.784218, 30.258943], [-97.784246, 30.258797], [-97.784318, 30.258593], [-97.784382, 30.258462], [-97.784447, 30.258334], [-97.784577, 30.2581], [-97.784728, 30.257894], [-97.784983, 30.257665], [-97.785167, 30.257542], [-97.785375, 30.257406], [-97.785684, 30.257294], [-97.785834, 30.25725], [-97.786045, 30.257161], [-97.786322, 30.257002], [-97.786581, 30.256902], [-97.786843, 30.256814], [-97.787087, 30.256725], [-97.787473, 30.256587], [-97.787639, 30.256546], [-97.787919, 30.25645], [-97.788068, 30.256387], [-97.788328, 30.256274], [-97.788675, 30.256143], [-97.788855, 30.256054], [-97.789074, 30.255934], [-97.789236, 30.25586], [-97.789415, 30.25577], [-97.789557, 30.255699], [-97.78979, 30.255602], [-97.790178, 30.255491], [-97.790391, 30.25541], [-97.790645, 30.255297], [-97.790895, 30.255186], [-97.791111, 30.255116], [-97.791374, 30.255061], [-97.791674, 30.254924], [-97.791858, 30.254884], [-97.792176, 30.254786], [-97.792543, 30.254642], [-97.792728, 30.254565], [-97.792998, 30.254477], [-97.793224, 30.25441], [-97.793451, 30.254327], [-97.79367, 30.254254], [-97.793902, 30.254162], [-97.794231, 30.254122], [-97.794534, 30.254068], [-97.794755, 30.253954], [-97.795021, 30.253844], [-97.795242, 30.253738], [-97.795459, 30.253607], [-97.79568, 30.253458], [-97.795811, 30.253304], [-97.79591, 30.253124], [-97.796023, 30.25292], [-97.796074, 30.252767], [-97.796136, 30.252557], [-97.796113, 30.252358], [-97.796093, 30.252184], [-97.796144, 30.252053], [-97.796208, 30.25189], [-97.796267, 30.25166], [-97.796289, 30.25149], [-97.796301, 30.251336], [-97.796355, 30.2511], [-97.796386, 30.25084], [-97.796425, 30.250623], [-97.796479, 30.25033], [-97.796496, 30.250116], [-97.796546, 30.249913], [-97.796613, 30.2497], [-97.796636, 30.249417], [-97.796709, 30.2491], [-97.796751, 30.248867], [-97.79675, 30.24871], [-97.796749, 30.248498], [-97.796727, 30.248294], [-97.79664, 30.248097], [-97.796478, 30.247954], [-97.796359, 30.24783], [-97.796194, 30.247753], [-97.796024, 30.24767], [-97.795857, 30.247672], [-97.795445, 30.24768], [-97.795118, 30.247737], [-97.794928, 30.247769], [-97.794664, 30.247835], [-97.794491, 30.247881], [-97.794244, 30.247945], [-97.793984, 30.24797], [-97.793727, 30.24802], [-97.793431, 30.248045], [-97.793269, 30.24803], [-97.793107, 30.248014], [-97.792742, 30.247924], [-97.792565, 30.247876], [-97.792361, 30.247845], [-97.792207, 30.247806], [-97.791992, 30.247749], [-97.791845, 30.247645], [-97.791704, 30.247562], [-97.791385, 30.247383], [-97.791118, 30.24722], [-97.790938, 30.247082], [-97.790666, 30.247041], [-97.790458, 30.246965], [-97.790272, 30.246863], [-97.790053, 30.246735], [-97.789773, 30.24658], [-97.789521, 30.246427], [-97.789374, 30.246289], [-97.789237, 30.246108], [-97.789087, 30.245901], [-97.788974, 30.245753], [-97.788883, 30.245556], [-97.788847, 30.245377], [-97.788829, 30.245189], [-97.788764, 30.24488], [-97.78871, 30.244587], [-97.788725, 30.244409], [-97.788767, 30.244192], [-97.788804, 30.243998], [-97.788818, 30.243701], [-97.788851, 30.243501], [-97.788918, 30.24326], [-97.789049, 30.243029], [-97.789137, 30.242907], [-97.789299, 30.242699], [-97.789493, 30.242422], [-97.789657, 30.242252], [-97.789859, 30.242102], [-97.790092, 30.242032], [-97.790416, 30.241989], [-97.790639, 30.241983], [-97.791069, 30.241983], [-97.79142, 30.24196], [-97.79166, 30.241923], [-97.791989, 30.24185], [-97.792362, 30.241879], [-97.792544, 30.241993], [-97.792683, 30.24213], [-97.792795, 30.242322], [-97.792831, 30.242458], [-97.792932, 30.242622], [-97.79309, 30.242832], [-97.79319, 30.242941], [-97.793382, 30.243104], [-97.793614, 30.243136], [-97.79385, 30.243149], [-97.79408, 30.243198], [-97.794311, 30.24331], [-97.794537, 30.243424], [-97.794793, 30.243545], [-97.794985, 30.243636], [-97.795151, 30.243717], [-97.795379, 30.243807], [-97.795619, 30.243899], [-97.795796, 30.244018], [-97.795955, 30.244156], [-97.796214, 30.244332], [-97.79641, 30.244451], [-97.796563, 30.24454], [-97.79682, 30.244674], [-97.796963, 30.244743], [-97.797111, 30.244812], [-97.797364, 30.24491], [-97.797635, 30.244973], [-97.797807, 30.245004], [-97.798243, 30.245073], [-97.798379, 30.245153], [-97.79868, 30.245184], [-97.79899, 30.245193], [-97.799303, 30.245207], [-97.799559, 30.245234], [-97.799811, 30.245275], [-97.800185, 30.245307], [-97.800418, 30.245301], [-97.800597, 30.245285], [-97.800812, 30.245267], [-97.801047, 30.245233], [-97.801274, 30.245144], [-97.801764, 30.244931], [-97.802067, 30.244827], [-97.802288, 30.24476], [-97.802568, 30.244656], [-97.802795, 30.244558], [-97.802993, 30.244491], [-97.803305, 30.24431], [-97.803453, 30.244239], [-97.803606, 30.244167], [-97.803767, 30.244096], [-97.803912, 30.244028], [-97.804222, 30.243849], [-97.804552, 30.243663], [-97.804862, 30.243466], [-97.805061, 30.243343], [-97.805519, 30.243102], [-97.805706, 30.243007], [-97.805919, 30.242885], [-97.806136, 30.242713], [-97.806315, 30.242549], [-97.806468, 30.242389], [-97.806644, 30.242165], [-97.806773, 30.24195], [-97.806866, 30.241828], [-97.807058, 30.241603], [-97.807218, 30.241444], [-97.807402, 30.241286], [-97.807582, 30.241141], [-97.807848, 30.240797], [-97.807984, 30.240607], [-97.808154, 30.240442], [-97.808515, 30.240141], [-97.808673, 30.239974], [-97.808909, 30.239811], [-97.809164, 30.239673], [-97.809425, 30.239579], [-97.809681, 30.239543], [-97.809946, 30.239559], [-97.810217, 30.239652], [-97.810335, 30.239779], [-97.810493, 30.239949], [-97.8106, 30.240163], [-97.810773, 30.240521], [-97.810862, 30.24071], [-97.81088, 30.240867], [-97.810852, 30.241175], [-97.810838, 30.241425], [-97.810815, 30.241774], [-97.810791, 30.241911], [-97.810742, 30.242144], [-97.810705, 30.242316], [-97.81067, 30.242478], [-97.810658, 30.242629], [-97.810698, 30.24294], [-97.81072, 30.243227], [-97.810749, 30.243401], [-97.810799, 30.243644], [-97.810846, 30.243862], [-97.810887, 30.244036], [-97.81094, 30.244238], [-97.810995, 30.244409], [-97.811046, 30.244551], [-97.811123, 30.244761], [-97.811205, 30.244994], [-97.81131, 30.245205], [-97.811429, 30.245411], [-97.811572, 30.245664], [-97.811691, 30.245867], [-97.811899, 30.246154], [-97.812043, 30.246366], [-97.812206, 30.246664], [-97.812342, 30.246958], [-97.812405, 30.247127], [-97.812489, 30.247384], [-97.812564, 30.247617], [-97.812642, 30.24799], [-97.812678, 30.248199], [-97.812761, 30.248476], [-97.812828, 30.248711], [-97.812955, 30.248914], [-97.813069, 30.249032], [-97.813094, 30.249269], [-97.813102, 30.24947], [-97.813194, 30.249736], [-97.813324, 30.250093], [-97.813368, 30.250254], [-97.813396, 30.250414], [-97.813427, 30.250681], [-97.813483, 30.251001], [-97.813502, 30.251139], [-97.813633, 30.251439], [-97.813777, 30.251609], [-97.813924, 30.251692], [-97.8141, 30.251827], [-97.814344, 30.252044], [-97.814463, 30.252143], [-97.814743, 30.252368], [-97.814999, 30.252571], [-97.815208, 30.252757], [-97.815425, 30.252912], [-97.815673, 30.253057], [-97.815854, 30.253146], [-97.816126, 30.253284], [-97.816487, 30.253431], [-97.816714, 30.253515], [-97.817026, 30.253662], [-97.817187, 30.253725], [-97.817451, 30.253824], [-97.817679, 30.253903], [-97.81793, 30.254018], [-97.818142, 30.254113], [-97.818365, 30.254142], [-97.818576, 30.254204], [-97.81897, 30.25442], [-97.819111, 30.254492], [-97.819381, 30.25469], [-97.81963, 30.254871], [-97.819981, 30.25512], [-97.820171, 30.25525], [-97.820429, 30.255447], [-97.82082, 30.255747], [-97.820952, 30.25587], [-97.821261, 30.256115], [-97.82138, 30.25622], [-97.82152, 30.256346], [-97.821794, 30.256599], [-97.821902, 30.256711], [-97.822071, 30.256923], [-97.822173, 30.257173], [-97.822255, 30.257296], [-97.822439, 30.257541], [-97.82251, 30.257683], [-97.822613, 30.257883], [-97.822702, 30.258182], [-97.822773, 30.258403], [-97.822925, 30.258698], [-97.823008, 30.25887], [-97.823198, 30.2593], [-97.823326, 30.259588], [-97.823399, 30.259793], [-97.823483, 30.260029], [-97.823587, 30.26027], [-97.823625, 30.260499], [-97.823622, 30.26095], [-97.823585, 30.261172], [-97.823584, 30.26145], [-97.823594, 30.261684], [-97.823612, 30.261907], [-97.823539, 30.26212], [-97.823442, 30.2623], [-97.82329, 30.262591], [-97.823167, 30.262861], [-97.823111, 30.26303], [-97.823066, 30.263249], [-97.823039, 30.263491], [-97.823018, 30.263754], [-97.823005, 30.263925], [-97.822997, 30.264081], [-97.822993, 30.264233], [-97.822994, 30.264406], [-97.82304, 30.264638], [-97.823097, 30.264787], [-97.823182, 30.264968], [-97.823211, 30.265103], [-97.823281, 30.265256], [-97.823338, 30.265405], [-97.823383, 30.265552], [-97.823415, 30.265698], [-97.823408, 30.265877], [-97.823375, 30.266085], [-97.823409, 30.266281], [-97.823469, 30.266464], [-97.823569, 30.266747], [-97.823622, 30.266915], [-97.82366, 30.267059], [-97.82375, 30.267407], [-97.823809, 30.267607], [-97.823855, 30.267751], [-97.823914, 30.267919], [-97.823981, 30.268097], [-97.824058, 30.268285], [-97.824211, 30.268566], [-97.824388, 30.268889], [-97.824568, 30.269162], [-97.824666, 30.269304], [-97.824794, 30.269491], [-97.8249, 30.2696], [-97.825057, 30.269765], [-97.825252, 30.269838], [-97.825504, 30.269892], [-97.825795, 30.269948], [-97.826125, 30.269979], [-97.826348, 30.269983], [-97.826629, 30.269969], [-97.826883, 30.269933], [-97.827061, 30.269926], [-97.827223, 30.269926], [-97.827529, 30.269937], [-97.827897, 30.269956], [-97.828171, 30.269928], [-97.828329, 30.269884], [-97.828501, 30.269882], [-97.828704, 30.269881], [-97.828985, 30.269883], [-97.829319, 30.269893], [-97.829497, 30.269899], [-97.829684, 30.269905], [-97.82987, 30.269912], [-97.830118, 30.269922], [-97.830453, 30.269973], [-97.830715, 30.270011], [-97.830927, 30.270139], [-97.831083, 30.270298], [-97.831191, 30.270455], [-97.831267, 30.270654], [-97.83132, 30.270886], [-97.831369, 30.271036], [-97.831581, 30.27126], [-97.831757, 30.271398], [-97.831877, 30.271549], [-97.831999, 30.2717], [-97.8322, 30.27188], [-97.832354, 30.27202], [-97.83252, 30.272216], [-97.83275, 30.272495], [-97.832956, 30.272733], [-97.833081, 30.272898], [-97.833404, 30.273322], [-97.833619, 30.273549], [-97.833721, 30.273656], [-97.833922, 30.273847], [-97.834041, 30.273948], [-97.834173, 30.274058], [-97.834446, 30.274129], [-97.834626, 30.274234], [-97.834931, 30.274403], [-97.835124, 30.274503], [-97.83536, 30.274604], [-97.835509, 30.274661], [-97.835784, 30.274763], [-97.836268, 30.274984], [-97.836488, 30.275051], [-97.837176, 30.27396], [-97.837669, 30.273189], [-97.838309, 30.272189], [-97.838869, 30.271312], [-97.840389, 30.268935], [-97.847684, 30.257524], [-97.849104, 30.255302], [-97.846406, 30.254068], [-97.849411, 30.249716], [-97.857529, 30.253046], [-97.85698, 30.254111], [-97.862663, 30.256164], [-97.857339, 30.261502], [-97.858534, 30.263578], [-97.857392, 30.265532], [-97.854954, 30.26581], [-97.854769, 30.270162], [-97.85286, 30.27238], [-97.854754, 30.276614], [-97.854062, 30.277575], [-97.848152, 30.277576], [-97.849728, 30.279443], [-97.849986, 30.279767], [-97.850215, 30.279953], [-97.850794, 30.280368], [-97.851124, 30.280641], [-97.851397, 30.280936], [-97.851589, 30.281242], [-97.851761, 30.28155], [-97.852024, 30.281773], [-97.852273, 30.281846], [-97.852418, 30.282053], [-97.852485, 30.282277], [-97.852541, 30.282657], [-97.852536, 30.282916], [-97.852464, 30.283063], [-97.852407, 30.283381], [-97.852284, 30.283689], [-97.852127, 30.284014], [-97.852024, 30.284221], [-97.851847, 30.284382], [-97.851407, 30.284737], [-97.85129, 30.284886], [-97.85121, 30.285024], [-97.851082, 30.285181], [-97.850777, 30.285448], [-97.850518, 30.285688], [-97.850364, 30.285737], [-97.849965, 30.285941], [-97.849723, 30.286057], [-97.849549, 30.2862], [-97.849308, 30.286365], [-97.849144, 30.28639], [-97.848953, 30.286496], [-97.848627, 30.286668], [-97.848267, 30.286849], [-97.848072, 30.287018], [-97.847893, 30.287174], [-97.847552, 30.287429], [-97.847099, 30.287802], [-97.84696, 30.288], [-97.846825, 30.28819], [-97.846601, 30.288315], [-97.846334, 30.288467], [-97.846054, 30.288629], [-97.845786, 30.288764], [-97.845443, 30.288851], [-97.845248, 30.28891], [-97.845002, 30.289002], [-97.8447, 30.289191], [-97.844377, 30.289446], [-97.844, 30.289764], [-97.843804, 30.289894], [-97.843564, 30.290159], [-97.84333, 30.290419], [-97.843206, 30.290568], [-97.843181, 30.290716], [-97.843164, 30.290979], [-97.843093, 30.291283], [-97.843026, 30.291505], [-97.842985, 30.291749], [-97.842982, 30.292136], [-97.842956, 30.292348], [-97.843137, 30.292615], [-97.843389, 30.292749], [-97.843568, 30.292783], [-97.843885, 30.292781], [-97.844092, 30.292741], [-97.844338, 30.292718], [-97.844496, 30.292776], [-97.844638, 30.292848], [-97.844821, 30.292802], [-97.844861, 30.292652], [-97.844983, 30.292494], [-97.845257, 30.292247], [-97.845574, 30.291942], [-97.845859, 30.291739], [-97.846233, 30.291586], [-97.846526, 30.291496], [-97.846683, 30.291293], [-97.846962, 30.291092], [-97.847178, 30.291066], [-97.847423, 30.291098], [-97.847715, 30.291167], [-97.847955, 30.291193], [-97.848364, 30.291229], [-97.848671, 30.291268], [-97.849684, 30.291444], [-97.850009, 30.291489], [-97.850162, 30.291605], [-97.850477, 30.291781], [-97.85068, 30.291904], [-97.850805, 30.292035], [-97.850903, 30.292158], [-97.851011, 30.29232], [-97.851038, 30.292488], [-97.851014, 30.292721], [-97.851051, 30.29297], [-97.85111, 30.293262], [-97.851298, 30.293332], [-97.851536, 30.293774], [-97.851599, 30.293954], [-97.851582, 30.294132], [-97.851596, 30.294542], [-97.851685, 30.295053], [-97.851721, 30.295329], [-97.851837, 30.295655], [-97.851832, 30.295911], [-97.8519, 30.296286], [-97.851947, 30.29643], [-97.852048, 30.296727], [-97.852132, 30.297064], [-97.852252, 30.297388], [-97.852344, 30.297601], [-97.852484, 30.297794], [-97.852599, 30.297917], [-97.85259, 30.298137], [-97.852509, 30.298358], [-97.852547, 30.298953], [-97.852656, 30.299678], [-97.852663, 30.300088], [-97.852713, 30.300367], [-97.852786, 30.300536], [-97.852939, 30.300655], [-97.853027, 30.301019], [-97.853081, 30.301573], [-97.853146, 30.302127], [-97.853033, 30.302513], [-97.852933, 30.302668], [-97.852919, 30.302893], [-97.85307, 30.303284], [-97.853228, 30.303683], [-97.853535, 30.304118], [-97.853918, 30.304433], [-97.854277, 30.304652], [-97.855048, 30.304892], [-97.855495, 30.304981], [-97.855651, 30.304951], [-97.855949, 30.305006], [-97.856142, 30.304988], [-97.856466, 30.304879], [-97.856607, 30.304807], [-97.856911, 30.304744], [-97.857092, 30.304596], [-97.857203, 30.304246], [-97.85735, 30.30384], [-97.857553, 30.303456], [-97.857726, 30.303206], [-97.857864, 30.302873], [-97.857995, 30.302458], [-97.858046, 30.302162], [-97.858054, 30.301975], [-97.85807, 30.301744], [-97.858066, 30.301433], [-97.85813, 30.301016], [-97.858239, 30.30035], [-97.85825, 30.300062], [-97.858206, 30.299909], [-97.858084, 30.299723], [-97.858209, 30.299329], [-97.858386, 30.298807], [-97.858578, 30.298324], [-97.858767, 30.298056], [-97.859104, 30.297762], [-97.859426, 30.297477], [-97.859785, 30.297258], [-97.860072, 30.297066], [-97.860524, 30.296926], [-97.860876, 30.296831], [-97.861329, 30.296746], [-97.861648, 30.296802], [-97.861893, 30.296826], [-97.862158, 30.296892], [-97.862415, 30.297004], [-97.862592, 30.297136], [-97.862737, 30.297282], [-97.862933, 30.297481], [-97.863116, 30.297754], [-97.86328, 30.298005], [-97.863432, 30.298192], [-97.863535, 30.298359], [-97.863605, 30.298495], [-97.863683, 30.298645], [-97.86384, 30.298852], [-97.863961, 30.299055], [-97.86408, 30.299247], [-97.8642, 30.299425], [-97.863735, 30.299615], [-97.86317, 30.299824], [-97.862845, 30.300013], [-97.862597, 30.300294], [-97.862366, 30.30172], [-97.862518, 30.302267], [-97.862809, 30.3026], [-97.863224, 30.302751], [-97.863633, 30.303188], [-97.863727, 30.303591], [-97.86356, 30.304265], [-97.863881, 30.305024], [-97.864689, 30.306264], [-97.865173, 30.30665], [-97.866088, 30.308375], [-97.866156, 30.308657], [-97.865922, 30.309607], [-97.865904, 30.310294], [-97.865777, 30.310592], [-97.864684, 30.312314], [-97.86361, 30.312684], [-97.863204, 30.313507], [-97.863284, 30.313874], [-97.86381, 30.314234], [-97.864565, 30.316404], [-97.865101, 30.317111], [-97.865402, 30.317515], [-97.865627, 30.317806], [-97.865183, 30.317932], [-97.864435, 30.318146], [-97.863782, 30.318334], [-97.863164, 30.318509], [-97.862782, 30.31862], [-97.862551, 30.318679], [-97.862013, 30.318624], [-97.860863, 30.317816], [-97.859933, 30.317044], [-97.858659, 30.315985], [-97.857218, 30.315405], [-97.856942, 30.315295], [-97.856103, 30.31477], [-97.855172, 30.314427], [-97.852715, 30.313346], [-97.851982, 30.313023], [-97.851487, 30.312805], [-97.850792, 30.312362], [-97.850354, 30.312101], [-97.849851, 30.311643], [-97.849343, 30.311182], [-97.849205, 30.311058], [-97.84815, 30.310501], [-97.847308, 30.31043], [-97.846911, 30.310395], [-97.846179, 30.310334], [-97.845569, 30.310138], [-97.845059, 30.309977], [-97.844496, 30.309567], [-97.843935, 30.309124], [-97.843593, 30.308851], [-97.843261, 30.308294], [-97.843107, 30.308033], [-97.842921, 30.307256], [-97.842732, 30.306469], [-97.8425, 30.306], [-97.842205, 30.3054], [-97.841561, 30.304777], [-97.840685, 30.304012], [-97.840202, 30.303507], [-97.839902, 30.303001], [-97.839381, 30.304776], [-97.841153, 30.309128], [-97.841249, 30.309353], [-97.84127, 30.309551], [-97.841224, 30.309715], [-97.841206, 30.309866], [-97.841174, 30.310066], [-97.841161, 30.310305], [-97.84118, 30.310443], [-97.841228, 30.310609], [-97.841309, 30.3108], [-97.841544, 30.311072], [-97.841462, 30.311263], [-97.841337, 30.311458], [-97.84117, 30.311595], [-97.841004, 30.311721], [-97.840852, 30.311817], [-97.840648, 30.311967], [-97.84053, 30.312072], [-97.840225, 30.31238], [-97.840134, 30.312557], [-97.840012, 30.312912], [-97.839941, 30.31304], [-97.839847, 30.313253], [-97.839702, 30.313409], [-97.839656, 30.313651], [-97.839696, 30.313847], [-97.839753, 30.314068], [-97.839828, 30.31419], [-97.839976, 30.314322], [-97.840212, 30.314382], [-97.840378, 30.314602], [-97.840433, 30.314722], [-97.840417, 30.314909], [-97.840469, 30.31505], [-97.840539, 30.31523], [-97.840578, 30.315423], [-97.840469, 30.315636], [-97.84039, 30.315824], [-97.840363, 30.315964], [-97.840313, 30.316163], [-97.840227, 30.316459], [-97.840126, 30.316616], [-97.84005, 30.31678], [-97.839898, 30.316972], [-97.839744, 30.317115], [-97.839564, 30.3174], [-97.839522, 30.317556], [-97.839416, 30.317667], [-97.839318, 30.317775], [-97.839254, 30.317906], [-97.839132, 30.318121], [-97.839045, 30.318281], [-97.838934, 30.318494], [-97.839013, 30.318732], [-97.839075, 30.319005], [-97.839096, 30.31922], [-97.839013, 30.319419], [-97.838999, 30.319556], [-97.838994, 30.319793], [-97.838825, 30.319949], [-97.83869, 30.320142], [-97.838606, 30.320363], [-97.838619, 30.320547], [-97.838655, 30.320697], [-97.838728, 30.320907], [-97.838846, 30.321107], [-97.83895, 30.321233], [-97.83912, 30.321495], [-97.839204, 30.32167], [-97.839325, 30.321876], [-97.839495, 30.322044], [-97.839632, 30.322209], [-97.839782, 30.322355], [-97.839912, 30.322503], [-97.840086, 30.32265], [-97.840243, 30.322749], [-97.84051, 30.322938], [-97.840709, 30.323077], [-97.840982, 30.323206], [-97.841201, 30.323287], [-97.84144, 30.323311], [-97.841671, 30.323327], [-97.841959, 30.323277], [-97.842278, 30.323204], [-97.842743, 30.323059], [-97.842949, 30.323099], [-97.842966, 30.323247], [-97.842965, 30.323539], [-97.843105, 30.323715], [-97.843331, 30.323816], [-97.843526, 30.323916], [-97.843658, 30.324056], [-97.843761, 30.324176], [-97.843804, 30.324317], [-97.843837, 30.324609], [-97.843664, 30.324724], [-97.843398, 30.324785], [-97.843176, 30.324885], [-97.843016, 30.325033], [-97.842884, 30.325116], [-97.842683, 30.325197], [-97.841893, 30.325317], [-97.841567, 30.324961], [-97.839983, 30.324218], [-97.837796, 30.323694], [-97.834233, 30.323947], [-97.832347, 30.324375], [-97.830478, 30.325221], [-97.829234, 30.326036], [-97.827737, 30.327046], [-97.825533, 30.329093], [-97.824356, 30.330184], [-97.8242, 30.330329], [-97.822034, 30.333084], [-97.819524, 30.33628], [-97.818021, 30.337791], [-97.815054, 30.340956], [-97.814105, 30.342087], [-97.813315, 30.343026], [-97.812775, 30.343783], [-97.811972, 30.344905], [-97.81127, 30.345832], [-97.811015, 30.346168], [-97.810348, 30.347313], [-97.809511, 30.348669], [-97.809276, 30.348928], [-97.808555, 30.349726], [-97.807503, 30.350766], [-97.807277, 30.350944], [-97.806733, 30.351373], [-97.80583, 30.351875], [-97.804938, 30.352176], [-97.804028, 30.352392], [-97.802753, 30.352403], [-97.801787, 30.352276], [-97.800199, 30.351714], [-97.799951, 30.351608], [-97.79905, 30.35121], [-97.797998, 30.350612], [-97.797699, 30.350405], [-97.796958, 30.349896], [-97.796788, 30.349829], [-97.796596, 30.349756], [-97.796222, 30.349573], [-97.795523, 30.349072], [-97.79486, 30.3486], [-97.794479, 30.348326], [-97.7937, 30.347768], [-97.792353, 30.346856], [-97.791459, 30.346247], [-97.791184, 30.346024], [-97.789689, 30.344826], [-97.788302, 30.343561], [-97.78768, 30.342762], [-97.787387, 30.342384], [-97.786551, 30.34137], [-97.786231, 30.340918], [-97.785074, 30.338936], [-97.784738, 30.33836], [-97.784322, 30.337648], [-97.783103, 30.335561], [-97.782706, 30.33491], [-97.781976, 30.333773], [-97.781899, 30.333645], [-97.781243, 30.332556], [-97.781045, 30.332228], [-97.780716, 30.33168], [-97.780124, 30.330741], [-97.779693, 30.329949], [-97.779384, 30.329348], [-97.778793, 30.328256], [-97.778382, 30.327464], [-97.777935, 30.326528], [-97.77753, 30.325502], [-97.77705, 30.324211], [-97.776797, 30.323483], [-97.776631, 30.323006]]]]
    },
    "properties": {
      "neighbourhood": "78746",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-97.74744, 30.421618], [-97.747214, 30.420917], [-97.746871, 30.419051], [-97.746195, 30.419123], [-97.746029, 30.419136], [-97.745449, 30.419113], [-97.745412, 30.419111], [-97.745145, 30.419038], [-97.739387, 30.416219], [-97.737225, 30.415224], [-97.732843, 30.413166], [-97.732107, 30.412805], [-97.731883, 30.412695], [-97.731409, 30.412763], [-97.73111, 30.413201], [-97.730741, 30.413761], [-97.730569, 30.414117], [-97.730398, 30.414447], [-97.729868, 30.415132], [-97.729535, 30.415169], [-97.72922, 30.415204], [-97.728578, 30.414877], [-97.728166, 30.414674], [-97.727423, 30.414312], [-97.726636, 30.413952], [-97.725871, 30.413677], [-97.724116, 30.412801], [-97.723359, 30.412428], [-97.722659, 30.41215], [-97.721899, 30.412028], [-97.721835, 30.412018], [-97.720573, 30.413801], [-97.720056, 30.41455], [-97.719554, 30.415277], [-97.719293, 30.415622], [-97.718776, 30.416581], [-97.71831, 30.41727], [-97.718282, 30.417317], [-97.71815, 30.417529], [-97.71815, 30.417529], [-97.717278, 30.418936], [-97.716781, 30.419784], [-97.716258, 30.420528], [-97.715622, 30.421435], [-97.713992, 30.42066], [-97.713065, 30.420216], [-97.713041, 30.420206], [-97.709118, 30.418383], [-97.708227, 30.417907], [-97.708213, 30.417901], [-97.708211, 30.4179], [-97.707418, 30.41872], [-97.707051, 30.419076], [-97.705279, 30.421185], [-97.704181, 30.420517], [-97.704216, 30.420374], [-97.704652, 30.419271], [-97.705121, 30.41864], [-97.705277, 30.418078], [-97.705632, 30.416808], [-97.706133, 30.416204], [-97.706717, 30.415499], [-97.707942, 30.414021], [-97.708314, 30.413572], [-97.708837, 30.412941], [-97.709602, 30.412017], [-97.710162, 30.411342], [-97.710954, 30.410809], [-97.711503, 30.410439], [-97.711783, 30.410251], [-97.713139, 30.409877], [-97.716095, 30.40906], [-97.718688, 30.408689], [-97.720237, 30.408197], [-97.724697, 30.406164], [-97.727909, 30.403712], [-97.730158, 30.401073], [-97.732666, 30.39781], [-97.73559, 30.381683], [-97.735771, 30.37963], [-97.735939, 30.379207], [-97.736152, 30.378669], [-97.736204, 30.378539], [-97.736611, 30.377565], [-97.738165, 30.373893], [-97.740887, 30.36746], [-97.741962, 30.367959], [-97.742731, 30.367231], [-97.742972, 30.366207], [-97.743244, 30.364757], [-97.743304, 30.36444], [-97.743644, 30.363621], [-97.74389, 30.362892], [-97.744184, 30.362274], [-97.744462, 30.361688], [-97.744647, 30.361299], [-97.744668, 30.361255], [-97.745259, 30.361261], [-97.745979, 30.361377], [-97.74647, 30.361539], [-97.747038, 30.36188], [-97.747547, 30.362262], [-97.748249, 30.362785], [-97.749059, 30.363491], [-97.749364, 30.363838], [-97.74945, 30.364039], [-97.749861, 30.364998], [-97.750226, 30.365586], [-97.750976, 30.366154], [-97.752425, 30.366882], [-97.752957, 30.367269], [-97.753821, 30.368191], [-97.75437, 30.368689], [-97.755105, 30.370195], [-97.755285, 30.370459], [-97.755472, 30.370635], [-97.755677, 30.370828], [-97.755787, 30.370892], [-97.755972, 30.370999], [-97.757225, 30.371533], [-97.757336, 30.37158], [-97.757523, 30.37166], [-97.75768, 30.371751], [-97.757814, 30.371855], [-97.758048, 30.372219], [-97.758105, 30.372309], [-97.758983, 30.373939], [-97.759161, 30.374215], [-97.75937, 30.374406], [-97.759372, 30.374408], [-97.759373, 30.374409], [-97.759811, 30.374769], [-97.7603, 30.375016], [-97.761215, 30.37537], [-97.761681, 30.375505], [-97.761965, 30.375572], [-97.762329, 30.375678], [-97.762625, 30.375742], [-97.762886, 30.375818], [-97.763112, 30.375969], [-97.763416, 30.376145], [-97.763606, 30.376328], [-97.763773, 30.376502], [-97.763947, 30.376684], [-97.764437, 30.377362], [-97.764544, 30.37751], [-97.76464, 30.377688], [-97.764669, 30.377741], [-97.764742, 30.377885], [-97.764882, 30.378039], [-97.764942, 30.378236], [-97.764976, 30.37844], [-97.764996, 30.378647], [-97.765017, 30.378853], [-97.765051, 30.379058], [-97.765089, 30.379259], [-97.765128, 30.379464], [-97.765167, 30.379668], [-97.765206, 30.379869], [-97.765247, 30.380074], [-97.765286, 30.380278], [-97.765327, 30.38048], [-97.765367, 30.380684], [-97.765408, 30.380886], [-97.765449, 30.38109], [-97.765489, 30.381294], [-97.765531, 30.381496], [-97.765571, 30.3817], [-97.765612, 30.381902], [-97.765613, 30.381914], [-97.765627, 30.382139], [-97.765666, 30.38237], [-97.765748, 30.382719], [-97.76587, 30.383249], [-97.765956, 30.383454], [-97.766035, 30.383621], [-97.76645, 30.384433], [-97.766674, 30.384871], [-97.766746, 30.38501], [-97.76758, 30.384482], [-97.76897, 30.383809], [-97.771333, 30.382662], [-97.771396, 30.382762], [-97.771409, 30.382784], [-97.771473, 30.382885], [-97.77156, 30.383091], [-97.771559, 30.383239], [-97.771521, 30.383456], [-97.771505, 30.383612], [-97.771322, 30.384376], [-97.771331, 30.384612], [-97.771457, 30.385319], [-97.771463, 30.385355], [-97.771517, 30.385661], [-97.771592, 30.385858], [-97.771751, 30.386081], [-97.771934, 30.386288], [-97.771999, 30.386323], [-97.772873, 30.386783], [-97.773191, 30.387081], [-97.774002, 30.388667], [-97.774056, 30.388922], [-97.77411, 30.389176], [-97.774123, 30.389608], [-97.774263, 30.38982], [-97.774491, 30.390102], [-97.774771, 30.390287], [-97.77488, 30.39036], [-97.775628, 30.39084], [-97.775853, 30.390899], [-97.776801, 30.390951], [-97.777482, 30.390995], [-97.777755, 30.391009], [-97.77793, 30.391018], [-97.7781, 30.391048], [-97.778305, 30.391193], [-97.778503, 30.391458], [-97.778602, 30.391653], [-97.77864, 30.391926], [-97.778537, 30.392075], [-97.778142, 30.392645], [-97.778867, 30.39297], [-97.779003, 30.393044], [-97.778929, 30.393799], [-97.778911, 30.394015], [-97.778861, 30.394642], [-97.778815, 30.395205], [-97.777539, 30.396343], [-97.77755, 30.396349], [-97.77866, 30.397006], [-97.779082, 30.39727], [-97.779551, 30.397428], [-97.780215, 30.397565], [-97.780588, 30.39766], [-97.781559, 30.398001], [-97.781928, 30.398259], [-97.782192, 30.398443], [-97.78288, 30.39921], [-97.783103, 30.399449], [-97.783577, 30.399873], [-97.783805, 30.400318], [-97.784101, 30.401025], [-97.784751, 30.402366], [-97.784812, 30.402491], [-97.785522, 30.403427], [-97.785856, 30.403783], [-97.786195, 30.404026], [-97.787003, 30.404383], [-97.78727, 30.404444], [-97.787606, 30.404522], [-97.788295, 30.404857], [-97.789473, 30.405895], [-97.789565, 30.406147], [-97.789833, 30.406559], [-97.789888, 30.406643], [-97.791212, 30.407737], [-97.791953, 30.408356], [-97.79196, 30.408362], [-97.792224, 30.408587], [-97.792336, 30.4089], [-97.792382, 30.409435], [-97.792168, 30.410146], [-97.792118, 30.410338], [-97.792057, 30.410578], [-97.792179, 30.411067], [-97.792212, 30.411197], [-97.792342, 30.41217], [-97.792419, 30.412744], [-97.792882, 30.413375], [-97.79461, 30.414916], [-97.795075, 30.415484], [-97.795112, 30.415671], [-97.795201, 30.416122], [-97.795185, 30.416748], [-97.795104, 30.417212], [-97.794914, 30.417626], [-97.794445, 30.418211], [-97.794253, 30.418507], [-97.794152, 30.418661], [-97.793952, 30.419221], [-97.793815, 30.419951], [-97.793793, 30.420068], [-97.79379, 30.420089], [-97.793707, 30.420691], [-97.793813, 30.42099], [-97.794031, 30.421283], [-97.794549, 30.421843], [-97.793613, 30.422529], [-97.793394, 30.422613], [-97.793264, 30.422662], [-97.792992, 30.42275], [-97.792427, 30.42287], [-97.791809, 30.423002], [-97.791306, 30.423124], [-97.790858, 30.423186], [-97.790855, 30.423186], [-97.790516, 30.423174], [-97.790108, 30.4231], [-97.789847, 30.422985], [-97.789455, 30.422818], [-97.78937, 30.42278], [-97.789112, 30.422668], [-97.788719, 30.422498], [-97.788337, 30.422424], [-97.787916, 30.422405], [-97.787579, 30.42242], [-97.787035, 30.422519], [-97.786567, 30.422604], [-97.786025, 30.422799], [-97.785875, 30.422887], [-97.785779, 30.422942], [-97.785734, 30.422968], [-97.785668, 30.423007], [-97.785432, 30.423216], [-97.785219, 30.423462], [-97.785048, 30.423704], [-97.784988, 30.423841], [-97.784951, 30.423923], [-97.784905, 30.424028], [-97.784822, 30.424291], [-97.784831, 30.424555], [-97.784844, 30.424891], [-97.784848, 30.424909], [-97.784873, 30.425013], [-97.784902, 30.425131], [-97.78494, 30.425289], [-97.785079, 30.425866], [-97.78509, 30.426078], [-97.785089, 30.426088], [-97.785048, 30.42644], [-97.784937, 30.426642], [-97.784924, 30.426666], [-97.78482, 30.426857], [-97.78463, 30.427078], [-97.784599, 30.427114], [-97.784426, 30.42727], [-97.784314, 30.427348], [-97.784156, 30.427457], [-97.783624, 30.427823], [-97.783251, 30.42811], [-97.783042, 30.428315], [-97.782453, 30.429069], [-97.7823, 30.429265], [-97.781837, 30.429743], [-97.781535, 30.429968], [-97.781417, 30.430026], [-97.781218, 30.430124], [-97.780825, 30.430364], [-97.780707, 30.430435], [-97.779993, 30.430867], [-97.779341, 30.431261], [-97.779174, 30.431351], [-97.778528, 30.431553], [-97.778293, 30.431625], [-97.777869, 30.431757], [-97.777287, 30.431946], [-97.776994, 30.432026], [-97.776978, 30.432031], [-97.776414, 30.432185], [-97.775538, 30.432431], [-97.773642, 30.432989], [-97.772681, 30.433271], [-97.770321, 30.434019], [-97.770148, 30.434084], [-97.76981, 30.434207], [-97.769569, 30.434221], [-97.767009, 30.432954], [-97.764731, 30.431891], [-97.764501, 30.431784], [-97.764501, 30.431783], [-97.762502, 30.430782], [-97.75926, 30.429158], [-97.754707, 30.426919], [-97.749556, 30.424386], [-97.747936, 30.422871], [-97.747636, 30.422224], [-97.74744, 30.421618]]]]
    },
    "properties": {
      "neighbourhood": "78759",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-97.825802, 30.45545], [-97.824793, 30.45504], [-97.823593, 30.453928], [-97.821982, 30.452414], [-97.821398, 30.451844], [-97.820846, 30.451195], [-97.819939, 30.450481], [-97.819542, 30.450265], [-97.819137, 30.450182], [-97.817982, 30.450198], [-97.81749, 30.450057], [-97.816234, 30.449567], [-97.815217, 30.449146], [-97.813297, 30.447015], [-97.813582, 30.446449], [-97.815007, 30.444307], [-97.815072, 30.44334], [-97.815631, 30.442385], [-97.816296, 30.441499], [-97.816695, 30.441499], [-97.816924, 30.441613], [-97.817365, 30.442241], [-97.817447, 30.442528], [-97.817753, 30.442897], [-97.81851, 30.443479], [-97.818738, 30.443073], [-97.818782, 30.442711], [-97.81852, 30.442549], [-97.81836, 30.442395], [-97.818252, 30.44225], [-97.818181, 30.442072], [-97.818104, 30.441853], [-97.818054, 30.441676], [-97.817958, 30.4414], [-97.817856, 30.441164], [-97.817745, 30.441002], [-97.817606, 30.440774], [-97.817384, 30.440599], [-97.817192, 30.44046], [-97.816989, 30.440368], [-97.816813, 30.440291], [-97.81659, 30.440204], [-97.816393, 30.44012], [-97.816205, 30.43996], [-97.816059, 30.439792], [-97.815881, 30.439582], [-97.815758, 30.439486], [-97.81565, 30.43938], [-97.815494, 30.439242], [-97.815312, 30.439007], [-97.815203, 30.438887], [-97.815108, 30.438778], [-97.814992, 30.43855], [-97.814854, 30.438294], [-97.81475, 30.438105], [-97.814607, 30.437857], [-97.814524, 30.437702], [-97.814442, 30.437554], [-97.81436, 30.437369], [-97.814251, 30.437113], [-97.814148, 30.436911], [-97.814106, 30.436734], [-97.814081, 30.436568], [-97.814055, 30.436271], [-97.814021, 30.435995], [-97.81399, 30.435706], [-97.813972, 30.435515], [-97.813955, 30.435251], [-97.813957, 30.435094], [-97.813974, 30.434828], [-97.813986, 30.434641], [-97.81405, 30.434409], [-97.814128, 30.434154], [-97.814185, 30.434012], [-97.814263, 30.433846], [-97.814345, 30.433683], [-97.814455, 30.433523], [-97.814495, 30.433356], [-97.814415, 30.433101], [-97.814307, 30.432887], [-97.814171, 30.432654], [-97.814099, 30.432449], [-97.814118, 30.432303], [-97.814279, 30.432059], [-97.814452, 30.431872], [-97.814547, 30.431679], [-97.814702, 30.431446], [-97.814918, 30.43129], [-97.815093, 30.431214], [-97.815343, 30.431158], [-97.815583, 30.431191], [-97.815783, 30.431093], [-97.815844, 30.430797], [-97.815899, 30.43063], [-97.815945, 30.4304], [-97.815904, 30.43024], [-97.815765, 30.430072], [-97.815615, 30.429973], [-97.815358, 30.429852], [-97.815101, 30.429789], [-97.814895, 30.429714], [-97.814742, 30.429659], [-97.814619, 30.429502], [-97.81461, 30.429241], [-97.814601, 30.429018], [-97.814533, 30.428802], [-97.814547, 30.428643], [-97.81474, 30.428476], [-97.814964, 30.428403], [-97.815051, 30.428185], [-97.814973, 30.427895], [-97.814863, 30.427667], [-97.814779, 30.427421], [-97.814527, 30.427245], [-97.814356, 30.427143], [-97.814117, 30.426992], [-97.814052, 30.426823], [-97.814065, 30.426642], [-97.814136, 30.426487], [-97.814194, 30.426328], [-97.814278, 30.426118], [-97.814346, 30.425993], [-97.814438, 30.425849], [-97.81458, 30.425624], [-97.814637, 30.425462], [-97.814698, 30.425197], [-97.814715, 30.42504], [-97.814722, 30.424903], [-97.814715, 30.424655], [-97.814647, 30.424527], [-97.814508, 30.424376], [-97.814328, 30.424158], [-97.814239, 30.424044], [-97.814108, 30.42384], [-97.814018, 30.423709], [-97.813943, 30.42348], [-97.813912, 30.423256], [-97.813839, 30.423125], [-97.813576, 30.422903], [-97.813342, 30.422816], [-97.813194, 30.422769], [-97.812953, 30.422687], [-97.81279, 30.422646], [-97.812514, 30.42256], [-97.812367, 30.422489], [-97.812164, 30.422372], [-97.811995, 30.422319], [-97.811765, 30.422243], [-97.811591, 30.422157], [-97.811318, 30.422086], [-97.811142, 30.422099], [-97.810957, 30.422112], [-97.810787, 30.42213], [-97.810427, 30.422121], [-97.810154, 30.422148], [-97.809984, 30.422186], [-97.809676, 30.422249], [-97.809449, 30.422159], [-97.809363, 30.42202], [-97.809294, 30.421856], [-97.809148, 30.421721], [-97.808916, 30.421797], [-97.808756, 30.421785], [-97.808545, 30.421668], [-97.808303, 30.421498], [-97.808138, 30.421424], [-97.807892, 30.421292], [-97.807773, 30.421111], [-97.80778, 30.420949], [-97.807807, 30.420804], [-97.80787, 30.420665], [-97.807926, 30.420479], [-97.807934, 30.4203], [-97.807922, 30.420143], [-97.807913, 30.419896], [-97.807941, 30.419662], [-97.808012, 30.419535], [-97.808137, 30.419339], [-97.808071, 30.419096], [-97.808264, 30.419053], [-97.808445, 30.419015], [-97.808664, 30.418926], [-97.808936, 30.418948], [-97.809063, 30.419038], [-97.80935, 30.419096], [-97.809568, 30.419161], [-97.809746, 30.419217], [-97.810056, 30.419302], [-97.810235, 30.419344], [-97.810408, 30.419337], [-97.81064, 30.419341], [-97.810841, 30.419356], [-97.811019, 30.419338], [-97.8113, 30.419277], [-97.811557, 30.419216], [-97.811725, 30.419178], [-97.81191, 30.41916], [-97.812161, 30.419121], [-97.812431, 30.419066], [-97.812657, 30.419021], [-97.812822, 30.418999], [-97.813057, 30.418954], [-97.813399, 30.418879], [-97.81358, 30.418835], [-97.813782, 30.418782], [-97.814051, 30.418715], [-97.814235, 30.418686], [-97.814496, 30.418622], [-97.814638, 30.418562], [-97.814831, 30.418417], [-97.815037, 30.418262], [-97.815181, 30.418154], [-97.815318, 30.418053], [-97.815454, 30.417937], [-97.815646, 30.417836], [-97.815804, 30.417751], [-97.815937, 30.417671], [-97.816134, 30.417546], [-97.81631, 30.417412], [-97.81649, 30.417275], [-97.816619, 30.417184], [-97.816859, 30.417117], [-97.816986, 30.416966], [-97.817128, 30.416768], [-97.817357, 30.416649], [-97.817489, 30.41655], [-97.817716, 30.416438], [-97.817959, 30.41635], [-97.818155, 30.41629], [-97.818431, 30.416246], [-97.818732, 30.416241], [-97.818883, 30.416197], [-97.81909, 30.41619], [-97.819387, 30.416083], [-97.819575, 30.41604], [-97.819763, 30.416], [-97.82006, 30.415937], [-97.820359, 30.415833], [-97.820599, 30.415684], [-97.820748, 30.415596], [-97.820948, 30.415462], [-97.821108, 30.415347], [-97.821241, 30.415215], [-97.821413, 30.415009], [-97.821577, 30.414779], [-97.82172, 30.414556], [-97.821845, 30.414305], [-97.821976, 30.414135], [-97.82215, 30.41394], [-97.822279, 30.413689], [-97.822336, 30.413506], [-97.822362, 30.413317], [-97.822541, 30.413125], [-97.822627, 30.412918], [-97.822612, 30.412775], [-97.822473, 30.412538], [-97.822408, 30.412413], [-97.822402, 30.412242], [-97.822434, 30.412081], [-97.82248, 30.411903], [-97.822526, 30.411698], [-97.822586, 30.41149], [-97.822706, 30.411228], [-97.8228, 30.411076], [-97.822935, 30.410853], [-97.823088, 30.410677], [-97.823224, 30.410504], [-97.823412, 30.41034], [-97.823447, 30.410115], [-97.823414, 30.409969], [-97.823318, 30.409727], [-97.823261, 30.4096], [-97.82322, 30.409453], [-97.823186, 30.409194], [-97.823217, 30.408903], [-97.823214, 30.408765], [-97.823273, 30.40858], [-97.82338, 30.408381], [-97.823357, 30.408226], [-97.823284, 30.407972], [-97.823274, 30.407757], [-97.823326, 30.407607], [-97.823459, 30.407359], [-97.823509, 30.40722], [-97.823581, 30.407067], [-97.823737, 30.406883], [-97.823868, 30.406663], [-97.823941, 30.40653], [-97.824042, 30.406386], [-97.824159, 30.406251], [-97.824265, 30.406143], [-97.824373, 30.406016], [-97.824586, 30.405844], [-97.82483, 30.405686], [-97.825035, 30.405619], [-97.825318, 30.405528], [-97.825565, 30.405478], [-97.825718, 30.40539], [-97.825924, 30.405262], [-97.826054, 30.405166], [-97.826304, 30.404876], [-97.826339, 30.40474], [-97.826333, 30.404585], [-97.826245, 30.404347], [-97.826347, 30.404198], [-97.826575, 30.404125], [-97.826739, 30.404076], [-97.826959, 30.403938], [-97.8272, 30.403794], [-97.827332, 30.403576], [-97.827551, 30.403476], [-97.827738, 30.403359], [-97.827929, 30.403274], [-97.8282, 30.403192], [-97.828439, 30.403089], [-97.828635, 30.402964], [-97.828783, 30.402906], [-97.828938, 30.402873], [-97.829095, 30.40286], [-97.829318, 30.402776], [-97.829432, 30.402647], [-97.829545, 30.402511], [-97.829689, 30.402376], [-97.829856, 30.402259], [-97.830132, 30.402124], [-97.830449, 30.401976], [-97.830705, 30.401973], [-97.831039, 30.401996], [-97.831387, 30.401978], [-97.831522, 30.401788], [-97.831644, 30.401554], [-97.8318, 30.401285], [-97.831887, 30.401143], [-97.831936, 30.401009], [-97.831941, 30.400869], [-97.831897, 30.400646], [-97.831883, 30.400505], [-97.83193, 30.400311], [-97.83198, 30.400177], [-97.832129, 30.400009], [-97.832268, 30.399781], [-97.832354, 30.39962], [-97.832437, 30.399462], [-97.832514, 30.399315], [-97.832651, 30.399057], [-97.832691, 30.39892], [-97.832726, 30.398698], [-97.832759, 30.398459], [-97.832804, 30.398326], [-97.832964, 30.398131], [-97.833097, 30.398034], [-97.833235, 30.39785], [-97.833453, 30.397758], [-97.833666, 30.397622], [-97.833861, 30.397444], [-97.833961, 30.397242], [-97.834093, 30.397069], [-97.834288, 30.396889], [-97.834537, 30.396764], [-97.834858, 30.39666], [-97.835069, 30.396565], [-97.835221, 30.396491], [-97.835412, 30.396388], [-97.835633, 30.396266], [-97.835774, 30.396202], [-97.835999, 30.39608], [-97.836208, 30.395983], [-97.836449, 30.395899], [-97.836601, 30.395853], [-97.836581, 30.395608], [-97.83658, 30.395451], [-97.836625, 30.395226], [-97.836664, 30.394977], [-97.836765, 30.394753], [-97.836995, 30.394576], [-97.837253, 30.394441], [-97.837522, 30.394352], [-97.837644, 30.394264], [-97.837799, 30.394102], [-97.837964, 30.393871], [-97.83812, 30.393635], [-97.838239, 30.393514], [-97.838393, 30.393289], [-97.838558, 30.393107], [-97.838673, 30.392997], [-97.838859, 30.392775], [-97.838963, 30.392554], [-97.839033, 30.39225], [-97.839375, 30.39224], [-97.839883, 30.392341], [-97.840421, 30.392519], [-97.840706, 30.392607], [-97.841825, 30.392932], [-97.843974, 30.393573], [-97.844257, 30.393697], [-97.84472, 30.393961], [-97.845409, 30.394492], [-97.845536, 30.394588], [-97.845937, 30.394939], [-97.847167, 30.395684], [-97.848817, 30.396615], [-97.849062, 30.396909], [-97.849535, 30.397402], [-97.850298, 30.398641], [-97.850893, 30.399648], [-97.851604, 30.400844], [-97.851785, 30.401145], [-97.852046, 30.401562], [-97.852373, 30.402014], [-97.852529, 30.402342], [-97.852733, 30.402574], [-97.85323, 30.403076], [-97.854068, 30.403691], [-97.855184, 30.404582], [-97.85629, 30.405253], [-97.857627, 30.405861], [-97.858166, 30.406367], [-97.858534, 30.406597], [-97.859894, 30.407311], [-97.861585, 30.408031], [-97.862908, 30.409043], [-97.863787, 30.41101], [-97.864327, 30.411879], [-97.864826, 30.412375], [-97.8659, 30.41288], [-97.866684, 30.413555], [-97.867284, 30.414697], [-97.868756, 30.416623], [-97.868958, 30.417196], [-97.869, 30.419095], [-97.869405, 30.420513], [-97.870289, 30.42168], [-97.87123, 30.422729], [-97.871974, 30.423874], [-97.872356, 30.424464], [-97.87256, 30.425274], [-97.872538, 30.42554], [-97.872444, 30.426875], [-97.872553, 30.427304], [-97.872942, 30.428466], [-97.87333, 30.429082], [-97.873694, 30.42949], [-97.873852, 30.429741], [-97.873922, 30.429934], [-97.87393, 30.430196], [-97.873807, 30.430636], [-97.873734, 30.430893], [-97.873696, 30.431151], [-97.873708, 30.431493], [-97.873704, 30.431635], [-97.87368, 30.431784], [-97.873653, 30.431929], [-97.873343, 30.432836], [-97.87326, 30.433008], [-97.873087, 30.433178], [-97.873001, 30.433294], [-97.872875, 30.433526], [-97.872766, 30.433633], [-97.872433, 30.43377], [-97.871984, 30.434105], [-97.871734, 30.434243], [-97.871627, 30.434464], [-97.871599, 30.43467], [-97.871642, 30.434935], [-97.87179, 30.435152], [-97.871984, 30.435302], [-97.87298, 30.435799], [-97.873291, 30.436212], [-97.873363, 30.43661], [-97.873346, 30.436983], [-97.873028, 30.438064], [-97.873028, 30.438064], [-97.873029, 30.438071], [-97.873029, 30.438079], [-97.873032, 30.43811], [-97.873067, 30.438529], [-97.873198, 30.439005], [-97.873619, 30.439849], [-97.87199, 30.44078], [-97.871376, 30.441132], [-97.87055, 30.441207], [-97.869882, 30.441626], [-97.869212, 30.441992], [-97.86919, 30.442004], [-97.86746, 30.442949], [-97.866552, 30.443445], [-97.865487, 30.444026], [-97.862541, 30.445636], [-97.862173, 30.445836], [-97.86106, 30.446444], [-97.860243, 30.44689], [-97.86019, 30.446919], [-97.860178, 30.446926], [-97.859686, 30.447195], [-97.859236, 30.44744], [-97.857563, 30.448354], [-97.857543, 30.448365], [-97.857193, 30.448906], [-97.855932, 30.449558], [-97.853913, 30.450369], [-97.851933, 30.451346], [-97.850399, 30.45196], [-97.849493, 30.452344], [-97.84872, 30.452667], [-97.848371, 30.452927], [-97.847617, 30.45349], [-97.846767, 30.45456], [-97.846318, 30.456279], [-97.845841, 30.457367], [-97.843993, 30.458728], [-97.843486, 30.458924], [-97.840946, 30.459904], [-97.839383, 30.460627], [-97.838662, 30.460662], [-97.838191, 30.460471], [-97.837861, 30.460336], [-97.837562, 30.460095], [-97.837185, 30.459789], [-97.835675, 30.45861], [-97.834989, 30.458132], [-97.834304, 30.457742], [-97.83348, 30.457426], [-97.83348, 30.457426], [-97.831723, 30.457241], [-97.831532, 30.457167], [-97.831531, 30.457167], [-97.831531, 30.457167], [-97.831146, 30.457018], [-97.831146, 30.457018], [-97.831146, 30.457018], [-97.831145, 30.457018], [-97.828937, 30.456164], [-97.828882, 30.456143], [-97.827291, 30.455778], [-97.826154, 30.455518], [-97.825802, 30.45545]]]]
    },
    "properties": {
      "neighbourhood": "78726",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-97.842949, 30.323099], [-97.842743, 30.323059], [-97.842278, 30.323204], [-97.841959, 30.323277], [-97.841671, 30.323327], [-97.84144, 30.323311], [-97.841201, 30.323287], [-97.840982, 30.323206], [-97.840709, 30.323077], [-97.84051, 30.322938], [-97.840243, 30.322749], [-97.840086, 30.32265], [-97.839912, 30.322503], [-97.839782, 30.322355], [-97.839632, 30.322209], [-97.839495, 30.322044], [-97.839325, 30.321876], [-97.839204, 30.32167], [-97.83912, 30.321495], [-97.83895, 30.321233], [-97.838846, 30.321107], [-97.838728, 30.320907], [-97.838655, 30.320697], [-97.838619, 30.320547], [-97.838606, 30.320363], [-97.83869, 30.320142], [-97.838825, 30.319949], [-97.838994, 30.319793], [-97.838999, 30.319556], [-97.839013, 30.319419], [-97.839096, 30.31922], [-97.839075, 30.319005], [-97.839013, 30.318732], [-97.838934, 30.318494], [-97.839045, 30.318281], [-97.839132, 30.318121], [-97.839254, 30.317906], [-97.839318, 30.317775], [-97.839416, 30.317667], [-97.839522, 30.317556], [-97.839564, 30.3174], [-97.839744, 30.317115], [-97.839898, 30.316972], [-97.84005, 30.31678], [-97.840126, 30.316616], [-97.840227, 30.316459], [-97.840313, 30.316163], [-97.840363, 30.315964], [-97.84039, 30.315824], [-97.840469, 30.315636], [-97.840578, 30.315423], [-97.840539, 30.31523], [-97.840469, 30.31505], [-97.840417, 30.314909], [-97.840433, 30.314722], [-97.840378, 30.314602], [-97.840212, 30.314382], [-97.839976, 30.314322], [-97.839828, 30.31419], [-97.839753, 30.314068], [-97.839696, 30.313847], [-97.839656, 30.313651], [-97.839702, 30.313409], [-97.839847, 30.313253], [-97.839941, 30.31304], [-97.840012, 30.312912], [-97.840134, 30.312557], [-97.840225, 30.31238], [-97.84053, 30.312072], [-97.840648, 30.311967], [-97.840852, 30.311817], [-97.841004, 30.311721], [-97.84117, 30.311595], [-97.841337, 30.311458], [-97.841462, 30.311263], [-97.841544, 30.311072], [-97.841309, 30.3108], [-97.841228, 30.310609], [-97.84118, 30.310443], [-97.841161, 30.310305], [-97.841174, 30.310066], [-97.841206, 30.309866], [-97.841224, 30.309715], [-97.84127, 30.309551], [-97.841249, 30.309353], [-97.841153, 30.309128], [-97.839381, 30.304776], [-97.839902, 30.303001], [-97.840202, 30.303507], [-97.840685, 30.304012], [-97.841561, 30.304777], [-97.842205, 30.3054], [-97.8425, 30.306], [-97.842732, 30.306469], [-97.842921, 30.307256], [-97.843107, 30.308033], [-97.843261, 30.308294], [-97.843593, 30.308851], [-97.843935, 30.309124], [-97.844496, 30.309567], [-97.845059, 30.309977], [-97.845569, 30.310138], [-97.846179, 30.310334], [-97.846911, 30.310395], [-97.847308, 30.31043], [-97.84815, 30.310501], [-97.849205, 30.311058], [-97.849343, 30.311182], [-97.849851, 30.311643], [-97.850354, 30.312101], [-97.850792, 30.312362], [-97.851487, 30.312805], [-97.851982, 30.313023], [-97.852715, 30.313346], [-97.855172, 30.314427], [-97.856103, 30.31477], [-97.856942, 30.315295], [-97.857218, 30.315405], [-97.858659, 30.315985], [-97.859933, 30.317044], [-97.860863, 30.317816], [-97.862013, 30.318624], [-97.862551, 30.318679], [-97.862782, 30.31862], [-97.863164, 30.318509], [-97.863782, 30.318334], [-97.864435, 30.318146], [-97.865183, 30.317932], [-97.865627, 30.317806], [-97.865402, 30.317515], [-97.865101, 30.317111], [-97.864565, 30.316404], [-97.86381, 30.314234], [-97.863284, 30.313874], [-97.863204, 30.313507], [-97.86361, 30.312684], [-97.864684, 30.312314], [-97.865777, 30.310592], [-97.865904, 30.310294], [-97.865922, 30.309607], [-97.866156, 30.308657], [-97.866088, 30.308375], [-97.865173, 30.30665], [-97.864689, 30.306264], [-97.863881, 30.305024], [-97.86356, 30.304265], [-97.863727, 30.303591], [-97.863633, 30.303188], [-97.863224, 30.302751], [-97.862809, 30.3026], [-97.862518, 30.302267], [-97.862366, 30.30172], [-97.862597, 30.300294], [-97.862845, 30.300013], [-97.86317, 30.299824], [-97.863735, 30.299615], [-97.8642, 30.299425], [-97.864316, 30.299598], [-97.864457, 30.299854], [-97.864496, 30.300042], [-97.864536, 30.300235], [-97.864528, 30.3004], [-97.864481, 30.300633], [-97.864421, 30.300805], [-97.864373, 30.300941], [-97.864367, 30.301087], [-97.864358, 30.301307], [-97.864277, 30.301468], [-97.864124, 30.301657], [-97.864141, 30.301858], [-97.864183, 30.302162], [-97.864211, 30.302322], [-97.864244, 30.302529], [-97.864277, 30.302738], [-97.864327, 30.302959], [-97.864401, 30.303175], [-97.864532, 30.3035], [-97.864597, 30.303638], [-97.864674, 30.303775], [-97.864851, 30.304086], [-97.864951, 30.304236], [-97.865079, 30.30442], [-97.865167, 30.304573], [-97.865297, 30.304768], [-97.865438, 30.304991], [-97.86555, 30.305172], [-97.865716, 30.305307], [-97.865849, 30.30539], [-97.866016, 30.305519], [-97.866111, 30.3057], [-97.866161, 30.305844], [-97.866268, 30.306049], [-97.86639, 30.306195], [-97.866681, 30.306371], [-97.866872, 30.306446], [-97.867155, 30.306559], [-97.867379, 30.30664], [-97.867589, 30.306727], [-97.867884, 30.306798], [-97.868164, 30.306776], [-97.868323, 30.306738], [-97.868584, 30.306628], [-97.868755, 30.306515], [-97.868907, 30.3064], [-97.869082, 30.306269], [-97.86918, 30.306039], [-97.869264, 30.305873], [-97.869395, 30.305538], [-97.869388, 30.30535], [-97.869349, 30.305138], [-97.869274, 30.304872], [-97.869186, 30.304686], [-97.869037, 30.30445], [-97.868903, 30.304321], [-97.868635, 30.304002], [-97.868491, 30.303785], [-97.868421, 30.303602], [-97.868416, 30.303409], [-97.868419, 30.303192], [-97.868421, 30.302958], [-97.868438, 30.302604], [-97.868509, 30.302443], [-97.868549, 30.302202], [-97.868555, 30.302037], [-97.868522, 30.301893], [-97.868479, 30.301714], [-97.868323, 30.301678], [-97.868112, 30.301624], [-97.868005, 30.30146], [-97.867995, 30.301264], [-97.868019, 30.301031], [-97.868086, 30.300848], [-97.868219, 30.300636], [-97.868354, 30.300474], [-97.868517, 30.300284], [-97.868654, 30.300108], [-97.868746, 30.299978], [-97.868853, 30.299826], [-97.868961, 30.299613], [-97.869042, 30.299381], [-97.869116, 30.299141], [-97.869201, 30.298944], [-97.869282, 30.298778], [-97.869369, 30.298626], [-97.869463, 30.298487], [-97.86956, 30.298365], [-97.869717, 30.298231], [-97.869889, 30.298086], [-97.870011, 30.297906], [-97.870119, 30.297763], [-97.870222, 30.297605], [-97.870329, 30.297472], [-97.870435, 30.297329], [-97.870654, 30.297206], [-97.870874, 30.297153], [-97.87105, 30.297142], [-97.871411, 30.297138], [-97.871614, 30.297148], [-97.871922, 30.297162], [-97.872169, 30.297194], [-97.87243, 30.297262], [-97.872609, 30.297269], [-97.872906, 30.297277], [-97.873181, 30.297293], [-97.873415, 30.297383], [-97.873567, 30.297469], [-97.873748, 30.297574], [-97.873909, 30.297714], [-97.874141, 30.297854], [-97.87435, 30.298006], [-97.874409, 30.298134], [-97.874561, 30.298266], [-97.874716, 30.298354], [-97.874872, 30.29844], [-97.875198, 30.298603], [-97.875358, 30.298686], [-97.875511, 30.298771], [-97.875839, 30.298926], [-97.875994, 30.298965], [-97.87632, 30.298974], [-97.876646, 30.298903], [-97.876941, 30.298809], [-97.877104, 30.298774], [-97.877325, 30.298734], [-97.877591, 30.298693], [-97.877873, 30.298596], [-97.878071, 30.298498], [-97.878298, 30.298379], [-97.878523, 30.298232], [-97.87866, 30.298133], [-97.878869, 30.297994], [-97.878997, 30.297897], [-97.87923, 30.297695], [-97.879363, 30.297489], [-97.879452, 30.297328], [-97.879506, 30.297159], [-97.879549, 30.297025], [-97.879636, 30.296787], [-97.879748, 30.296646], [-97.879935, 30.29643], [-97.880083, 30.296276], [-97.880244, 30.296144], [-97.880446, 30.296036], [-97.880721, 30.295975], [-97.880932, 30.295896], [-97.881153, 30.295796], [-97.881243, 30.295613], [-97.881308, 30.295483], [-97.881333, 30.295329], [-97.881364, 30.29514], [-97.881438, 30.294938], [-97.8815, 30.294763], [-97.881514, 30.294604], [-97.881523, 30.294312], [-97.881506, 30.294172], [-97.881517, 30.294018], [-97.881508, 30.293853], [-97.881497, 30.293677], [-97.881436, 30.293488], [-97.88135, 30.293281], [-97.881227, 30.292978], [-97.881123, 30.292756], [-97.881045, 30.292604], [-97.880967, 30.292451], [-97.88089, 30.292309], [-97.880818, 30.292173], [-97.880741, 30.292048], [-97.880605, 30.291828], [-97.880484, 30.291636], [-97.880405, 30.291439], [-97.88029, 30.291222], [-97.880175, 30.291006], [-97.880131, 30.290848], [-97.880281, 30.290631], [-97.880491, 30.290409], [-97.880535, 30.290231], [-97.880551, 30.29002], [-97.880557, 30.28985], [-97.880568, 30.289676], [-97.880589, 30.289493], [-97.880605, 30.289325], [-97.880605, 30.289047], [-97.880491, 30.28888], [-97.880366, 30.28876], [-97.880338, 30.288564], [-97.880429, 30.288384], [-97.880597, 30.288228], [-97.880807, 30.288083], [-97.880906, 30.287975], [-97.881004, 30.287845], [-97.881098, 30.287734], [-97.881207, 30.287618], [-97.881328, 30.287502], [-97.881432, 30.287369], [-97.881527, 30.287247], [-97.881741, 30.287061], [-97.881881, 30.286927], [-97.881999, 30.286811], [-97.882148, 30.286725], [-97.882361, 30.286614], [-97.882739, 30.286486], [-97.883074, 30.286474], [-97.883334, 30.286506], [-97.883546, 30.286565], [-97.883785, 30.28663], [-97.884001, 30.286739], [-97.884141, 30.286909], [-97.884249, 30.287043], [-97.88438, 30.287183], [-97.884518, 30.287318], [-97.884715, 30.287512], [-97.884833, 30.287602], [-97.885019, 30.287768], [-97.88519, 30.287922], [-97.885276, 30.288042], [-97.885427, 30.288196], [-97.885588, 30.288359], [-97.885744, 30.288541], [-97.885895, 30.288736], [-97.885991, 30.288908], [-97.88613, 30.289125], [-97.886216, 30.289298], [-97.886169, 30.289528], [-97.886204, 30.289754], [-97.886265, 30.289956], [-97.886336, 30.290188], [-97.886374, 30.290346], [-97.886426, 30.290523], [-97.886502, 30.290769], [-97.886574, 30.290966], [-97.886673, 30.291204], [-97.886733, 30.291345], [-97.886795, 30.291492], [-97.886873, 30.291634], [-97.886943, 30.29177], [-97.88702, 30.291918], [-97.887127, 30.292178], [-97.887229, 30.292452], [-97.887319, 30.292647], [-97.887432, 30.292893], [-97.887557, 30.293072], [-97.887634, 30.293197], [-97.887827, 30.293525], [-97.887944, 30.29377], [-97.888055, 30.294], [-97.888181, 30.294189], [-97.888311, 30.29434], [-97.888495, 30.294578], [-97.888637, 30.294712], [-97.888825, 30.294867], [-97.888988, 30.295005], [-97.889162, 30.29514], [-97.88937, 30.295279], [-97.889598, 30.295427], [-97.889813, 30.295524], [-97.890031, 30.295583], [-97.890206, 30.29562], [-97.890417, 30.295676], [-97.890776, 30.295702], [-97.890983, 30.295634], [-97.891251, 30.295554], [-97.891533, 30.295469], [-97.891748, 30.295335], [-97.891874, 30.295247], [-97.89201, 30.29514], [-97.892183, 30.295], [-97.892368, 30.294778], [-97.892541, 30.294583], [-97.892725, 30.294372], [-97.892873, 30.294205], [-97.893123, 30.293882], [-97.893268, 30.293723], [-97.893522, 30.293458], [-97.893664, 30.293353], [-97.893889, 30.293162], [-97.89406, 30.292979], [-97.894207, 30.292786], [-97.894466, 30.292491], [-97.894639, 30.292335], [-97.894709, 30.292185], [-97.894792, 30.29206], [-97.89491, 30.291884], [-97.895014, 30.291756], [-97.895125, 30.291629], [-97.895222, 30.291518], [-97.895372, 30.291373], [-97.895513, 30.291263], [-97.895679, 30.291103], [-97.895932, 30.290861], [-97.896066, 30.290759], [-97.896382, 30.29055], [-97.896506, 30.290459], [-97.896692, 30.290311], [-97.896881, 30.29018], [-97.897116, 30.290047], [-97.897328, 30.28993], [-97.897477, 30.289842], [-97.89761, 30.289762], [-97.897817, 30.28967], [-97.897995, 30.289588], [-97.89815, 30.289552], [-97.898342, 30.289509], [-97.898508, 30.289496], [-97.898706, 30.289472], [-97.898886, 30.289448], [-97.899165, 30.289393], [-97.89949, 30.289314], [-97.899763, 30.289278], [-97.900102, 30.289271], [-97.900288, 30.289351], [-97.900559, 30.28954], [-97.900683, 30.289675], [-97.900871, 30.28989], [-97.901004, 30.290022], [-97.901203, 30.290207], [-97.901292, 30.290322], [-97.901413, 30.290503], [-97.90156, 30.290701], [-97.901648, 30.290826], [-97.901784, 30.291035], [-97.901898, 30.291233], [-97.902031, 30.2914], [-97.902128, 30.291553], [-97.902242, 30.291731], [-97.902225, 30.291943], [-97.902123, 30.292136], [-97.902021, 30.292329], [-97.901897, 30.2925], [-97.901739, 30.292734], [-97.901567, 30.292934], [-97.901431, 30.293047], [-97.901232, 30.293219], [-97.900936, 30.293472], [-97.900817, 30.29358], [-97.900708, 30.293693], [-97.900543, 30.293894], [-97.900332, 30.294102], [-97.900049, 30.294355], [-97.89981, 30.294565], [-97.899584, 30.294646], [-97.899395, 30.294689], [-97.899226, 30.294743], [-97.89906, 30.294798], [-97.898844, 30.294887], [-97.898617, 30.295026], [-97.898364, 30.295241], [-97.89819, 30.295461], [-97.898099, 30.295577], [-97.897908, 30.295697], [-97.897691, 30.295817], [-97.897527, 30.295973], [-97.897372, 30.29618], [-97.897216, 30.296405], [-97.897135, 30.296524], [-97.897069, 30.296707], [-97.896997, 30.296909], [-97.896958, 30.297173], [-97.89697, 30.297412], [-97.897034, 30.297614], [-97.897114, 30.297756], [-97.897201, 30.297881], [-97.897312, 30.298024], [-97.897406, 30.298136], [-97.897647, 30.298393], [-97.89789, 30.29861], [-97.898147, 30.298824], [-97.898271, 30.298928], [-97.898403, 30.299015], [-97.898764, 30.299275], [-97.89889, 30.299366], [-97.899175, 30.299564], [-97.899392, 30.299719], [-97.899522, 30.299812], [-97.899676, 30.299955], [-97.899836, 30.300107], [-97.899995, 30.300237], [-97.900192, 30.300381], [-97.900477, 30.300584], [-97.900634, 30.300697], [-97.900799, 30.300794], [-97.900925, 30.300881], [-97.901134, 30.301025], [-97.901265, 30.301157], [-97.90146, 30.301353], [-97.901538, 30.301501], [-97.901622, 30.301665], [-97.90178, 30.30183], [-97.90198, 30.302015], [-97.90217, 30.302195], [-97.90246, 30.302472], [-97.90257, 30.302571], [-97.902697, 30.302678], [-97.902815, 30.302773], [-97.903004, 30.302912], [-97.903234, 30.303067], [-97.903545, 30.303299], [-97.903781, 30.303435], [-97.904015, 30.303514], [-97.904272, 30.303579], [-97.904538, 30.303661], [-97.904771, 30.303757], [-97.905143, 30.303904], [-97.9053, 30.303948], [-97.905573, 30.304022], [-97.905826, 30.304101], [-97.906053, 30.304182], [-97.906318, 30.304276], [-97.906656, 30.304403], [-97.906849, 30.304517], [-97.90704, 30.304644], [-97.907259, 30.30481], [-97.907447, 30.304987], [-97.907588, 30.30516], [-97.90772, 30.305353], [-97.907887, 30.305603], [-97.907992, 30.305759], [-97.908159, 30.30595], [-97.908283, 30.306076], [-97.908403, 30.306199], [-97.908469, 30.30647], [-97.908198, 30.306418], [-97.907971, 30.306405], [-97.907757, 30.3065], [-97.907585, 30.306623], [-97.907366, 30.306606], [-97.907196, 30.306726], [-97.90713, 30.306942], [-97.907066, 30.307188], [-97.907315, 30.307344], [-97.907468, 30.307471], [-97.907616, 30.307606], [-97.907779, 30.307793], [-97.907953, 30.308028], [-97.908022, 30.308177], [-97.908105, 30.308333], [-97.908264, 30.308528], [-97.908436, 30.308708], [-97.908595, 30.308865], [-97.908721, 30.309051], [-97.908841, 30.309298], [-97.908973, 30.309543], [-97.91032, 30.311815], [-97.91039, 30.311938], [-97.910446, 30.312118], [-97.910599, 30.312244], [-97.910773, 30.312396], [-97.91078, 30.312613], [-97.910779, 30.312776], [-97.910766, 30.312965], [-97.910736, 30.313154], [-97.910702, 30.313371], [-97.910679, 30.313582], [-97.91057, 30.313822], [-97.91048, 30.314024], [-97.910428, 30.31421], [-97.910422, 30.314491], [-97.910422, 30.314733], [-97.910421, 30.314988], [-97.910446, 30.315316], [-97.910475, 30.315539], [-97.910522, 30.315766], [-97.910585, 30.316039], [-97.910534, 30.316278], [-97.910504, 30.31645], [-97.910472, 30.316653], [-97.910444, 30.316856], [-97.910428, 30.317114], [-97.910434, 30.317269], [-97.910452, 30.317525], [-97.910469, 30.317786], [-97.910531, 30.317966], [-97.910621, 30.318111], [-97.910707, 30.318267], [-97.910767, 30.318455], [-97.910804, 30.318739], [-97.910835, 30.319017], [-97.910872, 30.319433], [-97.910899, 30.319632], [-97.910932, 30.319827], [-97.911058, 30.320025], [-97.911188, 30.320245], [-97.911259, 30.320392], [-97.911343, 30.320548], [-97.91144, 30.320745], [-97.911518, 30.320889], [-97.911637, 30.321087], [-97.911737, 30.32124], [-97.911832, 30.321354], [-97.911923, 30.321543], [-97.911941, 30.321788], [-97.91188, 30.322087], [-97.911816, 30.322284], [-97.911714, 30.322474], [-97.911554, 30.322642], [-97.911314, 30.322797], [-97.911223, 30.322977], [-97.911169, 30.323286], [-97.911117, 30.323489], [-97.911149, 30.323682], [-97.911254, 30.323909], [-97.911224, 30.324115], [-97.911083, 30.324396], [-97.911205, 30.324577], [-97.911185, 30.324758], [-97.91123, 30.325006], [-97.911279, 30.325205], [-97.911244, 30.325452], [-97.911151, 30.325593], [-97.911028, 30.325819], [-97.911058, 30.325996], [-97.911085, 30.326205], [-97.91086, 30.326377], [-97.91083, 30.326544], [-97.910952, 30.326698], [-97.910935, 30.326893], [-97.910791, 30.327085], [-97.910632, 30.327327], [-97.910633, 30.327512], [-97.910796, 30.32768], [-97.911008, 30.327838], [-97.911143, 30.327986], [-97.911097, 30.328211], [-97.910945, 30.328406], [-97.910913, 30.328595], [-97.911128, 30.328775], [-97.911345, 30.32895], [-97.911506, 30.32917], [-97.911745, 30.329491], [-97.911284, 30.329735], [-97.911156, 30.329815], [-97.910672, 30.330364], [-97.910334, 30.330768], [-97.909955, 30.331118], [-97.909598, 30.33143], [-97.909158, 30.33176], [-97.908699, 30.332021], [-97.908409, 30.332123], [-97.907993, 30.332327], [-97.907302, 30.332886], [-97.906674, 30.333336], [-97.905641, 30.334386], [-97.904838, 30.335279], [-97.904016, 30.336083], [-97.903152, 30.336957], [-97.90204, 30.337871], [-97.901899, 30.338009], [-97.901725, 30.338176], [-97.901262, 30.338649], [-97.900883, 30.338996], [-97.900547, 30.339292], [-97.900108, 30.339606], [-97.899649, 30.339864], [-97.899148, 30.340176], [-97.898544, 30.34052], [-97.898044, 30.340796], [-97.897545, 30.341053], [-97.897203, 30.341226], [-97.89704, 30.341291], [-97.896831, 30.341386], [-97.896632, 30.34146], [-97.896441, 30.341525], [-97.896236, 30.341576], [-97.896073, 30.341617], [-97.895172, 30.341861], [-97.894324, 30.342068], [-97.892929, 30.342388], [-97.892124, 30.342534], [-97.89086, 30.342755], [-97.890425, 30.342813], [-97.889798, 30.342894], [-97.888861, 30.342995], [-97.888109, 30.343077], [-97.886569, 30.343212], [-97.885499, 30.34328], [-97.884964, 30.343289], [-97.884389, 30.343303], [-97.883524, 30.343385], [-97.882518, 30.343531], [-97.881827, 30.34365], [-97.881284, 30.343783], [-97.880281, 30.344082], [-97.879873, 30.344207], [-97.879054, 30.344449], [-97.877735, 30.344845], [-97.875285, 30.345868], [-97.874407, 30.34633], [-97.87185, 30.347672], [-97.867391, 30.350961], [-97.865208, 30.35244], [-97.86463, 30.35283], [-97.864132, 30.353167], [-97.863887, 30.353317], [-97.863047, 30.353823], [-97.862643, 30.353994], [-97.861864, 30.354317], [-97.860765, 30.354725], [-97.859527, 30.354916], [-97.858622, 30.354951], [-97.857352, 30.354819], [-97.85621, 30.354459], [-97.85493, 30.353936], [-97.853843, 30.353387], [-97.853388, 30.353158], [-97.851645, 30.352112], [-97.850772, 30.351408], [-97.84981, 30.350622], [-97.849411, 30.35013], [-97.847918, 30.347961], [-97.847346, 30.347076], [-97.847213, 30.346773], [-97.846822, 30.345872], [-97.846397, 30.344832], [-97.846141, 30.343615], [-97.845741, 30.341594], [-97.845499, 30.340318], [-97.84536, 30.339589], [-97.845133, 30.337286], [-97.845107, 30.336779], [-97.844708, 30.333155], [-97.844683, 30.332967], [-97.844296, 30.329973], [-97.843987, 30.328727], [-97.843812, 30.328019], [-97.842947, 30.32647], [-97.841893, 30.325317], [-97.842683, 30.325197], [-97.842884, 30.325116], [-97.843016, 30.325033], [-97.843176, 30.324885], [-97.843398, 30.324785], [-97.843664, 30.324724], [-97.843837, 30.324609], [-97.843804, 30.324317], [-97.843761, 30.324176], [-97.843658, 30.324056], [-97.843526, 30.323916], [-97.843331, 30.323816], [-97.843105, 30.323715], [-97.842965, 30.323539], [-97.842966, 30.323247], [-97.842949, 30.323099]]]]
    },
    "properties": {
      "neighbourhood": "78733",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-97.665396, 30.285639], [-97.665952, 30.285733], [-97.666799, 30.285872], [-97.669407, 30.286311], [-97.67047, 30.286465], [-97.671516, 30.286718], [-97.672506, 30.28681], [-97.673957, 30.286683], [-97.675129, 30.286567], [-97.676403, 30.286467], [-97.677311, 30.286393], [-97.677862, 30.286316], [-97.678834, 30.286215], [-97.682628, 30.285862], [-97.684611, 30.285537], [-97.685534, 30.285397], [-97.686457, 30.285264], [-97.687638, 30.285074], [-97.688968, 30.284871], [-97.689821, 30.284729], [-97.690608, 30.284599], [-97.691431, 30.284498], [-97.693009, 30.284277], [-97.694042, 30.284101], [-97.696093, 30.28373], [-97.698139, 30.283453], [-97.700356, 30.283119], [-97.700814, 30.283057], [-97.701097, 30.283005], [-97.701711, 30.282911], [-97.703945, 30.282572], [-97.704415, 30.283244], [-97.704859, 30.283919], [-97.705285, 30.284582], [-97.705481, 30.284946], [-97.705758, 30.285288], [-97.706091, 30.285806], [-97.706324, 30.286171], [-97.70648, 30.286436], [-97.706694, 30.286973], [-97.706941, 30.287652], [-97.707062, 30.288103], [-97.707214, 30.289036], [-97.707418, 30.290534], [-97.70752, 30.291369], [-97.707655, 30.292365], [-97.707729, 30.29293], [-97.707789, 30.293418], [-97.707856, 30.293953], [-97.707893, 30.294223], [-97.707961, 30.294706], [-97.708022, 30.2952], [-97.708084, 30.295644], [-97.708147, 30.296002], [-97.708248, 30.296379], [-97.708351, 30.296661], [-97.708553, 30.297108], [-97.708715, 30.297406], [-97.708914, 30.297726], [-97.709077, 30.297952], [-97.709213, 30.298115], [-97.709457, 30.298384], [-97.709738, 30.298653], [-97.710056, 30.298907], [-97.709905, 30.299113], [-97.709613, 30.299578], [-97.709513, 30.299735], [-97.709324, 30.300034], [-97.709229, 30.300183], [-97.709135, 30.300332], [-97.709041, 30.300482], [-97.708947, 30.300631], [-97.708783, 30.300908], [-97.708973, 30.301182], [-97.709215, 30.301368], [-97.709295, 30.302467], [-97.70955, 30.302745], [-97.709748, 30.302961], [-97.709904, 30.303129], [-97.710023, 30.303261], [-97.710141, 30.303389], [-97.710259, 30.303518], [-97.710378, 30.303647], [-97.710496, 30.303776], [-97.710636, 30.303928], [-97.710773, 30.304076], [-97.710912, 30.304228], [-97.71105, 30.304379], [-97.711188, 30.304528], [-97.711382, 30.304702], [-97.711693, 30.304851], [-97.712277, 30.305127], [-97.712592, 30.30528], [-97.712953, 30.305452], [-97.71272, 30.305808], [-97.711854, 30.307135], [-97.71095, 30.308563], [-97.710487, 30.30928], [-97.710315, 30.309562], [-97.709977, 30.310127], [-97.709345, 30.311275], [-97.709013, 30.311931], [-97.708618, 30.312743], [-97.708549, 30.312928], [-97.708254, 30.313797], [-97.707967, 30.314616], [-97.707867, 30.314892], [-97.707696, 30.315889], [-97.70751, 30.316972], [-97.707308, 30.318321], [-97.70714, 30.319533], [-97.70693, 30.320901], [-97.706766, 30.322105], [-97.706373, 30.322174], [-97.705982, 30.322243], [-97.705324, 30.322271], [-97.704677, 30.322225], [-97.702915, 30.322101], [-97.701723, 30.322016], [-97.701014, 30.321965], [-97.700742, 30.321935], [-97.699333, 30.321766], [-97.697906, 30.321594], [-97.697264, 30.321525], [-97.696593, 30.321457], [-97.696099, 30.321416], [-97.695353, 30.321354], [-97.694965, 30.32133], [-97.69422, 30.321287], [-97.693695, 30.321251], [-97.692905, 30.321199], [-97.69198, 30.321227], [-97.69102, 30.321257], [-97.690476, 30.321273], [-97.690054, 30.321289], [-97.688987, 30.321404], [-97.688247, 30.321458], [-97.68675, 30.321545], [-97.686557, 30.321558], [-97.685447, 30.321686], [-97.685095, 30.32172], [-97.684648, 30.321799], [-97.6841, 30.321892], [-97.683313, 30.322134], [-97.682262, 30.322492], [-97.681636, 30.322705], [-97.680192, 30.323181], [-97.678943, 30.323592], [-97.677379, 30.324146], [-97.676523, 30.324447], [-97.675392, 30.324845], [-97.674176, 30.325268], [-97.673325, 30.325558], [-97.670324, 30.323207], [-97.667932, 30.321364], [-97.666142, 30.320026], [-97.665643, 30.319628], [-97.66487, 30.318883], [-97.664406, 30.318326], [-97.663989, 30.317682], [-97.663688, 30.317167], [-97.663404, 30.316603], [-97.663207, 30.316183], [-97.663039, 30.315765], [-97.662903, 30.315267], [-97.662702, 30.31438], [-97.662515, 30.31357], [-97.662153, 30.312014], [-97.661472, 30.30901], [-97.661194, 30.30772], [-97.660948, 30.306323], [-97.660899, 30.305893], [-97.660859, 30.305191], [-97.66083, 30.304632], [-97.660882, 30.303838], [-97.660951, 30.302929], [-97.661047, 30.302191], [-97.661121, 30.301698], [-97.661337, 30.300924], [-97.662572, 30.296348], [-97.66381, 30.291654], [-97.664249, 30.289884], [-97.664831, 30.287778], [-97.665396, 30.285639]]]]
    },
    "properties": {
      "neighbourhood": "78723",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-97.791053, 30.450485], [-97.790872, 30.44956], [-97.790659, 30.448736], [-97.790436, 30.447873], [-97.79025, 30.447463], [-97.789996, 30.446899], [-97.789701, 30.44647], [-97.789305, 30.446041], [-97.788824, 30.445597], [-97.788007, 30.445034], [-97.786602, 30.44412], [-97.785529, 30.443422], [-97.784707, 30.442889], [-97.784168, 30.442537], [-97.783449, 30.442069], [-97.782168, 30.441309], [-97.780789, 30.440435], [-97.779301, 30.439492], [-97.778605, 30.439052], [-97.776559, 30.437754], [-97.775391, 30.437109], [-97.774467, 30.436654], [-97.77275, 30.435803], [-97.769833, 30.434402], [-97.769569, 30.434221], [-97.76981, 30.434207], [-97.770148, 30.434084], [-97.770321, 30.434019], [-97.772681, 30.433271], [-97.773642, 30.432989], [-97.775538, 30.432431], [-97.776414, 30.432185], [-97.776978, 30.432031], [-97.776994, 30.432026], [-97.777287, 30.431946], [-97.777869, 30.431757], [-97.778293, 30.431625], [-97.778528, 30.431553], [-97.779174, 30.431351], [-97.779341, 30.431261], [-97.779993, 30.430867], [-97.780707, 30.430435], [-97.780825, 30.430364], [-97.781218, 30.430124], [-97.781417, 30.430026], [-97.781535, 30.429968], [-97.781837, 30.429743], [-97.7823, 30.429265], [-97.782453, 30.429069], [-97.783042, 30.428315], [-97.783251, 30.42811], [-97.783624, 30.427823], [-97.784156, 30.427457], [-97.784314, 30.427348], [-97.784426, 30.42727], [-97.784599, 30.427114], [-97.78463, 30.427078], [-97.78482, 30.426857], [-97.784924, 30.426666], [-97.784937, 30.426642], [-97.785048, 30.42644], [-97.785089, 30.426088], [-97.78509, 30.426078], [-97.785079, 30.425866], [-97.78494, 30.425289], [-97.784902, 30.425131], [-97.784873, 30.425013], [-97.784848, 30.424909], [-97.784844, 30.424891], [-97.784831, 30.424555], [-97.784822, 30.424291], [-97.784905, 30.424028], [-97.784951, 30.423923], [-97.784988, 30.423841], [-97.785048, 30.423704], [-97.785219, 30.423462], [-97.785432, 30.423216], [-97.785668, 30.423007], [-97.785734, 30.422968], [-97.785779, 30.422942], [-97.785875, 30.422887], [-97.786025, 30.422799], [-97.786567, 30.422604], [-97.787035, 30.422519], [-97.787579, 30.42242], [-97.787916, 30.422405], [-97.788337, 30.422424], [-97.788719, 30.422498], [-97.789112, 30.422668], [-97.78937, 30.42278], [-97.789455, 30.422818], [-97.789847, 30.422985], [-97.790108, 30.4231], [-97.790516, 30.423174], [-97.790855, 30.423186], [-97.790858, 30.423186], [-97.791306, 30.423124], [-97.791809, 30.423002], [-97.792427, 30.42287], [-97.792992, 30.42275], [-97.793264, 30.422662], [-97.793394, 30.422613], [-97.793613, 30.422529], [-97.794549, 30.421843], [-97.794031, 30.421283], [-97.793813, 30.42099], [-97.793707, 30.420691], [-97.79379, 30.420089], [-97.793793, 30.420068], [-97.793815, 30.419951], [-97.793952, 30.419221], [-97.794152, 30.418661], [-97.794253, 30.418507], [-97.794445, 30.418211], [-97.794914, 30.417626], [-97.795104, 30.417212], [-97.795185, 30.416748], [-97.795201, 30.416122], [-97.795112, 30.415671], [-97.795075, 30.415484], [-97.79461, 30.414916], [-97.792882, 30.413375], [-97.792419, 30.412744], [-97.792342, 30.41217], [-97.792212, 30.411197], [-97.792179, 30.411067], [-97.792057, 30.410578], [-97.792118, 30.410338], [-97.792168, 30.410146], [-97.792382, 30.409435], [-97.792336, 30.4089], [-97.792224, 30.408587], [-97.79196, 30.408362], [-97.791953, 30.408356], [-97.791212, 30.407737], [-97.789888, 30.406643], [-97.789833, 30.406559], [-97.789565, 30.406147], [-97.789473, 30.405895], [-97.788295, 30.404857], [-97.787606, 30.404522], [-97.78727, 30.404444], [-97.787003, 30.404383], [-97.786195, 30.404026], [-97.785856, 30.403783], [-97.785522, 30.403427], [-97.784812, 30.402491], [-97.784751, 30.402366], [-97.784101, 30.401025], [-97.783805, 30.400318], [-97.783577, 30.399873], [-97.783103, 30.399449], [-97.78288, 30.39921], [-97.782192, 30.398443], [-97.781928, 30.398259], [-97.781559, 30.398001], [-97.780588, 30.39766], [-97.780215, 30.397565], [-97.779551, 30.397428], [-97.779082, 30.39727], [-97.77866, 30.397006], [-97.77755, 30.396349], [-97.777539, 30.396343], [-97.778815, 30.395205], [-97.778861, 30.394642], [-97.778911, 30.394015], [-97.778929, 30.393799], [-97.779003, 30.393044], [-97.778867, 30.39297], [-97.778142, 30.392645], [-97.778537, 30.392075], [-97.77864, 30.391926], [-97.778602, 30.391653], [-97.778503, 30.391458], [-97.778305, 30.391193], [-97.7781, 30.391048], [-97.77793, 30.391018], [-97.777755, 30.391009], [-97.777482, 30.390995], [-97.776801, 30.390951], [-97.775853, 30.390899], [-97.775628, 30.39084], [-97.77488, 30.39036], [-97.774771, 30.390287], [-97.774491, 30.390102], [-97.774263, 30.38982], [-97.774123, 30.389608], [-97.77411, 30.389176], [-97.774056, 30.388922], [-97.774002, 30.388667], [-97.773191, 30.387081], [-97.772873, 30.386783], [-97.771999, 30.386323], [-97.771934, 30.386288], [-97.771751, 30.386081], [-97.771592, 30.385858], [-97.771517, 30.385661], [-97.771463, 30.385355], [-97.771457, 30.385319], [-97.771331, 30.384612], [-97.771322, 30.384376], [-97.771505, 30.383612], [-97.771521, 30.383456], [-97.771559, 30.383239], [-97.77156, 30.383091], [-97.771473, 30.382885], [-97.771409, 30.382784], [-97.771396, 30.382762], [-97.771333, 30.382662], [-97.7727, 30.381991], [-97.77348, 30.38158], [-97.773954, 30.381353], [-97.774536, 30.380999], [-97.77482, 30.380777], [-97.775665, 30.380109], [-97.7764, 30.379488], [-97.777099, 30.3789], [-97.777843, 30.378271], [-97.778293, 30.377892], [-97.778943, 30.377344], [-97.779404, 30.376957], [-97.780135, 30.376339], [-97.780375, 30.376137], [-97.781089, 30.375536], [-97.781574, 30.375127], [-97.78245, 30.374388], [-97.78328, 30.37369], [-97.783941, 30.373133], [-97.784198, 30.372916], [-97.784742, 30.372456], [-97.785449, 30.37186], [-97.785691, 30.371658], [-97.786246, 30.371188], [-97.787002, 30.370551], [-97.787238, 30.370352], [-97.787747, 30.369925], [-97.787992, 30.369688], [-97.788407, 30.369286], [-97.788809, 30.368896], [-97.788983, 30.368652], [-97.789106, 30.368428], [-97.789342, 30.368004], [-97.789481, 30.36777], [-97.789776, 30.367034], [-97.789824, 30.366644], [-97.789897, 30.366038], [-97.789986, 30.365308], [-97.790136, 30.364079], [-97.790154, 30.363881], [-97.7902, 30.363365], [-97.790255, 30.362747], [-97.790389, 30.362026], [-97.790531, 30.361449], [-97.790579, 30.361161], [-97.790759, 30.360582], [-97.790944, 30.359983], [-97.791046, 30.359655], [-97.791202, 30.359276], [-97.791493, 30.359312], [-97.79165, 30.35934], [-97.791844, 30.359398], [-97.791999, 30.359445], [-97.792258, 30.35955], [-97.792402, 30.35964], [-97.792664, 30.359813], [-97.792799, 30.359923], [-97.79298, 30.3601], [-97.793432, 30.36075], [-97.79401, 30.361562], [-97.795397, 30.362522], [-97.796002, 30.363348], [-97.796423, 30.365433], [-97.796755, 30.365995], [-97.79715, 30.366341], [-97.797562, 30.366742], [-97.798898, 30.367099], [-97.800121, 30.367615], [-97.801108, 30.368352], [-97.801991, 30.369497], [-97.80297, 30.370958], [-97.80429, 30.373748], [-97.804626, 30.374959], [-97.80491, 30.375732], [-97.805416, 30.377351], [-97.806032, 30.378428], [-97.806713, 30.379222], [-97.807092, 30.379527], [-97.807623, 30.379952], [-97.809166, 30.381009], [-97.811074, 30.381885], [-97.811266, 30.381974], [-97.81322, 30.382268], [-97.814587, 30.38262], [-97.816519, 30.382567], [-97.817735, 30.383058], [-97.822065, 30.3861], [-97.827313, 30.389824], [-97.829213, 30.390975], [-97.830158, 30.391503], [-97.831151, 30.391896], [-97.831835, 30.392052], [-97.832536, 30.392146], [-97.835189, 30.392085], [-97.838323, 30.392165], [-97.838759, 30.392182], [-97.839033, 30.39225], [-97.838963, 30.392554], [-97.838859, 30.392775], [-97.838673, 30.392997], [-97.838558, 30.393107], [-97.838393, 30.393289], [-97.838239, 30.393514], [-97.83812, 30.393635], [-97.837964, 30.393871], [-97.837799, 30.394102], [-97.837644, 30.394264], [-97.837522, 30.394352], [-97.837253, 30.394441], [-97.836995, 30.394576], [-97.836765, 30.394753], [-97.836664, 30.394977], [-97.836625, 30.395226], [-97.83658, 30.395451], [-97.836581, 30.395608], [-97.836601, 30.395853], [-97.836449, 30.395899], [-97.836208, 30.395983], [-97.835999, 30.39608], [-97.835774, 30.396202], [-97.835633, 30.396266], [-97.835412, 30.396388], [-97.835221, 30.396491], [-97.835069, 30.396565], [-97.834858, 30.39666], [-97.834537, 30.396764], [-97.834288, 30.396889], [-97.834093, 30.397069], [-97.833961, 30.397242], [-97.833861, 30.397444], [-97.833666, 30.397622], [-97.833453, 30.397758], [-97.833235, 30.39785], [-97.833097, 30.398034], [-97.832964, 30.398131], [-97.832804, 30.398326], [-97.832759, 30.398459], [-97.832726, 30.398698], [-97.832691, 30.39892], [-97.832651, 30.399057], [-97.832514, 30.399315], [-97.832437, 30.399462], [-97.832354, 30.39962], [-97.832268, 30.399781], [-97.832129, 30.400009], [-97.83198, 30.400177], [-97.83193, 30.400311], [-97.831883, 30.400505], [-97.831897, 30.400646], [-97.831941, 30.400869], [-97.831936, 30.401009], [-97.831887, 30.401143], [-97.8318, 30.401285], [-97.831644, 30.401554], [-97.831522, 30.401788], [-97.831387, 30.401978], [-97.831039, 30.401996], [-97.830705, 30.401973], [-97.830449, 30.401976], [-97.830132, 30.402124], [-97.829856, 30.402259], [-97.829689, 30.402376], [-97.829545, 30.402511], [-97.829432, 30.402647], [-97.829318, 30.402776], [-97.829095, 30.40286], [-97.828938, 30.402873], [-97.828783, 30.402906], [-97.828635, 30.402964], [-97.828439, 30.403089], [-97.8282, 30.403192], [-97.827929, 30.403274], [-97.827738, 30.403359], [-97.827551, 30.403476], [-97.827332, 30.403576], [-97.8272, 30.403794], [-97.826959, 30.403938], [-97.826739, 30.404076], [-97.826575, 30.404125], [-97.826347, 30.404198], [-97.826245, 30.404347], [-97.826333, 30.404585], [-97.826339, 30.40474], [-97.826304, 30.404876], [-97.826054, 30.405166], [-97.825924, 30.405262], [-97.825718, 30.40539], [-97.825565, 30.405478], [-97.825318, 30.405528], [-97.825035, 30.405619], [-97.82483, 30.405686], [-97.824586, 30.405844], [-97.824373, 30.406016], [-97.824265, 30.406143], [-97.824159, 30.406251], [-97.824042, 30.406386], [-97.823941, 30.40653], [-97.823868, 30.406663], [-97.823737, 30.406883], [-97.823581, 30.407067], [-97.823509, 30.40722], [-97.823459, 30.407359], [-97.823326, 30.407607], [-97.823274, 30.407757], [-97.823284, 30.407972], [-97.823357, 30.408226], [-97.82338, 30.408381], [-97.823273, 30.40858], [-97.823214, 30.408765], [-97.823217, 30.408903], [-97.823186, 30.409194], [-97.82322, 30.409453], [-97.823261, 30.4096], [-97.823318, 30.409727], [-97.823414, 30.409969], [-97.823447, 30.410115], [-97.823412, 30.41034], [-97.823224, 30.410504], [-97.823088, 30.410677], [-97.822935, 30.410853], [-97.8228, 30.411076], [-97.822706, 30.411228], [-97.822586, 30.41149], [-97.822526, 30.411698], [-97.82248, 30.411903], [-97.822434, 30.412081], [-97.822402, 30.412242], [-97.822408, 30.412413], [-97.822473, 30.412538], [-97.822612, 30.412775], [-97.822627, 30.412918], [-97.822541, 30.413125], [-97.822362, 30.413317], [-97.822336, 30.413506], [-97.822279, 30.413689], [-97.82215, 30.41394], [-97.821976, 30.414135], [-97.821845, 30.414305], [-97.82172, 30.414556], [-97.821577, 30.414779], [-97.821413, 30.415009], [-97.821241, 30.415215], [-97.821108, 30.415347], [-97.820948, 30.415462], [-97.820748, 30.415596], [-97.820599, 30.415684], [-97.820359, 30.415833], [-97.82006, 30.415937], [-97.819763, 30.416], [-97.819575, 30.41604], [-97.819387, 30.416083], [-97.81909, 30.41619], [-97.818883, 30.416197], [-97.818732, 30.416241], [-97.818431, 30.416246], [-97.818155, 30.41629], [-97.817959, 30.41635], [-97.817716, 30.416438], [-97.817489, 30.41655], [-97.817357, 30.416649], [-97.817128, 30.416768], [-97.816986, 30.416966], [-97.816859, 30.417117], [-97.816619, 30.417184], [-97.81649, 30.417275], [-97.81631, 30.417412], [-97.816134, 30.417546], [-97.815937, 30.417671], [-97.815804, 30.417751], [-97.815646, 30.417836], [-97.815454, 30.417937], [-97.815318, 30.418053], [-97.815181, 30.418154], [-97.815037, 30.418262], [-97.814831, 30.418417], [-97.814638, 30.418562], [-97.814496, 30.418622], [-97.814235, 30.418686], [-97.814051, 30.418715], [-97.813782, 30.418782], [-97.81358, 30.418835], [-97.813399, 30.418879], [-97.813057, 30.418954], [-97.812822, 30.418999], [-97.812657, 30.419021], [-97.812431, 30.419066], [-97.812161, 30.419121], [-97.81191, 30.41916], [-97.811725, 30.419178], [-97.811557, 30.419216], [-97.8113, 30.419277], [-97.811019, 30.419338], [-97.810841, 30.419356], [-97.81064, 30.419341], [-97.810408, 30.419337], [-97.810235, 30.419344], [-97.810056, 30.419302], [-97.809746, 30.419217], [-97.809568, 30.419161], [-97.80935, 30.419096], [-97.809063, 30.419038], [-97.808936, 30.418948], [-97.808664, 30.418926], [-97.808445, 30.419015], [-97.808264, 30.419053], [-97.808071, 30.419096], [-97.808137, 30.419339], [-97.808012, 30.419535], [-97.807941, 30.419662], [-97.807913, 30.419896], [-97.807922, 30.420143], [-97.807934, 30.4203], [-97.807926, 30.420479], [-97.80787, 30.420665], [-97.807807, 30.420804], [-97.80778, 30.420949], [-97.807773, 30.421111], [-97.807892, 30.421292], [-97.808138, 30.421424], [-97.808303, 30.421498], [-97.808545, 30.421668], [-97.808756, 30.421785], [-97.808916, 30.421797], [-97.809148, 30.421721], [-97.809294, 30.421856], [-97.809363, 30.42202], [-97.809449, 30.422159], [-97.809676, 30.422249], [-97.809984, 30.422186], [-97.810154, 30.422148], [-97.810427, 30.422121], [-97.810787, 30.42213], [-97.810957, 30.422112], [-97.811142, 30.422099], [-97.811318, 30.422086], [-97.811591, 30.422157], [-97.811765, 30.422243], [-97.811995, 30.422319], [-97.812164, 30.422372], [-97.812367, 30.422489], [-97.812514, 30.42256], [-97.81279, 30.422646], [-97.812953, 30.422687], [-97.813194, 30.422769], [-97.813342, 30.422816], [-97.813576, 30.422903], [-97.813839, 30.423125], [-97.813912, 30.423256], [-97.813943, 30.42348], [-97.814018, 30.423709], [-97.814108, 30.42384], [-97.814239, 30.424044], [-97.814328, 30.424158], [-97.814508, 30.424376], [-97.814647, 30.424527], [-97.814715, 30.424655], [-97.814722, 30.424903], [-97.814715, 30.42504], [-97.814698, 30.425197], [-97.814637, 30.425462], [-97.81458, 30.425624], [-97.814438, 30.425849], [-97.814346, 30.425993], [-97.814278, 30.426118], [-97.814194, 30.426328], [-97.814136, 30.426487], [-97.814065, 30.426642], [-97.814052, 30.426823], [-97.814117, 30.426992], [-97.814356, 30.427143], [-97.814527, 30.427245], [-97.814779, 30.427421], [-97.814863, 30.427667], [-97.814973, 30.427895], [-97.815051, 30.428185], [-97.814964, 30.428403], [-97.81474, 30.428476], [-97.814547, 30.428643], [-97.814533, 30.428802], [-97.814601, 30.429018], [-97.81461, 30.429241], [-97.814619, 30.429502], [-97.814742, 30.429659], [-97.814895, 30.429714], [-97.815101, 30.429789], [-97.815358, 30.429852], [-97.815615, 30.429973], [-97.815765, 30.430072], [-97.815904, 30.43024], [-97.815945, 30.4304], [-97.815899, 30.43063], [-97.815844, 30.430797], [-97.815783, 30.431093], [-97.815583, 30.431191], [-97.815343, 30.431158], [-97.815093, 30.431214], [-97.814918, 30.43129], [-97.814702, 30.431446], [-97.814547, 30.431679], [-97.814452, 30.431872], [-97.814279, 30.432059], [-97.814118, 30.432303], [-97.814099, 30.432449], [-97.814171, 30.432654], [-97.814307, 30.432887], [-97.814415, 30.433101], [-97.814495, 30.433356], [-97.814455, 30.433523], [-97.814345, 30.433683], [-97.814263, 30.433846], [-97.814185, 30.434012], [-97.814128, 30.434154], [-97.81405, 30.434409], [-97.813986, 30.434641], [-97.813974, 30.434828], [-97.813957, 30.435094], [-97.813955, 30.435251], [-97.813972, 30.435515], [-97.81399, 30.435706], [-97.814021, 30.435995], [-97.814055, 30.436271], [-97.814081, 30.436568], [-97.814106, 30.436734], [-97.814148, 30.436911], [-97.814251, 30.437113], [-97.81436, 30.437369], [-97.814442, 30.437554], [-97.814524, 30.437702], [-97.814607, 30.437857], [-97.81475, 30.438105], [-97.814854, 30.438294], [-97.814992, 30.43855], [-97.815108, 30.438778], [-97.815203, 30.438887], [-97.815312, 30.439007], [-97.815494, 30.439242], [-97.81565, 30.43938], [-97.815758, 30.439486], [-97.815881, 30.439582], [-97.816059, 30.439792], [-97.816205, 30.43996], [-97.816393, 30.44012], [-97.81659, 30.440204], [-97.816813, 30.440291], [-97.816989, 30.440368], [-97.817192, 30.44046], [-97.817384, 30.440599], [-97.817606, 30.440774], [-97.817745, 30.441002], [-97.817856, 30.441164], [-97.817958, 30.4414], [-97.818054, 30.441676], [-97.818104, 30.441853], [-97.818181, 30.442072], [-97.818252, 30.44225], [-97.81836, 30.442395], [-97.81852, 30.442549], [-97.818782, 30.442711], [-97.818738, 30.443073], [-97.81851, 30.443479], [-97.817753, 30.442897], [-97.817447, 30.442528], [-97.817365, 30.442241], [-97.816924, 30.441613], [-97.816695, 30.441499], [-97.816296, 30.441499], [-97.815631, 30.442385], [-97.815072, 30.44334], [-97.815007, 30.444307], [-97.813582, 30.446449], [-97.813297, 30.447015], [-97.815217, 30.449146], [-97.816234, 30.449567], [-97.81749, 30.450057], [-97.817982, 30.450198], [-97.819137, 30.450182], [-97.819542, 30.450265], [-97.819939, 30.450481], [-97.820846, 30.451195], [-97.821398, 30.451844], [-97.821982, 30.452414], [-97.823593, 30.453928], [-97.824793, 30.45504], [-97.825802, 30.45545], [-97.823112, 30.458035], [-97.820895, 30.460187], [-97.820634, 30.460391], [-97.820437, 30.460546], [-97.82017, 30.460714], [-97.819924, 30.460847], [-97.817681, 30.461716], [-97.816074, 30.46215], [-97.814023, 30.462827], [-97.811112, 30.463719], [-97.810621, 30.463891], [-97.80805, 30.464729], [-97.807846, 30.464791], [-97.805488, 30.465503], [-97.804053, 30.465951], [-97.803851, 30.466016], [-97.801154, 30.466867], [-97.800786, 30.466965], [-97.799796, 30.467248], [-97.799543, 30.467331], [-97.798261, 30.467754], [-97.797404, 30.467987], [-97.797019, 30.468164], [-97.796698, 30.467332], [-97.796543, 30.466925], [-97.795946, 30.465505], [-97.795862, 30.465294], [-97.794796, 30.462633], [-97.794627, 30.462214], [-97.794363, 30.461541], [-97.794155, 30.4613], [-97.794156, 30.46111], [-97.793703, 30.459932], [-97.793456, 30.459424], [-97.79336, 30.459076], [-97.792978, 30.458152], [-97.792835, 30.457811], [-97.792654, 30.457241], [-97.792486, 30.45671], [-97.792248, 30.45596], [-97.79214, 30.455457], [-97.792032, 30.45496], [-97.791954, 30.454592], [-97.791731, 30.453559], [-97.791616, 30.453023], [-97.791549, 30.452711], [-97.791374, 30.452122], [-97.791169, 30.451073], [-97.791053, 30.450485]]]]
    },
    "properties": {
      "neighbourhood": "78750",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-97.862415, 30.297004], [-97.862158, 30.296892], [-97.861893, 30.296826], [-97.861648, 30.296802], [-97.861329, 30.296746], [-97.860876, 30.296831], [-97.860524, 30.296926], [-97.860072, 30.297066], [-97.859785, 30.297258], [-97.859426, 30.297477], [-97.859104, 30.297762], [-97.858767, 30.298056], [-97.858578, 30.298324], [-97.858386, 30.298807], [-97.858209, 30.299329], [-97.858084, 30.299723], [-97.858206, 30.299909], [-97.85825, 30.300062], [-97.858239, 30.30035], [-97.85813, 30.301016], [-97.858066, 30.301433], [-97.85807, 30.301744], [-97.858054, 30.301975], [-97.858046, 30.302162], [-97.857995, 30.302458], [-97.857864, 30.302873], [-97.857726, 30.303206], [-97.857553, 30.303456], [-97.85735, 30.30384], [-97.857203, 30.304246], [-97.857092, 30.304596], [-97.856911, 30.304744], [-97.856607, 30.304807], [-97.856466, 30.304879], [-97.856142, 30.304988], [-97.855949, 30.305006], [-97.855651, 30.304951], [-97.855495, 30.304981], [-97.855048, 30.304892], [-97.854277, 30.304652], [-97.853918, 30.304433], [-97.853535, 30.304118], [-97.853228, 30.303683], [-97.85307, 30.303284], [-97.852919, 30.302893], [-97.852933, 30.302668], [-97.853033, 30.302513], [-97.853146, 30.302127], [-97.853081, 30.301573], [-97.853027, 30.301019], [-97.852939, 30.300655], [-97.852786, 30.300536], [-97.852713, 30.300367], [-97.852663, 30.300088], [-97.852656, 30.299678], [-97.852547, 30.298953], [-97.852509, 30.298358], [-97.85259, 30.298137], [-97.852599, 30.297917], [-97.852484, 30.297794], [-97.852344, 30.297601], [-97.852252, 30.297388], [-97.852132, 30.297064], [-97.852048, 30.296727], [-97.851947, 30.29643], [-97.8519, 30.296286], [-97.851832, 30.295911], [-97.851837, 30.295655], [-97.851721, 30.295329], [-97.851685, 30.295053], [-97.851596, 30.294542], [-97.851582, 30.294132], [-97.851599, 30.293954], [-97.851536, 30.293774], [-97.851298, 30.293332], [-97.85111, 30.293262], [-97.851051, 30.29297], [-97.851014, 30.292721], [-97.851038, 30.292488], [-97.851011, 30.29232], [-97.850903, 30.292158], [-97.850805, 30.292035], [-97.85068, 30.291904], [-97.850477, 30.291781], [-97.850162, 30.291605], [-97.850009, 30.291489], [-97.849684, 30.291444], [-97.848671, 30.291268], [-97.848364, 30.291229], [-97.847955, 30.291193], [-97.847715, 30.291167], [-97.847423, 30.291098], [-97.847178, 30.291066], [-97.846962, 30.291092], [-97.846683, 30.291293], [-97.846526, 30.291496], [-97.846233, 30.291586], [-97.845859, 30.291739], [-97.845574, 30.291942], [-97.845257, 30.292247], [-97.844983, 30.292494], [-97.844861, 30.292652], [-97.844821, 30.292802], [-97.844638, 30.292848], [-97.844496, 30.292776], [-97.844338, 30.292718], [-97.844092, 30.292741], [-97.843885, 30.292781], [-97.843568, 30.292783], [-97.843389, 30.292749], [-97.843137, 30.292615], [-97.842956, 30.292348], [-97.842982, 30.292136], [-97.842985, 30.291749], [-97.843026, 30.291505], [-97.843093, 30.291283], [-97.843164, 30.290979], [-97.843181, 30.290716], [-97.843206, 30.290568], [-97.84333, 30.290419], [-97.843564, 30.290159], [-97.843804, 30.289894], [-97.844, 30.289764], [-97.844377, 30.289446], [-97.8447, 30.289191], [-97.845002, 30.289002], [-97.845248, 30.28891], [-97.845443, 30.288851], [-97.845786, 30.288764], [-97.846054, 30.288629], [-97.846334, 30.288467], [-97.846601, 30.288315], [-97.846825, 30.28819], [-97.84696, 30.288], [-97.847099, 30.287802], [-97.847552, 30.287429], [-97.847893, 30.287174], [-97.848072, 30.287018], [-97.848267, 30.286849], [-97.848627, 30.286668], [-97.848953, 30.286496], [-97.849144, 30.28639], [-97.849308, 30.286365], [-97.849549, 30.2862], [-97.849723, 30.286057], [-97.849965, 30.285941], [-97.850364, 30.285737], [-97.850518, 30.285688], [-97.850777, 30.285448], [-97.851082, 30.285181], [-97.85121, 30.285024], [-97.85129, 30.284886], [-97.851407, 30.284737], [-97.851847, 30.284382], [-97.852024, 30.284221], [-97.852127, 30.284014], [-97.852284, 30.283689], [-97.852407, 30.283381], [-97.852464, 30.283063], [-97.852536, 30.282916], [-97.852541, 30.282657], [-97.852485, 30.282277], [-97.852418, 30.282053], [-97.852273, 30.281846], [-97.852024, 30.281773], [-97.851761, 30.28155], [-97.851589, 30.281242], [-97.851397, 30.280936], [-97.851124, 30.280641], [-97.850794, 30.280368], [-97.850215, 30.279953], [-97.849986, 30.279767], [-97.849728, 30.279443], [-97.848152, 30.277576], [-97.854062, 30.277575], [-97.854754, 30.276614], [-97.85286, 30.27238], [-97.854769, 30.270162], [-97.854954, 30.26581], [-97.857392, 30.265532], [-97.858534, 30.263578], [-97.857339, 30.261502], [-97.862663, 30.256164], [-97.85698, 30.254111], [-97.857529, 30.253046], [-97.849411, 30.249716], [-97.846406, 30.254068], [-97.849104, 30.255302], [-97.847684, 30.257524], [-97.840389, 30.268935], [-97.838869, 30.271312], [-97.838309, 30.272189], [-97.837669, 30.273189], [-97.837176, 30.27396], [-97.836488, 30.275051], [-97.836268, 30.274984], [-97.835784, 30.274763], [-97.835509, 30.274661], [-97.83536, 30.274604], [-97.835124, 30.274503], [-97.834931, 30.274403], [-97.834626, 30.274234], [-97.834446, 30.274129], [-97.834173, 30.274058], [-97.834041, 30.273948], [-97.833922, 30.273847], [-97.833721, 30.273656], [-97.833619, 30.273549], [-97.833404, 30.273322], [-97.833081, 30.272898], [-97.832956, 30.272733], [-97.83275, 30.272495], [-97.83252, 30.272216], [-97.832354, 30.27202], [-97.8322, 30.27188], [-97.831999, 30.2717], [-97.831877, 30.271549], [-97.831757, 30.271398], [-97.831581, 30.27126], [-97.831369, 30.271036], [-97.83132, 30.270886], [-97.831267, 30.270654], [-97.831191, 30.270455], [-97.831083, 30.270298], [-97.830927, 30.270139], [-97.830715, 30.270011], [-97.830453, 30.269973], [-97.830118, 30.269922], [-97.82987, 30.269912], [-97.829684, 30.269905], [-97.829497, 30.269899], [-97.829319, 30.269893], [-97.828985, 30.269883], [-97.828704, 30.269881], [-97.828501, 30.269882], [-97.828329, 30.269884], [-97.828171, 30.269928], [-97.827897, 30.269956], [-97.827529, 30.269937], [-97.827223, 30.269926], [-97.827061, 30.269926], [-97.826883, 30.269933], [-97.826629, 30.269969], [-97.826348, 30.269983], [-97.826125, 30.269979], [-97.825795, 30.269948], [-97.825504, 30.269892], [-97.825252, 30.269838], [-97.825057, 30.269765], [-97.8249, 30.2696], [-97.824794, 30.269491], [-97.824666, 30.269304], [-97.824568, 30.269162], [-97.824388, 30.268889], [-97.824211, 30.268566], [-97.824058, 30.268285], [-97.823981, 30.268097], [-97.823914, 30.267919], [-97.823855, 30.267751], [-97.823809, 30.267607], [-97.82375, 30.267407], [-97.82366, 30.267059], [-97.823622, 30.266915], [-97.823569, 30.266747], [-97.823469, 30.266464], [-97.823409, 30.266281], [-97.823375, 30.266085], [-97.823408, 30.265877], [-97.823415, 30.265698], [-97.823383, 30.265552], [-97.823338, 30.265405], [-97.823281, 30.265256], [-97.823211, 30.265103], [-97.823182, 30.264968], [-97.823097, 30.264787], [-97.82304, 30.264638], [-97.822994, 30.264406], [-97.822993, 30.264233], [-97.822997, 30.264081], [-97.823005, 30.263925], [-97.823018, 30.263754], [-97.823039, 30.263491], [-97.823066, 30.263249], [-97.823111, 30.26303], [-97.823167, 30.262861], [-97.82329, 30.262591], [-97.823442, 30.2623], [-97.823539, 30.26212], [-97.823612, 30.261907], [-97.823594, 30.261684], [-97.823584, 30.26145], [-97.823585, 30.261172], [-97.823622, 30.26095], [-97.823625, 30.260499], [-97.823587, 30.26027], [-97.823483, 30.260029], [-97.823399, 30.259793], [-97.823326, 30.259588], [-97.823198, 30.2593], [-97.823008, 30.25887], [-97.822925, 30.258698], [-97.822773, 30.258403], [-97.822702, 30.258182], [-97.822613, 30.257883], [-97.82251, 30.257683], [-97.822439, 30.257541], [-97.822255, 30.257296], [-97.822173, 30.257173], [-97.822071, 30.256923], [-97.821902, 30.256711], [-97.821794, 30.256599], [-97.82152, 30.256346], [-97.82138, 30.25622], [-97.821261, 30.256115], [-97.820952, 30.25587], [-97.82082, 30.255747], [-97.820429, 30.255447], [-97.820171, 30.25525], [-97.819981, 30.25512], [-97.81963, 30.254871], [-97.819381, 30.25469], [-97.819111, 30.254492], [-97.81897, 30.25442], [-97.818576, 30.254204], [-97.818365, 30.254142], [-97.818142, 30.254113], [-97.81793, 30.254018], [-97.817679, 30.253903], [-97.817451, 30.253824], [-97.817187, 30.253725], [-97.817026, 30.253662], [-97.816714, 30.253515], [-97.816487, 30.253431], [-97.816126, 30.253284], [-97.815854, 30.253146], [-97.815673, 30.253057], [-97.815425, 30.252912], [-97.815208, 30.252757], [-97.814999, 30.252571], [-97.814743, 30.252368], [-97.814463, 30.252143], [-97.814344, 30.252044], [-97.8141, 30.251827], [-97.813924, 30.251692], [-97.813777, 30.251609], [-97.813633, 30.251439], [-97.813502, 30.251139], [-97.813483, 30.251001], [-97.813427, 30.250681], [-97.813396, 30.250414], [-97.813368, 30.250254], [-97.813324, 30.250093], [-97.813194, 30.249736], [-97.813102, 30.24947], [-97.813094, 30.249269], [-97.813069, 30.249032], [-97.812955, 30.248914], [-97.812828, 30.248711], [-97.812761, 30.248476], [-97.812678, 30.248199], [-97.812642, 30.24799], [-97.812564, 30.247617], [-97.812489, 30.247384], [-97.812405, 30.247127], [-97.812342, 30.246958], [-97.812206, 30.246664], [-97.812043, 30.246366], [-97.811899, 30.246154], [-97.811691, 30.245867], [-97.811572, 30.245664], [-97.811429, 30.245411], [-97.81131, 30.245205], [-97.811205, 30.244994], [-97.811123, 30.244761], [-97.811046, 30.244551], [-97.810995, 30.244409], [-97.81094, 30.244238], [-97.810887, 30.244036], [-97.810846, 30.243862], [-97.810799, 30.243644], [-97.810749, 30.243401], [-97.81072, 30.243227], [-97.810698, 30.24294], [-97.810658, 30.242629], [-97.81067, 30.242478], [-97.810705, 30.242316], [-97.810742, 30.242144], [-97.810791, 30.241911], [-97.810815, 30.241774], [-97.810838, 30.241425], [-97.810852, 30.241175], [-97.81088, 30.240867], [-97.810862, 30.24071], [-97.810773, 30.240521], [-97.8106, 30.240163], [-97.810493, 30.239949], [-97.810335, 30.239779], [-97.810217, 30.239652], [-97.809946, 30.239559], [-97.809681, 30.239543], [-97.809425, 30.239579], [-97.809164, 30.239673], [-97.808909, 30.239811], [-97.808673, 30.239974], [-97.808515, 30.240141], [-97.808154, 30.240442], [-97.807984, 30.240607], [-97.807848, 30.240797], [-97.807582, 30.241141], [-97.807402, 30.241286], [-97.807218, 30.241444], [-97.807058, 30.241603], [-97.806866, 30.241828], [-97.806773, 30.24195], [-97.806644, 30.242165], [-97.806468, 30.242389], [-97.806315, 30.242549], [-97.806136, 30.242713], [-97.805919, 30.242885], [-97.805706, 30.243007], [-97.805519, 30.243102], [-97.805061, 30.243343], [-97.804862, 30.243466], [-97.804552, 30.243663], [-97.804222, 30.243849], [-97.803912, 30.244028], [-97.803767, 30.244096], [-97.803606, 30.244167], [-97.803453, 30.244239], [-97.803305, 30.24431], [-97.802993, 30.244491], [-97.802795, 30.244558], [-97.802568, 30.244656], [-97.802288, 30.24476], [-97.801772, 30.243562], [-97.800388, 30.240765], [-97.799175, 30.238315], [-97.798392, 30.236735], [-97.797936, 30.235917], [-97.797476, 30.235245], [-97.79679, 30.234536], [-97.796338, 30.234158], [-97.797081, 30.233736], [-97.797699, 30.233401], [-97.798019, 30.233234], [-97.798432, 30.233091], [-97.799564, 30.232773], [-97.800672, 30.232492], [-97.802011, 30.232222], [-97.803426, 30.231966], [-97.804221, 30.231839], [-97.804872, 30.231799], [-97.805496, 30.23182], [-97.80616, 30.231905], [-97.806947, 30.23208], [-97.807929, 30.23244], [-97.809051, 30.23288], [-97.810115, 30.233283], [-97.810735, 30.233463], [-97.811258, 30.233554], [-97.811847, 30.233615], [-97.812447, 30.233626], [-97.813357, 30.233551], [-97.816858, 30.233158], [-97.817677, 30.23308], [-97.818027, 30.233071], [-97.81835, 30.233085], [-97.818777, 30.233105], [-97.819322, 30.233189], [-97.819798, 30.233306], [-97.820266, 30.233447], [-97.820708, 30.233618], [-97.821215, 30.233862], [-97.82331, 30.23486], [-97.824058, 30.235227], [-97.824757, 30.23554], [-97.825524, 30.235825], [-97.8261, 30.236012], [-97.827071, 30.236265], [-97.827976, 30.23642], [-97.828688, 30.236508], [-97.829353, 30.236549], [-97.830388, 30.236577], [-97.832054, 30.236596], [-97.832997, 30.236593], [-97.83521, 30.236592], [-97.838814, 30.236596], [-97.840292, 30.236561], [-97.84178, 30.236491], [-97.843107, 30.236429], [-97.844661, 30.236292], [-97.846222, 30.236099], [-97.848279, 30.235823], [-97.849834, 30.235636], [-97.85153, 30.235457], [-97.852646, 30.235379], [-97.854012, 30.235321], [-97.856286, 30.235288], [-97.856806, 30.235243], [-97.857569, 30.235208], [-97.857732, 30.235197], [-97.857725, 30.235472], [-97.858569, 30.235477], [-97.859368, 30.235432], [-97.859765, 30.235391], [-97.860288, 30.235313], [-97.860785, 30.235218], [-97.861224, 30.235133], [-97.861551, 30.235056], [-97.862003, 30.234917], [-97.862857, 30.234666], [-97.8634, 30.234498], [-97.864031, 30.234309], [-97.864645, 30.234121], [-97.86514, 30.234012], [-97.865419, 30.233954], [-97.865695, 30.233924], [-97.866026, 30.233924], [-97.866354, 30.233947], [-97.866844, 30.233984], [-97.867208, 30.234021], [-97.867622, 30.234054], [-97.8681, 30.23405], [-97.870639, 30.234013], [-97.870862, 30.234001], [-97.871246, 30.233986], [-97.871872, 30.23396], [-97.872548, 30.233882], [-97.872844, 30.233833], [-97.873164, 30.233767], [-97.873596, 30.233671], [-97.873921, 30.233589], [-97.874398, 30.233439], [-97.874957, 30.233304], [-97.875141, 30.233866], [-97.875345, 30.234131], [-97.875921, 30.234698], [-97.876734, 30.235173], [-97.877393, 30.235743], [-97.878481, 30.237104], [-97.878982, 30.237828], [-97.880102, 30.239481], [-97.881557, 30.241294], [-97.88233, 30.2421], [-97.884863, 30.244602], [-97.886028, 30.24554], [-97.886968, 30.246207], [-97.888524, 30.246993], [-97.889861, 30.247649], [-97.893799, 30.249599], [-97.8944, 30.249894], [-97.898112, 30.251667], [-97.899968, 30.252764], [-97.90456, 30.257141], [-97.907384, 30.260129], [-97.907885, 30.261341], [-97.908694, 30.264808], [-97.909208, 30.266756], [-97.909477, 30.267358], [-97.910145, 30.268732], [-97.91293, 30.272756], [-97.914354, 30.275465], [-97.914807, 30.276348], [-97.91683, 30.280024], [-97.917028, 30.281662], [-97.916869, 30.284582], [-97.916764, 30.286505], [-97.917564, 30.288729], [-97.918076, 30.28961], [-97.918543, 30.290417], [-97.919183, 30.291169], [-97.922125, 30.293004], [-97.92355, 30.293888], [-97.925404, 30.295714], [-97.925963, 30.296343], [-97.925592, 30.296369], [-97.925411, 30.296319], [-97.924815, 30.296352], [-97.924654, 30.296327], [-97.924416, 30.29619], [-97.924179, 30.296023], [-97.923941, 30.296024], [-97.923771, 30.296024], [-97.923546, 30.296039], [-97.923248, 30.296033], [-97.923015, 30.296123], [-97.922837, 30.296191], [-97.922647, 30.2963], [-97.922526, 30.296452], [-97.922318, 30.296596], [-97.922035, 30.296665], [-97.921841, 30.296758], [-97.921659, 30.2969], [-97.921378, 30.29703], [-97.921113, 30.297181], [-97.920885, 30.297312], [-97.920681, 30.297448], [-97.920499, 30.297563], [-97.920314, 30.297692], [-97.920172, 30.297824], [-97.919999, 30.297983], [-97.919878, 30.298096], [-97.919728, 30.298269], [-97.919562, 30.298519], [-97.919475, 30.298644], [-97.919331, 30.298867], [-97.919219, 30.299052], [-97.91917, 30.299282], [-97.919155, 30.299446], [-97.919122, 30.299647], [-97.919143, 30.299848], [-97.919171, 30.300129], [-97.919174, 30.300398], [-97.919189, 30.300627], [-97.919104, 30.30092], [-97.918989, 30.301165], [-97.918896, 30.301315], [-97.918813, 30.301431], [-97.918687, 30.301605], [-97.918605, 30.301744], [-97.918464, 30.30192], [-97.918294, 30.30204], [-97.918155, 30.302145], [-97.917924, 30.302366], [-97.917756, 30.302533], [-97.917569, 30.302692], [-97.917328, 30.302833], [-97.917148, 30.302904], [-97.916913, 30.303021], [-97.916618, 30.303142], [-97.916429, 30.303179], [-97.916193, 30.303189], [-97.915983, 30.303245], [-97.915834, 30.303308], [-97.915595, 30.303425], [-97.915427, 30.303543], [-97.915245, 30.303666], [-97.915072, 30.30377], [-97.914803, 30.303913], [-97.914586, 30.304033], [-97.914388, 30.304159], [-97.914141, 30.304313], [-97.91398, 30.304415], [-97.913801, 30.304538], [-97.913596, 30.304644], [-97.913361, 30.304791], [-97.913186, 30.304911], [-97.912943, 30.305025], [-97.912749, 30.305118], [-97.912571, 30.305282], [-97.912495, 30.305446], [-97.91233, 30.305635], [-97.91223, 30.305749], [-97.912084, 30.305958], [-97.911958, 30.30614], [-97.911826, 30.30639], [-97.911715, 30.306531], [-97.911506, 30.30667], [-97.911312, 30.30679], [-97.911077, 30.306866], [-97.91088, 30.306942], [-97.910657, 30.306998], [-97.910478, 30.307008], [-97.91025, 30.307062], [-97.909998, 30.307095], [-97.909756, 30.307088], [-97.909532, 30.307045], [-97.909274, 30.306928], [-97.909123, 30.306845], [-97.908895, 30.306733], [-97.908739, 30.306648], [-97.908469, 30.30647], [-97.908403, 30.306199], [-97.908283, 30.306076], [-97.908159, 30.30595], [-97.907992, 30.305759], [-97.907887, 30.305603], [-97.90772, 30.305353], [-97.907588, 30.30516], [-97.907447, 30.304987], [-97.907259, 30.30481], [-97.90704, 30.304644], [-97.906849, 30.304517], [-97.906656, 30.304403], [-97.906318, 30.304276], [-97.906053, 30.304182], [-97.905826, 30.304101], [-97.905573, 30.304022], [-97.9053, 30.303948], [-97.905143, 30.303904], [-97.904771, 30.303757], [-97.904538, 30.303661], [-97.904272, 30.303579], [-97.904015, 30.303514], [-97.903781, 30.303435], [-97.903545, 30.303299], [-97.903234, 30.303067], [-97.903004, 30.302912], [-97.902815, 30.302773], [-97.902697, 30.302678], [-97.90257, 30.302571], [-97.90246, 30.302472], [-97.90217, 30.302195], [-97.90198, 30.302015], [-97.90178, 30.30183], [-97.901622, 30.301665], [-97.901538, 30.301501], [-97.90146, 30.301353], [-97.901265, 30.301157], [-97.901134, 30.301025], [-97.900925, 30.300881], [-97.900799, 30.300794], [-97.900634, 30.300697], [-97.900477, 30.300584], [-97.900192, 30.300381], [-97.899995, 30.300237], [-97.899836, 30.300107], [-97.899676, 30.299955], [-97.899522, 30.299812], [-97.899392, 30.299719], [-97.899175, 30.299564], [-97.89889, 30.299366], [-97.898764, 30.299275], [-97.898403, 30.299015], [-97.898271, 30.298928], [-97.898147, 30.298824], [-97.89789, 30.29861], [-97.897647, 30.298393], [-97.897406, 30.298136], [-97.897312, 30.298024], [-97.897201, 30.297881], [-97.897114, 30.297756], [-97.897034, 30.297614], [-97.89697, 30.297412], [-97.896958, 30.297173], [-97.896997, 30.296909], [-97.897069, 30.296707], [-97.897135, 30.296524], [-97.897216, 30.296405], [-97.897372, 30.29618], [-97.897527, 30.295973], [-97.897691, 30.295817], [-97.897908, 30.295697], [-97.898099, 30.295577], [-97.89819, 30.295461], [-97.898364, 30.295241], [-97.898617, 30.295026], [-97.898844, 30.294887], [-97.89906, 30.294798], [-97.899226, 30.294743], [-97.899395, 30.294689], [-97.899584, 30.294646], [-97.89981, 30.294565], [-97.900049, 30.294355], [-97.900332, 30.294102], [-97.900543, 30.293894], [-97.900708, 30.293693], [-97.900817, 30.29358], [-97.900936, 30.293472], [-97.901232, 30.293219], [-97.901431, 30.293047], [-97.901567, 30.292934], [-97.901739, 30.292734], [-97.901897, 30.2925], [-97.902021, 30.292329], [-97.902123, 30.292136], [-97.902225, 30.291943], [-97.902242, 30.291731], [-97.902128, 30.291553], [-97.902031, 30.2914], [-97.901898, 30.291233], [-97.901784, 30.291035], [-97.901648, 30.290826], [-97.90156, 30.290701], [-97.901413, 30.290503], [-97.901292, 30.290322], [-97.901203, 30.290207], [-97.901004, 30.290022], [-97.900871, 30.28989], [-97.900683, 30.289675], [-97.900559, 30.28954], [-97.900288, 30.289351], [-97.900102, 30.289271], [-97.899763, 30.289278], [-97.89949, 30.289314], [-97.899165, 30.289393], [-97.898886, 30.289448], [-97.898706, 30.289472], [-97.898508, 30.289496], [-97.898342, 30.289509], [-97.89815, 30.289552], [-97.897995, 30.289588], [-97.897817, 30.28967], [-97.89761, 30.289762], [-97.897477, 30.289842], [-97.897328, 30.28993], [-97.897116, 30.290047], [-97.896881, 30.29018], [-97.896692, 30.290311], [-97.896506, 30.290459], [-97.896382, 30.29055], [-97.896066, 30.290759], [-97.895932, 30.290861], [-97.895679, 30.291103], [-97.895513, 30.291263], [-97.895372, 30.291373], [-97.895222, 30.291518], [-97.895125, 30.291629], [-97.895014, 30.291756], [-97.89491, 30.291884], [-97.894792, 30.29206], [-97.894709, 30.292185], [-97.894639, 30.292335], [-97.894466, 30.292491], [-97.894207, 30.292786], [-97.89406, 30.292979], [-97.893889, 30.293162], [-97.893664, 30.293353], [-97.893522, 30.293458], [-97.893268, 30.293723], [-97.893123, 30.293882], [-97.892873, 30.294205], [-97.892725, 30.294372], [-97.892541, 30.294583], [-97.892368, 30.294778], [-97.892183, 30.295], [-97.89201, 30.29514], [-97.891874, 30.295247], [-97.891748, 30.295335], [-97.891533, 30.295469], [-97.891251, 30.295554], [-97.890983, 30.295634], [-97.890776, 30.295702], [-97.890417, 30.295676], [-97.890206, 30.29562], [-97.890031, 30.295583], [-97.889813, 30.295524], [-97.889598, 30.295427], [-97.88937, 30.295279], [-97.889162, 30.29514], [-97.888988, 30.295005], [-97.888825, 30.294867], [-97.888637, 30.294712], [-97.888495, 30.294578], [-97.888311, 30.29434], [-97.888181, 30.294189], [-97.888055, 30.294], [-97.887944, 30.29377], [-97.887827, 30.293525], [-97.887634, 30.293197], [-97.887557, 30.293072], [-97.887432, 30.292893], [-97.887319, 30.292647], [-97.887229, 30.292452], [-97.887127, 30.292178], [-97.88702, 30.291918], [-97.886943, 30.29177], [-97.886873, 30.291634], [-97.886795, 30.291492], [-97.886733, 30.291345], [-97.886673, 30.291204], [-97.886574, 30.290966], [-97.886502, 30.290769], [-97.886426, 30.290523], [-97.886374, 30.290346], [-97.886336, 30.290188], [-97.886265, 30.289956], [-97.886204, 30.289754], [-97.886169, 30.289528], [-97.886216, 30.289298], [-97.88613, 30.289125], [-97.885991, 30.288908], [-97.885895, 30.288736], [-97.885744, 30.288541], [-97.885588, 30.288359], [-97.885427, 30.288196], [-97.885276, 30.288042], [-97.88519, 30.287922], [-97.885019, 30.287768], [-97.884833, 30.287602], [-97.884715, 30.287512], [-97.884518, 30.287318], [-97.88438, 30.287183], [-97.884249, 30.287043], [-97.884141, 30.286909], [-97.884001, 30.286739], [-97.883785, 30.28663], [-97.883546, 30.286565], [-97.883334, 30.286506], [-97.883074, 30.286474], [-97.882739, 30.286486], [-97.882361, 30.286614], [-97.882148, 30.286725], [-97.881999, 30.286811], [-97.881881, 30.286927], [-97.881741, 30.287061], [-97.881527, 30.287247], [-97.881432, 30.287369], [-97.881328, 30.287502], [-97.881207, 30.287618], [-97.881098, 30.287734], [-97.881004, 30.287845], [-97.880906, 30.287975], [-97.880807, 30.288083], [-97.880597, 30.288228], [-97.880429, 30.288384], [-97.880338, 30.288564], [-97.880366, 30.28876], [-97.880491, 30.28888], [-97.880605, 30.289047], [-97.880605, 30.289325], [-97.880589, 30.289493], [-97.880568, 30.289676], [-97.880557, 30.28985], [-97.880551, 30.29002], [-97.880535, 30.290231], [-97.880491, 30.290409], [-97.880281, 30.290631], [-97.880131, 30.290848], [-97.880175, 30.291006], [-97.88029, 30.291222], [-97.880405, 30.291439], [-97.880484, 30.291636], [-97.880605, 30.291828], [-97.880741, 30.292048], [-97.880818, 30.292173], [-97.88089, 30.292309], [-97.880967, 30.292451], [-97.881045, 30.292604], [-97.881123, 30.292756], [-97.881227, 30.292978], [-97.88135, 30.293281], [-97.881436, 30.293488], [-97.881497, 30.293677], [-97.881508, 30.293853], [-97.881517, 30.294018], [-97.881506, 30.294172], [-97.881523, 30.294312], [-97.881514, 30.294604], [-97.8815, 30.294763], [-97.881438, 30.294938], [-97.881364, 30.29514], [-97.881333, 30.295329], [-97.881308, 30.295483], [-97.881243, 30.295613], [-97.881153, 30.295796], [-97.880932, 30.295896], [-97.880721, 30.295975], [-97.880446, 30.296036], [-97.880244, 30.296144], [-97.880083, 30.296276], [-97.879935, 30.29643], [-97.879748, 30.296646], [-97.879636, 30.296787], [-97.879549, 30.297025], [-97.879506, 30.297159], [-97.879452, 30.297328], [-97.879363, 30.297489], [-97.87923, 30.297695], [-97.878997, 30.297897], [-97.878869, 30.297994], [-97.87866, 30.298133], [-97.878523, 30.298232], [-97.878298, 30.298379], [-97.878071, 30.298498], [-97.877873, 30.298596], [-97.877591, 30.298693], [-97.877325, 30.298734], [-97.877104, 30.298774], [-97.876941, 30.298809], [-97.876646, 30.298903], [-97.87632, 30.298974], [-97.875994, 30.298965], [-97.875839, 30.298926], [-97.875511, 30.298771], [-97.875358, 30.298686], [-97.875198, 30.298603], [-97.874872, 30.29844], [-97.874716, 30.298354], [-97.874561, 30.298266], [-97.874409, 30.298134], [-97.87435, 30.298006], [-97.874141, 30.297854], [-97.873909, 30.297714], [-97.873748, 30.297574], [-97.873567, 30.297469], [-97.873415, 30.297383], [-97.873181, 30.297293], [-97.872906, 30.297277], [-97.872609, 30.297269], [-97.87243, 30.297262], [-97.872169, 30.297194], [-97.871922, 30.297162], [-97.871614, 30.297148], [-97.871411, 30.297138], [-97.87105, 30.297142], [-97.870874, 30.297153], [-97.870654, 30.297206], [-97.870435, 30.297329], [-97.870329, 30.297472], [-97.870222, 30.297605], [-97.870119, 30.297763], [-97.870011, 30.297906], [-97.869889, 30.298086], [-97.869717, 30.298231], [-97.86956, 30.298365], [-97.869463, 30.298487], [-97.869369, 30.298626], [-97.869282, 30.298778], [-97.869201, 30.298944], [-97.869116, 30.299141], [-97.869042, 30.299381], [-97.868961, 30.299613], [-97.868853, 30.299826], [-97.868746, 30.299978], [-97.868654, 30.300108], [-97.868517, 30.300284], [-97.868354, 30.300474], [-97.868219, 30.300636], [-97.868086, 30.300848], [-97.868019, 30.301031], [-97.867995, 30.301264], [-97.868005, 30.30146], [-97.868112, 30.301624], [-97.868323, 30.301678], [-97.868479, 30.301714], [-97.868522, 30.301893], [-97.868555, 30.302037], [-97.868549, 30.302202], [-97.868509, 30.302443], [-97.868438, 30.302604], [-97.868421, 30.302958], [-97.868419, 30.303192], [-97.868416, 30.303409], [-97.868421, 30.303602], [-97.868491, 30.303785], [-97.868635, 30.304002], [-97.868903, 30.304321], [-97.869037, 30.30445], [-97.869186, 30.304686], [-97.869274, 30.304872], [-97.869349, 30.305138], [-97.869388, 30.30535], [-97.869395, 30.305538], [-97.869264, 30.305873], [-97.86918, 30.306039], [-97.869082, 30.306269], [-97.868907, 30.3064], [-97.868755, 30.306515], [-97.868584, 30.306628], [-97.868323, 30.306738], [-97.868164, 30.306776], [-97.867884, 30.306798], [-97.867589, 30.306727], [-97.867379, 30.30664], [-97.867155, 30.306559], [-97.866872, 30.306446], [-97.866681, 30.306371], [-97.86639, 30.306195], [-97.866268, 30.306049], [-97.866161, 30.305844], [-97.866111, 30.3057], [-97.866016, 30.305519], [-97.865849, 30.30539], [-97.865716, 30.305307], [-97.86555, 30.305172], [-97.865438, 30.304991], [-97.865297, 30.304768], [-97.865167, 30.304573], [-97.865079, 30.30442], [-97.864951, 30.304236], [-97.864851, 30.304086], [-97.864674, 30.303775], [-97.864597, 30.303638], [-97.864532, 30.3035], [-97.864401, 30.303175], [-97.864327, 30.302959], [-97.864277, 30.302738], [-97.864244, 30.302529], [-97.864211, 30.302322], [-97.864183, 30.302162], [-97.864141, 30.301858], [-97.864124, 30.301657], [-97.864277, 30.301468], [-97.864358, 30.301307], [-97.864367, 30.301087], [-97.864373, 30.300941], [-97.864421, 30.300805], [-97.864481, 30.300633], [-97.864528, 30.3004], [-97.864536, 30.300235], [-97.864496, 30.300042], [-97.864457, 30.299854], [-97.864316, 30.299598], [-97.8642, 30.299425], [-97.86408, 30.299247], [-97.863961, 30.299055], [-97.86384, 30.298852], [-97.863683, 30.298645], [-97.863605, 30.298495], [-97.863535, 30.298359], [-97.863432, 30.298192], [-97.86328, 30.298005], [-97.863116, 30.297754], [-97.862933, 30.297481], [-97.862737, 30.297282], [-97.862592, 30.297136], [-97.862415, 30.297004]]]]
    },
    "properties": {
      "neighbourhood": "78735",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-97.665396, 30.285639], [-97.665983, 30.283407], [-97.666361, 30.281908], [-97.666586, 30.281035], [-97.667044, 30.279353], [-97.667267, 30.278505], [-97.667493, 30.277561], [-97.667822, 30.276341], [-97.668033, 30.275578], [-97.668316, 30.274486], [-97.66855, 30.273614], [-97.668736, 30.272996], [-97.668913, 30.272312], [-97.669136, 30.271467], [-97.669407, 30.270439], [-97.669618, 30.269667], [-97.669749, 30.269139], [-97.669912, 30.268557], [-97.670051, 30.268095], [-97.670256, 30.267549], [-97.670469, 30.267061], [-97.67077, 30.266471], [-97.671123, 30.265895], [-97.671806, 30.264847], [-97.67229, 30.264079], [-97.672874, 30.26317], [-97.673478, 30.262239], [-97.67481, 30.260154], [-97.675097, 30.259704], [-97.67569, 30.2588], [-97.676417, 30.257666], [-97.677077, 30.256637], [-97.677793, 30.25548], [-97.678671, 30.254219], [-97.679423, 30.253311], [-97.68007, 30.252747], [-97.681132, 30.252029], [-97.682255, 30.25143], [-97.683363, 30.250997], [-97.68525, 30.250513], [-97.687317, 30.250053], [-97.688633, 30.24967], [-97.690398, 30.249074], [-97.691861, 30.248477], [-97.692051, 30.248981], [-97.692191, 30.249556], [-97.692296, 30.24979], [-97.692401, 30.250064], [-97.692449, 30.250368], [-97.692487, 30.250773], [-97.692547, 30.252823], [-97.692464, 30.253104], [-97.692546, 30.253725], [-97.69277, 30.255154], [-97.693352, 30.258285], [-97.693619, 30.259314], [-97.693864, 30.260095], [-97.694534, 30.262353], [-97.694586, 30.262516], [-97.695509, 30.26561], [-97.696047, 30.267359], [-97.696272, 30.268101], [-97.696706, 30.269557], [-97.697907, 30.273556], [-97.698437, 30.274661], [-97.700329, 30.276862], [-97.700703, 30.277629], [-97.701241, 30.278297], [-97.701715, 30.279019], [-97.702117, 30.279734], [-97.703036, 30.281153], [-97.703945, 30.282572], [-97.701711, 30.282911], [-97.701097, 30.283005], [-97.700814, 30.283057], [-97.700356, 30.283119], [-97.698139, 30.283453], [-97.696093, 30.28373], [-97.694042, 30.284101], [-97.693009, 30.284277], [-97.691431, 30.284498], [-97.690608, 30.284599], [-97.689821, 30.284729], [-97.688968, 30.284871], [-97.687638, 30.285074], [-97.686457, 30.285264], [-97.685534, 30.285397], [-97.684611, 30.285537], [-97.682628, 30.285862], [-97.678834, 30.286215], [-97.677862, 30.286316], [-97.677311, 30.286393], [-97.676403, 30.286467], [-97.675129, 30.286567], [-97.673957, 30.286683], [-97.672506, 30.28681], [-97.671516, 30.286718], [-97.67047, 30.286465], [-97.669407, 30.286311], [-97.666799, 30.285872], [-97.665952, 30.285733], [-97.665396, 30.285639]]]]
    },
    "properties": {
      "neighbourhood": "78721",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-97.697291, 30.440037], [-97.696756, 30.43996], [-97.696457, 30.439983], [-97.696363, 30.439991], [-97.695956, 30.440073], [-97.695774, 30.439453], [-97.695471, 30.439125], [-97.69454, 30.438638], [-97.69239, 30.437685], [-97.688894, 30.435998], [-97.688795, 30.435951], [-97.68826, 30.43566], [-97.686118, 30.434494], [-97.685616, 30.433387], [-97.685129, 30.432313], [-97.684754, 30.430895], [-97.684287, 30.430688], [-97.676605, 30.4269], [-97.676041, 30.426636], [-97.676064, 30.42661], [-97.677417, 30.425088], [-97.675909, 30.423259], [-97.679297, 30.420398], [-97.677901, 30.418963], [-97.679497, 30.416535], [-97.68028, 30.414062], [-97.680427, 30.413057], [-97.680641, 30.411587], [-97.680867, 30.410044], [-97.680954, 30.409448], [-97.681053, 30.408767], [-97.682831, 30.409514], [-97.682959, 30.409568], [-97.684747, 30.410428], [-97.690709, 30.413296], [-97.693286, 30.414532], [-97.695776, 30.41573], [-97.695917, 30.415798], [-97.696403, 30.416047], [-97.699024, 30.41739], [-97.700862, 30.418332], [-97.701637, 30.418717], [-97.702155, 30.419056], [-97.703562, 30.420044], [-97.704216, 30.420374], [-97.704181, 30.420517], [-97.705279, 30.421185], [-97.707051, 30.419076], [-97.707418, 30.41872], [-97.708211, 30.4179], [-97.708213, 30.417901], [-97.708227, 30.417907], [-97.709118, 30.418383], [-97.713041, 30.420206], [-97.713065, 30.420216], [-97.713992, 30.42066], [-97.715622, 30.421435], [-97.716258, 30.420528], [-97.716781, 30.419784], [-97.717278, 30.418936], [-97.71815, 30.417529], [-97.71815, 30.417529], [-97.718282, 30.417317], [-97.71831, 30.41727], [-97.718776, 30.416581], [-97.719293, 30.415622], [-97.719554, 30.415277], [-97.720056, 30.41455], [-97.720573, 30.413801], [-97.721835, 30.412018], [-97.721899, 30.412028], [-97.722659, 30.41215], [-97.723359, 30.412428], [-97.724116, 30.412801], [-97.725871, 30.413677], [-97.726636, 30.413952], [-97.727423, 30.414312], [-97.728166, 30.414674], [-97.728578, 30.414877], [-97.72922, 30.415204], [-97.729535, 30.415169], [-97.729868, 30.415132], [-97.730398, 30.414447], [-97.730569, 30.414117], [-97.730741, 30.413761], [-97.73111, 30.413201], [-97.731409, 30.412763], [-97.731883, 30.412695], [-97.732107, 30.412805], [-97.732843, 30.413166], [-97.737225, 30.415224], [-97.739387, 30.416219], [-97.745145, 30.419038], [-97.745412, 30.419111], [-97.745449, 30.419113], [-97.746029, 30.419136], [-97.746195, 30.419123], [-97.746871, 30.419051], [-97.747214, 30.420917], [-97.74744, 30.421618], [-97.747636, 30.422224], [-97.747936, 30.422871], [-97.749556, 30.424386], [-97.754707, 30.426919], [-97.75926, 30.429158], [-97.762502, 30.430782], [-97.764501, 30.431783], [-97.764501, 30.431784], [-97.764731, 30.431891], [-97.767009, 30.432954], [-97.769569, 30.434221], [-97.769069, 30.434481], [-97.769056, 30.434488], [-97.767011, 30.43525], [-97.763914, 30.436243], [-97.762594, 30.436667], [-97.761636, 30.436974], [-97.760445, 30.437356], [-97.758003, 30.438148], [-97.75547, 30.438969], [-97.755104, 30.439091], [-97.754785, 30.439199], [-97.754234, 30.439386], [-97.753498, 30.439636], [-97.753067, 30.439799], [-97.752521, 30.440005], [-97.746352, 30.442334], [-97.742896, 30.443598], [-97.739756, 30.444747], [-97.738619, 30.445093], [-97.728477, 30.448184], [-97.728487, 30.448234], [-97.727787, 30.448504], [-97.726252, 30.449095], [-97.725613, 30.449107], [-97.725606, 30.449107], [-97.725038, 30.449118], [-97.721274, 30.44919], [-97.720448, 30.449206], [-97.719657, 30.449221], [-97.71794, 30.449254], [-97.717634, 30.449042], [-97.717452, 30.448916], [-97.717228, 30.448761], [-97.716396, 30.448185], [-97.715964, 30.447886], [-97.71544, 30.447523], [-97.715011, 30.447226], [-97.714441, 30.446831], [-97.714079, 30.446581], [-97.714048, 30.446568], [-97.709951, 30.444808], [-97.705628, 30.442952], [-97.704113, 30.442301], [-97.702876, 30.44177], [-97.700814, 30.441113], [-97.698405, 30.440346], [-97.697291, 30.440037]]]]
    },
    "properties": {
      "neighbourhood": "78727",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-97.920864, 30.434956], [-97.920671, 30.434482], [-97.919862, 30.433973], [-97.919517, 30.433757], [-97.918225, 30.432808], [-97.917249, 30.432011], [-97.917197, 30.431969], [-97.916095, 30.430826], [-97.914902, 30.429236], [-97.913998, 30.427597], [-97.913096, 30.426796], [-97.912026, 30.426011], [-97.911109, 30.425337], [-97.910948, 30.425218], [-97.909656, 30.423917], [-97.909485, 30.42376], [-97.909252, 30.423549], [-97.90845, 30.422825], [-97.907527, 30.421933], [-97.906654, 30.421454], [-97.905767, 30.421292], [-97.906001, 30.420454], [-97.90641, 30.418941], [-97.90702, 30.41634], [-97.907239, 30.415409], [-97.907812, 30.412213], [-97.907825, 30.411685], [-97.907851, 30.410682], [-97.907489, 30.408733], [-97.907125, 30.408091], [-97.906879, 30.407655], [-97.906321, 30.406929], [-97.905957, 30.406702], [-97.904864, 30.405977], [-97.90353, 30.405116], [-97.902782, 30.40464], [-97.902378, 30.404382], [-97.900152, 30.403058], [-97.898776, 30.402248], [-97.897651, 30.401267], [-97.896902, 30.40004], [-97.896482, 30.39875], [-97.896336, 30.398167], [-97.896258, 30.397858], [-97.896171, 30.396431], [-97.896715, 30.39519], [-97.897582, 30.394357], [-97.899293, 30.393619], [-97.903051, 30.392896], [-97.907276, 30.392327], [-97.90795, 30.391954], [-97.908877, 30.391587], [-97.909573, 30.391251], [-97.909758, 30.391161], [-97.911838, 30.389808], [-97.912367, 30.389301], [-97.912811, 30.38882], [-97.913142, 30.388345], [-97.913236, 30.388182], [-97.913449, 30.387977], [-97.913682, 30.387712], [-97.913842, 30.387467], [-97.913996, 30.387033], [-97.914149, 30.386714], [-97.91433, 30.386033], [-97.914434, 30.385562], [-97.914574, 30.384907], [-97.9146, 30.384698], [-97.914651, 30.384284], [-97.914704, 30.383812], [-97.914697, 30.383259], [-97.914652, 30.382617], [-97.914588, 30.381467], [-97.914558, 30.380594], [-97.914533, 30.380387], [-97.914468, 30.379883], [-97.914398, 30.379359], [-97.914382, 30.378525], [-97.914358, 30.377763], [-97.914344, 30.377452], [-97.914339, 30.377053], [-97.91437, 30.376787], [-97.914391, 30.376449], [-97.914417, 30.37566], [-97.914409, 30.375206], [-97.914383, 30.374804], [-97.914329, 30.374446], [-97.914266, 30.374068], [-97.914206, 30.373536], [-97.914143, 30.373073], [-97.914157, 30.372762], [-97.914204, 30.372378], [-97.914244, 30.372021], [-97.914263, 30.371722], [-97.914253, 30.371513], [-97.914178, 30.370931], [-97.914087, 30.370374], [-97.913993, 30.369868], [-97.913918, 30.36902], [-97.913815, 30.368473], [-97.913778, 30.367972], [-97.91375, 30.367427], [-97.913698, 30.366997], [-97.913567, 30.36659], [-97.913437, 30.366112], [-97.91343, 30.365589], [-97.913319, 30.364259], [-97.913235, 30.363474], [-97.913087, 30.362984], [-97.913008, 30.362718], [-97.912979, 30.362237], [-97.913159, 30.361599], [-97.913168, 30.361258], [-97.913199, 30.361083], [-97.913312, 30.360422], [-97.913685, 30.359502], [-97.913911, 30.358704], [-97.914196, 30.358032], [-97.914366, 30.357593], [-97.914437, 30.35741], [-97.914869, 30.356618], [-97.915518, 30.355362], [-97.91597, 30.354716], [-97.916072, 30.354569], [-97.916461, 30.353925], [-97.917282, 30.353093], [-97.917897, 30.352338], [-97.918487, 30.351933], [-97.919412, 30.351071], [-97.92029, 30.350499], [-97.921004, 30.349888], [-97.921717, 30.349296], [-97.922469, 30.348813], [-97.923264, 30.348184], [-97.923414, 30.348066], [-97.923725, 30.347819], [-97.924366, 30.347443], [-97.924645, 30.347195], [-97.925046, 30.346793], [-97.925447, 30.346319], [-97.925869, 30.345865], [-97.926248, 30.34555], [-97.926476, 30.345307], [-97.926753, 30.345007], [-97.927194, 30.34466], [-97.927472, 30.344396], [-97.927636, 30.34424], [-97.92812, 30.343787], [-97.928437, 30.343383], [-97.92887, 30.342893], [-97.929428, 30.34226], [-97.930018, 30.341666], [-97.930217, 30.341081], [-97.930335, 30.340498], [-97.930652, 30.34013], [-97.931851, 30.338947], [-97.932542, 30.338446], [-97.933676, 30.337428], [-97.934202, 30.336921], [-97.934462, 30.336637], [-97.934702, 30.335824], [-97.935055, 30.335135], [-97.935123, 30.336242], [-97.93508, 30.336489], [-97.935208, 30.336651], [-97.935375, 30.336758], [-97.935556, 30.33683], [-97.935847, 30.336767], [-97.935985, 30.33669], [-97.936233, 30.336584], [-97.936387, 30.336541], [-97.93662, 30.336553], [-97.936574, 30.336742], [-97.936392, 30.336865], [-97.936287, 30.336984], [-97.936178, 30.337084], [-97.936073, 30.337242], [-97.935998, 30.337372], [-97.93593, 30.337588], [-97.935846, 30.337765], [-97.93587, 30.338011], [-97.935955, 30.338147], [-97.936035, 30.338286], [-97.936217, 30.338515], [-97.936286, 30.338643], [-97.936366, 30.33879], [-97.936455, 30.338918], [-97.936678, 30.339159], [-97.936818, 30.339247], [-97.936962, 30.339326], [-97.937119, 30.339382], [-97.937309, 30.339451], [-97.937514, 30.33951], [-97.937736, 30.339572], [-97.93792, 30.3396], [-97.93808, 30.339573], [-97.938211, 30.339493], [-97.938325, 30.339324], [-97.938412, 30.339202], [-97.938512, 30.339067], [-97.938602, 30.33881], [-97.938602, 30.338559], [-97.938593, 30.338314], [-97.93864, 30.338145], [-97.938696, 30.337959], [-97.938743, 30.337775], [-97.938788, 30.337554], [-97.938944, 30.337455], [-97.939192, 30.337481], [-97.939395, 30.337598], [-97.939625, 30.337753], [-97.939719, 30.337915], [-97.939812, 30.338079], [-97.939957, 30.338285], [-97.940148, 30.338445], [-97.940288, 30.338591], [-97.940384, 30.338711], [-97.940511, 30.338887], [-97.940631, 30.33909], [-97.940778, 30.339224], [-97.941034, 30.339323], [-97.941287, 30.339316], [-97.941486, 30.339301], [-97.941682, 30.339274], [-97.941967, 30.339252], [-97.942148, 30.339247], [-97.942319, 30.339256], [-97.942632, 30.339281], [-97.942867, 30.339285], [-97.943203, 30.339311], [-97.943436, 30.339351], [-97.943686, 30.339438], [-97.94381, 30.339528], [-97.944032, 30.339766], [-97.944136, 30.339997], [-97.944229, 30.340161], [-97.944259, 30.340354], [-97.94433, 30.340668], [-97.944392, 30.340813], [-97.944545, 30.340931], [-97.944769, 30.341084], [-97.944927, 30.341232], [-97.94509, 30.341403], [-97.945276, 30.341577], [-97.945465, 30.341696], [-97.945616, 30.341773], [-97.945815, 30.341851], [-97.946005, 30.341976], [-97.946186, 30.342144], [-97.946304, 30.342289], [-97.946525, 30.342373], [-97.946732, 30.342471], [-97.947043, 30.3426], [-97.947294, 30.342608], [-97.947497, 30.342532], [-97.947664, 30.342416], [-97.947789, 30.342295], [-97.94801, 30.342225], [-97.94828, 30.342216], [-97.948643, 30.342267], [-97.948781, 30.342344], [-97.948918, 30.342467], [-97.949112, 30.34265], [-97.949332, 30.342808], [-97.949544, 30.342985], [-97.94976, 30.343135], [-97.949977, 30.343262], [-97.950312, 30.343489], [-97.950441, 30.343576], [-97.950572, 30.343675], [-97.950719, 30.343815], [-97.951006, 30.344041], [-97.9513, 30.344134], [-97.95152, 30.344091], [-97.953546, 30.342173], [-97.955037, 30.340644], [-97.959025, 30.341111], [-97.95972, 30.340252], [-97.962503, 30.335268], [-97.962104, 30.333787], [-97.96174, 30.332433], [-97.963277, 30.332086], [-97.961779, 30.330551], [-97.964269, 30.32742], [-97.970398, 30.337145], [-97.969261, 30.341396], [-97.970106, 30.34163], [-97.970602, 30.341909], [-97.971995, 30.342707], [-97.973124, 30.343344], [-97.974711, 30.344163], [-97.974843, 30.34425], [-97.975174, 30.344446], [-97.976224, 30.345007], [-97.976373, 30.345106], [-97.976543, 30.34525], [-97.976668, 30.34537], [-97.97677, 30.345507], [-97.976829, 30.345648], [-97.97688, 30.345809], [-97.976926, 30.34598], [-97.976951, 30.346126], [-97.97699, 30.34633], [-97.977148, 30.347288], [-97.977218, 30.347646], [-97.977255, 30.348368], [-97.97716, 30.349081], [-97.977047, 30.349907], [-97.976931, 30.351216], [-97.97684, 30.351399], [-97.976821, 30.351674], [-97.976818, 30.351819], [-97.976831, 30.352001], [-97.976857, 30.352224], [-97.976889, 30.35242], [-97.976926, 30.352583], [-97.977039, 30.353045], [-97.97712, 30.353263], [-97.977177, 30.353399], [-97.977259, 30.35356], [-97.977408, 30.353808], [-97.977626, 30.35415], [-97.977807, 30.354269], [-97.978042, 30.354647], [-97.978233, 30.355022], [-97.978358, 30.355327], [-97.978456, 30.355667], [-97.978698, 30.356436], [-97.978831, 30.357076], [-97.978909, 30.357523], [-97.979445, 30.35747], [-97.980016, 30.35734], [-97.980514, 30.35733], [-97.980817, 30.357363], [-97.981467, 30.357433], [-97.981973, 30.357459], [-97.982244, 30.357439], [-97.982571, 30.357343], [-97.982708, 30.357266], [-97.983046, 30.356991], [-97.98347, 30.356647], [-97.983703, 30.356503], [-97.984001, 30.356321], [-97.984149, 30.356266], [-97.98513, 30.35574], [-97.98582, 30.355367], [-97.986084, 30.355281], [-97.986457, 30.355162], [-97.986759, 30.355159], [-97.987065, 30.355209], [-97.987654, 30.355426], [-97.988227, 30.355711], [-97.988615, 30.355839], [-97.988856, 30.355874], [-97.989144, 30.355857], [-97.98941, 30.355815], [-97.989668, 30.355666], [-97.989847, 30.355515], [-97.990253, 30.354868], [-97.990464, 30.354531], [-97.990888, 30.353782], [-97.991041, 30.353513], [-97.991402, 30.352876], [-97.991588, 30.352547], [-97.992103, 30.352176], [-97.992468, 30.351916], [-97.992789, 30.351765], [-97.993024, 30.351624], [-97.993389, 30.351499], [-97.993679, 30.351501], [-97.994038, 30.35153], [-97.994967, 30.351984], [-97.995332, 30.352134], [-97.995551, 30.352314], [-97.995841, 30.352624], [-97.995908, 30.352848], [-97.995984, 30.354115], [-97.996002, 30.355534], [-97.99601, 30.356087], [-97.996068, 30.356627], [-97.996145, 30.356931], [-97.996217, 30.357059], [-97.996408, 30.357395], [-97.996669, 30.357749], [-97.997011, 30.358121], [-97.997541, 30.358695], [-97.997807, 30.358985], [-97.998339, 30.359498], [-97.998986, 30.360126], [-97.999151, 30.36025], [-97.99948, 30.360493], [-98.000181, 30.361064], [-98.003198, 30.360563], [-98.004242, 30.360384], [-98.006219, 30.360791], [-98.009036, 30.362151], [-98.009081, 30.362309], [-98.009167, 30.362459], [-98.009329, 30.362583], [-98.009506, 30.362671], [-98.009775, 30.362734], [-98.010027, 30.362838], [-98.010155, 30.362969], [-98.01028, 30.363192], [-98.010405, 30.363455], [-98.010627, 30.363676], [-98.010718, 30.36387], [-98.010904, 30.364], [-98.01104, 30.364146], [-98.011183, 30.364319], [-98.011288, 30.364568], [-98.01128, 30.364711], [-98.011226, 30.364917], [-98.011172, 30.365108], [-98.011176, 30.365279], [-98.011206, 30.365428], [-98.011355, 30.365672], [-98.011507, 30.365815], [-98.011668, 30.365939], [-98.011855, 30.366022], [-98.012217, 30.366117], [-98.012795, 30.366276], [-98.013147, 30.366436], [-98.01343, 30.366612], [-98.013639, 30.366786], [-98.013847, 30.366952], [-98.014031, 30.367176], [-98.014221, 30.367451], [-98.014437, 30.367747], [-98.014702, 30.368219], [-98.015059, 30.368894], [-98.015561, 30.369827], [-98.016372, 30.371308], [-98.016069, 30.371885], [-98.015243, 30.373529], [-98.014933, 30.374219], [-98.014718, 30.374817], [-98.014682, 30.375287], [-98.013969, 30.374969], [-98.012641, 30.374518], [-98.011737, 30.374411], [-98.011039, 30.374311], [-98.010135, 30.374275], [-98.009022, 30.374274], [-98.007382, 30.374352], [-98.003194, 30.374259], [-98.00041, 30.374349], [-97.998886, 30.374445], [-97.998635, 30.374473], [-97.996515, 30.37471], [-97.995647, 30.374837], [-97.994651, 30.375212], [-97.993804, 30.375532], [-97.99303, 30.375823], [-97.991471, 30.376491], [-97.987499, 30.378327], [-97.986937, 30.378586], [-97.985156, 30.380308], [-97.984784, 30.380667], [-97.983895, 30.381627], [-97.983501, 30.382054], [-97.981527, 30.383561], [-97.980752, 30.384152], [-97.980371, 30.384577], [-97.980011, 30.384985], [-97.978698, 30.386075], [-97.977453, 30.387359], [-97.976423, 30.388382], [-97.976286, 30.388517], [-97.975281, 30.390008], [-97.97502, 30.390543], [-97.974375, 30.391513], [-97.973647, 30.392382], [-97.97342, 30.392524], [-97.972627, 30.393021], [-97.97148, 30.393572], [-97.970094, 30.394148], [-97.96885, 30.394596], [-97.968, 30.394902], [-97.967003, 30.395329], [-97.966148, 30.395811], [-97.964972, 30.39602], [-97.963585, 30.396404], [-97.961978, 30.396589], [-97.960761, 30.396781], [-97.959857, 30.396765], [-97.959254, 30.396698], [-97.9586, 30.396626], [-97.957959, 30.396496], [-97.957252, 30.396298], [-97.956575, 30.39603], [-97.955857, 30.395725], [-97.954929, 30.39529], [-97.954161, 30.39488], [-97.953152, 30.394443], [-97.952325, 30.39423], [-97.951894, 30.394123], [-97.951712, 30.394078], [-97.950962, 30.393992], [-97.949996, 30.393988], [-97.948988, 30.394049], [-97.947991, 30.394196], [-97.947258, 30.394355], [-97.945769, 30.394757], [-97.945419, 30.394904], [-97.944565, 30.395268], [-97.94341, 30.395923], [-97.942229, 30.396693], [-97.941368, 30.397409], [-97.940568, 30.398073], [-97.940534, 30.39821], [-97.940354, 30.398847], [-97.94024, 30.399255], [-97.93986, 30.400461], [-97.939755, 30.401259], [-97.939734, 30.401421], [-97.939631, 30.402239], [-97.939364, 30.403072], [-97.939255, 30.404105], [-97.939269, 30.404619], [-97.939361, 30.404929], [-97.939799, 30.405561], [-97.940239, 30.405908], [-97.942636, 30.407391], [-97.943109, 30.408084], [-97.943708, 30.408965], [-97.94467, 30.410377], [-97.945025, 30.410898], [-97.945918, 30.41221], [-97.946307, 30.412781], [-97.946636, 30.413266], [-97.950143, 30.418413], [-97.952122, 30.421318], [-97.95253, 30.421901], [-97.95264, 30.42206], [-97.953081, 30.422819], [-97.953256, 30.423548], [-97.953335, 30.423885], [-97.953211, 30.425855], [-97.952925, 30.427315], [-97.952882, 30.42754], [-97.952234, 30.429629], [-97.951544, 30.430738], [-97.950885, 30.431796], [-97.949762, 30.433147], [-97.94922, 30.433698], [-97.947948, 30.434992], [-97.947473, 30.435239], [-97.942369, 30.437886], [-97.940497, 30.43847], [-97.938682, 30.43864], [-97.936503, 30.438635], [-97.933749, 30.438548], [-97.930946, 30.438319], [-97.92916, 30.437857], [-97.927208, 30.436965], [-97.926531, 30.43663], [-97.920864, 30.434956]]]]
    },
    "properties": {
      "neighbourhood": "78734",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-97.735988, 30.251013], [-97.735889, 30.250541], [-97.736158, 30.250689], [-97.736319, 30.250767], [-97.737141, 30.251188], [-97.737846, 30.251524], [-97.738264, 30.251837], [-97.738476, 30.25204], [-97.738568, 30.252157], [-97.73922, 30.252759], [-97.739598, 30.253146], [-97.740345, 30.253978], [-97.740722, 30.254453], [-97.740982, 30.254789], [-97.741199, 30.255258], [-97.741918, 30.25701], [-97.742003, 30.257554], [-97.74211, 30.258145], [-97.742218, 30.258604], [-97.742506, 30.259159], [-97.742814, 30.25971], [-97.743157, 30.260165], [-97.74368, 30.260696], [-97.743937, 30.260899], [-97.744236, 30.261136], [-97.744892, 30.261532], [-97.745078, 30.26161], [-97.745303, 30.261705], [-97.745445, 30.261766], [-97.745853, 30.261933], [-97.746481, 30.262183], [-97.746639, 30.262252], [-97.747114, 30.262542], [-97.747536, 30.262743], [-97.747807, 30.262847], [-97.748127, 30.262972], [-97.748484, 30.263114], [-97.748758, 30.263219], [-97.749433, 30.263472], [-97.749732, 30.263588], [-97.749951, 30.263608], [-97.750478, 30.263658], [-97.751047, 30.263851], [-97.751627, 30.264], [-97.751991, 30.264158], [-97.752654, 30.264568], [-97.753764, 30.264805], [-97.754099, 30.264883], [-97.754473, 30.265067], [-97.754165, 30.265588], [-97.753913, 30.266015], [-97.753794, 30.266216], [-97.753689, 30.266387], [-97.75255, 30.26747], [-97.751633, 30.267452], [-97.750601, 30.270256], [-97.751237, 30.270463], [-97.751231, 30.270595], [-97.751149, 30.270715], [-97.750957, 30.27095], [-97.750843, 30.271182], [-97.750814, 30.271473], [-97.750937, 30.271701], [-97.751125, 30.272001], [-97.751232, 30.27224], [-97.751291, 30.272395], [-97.75133, 30.272646], [-97.7513, 30.2728], [-97.751302, 30.27294], [-97.751335, 30.273089], [-97.751396, 30.273242], [-97.751445, 30.27349], [-97.751594, 30.273672], [-97.751831, 30.273828], [-97.752003, 30.273906], [-97.752053, 30.274124], [-97.751983, 30.274246], [-97.751886, 30.274388], [-97.751746, 30.274577], [-97.751631, 30.274696], [-97.751502, 30.274823], [-97.751404, 30.275057], [-97.751267, 30.275431], [-97.751156, 30.275561], [-97.751014, 30.275726], [-97.750903, 30.275839], [-97.750662, 30.276013], [-97.750519, 30.276112], [-97.750377, 30.276222], [-97.750207, 30.276436], [-97.750148, 30.276591], [-97.750208, 30.27687], [-97.750286, 30.277045], [-97.750388, 30.277289], [-97.750486, 30.277539], [-97.750599, 30.277769], [-97.750853, 30.277906], [-97.750949, 30.278101], [-97.751054, 30.278381], [-97.751109, 30.278657], [-97.751096, 30.278857], [-97.751085, 30.279], [-97.751063, 30.279165], [-97.751027, 30.279318], [-97.751, 30.279463], [-97.750961, 30.279768], [-97.750937, 30.27991], [-97.750862, 30.280063], [-97.750776, 30.280419], [-97.750788, 30.280658], [-97.750819, 30.280975], [-97.750864, 30.281292], [-97.750905, 30.281472], [-97.750944, 30.281638], [-97.750996, 30.281831], [-97.751043, 30.281973], [-97.751151, 30.282214], [-97.751229, 30.282337], [-97.75145, 30.282531], [-97.751645, 30.282661], [-97.751798, 30.282766], [-97.751954, 30.282832], [-97.752375, 30.283017], [-97.752659, 30.283196], [-97.752402, 30.283381], [-97.75225, 30.283507], [-97.752058, 30.283629], [-97.751798, 30.283745], [-97.751622, 30.28378], [-97.751455, 30.283793], [-97.751225, 30.283813], [-97.749817, 30.283939], [-97.749503, 30.283872], [-97.748319, 30.283551], [-97.747185, 30.283231], [-97.746735, 30.283104], [-97.745926, 30.282884], [-97.745175, 30.282663], [-97.744833, 30.282546], [-97.744187, 30.282382], [-97.743741, 30.282238], [-97.743216, 30.282098], [-97.742687, 30.28195], [-97.74208, 30.281803], [-97.741628, 30.28165], [-97.741017, 30.28149], [-97.740508, 30.281328], [-97.739907, 30.281176], [-97.739439, 30.28102], [-97.739243, 30.280981], [-97.738107, 30.280688], [-97.736774, 30.280295], [-97.735694, 30.279976], [-97.732197, 30.278965], [-97.730486, 30.278559], [-97.730264, 30.278521], [-97.730048, 30.278506], [-97.730114, 30.278056], [-97.730356, 30.277544], [-97.730632, 30.276964], [-97.730829, 30.276517], [-97.730956, 30.276208], [-97.731098, 30.275807], [-97.731192, 30.275498], [-97.731335, 30.275047], [-97.731585, 30.274233], [-97.731741, 30.273672], [-97.731906, 30.273194], [-97.732084, 30.272642], [-97.732249, 30.272156], [-97.732529, 30.271416], [-97.732776, 30.270742], [-97.732986, 30.270182], [-97.733267, 30.269424], [-97.733572, 30.268602], [-97.733806, 30.267947], [-97.734731, 30.265449], [-97.735222, 30.264141], [-97.735561, 30.263224], [-97.736054, 30.261878], [-97.736373, 30.260914], [-97.736702, 30.259958], [-97.736893, 30.259321], [-97.737016, 30.258806], [-97.73711, 30.258121], [-97.737137, 30.2575], [-97.73711, 30.256924], [-97.73699, 30.256102], [-97.736839, 30.25526], [-97.736677, 30.254418], [-97.736488, 30.253405], [-97.736277, 30.252386], [-97.735988, 30.251013]]]]
    },
    "properties": {
      "neighbourhood": "78701",
      "neighbourhood_group": null
    }
  }]
};
},{}],"ZOns":[function(require,module,exports) {
module.exports = {
  "type": "FeatureCollection",
  "features": [{
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.484089, 37.78791], [-122.484346, 37.787654], [-122.487434, 37.787491], [-122.487123, 37.78376], [-122.492526, 37.783501], [-122.492407, 37.781663], [-122.505317, 37.780998], [-122.505144, 37.779774], [-122.5062, 37.779868], [-122.507818, 37.779952], [-122.509504, 37.779923], [-122.509342, 37.779145], [-122.509095, 37.77519], [-122.513169, 37.775046], [-122.51317, 37.775109], [-122.51315, 37.775202], [-122.513168, 37.775295], [-122.513139, 37.775383], [-122.513155, 37.775413], [-122.513118, 37.775495], [-122.513116, 37.775992], [-122.51322, 37.776643], [-122.513262, 37.776766], [-122.513273, 37.776853], [-122.513301, 37.776996], [-122.513337, 37.777197], [-122.513351, 37.77733], [-122.513419, 37.777443], [-122.513485, 37.777542], [-122.513512, 37.777603], [-122.513606, 37.777634], [-122.51379, 37.777711], [-122.51397, 37.777743], [-122.51413, 37.777902], [-122.514272, 37.778125], [-122.514414, 37.778271], [-122.514604, 37.778476], [-122.51463, 37.778506], [-122.514662, 37.778644], [-122.514636, 37.778748], [-122.514565, 37.778846], [-122.514579, 37.778978], [-122.514499, 37.779154], [-122.514494, 37.779243], [-122.514568, 37.779418], [-122.514671, 37.779446], [-122.514854, 37.779525], [-122.514948, 37.779719], [-122.514897, 37.779848], [-122.51475, 37.779872], [-122.514641, 37.779821], [-122.514565, 37.779897], [-122.514535, 37.780082], [-122.514512, 37.780269], [-122.514475, 37.780426], [-122.514467, 37.780603], [-122.514648, 37.780861], [-122.514724, 37.781134], [-122.514586, 37.781301], [-122.514468, 37.781303], [-122.514294, 37.781279], [-122.514303, 37.781352], [-122.514285, 37.781429], [-122.514242, 37.781465], [-122.513868, 37.781428], [-122.513759, 37.781477], [-122.513883, 37.781615], [-122.513812, 37.781738], [-122.513697, 37.781892], [-122.513671, 37.781982], [-122.513523, 37.782081], [-122.513467, 37.782192], [-122.513546, 37.782286], [-122.51359, 37.782397], [-122.513504, 37.782433], [-122.51346, 37.782521], [-122.51349, 37.782577], [-122.513499, 37.782634], [-122.513499, 37.782701], [-122.513444, 37.782781], [-122.513313, 37.782817], [-122.513178, 37.782749], [-122.513099, 37.782774], [-122.513082, 37.782896], [-122.512986, 37.783036], [-122.51302, 37.783139], [-122.513026, 37.7832], [-122.512879, 37.783237], [-122.512854, 37.783353], [-122.512806, 37.783475], [-122.512706, 37.783554], [-122.512519, 37.78362], [-122.512466, 37.783743], [-122.512646, 37.783874], [-122.512714, 37.783931], [-122.512652, 37.784021], [-122.512681, 37.78412], [-122.512566, 37.784153], [-122.512295, 37.783942], [-122.512112, 37.783793], [-122.511916, 37.783949], [-122.511936, 37.784103], [-122.512002, 37.784162], [-122.512011, 37.784237], [-122.511977, 37.784291], [-122.511911, 37.784326], [-122.511796, 37.784312], [-122.511643, 37.784335], [-122.511486, 37.784289], [-122.511302, 37.784284], [-122.511334, 37.784425], [-122.511306, 37.784554], [-122.511229, 37.784589], [-122.511025, 37.784485], [-122.510971, 37.784497], [-122.510839, 37.784585], [-122.510747, 37.784672], [-122.510492, 37.784697], [-122.510371, 37.784699], [-122.510237, 37.784734], [-122.510169, 37.784703], [-122.509994, 37.784727], [-122.509808, 37.784816], [-122.509716, 37.784903], [-122.509665, 37.785], [-122.509575, 37.785129], [-122.509483, 37.785227], [-122.509351, 37.785315], [-122.509271, 37.785338], [-122.509233, 37.785445], [-122.509118, 37.785591], [-122.508797, 37.785745], [-122.508662, 37.785745], [-122.508566, 37.785795], [-122.508486, 37.785855], [-122.508452, 37.785939], [-122.508259, 37.786074], [-122.508243, 37.786095], [-122.508218, 37.786119], [-122.508134, 37.786157], [-122.508103, 37.786145], [-122.508035, 37.786136], [-122.507964, 37.786167], [-122.507919, 37.786239], [-122.507886, 37.786273], [-122.507811, 37.786355], [-122.507791, 37.786386], [-122.507787, 37.786417], [-122.507753, 37.786414], [-122.507724, 37.786435], [-122.507687, 37.786503], [-122.507715, 37.786587], [-122.507634, 37.786727], [-122.507531, 37.786843], [-122.507417, 37.786882], [-122.507338, 37.786944], [-122.507251, 37.78704], [-122.507198, 37.787149], [-122.507108, 37.787272], [-122.507053, 37.787277], [-122.506972, 37.787454], [-122.506897, 37.787495], [-122.506739, 37.787495], [-122.506717, 37.787444], [-122.506653, 37.787462], [-122.506526, 37.787478], [-122.506493, 37.787519], [-122.506427, 37.787595], [-122.506344, 37.78765], [-122.506286, 37.787712], [-122.506271, 37.787747], [-122.506259, 37.787774], [-122.506241, 37.787794], [-122.50622, 37.787804], [-122.506178, 37.787842], [-122.506132, 37.787856], [-122.506163, 37.78791], [-122.506122, 37.787975], [-122.50612, 37.788052], [-122.506089, 37.788171], [-122.506052, 37.788192], [-122.505853, 37.788229], [-122.505747, 37.788248], [-122.505658, 37.788259], [-122.505606, 37.788243], [-122.505521, 37.788248], [-122.505423, 37.788236], [-122.50533, 37.788251], [-122.505202, 37.78826], [-122.505107, 37.788215], [-122.50502, 37.788152], [-122.504981, 37.788148], [-122.504941, 37.788143], [-122.504883, 37.788136], [-122.504857, 37.788135], [-122.504831, 37.788136], [-122.504801, 37.788139], [-122.504776, 37.788134], [-122.504758, 37.788122], [-122.504743, 37.788106], [-122.504723, 37.788092], [-122.504703, 37.788083], [-122.504682, 37.788078], [-122.504651, 37.788077], [-122.504624, 37.788078], [-122.504596, 37.788077], [-122.504569, 37.788072], [-122.504546, 37.788066], [-122.504521, 37.788062], [-122.504498, 37.788059], [-122.504471, 37.78806], [-122.50415, 37.788096], [-122.504066, 37.788121], [-122.504049, 37.788108], [-122.503998, 37.788107], [-122.503846, 37.788092], [-122.503714, 37.788063], [-122.503613, 37.788039], [-122.503526, 37.78804], [-122.503485, 37.78805], [-122.503463, 37.78802], [-122.503374, 37.788018], [-122.503335, 37.788022], [-122.503264, 37.788043], [-122.503239, 37.788064], [-122.503209, 37.788085], [-122.503179, 37.788079], [-122.503145, 37.788076], [-122.503078, 37.788097], [-122.503048, 37.788115], [-122.503007, 37.788146], [-122.502962, 37.788143], [-122.502926, 37.788157], [-122.502903, 37.788146], [-122.502865, 37.788096], [-122.502836, 37.78805], [-122.502789, 37.788036], [-122.502705, 37.78804], [-122.50259, 37.788066], [-122.502516, 37.788086], [-122.502426, 37.788098], [-122.502376, 37.788127], [-122.502316, 37.788112], [-122.502255, 37.788131], [-122.50217, 37.788104], [-122.502106, 37.788111], [-122.502074, 37.788154], [-122.502071, 37.788182], [-122.50199, 37.788183], [-122.501952, 37.788181], [-122.501913, 37.788141], [-122.501912, 37.788117], [-122.501878, 37.788114], [-122.501878, 37.788138], [-122.501858, 37.788182], [-122.501842, 37.788223], [-122.501801, 37.788247], [-122.501766, 37.788228], [-122.501757, 37.788207], [-122.501726, 37.788151], [-122.5017, 37.788168], [-122.501679, 37.788162], [-122.50162, 37.788169], [-122.501569, 37.788197], [-122.501591, 37.788227], [-122.501532, 37.788248], [-122.501514, 37.788205], [-122.501459, 37.788213], [-122.501439, 37.78824], [-122.501336, 37.788225], [-122.501268, 37.78825], [-122.501159, 37.788295], [-122.501091, 37.788313], [-122.501014, 37.788288], [-122.500972, 37.788298], [-122.500994, 37.788332], [-122.500948, 37.78835], [-122.500879, 37.78832], [-122.500861, 37.788304], [-122.500827, 37.788308], [-122.500806, 37.788318], [-122.500755, 37.788319], [-122.500738, 37.788299], [-122.500713, 37.78832], [-122.500641, 37.788338], [-122.500594, 37.788332], [-122.500551, 37.788316], [-122.500539, 37.788336], [-122.500489, 37.788374], [-122.500459, 37.788368], [-122.500446, 37.788385], [-122.500341, 37.788434], [-122.500273, 37.788428], [-122.500257, 37.788479], [-122.500251, 37.788574], [-122.500192, 37.788592], [-122.500175, 37.788569], [-122.500177, 37.788518], [-122.500131, 37.788536], [-122.500092, 37.788509], [-122.5001, 37.788472], [-122.500066, 37.788476], [-122.50001, 37.788477], [-122.499967, 37.78844], [-122.499879, 37.788489], [-122.499811, 37.78849], [-122.499786, 37.788523], [-122.499761, 37.78855], [-122.499798, 37.788568], [-122.499804, 37.788608], [-122.499762, 37.788662], [-122.499733, 37.788642], [-122.499727, 37.78861], [-122.499687, 37.788663], [-122.499634, 37.788693], [-122.499578, 37.788704], [-122.499554, 37.788688], [-122.499512, 37.788624], [-122.499481, 37.78853], [-122.499433, 37.788462], [-122.499337, 37.788425], [-122.499267, 37.78841], [-122.499203, 37.788415], [-122.499128, 37.788402], [-122.499099, 37.788368], [-122.499042, 37.78834], [-122.498955, 37.788352], [-122.49892, 37.788391], [-122.49889, 37.788414], [-122.498846, 37.788415], [-122.498829, 37.788358], [-122.498858, 37.788274], [-122.498811, 37.788232], [-122.49878, 37.788241], [-122.498722, 37.788283], [-122.498685, 37.788326], [-122.49861, 37.788329], [-122.498598, 37.788266], [-122.49862, 37.788215], [-122.498603, 37.78816], [-122.498538, 37.788135], [-122.498508, 37.788148], [-122.498481, 37.788181], [-122.498393, 37.788164], [-122.498358, 37.78812], [-122.498367, 37.788048], [-122.498258, 37.788032], [-122.498204, 37.787931], [-122.498141, 37.787883], [-122.498021, 37.787875], [-122.497965, 37.787908], [-122.497937, 37.787836], [-122.497862, 37.787816], [-122.497833, 37.787872], [-122.497859, 37.787931], [-122.497838, 37.78796], [-122.497779, 37.787985], [-122.497727, 37.787935], [-122.49768, 37.787929], [-122.497621, 37.787947], [-122.497601, 37.787923], [-122.497543, 37.787891], [-122.497503, 37.787854], [-122.497545, 37.787816], [-122.497527, 37.787779], [-122.4975, 37.787746], [-122.497516, 37.787705], [-122.497508, 37.787674], [-122.497486, 37.787616], [-122.497459, 37.787587], [-122.497407, 37.787575], [-122.497357, 37.787575], [-122.497316, 37.787596], [-122.497275, 37.787592], [-122.497216, 37.787593], [-122.497169, 37.787553], [-122.497137, 37.787515], [-122.497106, 37.787481], [-122.497045, 37.78746], [-122.497, 37.787456], [-122.496924, 37.787437], [-122.496895, 37.787401], [-122.496857, 37.787368], [-122.496812, 37.787352], [-122.496752, 37.787368], [-122.496729, 37.787343], [-122.496686, 37.787358], [-122.496639, 37.787314], [-122.496583, 37.787296], [-122.496546, 37.787287], [-122.496517, 37.787302], [-122.496468, 37.787305], [-122.496445, 37.787311], [-122.496383, 37.787321], [-122.496337, 37.787328], [-122.496277, 37.787329], [-122.496248, 37.787346], [-122.496198, 37.787367], [-122.496142, 37.78739], [-122.496087, 37.787416], [-122.496068, 37.787442], [-122.496017, 37.787449], [-122.495972, 37.787467], [-122.49594, 37.787486], [-122.495906, 37.787503], [-122.495881, 37.787507], [-122.495825, 37.787504], [-122.495792, 37.787525], [-122.495771, 37.787542], [-122.495716, 37.787547], [-122.49569, 37.787551], [-122.495622, 37.787557], [-122.495603, 37.787571], [-122.495573, 37.787583], [-122.49554, 37.787599], [-122.495513, 37.787618], [-122.495484, 37.787625], [-122.495438, 37.787653], [-122.495389, 37.787664], [-122.49537, 37.787671], [-122.495333, 37.787715], [-122.495282, 37.78774], [-122.495193, 37.787745], [-122.495147, 37.787752], [-122.495108, 37.787753], [-122.495082, 37.787762], [-122.49505, 37.787781], [-122.494943, 37.787793], [-122.494936, 37.787823], [-122.494876, 37.787838], [-122.494851, 37.787828], [-122.494804, 37.787832], [-122.494754, 37.787894], [-122.494747, 37.787951], [-122.494723, 37.788003], [-122.494687, 37.788081], [-122.494701, 37.788138], [-122.494642, 37.788136], [-122.494554, 37.788053], [-122.494515, 37.788016], [-122.494535, 37.787958], [-122.494512, 37.787912], [-122.494514, 37.78783], [-122.494492, 37.787804], [-122.494463, 37.787808], [-122.494427, 37.787818], [-122.494408, 37.787839], [-122.494413, 37.787876], [-122.494397, 37.787903], [-122.49435, 37.787891], [-122.494344, 37.787823], [-122.49431, 37.78781], [-122.494267, 37.787811], [-122.49416, 37.787796], [-122.494129, 37.787746], [-122.494107, 37.787733], [-122.49408, 37.787672], [-122.494004, 37.787581], [-122.49398, 37.787585], [-122.493937, 37.787604], [-122.493903, 37.787627], [-122.493854, 37.787634], [-122.493777, 37.787627], [-122.493744, 37.787614], [-122.493682, 37.787607], [-122.493586, 37.787619], [-122.493496, 37.78763], [-122.493462, 37.787628], [-122.493419, 37.78765], [-122.493385, 37.787643], [-122.493336, 37.787656], [-122.493294, 37.78768], [-122.493241, 37.787684], [-122.493194, 37.787693], [-122.493182, 37.787713], [-122.493127, 37.787734], [-122.49309, 37.787726], [-122.493056, 37.78774], [-122.493005, 37.787743], [-122.492971, 37.787742], [-122.492956, 37.787768], [-122.492914, 37.787783], [-122.492855, 37.787786], [-122.49286, 37.787853], [-122.49283, 37.787883], [-122.492771, 37.787884], [-122.492769, 37.78783], [-122.492736, 37.787857], [-122.492687, 37.78777], [-122.492679, 37.787751], [-122.492628, 37.787765], [-122.492565, 37.787768], [-122.492506, 37.787773], [-122.492447, 37.787778], [-122.492381, 37.787789], [-122.492306, 37.787816], [-122.492216, 37.78784], [-122.492179, 37.787853], [-122.492119, 37.787875], [-122.49208, 37.7879], [-122.492058, 37.787925], [-122.491876, 37.788002], [-122.491813, 37.788026], [-122.491771, 37.788056], [-122.49172, 37.788105], [-122.49165, 37.788124], [-122.491614, 37.788164], [-122.491501, 37.788222], [-122.491448, 37.788217], [-122.491406, 37.788237], [-122.491282, 37.788281], [-122.491218, 37.78832], [-122.491191, 37.788358], [-122.491137, 37.788385], [-122.491062, 37.788424], [-122.490946, 37.7885], [-122.490859, 37.788554], [-122.490843, 37.788591], [-122.490818, 37.788633], [-122.490696, 37.788732], [-122.490605, 37.788812], [-122.490528, 37.788886], [-122.490413, 37.788952], [-122.490407, 37.788979], [-122.490354, 37.789005], [-122.490307, 37.789033], [-122.490252, 37.789071], [-122.490219, 37.789102], [-122.490046, 37.789222], [-122.489919, 37.789352], [-122.489829, 37.789482], [-122.489701, 37.789483], [-122.489592, 37.789454], [-122.489301, 37.789412], [-122.489192, 37.78934], [-122.488991, 37.789283], [-122.488482, 37.789442], [-122.4881, 37.789429], [-122.488028, 37.78953], [-122.487864, 37.789588], [-122.487737, 37.789574], [-122.487584, 37.789499], [-122.487564, 37.789473], [-122.487564, 37.789435], [-122.487464, 37.789473], [-122.487447, 37.789431], [-122.487369, 37.78943], [-122.487297, 37.789481], [-122.487121, 37.789611], [-122.487052, 37.789709], [-122.486938, 37.78984], [-122.486809, 37.789964], [-122.486729, 37.790042], [-122.486554, 37.79015], [-122.486429, 37.790237], [-122.486335, 37.790356], [-122.486245, 37.790414], [-122.486237, 37.790495], [-122.486226, 37.790509], [-122.485465, 37.790089], [-122.484401, 37.789717], [-122.483687, 37.789283], [-122.483662, 37.788335], [-122.484089, 37.78791]]]]
    },
    "properties": {
      "neighbourhood": "Seacliff",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.435964, 37.769038], [-122.436851, 37.768982], [-122.437345, 37.769086], [-122.438395, 37.768957], [-122.438733, 37.76845], [-122.440051, 37.767814], [-122.44066, 37.766912], [-122.441763, 37.766113], [-122.441967, 37.765831], [-122.442742, 37.76593], [-122.443361, 37.765418], [-122.444121, 37.764959], [-122.443975, 37.764738], [-122.444105, 37.764346], [-122.444316, 37.764342], [-122.444572, 37.76339], [-122.445396, 37.762652], [-122.445808, 37.76231], [-122.4463, 37.762302], [-122.446499, 37.761853], [-122.446779, 37.761848], [-122.446408, 37.761074], [-122.446438, 37.761036], [-122.446816, 37.760565], [-122.446946, 37.760172], [-122.447215, 37.759722], [-122.447487, 37.759383], [-122.448252, 37.759091], [-122.449722, 37.7589], [-122.451436, 37.758735], [-122.451889, 37.76115], [-122.452938, 37.766319], [-122.453014, 37.766373], [-122.454691, 37.774696], [-122.454635, 37.774767], [-122.446457, 37.775805], [-122.440491, 37.776562], [-122.438251, 37.776878], [-122.437287, 37.772265], [-122.436887, 37.770376], [-122.436599, 37.770102], [-122.436094, 37.769608], [-122.435964, 37.769038]]]]
    },
    "properties": {
      "neighbourhood": "Haight Ashbury",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.454284, 37.708222], [-122.45456, 37.708221], [-122.455565, 37.708216], [-122.455902, 37.70822], [-122.457916, 37.708243], [-122.459123, 37.708218], [-122.455853, 37.711233], [-122.454442, 37.71257], [-122.453561, 37.713131], [-122.452543, 37.713695], [-122.451807, 37.714528], [-122.449535, 37.717193], [-122.448924, 37.717531], [-122.448125, 37.718584], [-122.446597, 37.720743], [-122.451678, 37.722738], [-122.452239, 37.723112], [-122.452524, 37.723167], [-122.452545, 37.723983], [-122.452215, 37.726767], [-122.452431, 37.729862], [-122.453375, 37.729954], [-122.453465, 37.733372], [-122.452534, 37.733815], [-122.44823, 37.733886], [-122.448376, 37.734311], [-122.446894, 37.734229], [-122.445672, 37.733822], [-122.445288, 37.734576], [-122.44206, 37.734629], [-122.441746, 37.735902], [-122.441551, 37.735874], [-122.440637, 37.735178], [-122.440285, 37.73491], [-122.439862, 37.734872], [-122.439249, 37.734818], [-122.43841, 37.734339], [-122.432493, 37.733201], [-122.435572, 37.731768], [-122.433848, 37.731711], [-122.432247, 37.73225], [-122.429988, 37.732287], [-122.428147, 37.731889], [-122.428255, 37.731785], [-122.430038, 37.730063], [-122.432867, 37.72711], [-122.434434, 37.725289], [-122.434737, 37.724514], [-122.435681, 37.723558], [-122.438284, 37.720181], [-122.440824, 37.716455], [-122.44129, 37.715771], [-122.445078, 37.712459], [-122.445175, 37.71203], [-122.446344, 37.711498], [-122.448249, 37.71027], [-122.450596, 37.709461], [-122.454011, 37.708379], [-122.454284, 37.708222]]]]
    },
    "properties": {
      "neighbourhood": "Outer Mission",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.408912, 37.790132], [-122.408797, 37.790161], [-122.408789, 37.790145], [-122.408767, 37.790163], [-122.408797, 37.790161], [-122.408805, 37.790184], [-122.408623, 37.790194], [-122.408393, 37.790227], [-122.407156, 37.790357], [-122.406326, 37.786213], [-122.406223, 37.785713], [-122.405863, 37.785755], [-122.405844, 37.785687], [-122.409664, 37.782642], [-122.416141, 37.777686], [-122.422213, 37.772905], [-122.424298, 37.783408], [-122.421637, 37.78373], [-122.421008, 37.783852], [-122.421954, 37.788488], [-122.418609, 37.78891], [-122.411745, 37.789802], [-122.409094, 37.790105], [-122.408912, 37.790132]]]]
    },
    "properties": {
      "neighbourhood": "Downtown/Civic Center",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.435527, 37.74146], [-122.435632, 37.741443], [-122.435548, 37.740843], [-122.436003, 37.739796], [-122.436462, 37.738913], [-122.43693, 37.738358], [-122.43755, 37.738348], [-122.438656, 37.738494], [-122.439557, 37.738698], [-122.439628, 37.738751], [-122.439896, 37.738473], [-122.440164, 37.738195], [-122.439945, 37.737706], [-122.439727, 37.737272], [-122.439685, 37.735686], [-122.439862, 37.734872], [-122.440285, 37.73491], [-122.440637, 37.735178], [-122.441551, 37.735874], [-122.441746, 37.735902], [-122.442242, 37.735972], [-122.443403, 37.73557], [-122.443894, 37.73589], [-122.443836, 37.736329], [-122.443429, 37.736555], [-122.442549, 37.737171], [-122.442355, 37.737667], [-122.442655, 37.738592], [-122.442397, 37.739253], [-122.442685, 37.73974], [-122.443867, 37.740159], [-122.444575, 37.740858], [-122.445124, 37.740795], [-122.446101, 37.741271], [-122.44619, 37.742036], [-122.446685, 37.74252], [-122.447515, 37.742616], [-122.449176, 37.742916], [-122.449805, 37.743234], [-122.450947, 37.744748], [-122.451701, 37.745454], [-122.450699, 37.745791], [-122.447754, 37.746497], [-122.444804, 37.746983], [-122.444771, 37.746921], [-122.444659, 37.746712], [-122.443901, 37.746724], [-122.443346, 37.746569], [-122.443003, 37.74663], [-122.441226, 37.747206], [-122.440607, 37.747216], [-122.440179, 37.746676], [-122.440165, 37.746129], [-122.440214, 37.745362], [-122.439859, 37.744985], [-122.439084, 37.744341], [-122.437126, 37.743225], [-122.435931, 37.742314], [-122.435635, 37.741553], [-122.435527, 37.74146]]]]
    },
    "properties": {
      "neighbourhood": "Diamond Heights",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.471051, 37.708198], [-122.472829, 37.708203], [-122.475752, 37.708182], [-122.478975, 37.708192], [-122.481682, 37.708183], [-122.482449, 37.708182], [-122.48564, 37.708149], [-122.502774, 37.708089], [-122.502795, 37.708342], [-122.50287, 37.70852], [-122.502919, 37.708765], [-122.502953, 37.708965], [-122.502971, 37.70911], [-122.503182, 37.709643], [-122.503221, 37.710045], [-122.503285, 37.710323], [-122.503378, 37.710624], [-122.503455, 37.710902], [-122.503388, 37.711026], [-122.50348, 37.711281], [-122.503539, 37.711392], [-122.503607, 37.711816], [-122.503925, 37.711977], [-122.503988, 37.712137], [-122.504019, 37.712338], [-122.504051, 37.712566], [-122.504083, 37.712821], [-122.504156, 37.713008], [-122.504155, 37.713277], [-122.504262, 37.713483], [-122.50431, 37.713718], [-122.504341, 37.713905], [-122.504416, 37.714173], [-122.504527, 37.714547], [-122.50462, 37.714855], [-122.504734, 37.71516], [-122.504842, 37.715397], [-122.504984, 37.715738], [-122.505016, 37.715944], [-122.505065, 37.716122], [-122.505278, 37.716713], [-122.505378, 37.71692], [-122.505449, 37.717112], [-122.505534, 37.717303], [-122.505551, 37.717538], [-122.505628, 37.717813], [-122.505733, 37.718088], [-122.505795, 37.71833], [-122.505758, 37.718519], [-122.505847, 37.718705], [-122.505948, 37.718836], [-122.506038, 37.719089], [-122.506046, 37.719354], [-122.506067, 37.719619], [-122.506099, 37.719753], [-122.506085, 37.719904], [-122.506072, 37.719973], [-122.506059, 37.720136], [-122.506067, 37.720287], [-122.506093, 37.720455], [-122.50612, 37.720658], [-122.506216, 37.720896], [-122.506291, 37.721023], [-122.506402, 37.721384], [-122.506522, 37.721659], [-122.507656, 37.728424], [-122.507664, 37.728466], [-122.507704, 37.728548], [-122.507749, 37.728627], [-122.507758, 37.728738], [-122.507784, 37.728866], [-122.507786, 37.728934], [-122.507795, 37.729046], [-122.507815, 37.729164], [-122.507862, 37.729293], [-122.5079, 37.729436], [-122.507937, 37.729543], [-122.507979, 37.729608], [-122.508001, 37.729647], [-122.50803, 37.729655], [-122.508028, 37.729699], [-122.508047, 37.729755], [-122.508054, 37.729814], [-122.508054, 37.72991], [-122.508061, 37.729979], [-122.508063, 37.73004], [-122.508076, 37.73009], [-122.508078, 37.730168], [-122.508086, 37.730243], [-122.508102, 37.730327], [-122.508101, 37.730402], [-122.508119, 37.730525], [-122.508154, 37.730636], [-122.50816, 37.730757], [-122.508147, 37.730821], [-122.508157, 37.730883], [-122.508177, 37.730953], [-122.508155, 37.731001], [-122.50807, 37.73106], [-122.508063, 37.731103], [-122.508038, 37.731142], [-122.508011, 37.731193], [-122.508021, 37.731243], [-122.508043, 37.731311], [-122.508041, 37.731357], [-122.508006, 37.731439], [-122.508021, 37.731473], [-122.508034, 37.731532], [-122.508027, 37.731585], [-122.508026, 37.731638], [-122.508039, 37.731724], [-122.508058, 37.731781], [-122.508063, 37.731867], [-122.508092, 37.731972], [-122.508116, 37.732008], [-122.508158, 37.732057], [-122.508171, 37.732119], [-122.508181, 37.732191], [-122.508206, 37.73226], [-122.508251, 37.732336], [-122.508248, 37.732418], [-122.508261, 37.732487], [-122.508297, 37.732554], [-122.50832, 37.732629], [-122.50835, 37.732684], [-122.50838, 37.732756], [-122.508402, 37.732815], [-122.508413, 37.732888], [-122.508377, 37.73293], [-122.508343, 37.732967], [-122.508313, 37.733017], [-122.508294, 37.733061], [-122.508293, 37.733123], [-122.508303, 37.733189], [-122.508287, 37.733223], [-122.508288, 37.733266], [-122.508283, 37.73331], [-122.508258, 37.733338], [-122.508254, 37.73339], [-122.508261, 37.733447], [-122.508261, 37.733547], [-122.508268, 37.733586], [-122.508273, 37.733668], [-122.508265, 37.733709], [-122.508287, 37.733748], [-122.508296, 37.733782], [-122.5083, 37.733814], [-122.508286, 37.733834], [-122.508267, 37.73386], [-122.508247, 37.733883], [-122.508238, 37.734298], [-122.508237, 37.734351], [-122.508247, 37.734394], [-122.508256, 37.734423], [-122.508245, 37.734453], [-122.508264, 37.73451], [-122.508256, 37.734528], [-122.508257, 37.734563], [-122.508281, 37.734596], [-122.50827, 37.734635], [-122.508267, 37.734708], [-122.508268, 37.73477], [-122.508272, 37.734816], [-122.508315, 37.734913], [-122.508325, 37.734949], [-122.50835, 37.735024], [-122.508408, 37.735055], [-122.508455, 37.735102], [-122.508462, 37.735125], [-122.508477, 37.735152], [-122.508478, 37.735184], [-122.508497, 37.735257], [-122.508536, 37.735327], [-122.508537, 37.735361], [-122.507132, 37.735432], [-122.505274, 37.735518], [-122.503067, 37.735446], [-122.502034, 37.735464], [-122.500439, 37.735053], [-122.499107, 37.7342], [-122.497304, 37.733793], [-122.493931, 37.733905], [-122.491247, 37.734005], [-122.491402, 37.737231], [-122.490318, 37.737906], [-122.489904, 37.737913], [-122.489062, 37.737325], [-122.488432, 37.736953], [-122.487399, 37.73697], [-122.486222, 37.736771], [-122.485535, 37.736837], [-122.484717, 37.737179], [-122.48369, 37.737416], [-122.482589, 37.737489], [-122.481408, 37.737126], [-122.471019, 37.737683], [-122.470607, 37.737745], [-122.469641, 37.738545], [-122.469028, 37.737935], [-122.470443, 37.736762], [-122.47104, 37.735877], [-122.471352, 37.734668], [-122.471507, 37.732695], [-122.47171, 37.731043], [-122.47179, 37.730392], [-122.471885, 37.726178], [-122.472308, 37.721355], [-122.472507, 37.718452], [-122.47262, 37.71752], [-122.472389, 37.716593], [-122.471635, 37.714143], [-122.471181, 37.712619], [-122.471053, 37.710378], [-122.471051, 37.708198]]]]
    },
    "properties": {
      "neighbourhood": "Lakeshore",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.420952, 37.808967], [-122.420614, 37.806666], [-122.419633, 37.806794], [-122.416774, 37.804944], [-122.408255, 37.798892], [-122.40671, 37.79785], [-122.408153, 37.797667], [-122.410257, 37.7974], [-122.423435, 37.795722], [-122.423822, 37.797606], [-122.424788, 37.802304], [-122.425599, 37.806473], [-122.426032, 37.806912], [-122.426762, 37.80796], [-122.42682, 37.808122], [-122.426718, 37.808169], [-122.42675, 37.80833], [-122.426816, 37.808624], [-122.426812, 37.808702], [-122.426831, 37.808796], [-122.426826, 37.808824], [-122.426828, 37.80886], [-122.426829, 37.808897], [-122.42683, 37.808933], [-122.426829, 37.80897], [-122.426848, 37.809019], [-122.426824, 37.809066], [-122.426821, 37.809102], [-122.426817, 37.809139], [-122.426812, 37.809175], [-122.426806, 37.809211], [-122.426799, 37.809248], [-122.426792, 37.809284], [-122.426784, 37.80932], [-122.426775, 37.809356], [-122.426765, 37.809392], [-122.426754, 37.809427], [-122.426743, 37.809463], [-122.426731, 37.809498], [-122.426718, 37.809533], [-122.426704, 37.809568], [-122.42669, 37.809603], [-122.426675, 37.809637], [-122.426659, 37.809672], [-122.426642, 37.809706], [-122.426625, 37.80974], [-122.426607, 37.809774], [-122.426588, 37.809807], [-122.426568, 37.80984], [-122.426548, 37.809873], [-122.426527, 37.809905], [-122.426505, 37.809938], [-122.426482, 37.80997], [-122.426459, 37.810001], [-122.426435, 37.810033], [-122.42641, 37.810064], [-122.426385, 37.810094], [-122.426359, 37.810124], [-122.426333, 37.810154], [-122.426305, 37.810184], [-122.426277, 37.810213], [-122.426249, 37.810242], [-122.42622, 37.81027], [-122.426166, 37.810313], [-122.426148, 37.810335], [-122.426125, 37.810354], [-122.426102, 37.810372], [-122.426078, 37.81039], [-122.426054, 37.810407], [-122.42603, 37.810425], [-122.426005, 37.810442], [-122.42598, 37.810458], [-122.425954, 37.810475], [-122.425928, 37.810491], [-122.425902, 37.810506], [-122.425875, 37.810521], [-122.425848, 37.810536], [-122.425821, 37.810551], [-122.425794, 37.810565], [-122.425766, 37.810578], [-122.425737, 37.810592], [-122.425709, 37.810604], [-122.42568, 37.810617], [-122.425651, 37.810629], [-122.425622, 37.810641], [-122.425593, 37.810652], [-122.425563, 37.810663], [-122.425533, 37.810673], [-122.425503, 37.810683], [-122.425472, 37.810693], [-122.425441, 37.810702], [-122.425411, 37.810711], [-122.42538, 37.810719], [-122.425348, 37.810727], [-122.425317, 37.810735], [-122.425285, 37.810742], [-122.425254, 37.810749], [-122.425222, 37.810755], [-122.42519, 37.81076], [-122.425158, 37.810766], [-122.425126, 37.810771], [-122.425093, 37.810775], [-122.425061, 37.810779], [-122.425029, 37.810782], [-122.424996, 37.810785], [-122.424963, 37.810788], [-122.424931, 37.81079], [-122.424898, 37.810792], [-122.424876, 37.810799], [-122.424848, 37.810794], [-122.424826, 37.810794], [-122.424803, 37.810794], [-122.424781, 37.810793], [-122.424751, 37.810791], [-122.424721, 37.810789], [-122.424699, 37.810786], [-122.424677, 37.810783], [-122.424655, 37.81078], [-122.424633, 37.810776], [-122.424611, 37.810772], [-122.42459, 37.810767], [-122.424561, 37.81076], [-122.424533, 37.810753], [-122.424512, 37.810746], [-122.424491, 37.81074], [-122.424464, 37.81073], [-122.424437, 37.81072], [-122.424408, 37.81072], [-122.424394, 37.810699], [-122.42437, 37.810683], [-122.424348, 37.810662], [-122.424332, 37.810642], [-122.424319, 37.810619], [-122.424309, 37.810592], [-122.424301, 37.810571], [-122.424299, 37.810555], [-122.424299, 37.810538], [-122.424304, 37.810512], [-122.424314, 37.810487], [-122.424325, 37.810469], [-122.424337, 37.810455], [-122.424355, 37.810439], [-122.424373, 37.810426], [-122.424392, 37.810415], [-122.424415, 37.810406], [-122.424435, 37.8104], [-122.424462, 37.810395], [-122.424492, 37.810393], [-122.424522, 37.810395], [-122.424549, 37.8104], [-122.424585, 37.810412], [-122.424611, 37.810425], [-122.424631, 37.81044], [-122.424651, 37.810458], [-122.424665, 37.810477], [-122.424675, 37.810496], [-122.424683, 37.810521], [-122.424688, 37.810543], [-122.424686, 37.810562], [-122.42469, 37.810578], [-122.424699, 37.810594], [-122.424715, 37.810609], [-122.424745, 37.810623], [-122.42479, 37.810627], [-122.424815, 37.810628], [-122.424847, 37.810628], [-122.424884, 37.810628], [-122.424913, 37.810626], [-122.424942, 37.810624], [-122.424971, 37.810622], [-122.425, 37.810619], [-122.425029, 37.810616], [-122.425058, 37.810613], [-122.425086, 37.810609], [-122.425115, 37.810604], [-122.425144, 37.8106], [-122.425172, 37.810595], [-122.4252, 37.810589], [-122.425229, 37.810583], [-122.425257, 37.810577], [-122.425285, 37.810571], [-122.425312, 37.810564], [-122.42534, 37.810556], [-122.425367, 37.810548], [-122.425395, 37.81054], [-122.425422, 37.810532], [-122.425449, 37.810523], [-122.425475, 37.810513], [-122.425502, 37.810504], [-122.425528, 37.810494], [-122.425554, 37.810483], [-122.42558, 37.810473], [-122.425606, 37.810462], [-122.425631, 37.81045], [-122.425656, 37.810438], [-122.425681, 37.810426], [-122.425705, 37.810414], [-122.42573, 37.810401], [-122.425753, 37.810388], [-122.425777, 37.810374], [-122.425801, 37.810361], [-122.425824, 37.810346], [-122.425846, 37.810332], [-122.425869, 37.810317], [-122.425891, 37.810302], [-122.425913, 37.810287], [-122.425934, 37.810271], [-122.425955, 37.810255], [-122.425976, 37.810239], [-122.426033, 37.810212], [-122.426044, 37.81018], [-122.426071, 37.810154], [-122.426098, 37.810128], [-122.426124, 37.810101], [-122.426149, 37.810074], [-122.426174, 37.810047], [-122.426199, 37.810019], [-122.426222, 37.809991], [-122.426245, 37.809963], [-122.426268, 37.809934], [-122.426289, 37.809905], [-122.426311, 37.809876], [-122.426331, 37.809846], [-122.426351, 37.809816], [-122.42637, 37.809786], [-122.426388, 37.809756], [-122.426406, 37.809725], [-122.426423, 37.809694], [-122.42644, 37.809663], [-122.426456, 37.809632], [-122.426471, 37.8096], [-122.426485, 37.809569], [-122.426499, 37.809537], [-122.426512, 37.809505], [-122.426524, 37.809472], [-122.426536, 37.80944], [-122.426547, 37.809407], [-122.426557, 37.809375], [-122.426566, 37.809342], [-122.426575, 37.809309], [-122.426583, 37.809275], [-122.42659, 37.809242], [-122.426597, 37.809209], [-122.426602, 37.809175], [-122.426607, 37.809142], [-122.426612, 37.809108], [-122.426615, 37.809075], [-122.426618, 37.809041], [-122.42662, 37.809007], [-122.426622, 37.808974], [-122.426622, 37.80894], [-122.426622, 37.808906], [-122.426636, 37.808794], [-122.426618, 37.808824], [-122.426616, 37.808798], [-122.426608, 37.808713], [-122.426597, 37.808627], [-122.426584, 37.808542], [-122.426569, 37.808456], [-122.426553, 37.808371], [-122.426535, 37.808287], [-122.426522, 37.808151], [-122.426486, 37.808164], [-122.426482, 37.808127], [-122.426478, 37.808089], [-122.426472, 37.808052], [-122.426465, 37.808015], [-122.426458, 37.807978], [-122.42645, 37.807941], [-122.426441, 37.807905], [-122.426431, 37.807868], [-122.426421, 37.807832], [-122.426409, 37.807795], [-122.426397, 37.807759], [-122.426384, 37.807723], [-122.426371, 37.807687], [-122.426356, 37.807652], [-122.426341, 37.807616], [-122.426325, 37.807581], [-122.426289, 37.807546], [-122.426118, 37.807641], [-122.426005, 37.807512], [-122.425948, 37.807541], [-122.426073, 37.80768], [-122.426045, 37.807693], [-122.425788, 37.807406], [-122.425811, 37.807394], [-122.425842, 37.807428], [-122.42586, 37.807417], [-122.425902, 37.807474], [-122.425932, 37.807524], [-122.42597, 37.8075], [-122.425934, 37.807458], [-122.426103, 37.807366], [-122.426126, 37.80735], [-122.426091, 37.807318], [-122.426055, 37.807289], [-122.426018, 37.807259], [-122.425981, 37.80723], [-122.425943, 37.807202], [-122.425904, 37.807174], [-122.425865, 37.807147], [-122.425825, 37.807121], [-122.425785, 37.807094], [-122.425744, 37.807069], [-122.425702, 37.807044], [-122.42566, 37.80702], [-122.425618, 37.806996], [-122.425574, 37.806973], [-122.425531, 37.80695], [-122.425487, 37.806928], [-122.425442, 37.806907], [-122.425397, 37.806886], [-122.425351, 37.806866], [-122.425305, 37.806846], [-122.425259, 37.806827], [-122.425212, 37.806809], [-122.425165, 37.806792], [-122.425117, 37.806775], [-122.425069, 37.806758], [-122.425021, 37.806743], [-122.424973, 37.806728], [-122.424924, 37.806714], [-122.424874, 37.8067], [-122.424802, 37.806681], [-122.424773, 37.806674], [-122.424745, 37.806666], [-122.424717, 37.80666], [-122.424689, 37.806653], [-122.42466, 37.806647], [-122.424632, 37.806641], [-122.424603, 37.806636], [-122.424574, 37.806631], [-122.424545, 37.806627], [-122.424516, 37.806623], [-122.424487, 37.806619], [-122.424458, 37.806616], [-122.424429, 37.806613], [-122.4244, 37.806611], [-122.424371, 37.806609], [-122.424341, 37.806607], [-122.424312, 37.806606], [-122.424282, 37.806605], [-122.424253, 37.806605], [-122.424224, 37.806605], [-122.424194, 37.806605], [-122.424165, 37.806606], [-122.424136, 37.806607], [-122.424106, 37.806609], [-122.424077, 37.806611], [-122.424048, 37.806613], [-122.424018, 37.806616], [-122.423989, 37.806619], [-122.42396, 37.806623], [-122.423931, 37.806627], [-122.423903, 37.806631], [-122.423874, 37.806636], [-122.423845, 37.806641], [-122.423817, 37.806647], [-122.423788, 37.806653], [-122.42376, 37.806659], [-122.423706, 37.806673], [-122.423654, 37.806694], [-122.42359, 37.806719], [-122.423526, 37.806745], [-122.423463, 37.806771], [-122.4234, 37.806799], [-122.423338, 37.806827], [-122.423277, 37.806857], [-122.423216, 37.806887], [-122.423156, 37.806918], [-122.423096, 37.80695], [-122.423038, 37.806983], [-122.42298, 37.807016], [-122.422923, 37.80705], [-122.422866, 37.807085], [-122.422808, 37.807118], [-122.422669, 37.807211], [-122.422539, 37.807296], [-122.422411, 37.807382], [-122.422284, 37.807471], [-122.42216, 37.807561], [-122.422038, 37.807653], [-122.421917, 37.807747], [-122.421799, 37.807842], [-122.421683, 37.807939], [-122.421535, 37.808067], [-122.42179, 37.808374], [-122.421759, 37.808395], [-122.421493, 37.80811], [-122.421324, 37.808279], [-122.421367, 37.808321], [-122.421409, 37.808345], [-122.421539, 37.808468], [-122.421521, 37.80848], [-122.421585, 37.808543], [-122.421559, 37.80856], [-122.421489, 37.808502], [-122.421366, 37.80839], [-122.421341, 37.80835], [-122.421301, 37.808302], [-122.421055, 37.808557], [-122.421102, 37.808804], [-122.421495, 37.809133], [-122.421448, 37.809163], [-122.422886, 37.810219], [-122.422844, 37.810256], [-122.421366, 37.809161], [-122.42121, 37.80919], [-122.421036, 37.808957], [-122.420952, 37.808967]]]]
    },
    "properties": {
      "neighbourhood": "Russian Hill",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.425578, 37.756617], [-122.424949, 37.749725], [-122.424756, 37.747849], [-122.424183, 37.742262], [-122.425454, 37.742212], [-122.429924, 37.741865], [-122.4313, 37.741788], [-122.432333, 37.741771], [-122.432889, 37.741926], [-122.433299, 37.74181], [-122.435527, 37.74146], [-122.435635, 37.741553], [-122.435931, 37.742314], [-122.437126, 37.743225], [-122.439084, 37.744341], [-122.439859, 37.744985], [-122.440214, 37.745362], [-122.440165, 37.746129], [-122.440179, 37.746676], [-122.440607, 37.747216], [-122.441226, 37.747206], [-122.443003, 37.74663], [-122.443346, 37.746569], [-122.443901, 37.746724], [-122.444659, 37.746712], [-122.444771, 37.746921], [-122.444668, 37.74704], [-122.444122, 37.747268], [-122.444138, 37.74787], [-122.444221, 37.748415], [-122.443621, 37.749191], [-122.443185, 37.75095], [-122.442753, 37.752872], [-122.442368, 37.753973], [-122.441699, 37.75475], [-122.441171, 37.755634], [-122.440979, 37.756184], [-122.441045, 37.756229], [-122.440501, 37.756356], [-122.438988, 37.756491], [-122.438892, 37.755452], [-122.43779, 37.755471], [-122.437801, 37.755908], [-122.432366, 37.756271], [-122.425578, 37.756617]]]]
    },
    "properties": {
      "neighbourhood": "Noe Valley",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.451436, 37.758735], [-122.451399, 37.758537], [-122.452724, 37.758181], [-122.453416, 37.757779], [-122.454105, 37.757266], [-122.454087, 37.756597], [-122.454902, 37.755524], [-122.455223, 37.754403], [-122.455485, 37.753674], [-122.45596, 37.753053], [-122.456079, 37.752214], [-122.456206, 37.75171], [-122.45683, 37.751421], [-122.458103, 37.751734], [-122.458881, 37.751944], [-122.460354, 37.751864], [-122.46142, 37.751562], [-122.461609, 37.751509], [-122.462757, 37.752438], [-122.463332, 37.75293], [-122.46663, 37.752819], [-122.46632, 37.749088], [-122.469506, 37.748954], [-122.476014, 37.748679], [-122.477206, 37.765426], [-122.467467, 37.765854], [-122.459538, 37.766209], [-122.458555, 37.766226], [-122.456858, 37.765808], [-122.453014, 37.766373], [-122.452938, 37.766319], [-122.451889, 37.76115], [-122.451436, 37.758735]]]]
    },
    "properties": {
      "neighbourhood": "Inner Sunset",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.373133, 37.832253], [-122.368622, 37.831148], [-122.367779, 37.830014], [-122.367684, 37.829848], [-122.367443, 37.829492], [-122.365179, 37.826109], [-122.362837, 37.822594], [-122.363436, 37.821036], [-122.363583, 37.820871], [-122.360458, 37.820124], [-122.360585, 37.819801], [-122.363642, 37.820541], [-122.363686, 37.820356], [-122.364024, 37.819601], [-122.364173, 37.819017], [-122.364256, 37.818855], [-122.364351, 37.818777], [-122.364399, 37.818768], [-122.364357, 37.818677], [-122.364472, 37.818622], [-122.36452, 37.818627], [-122.36483, 37.818497], [-122.364755, 37.818403], [-122.364923, 37.818333], [-122.365049, 37.818513], [-122.365094, 37.818464], [-122.366486, 37.817878], [-122.368418, 37.817063], [-122.368525, 37.816995], [-122.36862, 37.816974], [-122.371019, 37.815999], [-122.371054, 37.81595], [-122.371052, 37.815855], [-122.370773, 37.815285], [-122.370528, 37.814657], [-122.370384, 37.814229], [-122.369804, 37.813402], [-122.369402, 37.813034], [-122.368765, 37.812701], [-122.368487, 37.81266], [-122.368306, 37.812559], [-122.368141, 37.812543], [-122.368018, 37.812454], [-122.367558, 37.812325], [-122.367288, 37.812323], [-122.367003, 37.812347], [-122.366809, 37.812421], [-122.366719, 37.812416], [-122.36643, 37.812589], [-122.366213, 37.812683], [-122.366036, 37.812815], [-122.365898, 37.81283], [-122.365672, 37.812944], [-122.36556, 37.813017], [-122.365165, 37.813198], [-122.365086, 37.813296], [-122.365014, 37.813324], [-122.364991, 37.813466], [-122.364889, 37.813604], [-122.364824, 37.813624], [-122.364744, 37.813697], [-122.364658, 37.813763], [-122.364593, 37.813796], [-122.364552, 37.813842], [-122.364447, 37.81387], [-122.364383, 37.813929], [-122.364241, 37.813923], [-122.364021, 37.814048], [-122.363949, 37.814024], [-122.363899, 37.814082], [-122.363817, 37.814059], [-122.363805, 37.814018], [-122.363297, 37.814026], [-122.363104, 37.814078], [-122.363014, 37.814152], [-122.362676, 37.814109], [-122.362298, 37.814107], [-122.362065, 37.814143], [-122.361934, 37.814234], [-122.361877, 37.814365], [-122.361827, 37.814366], [-122.361716, 37.814456], [-122.361646, 37.814457], [-122.361584, 37.814491], [-122.361401, 37.814501], [-122.361219, 37.814553], [-122.361036, 37.81458], [-122.360824, 37.81464], [-122.360743, 37.814706], [-122.3606, 37.814684], [-122.360396, 37.814688], [-122.359906, 37.814824], [-122.359725, 37.814925], [-122.359502, 37.815017], [-122.35938, 37.815027], [-122.359276, 37.814964], [-122.359163, 37.814893], [-122.358914, 37.814767], [-122.35885, 37.814599], [-122.358927, 37.814452], [-122.358906, 37.814412], [-122.359048, 37.813956], [-122.359195, 37.813735], [-122.359203, 37.813639], [-122.35915, 37.813615], [-122.35918, 37.813566], [-122.35925, 37.8135], [-122.359279, 37.813443], [-122.359412, 37.813417], [-122.359532, 37.813366], [-122.359574, 37.81339], [-122.359715, 37.813348], [-122.360601, 37.812848], [-122.360941, 37.812608], [-122.361059, 37.812484], [-122.361112, 37.812306], [-122.361126, 37.812047], [-122.361099, 37.811805], [-122.361114, 37.81157], [-122.361202, 37.811415], [-122.361306, 37.811122], [-122.361271, 37.810904], [-122.361317, 37.810742], [-122.361274, 37.810605], [-122.361195, 37.810371], [-122.361172, 37.810226], [-122.360715, 37.810298], [-122.360373, 37.810926], [-122.360354, 37.810935], [-122.36024, 37.81088], [-122.360549, 37.810204], [-122.361149, 37.810113], [-122.36097, 37.808085], [-122.361307, 37.808064], [-122.361474, 37.807811], [-122.361689, 37.80771], [-122.361738, 37.807564], [-122.361853, 37.807343], [-122.361801, 37.807263], [-122.361849, 37.807166], [-122.361921, 37.807132], [-122.361898, 37.807068], [-122.36201, 37.807026], [-122.362061, 37.807066], [-122.36209, 37.807], [-122.362162, 37.807023], [-122.362264, 37.807014], [-122.362469, 37.807043], [-122.362622, 37.807072], [-122.362718, 37.807241], [-122.362791, 37.807345], [-122.362882, 37.807311], [-122.363039, 37.807422], [-122.363121, 37.807421], [-122.363224, 37.807476], [-122.363397, 37.807481], [-122.36363, 37.807453], [-122.363958, 37.807481], [-122.364123, 37.807551], [-122.364356, 37.807547], [-122.364623, 37.807535], [-122.364732, 37.807492], [-122.364803, 37.807418], [-122.364976, 37.807407], [-122.365069, 37.807471], [-122.365152, 37.807518], [-122.365143, 37.807591], [-122.365215, 37.80763], [-122.365307, 37.807629], [-122.365796, 37.807613], [-122.365927, 37.807554], [-122.365989, 37.807553], [-122.366094, 37.807471], [-122.366174, 37.807429], [-122.366286, 37.807378], [-122.366408, 37.807409], [-122.366682, 37.807397], [-122.366846, 37.807354], [-122.367112, 37.80739], [-122.367254, 37.807388], [-122.367318, 37.80754], [-122.36734, 37.807605], [-122.367404, 37.807644], [-122.367455, 37.807708], [-122.367673, 37.807834], [-122.367785, 37.807881], [-122.367879, 37.807879], [-122.367926, 37.807773], [-122.367957, 37.807773], [-122.368007, 37.807764], [-122.368163, 37.807907], [-122.368216, 37.807923], [-122.368532, 37.807958], [-122.368616, 37.808005], [-122.36878, 37.808075], [-122.369018, 37.808233], [-122.36904, 37.808274], [-122.369186, 37.808376], [-122.369235, 37.808335], [-122.369267, 37.808351], [-122.369226, 37.808392], [-122.369279, 37.808439], [-122.369629, 37.808588], [-122.369783, 37.808626], [-122.370118, 37.80862], [-122.370304, 37.808626], [-122.370459, 37.808728], [-122.37061, 37.808912], [-122.370725, 37.808999], [-122.37091, 37.809036], [-122.371085, 37.809147], [-122.371107, 37.809179], [-122.371281, 37.809225], [-122.371603, 37.809438], [-122.371686, 37.809486], [-122.371929, 37.80987], [-122.372026, 37.810063], [-122.372162, 37.810157], [-122.372255, 37.810213], [-122.372287, 37.810269], [-122.372372, 37.810389], [-122.372558, 37.810515], [-122.372652, 37.810586], [-122.372819, 37.81077], [-122.372843, 37.810874], [-122.372825, 37.811004], [-122.372844, 37.811109], [-122.372856, 37.811182], [-122.372805, 37.811231], [-122.372509, 37.811244], [-122.372267, 37.811328], [-122.372166, 37.811354], [-122.372099, 37.811525], [-122.372041, 37.811623], [-122.372015, 37.811818], [-122.371952, 37.811916], [-122.371907, 37.812006], [-122.37186, 37.812112], [-122.371875, 37.812306], [-122.371786, 37.812428], [-122.371793, 37.812695], [-122.371722, 37.812769], [-122.371695, 37.81285], [-122.371666, 37.812948], [-122.371606, 37.812989], [-122.371566, 37.813039], [-122.371649, 37.813118], [-122.371753, 37.813165], [-122.371728, 37.813222], [-122.371793, 37.81331], [-122.371784, 37.813375], [-122.371768, 37.813569], [-122.371574, 37.813564], [-122.371437, 37.81356], [-122.371365, 37.813917], [-122.371246, 37.814436], [-122.371266, 37.814713], [-122.371466, 37.815264], [-122.374798, 37.820243], [-122.374907, 37.820212], [-122.375228, 37.819567], [-122.375397, 37.819612], [-122.375399, 37.819679], [-122.375054, 37.820297], [-122.374908, 37.82027], [-122.374836, 37.8203], [-122.374856, 37.820338], [-122.375063, 37.820631], [-122.37546, 37.821131], [-122.37556, 37.821245], [-122.375587, 37.821369], [-122.375862, 37.821776], [-122.376136, 37.822145], [-122.376248, 37.822257], [-122.376364, 37.822533], [-122.376536, 37.822674], [-122.376635, 37.822758], [-122.376786, 37.822986], [-122.376827, 37.823166], [-122.377023, 37.823537], [-122.378859, 37.826272], [-122.379125, 37.826784], [-122.379103, 37.82689], [-122.378958, 37.827323], [-122.378878, 37.827496], [-122.378242, 37.829188], [-122.378142, 37.829404], [-122.378021, 37.829627], [-122.377693, 37.830436], [-122.37756, 37.830515], [-122.377266, 37.830649], [-122.376836, 37.830855], [-122.376625, 37.830936], [-122.376254, 37.831102], [-122.375179, 37.83154], [-122.374903, 37.831667], [-122.374608, 37.831847], [-122.374353, 37.832012], [-122.374209, 37.83206], [-122.374084, 37.832062], [-122.373787, 37.832159], [-122.373434, 37.83231], [-122.37332, 37.832396], [-122.373257, 37.832573], [-122.373176, 37.832796], [-122.373036, 37.832997], [-122.3728, 37.833193], [-122.372589, 37.833288], [-122.372455, 37.833298], [-122.372415, 37.833229], [-122.372443, 37.833167], [-122.372499, 37.833151], [-122.372577, 37.833135], [-122.372719, 37.833072], [-122.372843, 37.832993], [-122.372993, 37.83283], [-122.373093, 37.832591], [-122.373172, 37.832299], [-122.373133, 37.832253]]]]
    },
    "properties": {
      "neighbourhood": "Treasure Island/YBI",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.478735, 37.786898], [-122.477816, 37.77287], [-122.479593, 37.772789], [-122.488715, 37.772357], [-122.505415, 37.771628], [-122.513128, 37.771214], [-122.513141, 37.771331], [-122.513104, 37.771429], [-122.513117, 37.771539], [-122.513111, 37.771707], [-122.513102, 37.771742], [-122.513109, 37.771801], [-122.513097, 37.771902], [-122.513158, 37.772238], [-122.513146, 37.772257], [-122.513142, 37.772283], [-122.513146, 37.772307], [-122.513158, 37.772328], [-122.51317, 37.772346], [-122.513177, 37.772365], [-122.51318, 37.772389], [-122.513179, 37.772408], [-122.513173, 37.772427], [-122.513159, 37.77245], [-122.513143, 37.772472], [-122.513135, 37.772493], [-122.513134, 37.77252], [-122.513143, 37.772547], [-122.513128, 37.772863], [-122.513144, 37.772918], [-122.513135, 37.772953], [-122.513142, 37.773052], [-122.513131, 37.773072], [-122.513122, 37.773095], [-122.513116, 37.773113], [-122.513113, 37.773129], [-122.51311, 37.773148], [-122.513109, 37.77317], [-122.51311, 37.773191], [-122.513113, 37.77321], [-122.513117, 37.773227], [-122.513123, 37.773245], [-122.513133, 37.77327], [-122.513138, 37.773293], [-122.513139, 37.77331], [-122.513139, 37.773327], [-122.513139, 37.773344], [-122.513139, 37.773361], [-122.513138, 37.773379], [-122.513137, 37.773396], [-122.513136, 37.773413], [-122.513134, 37.77343], [-122.513132, 37.773447], [-122.513129, 37.773464], [-122.513125, 37.773488], [-122.513124, 37.773511], [-122.513127, 37.773531], [-122.51313, 37.773555], [-122.513132, 37.773574], [-122.513134, 37.773592], [-122.513135, 37.773611], [-122.513136, 37.77363], [-122.513137, 37.773648], [-122.513137, 37.773667], [-122.513136, 37.773685], [-122.513136, 37.773704], [-122.513134, 37.773722], [-122.513133, 37.773741], [-122.513131, 37.773759], [-122.513128, 37.773778], [-122.513126, 37.773796], [-122.513122, 37.773815], [-122.513119, 37.773833], [-122.513115, 37.773851], [-122.51311, 37.773869], [-122.513105, 37.773888], [-122.513099, 37.77391], [-122.513116, 37.77455], [-122.513136, 37.774699], [-122.513165, 37.774891], [-122.513169, 37.775046], [-122.509095, 37.77519], [-122.509342, 37.779145], [-122.509504, 37.779923], [-122.507818, 37.779952], [-122.5062, 37.779868], [-122.505144, 37.779774], [-122.505317, 37.780998], [-122.492407, 37.781663], [-122.492526, 37.783501], [-122.487123, 37.78376], [-122.487434, 37.787491], [-122.484346, 37.787654], [-122.484089, 37.78791], [-122.483853, 37.787607], [-122.48131, 37.787092], [-122.478735, 37.786898]]]]
    },
    "properties": {
      "neighbourhood": "Outer Richmond",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.42085, 37.708335], [-122.423878, 37.708342], [-122.427675, 37.708286], [-122.429105, 37.708326], [-122.431295, 37.708298], [-122.444787, 37.708275], [-122.445691, 37.70825], [-122.454284, 37.708222], [-122.454011, 37.708379], [-122.450596, 37.709461], [-122.448249, 37.71027], [-122.446344, 37.711498], [-122.445175, 37.71203], [-122.445078, 37.712459], [-122.44129, 37.715771], [-122.440824, 37.716455], [-122.440548, 37.716211], [-122.437606, 37.714806], [-122.433579, 37.713076], [-122.433488, 37.713254], [-122.432823, 37.713003], [-122.431741, 37.712764], [-122.431095, 37.712775], [-122.428707, 37.711959], [-122.426535, 37.711225], [-122.424899, 37.710397], [-122.423799, 37.709475], [-122.42085, 37.708335]]]]
    },
    "properties": {
      "neighbourhood": "Crocker Amazon",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.440824, 37.716455], [-122.438284, 37.720181], [-122.435681, 37.723558], [-122.434737, 37.724514], [-122.434434, 37.725289], [-122.432867, 37.72711], [-122.430038, 37.730063], [-122.428255, 37.731785], [-122.427174, 37.731734], [-122.425231, 37.73151], [-122.422969, 37.731461], [-122.420931, 37.731751], [-122.419108, 37.732037], [-122.415017, 37.732018], [-122.413629, 37.732468], [-122.411818, 37.733182], [-122.408728, 37.734429], [-122.406703, 37.735178], [-122.406262, 37.734811], [-122.40346, 37.730495], [-122.401734, 37.726163], [-122.401091, 37.724311], [-122.410983, 37.721653], [-122.423507, 37.71897], [-122.423621, 37.719224], [-122.423421, 37.719826], [-122.425692, 37.720216], [-122.425777, 37.71936], [-122.42651, 37.718579], [-122.426076, 37.718415], [-122.426069, 37.718158], [-122.426354, 37.7167], [-122.426112, 37.715678], [-122.431088, 37.716623], [-122.432657, 37.714887], [-122.433488, 37.713254], [-122.433579, 37.713076], [-122.437606, 37.714806], [-122.440548, 37.716211], [-122.440824, 37.716455]]]]
    },
    "properties": {
      "neighbourhood": "Excelsior",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.469641, 37.738545], [-122.470607, 37.737745], [-122.471019, 37.737683], [-122.481408, 37.737126], [-122.482589, 37.737489], [-122.48369, 37.737416], [-122.484717, 37.737179], [-122.485535, 37.736837], [-122.486222, 37.736771], [-122.487399, 37.73697], [-122.488432, 37.736953], [-122.489062, 37.737325], [-122.489904, 37.737913], [-122.490318, 37.737906], [-122.491402, 37.737231], [-122.491247, 37.734005], [-122.493931, 37.733905], [-122.497304, 37.733793], [-122.499107, 37.7342], [-122.500439, 37.735053], [-122.502034, 37.735464], [-122.503067, 37.735446], [-122.505274, 37.735518], [-122.507132, 37.735432], [-122.508537, 37.735361], [-122.508538, 37.735402], [-122.508518, 37.735491], [-122.508502, 37.735571], [-122.50851, 37.735594], [-122.508534, 37.735605], [-122.508525, 37.735624], [-122.508511, 37.735643], [-122.508507, 37.735662], [-122.508509, 37.735748], [-122.508517, 37.735778], [-122.508511, 37.735801], [-122.508478, 37.735805], [-122.508464, 37.735828], [-122.50847, 37.735855], [-122.508475, 37.735877], [-122.508462, 37.735938], [-122.508465, 37.736075], [-122.50845, 37.73613], [-122.508449, 37.736218], [-122.508451, 37.736317], [-122.50849, 37.736474], [-122.508516, 37.736663], [-122.508604, 37.736824], [-122.508663, 37.73696], [-122.508679, 37.737056], [-122.50872, 37.73716], [-122.508735, 37.737317], [-122.508766, 37.737443], [-122.508786, 37.737552], [-122.508771, 37.737638], [-122.508787, 37.737709], [-122.508761, 37.737789], [-122.508764, 37.737875], [-122.508742, 37.737969], [-122.508748, 37.738191], [-122.508757, 37.738392], [-122.508804, 37.738614], [-122.508804, 37.73871], [-122.508865, 37.738916], [-122.508895, 37.739003], [-122.508898, 37.739127], [-122.508891, 37.73924], [-122.508823, 37.739425], [-122.508792, 37.739563], [-122.50878, 37.739716], [-122.508775, 37.739755], [-122.508764, 37.739774], [-122.508753, 37.739788], [-122.508748, 37.739826], [-122.508778, 37.739858], [-122.508779, 37.7399], [-122.508763, 37.739933], [-122.508763, 37.739965], [-122.50877, 37.739998], [-122.508777, 37.740016], [-122.508748, 37.740054], [-122.508749, 37.740077], [-122.508738, 37.74011], [-122.508739, 37.740129], [-122.508745, 37.740161], [-122.50874, 37.740194], [-122.508724, 37.740231], [-122.508724, 37.740255], [-122.508732, 37.740306], [-122.508744, 37.740319], [-122.508774, 37.740361], [-122.508808, 37.740402], [-122.508829, 37.740434], [-122.508813, 37.740491], [-122.508861, 37.740536], [-122.508851, 37.740583], [-122.508857, 37.740616], [-122.50887, 37.740657], [-122.508871, 37.740695], [-122.508867, 37.740741], [-122.508879, 37.74076], [-122.508914, 37.740773], [-122.508933, 37.740815], [-122.508928, 37.740857], [-122.508929, 37.74088], [-122.508936, 37.740917], [-122.508954, 37.740935], [-122.508984, 37.740963], [-122.509009, 37.741], [-122.509027, 37.741037], [-122.509023, 37.741088], [-122.509036, 37.741139], [-122.509054, 37.741171], [-122.509067, 37.741199], [-122.509097, 37.741222], [-122.509133, 37.741258], [-122.509186, 37.741257], [-122.509204, 37.741299], [-122.509247, 37.741345], [-122.509242, 37.741401], [-122.509226, 37.741457], [-122.509227, 37.741499], [-122.509216, 37.741522], [-122.509199, 37.741541], [-122.509177, 37.741602], [-122.509208, 37.741662], [-122.509186, 37.741709], [-122.509189, 37.741798], [-122.509155, 37.741845], [-122.50915, 37.741873], [-122.509151, 37.741919], [-122.509123, 37.741971], [-122.509101, 37.742027], [-122.509102, 37.742051], [-122.509091, 37.742107], [-122.509063, 37.742131], [-122.509052, 37.742168], [-122.509053, 37.742215], [-122.509066, 37.742256], [-122.509073, 37.742307], [-122.509057, 37.742359], [-122.509052, 37.742405], [-122.509054, 37.742457], [-122.509073, 37.742522], [-122.509092, 37.742549], [-122.50911, 37.742595], [-122.509106, 37.742642], [-122.509124, 37.742665], [-122.509131, 37.742707], [-122.509144, 37.742739], [-122.509168, 37.742762], [-122.509192, 37.742808], [-122.509182, 37.742841], [-122.509159, 37.74286], [-122.509186, 37.74299], [-122.50918, 37.743013], [-122.509193, 37.74306], [-122.509209, 37.74309], [-122.509236, 37.743106], [-122.509246, 37.743145], [-122.50925, 37.743203], [-122.509269, 37.743236], [-122.509301, 37.743337], [-122.509303, 37.743431], [-122.509335, 37.743519], [-122.509353, 37.743551], [-122.509366, 37.743593], [-122.509378, 37.743606], [-122.50939, 37.74362], [-122.509397, 37.743662], [-122.50941, 37.743685], [-122.509422, 37.743703], [-122.509417, 37.743736], [-122.509418, 37.743773], [-122.509442, 37.743791], [-122.50946, 37.743824], [-122.509467, 37.743847], [-122.509479, 37.743861], [-122.509498, 37.743907], [-122.509505, 37.743944], [-122.509523, 37.743967], [-122.509535, 37.743986], [-122.509566, 37.744022], [-122.509567, 37.744087], [-122.50958, 37.744106], [-122.509605, 37.744161], [-122.509617, 37.744184], [-122.509639, 37.744233], [-122.509631, 37.744282], [-122.509638, 37.74431], [-122.509656, 37.744333], [-122.509651, 37.744365], [-122.509652, 37.744403], [-122.509683, 37.744439], [-122.509684, 37.744495], [-122.509662, 37.744538], [-122.509657, 37.74457], [-122.509652, 37.744598], [-122.509635, 37.744631], [-122.509636, 37.744659], [-122.509631, 37.744687], [-122.509608, 37.744739], [-122.509616, 37.744785], [-122.509593, 37.744818], [-122.50953, 37.744866], [-122.509507, 37.74488], [-122.509466, 37.7449], [-122.509443, 37.744928], [-122.509462, 37.744956], [-122.509463, 37.744988], [-122.509458, 37.745026], [-122.509441, 37.745058], [-122.509436, 37.745091], [-122.509432, 37.745161], [-122.509404, 37.745267], [-122.506604, 37.745398], [-122.495451, 37.745922], [-122.481842, 37.746486], [-122.475881, 37.746809], [-122.476014, 37.748679], [-122.469506, 37.748954], [-122.46941, 37.747176], [-122.470509, 37.747049], [-122.469959, 37.739288], [-122.470022, 37.739068], [-122.469948, 37.73885], [-122.469641, 37.738545]]]]
    },
    "properties": {
      "neighbourhood": "Parkside",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.394252, 37.800074], [-122.394244, 37.799994], [-122.394306, 37.799956], [-122.39434, 37.799987], [-122.394406, 37.799984], [-122.39442, 37.799998], [-122.395383, 37.799442], [-122.395444, 37.799408], [-122.395461, 37.799349], [-122.395565, 37.799287], [-122.395651, 37.799284], [-122.396138, 37.799011], [-122.396526, 37.798778], [-122.396509, 37.798757], [-122.396512, 37.79874], [-122.396562, 37.798709], [-122.396529, 37.798675], [-122.396574, 37.79865], [-122.396523, 37.798594], [-122.396499, 37.798568], [-122.396467, 37.798586], [-122.396357, 37.798472], [-122.396393, 37.798452], [-122.395861, 37.797871], [-122.395833, 37.797874], [-122.395798, 37.797879], [-122.395769, 37.797884], [-122.395744, 37.797889], [-122.395719, 37.797895], [-122.395694, 37.797901], [-122.39567, 37.797908], [-122.395646, 37.797916], [-122.395614, 37.797928], [-122.395588, 37.797939], [-122.395565, 37.797949], [-122.39554, 37.797961], [-122.39551, 37.797977], [-122.39383, 37.798941], [-122.39381, 37.798938], [-122.393554, 37.798652], [-122.393558, 37.798636], [-122.395455, 37.797549], [-122.395493, 37.79747], [-122.395423, 37.797393], [-122.395304, 37.797394], [-122.395132, 37.797495], [-122.394996, 37.797341], [-122.395177, 37.797236], [-122.395204, 37.797153], [-122.395175, 37.797121], [-122.395016, 37.797124], [-122.394842, 37.797228], [-122.394877, 37.797258], [-122.393207, 37.79825], [-122.393186, 37.798249], [-122.39292, 37.797971], [-122.392923, 37.797954], [-122.392933, 37.797938], [-122.393023, 37.797892], [-122.393418, 37.797664], [-122.393495, 37.797595], [-122.393616, 37.797493], [-122.393796, 37.797347], [-122.393858, 37.797294], [-122.394535, 37.796891], [-122.394518, 37.796875], [-122.394797, 37.796709], [-122.394686, 37.796587], [-122.394273, 37.796819], [-122.393517, 37.797258], [-122.393551, 37.797294], [-122.393169, 37.797508], [-122.393092, 37.797426], [-122.393469, 37.797208], [-122.393491, 37.797233], [-122.394127, 37.796863], [-122.393932, 37.796649], [-122.39385, 37.796688], [-122.393743, 37.796575], [-122.393881, 37.796507], [-122.393598, 37.796198], [-122.393524, 37.796237], [-122.393397, 37.796098], [-122.393482, 37.796057], [-122.393263, 37.795831], [-122.393199, 37.795863], [-122.393014, 37.795655], [-122.393055, 37.795628], [-122.392998, 37.795561], [-122.39159, 37.796205], [-122.391196, 37.795779], [-122.392411, 37.79482], [-122.392267, 37.794668], [-122.391941, 37.794854], [-122.391649, 37.794547], [-122.391828, 37.794445], [-122.391802, 37.794417], [-122.391946, 37.794335], [-122.39179, 37.794171], [-122.391734, 37.794203], [-122.391667, 37.794132], [-122.391722, 37.794101], [-122.391673, 37.794048], [-122.391982, 37.793872], [-122.391589, 37.793528], [-122.391724, 37.793429], [-122.389334, 37.79142], [-122.391297, 37.789797], [-122.396671, 37.785584], [-122.401146, 37.781999], [-122.405808, 37.785716], [-122.405844, 37.785687], [-122.405863, 37.785755], [-122.406223, 37.785713], [-122.406326, 37.786213], [-122.407156, 37.790357], [-122.406364, 37.79045], [-122.40628, 37.790461], [-122.406205, 37.790471], [-122.405901, 37.790502], [-122.404041, 37.790763], [-122.404911, 37.795038], [-122.40504, 37.79574], [-122.405319, 37.797246], [-122.405445, 37.798012], [-122.40311, 37.798306], [-122.399679, 37.798808], [-122.398275, 37.798886], [-122.397223, 37.799369], [-122.397071, 37.799198], [-122.396741, 37.798834], [-122.396702, 37.798856], [-122.39667, 37.798822], [-122.396613, 37.79885], [-122.396593, 37.798846], [-122.396579, 37.798833], [-122.39571, 37.799334], [-122.395682, 37.799401], [-122.395581, 37.799459], [-122.395492, 37.799462], [-122.395204, 37.799626], [-122.394471, 37.800049], [-122.394486, 37.800063], [-122.394463, 37.80011], [-122.394496, 37.800144], [-122.394437, 37.800182], [-122.394338, 37.800158], [-122.394252, 37.800074]], [[-122.392772, 37.794535], [-122.392528, 37.794327], [-122.392238, 37.794495], [-122.392491, 37.794757], [-122.392772, 37.794535]]]]
    },
    "properties": {
      "neighbourhood": "Financial District",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.459123, 37.708218], [-122.459728, 37.708206], [-122.460029, 37.708193], [-122.461085, 37.708202], [-122.46139, 37.708194], [-122.461951, 37.7082], [-122.462236, 37.708188], [-122.462765, 37.708187], [-122.463939, 37.708203], [-122.464812, 37.708213], [-122.469251, 37.708202], [-122.469299, 37.708202], [-122.470832, 37.708197], [-122.471051, 37.708198], [-122.471053, 37.710378], [-122.471181, 37.712619], [-122.471635, 37.714143], [-122.472389, 37.716593], [-122.47262, 37.71752], [-122.472507, 37.718452], [-122.472308, 37.721355], [-122.471885, 37.726178], [-122.47179, 37.730392], [-122.47171, 37.731043], [-122.470206, 37.730419], [-122.468529, 37.729517], [-122.4681, 37.728922], [-122.467593, 37.728], [-122.466468, 37.727144], [-122.465623, 37.726446], [-122.461521, 37.725037], [-122.456948, 37.724019], [-122.452524, 37.723167], [-122.452239, 37.723112], [-122.451678, 37.722738], [-122.446597, 37.720743], [-122.448125, 37.718584], [-122.448924, 37.717531], [-122.449535, 37.717193], [-122.451807, 37.714528], [-122.452543, 37.713695], [-122.453561, 37.713131], [-122.454442, 37.71257], [-122.455853, 37.711233], [-122.459123, 37.708218]]]]
    },
    "properties": {
      "neighbourhood": "Ocean View",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.424756, 37.747849], [-122.424949, 37.749725], [-122.425578, 37.756617], [-122.426761, 37.769577], [-122.426329, 37.769601], [-122.423302, 37.772048], [-122.423269, 37.772074], [-122.42269, 37.770624], [-122.421172, 37.770221], [-122.419768, 37.770073], [-122.415771, 37.769625], [-122.412755, 37.769588], [-122.40876, 37.769225], [-122.407029, 37.768911], [-122.40528, 37.767914], [-122.405032, 37.766635], [-122.405014, 37.765952], [-122.404982, 37.76467], [-122.405465, 37.762525], [-122.406285, 37.760887], [-122.406249, 37.759519], [-122.405147, 37.758511], [-122.403943, 37.757761], [-122.403271, 37.756746], [-122.402891, 37.754529], [-122.403019, 37.751107], [-122.403576, 37.749388], [-122.404159, 37.749379], [-122.405767, 37.749097], [-122.407579, 37.748383], [-122.411344, 37.748237], [-122.415005, 37.748263], [-122.418126, 37.748212], [-122.420171, 37.748179], [-122.421568, 37.74807], [-122.423181, 37.747959], [-122.424756, 37.747849]]]]
    },
    "properties": {
      "neighbourhood": "Mission",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.452524, 37.723167], [-122.456948, 37.724019], [-122.461521, 37.725037], [-122.465623, 37.726446], [-122.466468, 37.727144], [-122.467593, 37.728], [-122.4681, 37.728922], [-122.468529, 37.729517], [-122.470206, 37.730419], [-122.47171, 37.731043], [-122.471507, 37.732695], [-122.471352, 37.734668], [-122.47104, 37.735877], [-122.470443, 37.736762], [-122.469028, 37.737935], [-122.469641, 37.738545], [-122.469948, 37.73885], [-122.470022, 37.739068], [-122.469959, 37.739288], [-122.470509, 37.747049], [-122.46941, 37.747176], [-122.469506, 37.748954], [-122.46632, 37.749088], [-122.46663, 37.752819], [-122.463332, 37.75293], [-122.462757, 37.752438], [-122.461609, 37.751509], [-122.46142, 37.751562], [-122.461391, 37.751414], [-122.460814, 37.750439], [-122.460664, 37.750003], [-122.459744, 37.749088], [-122.458754, 37.74812], [-122.458745, 37.747792], [-122.459077, 37.747294], [-122.458648, 37.746699], [-122.457963, 37.746875], [-122.4563, 37.746519], [-122.454774, 37.746161], [-122.453797, 37.745685], [-122.452418, 37.745653], [-122.451866, 37.745608], [-122.451701, 37.745454], [-122.450947, 37.744748], [-122.449805, 37.743234], [-122.449176, 37.742916], [-122.447515, 37.742616], [-122.446685, 37.74252], [-122.44619, 37.742036], [-122.446101, 37.741271], [-122.445124, 37.740795], [-122.444575, 37.740858], [-122.443867, 37.740159], [-122.442685, 37.73974], [-122.442397, 37.739253], [-122.442655, 37.738592], [-122.442355, 37.737667], [-122.442549, 37.737171], [-122.443429, 37.736555], [-122.443836, 37.736329], [-122.443894, 37.73589], [-122.443403, 37.73557], [-122.442242, 37.735972], [-122.441746, 37.735902], [-122.44206, 37.734629], [-122.445288, 37.734576], [-122.445672, 37.733822], [-122.446894, 37.734229], [-122.448376, 37.734311], [-122.44823, 37.733886], [-122.452534, 37.733815], [-122.453465, 37.733372], [-122.453375, 37.729954], [-122.452431, 37.729862], [-122.452215, 37.726767], [-122.452545, 37.723983], [-122.452524, 37.723167]]]]
    },
    "properties": {
      "neighbourhood": "West of Twin Peaks",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.446457, 37.775805], [-122.454635, 37.774767], [-122.454691, 37.774696], [-122.454706, 37.774766], [-122.465068, 37.773423], [-122.46991, 37.77323], [-122.477816, 37.77287], [-122.478735, 37.786898], [-122.478282, 37.786864], [-122.475543, 37.78691], [-122.465782, 37.787129], [-122.465955, 37.788353], [-122.4626, 37.789041], [-122.462539, 37.786737], [-122.45924, 37.786848], [-122.45888, 37.781221], [-122.455721, 37.781329], [-122.452852, 37.781767], [-122.450611, 37.782028], [-122.448931, 37.782278], [-122.447378, 37.782383], [-122.447519, 37.782023], [-122.447642, 37.781352], [-122.447164, 37.779185], [-122.446457, 37.775805]]]]
    },
    "properties": {
      "neighbourhood": "Inner Richmond",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.446806, 37.805401], [-122.44678, 37.805405], [-122.446462, 37.805444], [-122.445989, 37.805505], [-122.445995, 37.805521], [-122.445969, 37.805508], [-122.445278, 37.805602], [-122.44449, 37.805698], [-122.443752, 37.805792], [-122.443026, 37.805886], [-122.442516, 37.805951], [-122.442428, 37.806051], [-122.442522, 37.806508], [-122.442586, 37.806579], [-122.443139, 37.806512], [-122.4435, 37.806469], [-122.443668, 37.806463], [-122.443849, 37.806442], [-122.443967, 37.806433], [-122.444009, 37.806429], [-122.444015, 37.806454], [-122.443976, 37.806459], [-122.443855, 37.806474], [-122.443859, 37.806494], [-122.443718, 37.806527], [-122.443664, 37.806537], [-122.443642, 37.806542], [-122.44361, 37.806549], [-122.443569, 37.806553], [-122.442907, 37.806633], [-122.442904, 37.806721], [-122.442884, 37.806645], [-122.442865, 37.806656], [-122.44262, 37.806691], [-122.442578, 37.806706], [-122.44256, 37.806712], [-122.442535, 37.806724], [-122.442513, 37.806741], [-122.442505, 37.806755], [-122.442502, 37.806773], [-122.442505, 37.806802], [-122.442506, 37.806841], [-122.4425, 37.806873], [-122.442514, 37.806886], [-122.442546, 37.807048], [-122.442553, 37.807065], [-122.442548, 37.807084], [-122.442538, 37.807099], [-122.442522, 37.807114], [-122.442503, 37.807125], [-122.44248, 37.807131], [-122.44246, 37.807134], [-122.442439, 37.807132], [-122.442418, 37.807127], [-122.442399, 37.807119], [-122.44238, 37.807104], [-122.442364, 37.807085], [-122.442356, 37.807067], [-122.442353, 37.807048], [-122.442354, 37.80703], [-122.442326, 37.806851], [-122.442321, 37.806832], [-122.44231, 37.806812], [-122.442296, 37.806798], [-122.442276, 37.806785], [-122.442252, 37.806779], [-122.442261, 37.806815], [-122.442335, 37.807192], [-122.442575, 37.807155], [-122.44258, 37.807182], [-122.442316, 37.807223], [-122.442297, 37.80712], [-122.44225, 37.80713], [-122.442201, 37.807247], [-122.442224, 37.807141], [-122.442177, 37.807146], [-122.442129, 37.807262], [-122.442156, 37.807164], [-122.442142, 37.807154], [-122.442111, 37.80716], [-122.442063, 37.807276], [-122.442089, 37.80718], [-122.442074, 37.807168], [-122.441952, 37.807195], [-122.441902, 37.807314], [-122.441931, 37.807213], [-122.441916, 37.807203], [-122.44183, 37.807221], [-122.441794, 37.807305], [-122.441803, 37.807234], [-122.441714, 37.807247], [-122.441678, 37.807328], [-122.441686, 37.807259], [-122.441591, 37.807273], [-122.441555, 37.807354], [-122.441565, 37.807284], [-122.441529, 37.807287], [-122.441495, 37.807363], [-122.441508, 37.807305], [-122.441493, 37.807295], [-122.441459, 37.807302], [-122.441423, 37.807383], [-122.441432, 37.807314], [-122.441347, 37.807326], [-122.441316, 37.807394], [-122.441323, 37.807336], [-122.441242, 37.807349], [-122.44121, 37.807418], [-122.441215, 37.807361], [-122.441129, 37.807374], [-122.441098, 37.807441], [-122.441101, 37.807386], [-122.441008, 37.8074], [-122.440982, 37.807467], [-122.440991, 37.80741], [-122.440966, 37.807311], [-122.441, 37.807376], [-122.441091, 37.807358], [-122.441078, 37.807281], [-122.441106, 37.807346], [-122.441122, 37.807355], [-122.441202, 37.807334], [-122.441188, 37.807256], [-122.441216, 37.807319], [-122.441235, 37.807331], [-122.441307, 37.807309], [-122.441296, 37.807234], [-122.441331, 37.807306], [-122.441408, 37.807289], [-122.441396, 37.807213], [-122.441424, 37.807277], [-122.44144, 37.807286], [-122.441505, 37.807272], [-122.441518, 37.807259], [-122.441538, 37.807265], [-122.441615, 37.807244], [-122.441606, 37.807181], [-122.441637, 37.807238], [-122.441715, 37.807227], [-122.441729, 37.807212], [-122.44175, 37.807219], [-122.441815, 37.807205], [-122.44183, 37.807191], [-122.441849, 37.807197], [-122.441916, 37.807178], [-122.441908, 37.807116], [-122.441938, 37.807174], [-122.442004, 37.807164], [-122.442017, 37.80715], [-122.442038, 37.807156], [-122.442093, 37.807144], [-122.442109, 37.807129], [-122.44213, 37.807136], [-122.442193, 37.807119], [-122.442184, 37.807058], [-122.442214, 37.807112], [-122.442293, 37.807101], [-122.442243, 37.806837], [-122.442164, 37.806849], [-122.442161, 37.806912], [-122.442142, 37.806853], [-122.442072, 37.806856], [-122.442057, 37.806868], [-122.442039, 37.80686], [-122.441972, 37.806872], [-122.441969, 37.806936], [-122.441949, 37.806876], [-122.441882, 37.806878], [-122.441867, 37.806891], [-122.441847, 37.806882], [-122.441786, 37.806889], [-122.441769, 37.806902], [-122.44175, 37.806893], [-122.441684, 37.806901], [-122.441666, 37.806915], [-122.441646, 37.806905], [-122.441568, 37.806919], [-122.441564, 37.806983], [-122.441544, 37.806921], [-122.441466, 37.806925], [-122.44145, 37.806939], [-122.44143, 37.80693], [-122.441365, 37.806941], [-122.441351, 37.806955], [-122.441327, 37.806946], [-122.441309, 37.806954], [-122.441311, 37.807032], [-122.441293, 37.806965], [-122.441268, 37.806956], [-122.441246, 37.80697], [-122.441225, 37.806962], [-122.441151, 37.806972], [-122.441136, 37.806985], [-122.441116, 37.806977], [-122.441038, 37.806988], [-122.441023, 37.807001], [-122.441003, 37.806993], [-122.440919, 37.80701], [-122.440919, 37.807081], [-122.440896, 37.806988], [-122.441218, 37.806943], [-122.441262, 37.806937], [-122.441445, 37.806909], [-122.442241, 37.806818], [-122.442229, 37.806781], [-122.442146, 37.806785], [-122.442128, 37.806792], [-122.442106, 37.806799], [-122.442079, 37.806806], [-122.442051, 37.806812], [-122.442022, 37.806816], [-122.441996, 37.806819], [-122.441962, 37.80682], [-122.441933, 37.806819], [-122.441905, 37.806824], [-122.441883, 37.806829], [-122.441861, 37.806833], [-122.441838, 37.806837], [-122.44181, 37.80684], [-122.441772, 37.806841], [-122.441739, 37.80684], [-122.441711, 37.806845], [-122.441692, 37.80685], [-122.441672, 37.806854], [-122.441653, 37.806858], [-122.441633, 37.806861], [-122.441614, 37.806863], [-122.441594, 37.806865], [-122.441566, 37.806867], [-122.441441, 37.806882], [-122.441373, 37.806885], [-122.441306, 37.806883], [-122.441275, 37.8069], [-122.441242, 37.806896], [-122.441194, 37.806917], [-122.44111, 37.806924], [-122.441043, 37.806926], [-122.440998, 37.806934], [-122.440919, 37.806937], [-122.4409, 37.806947], [-122.440782, 37.806951], [-122.440679, 37.806957], [-122.440547, 37.806968], [-122.440468, 37.806989], [-122.440371, 37.806996], [-122.440135, 37.807017], [-122.439897, 37.80705], [-122.439672, 37.807088], [-122.439538, 37.807116], [-122.43941, 37.80713], [-122.43924, 37.80714], [-122.439104, 37.807152], [-122.438767, 37.807201], [-122.438299, 37.807257], [-122.437961, 37.807297], [-122.437689, 37.807345], [-122.437515, 37.807372], [-122.437376, 37.807394], [-122.437259, 37.807408], [-122.437146, 37.807412], [-122.437032, 37.807433], [-122.436886, 37.807471], [-122.436715, 37.807492], [-122.436614, 37.807523], [-122.436564, 37.807532], [-122.436508, 37.80752], [-122.436299, 37.807544], [-122.43624, 37.807559], [-122.436155, 37.807557], [-122.435982, 37.807557], [-122.435829, 37.80757], [-122.435859, 37.807692], [-122.433925, 37.807945], [-122.433814, 37.807913], [-122.433647, 37.808184], [-122.43336, 37.808074], [-122.433418, 37.808091], [-122.433469, 37.808109], [-122.433526, 37.808129], [-122.433578, 37.808147], [-122.433639, 37.808165], [-122.433666, 37.808117], [-122.433691, 37.808075], [-122.433715, 37.808034], [-122.433739, 37.807993], [-122.433764, 37.807952], [-122.433794, 37.807907], [-122.433757, 37.807889], [-122.433765, 37.807874], [-122.433933, 37.80793], [-122.435839, 37.807681], [-122.435832, 37.807653], [-122.435804, 37.807573], [-122.435783, 37.807571], [-122.435762, 37.807564], [-122.435741, 37.807551], [-122.435725, 37.80753], [-122.43572, 37.807514], [-122.435679, 37.807411], [-122.435671, 37.807321], [-122.435657, 37.807254], [-122.435585, 37.806914], [-122.435555, 37.806907], [-122.435566, 37.806995], [-122.435535, 37.806906], [-122.435563, 37.806888], [-122.435541, 37.806876], [-122.435513, 37.806869], [-122.435345, 37.806882], [-122.435123, 37.806899], [-122.434873, 37.806933], [-122.434424, 37.806994], [-122.43428, 37.807005], [-122.43426, 37.807004], [-122.43424, 37.807002], [-122.434219, 37.806997], [-122.434193, 37.806988], [-122.434166, 37.806973], [-122.434151, 37.806961], [-122.434138, 37.806947], [-122.434127, 37.806932], [-122.434123, 37.806902], [-122.434095, 37.806848], [-122.434078, 37.80682], [-122.434068, 37.806798], [-122.43406, 37.806777], [-122.434054, 37.806758], [-122.43405, 37.806738], [-122.433998, 37.806744], [-122.433968, 37.806765], [-122.43394, 37.806753], [-122.433868, 37.806762], [-122.433846, 37.806781], [-122.433818, 37.806768], [-122.433759, 37.806775], [-122.433737, 37.806794], [-122.433709, 37.806781], [-122.433653, 37.806788], [-122.433632, 37.806807], [-122.433604, 37.806795], [-122.433555, 37.806801], [-122.433533, 37.80682], [-122.433506, 37.806807], [-122.43345, 37.806814], [-122.433428, 37.806833], [-122.4334, 37.80682], [-122.433354, 37.806826], [-122.433333, 37.806844], [-122.433305, 37.806832], [-122.433259, 37.806837], [-122.433238, 37.806856], [-122.43321, 37.806844], [-122.433158, 37.80685], [-122.433136, 37.806869], [-122.433108, 37.806856], [-122.433056, 37.806863], [-122.433035, 37.806882], [-122.433007, 37.806869], [-122.432924, 37.806879], [-122.43292, 37.806863], [-122.433006, 37.806852], [-122.433024, 37.806834], [-122.433049, 37.806847], [-122.433111, 37.806839], [-122.43313, 37.806821], [-122.433155, 37.806834], [-122.433213, 37.806827], [-122.433232, 37.806808], [-122.433256, 37.806821], [-122.433316, 37.806814], [-122.433335, 37.806796], [-122.433359, 37.806808], [-122.433416, 37.806801], [-122.433435, 37.806783], [-122.433459, 37.806796], [-122.433517, 37.806789], [-122.433535, 37.806771], [-122.43356, 37.806783], [-122.433611, 37.806777], [-122.43363, 37.806759], [-122.433655, 37.806772], [-122.433708, 37.806765], [-122.433726, 37.806747], [-122.433751, 37.80676], [-122.433798, 37.806754], [-122.433817, 37.806736], [-122.433841, 37.806748], [-122.433896, 37.806741], [-122.433915, 37.806723], [-122.433939, 37.806736], [-122.434014, 37.806726], [-122.434047, 37.806718], [-122.434047, 37.806698], [-122.434047, 37.806677], [-122.434016, 37.806489], [-122.434007, 37.806474], [-122.433999, 37.806456], [-122.433995, 37.806441], [-122.433961, 37.806431], [-122.43399, 37.806416], [-122.433989, 37.806393], [-122.433993, 37.806367], [-122.433982, 37.806335], [-122.433943, 37.806226], [-122.433951, 37.806183], [-122.433938, 37.806124], [-122.433873, 37.805817], [-122.433851, 37.805719], [-122.433841, 37.805704], [-122.43383, 37.805689], [-122.433814, 37.805673], [-122.433796, 37.805656], [-122.433774, 37.80564], [-122.433751, 37.805626], [-122.433732, 37.805617], [-122.433711, 37.805608], [-122.43369, 37.805601], [-122.433671, 37.805596], [-122.433651, 37.805592], [-122.43362, 37.805588], [-122.433594, 37.805587], [-122.433573, 37.805587], [-122.43355, 37.805588], [-122.433525, 37.805592], [-122.433505, 37.805596], [-122.43271, 37.805725], [-122.432684, 37.805738], [-122.432663, 37.805751], [-122.432645, 37.805767], [-122.432632, 37.805782], [-122.43262, 37.805798], [-122.432611, 37.805814], [-122.432606, 37.805829], [-122.432602, 37.805845], [-122.432501, 37.805941], [-122.432395, 37.805972], [-122.432516, 37.80596], [-122.432629, 37.805873], [-122.432643, 37.805884], [-122.432527, 37.805974], [-122.432403, 37.806], [-122.43239, 37.806073], [-122.432403, 37.806109], [-122.432491, 37.806359], [-122.432449, 37.806367], [-122.432521, 37.80658], [-122.432498, 37.806585], [-122.432425, 37.806372], [-122.432402, 37.806376], [-122.432302, 37.806082], [-122.432369, 37.806071], [-122.432381, 37.806005], [-122.432353, 37.80601], [-122.43235, 37.805981], [-122.43232, 37.805983], [-122.432302, 37.805994], [-122.43228, 37.806007], [-122.432257, 37.806018], [-122.432227, 37.806023], [-122.432194, 37.80604], [-122.432179, 37.806059], [-122.432171, 37.806078], [-122.432165, 37.8061], [-122.43217, 37.806118], [-122.432186, 37.806148], [-122.43221, 37.806153], [-122.432227, 37.806214], [-122.432208, 37.806231], [-122.432203, 37.806258], [-122.432206, 37.806291], [-122.432221, 37.806338], [-122.432307, 37.806805], [-122.432383, 37.807104], [-122.432565, 37.80848], [-122.432611, 37.808498], [-122.432595, 37.808512], [-122.43234, 37.808512], [-122.432079, 37.807223], [-122.432, 37.807178], [-122.431443, 37.807251], [-122.431386, 37.807314], [-122.431728, 37.809024], [-122.431341, 37.809057], [-122.430995, 37.807366], [-122.430916, 37.80732], [-122.430361, 37.807393], [-122.430303, 37.807457], [-122.430622, 37.809167], [-122.430108, 37.809215], [-122.429835, 37.807825], [-122.429263, 37.807903], [-122.42927, 37.80797], [-122.428237, 37.808406], [-122.427001, 37.808109], [-122.426996, 37.808141], [-122.427546, 37.808641], [-122.428014, 37.80857], [-122.428043, 37.808705], [-122.427533, 37.808783], [-122.427524, 37.808739], [-122.427301, 37.808773], [-122.427287, 37.808709], [-122.42749, 37.808678], [-122.42691, 37.808151], [-122.426839, 37.808113], [-122.42682, 37.808122], [-122.426762, 37.80796], [-122.426032, 37.806912], [-122.425599, 37.806473], [-122.424788, 37.802304], [-122.423822, 37.797606], [-122.445588, 37.794874], [-122.446702, 37.79474], [-122.447822, 37.801591], [-122.448242, 37.801529], [-122.449096, 37.801961], [-122.449537, 37.802678], [-122.44955, 37.80318], [-122.449287, 37.803853], [-122.448944, 37.804194], [-122.448458, 37.804425], [-122.448473, 37.804982], [-122.448332, 37.804985], [-122.448577, 37.806263], [-122.447876, 37.80633], [-122.447983, 37.806972], [-122.447835, 37.807052], [-122.447181, 37.807477], [-122.446638, 37.807525], [-122.446477, 37.807517], [-122.445257, 37.807626], [-122.444832, 37.807612], [-122.444811, 37.80761], [-122.44479, 37.807607], [-122.443762, 37.807713], [-122.443685, 37.807722], [-122.442712, 37.807973], [-122.442626, 37.808004], [-122.442524, 37.808024], [-122.442354, 37.808043], [-122.441768, 37.808105], [-122.441537, 37.808127], [-122.4412, 37.808168], [-122.440951, 37.808196], [-122.440666, 37.808282], [-122.440646, 37.808292], [-122.440627, 37.808301], [-122.440608, 37.808312], [-122.440589, 37.808322], [-122.44057, 37.808333], [-122.440552, 37.808345], [-122.440534, 37.808357], [-122.440511, 37.808373], [-122.440488, 37.80839], [-122.440467, 37.808408], [-122.440446, 37.808426], [-122.44043, 37.80844], [-122.440416, 37.808454], [-122.440397, 37.808474], [-122.440383, 37.808488], [-122.440369, 37.808505], [-122.440222, 37.808671], [-122.440123, 37.808754], [-122.440032, 37.808833], [-122.439928, 37.808779], [-122.440278, 37.808222], [-122.440296, 37.808207], [-122.440314, 37.808195], [-122.44033, 37.808185], [-122.440346, 37.808176], [-122.440366, 37.808166], [-122.44039, 37.808157], [-122.440414, 37.808149], [-122.440436, 37.808143], [-122.440463, 37.808139], [-122.440632, 37.808107], [-122.440778, 37.808098], [-122.441785, 37.807988], [-122.441816, 37.807985], [-122.442321, 37.807932], [-122.442377, 37.807918], [-122.442423, 37.80788], [-122.442454, 37.807816], [-122.442448, 37.807789], [-122.442373, 37.807801], [-122.442345, 37.807813], [-122.442347, 37.807836], [-122.442033, 37.807875], [-122.442009, 37.807734], [-122.442027, 37.807721], [-122.442053, 37.807847], [-122.442208, 37.807834], [-122.442218, 37.807819], [-122.442199, 37.807677], [-122.442243, 37.807823], [-122.442318, 37.807813], [-122.442293, 37.807666], [-122.442312, 37.807656], [-122.442337, 37.80778], [-122.442361, 37.807783], [-122.442405, 37.807728], [-122.442385, 37.807783], [-122.442444, 37.807774], [-122.442405, 37.807643], [-122.442685, 37.807596], [-122.442713, 37.807793], [-122.442763, 37.807809], [-122.442788, 37.807806], [-122.442903, 37.807794], [-122.442998, 37.807774], [-122.443056, 37.807754], [-122.443128, 37.807744], [-122.443202, 37.807724], [-122.44326, 37.807705], [-122.4433, 37.807697], [-122.443434, 37.807672], [-122.443672, 37.807598], [-122.443659, 37.807485], [-122.443881, 37.807439], [-122.44418, 37.807383], [-122.444339, 37.807346], [-122.444477, 37.807304], [-122.444798, 37.807204], [-122.445257, 37.807071], [-122.445222, 37.807016], [-122.445091, 37.807031], [-122.445057, 37.807025], [-122.445159, 37.807007], [-122.445178, 37.806986], [-122.445117, 37.806952], [-122.444841, 37.806985], [-122.445027, 37.806953], [-122.445058, 37.806919], [-122.445006, 37.806889], [-122.444888, 37.8069], [-122.444877, 37.806834], [-122.444618, 37.806865], [-122.444919, 37.806817], [-122.445008, 37.806867], [-122.444974, 37.8068], [-122.444993, 37.806794], [-122.445039, 37.806884], [-122.445122, 37.806931], [-122.445046, 37.806781], [-122.445065, 37.806775], [-122.445153, 37.806949], [-122.445231, 37.806992], [-122.445356, 37.806955], [-122.445248, 37.806723], [-122.445267, 37.806717], [-122.445375, 37.80695], [-122.445469, 37.806922], [-122.445353, 37.806692], [-122.445372, 37.806686], [-122.445489, 37.806916], [-122.445562, 37.806894], [-122.445446, 37.806665], [-122.445465, 37.806659], [-122.445581, 37.806889], [-122.445704, 37.806852], [-122.445652, 37.806749], [-122.445653, 37.806727], [-122.445896, 37.806816], [-122.445736, 37.806863], [-122.445754, 37.806897], [-122.446385, 37.806715], [-122.446259, 37.806718], [-122.446193, 37.806738], [-122.44617, 37.806727], [-122.445982, 37.806783], [-122.44597, 37.806763], [-122.445597, 37.806626], [-122.445607, 37.806611], [-122.446001, 37.806756], [-122.44615, 37.806712], [-122.445708, 37.80655], [-122.445718, 37.806535], [-122.446177, 37.806704], [-122.446283, 37.806673], [-122.446005, 37.8065], [-122.44602, 37.806488], [-122.446306, 37.806667], [-122.446421, 37.806633], [-122.446152, 37.806465], [-122.446167, 37.806453], [-122.446443, 37.806626], [-122.446554, 37.806593], [-122.446392, 37.806492], [-122.446407, 37.806481], [-122.446541, 37.806564], [-122.446531, 37.806546], [-122.44662, 37.80652], [-122.446643, 37.806584], [-122.446711, 37.806569], [-122.446939, 37.806492], [-122.44695, 37.806511], [-122.446721, 37.806589], [-122.446734, 37.806615], [-122.446997, 37.806534], [-122.44699, 37.806444], [-122.446973, 37.806427], [-122.446988, 37.806409], [-122.446984, 37.806388], [-122.446968, 37.806372], [-122.446979, 37.806357], [-122.446973, 37.806324], [-122.446767, 37.806337], [-122.446941, 37.806316], [-122.446957, 37.806296], [-122.446942, 37.806222], [-122.446919, 37.806207], [-122.446935, 37.806186], [-122.44692, 37.806114], [-122.446902, 37.8061], [-122.446914, 37.806085], [-122.446909, 37.806062], [-122.446892, 37.806051], [-122.446904, 37.806033], [-122.446899, 37.806011], [-122.446881, 37.805997], [-122.446894, 37.805981], [-122.446873, 37.805905], [-122.44667, 37.805915], [-122.44686, 37.805891], [-122.446874, 37.80588], [-122.44686, 37.805805], [-122.446843, 37.805793], [-122.446854, 37.805777], [-122.44685, 37.805753], [-122.446835, 37.805742], [-122.446845, 37.805727], [-122.446841, 37.805706], [-122.446823, 37.805692], [-122.446835, 37.805677], [-122.446832, 37.805658], [-122.446815, 37.805646], [-122.446825, 37.805624], [-122.446804, 37.805604], [-122.446818, 37.805586], [-122.446808, 37.805536], [-122.446789, 37.805523], [-122.446801, 37.8055], [-122.446788, 37.805489], [-122.446701, 37.805499], [-122.446699, 37.805482], [-122.446794, 37.805472], [-122.44678, 37.805405], [-122.446818, 37.805469], [-122.446936, 37.806057], [-122.446992, 37.80631], [-122.447018, 37.806445], [-122.447025, 37.806546], [-122.447543, 37.8064], [-122.447488, 37.806191], [-122.447476, 37.806059], [-122.447455, 37.805948], [-122.447415, 37.805874], [-122.447393, 37.805859], [-122.447394, 37.805835], [-122.447413, 37.805821], [-122.447407, 37.805719], [-122.44738, 37.80558], [-122.447346, 37.805432], [-122.447315, 37.805309], [-122.447067, 37.805335], [-122.447051, 37.805351], [-122.446839, 37.805378], [-122.446806, 37.805401]], [[-122.445837, 37.806813], [-122.445677, 37.806754], [-122.445724, 37.806846], [-122.445837, 37.806813]], [[-122.446588, 37.806656], [-122.446564, 37.806611], [-122.446287, 37.806692], [-122.446416, 37.806689], [-122.446458, 37.806675], [-122.446473, 37.80669], [-122.446502, 37.806681], [-122.446588, 37.806656]], [[-122.445747, 37.806927], [-122.445716, 37.806869], [-122.445245, 37.807009], [-122.445276, 37.807065], [-122.445377, 37.807036], [-122.445747, 37.806927]]], [[[-122.443352, 37.80605], [-122.443328, 37.80595], [-122.4433, 37.805942], [-122.443275, 37.805955], [-122.443253, 37.805949], [-122.443232, 37.805951], [-122.443214, 37.805964], [-122.443183, 37.805958], [-122.443156, 37.805971], [-122.443135, 37.805964], [-122.443059, 37.805973], [-122.443044, 37.805986], [-122.443017, 37.805979], [-122.442988, 37.805982], [-122.442949, 37.805987], [-122.442933, 37.805999], [-122.442909, 37.805992], [-122.44284, 37.806001], [-122.442823, 37.806013], [-122.442799, 37.806006], [-122.442734, 37.806014], [-122.442715, 37.806028], [-122.44269, 37.80602], [-122.442636, 37.806027], [-122.442618, 37.80604], [-122.442592, 37.806032], [-122.442552, 37.806037], [-122.442548, 37.806018], [-122.443037, 37.805957], [-122.443388, 37.805912], [-122.44376, 37.805867], [-122.443958, 37.805839], [-122.444499, 37.805772], [-122.444669, 37.805751], [-122.445293, 37.805671], [-122.445999, 37.80558], [-122.446546, 37.80551], [-122.44655, 37.805529], [-122.446519, 37.805533], [-122.446496, 37.805549], [-122.446465, 37.80554], [-122.446444, 37.805554], [-122.446411, 37.805547], [-122.446384, 37.805561], [-122.44636, 37.805553], [-122.446336, 37.805556], [-122.446319, 37.805568], [-122.446296, 37.805561], [-122.446276, 37.805564], [-122.446256, 37.805578], [-122.446233, 37.805569], [-122.446149, 37.80558], [-122.44613, 37.805594], [-122.446104, 37.805586], [-122.446082, 37.805589], [-122.446064, 37.805602], [-122.446039, 37.805594], [-122.446018, 37.805597], [-122.446001, 37.805609], [-122.445977, 37.805602], [-122.445951, 37.805606], [-122.445935, 37.805618], [-122.445909, 37.805611], [-122.445885, 37.805614], [-122.445868, 37.805626], [-122.445845, 37.805619], [-122.445814, 37.805623], [-122.445798, 37.805635], [-122.445773, 37.805629], [-122.445751, 37.805631], [-122.445732, 37.805645], [-122.445709, 37.805637], [-122.445683, 37.80564], [-122.445663, 37.805654], [-122.445638, 37.805646], [-122.445605, 37.80565], [-122.445589, 37.805662], [-122.445566, 37.805655], [-122.445532, 37.80566], [-122.445513, 37.805673], [-122.445489, 37.805665], [-122.445463, 37.805669], [-122.445443, 37.805682], [-122.445421, 37.805674], [-122.445392, 37.805678], [-122.445369, 37.805692], [-122.445347, 37.805683], [-122.445312, 37.805688], [-122.445297, 37.805698], [-122.445276, 37.805693], [-122.445243, 37.805697], [-122.445225, 37.805708], [-122.445204, 37.805702], [-122.445167, 37.805711], [-122.445178, 37.805832], [-122.445143, 37.805713], [-122.445101, 37.805719], [-122.445113, 37.80584], [-122.445077, 37.805722], [-122.445034, 37.805727], [-122.445046, 37.805848], [-122.44501, 37.805731], [-122.444904, 37.805745], [-122.444915, 37.805866], [-122.44488, 37.805747], [-122.444843, 37.805752], [-122.444855, 37.805875], [-122.444819, 37.805755], [-122.444782, 37.805756], [-122.444767, 37.805766], [-122.444747, 37.805761], [-122.444709, 37.805769], [-122.444719, 37.805895], [-122.444685, 37.805773], [-122.444649, 37.805777], [-122.444658, 37.805903], [-122.444625, 37.80578], [-122.444585, 37.805781], [-122.44457, 37.805791], [-122.444549, 37.805786], [-122.444518, 37.805789], [-122.444502, 37.8058], [-122.444482, 37.805794], [-122.444452, 37.805798], [-122.444436, 37.805808], [-122.444413, 37.805802], [-122.44439, 37.805805], [-122.444374, 37.805816], [-122.444353, 37.80581], [-122.444323, 37.805817], [-122.444332, 37.805924], [-122.444307, 37.805826], [-122.444289, 37.805818], [-122.444266, 37.805821], [-122.44425, 37.805831], [-122.444229, 37.805825], [-122.444207, 37.805828], [-122.44419, 37.805839], [-122.444167, 37.805833], [-122.444146, 37.805836], [-122.444129, 37.805846], [-122.444109, 37.80584], [-122.444026, 37.80585], [-122.444008, 37.805862], [-122.443987, 37.805855], [-122.443961, 37.805859], [-122.443943, 37.80587], [-122.443912, 37.805866], [-122.443887, 37.805878], [-122.443864, 37.805872], [-122.443782, 37.805884], [-122.443764, 37.805895], [-122.443743, 37.805889], [-122.443715, 37.805892], [-122.4437, 37.805903], [-122.443677, 37.805897], [-122.443654, 37.805899], [-122.443637, 37.805911], [-122.443614, 37.805904], [-122.443593, 37.805907], [-122.443576, 37.805918], [-122.443544, 37.805913], [-122.443518, 37.805925], [-122.443495, 37.805918], [-122.443472, 37.805921], [-122.443457, 37.805932], [-122.443434, 37.805926], [-122.443405, 37.805933], [-122.443412, 37.806043], [-122.443388, 37.805942], [-122.443369, 37.805934], [-122.443344, 37.80594], [-122.443352, 37.80605]]], [[[-122.442655, 37.80647], [-122.442668, 37.806457], [-122.442687, 37.806467], [-122.442708, 37.806465], [-122.442723, 37.806447], [-122.442754, 37.80646], [-122.442777, 37.806441], [-122.4428, 37.806456], [-122.442873, 37.806448], [-122.44289, 37.80643], [-122.44292, 37.806443], [-122.442944, 37.806424], [-122.442974, 37.806438], [-122.442997, 37.806419], [-122.443019, 37.806433], [-122.443039, 37.806431], [-122.443055, 37.806413], [-122.443077, 37.806427], [-122.443098, 37.806425], [-122.443115, 37.806407], [-122.443137, 37.806421], [-122.443157, 37.806419], [-122.443173, 37.806403], [-122.443193, 37.806416], [-122.443215, 37.806413], [-122.443229, 37.806399], [-122.443248, 37.80641], [-122.44333, 37.806402], [-122.443345, 37.806385], [-122.443366, 37.806398], [-122.443446, 37.80639], [-122.443462, 37.806374], [-122.44348, 37.806386], [-122.443505, 37.806384], [-122.44352, 37.806369], [-122.443538, 37.80638], [-122.443563, 37.806378], [-122.443577, 37.806362], [-122.443598, 37.806374], [-122.443677, 37.806366], [-122.443689, 37.806353], [-122.443709, 37.806363], [-122.443796, 37.806354], [-122.44381, 37.806338], [-122.443831, 37.80635], [-122.443862, 37.806347], [-122.443875, 37.806332], [-122.443896, 37.806344], [-122.443925, 37.806336], [-122.44392, 37.806229], [-122.44394, 37.806322], [-122.443956, 37.806338], [-122.443984, 37.806335], [-122.443997, 37.806319], [-122.444035, 37.806329], [-122.444057, 37.806313], [-122.444077, 37.806324], [-122.444107, 37.80632], [-122.444121, 37.806306], [-122.444138, 37.806316], [-122.444164, 37.806313], [-122.444178, 37.806297], [-122.444198, 37.806309], [-122.444226, 37.806305], [-122.444239, 37.80629], [-122.444258, 37.806301], [-122.444287, 37.806297], [-122.444302, 37.806285], [-122.444321, 37.806293], [-122.444414, 37.806276], [-122.444405, 37.806167], [-122.444437, 37.806272], [-122.444537, 37.806265], [-122.444553, 37.806252], [-122.444572, 37.80626], [-122.444668, 37.806244], [-122.444662, 37.806143], [-122.444685, 37.806233], [-122.444699, 37.806244], [-122.444729, 37.80624], [-122.444744, 37.806226], [-122.444774, 37.806234], [-122.444798, 37.806219], [-122.44482, 37.806228], [-122.444886, 37.80622], [-122.4449, 37.806208], [-122.44492, 37.806216], [-122.444987, 37.806207], [-122.445001, 37.806194], [-122.445021, 37.806203], [-122.445093, 37.806193], [-122.445107, 37.806181], [-122.445127, 37.806189], [-122.445203, 37.806179], [-122.445218, 37.806166], [-122.445237, 37.806175], [-122.445262, 37.806166], [-122.44526, 37.806087], [-122.445283, 37.806167], [-122.445311, 37.806165], [-122.445325, 37.806152], [-122.445357, 37.806159], [-122.445382, 37.806145], [-122.4454, 37.806154], [-122.445424, 37.806151], [-122.445441, 37.806137], [-122.445459, 37.806146], [-122.445481, 37.806143], [-122.445497, 37.806129], [-122.445517, 37.806139], [-122.445547, 37.806129], [-122.445544, 37.806058], [-122.445566, 37.806166], [-122.445545, 37.806155], [-122.445523, 37.806157], [-122.445509, 37.806171], [-122.445488, 37.806162], [-122.445466, 37.806165], [-122.44545, 37.806178], [-122.445431, 37.806169], [-122.445353, 37.806179], [-122.445335, 37.806194], [-122.445316, 37.806184], [-122.445245, 37.806193], [-122.445227, 37.806208], [-122.445208, 37.806198], [-122.445188, 37.8062], [-122.445169, 37.806218], [-122.44514, 37.806207], [-122.445119, 37.806221], [-122.4451, 37.806212], [-122.445031, 37.806221], [-122.445014, 37.806236], [-122.444986, 37.806227], [-122.444962, 37.806243], [-122.444933, 37.806233], [-122.444909, 37.806249], [-122.444889, 37.806239], [-122.444824, 37.806247], [-122.444807, 37.806263], [-122.444785, 37.806252], [-122.444722, 37.80626], [-122.444706, 37.806277], [-122.444681, 37.806266], [-122.44462, 37.806274], [-122.444604, 37.806289], [-122.444583, 37.806278], [-122.444519, 37.806287], [-122.444501, 37.806302], [-122.44448, 37.806292], [-122.444387, 37.806304], [-122.444368, 37.806322], [-122.444334, 37.80631], [-122.444304, 37.806331], [-122.44428, 37.806317], [-122.444255, 37.806321], [-122.44424, 37.806336], [-122.444217, 37.806326], [-122.444127, 37.806337], [-122.444109, 37.806354], [-122.444086, 37.806342], [-122.444035, 37.806349], [-122.443946, 37.806358], [-122.443123, 37.806442], [-122.442614, 37.806494], [-122.442611, 37.806475], [-122.442655, 37.80647]]], [[[-122.442904, 37.806721], [-122.443578, 37.806622], [-122.443638, 37.806864], [-122.443615, 37.806935], [-122.443613, 37.80688], [-122.44353, 37.806899], [-122.443507, 37.806968], [-122.443507, 37.806908], [-122.443425, 37.806927], [-122.443402, 37.806995], [-122.443403, 37.806936], [-122.443318, 37.806957], [-122.443295, 37.807025], [-122.443295, 37.806966], [-122.443212, 37.806985], [-122.443189, 37.807055], [-122.443188, 37.806996], [-122.443104, 37.807016], [-122.443082, 37.807084], [-122.443082, 37.807025], [-122.442998, 37.807044], [-122.442976, 37.807112], [-122.442976, 37.807053], [-122.442896, 37.807072], [-122.44288, 37.807089], [-122.442861, 37.807142], [-122.442869, 37.807075], [-122.442838, 37.806992], [-122.442879, 37.807051], [-122.44295, 37.807037], [-122.442964, 37.807019], [-122.44299, 37.807026], [-122.443045, 37.807011], [-122.443059, 37.806995], [-122.443082, 37.807001], [-122.443138, 37.806985], [-122.443152, 37.806969], [-122.443176, 37.806975], [-122.443231, 37.80696], [-122.443244, 37.806944], [-122.443267, 37.80695], [-122.443322, 37.806935], [-122.443336, 37.80692], [-122.443357, 37.806926], [-122.443422, 37.806903], [-122.443447, 37.806901], [-122.443508, 37.806884], [-122.443521, 37.80687], [-122.443542, 37.806875], [-122.443612, 37.806856], [-122.443569, 37.806643], [-122.443499, 37.806653], [-122.443484, 37.806664], [-122.443465, 37.806658], [-122.443441, 37.806661], [-122.443398, 37.806672], [-122.443392, 37.806723], [-122.443376, 37.806675], [-122.443305, 37.806684], [-122.443301, 37.806738], [-122.443282, 37.806691], [-122.443213, 37.806695], [-122.443198, 37.806707], [-122.443179, 37.8067], [-122.443112, 37.806714], [-122.443106, 37.806765], [-122.443089, 37.806717], [-122.443021, 37.806723], [-122.443006, 37.806735], [-122.442986, 37.806728], [-122.44295, 37.806733], [-122.442925, 37.806736], [-122.44291, 37.806749], [-122.442888, 37.806741], [-122.442825, 37.806753], [-122.442821, 37.806819], [-122.442801, 37.806758], [-122.442732, 37.806761], [-122.442715, 37.806773], [-122.442696, 37.806765], [-122.442674, 37.806772], [-122.44267, 37.806836], [-122.442657, 37.806784], [-122.442632, 37.806773], [-122.442611, 37.806791], [-122.442619, 37.806845], [-122.442558, 37.806846], [-122.442543, 37.806768], [-122.442813, 37.806734], [-122.442904, 37.806721]]], [[[-122.435535, 37.806906], [-122.435473, 37.806923], [-122.435453, 37.806944], [-122.435426, 37.806929], [-122.435369, 37.806936], [-122.435348, 37.806958], [-122.435321, 37.806943], [-122.435266, 37.806949], [-122.435246, 37.80697], [-122.435218, 37.806955], [-122.435164, 37.806962], [-122.435144, 37.806983], [-122.435116, 37.806968], [-122.435062, 37.806975], [-122.435041, 37.806996], [-122.435014, 37.806981], [-122.43496, 37.806988], [-122.43494, 37.807009], [-122.434913, 37.806994], [-122.434858, 37.807001], [-122.434837, 37.807022], [-122.43481, 37.807007], [-122.434755, 37.807014], [-122.434735, 37.807035], [-122.434707, 37.80702], [-122.434652, 37.807027], [-122.434631, 37.807048], [-122.434604, 37.807033], [-122.434548, 37.80704], [-122.434527, 37.807061], [-122.4345, 37.807046], [-122.434441, 37.807054], [-122.434421, 37.807075], [-122.434393, 37.80706], [-122.434334, 37.807067], [-122.434314, 37.807088], [-122.434286, 37.807073], [-122.434223, 37.807081], [-122.434202, 37.807102], [-122.434175, 37.807087], [-122.434109, 37.807096], [-122.434089, 37.807117], [-122.434061, 37.807102], [-122.43401, 37.807108], [-122.433989, 37.807129], [-122.433962, 37.807114], [-122.433894, 37.807123], [-122.433874, 37.807144], [-122.433847, 37.807129], [-122.43378, 37.807137], [-122.43376, 37.807158], [-122.433732, 37.807143], [-122.433667, 37.807151], [-122.433646, 37.807172], [-122.433619, 37.807157], [-122.433554, 37.807166], [-122.433533, 37.807187], [-122.433506, 37.807172], [-122.43344, 37.80718], [-122.43342, 37.807201], [-122.433392, 37.807186], [-122.433327, 37.807194], [-122.433307, 37.807215], [-122.433279, 37.8072], [-122.433213, 37.807209], [-122.433193, 37.80723], [-122.433166, 37.807215], [-122.433073, 37.807226], [-122.43307, 37.80721], [-122.433163, 37.807198], [-122.433182, 37.807181], [-122.433207, 37.807193], [-122.433277, 37.807184], [-122.433296, 37.807166], [-122.433321, 37.807178], [-122.433382, 37.807171], [-122.433401, 37.807153], [-122.433426, 37.807165], [-122.433488, 37.807157], [-122.433507, 37.80714], [-122.433532, 37.807152], [-122.43359, 37.807144], [-122.433609, 37.807127], [-122.433634, 37.807139], [-122.433689, 37.807132], [-122.433708, 37.807114], [-122.433733, 37.807126], [-122.433797, 37.807118], [-122.433816, 37.807101], [-122.433844, 37.807112], [-122.433867, 37.807094], [-122.433896, 37.807106], [-122.43392, 37.807087], [-122.433944, 37.8071], [-122.434016, 37.807091], [-122.434035, 37.807073], [-122.43406, 37.807085], [-122.434426, 37.807039], [-122.435535, 37.806906]]], [[[-122.435657, 37.807254], [-122.435637, 37.807266], [-122.435647, 37.807362], [-122.435625, 37.807285], [-122.435609, 37.80727], [-122.435544, 37.807278], [-122.435528, 37.807298], [-122.435505, 37.807283], [-122.435443, 37.807291], [-122.435427, 37.80731], [-122.435404, 37.807296], [-122.435342, 37.807304], [-122.435326, 37.807323], [-122.435303, 37.807309], [-122.435236, 37.807317], [-122.435219, 37.807336], [-122.435197, 37.807322], [-122.435128, 37.80733], [-122.435112, 37.80735], [-122.435089, 37.807335], [-122.43502, 37.807344], [-122.435004, 37.807363], [-122.434981, 37.807349], [-122.434911, 37.807358], [-122.434895, 37.807377], [-122.434872, 37.807363], [-122.434799, 37.807372], [-122.434782, 37.807391], [-122.43476, 37.807377], [-122.434691, 37.807385], [-122.434675, 37.807405], [-122.434652, 37.80739], [-122.434576, 37.8074], [-122.43456, 37.807419], [-122.434537, 37.807405], [-122.434462, 37.807414], [-122.434446, 37.807433], [-122.434423, 37.807419], [-122.434349, 37.807428], [-122.434333, 37.807447], [-122.43431, 37.807433], [-122.434231, 37.807443], [-122.434215, 37.807462], [-122.434192, 37.807448], [-122.434111, 37.807458], [-122.434095, 37.807477], [-122.434072, 37.807463], [-122.433993, 37.807473], [-122.433977, 37.807492], [-122.433954, 37.807478], [-122.433869, 37.807488], [-122.433853, 37.807507], [-122.43383, 37.807493], [-122.433745, 37.807504], [-122.433728, 37.807523], [-122.433705, 37.807509], [-122.433606, 37.807521], [-122.433592, 37.80754], [-122.433583, 37.807492], [-122.433602, 37.807505], [-122.433678, 37.807496], [-122.433694, 37.807478], [-122.433715, 37.807491], [-122.433796, 37.807481], [-122.433811, 37.807463], [-122.433833, 37.807476], [-122.433911, 37.807466], [-122.433927, 37.807449], [-122.433948, 37.807462], [-122.434026, 37.807452], [-122.434041, 37.807434], [-122.434063, 37.807447], [-122.434135, 37.807438], [-122.43415, 37.807421], [-122.434172, 37.807434], [-122.434246, 37.807424], [-122.434261, 37.807407], [-122.434283, 37.80742], [-122.434353, 37.807411], [-122.434368, 37.807393], [-122.43439, 37.807406], [-122.434462, 37.807397], [-122.434478, 37.80738], [-122.434499, 37.807393], [-122.434572, 37.807383], [-122.434588, 37.807366], [-122.43461, 37.807379], [-122.434682, 37.80737], [-122.434698, 37.807352], [-122.434719, 37.807365], [-122.434784, 37.807357], [-122.4348, 37.807339], [-122.434821, 37.807352], [-122.434885, 37.807344], [-122.4349, 37.807327], [-122.434922, 37.80734], [-122.434989, 37.807331], [-122.435004, 37.807314], [-122.435026, 37.807327], [-122.435092, 37.807318], [-122.435107, 37.807301], [-122.435129, 37.807314], [-122.435193, 37.807306], [-122.435209, 37.807288], [-122.43523, 37.807301], [-122.435296, 37.807293], [-122.435312, 37.807275], [-122.435333, 37.807288], [-122.435399, 37.80728], [-122.435414, 37.807262], [-122.435443, 37.807274], [-122.435467, 37.807256], [-122.435494, 37.807268], [-122.435515, 37.80725], [-122.435537, 37.807263], [-122.435602, 37.807254], [-122.435611, 37.807238], [-122.435604, 37.807172], [-122.435632, 37.807251], [-122.435657, 37.807254]]], [[[-122.443852, 37.807367], [-122.443707, 37.807395], [-122.443659, 37.807411], [-122.443615, 37.807409], [-122.443522, 37.807322], [-122.443613, 37.80739], [-122.443647, 37.807377], [-122.443584, 37.807309], [-122.443677, 37.807379], [-122.443709, 37.807365], [-122.443652, 37.807301], [-122.44374, 37.807367], [-122.443769, 37.807355], [-122.443707, 37.807287], [-122.443799, 37.807356], [-122.443829, 37.807344], [-122.443769, 37.807278], [-122.443859, 37.807346], [-122.443945, 37.80733], [-122.443945, 37.807313], [-122.443847, 37.807222], [-122.443977, 37.807324], [-122.444024, 37.807309], [-122.443904, 37.807193], [-122.444053, 37.80731], [-122.444104, 37.807301], [-122.444104, 37.807281], [-122.444026, 37.807206], [-122.44414, 37.807294], [-122.444174, 37.807288], [-122.444194, 37.807278], [-122.444066, 37.807157], [-122.444216, 37.807276], [-122.444263, 37.807254], [-122.444141, 37.807136], [-122.44429, 37.807254], [-122.44433, 37.807242], [-122.444331, 37.807221], [-122.444218, 37.807117], [-122.444363, 37.807232], [-122.444404, 37.80722], [-122.444404, 37.8072], [-122.444293, 37.807098], [-122.444436, 37.807211], [-122.444547, 37.807178], [-122.444547, 37.807159], [-122.444433, 37.807056], [-122.444577, 37.807169], [-122.444646, 37.807149], [-122.444657, 37.807166], [-122.444433, 37.807232], [-122.444181, 37.807307], [-122.443852, 37.807367]]], [[[-122.435737, 37.807665], [-122.433917, 37.807904], [-122.433902, 37.807793], [-122.433928, 37.807886], [-122.43404, 37.807872], [-122.434051, 37.807851], [-122.43407, 37.807868], [-122.43416, 37.807857], [-122.434171, 37.807836], [-122.43419, 37.807853], [-122.434285, 37.807841], [-122.434296, 37.80782], [-122.434314, 37.807837], [-122.434408, 37.807825], [-122.434419, 37.807805], [-122.434437, 37.807822], [-122.434522, 37.807811], [-122.434533, 37.80779], [-122.434551, 37.807807], [-122.434636, 37.807796], [-122.434647, 37.807776], [-122.434666, 37.807793], [-122.434751, 37.807782], [-122.434762, 37.807761], [-122.43478, 37.807778], [-122.434871, 37.807767], [-122.434882, 37.807746], [-122.434901, 37.807763], [-122.434976, 37.807753], [-122.434987, 37.807733], [-122.435006, 37.80775], [-122.435085, 37.80774], [-122.435097, 37.807718], [-122.435116, 37.807736], [-122.435192, 37.807726], [-122.435204, 37.807704], [-122.435223, 37.807722], [-122.435302, 37.807712], [-122.435314, 37.80769], [-122.435334, 37.807708], [-122.435402, 37.807699], [-122.435414, 37.807677], [-122.435434, 37.807695], [-122.435509, 37.807686], [-122.43552, 37.807663], [-122.435541, 37.807682], [-122.435609, 37.807673], [-122.435621, 37.80765], [-122.435642, 37.807669], [-122.435711, 37.807661], [-122.435716, 37.807637], [-122.435708, 37.807565], [-122.435737, 37.807665]]], [[[-122.433961, 37.806431], [-122.433969, 37.806503], [-122.433952, 37.806446], [-122.433933, 37.806436], [-122.433886, 37.806443], [-122.433866, 37.806459], [-122.433839, 37.806449], [-122.433791, 37.806455], [-122.433771, 37.806471], [-122.433745, 37.806461], [-122.433695, 37.806468], [-122.433675, 37.806484], [-122.433649, 37.806474], [-122.433596, 37.80648], [-122.433577, 37.806497], [-122.43355, 37.806486], [-122.433504, 37.806493], [-122.433484, 37.806509], [-122.433458, 37.806499], [-122.433404, 37.806506], [-122.433384, 37.806522], [-122.433358, 37.806512], [-122.433305, 37.806519], [-122.433285, 37.806535], [-122.433259, 37.806525], [-122.433207, 37.806531], [-122.433187, 37.806548], [-122.433161, 37.806537], [-122.433099, 37.806546], [-122.433079, 37.806562], [-122.433053, 37.806552], [-122.432991, 37.80656], [-122.432971, 37.806576], [-122.432945, 37.806566], [-122.432886, 37.806573], [-122.432868, 37.80659], [-122.432849, 37.806491], [-122.432871, 37.806553], [-122.43295, 37.806548], [-122.432965, 37.806534], [-122.432984, 37.806544], [-122.433056, 37.806534], [-122.43307, 37.806522], [-122.433088, 37.80653], [-122.433161, 37.806521], [-122.433176, 37.806506], [-122.433195, 37.806516], [-122.43326, 37.806508], [-122.433276, 37.806493], [-122.433295, 37.806503], [-122.433358, 37.806495], [-122.433373, 37.806481], [-122.433392, 37.80649], [-122.433454, 37.806482], [-122.43347, 37.806468], [-122.433489, 37.806478], [-122.433553, 37.806469], [-122.433568, 37.806455], [-122.433587, 37.806465], [-122.433649, 37.806457], [-122.433664, 37.806442], [-122.433683, 37.806452], [-122.433746, 37.806444], [-122.433761, 37.80643], [-122.43378, 37.80644], [-122.433843, 37.806431], [-122.433858, 37.806417], [-122.433877, 37.806427], [-122.433936, 37.806413], [-122.433938, 37.806348], [-122.433961, 37.806431]]], [[[-122.432911, 37.806267], [-122.432887, 37.806258], [-122.432821, 37.806266], [-122.432806, 37.80628], [-122.432794, 37.806239], [-122.432811, 37.806251], [-122.432879, 37.806242], [-122.432899, 37.806227], [-122.43292, 37.806237], [-122.432989, 37.806228], [-122.433009, 37.806213], [-122.43303, 37.806223], [-122.43309, 37.806215], [-122.43311, 37.8062], [-122.433131, 37.80621], [-122.433194, 37.806202], [-122.433213, 37.806187], [-122.433234, 37.806196], [-122.433293, 37.806189], [-122.433313, 37.806174], [-122.433334, 37.806184], [-122.43339, 37.806177], [-122.43341, 37.806161], [-122.433431, 37.806171], [-122.433484, 37.806165], [-122.433503, 37.806149], [-122.433525, 37.806159], [-122.433581, 37.806152], [-122.433601, 37.806137], [-122.433622, 37.806147], [-122.433676, 37.80614], [-122.433696, 37.806125], [-122.433717, 37.806135], [-122.433775, 37.806127], [-122.433794, 37.806112], [-122.433816, 37.806122], [-122.433868, 37.806115], [-122.433881, 37.806102], [-122.43388, 37.806044], [-122.4339, 37.806128], [-122.433902, 37.806198], [-122.433887, 37.806143], [-122.433869, 37.806132], [-122.43382, 37.806138], [-122.433803, 37.806153], [-122.433779, 37.806144], [-122.433726, 37.80615], [-122.433709, 37.806165], [-122.433685, 37.806156], [-122.43363, 37.806163], [-122.433613, 37.806177], [-122.433589, 37.806168], [-122.433534, 37.806175], [-122.433517, 37.80619], [-122.433493, 37.80618], [-122.433437, 37.806187], [-122.433419, 37.806202], [-122.433395, 37.806193], [-122.43334, 37.8062], [-122.433322, 37.806214], [-122.433298, 37.806205], [-122.433241, 37.806212], [-122.433224, 37.806227], [-122.4332, 37.806218], [-122.433141, 37.806225], [-122.433123, 37.80624], [-122.433099, 37.80623], [-122.433038, 37.806238], [-122.433021, 37.806253], [-122.432997, 37.806243], [-122.432928, 37.806252], [-122.432911, 37.806267]]], [[[-122.433873, 37.805817], [-122.433813, 37.805828], [-122.43379, 37.805843], [-122.433764, 37.805835], [-122.433744, 37.805849], [-122.433715, 37.805841], [-122.433691, 37.805856], [-122.43367, 37.805847], [-122.433612, 37.805854], [-122.433596, 37.805868], [-122.433574, 37.805859], [-122.433516, 37.805867], [-122.433499, 37.80588], [-122.433478, 37.805871], [-122.433425, 37.805878], [-122.433409, 37.805892], [-122.433387, 37.805883], [-122.433327, 37.805891], [-122.43331, 37.805904], [-122.433289, 37.805896], [-122.433228, 37.805904], [-122.433211, 37.805917], [-122.43319, 37.805908], [-122.433125, 37.805917], [-122.433109, 37.80593], [-122.433087, 37.805922], [-122.433022, 37.80593], [-122.433005, 37.805944], [-122.432984, 37.805935], [-122.432914, 37.805944], [-122.432897, 37.805957], [-122.432876, 37.805949], [-122.432806, 37.805958], [-122.432791, 37.805973], [-122.432771, 37.805888], [-122.432794, 37.805938], [-122.432871, 37.805933], [-122.432888, 37.805918], [-122.432909, 37.805928], [-122.432977, 37.805919], [-122.432994, 37.805905], [-122.433015, 37.805914], [-122.433078, 37.805906], [-122.433095, 37.805892], [-122.433116, 37.805901], [-122.433177, 37.805893], [-122.433194, 37.805879], [-122.433215, 37.805889], [-122.433273, 37.805881], [-122.43329, 37.805867], [-122.433311, 37.805876], [-122.433368, 37.805869], [-122.433385, 37.805855], [-122.433406, 37.805864], [-122.433464, 37.805856], [-122.433481, 37.805842], [-122.433502, 37.805852], [-122.43356, 37.805844], [-122.433577, 37.80583], [-122.433598, 37.805839], [-122.433657, 37.805832], [-122.433674, 37.805818], [-122.433695, 37.805827], [-122.433811, 37.805812], [-122.433829, 37.8058], [-122.433851, 37.805813], [-122.433873, 37.805817]]], [[[-122.441977, 37.807878], [-122.441978, 37.807895], [-122.441808, 37.807912], [-122.44149, 37.807944], [-122.441481, 37.807923], [-122.441399, 37.807833], [-122.441414, 37.807823], [-122.441512, 37.807923], [-122.441628, 37.807907], [-122.441552, 37.80781], [-122.441659, 37.807909], [-122.441784, 37.80789], [-122.441711, 37.807792], [-122.44182, 37.807893], [-122.44194, 37.807874], [-122.441867, 37.807776], [-122.441977, 37.807878]]], [[[-122.444, 37.806781], [-122.444011, 37.806763], [-122.443995, 37.806743], [-122.444004, 37.806724], [-122.443984, 37.806702], [-122.443996, 37.806682], [-122.443978, 37.806662], [-122.443988, 37.806641], [-122.443971, 37.806619], [-122.44398, 37.806598], [-122.443964, 37.806578], [-122.443973, 37.806558], [-122.443952, 37.80654], [-122.443853, 37.806546], [-122.443985, 37.806526], [-122.444127, 37.806516], [-122.444013, 37.806534], [-122.443998, 37.806547], [-122.444007, 37.806569], [-122.444136, 37.806564], [-122.44401, 37.806587], [-122.444008, 37.806607], [-122.444027, 37.806624], [-122.444016, 37.806649], [-122.444032, 37.80667], [-122.444022, 37.806685], [-122.444026, 37.806708], [-122.444043, 37.806724], [-122.444031, 37.80674], [-122.444036, 37.806764], [-122.444053, 37.806775], [-122.444173, 37.80676], [-122.444176, 37.806777], [-122.443903, 37.806809], [-122.4439, 37.806793], [-122.444, 37.806781]]], [[[-122.443406, 37.807642], [-122.443293, 37.807661], [-122.443152, 37.807671], [-122.443267, 37.807648], [-122.44327, 37.807623], [-122.443261, 37.807604], [-122.443256, 37.807576], [-122.443135, 37.807579], [-122.443242, 37.807562], [-122.443255, 37.80755], [-122.443252, 37.807533], [-122.443236, 37.807518], [-122.443245, 37.807496], [-122.443228, 37.807475], [-122.443238, 37.807458], [-122.443234, 37.807441], [-122.443218, 37.807427], [-122.443361, 37.80741], [-122.443262, 37.807431], [-122.443265, 37.807454], [-122.443369, 37.807452], [-122.44327, 37.807474], [-122.443274, 37.807504], [-122.443379, 37.807502], [-122.44328, 37.807523], [-122.443278, 37.807545], [-122.443292, 37.807558], [-122.443284, 37.807575], [-122.443287, 37.807592], [-122.443301, 37.807606], [-122.443294, 37.807629], [-122.443311, 37.807647], [-122.443406, 37.807642]]], [[[-122.442797, 37.807767], [-122.442788, 37.807806], [-122.442772, 37.807774], [-122.442733, 37.807529], [-122.442885, 37.807525], [-122.442773, 37.807539], [-122.442757, 37.807552], [-122.442759, 37.807569], [-122.442777, 37.807582], [-122.442765, 37.807605], [-122.442785, 37.807626], [-122.44277, 37.807644], [-122.442773, 37.807663], [-122.442792, 37.807677], [-122.442779, 37.807701], [-122.442796, 37.80772], [-122.442784, 37.807736], [-122.442786, 37.807752], [-122.442797, 37.807767]]], [[[-122.442405, 37.807643], [-122.442405, 37.807728], [-122.442384, 37.807657], [-122.442405, 37.807643]]], [[[-122.43293, 37.807925], [-122.432906, 37.807927], [-122.432916, 37.807909], [-122.43293, 37.807925]]]]
    },
    "properties": {
      "neighbourhood": "Marina",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.388108, 37.747803], [-122.3881, 37.747712], [-122.388148, 37.747711], [-122.388153, 37.747826], [-122.388277, 37.747817], [-122.388494, 37.747808], [-122.38852, 37.747812], [-122.388545, 37.747815], [-122.388573, 37.747816], [-122.388596, 37.747816], [-122.388616, 37.747815], [-122.388636, 37.747813], [-122.388659, 37.74781], [-122.388686, 37.747805], [-122.388713, 37.747798], [-122.388747, 37.747788], [-122.388773, 37.747781], [-122.388797, 37.747776], [-122.388818, 37.747772], [-122.38884, 37.74777], [-122.388865, 37.747768], [-122.38889, 37.747768], [-122.388916, 37.747769], [-122.388938, 37.74777], [-122.388974, 37.747774], [-122.389003, 37.747776], [-122.389032, 37.747777], [-122.389061, 37.747778], [-122.38909, 37.747778], [-122.389128, 37.747777], [-122.389166, 37.747776], [-122.389196, 37.747774], [-122.389265, 37.747776], [-122.389335, 37.747777], [-122.389404, 37.747777], [-122.389473, 37.747776], [-122.389542, 37.747774], [-122.389611, 37.747772], [-122.38968, 37.747768], [-122.389749, 37.747764], [-122.389818, 37.747758], [-122.389887, 37.747751], [-122.389955, 37.747744], [-122.390053, 37.747734], [-122.390085, 37.747733], [-122.390113, 37.747732], [-122.390145, 37.747728], [-122.390182, 37.747723], [-122.390213, 37.747716], [-122.390235, 37.74771], [-122.390262, 37.747703], [-122.390288, 37.747699], [-122.390315, 37.747699], [-122.390341, 37.747703], [-122.390369, 37.747707], [-122.390406, 37.747712], [-122.390432, 37.747717], [-122.390456, 37.747725], [-122.390484, 37.747736], [-122.390513, 37.747742], [-122.390654, 37.747824], [-122.390648, 37.747758], [-122.390672, 37.747767], [-122.390693, 37.747784], [-122.390708, 37.74781], [-122.390717, 37.74783], [-122.390724, 37.747846], [-122.390734, 37.747861], [-122.390749, 37.747881], [-122.390766, 37.747901], [-122.390783, 37.747918], [-122.390802, 37.747933], [-122.39082, 37.747946], [-122.390843, 37.74796], [-122.390873, 37.74797], [-122.390904, 37.747978], [-122.390936, 37.747985], [-122.39096, 37.74799], [-122.390984, 37.747994], [-122.391016, 37.747999], [-122.391041, 37.748002], [-122.391065, 37.748005], [-122.39109, 37.748007], [-122.391125, 37.748009], [-122.391154, 37.748015], [-122.391175, 37.748025], [-122.391193, 37.748039], [-122.391205, 37.748055], [-122.391241, 37.748083], [-122.391297, 37.748116], [-122.391962, 37.748398], [-122.391986, 37.748402], [-122.392012, 37.748407], [-122.392032, 37.748413], [-122.392056, 37.74842], [-122.392082, 37.748431], [-122.392108, 37.748443], [-122.392129, 37.748456], [-122.392145, 37.748467], [-122.392165, 37.748475], [-122.39219, 37.748479], [-122.39221, 37.748481], [-122.39223, 37.748482], [-122.39225, 37.748482], [-122.392273, 37.748482], [-122.392303, 37.748481], [-122.392333, 37.748479], [-122.392361, 37.748476], [-122.392388, 37.748471], [-122.392425, 37.748466], [-122.392463, 37.748464], [-122.392492, 37.748464], [-122.392516, 37.748465], [-122.392544, 37.748468], [-122.392577, 37.74847], [-122.392606, 37.748469], [-122.392634, 37.74847], [-122.39266, 37.748473], [-122.392682, 37.748476], [-122.392704, 37.748481], [-122.392726, 37.748487], [-122.39275, 37.748495], [-122.39277, 37.748504], [-122.392792, 37.748515], [-122.392823, 37.74853], [-122.39285, 37.748539], [-122.392872, 37.748543], [-122.392896, 37.748546], [-122.392925, 37.748546], [-122.392957, 37.74854], [-122.392984, 37.748527], [-122.393001, 37.748516], [-122.393019, 37.748499], [-122.393033, 37.748479], [-122.393043, 37.748456], [-122.393046, 37.748433], [-122.393053, 37.748284], [-122.393077, 37.748129], [-122.39298, 37.747588], [-122.392907, 37.747545], [-122.392911, 37.747441], [-122.392848, 37.747437], [-122.39281, 37.74745], [-122.392769, 37.747457], [-122.392736, 37.747442], [-122.392709, 37.74744], [-122.392612, 37.74743], [-122.392589, 37.747429], [-122.392563, 37.747422], [-122.392544, 37.747412], [-122.392528, 37.747399], [-122.392518, 37.747385], [-122.392371, 37.747285], [-122.39231, 37.747223], [-122.391564, 37.747006], [-122.391516, 37.747108], [-122.391549, 37.747117], [-122.39154, 37.747141], [-122.391633, 37.747168], [-122.391611, 37.747227], [-122.391285, 37.747136], [-122.391305, 37.747081], [-122.3914, 37.747106], [-122.391414, 37.747082], [-122.39145, 37.747086], [-122.391498, 37.746975], [-122.390841, 37.746788], [-122.390692, 37.746745], [-122.390584, 37.746707], [-122.390492, 37.746694], [-122.389167, 37.746772], [-122.389008, 37.746805], [-122.388863, 37.746836], [-122.388798, 37.746834], [-122.388745, 37.746852], [-122.388651, 37.746863], [-122.388569, 37.74689], [-122.388501, 37.74691], [-122.38843, 37.746902], [-122.388404, 37.746923], [-122.388365, 37.746924], [-122.388206, 37.746945], [-122.388204, 37.746983], [-122.388121, 37.746993], [-122.388117, 37.746949], [-122.387894, 37.746946], [-122.387874, 37.746942], [-122.387857, 37.746932], [-122.387705, 37.746939], [-122.387599, 37.746969], [-122.387589, 37.747026], [-122.387551, 37.747035], [-122.387542, 37.747052], [-122.387524, 37.747071], [-122.387494, 37.747086], [-122.387462, 37.747102], [-122.387103, 37.74711], [-122.387074, 37.747108], [-122.387049, 37.747098], [-122.387032, 37.747085], [-122.387021, 37.747065], [-122.387006, 37.746912], [-122.385923, 37.746978], [-122.382765, 37.747153], [-122.382709, 37.747165], [-122.382642, 37.74716], [-122.382019, 37.747062], [-122.379659, 37.747208], [-122.379608, 37.74698], [-122.379559, 37.74699], [-122.379534, 37.746995], [-122.379509, 37.746999], [-122.379484, 37.747003], [-122.379459, 37.747006], [-122.379434, 37.747009], [-122.379408, 37.747012], [-122.379383, 37.747015], [-122.379358, 37.747017], [-122.379332, 37.747019], [-122.379307, 37.74702], [-122.379281, 37.747021], [-122.379256, 37.747022], [-122.37923, 37.747022], [-122.379145, 37.747022], [-122.379072, 37.747022], [-122.378998, 37.747024], [-122.378925, 37.747027], [-122.378852, 37.747031], [-122.378778, 37.747035], [-122.378705, 37.747041], [-122.378632, 37.747048], [-122.378559, 37.747056], [-122.378487, 37.747065], [-122.378414, 37.747074], [-122.378342, 37.747085], [-122.37827, 37.747097], [-122.378198, 37.74711], [-122.378127, 37.747124], [-122.377701, 37.747142], [-122.377452, 37.747149], [-122.377202, 37.747151], [-122.376953, 37.747151], [-122.376703, 37.747146], [-122.376632, 37.747152], [-122.376587, 37.747155], [-122.376542, 37.747157], [-122.376497, 37.747159], [-122.376452, 37.747159], [-122.376407, 37.74716], [-122.376362, 37.747159], [-122.376317, 37.747158], [-122.376272, 37.747157], [-122.376227, 37.747155], [-122.376182, 37.747152], [-122.376137, 37.747148], [-122.376092, 37.747144], [-122.376047, 37.74714], [-122.376002, 37.747134], [-122.375958, 37.747128], [-122.375913, 37.747122], [-122.375869, 37.747115], [-122.375825, 37.747107], [-122.375781, 37.747098], [-122.375737, 37.747089], [-122.375694, 37.74708], [-122.375651, 37.747069], [-122.375608, 37.747059], [-122.375565, 37.747047], [-122.375522, 37.747035], [-122.375485, 37.747023], [-122.375466, 37.747017], [-122.375447, 37.74701], [-122.375428, 37.747003], [-122.37541, 37.746996], [-122.375391, 37.746988], [-122.375373, 37.746981], [-122.375355, 37.746973], [-122.375337, 37.746964], [-122.375319, 37.746956], [-122.375301, 37.746947], [-122.375284, 37.746938], [-122.375267, 37.746929], [-122.37525, 37.746919], [-122.375233, 37.746909], [-122.375217, 37.746899], [-122.3752, 37.746889], [-122.375184, 37.746879], [-122.375169, 37.746868], [-122.375153, 37.746857], [-122.375138, 37.746846], [-122.375122, 37.746835], [-122.375108, 37.746824], [-122.375093, 37.746812], [-122.375079, 37.7468], [-122.375064, 37.746788], [-122.375051, 37.746776], [-122.375037, 37.746763], [-122.375024, 37.74675], [-122.375011, 37.746738], [-122.374998, 37.746725], [-122.374986, 37.746711], [-122.374974, 37.746698], [-122.374962, 37.746685], [-122.37495, 37.746671], [-122.374939, 37.746657], [-122.374928, 37.746643], [-122.374917, 37.746629], [-122.374907, 37.746615], [-122.374897, 37.7466], [-122.374887, 37.746586], [-122.374878, 37.746571], [-122.374869, 37.746556], [-122.37486, 37.746541], [-122.37484, 37.746518], [-122.374819, 37.746501], [-122.374802, 37.746483], [-122.374787, 37.746462], [-122.374775, 37.746433], [-122.37477, 37.746411], [-122.37477, 37.746385], [-122.374773, 37.746363], [-122.374781, 37.746341], [-122.374791, 37.746323], [-122.374924, 37.74589], [-122.374941, 37.745869], [-122.374952, 37.745846], [-122.374955, 37.745824], [-122.374953, 37.745803], [-122.374946, 37.745783], [-122.374933, 37.745763], [-122.374166, 37.745009], [-122.37415, 37.744995], [-122.374126, 37.744978], [-122.374103, 37.744966], [-122.374075, 37.744957], [-122.374045, 37.744951], [-122.374023, 37.744949], [-122.373992, 37.744951], [-122.373961, 37.744956], [-122.373931, 37.744966], [-122.373902, 37.744982], [-122.373876, 37.745001], [-122.373859, 37.745021], [-122.373846, 37.74504], [-122.373854, 37.745086], [-122.373454, 37.745317], [-122.373437, 37.745328], [-122.373422, 37.745339], [-122.373405, 37.745348], [-122.373382, 37.745361], [-122.373361, 37.745371], [-122.373342, 37.745378], [-122.373324, 37.745385], [-122.373305, 37.745391], [-122.373278, 37.745399], [-122.373251, 37.745405], [-122.373227, 37.745409], [-122.373199, 37.745413], [-122.373175, 37.745415], [-122.373151, 37.745416], [-122.373122, 37.745416], [-122.373094, 37.745415], [-122.373069, 37.745412], [-122.373049, 37.74541], [-122.373029, 37.745406], [-122.37301, 37.745402], [-122.37299, 37.745398], [-122.372964, 37.74539], [-122.372762, 37.745505], [-122.369079, 37.741644], [-122.367631, 37.740134], [-122.367868, 37.739994], [-122.368286, 37.739976], [-122.368274, 37.739828], [-122.371253, 37.739664], [-122.371264, 37.739793], [-122.37341, 37.739653], [-122.37342, 37.739638], [-122.373434, 37.739627], [-122.37346, 37.739618], [-122.373518, 37.739607], [-122.373542, 37.739603], [-122.373567, 37.739598], [-122.373591, 37.739594], [-122.373616, 37.73959], [-122.373641, 37.739587], [-122.373666, 37.739584], [-122.373691, 37.739581], [-122.373716, 37.739579], [-122.373741, 37.739577], [-122.373766, 37.739575], [-122.373791, 37.739574], [-122.373816, 37.739573], [-122.373841, 37.739572], [-122.373866, 37.739572], [-122.373891, 37.739572], [-122.373927, 37.739572], [-122.37395, 37.739568], [-122.373972, 37.739559], [-122.373989, 37.739547], [-122.374005, 37.739526], [-122.374012, 37.739505], [-122.374011, 37.739486], [-122.374003, 37.739467], [-122.373978, 37.73944], [-122.373964, 37.739426], [-122.37395, 37.739412], [-122.373937, 37.739398], [-122.373924, 37.739383], [-122.373911, 37.739369], [-122.373899, 37.739354], [-122.373887, 37.739339], [-122.373874, 37.739322], [-122.373863, 37.739307], [-122.373852, 37.739291], [-122.373841, 37.739275], [-122.373831, 37.73926], [-122.373821, 37.739244], [-122.373811, 37.739228], [-122.373802, 37.739211], [-122.373793, 37.739195], [-122.373785, 37.739178], [-122.373777, 37.739162], [-122.373769, 37.739145], [-122.373761, 37.739128], [-122.373754, 37.739111], [-122.373748, 37.739094], [-122.373741, 37.739077], [-122.373731, 37.739046], [-122.373724, 37.739028], [-122.373716, 37.73901], [-122.373708, 37.738993], [-122.3737, 37.738975], [-122.373692, 37.738957], [-122.373683, 37.73894], [-122.373674, 37.738922], [-122.373664, 37.738905], [-122.373654, 37.738888], [-122.373643, 37.738871], [-122.373633, 37.738854], [-122.373621, 37.738838], [-122.37361, 37.738821], [-122.373598, 37.738805], [-122.373586, 37.738789], [-122.373573, 37.738773], [-122.37356, 37.738757], [-122.373547, 37.738741], [-122.373533, 37.738726], [-122.373519, 37.738711], [-122.373505, 37.738696], [-122.37349, 37.738681], [-122.373475, 37.738666], [-122.37346, 37.738652], [-122.373445, 37.738637], [-122.373429, 37.738623], [-122.373412, 37.73861], [-122.373396, 37.738596], [-122.373379, 37.738583], [-122.373362, 37.73857], [-122.373345, 37.738557], [-122.373327, 37.738544], [-122.373309, 37.738532], [-122.373291, 37.73852], [-122.373272, 37.738508], [-122.373254, 37.738496], [-122.373235, 37.738485], [-122.373215, 37.738474], [-122.373196, 37.738463], [-122.373176, 37.738452], [-122.373156, 37.738442], [-122.373136, 37.738432], [-122.373116, 37.738422], [-122.373095, 37.738413], [-122.373074, 37.738404], [-122.373054, 37.738395], [-122.373032, 37.738387], [-122.373011, 37.738378], [-122.372989, 37.73837], [-122.372968, 37.738363], [-122.372946, 37.738355], [-122.372924, 37.738348], [-122.372902, 37.738341], [-122.372879, 37.738335], [-122.372857, 37.738329], [-122.372834, 37.738323], [-122.372812, 37.738318], [-122.372789, 37.738312], [-122.372766, 37.738308], [-122.372743, 37.738303], [-122.37272, 37.738299], [-122.372696, 37.738295], [-122.372673, 37.738291], [-122.37265, 37.738288], [-122.372626, 37.738285], [-122.372603, 37.738282], [-122.372579, 37.73828], [-122.372555, 37.738278], [-122.372532, 37.738277], [-122.372508, 37.738275], [-122.372484, 37.738274], [-122.372461, 37.738274], [-122.372437, 37.738273], [-122.372413, 37.738273], [-122.372389, 37.738274], [-122.372366, 37.738274], [-122.372342, 37.738275], [-122.371418, 37.738198], [-122.371337, 37.738188], [-122.371293, 37.738184], [-122.371248, 37.73818], [-122.371204, 37.738177], [-122.37116, 37.738175], [-122.371116, 37.738173], [-122.371072, 37.738172], [-122.371027, 37.738171], [-122.370983, 37.738171], [-122.370939, 37.738172], [-122.370894, 37.738173], [-122.37085, 37.738175], [-122.370806, 37.738178], [-122.370762, 37.738181], [-122.370718, 37.738185], [-122.370674, 37.738189], [-122.37063, 37.738194], [-122.370586, 37.738199], [-122.370542, 37.738153], [-122.370404, 37.738203], [-122.370323, 37.738202], [-122.370242, 37.738203], [-122.370161, 37.738205], [-122.37008, 37.738209], [-122.37, 37.738213], [-122.369919, 37.738218], [-122.369839, 37.738225], [-122.369758, 37.738233], [-122.369678, 37.738241], [-122.369598, 37.738251], [-122.36957, 37.738256], [-122.369542, 37.738261], [-122.369513, 37.738265], [-122.369485, 37.738268], [-122.369447, 37.738271], [-122.369409, 37.738273], [-122.36938, 37.738275], [-122.369352, 37.738275], [-122.369314, 37.738275], [-122.369275, 37.738273], [-122.369247, 37.738271], [-122.369218, 37.738269], [-122.369181, 37.738265], [-122.369152, 37.738261], [-122.369067, 37.738262], [-122.368994, 37.738251], [-122.368911, 37.738248], [-122.368828, 37.738246], [-122.368744, 37.738246], [-122.368661, 37.738246], [-122.368578, 37.738248], [-122.368495, 37.73825], [-122.368412, 37.738254], [-122.368329, 37.738259], [-122.368246, 37.738266], [-122.368163, 37.738273], [-122.36808, 37.738281], [-122.367798, 37.738312], [-122.367512, 37.738341], [-122.367485, 37.738335], [-122.367463, 37.738327], [-122.36744, 37.738315], [-122.367422, 37.7383], [-122.36741, 37.738285], [-122.367402, 37.738271], [-122.367396, 37.738255], [-122.367394, 37.738234], [-122.367395, 37.738218], [-122.3674, 37.738203], [-122.367425, 37.738175], [-122.367446, 37.738159], [-122.367466, 37.738145], [-122.367488, 37.738132], [-122.36751, 37.73812], [-122.367534, 37.738109], [-122.367558, 37.738099], [-122.367592, 37.738088], [-122.367619, 37.738081], [-122.367645, 37.738075], [-122.367767, 37.738051], [-122.367844, 37.738036], [-122.367921, 37.738023], [-122.367999, 37.738011], [-122.368076, 37.738], [-122.368154, 37.73799], [-122.368232, 37.737982], [-122.368311, 37.737974], [-122.368389, 37.737967], [-122.368446, 37.737957], [-122.368502, 37.737959], [-122.368527, 37.737956], [-122.368551, 37.737953], [-122.368584, 37.737948], [-122.368616, 37.737943], [-122.36864, 37.737938], [-122.368664, 37.737932], [-122.368696, 37.737924], [-122.368727, 37.737916], [-122.368758, 37.737906], [-122.368781, 37.737898], [-122.368803, 37.73789], [-122.368825, 37.737881], [-122.368847, 37.737872], [-122.368876, 37.737859], [-122.368904, 37.737845], [-122.368932, 37.73783], [-122.368958, 37.73781], [-122.36897, 37.737796], [-122.368989, 37.737782], [-122.36901, 37.737771], [-122.36903, 37.737765], [-122.369055, 37.737761], [-122.369085, 37.737761], [-122.369105, 37.737765], [-122.369162, 37.737765], [-122.369191, 37.737764], [-122.36922, 37.737762], [-122.369249, 37.737759], [-122.369279, 37.737757], [-122.369308, 37.737753], [-122.369337, 37.73775], [-122.369365, 37.737746], [-122.369394, 37.737741], [-122.369423, 37.737737], [-122.369451, 37.737731], [-122.36948, 37.737726], [-122.369508, 37.73772], [-122.369536, 37.737714], [-122.369564, 37.737707], [-122.369592, 37.7377], [-122.36962, 37.737692], [-122.369648, 37.737684], [-122.369675, 37.737676], [-122.369702, 37.737667], [-122.369729, 37.737658], [-122.369756, 37.737649], [-122.369783, 37.737639], [-122.369809, 37.737629], [-122.369835, 37.737618], [-122.369867, 37.737604], [-122.369892, 37.737589], [-122.369917, 37.737577], [-122.369938, 37.737568], [-122.369958, 37.737562], [-122.369978, 37.737557], [-122.370008, 37.737552], [-122.370061, 37.737545], [-122.37008, 37.737542], [-122.370099, 37.737539], [-122.370119, 37.737536], [-122.370138, 37.737533], [-122.370157, 37.737529], [-122.370176, 37.737525], [-122.370195, 37.737521], [-122.370214, 37.737516], [-122.370233, 37.737511], [-122.370251, 37.737506], [-122.37027, 37.737501], [-122.370288, 37.737495], [-122.370307, 37.73749], [-122.370325, 37.737483], [-122.370343, 37.737477], [-122.370361, 37.737471], [-122.370379, 37.737464], [-122.370396, 37.737457], [-122.370414, 37.737449], [-122.370431, 37.737442], [-122.370448, 37.737434], [-122.370465, 37.737426], [-122.370482, 37.737418], [-122.370498, 37.737409], [-122.370519, 37.737395], [-122.370534, 37.737382], [-122.370558, 37.73737], [-122.370588, 37.737365], [-122.370613, 37.737366], [-122.370637, 37.737371], [-122.370667, 37.737376], [-122.3707, 37.737378], [-122.370731, 37.737376], [-122.370763, 37.737372], [-122.370787, 37.737365], [-122.37081, 37.737357], [-122.370834, 37.737346], [-122.370858, 37.737332], [-122.370878, 37.737317], [-122.370894, 37.737301], [-122.370908, 37.737284], [-122.370919, 37.73727], [-122.37093, 37.737256], [-122.370942, 37.737243], [-122.370955, 37.73723], [-122.37097, 37.737216], [-122.370989, 37.737199], [-122.371004, 37.737187], [-122.371019, 37.737176], [-122.371034, 37.737165], [-122.37105, 37.737154], [-122.371067, 37.737144], [-122.371086, 37.737134], [-122.371112, 37.73712], [-122.371139, 37.737108], [-122.371164, 37.737098], [-122.371183, 37.737091], [-122.371202, 37.737085], [-122.371224, 37.737079], [-122.371254, 37.737071], [-122.371282, 37.737065], [-122.371304, 37.737061], [-122.37134, 37.737057], [-122.371381, 37.73708], [-122.371382, 37.737061], [-122.371415, 37.737067], [-122.371439, 37.737071], [-122.371463, 37.737074], [-122.371488, 37.737077], [-122.371515, 37.737079], [-122.371549, 37.737081], [-122.371573, 37.737081], [-122.371598, 37.73708], [-122.371622, 37.737079], [-122.371647, 37.737078], [-122.371671, 37.737075], [-122.371695, 37.737072], [-122.371719, 37.737068], [-122.371743, 37.737064], [-122.371767, 37.737059], [-122.371792, 37.737052], [-122.371822, 37.737043], [-122.371851, 37.737038], [-122.37188, 37.737035], [-122.37191, 37.737033], [-122.371941, 37.737035], [-122.371962, 37.737037], [-122.371986, 37.737041], [-122.372018, 37.737055], [-122.372038, 37.737067], [-122.372057, 37.737081], [-122.372074, 37.737096], [-122.372091, 37.737112], [-122.372105, 37.737129], [-122.372118, 37.737147], [-122.372131, 37.737161], [-122.372153, 37.737161], [-122.372178, 37.737158], [-122.372207, 37.737152], [-122.372235, 37.737145], [-122.37226, 37.737137], [-122.372291, 37.737121], [-122.372301, 37.737098], [-122.372374, 37.737078], [-122.372419, 37.737072], [-122.372464, 37.737066], [-122.372509, 37.737062], [-122.372555, 37.737057], [-122.3726, 37.737054], [-122.372645, 37.737051], [-122.372691, 37.737049], [-122.372737, 37.737047], [-122.372782, 37.737046], [-122.372808, 37.737045], [-122.372831, 37.737044], [-122.372854, 37.737043], [-122.372877, 37.737042], [-122.3729, 37.737042], [-122.372923, 37.737043], [-122.372946, 37.737043], [-122.372969, 37.737044], [-122.372992, 37.737045], [-122.373015, 37.737047], [-122.373037, 37.737049], [-122.37306, 37.737051], [-122.373083, 37.737053], [-122.373106, 37.737056], [-122.373128, 37.737059], [-122.373151, 37.737062], [-122.373173, 37.737066], [-122.373196, 37.73707], [-122.373218, 37.737075], [-122.37324, 37.737079], [-122.373263, 37.737084], [-122.373285, 37.737089], [-122.373306, 37.737095], [-122.373328, 37.737101], [-122.37335, 37.737107], [-122.373371, 37.737113], [-122.373393, 37.73712], [-122.373414, 37.737127], [-122.373435, 37.737135], [-122.373456, 37.737142], [-122.373476, 37.73715], [-122.373497, 37.737158], [-122.373517, 37.737167], [-122.373537, 37.737176], [-122.373777, 37.737373], [-122.37395, 37.73751], [-122.374126, 37.737644], [-122.374309, 37.737779], [-122.374333, 37.737793], [-122.374362, 37.737806], [-122.374395, 37.737816], [-122.374421, 37.737821], [-122.374441, 37.737823], [-122.374463, 37.737824], [-122.374488, 37.737823], [-122.374513, 37.737819], [-122.37465, 37.737876], [-122.374739, 37.737918], [-122.374827, 37.737962], [-122.374914, 37.738007], [-122.375, 37.738053], [-122.375049, 37.738088], [-122.375079, 37.738109], [-122.375109, 37.738128], [-122.37514, 37.738148], [-122.375171, 37.738167], [-122.375202, 37.738186], [-122.375234, 37.738204], [-122.375266, 37.738222], [-122.375299, 37.738239], [-122.375332, 37.738256], [-122.375365, 37.738273], [-122.375399, 37.738288], [-122.375433, 37.738304], [-122.375468, 37.738319], [-122.375503, 37.738334], [-122.375538, 37.738348], [-122.375573, 37.738361], [-122.375609, 37.738374], [-122.375645, 37.738387], [-122.375681, 37.738399], [-122.375717, 37.73841], [-122.375754, 37.738422], [-122.375791, 37.738432], [-122.375828, 37.738442], [-122.375866, 37.738452], [-122.375903, 37.738461], [-122.375941, 37.738469], [-122.375987, 37.738478], [-122.376017, 37.738478], [-122.376038, 37.738478], [-122.376063, 37.738477], [-122.376092, 37.738474], [-122.376113, 37.738471], [-122.376137, 37.738466], [-122.376162, 37.738461], [-122.376186, 37.738454], [-122.376213, 37.738446], [-122.376232, 37.738439], [-122.37625, 37.738431], [-122.376269, 37.738422], [-122.37629, 37.738411], [-122.37631, 37.7384], [-122.376327, 37.738389], [-122.376343, 37.738378], [-122.376358, 37.738367], [-122.376378, 37.73835], [-122.376397, 37.738332], [-122.37641, 37.738319], [-122.376421, 37.738305], [-122.376437, 37.738285], [-122.376452, 37.738261], [-122.376018, 37.737991], [-122.375987, 37.737995], [-122.375963, 37.737997], [-122.37594, 37.737999], [-122.375916, 37.738001], [-122.375892, 37.738002], [-122.375869, 37.738003], [-122.375845, 37.738004], [-122.375822, 37.738004], [-122.375798, 37.738004], [-122.375774, 37.738004], [-122.375751, 37.738003], [-122.375727, 37.738002], [-122.375704, 37.738001], [-122.37568, 37.738], [-122.375656, 37.737998], [-122.375633, 37.737996], [-122.37561, 37.737993], [-122.375586, 37.73799], [-122.375563, 37.737987], [-122.37554, 37.737983], [-122.375507, 37.737977], [-122.37548, 37.73797], [-122.37546, 37.737965], [-122.375439, 37.737959], [-122.375413, 37.737951], [-122.375393, 37.737945], [-122.375374, 37.737937], [-122.375354, 37.73793], [-122.375335, 37.737922], [-122.375311, 37.737911], [-122.375286, 37.737899], [-122.375262, 37.737887], [-122.375239, 37.737873], [-122.375222, 37.737863], [-122.375205, 37.737853], [-122.375183, 37.737838], [-122.375162, 37.737823], [-122.375147, 37.737811], [-122.375132, 37.737799], [-122.375113, 37.737782], [-122.375099, 37.737769], [-122.375085, 37.737756], [-122.375068, 37.737738], [-122.375051, 37.737719], [-122.375039, 37.737705], [-122.375028, 37.737691], [-122.375013, 37.737671], [-122.374999, 37.737652], [-122.37499, 37.737636], [-122.37498, 37.737621], [-122.374969, 37.7376], [-122.374958, 37.737579], [-122.374949, 37.737558], [-122.374942, 37.737542], [-122.374936, 37.737525], [-122.374929, 37.737503], [-122.374924, 37.737487], [-122.37492, 37.73747], [-122.37492, 37.737453], [-122.374909, 37.737426], [-122.374903, 37.737408], [-122.374897, 37.737385], [-122.374892, 37.737361], [-122.374888, 37.737337], [-122.374884, 37.737313], [-122.374882, 37.737289], [-122.374881, 37.737265], [-122.374881, 37.737247], [-122.374882, 37.737229], [-122.374883, 37.737211], [-122.374885, 37.737193], [-122.374888, 37.737169], [-122.374892, 37.737145], [-122.374896, 37.737127], [-122.3749, 37.73711], [-122.374907, 37.737086], [-122.374915, 37.737063], [-122.374924, 37.73704], [-122.374934, 37.737017], [-122.374945, 37.736995], [-122.374957, 37.736973], [-122.37497, 37.736951], [-122.37498, 37.736935], [-122.374991, 37.736919], [-122.375006, 37.736898], [-122.375022, 37.736878], [-122.375039, 37.736858], [-122.375048, 37.736837], [-122.375038, 37.736822], [-122.375031, 37.736803], [-122.375027, 37.736786], [-122.375026, 37.736764], [-122.375029, 37.736743], [-122.375035, 37.736727], [-122.375044, 37.736708], [-122.375061, 37.736688], [-122.37508, 37.736671], [-122.375098, 37.736655], [-122.375113, 37.73664], [-122.375128, 37.73662], [-122.375142, 37.736598], [-122.37515, 37.736581], [-122.375156, 37.736563], [-122.375163, 37.736539], [-122.375166, 37.736519], [-122.375168, 37.736495], [-122.375169, 37.736474], [-122.375167, 37.736449], [-122.375163, 37.736427], [-122.37522, 37.736299], [-122.375237, 37.736225], [-122.375493, 37.736054], [-122.375565, 37.735998], [-122.375665, 37.735884], [-122.375737, 37.735829], [-122.375805, 37.735812], [-122.375902, 37.735838], [-122.375948, 37.735843], [-122.375966, 37.735816], [-122.375965, 37.735773], [-122.375937, 37.735722], [-122.375905, 37.735653], [-122.375881, 37.735629], [-122.375899, 37.735586], [-122.37591, 37.735561], [-122.375898, 37.735531], [-122.375855, 37.73552], [-122.375828, 37.735493], [-122.375873, 37.735477], [-122.37585, 37.735453], [-122.375876, 37.735437], [-122.375902, 37.735416], [-122.375928, 37.735385], [-122.375965, 37.735305], [-122.37599, 37.735241], [-122.376, 37.735186], [-122.375917, 37.735087], [-122.375874, 37.735048], [-122.375833, 37.735088], [-122.375791, 37.735095], [-122.37573, 37.735121], [-122.375697, 37.735182], [-122.375629, 37.735207], [-122.375572, 37.735239], [-122.375535, 37.735285], [-122.375502, 37.735331], [-122.375461, 37.735359], [-122.375408, 37.735384], [-122.375373, 37.735397], [-122.37532, 37.735394], [-122.375254, 37.73538], [-122.375204, 37.735348], [-122.375165, 37.735324], [-122.375126, 37.735291], [-122.375075, 37.735265], [-122.375063, 37.735222], [-122.375054, 37.735198], [-122.375042, 37.735165], [-122.375038, 37.735135], [-122.375037, 37.735098], [-122.375058, 37.735043], [-122.375008, 37.735029], [-122.374966, 37.735029], [-122.374935, 37.735015], [-122.374908, 37.735003], [-122.374877, 37.734976], [-122.374871, 37.734924], [-122.374893, 37.734857], [-122.374914, 37.734808], [-122.374947, 37.734741], [-122.374988, 37.734704], [-122.37503, 37.734682], [-122.375071, 37.734654], [-122.375105, 37.734629], [-122.375116, 37.734586], [-122.375146, 37.734562], [-122.375129, 37.734522], [-122.37509, 37.734496], [-122.375036, 37.734454], [-122.374981, 37.734427], [-122.374939, 37.734419], [-122.374913, 37.734435], [-122.374893, 37.734423], [-122.374893, 37.734398], [-122.374907, 37.734359], [-122.374894, 37.73431], [-122.374882, 37.73428], [-122.374877, 37.734244], [-122.374869, 37.734207], [-122.374868, 37.734171], [-122.374927, 37.734073], [-122.374952, 37.734015], [-122.374954, 37.733966], [-122.374957, 37.733926], [-122.374964, 37.73389], [-122.374982, 37.733862], [-122.375013, 37.733843], [-122.37507, 37.733836], [-122.375123, 37.733826], [-122.375154, 37.73382], [-122.375172, 37.733795], [-122.375171, 37.733765], [-122.375229, 37.733624], [-122.375289, 37.733553], [-122.375325, 37.733486], [-122.375362, 37.733424], [-122.375376, 37.733376], [-122.375382, 37.733312], [-122.375464, 37.733228], [-122.37551, 37.7332], [-122.375523, 37.733139], [-122.375507, 37.733106], [-122.375652, 37.732934], [-122.375686, 37.732903], [-122.375685, 37.73288], [-122.375651, 37.732897], [-122.37555, 37.732829], [-122.375617, 37.732755], [-122.375574, 37.732716], [-122.375197, 37.732959], [-122.375009, 37.732774], [-122.37499, 37.73278], [-122.37497, 37.732753], [-122.374891, 37.7328], [-122.374867, 37.732773], [-122.374833, 37.732786], [-122.374805, 37.732756], [-122.374609, 37.73288], [-122.374558, 37.73282], [-122.374905, 37.732605], [-122.374823, 37.73253], [-122.374676, 37.732639], [-122.374394, 37.73254], [-122.37431, 37.732548], [-122.37423, 37.732576], [-122.374177, 37.732586], [-122.37412, 37.732621], [-122.374113, 37.732657], [-122.374052, 37.732667], [-122.374003, 37.732674], [-122.373912, 37.732712], [-122.373893, 37.732737], [-122.373883, 37.732773], [-122.373791, 37.732775], [-122.373761, 37.7328], [-122.373754, 37.732827], [-122.373747, 37.732855], [-122.373725, 37.732885], [-122.373694, 37.732895], [-122.373637, 37.732893], [-122.37361, 37.732899], [-122.373568, 37.732909], [-122.373542, 37.732928], [-122.373512, 37.732949], [-122.373501, 37.73298], [-122.373503, 37.733044], [-122.3735, 37.733071], [-122.373481, 37.733087], [-122.373436, 37.733106], [-122.373412, 37.7331], [-122.37339, 37.733128], [-122.373372, 37.733155], [-122.373327, 37.733186], [-122.373292, 37.733199], [-122.373255, 37.733221], [-122.373217, 37.733255], [-122.373184, 37.733313], [-122.373146, 37.733335], [-122.373109, 37.733357], [-122.373056, 37.733385], [-122.373026, 37.733416], [-122.372988, 37.733444], [-122.372947, 37.73349], [-122.372903, 37.733543], [-122.372843, 37.733616], [-122.372787, 37.733675], [-122.37266, 37.73379], [-122.372616, 37.733847], [-122.372571, 37.7339], [-122.372542, 37.733965], [-122.372516, 37.733999], [-122.372467, 37.734021], [-122.372391, 37.734046], [-122.372338, 37.734074], [-122.372264, 37.734164], [-122.37223, 37.734198], [-122.3722, 37.734207], [-122.372135, 37.73422], [-122.372066, 37.734218], [-122.372024, 37.734213], [-122.371977, 37.734199], [-122.371922, 37.734209], [-122.371893, 37.734188], [-122.37185, 37.73417], [-122.371815, 37.734143], [-122.371784, 37.734123], [-122.371757, 37.734099], [-122.371718, 37.734075], [-122.371659, 37.734043], [-122.37159, 37.734007], [-122.371531, 37.733947], [-122.371503, 37.733917], [-122.371452, 37.733867], [-122.371413, 37.733822], [-122.371366, 37.733789], [-122.371306, 37.733699], [-122.371248, 37.733663], [-122.371182, 37.733631], [-122.371143, 37.733604], [-122.371119, 37.733565], [-122.371069, 37.733544], [-122.371041, 37.733514], [-122.371009, 37.733463], [-122.37097, 37.733415], [-122.370946, 37.733385], [-122.370907, 37.733349], [-122.370883, 37.733301], [-122.370855, 37.733256], [-122.370812, 37.733242], [-122.370763, 37.733251], [-122.370739, 37.733237], [-122.370742, 37.733209], [-122.370734, 37.733167], [-122.370713, 37.733112], [-122.370604, 37.733035], [-122.370511, 37.733006], [-122.370445, 37.73295], [-122.370337, 37.732909], [-122.370232, 37.732868], [-122.370174, 37.732838], [-122.370077, 37.732788], [-122.369991, 37.732714], [-122.369929, 37.732672], [-122.36989, 37.732639], [-122.369823, 37.732595], [-122.369765, 37.732571], [-122.369665, 37.732527], [-122.369587, 37.732477], [-122.369536, 37.732432], [-122.369523, 37.732368], [-122.369525, 37.732299], [-122.369528, 37.732253], [-122.369515, 37.732201], [-122.369459, 37.732156], [-122.369436, 37.732144], [-122.369413, 37.732131], [-122.369391, 37.732118], [-122.36937, 37.732105], [-122.369348, 37.732092], [-122.369327, 37.732078], [-122.369306, 37.732064], [-122.369285, 37.73205], [-122.369265, 37.732036], [-122.369245, 37.732021], [-122.369201, 37.731994], [-122.369177, 37.731996], [-122.369153, 37.731997], [-122.369132, 37.731996], [-122.36911, 37.731993], [-122.369083, 37.731987], [-122.369059, 37.731979], [-122.369039, 37.731971], [-122.369021, 37.731961], [-122.368981, 37.731993], [-122.368997, 37.73195], [-122.368979, 37.731945], [-122.368959, 37.73194], [-122.368932, 37.731936], [-122.368907, 37.731932], [-122.368882, 37.731931], [-122.368851, 37.73193], [-122.368827, 37.731931], [-122.368804, 37.731933], [-122.368778, 37.731937], [-122.368752, 37.731942], [-122.368733, 37.731947], [-122.368715, 37.731953], [-122.368686, 37.731968], [-122.368662, 37.731992], [-122.368647, 37.732014], [-122.368638, 37.732031], [-122.368631, 37.732049], [-122.368627, 37.732067], [-122.368625, 37.732089], [-122.368627, 37.732112], [-122.368633, 37.732135], [-122.368642, 37.732164], [-122.368643, 37.732191], [-122.368638, 37.73221], [-122.368627, 37.732231], [-122.368611, 37.73225], [-122.368591, 37.732264], [-122.368567, 37.732276], [-122.368547, 37.732281], [-122.368525, 37.732285], [-122.368496, 37.732287], [-122.368467, 37.73229], [-122.368438, 37.732291], [-122.368417, 37.732292], [-122.368395, 37.732292], [-122.368373, 37.732291], [-122.368352, 37.73229], [-122.36833, 37.732289], [-122.368309, 37.732287], [-122.36828, 37.732285], [-122.368259, 37.732282], [-122.368237, 37.732279], [-122.368216, 37.732275], [-122.368195, 37.732271], [-122.368168, 37.732265], [-122.368141, 37.732258], [-122.368114, 37.732239], [-122.368087, 37.73222], [-122.368059, 37.732202], [-122.368031, 37.732184], [-122.368003, 37.732166], [-122.367974, 37.732149], [-122.367945, 37.732132], [-122.367916, 37.732115], [-122.367886, 37.732099], [-122.367826, 37.732066], [-122.367803, 37.732045], [-122.367784, 37.73203], [-122.367767, 37.732019], [-122.36775, 37.732008], [-122.367727, 37.731996], [-122.367704, 37.731985], [-122.367684, 37.731977], [-122.367656, 37.731968], [-122.367621, 37.731958], [-122.367591, 37.731952], [-122.367566, 37.731949], [-122.367538, 37.731946], [-122.367509, 37.731945], [-122.367483, 37.731946], [-122.367458, 37.731947], [-122.367433, 37.73195], [-122.367408, 37.731954], [-122.36738, 37.73196], [-122.367356, 37.731967], [-122.36733, 37.731976], [-122.3673, 37.731988], [-122.367278, 37.731998], [-122.367266, 37.732011], [-122.36725, 37.732028], [-122.367232, 37.732044], [-122.367219, 37.732056], [-122.367205, 37.732067], [-122.367186, 37.732082], [-122.367166, 37.732097], [-122.367151, 37.732107], [-122.367136, 37.732117], [-122.367115, 37.73213], [-122.367082, 37.732144], [-122.367054, 37.73215], [-122.367022, 37.73216], [-122.366988, 37.732175], [-122.366962, 37.73219], [-122.366939, 37.732199], [-122.366922, 37.732219], [-122.366905, 37.732249], [-122.366892, 37.73227], [-122.366876, 37.732285], [-122.366859, 37.732295], [-122.366839, 37.732301], [-122.366818, 37.732304], [-122.366794, 37.732303], [-122.366765, 37.732295], [-122.366678, 37.732215], [-122.365835, 37.73314], [-122.365857, 37.733197], [-122.36532, 37.733798], [-122.365294, 37.733804], [-122.365268, 37.733804], [-122.365242, 37.733798], [-122.365219, 37.733785], [-122.365205, 37.733771], [-122.365196, 37.733756], [-122.365192, 37.73374], [-122.366542, 37.732184], [-122.366457, 37.732144], [-122.366314, 37.732287], [-122.36623, 37.732239], [-122.36556, 37.732995], [-122.365446, 37.733055], [-122.36533, 37.732999], [-122.365348, 37.732891], [-122.366182, 37.731991], [-122.36615, 37.731975], [-122.36619, 37.731916], [-122.366, 37.731828], [-122.365157, 37.732769], [-122.365013, 37.73283], [-122.364938, 37.732756], [-122.364967, 37.732665], [-122.36578, 37.731773], [-122.36581, 37.731715], [-122.365651, 37.731626], [-122.364828, 37.732543], [-122.364733, 37.732486], [-122.365108, 37.732066], [-122.363701, 37.731284], [-122.36299, 37.732074], [-122.362876, 37.732143], [-122.362623, 37.732006], [-122.363404, 37.731115], [-122.362853, 37.730801], [-122.362061, 37.731675], [-122.361776, 37.731539], [-122.362458, 37.730761], [-122.362568, 37.730643], [-122.361976, 37.730329], [-122.362086, 37.73021], [-122.3619, 37.730088], [-122.36187, 37.730082], [-122.361847, 37.730078], [-122.361824, 37.730074], [-122.361794, 37.73007], [-122.361763, 37.730067], [-122.361732, 37.730064], [-122.361701, 37.730062], [-122.36167, 37.730062], [-122.361639, 37.730062], [-122.361608, 37.730063], [-122.361577, 37.730064], [-122.361547, 37.730067], [-122.361516, 37.73007], [-122.361482, 37.730075], [-122.36146, 37.730079], [-122.361438, 37.730082], [-122.361416, 37.730085], [-122.361394, 37.730086], [-122.361372, 37.730088], [-122.36135, 37.730088], [-122.361328, 37.730088], [-122.361305, 37.730088], [-122.361283, 37.730086], [-122.361261, 37.730085], [-122.361239, 37.730082], [-122.361214, 37.730079], [-122.361184, 37.730073], [-122.361163, 37.730069], [-122.361139, 37.730063], [-122.361108, 37.730054], [-122.361077, 37.730044], [-122.361049, 37.730033], [-122.36103, 37.730025], [-122.36101, 37.730016], [-122.360991, 37.730007], [-122.360879, 37.729906], [-122.360759, 37.729968], [-122.360774, 37.729979], [-122.360787, 37.72999], [-122.360803, 37.730008], [-122.360816, 37.730027], [-122.360826, 37.730047], [-122.360832, 37.730068], [-122.360835, 37.730085], [-122.360835, 37.730103], [-122.360831, 37.730127], [-122.360823, 37.730151], [-122.360814, 37.730168], [-122.360802, 37.730184], [-122.36079, 37.730198], [-122.360777, 37.73021], [-122.360755, 37.730225], [-122.360703, 37.730243], [-122.360665, 37.730253], [-122.360627, 37.730262], [-122.360588, 37.730271], [-122.36055, 37.730279], [-122.360511, 37.730286], [-122.360472, 37.730293], [-122.360432, 37.730299], [-122.360393, 37.730305], [-122.360354, 37.73031], [-122.360314, 37.730315], [-122.360274, 37.730319], [-122.360235, 37.730323], [-122.360195, 37.730326], [-122.360155, 37.730329], [-122.360115, 37.730331], [-122.360075, 37.730332], [-122.360035, 37.730333], [-122.359995, 37.730333], [-122.359955, 37.730333], [-122.359915, 37.730332], [-122.359855, 37.730305], [-122.359236, 37.73001], [-122.35879, 37.729783], [-122.358957, 37.729712], [-122.358844, 37.72966], [-122.358969, 37.729518], [-122.361421, 37.728953], [-122.361895, 37.728828], [-122.361919, 37.728822], [-122.361942, 37.728817], [-122.361967, 37.728809], [-122.362001, 37.728798], [-122.362031, 37.728787], [-122.362055, 37.728777], [-122.362084, 37.728764], [-122.362107, 37.728752], [-122.362134, 37.728737], [-122.362153, 37.728725], [-122.362172, 37.728713], [-122.36219, 37.7287], [-122.362209, 37.728685], [-122.362233, 37.728666], [-122.362256, 37.728646], [-122.362269, 37.728634], [-122.362279, 37.72862], [-122.362288, 37.728604], [-122.362294, 37.728584], [-122.362295, 37.728562], [-122.362288, 37.728533], [-122.362268, 37.728514], [-122.362249, 37.728505], [-122.362226, 37.728496], [-122.362198, 37.728486], [-122.362177, 37.728479], [-122.362156, 37.728472], [-122.362132, 37.728466], [-122.362102, 37.728459], [-122.36208, 37.728455], [-122.362049, 37.72845], [-122.362024, 37.728447], [-122.362002, 37.728445], [-122.361971, 37.728444], [-122.361937, 37.728443], [-122.361912, 37.728443], [-122.361889, 37.728444], [-122.361858, 37.728447], [-122.361831, 37.72845], [-122.361449, 37.728524], [-122.359254, 37.729046], [-122.35887, 37.729172], [-122.357731, 37.729443], [-122.357479, 37.729245], [-122.357875, 37.72895], [-122.360026, 37.728454], [-122.360047, 37.72845], [-122.360067, 37.728444], [-122.360087, 37.728439], [-122.360107, 37.728432], [-122.360129, 37.728425], [-122.360155, 37.728414], [-122.360174, 37.728406], [-122.360192, 37.728398], [-122.36021, 37.728388], [-122.360228, 37.728379], [-122.360247, 37.728367], [-122.360269, 37.728353], [-122.360287, 37.72834], [-122.36031, 37.728322], [-122.360335, 37.7283], [-122.36036, 37.728281], [-122.360386, 37.728263], [-122.3604, 37.728243], [-122.360407, 37.72822], [-122.360407, 37.728203], [-122.360402, 37.728183], [-122.360391, 37.728166], [-122.36037, 37.728157], [-122.360347, 37.728153], [-122.360317, 37.728148], [-122.360286, 37.728144], [-122.360255, 37.728141], [-122.360224, 37.728138], [-122.360192, 37.728137], [-122.360161, 37.728136], [-122.360138, 37.728137], [-122.360114, 37.728137], [-122.360091, 37.728138], [-122.360067, 37.72814], [-122.360036, 37.728143], [-122.360005, 37.728147], [-122.359973, 37.728152], [-122.357158, 37.728825], [-122.35712, 37.728661], [-122.356967, 37.72871], [-122.3577, 37.726282], [-122.358014, 37.726039], [-122.361641, 37.725219], [-122.361256, 37.724165], [-122.357962, 37.724944], [-122.357838, 37.724624], [-122.361524, 37.723775], [-122.362006, 37.724061], [-122.362085, 37.723987], [-122.364139, 37.725245], [-122.364909, 37.725702], [-122.364934, 37.72571], [-122.364961, 37.725717], [-122.364983, 37.725721], [-122.365012, 37.725724], [-122.365046, 37.725725], [-122.365068, 37.725724], [-122.365088, 37.725721], [-122.365108, 37.725718], [-122.365133, 37.725712], [-122.36516, 37.725703], [-122.365178, 37.725695], [-122.365199, 37.725685], [-122.365224, 37.72567], [-122.365247, 37.725652], [-122.365262, 37.725639], [-122.365275, 37.725624], [-122.365287, 37.725609], [-122.365296, 37.725595], [-122.365304, 37.72558], [-122.365313, 37.72556], [-122.36532, 37.725538], [-122.365323, 37.725522], [-122.365324, 37.725504], [-122.365324, 37.725484], [-122.365321, 37.725461], [-122.365316, 37.72544], [-122.36531, 37.725425], [-122.365304, 37.72541], [-122.365295, 37.725395], [-122.365053, 37.725226], [-122.362367, 37.723679], [-122.36275, 37.723259], [-122.359976, 37.721629], [-122.360235, 37.721358], [-122.362998, 37.722979], [-122.36381, 37.722102], [-122.359221, 37.719407], [-122.359181, 37.719395], [-122.359162, 37.719379], [-122.359145, 37.719358], [-122.359136, 37.719341], [-122.359131, 37.719321], [-122.359129, 37.719298], [-122.359133, 37.719277], [-122.35914, 37.719258], [-122.359152, 37.719238], [-122.359822, 37.718515], [-122.359845, 37.718498], [-122.359876, 37.718483], [-122.359899, 37.718477], [-122.359922, 37.718473], [-122.359942, 37.718472], [-122.359962, 37.718474], [-122.359983, 37.718477], [-122.360005, 37.718484], [-122.360025, 37.718493], [-122.362714, 37.720071], [-122.363043, 37.7197], [-122.36306, 37.719689], [-122.36308, 37.719681], [-122.363108, 37.719674], [-122.36314, 37.719673], [-122.363167, 37.71964], [-122.363157, 37.719617], [-122.363156, 37.719592], [-122.363161, 37.719574], [-122.363171, 37.719558], [-122.363657, 37.719055], [-122.362553, 37.718432], [-122.362531, 37.718418], [-122.362512, 37.718402], [-122.362496, 37.718385], [-122.36248, 37.718363], [-122.362468, 37.718339], [-122.362461, 37.71832], [-122.362458, 37.718304], [-122.362456, 37.718282], [-122.362459, 37.718252], [-122.362466, 37.718226], [-122.362477, 37.718202], [-122.362493, 37.718178], [-122.362508, 37.718162], [-122.358584, 37.715883], [-122.358723, 37.715731], [-122.362646, 37.718021], [-122.362786, 37.717866], [-122.363866, 37.716727], [-122.35992, 37.714426], [-122.360037, 37.714298], [-122.363975, 37.716581], [-122.364255, 37.716297], [-122.36427, 37.716287], [-122.364291, 37.716279], [-122.364313, 37.716274], [-122.364336, 37.716273], [-122.364359, 37.716277], [-122.364396, 37.716278], [-122.365216, 37.715352], [-122.365238, 37.715301], [-122.36524, 37.715235], [-122.365193, 37.715177], [-122.364773, 37.714933], [-122.364736, 37.714971], [-122.36458, 37.714864], [-122.364553, 37.714804], [-122.364269, 37.714639], [-122.364189, 37.714637], [-122.364014, 37.71455], [-122.364049, 37.71451], [-122.363306, 37.714078], [-122.363269, 37.714116], [-122.363112, 37.71401], [-122.363086, 37.71395], [-122.362802, 37.713784], [-122.362722, 37.713782], [-122.362547, 37.713695], [-122.362582, 37.713656], [-122.36185, 37.713229], [-122.361812, 37.713267], [-122.361656, 37.713161], [-122.36163, 37.713101], [-122.361345, 37.712935], [-122.361265, 37.712933], [-122.361092, 37.712851], [-122.361125, 37.712807], [-122.36114, 37.712789], [-122.361171, 37.712752], [-122.361344, 37.712845], [-122.361366, 37.712893], [-122.361675, 37.713073], [-122.361738, 37.713075], [-122.361918, 37.713159], [-122.361884, 37.713194], [-122.362613, 37.71362], [-122.362645, 37.713583], [-122.362801, 37.713694], [-122.362822, 37.713741], [-122.363131, 37.713921], [-122.363194, 37.713924], [-122.363375, 37.714008], [-122.36334, 37.714043], [-122.36408, 37.714474], [-122.364112, 37.714438], [-122.364268, 37.714549], [-122.364289, 37.714596], [-122.364598, 37.714776], [-122.364661, 37.714778], [-122.364842, 37.714863], [-122.364807, 37.714898], [-122.365388, 37.715237], [-122.36442, 37.716319], [-122.364429, 37.716343], [-122.36443, 37.71636], [-122.364447, 37.716373], [-122.364465, 37.716381], [-122.364483, 37.716389], [-122.3645, 37.716397], [-122.364517, 37.716406], [-122.364534, 37.716414], [-122.364551, 37.716423], [-122.364568, 37.716433], [-122.364584, 37.716442], [-122.364625, 37.716466], [-122.364654, 37.716478], [-122.364684, 37.716484], [-122.364708, 37.716485], [-122.364734, 37.716482], [-122.364762, 37.716475], [-122.36478, 37.716468], [-122.364799, 37.716458], [-122.364818, 37.716448], [-122.364835, 37.716437], [-122.364854, 37.716423], [-122.364872, 37.716408], [-122.364886, 37.716394], [-122.364902, 37.716376], [-122.364918, 37.716349], [-122.364922, 37.716325], [-122.364931, 37.716299], [-122.364939, 37.71628], [-122.36495, 37.716263], [-122.364965, 37.716242], [-122.36498, 37.716225], [-122.364994, 37.716211], [-122.365013, 37.716196], [-122.365035, 37.71618], [-122.36506, 37.716167], [-122.365088, 37.716154], [-122.365111, 37.716138], [-122.365115, 37.716121], [-122.365122, 37.716104], [-122.36513, 37.716088], [-122.365142, 37.716071], [-122.365161, 37.716051], [-122.365183, 37.716034], [-122.365203, 37.716021], [-122.365237, 37.716004], [-122.365263, 37.715993], [-122.365287, 37.715985], [-122.365312, 37.715979], [-122.365335, 37.715974], [-122.365355, 37.715972], [-122.365381, 37.715969], [-122.365407, 37.715969], [-122.365427, 37.71597], [-122.365447, 37.715971], [-122.365479, 37.715976], [-122.365507, 37.715982], [-122.365531, 37.71599], [-122.365552, 37.715997], [-122.365573, 37.716006], [-122.365592, 37.716016], [-122.365613, 37.716029], [-122.365633, 37.716043], [-122.365651, 37.716057], [-122.365666, 37.716072], [-122.365679, 37.716087], [-122.365723, 37.716142], [-122.365761, 37.716188], [-122.3658, 37.716234], [-122.36584, 37.716279], [-122.365881, 37.716324], [-122.365923, 37.716368], [-122.365966, 37.716411], [-122.36601, 37.716454], [-122.36606, 37.716501], [-122.36607, 37.716517], [-122.36608, 37.716534], [-122.366091, 37.71655], [-122.366102, 37.716566], [-122.366113, 37.716582], [-122.366125, 37.716597], [-122.366137, 37.716613], [-122.36615, 37.716628], [-122.366162, 37.716643], [-122.366175, 37.716658], [-122.366189, 37.716673], [-122.366203, 37.716688], [-122.366217, 37.716702], [-122.366231, 37.716716], [-122.366246, 37.71673], [-122.366261, 37.716744], [-122.366276, 37.716758], [-122.366291, 37.716771], [-122.366307, 37.716784], [-122.366323, 37.716797], [-122.36634, 37.71681], [-122.366356, 37.716823], [-122.366373, 37.716835], [-122.366391, 37.716847], [-122.366408, 37.716859], [-122.366426, 37.71687], [-122.366444, 37.716882], [-122.366462, 37.716893], [-122.366493, 37.716911], [-122.366623, 37.716994], [-122.366755, 37.717076], [-122.36701, 37.717225], [-122.367368, 37.717432], [-122.367728, 37.717647], [-122.367747, 37.717658], [-122.367767, 37.717669], [-122.367793, 37.717683], [-122.367821, 37.717696], [-122.367848, 37.717708], [-122.367877, 37.717719], [-122.367898, 37.717727], [-122.367925, 37.717736], [-122.36796, 37.717742], [-122.367995, 37.717748], [-122.36803, 37.717753], [-122.368062, 37.717757], [-122.368255, 37.717777], [-122.368448, 37.717797], [-122.368468, 37.7178], [-122.368488, 37.717801], [-122.368509, 37.717803], [-122.368529, 37.717804], [-122.368549, 37.717805], [-122.36857, 37.717806], [-122.36859, 37.717806], [-122.36861, 37.717806], [-122.368631, 37.717806], [-122.368651, 37.717806], [-122.368671, 37.717805], [-122.368692, 37.717804], [-122.368712, 37.717802], [-122.368732, 37.717801], [-122.368752, 37.717799], [-122.368774, 37.717797], [-122.368818, 37.717792], [-122.368862, 37.717788], [-122.368906, 37.717784], [-122.36895, 37.717781], [-122.368994, 37.717779], [-122.369038, 37.717777], [-122.369082, 37.717776], [-122.369126, 37.717776], [-122.369171, 37.717776], [-122.369203, 37.7178], [-122.369244, 37.717779], [-122.369277, 37.717784], [-122.369311, 37.717789], [-122.369344, 37.717795], [-122.369377, 37.717802], [-122.369409, 37.71781], [-122.369434, 37.717817], [-122.369458, 37.717824], [-122.369489, 37.717834], [-122.36952, 37.717845], [-122.369543, 37.717854], [-122.369566, 37.717863], [-122.369596, 37.717876], [-122.369625, 37.71789], [-122.369654, 37.717905], [-122.369681, 37.717921], [-122.369709, 37.717937], [-122.369735, 37.717954], [-122.369761, 37.717972], [-122.369786, 37.71799], [-122.36981, 37.718009], [-122.369833, 37.718029], [-122.369855, 37.71805], [-122.369877, 37.718071], [-122.369897, 37.718092], [-122.369917, 37.718115], [-122.369931, 37.718132], [-122.369944, 37.718149], [-122.369957, 37.718167], [-122.369967, 37.718181], [-122.369971, 37.718199], [-122.369975, 37.718217], [-122.36998, 37.718235], [-122.369985, 37.718253], [-122.36999, 37.718271], [-122.369996, 37.718289], [-122.370002, 37.718307], [-122.370009, 37.718324], [-122.370016, 37.718342], [-122.370023, 37.718359], [-122.370031, 37.718376], [-122.370039, 37.718393], [-122.370048, 37.718411], [-122.370056, 37.718427], [-122.370066, 37.718444], [-122.370075, 37.718461], [-122.370085, 37.718477], [-122.370098, 37.718498], [-122.370113, 37.718512], [-122.370132, 37.71853], [-122.370153, 37.718548], [-122.370169, 37.718561], [-122.370185, 37.718573], [-122.370208, 37.718589], [-122.370231, 37.718605], [-122.370249, 37.718616], [-122.370267, 37.718627], [-122.370292, 37.718641], [-122.370317, 37.718654], [-122.370343, 37.718666], [-122.370363, 37.718675], [-122.370383, 37.718683], [-122.37041, 37.718694], [-122.370431, 37.718701], [-122.370452, 37.718708], [-122.37048, 37.718717], [-122.370509, 37.718725], [-122.370538, 37.718732], [-122.370567, 37.718738], [-122.370596, 37.718744], [-122.370626, 37.718748], [-122.370656, 37.718752], [-122.370686, 37.718755], [-122.370716, 37.718757], [-122.370739, 37.718758], [-122.370762, 37.718759], [-122.370792, 37.718759], [-122.370815, 37.718758], [-122.370837, 37.718757], [-122.370867, 37.718755], [-122.370904, 37.718748], [-122.370927, 37.718741], [-122.370952, 37.718736], [-122.370979, 37.718733], [-122.371002, 37.718732], [-122.371027, 37.718734], [-122.371055, 37.718738], [-122.371087, 37.718748], [-122.371106, 37.718755], [-122.371126, 37.718766], [-122.37115, 37.718782], [-122.371164, 37.718794], [-122.371178, 37.718806], [-122.371194, 37.71882], [-122.371218, 37.718835], [-122.371245, 37.718849], [-122.371271, 37.71886], [-122.371302, 37.71887], [-122.371331, 37.718876], [-122.371358, 37.71888], [-122.371378, 37.718882], [-122.371408, 37.718882], [-122.371444, 37.718876], [-122.371464, 37.718869], [-122.371487, 37.718864], [-122.371523, 37.718863], [-122.371556, 37.718869], [-122.371576, 37.718876], [-122.371598, 37.718896], [-122.371621, 37.718918], [-122.371639, 37.718935], [-122.371657, 37.718951], [-122.371683, 37.718972], [-122.371714, 37.718993], [-122.371737, 37.718998], [-122.371756, 37.719002], [-122.371779, 37.719005], [-122.371807, 37.719008], [-122.371834, 37.719009], [-122.371866, 37.719009], [-122.371889, 37.719008], [-122.371913, 37.719006], [-122.371936, 37.719003], [-122.371956, 37.719], [-122.371979, 37.718995], [-122.372005, 37.718992], [-122.372028, 37.718997], [-122.372055, 37.719002], [-122.372082, 37.719006], [-122.37211, 37.719007], [-122.372134, 37.719008], [-122.37216, 37.719007], [-122.372186, 37.719004], [-122.372206, 37.719002], [-122.372238, 37.718995], [-122.372229, 37.719038], [-122.372274, 37.718994], [-122.372302, 37.719001], [-122.37234, 37.719008], [-122.372373, 37.719013], [-122.372402, 37.719016], [-122.372431, 37.719018], [-122.372465, 37.719018], [-122.372504, 37.719017], [-122.372538, 37.719013], [-122.372571, 37.719009], [-122.372604, 37.719002], [-122.372628, 37.718997], [-122.37265, 37.718991], [-122.372685, 37.71898], [-122.372716, 37.718974], [-122.372742, 37.718971], [-122.372762, 37.718971], [-122.372786, 37.718974], [-122.372806, 37.718978], [-122.372827, 37.718981], [-122.372855, 37.718983], [-122.372876, 37.718982], [-122.3729, 37.718978], [-122.372926, 37.718971], [-122.372949, 37.718961], [-122.372969, 37.718949], [-122.372988, 37.718934], [-122.373248, 37.718852], [-122.373273, 37.718845], [-122.373299, 37.718838], [-122.373333, 37.71883], [-122.373368, 37.718823], [-122.373403, 37.718817], [-122.373439, 37.718811], [-122.373465, 37.718808], [-122.373492, 37.718806], [-122.373528, 37.718803], [-122.373564, 37.718801], [-122.3736, 37.7188], [-122.373627, 37.7188], [-122.373654, 37.718801], [-122.37369, 37.718803], [-122.373726, 37.718806], [-122.373753, 37.718808], [-122.373791, 37.718814], [-122.373821, 37.718822], [-122.373841, 37.718828], [-122.373862, 37.718835], [-122.37389, 37.718846], [-122.373925, 37.718862], [-122.373947, 37.718874], [-122.373965, 37.718885], [-122.373982, 37.718896], [-122.374002, 37.71891], [-122.374018, 37.718923], [-122.374033, 37.718936], [-122.374055, 37.718958], [-122.374071, 37.718975], [-122.374088, 37.718996], [-122.374103, 37.719018], [-122.374115, 37.719037], [-122.374127, 37.71906], [-122.374136, 37.71908], [-122.374143, 37.7191], [-122.374151, 37.719124], [-122.374155, 37.719145], [-122.374158, 37.719166], [-122.37416, 37.719184], [-122.374161, 37.719202], [-122.37416, 37.719227], [-122.374156, 37.719253], [-122.374151, 37.719279], [-122.374149, 37.719303], [-122.374149, 37.719325], [-122.374151, 37.719347], [-122.374156, 37.719373], [-122.374163, 37.719396], [-122.374169, 37.719411], [-122.374178, 37.719431], [-122.374192, 37.719455], [-122.374203, 37.71947], [-122.374215, 37.719485], [-122.374227, 37.719499], [-122.374241, 37.719513], [-122.374255, 37.719526], [-122.374269, 37.719539], [-122.374285, 37.719551], [-122.374301, 37.719562], [-122.374325, 37.719578], [-122.37442, 37.719673], [-122.374424, 37.71969], [-122.374432, 37.719713], [-122.374447, 37.71974], [-122.374459, 37.719757], [-122.374475, 37.719773], [-122.374495, 37.71979], [-122.374521, 37.719807], [-122.374544, 37.719818], [-122.374571, 37.719828], [-122.374599, 37.719836], [-122.374624, 37.719846], [-122.374647, 37.719858], [-122.374664, 37.719871], [-122.374682, 37.719889], [-122.374697, 37.719911], [-122.374715, 37.719937], [-122.374727, 37.719949], [-122.37474, 37.719961], [-122.374753, 37.719972], [-122.374766, 37.719984], [-122.374779, 37.719995], [-122.374793, 37.720007], [-122.374807, 37.720018], [-122.374821, 37.720029], [-122.374835, 37.720039], [-122.37485, 37.72005], [-122.374865, 37.72006], [-122.37488, 37.72007], [-122.374895, 37.72008], [-122.37491, 37.72009], [-122.374926, 37.720099], [-122.374942, 37.720108], [-122.374958, 37.720117], [-122.374974, 37.720126], [-122.374991, 37.720134], [-122.375007, 37.720143], [-122.375024, 37.720151], [-122.375041, 37.720159], [-122.375058, 37.720166], [-122.375076, 37.720174], [-122.375093, 37.720181], [-122.375111, 37.720187], [-122.375129, 37.720194], [-122.375147, 37.7202], [-122.375169, 37.72021], [-122.375205, 37.720218], [-122.375233, 37.720227], [-122.375254, 37.720233], [-122.375276, 37.720242], [-122.375303, 37.720253], [-122.375323, 37.720262], [-122.375341, 37.720271], [-122.37536, 37.72028], [-122.375378, 37.720291], [-122.375395, 37.720301], [-122.375412, 37.720313], [-122.375429, 37.720324], [-122.375445, 37.720337], [-122.37546, 37.720349], [-122.375475, 37.720362], [-122.375491, 37.720377], [-122.375512, 37.720398], [-122.375529, 37.720418], [-122.375542, 37.720435], [-122.375557, 37.720454], [-122.375592, 37.720553], [-122.375625, 37.720653], [-122.375656, 37.720753], [-122.375684, 37.720853], [-122.375711, 37.720953], [-122.375755, 37.721124], [-122.375767, 37.721138], [-122.375779, 37.72115], [-122.375793, 37.721161], [-122.375815, 37.721174], [-122.37584, 37.721189], [-122.375858, 37.721207], [-122.375869, 37.721224], [-122.375878, 37.721244], [-122.375883, 37.72127], [-122.375875, 37.721299], [-122.375864, 37.721327], [-122.375854, 37.721355], [-122.375847, 37.721376], [-122.375842, 37.721397], [-122.375835, 37.721426], [-122.37583, 37.721455], [-122.375826, 37.721484], [-122.375823, 37.721513], [-122.375822, 37.721535], [-122.375821, 37.721556], [-122.375821, 37.721585], [-122.375823, 37.721614], [-122.375825, 37.721636], [-122.375828, 37.721658], [-122.375833, 37.721687], [-122.375839, 37.721715], [-122.375847, 37.721746], [-122.375854, 37.721775], [-122.375861, 37.721803], [-122.375867, 37.721832], [-122.375873, 37.721861], [-122.375878, 37.72189], [-122.375882, 37.721919], [-122.375886, 37.721948], [-122.375889, 37.721978], [-122.375891, 37.722007], [-122.375893, 37.722036], [-122.375895, 37.722072], [-122.375903, 37.722091], [-122.375912, 37.722118], [-122.375917, 37.722141], [-122.37592, 37.722161], [-122.375923, 37.722184], [-122.375923, 37.722208], [-122.375922, 37.722231], [-122.375919, 37.722253], [-122.375914, 37.722274], [-122.375911, 37.72229], [-122.375908, 37.722306], [-122.375906, 37.722322], [-122.375904, 37.722339], [-122.375902, 37.722355], [-122.375901, 37.722371], [-122.3759, 37.722387], [-122.375899, 37.722404], [-122.375898, 37.72242], [-122.375898, 37.722436], [-122.375899, 37.722453], [-122.3759, 37.722469], [-122.375901, 37.722485], [-122.375902, 37.722501], [-122.375904, 37.722518], [-122.375906, 37.722534], [-122.375909, 37.72255], [-122.375911, 37.722566], [-122.375915, 37.722582], [-122.375918, 37.722599], [-122.375922, 37.722615], [-122.375926, 37.72263], [-122.375931, 37.722646], [-122.375936, 37.722662], [-122.375941, 37.722678], [-122.375947, 37.722694], [-122.375953, 37.722709], [-122.375959, 37.722725], [-122.375966, 37.72274], [-122.375973, 37.722756], [-122.375981, 37.722771], [-122.375988, 37.722786], [-122.375996, 37.722801], [-122.376005, 37.722816], [-122.376013, 37.722831], [-122.37603, 37.722858], [-122.37604, 37.722874], [-122.37605, 37.722891], [-122.37606, 37.722907], [-122.37607, 37.722924], [-122.376081, 37.72294], [-122.376092, 37.722956], [-122.376104, 37.722971], [-122.376116, 37.722987], [-122.376128, 37.723003], [-122.376141, 37.723018], [-122.376154, 37.723033], [-122.376167, 37.723048], [-122.376181, 37.723063], [-122.376194, 37.723077], [-122.376209, 37.723092], [-122.376223, 37.723106], [-122.376238, 37.72312], [-122.376253, 37.723133], [-122.376269, 37.723147], [-122.376285, 37.72316], [-122.376301, 37.723173], [-122.376317, 37.723186], [-122.376334, 37.723199], [-122.37635, 37.723211], [-122.376368, 37.723224], [-122.376385, 37.723236], [-122.376403, 37.723247], [-122.376421, 37.723259], [-122.376439, 37.72327], [-122.376457, 37.723281], [-122.376476, 37.723292], [-122.376495, 37.723302], [-122.376514, 37.723312], [-122.376564, 37.723336], [-122.376591, 37.723349], [-122.376609, 37.72336], [-122.376631, 37.723374], [-122.376651, 37.72339], [-122.376668, 37.723405], [-122.376683, 37.723421], [-122.376699, 37.72344], [-122.376714, 37.723462], [-122.37672, 37.723483], [-122.376715, 37.723506], [-122.376706, 37.723528], [-122.376697, 37.723543], [-122.376684, 37.723561], [-122.376665, 37.72358], [-122.377085, 37.724237], [-122.377101, 37.724225], [-122.377121, 37.724211], [-122.377143, 37.724198], [-122.377169, 37.724186], [-122.377194, 37.724177], [-122.377221, 37.72417], [-122.377254, 37.724164], [-122.377286, 37.724161], [-122.377324, 37.724163], [-122.377346, 37.724165], [-122.377368, 37.724166], [-122.37739, 37.724168], [-122.377411, 37.724169], [-122.377433, 37.72417], [-122.377455, 37.72417], [-122.377477, 37.72417], [-122.377499, 37.72417], [-122.377521, 37.72417], [-122.377543, 37.724169], [-122.377565, 37.724168], [-122.377587, 37.724167], [-122.377609, 37.724165], [-122.37763, 37.724163], [-122.377652, 37.724161], [-122.377674, 37.724158], [-122.377696, 37.724155], [-122.377717, 37.724152], [-122.377739, 37.724149], [-122.37776, 37.724145], [-122.377781, 37.724141], [-122.377803, 37.724137], [-122.377824, 37.724132], [-122.377861, 37.724092], [-122.377904, 37.724109], [-122.377953, 37.724094], [-122.378002, 37.72408], [-122.378052, 37.724067], [-122.378102, 37.724054], [-122.378152, 37.724042], [-122.378203, 37.72403], [-122.378253, 37.72402], [-122.378304, 37.72401], [-122.378386, 37.723996], [-122.378422, 37.723992], [-122.378459, 37.723987], [-122.378495, 37.72398], [-122.378531, 37.723973], [-122.378557, 37.723967], [-122.378584, 37.723961], [-122.378618, 37.723951], [-122.378644, 37.723943], [-122.37867, 37.723935], [-122.378703, 37.723923], [-122.378728, 37.723913], [-122.378753, 37.723903], [-122.378785, 37.723889], [-122.378817, 37.723874], [-122.37884, 37.723862], [-122.378863, 37.72385], [-122.378892, 37.723832], [-122.378914, 37.723819], [-122.378936, 37.723805], [-122.378963, 37.723786], [-122.37899, 37.723766], [-122.379016, 37.723745], [-122.379035, 37.723729], [-122.37905, 37.723716], [-122.379063, 37.723699], [-122.379075, 37.723681], [-122.379087, 37.723664], [-122.379099, 37.723646], [-122.37911, 37.723628], [-122.379121, 37.72361], [-122.379131, 37.723592], [-122.379141, 37.723573], [-122.379151, 37.723555], [-122.37916, 37.723536], [-122.379169, 37.723517], [-122.379177, 37.723498], [-122.379185, 37.723479], [-122.379193, 37.72346], [-122.3792, 37.723441], [-122.379206, 37.723422], [-122.379213, 37.723402], [-122.379219, 37.723383], [-122.379224, 37.723363], [-122.379229, 37.723344], [-122.379234, 37.723324], [-122.379238, 37.723304], [-122.379241, 37.723285], [-122.379245, 37.723265], [-122.379247, 37.723245], [-122.37925, 37.723225], [-122.379252, 37.723205], [-122.379253, 37.723185], [-122.379254, 37.723153], [-122.379254, 37.723137], [-122.379258, 37.723113], [-122.379267, 37.723087], [-122.379278, 37.723067], [-122.379293, 37.723048], [-122.379316, 37.723026], [-122.379339, 37.72301], [-122.379363, 37.722998], [-122.379384, 37.722989], [-122.379406, 37.722983], [-122.379429, 37.722978], [-122.379459, 37.722975], [-122.379491, 37.722972], [-122.379523, 37.722966], [-122.379549, 37.72296], [-122.37958, 37.722951], [-122.379606, 37.722941], [-122.379627, 37.722932], [-122.379653, 37.72292], [-122.37968, 37.722905], [-122.379708, 37.722886], [-122.379731, 37.722868], [-122.379753, 37.722848], [-122.379769, 37.722831], [-122.379789, 37.722807], [-122.379805, 37.722784], [-122.379818, 37.722761], [-122.379814, 37.7227], [-122.379868, 37.722594], [-122.379936, 37.722365], [-122.379943, 37.722338], [-122.379952, 37.722311], [-122.379965, 37.722286], [-122.379977, 37.722266], [-122.379992, 37.722244], [-122.380007, 37.722226], [-122.380023, 37.722209], [-122.38004, 37.722194], [-122.380055, 37.722181], [-122.380074, 37.722167], [-122.380101, 37.72215], [-122.380127, 37.722136], [-122.380149, 37.722125], [-122.380173, 37.722115], [-122.380201, 37.722099], [-122.380221, 37.722086], [-122.380241, 37.722072], [-122.380261, 37.722058], [-122.38028, 37.722044], [-122.380299, 37.72203], [-122.380318, 37.722015], [-122.380336, 37.722], [-122.380354, 37.721984], [-122.380372, 37.721969], [-122.380389, 37.721953], [-122.380406, 37.721937], [-122.380423, 37.721921], [-122.380439, 37.721904], [-122.380455, 37.721888], [-122.38047, 37.721871], [-122.380509, 37.721831], [-122.380535, 37.721816], [-122.380554, 37.721807], [-122.380574, 37.721798], [-122.380598, 37.721789], [-122.380627, 37.721779], [-122.380661, 37.721771], [-122.380687, 37.721766], [-122.380709, 37.721762], [-122.380735, 37.72176], [-122.380758, 37.721759], [-122.38078, 37.721759], [-122.380816, 37.72176], [-122.380848, 37.721763], [-122.380873, 37.721768], [-122.380899, 37.721773], [-122.380929, 37.721781], [-122.380962, 37.721793], [-122.38121, 37.721933], [-122.381598, 37.722142], [-122.381622, 37.722152], [-122.381646, 37.722161], [-122.381676, 37.722171], [-122.381701, 37.722178], [-122.381735, 37.722186], [-122.381766, 37.722193], [-122.381789, 37.722197], [-122.381813, 37.7222], [-122.381839, 37.722203], [-122.381871, 37.722206], [-122.381895, 37.722207], [-122.381919, 37.722207], [-122.381942, 37.722207], [-122.381969, 37.722206], [-122.38201, 37.722202], [-122.382132, 37.722161], [-122.382053, 37.722202], [-122.382074, 37.722208], [-122.382094, 37.722215], [-122.382115, 37.722222], [-122.382134, 37.722229], [-122.382154, 37.722237], [-122.382174, 37.722245], [-122.382193, 37.722253], [-122.382212, 37.722262], [-122.382232, 37.722272], [-122.382254, 37.722281], [-122.382275, 37.722287], [-122.382299, 37.722292], [-122.382322, 37.722295], [-122.382342, 37.722298], [-122.382362, 37.722304], [-122.382379, 37.722311], [-122.382399, 37.722323], [-122.382415, 37.722335], [-122.382427, 37.722348], [-122.382442, 37.722365], [-122.382466, 37.722377], [-122.382491, 37.72238], [-122.382511, 37.722379], [-122.382533, 37.722382], [-122.382555, 37.72239], [-122.38257, 37.7224], [-122.382583, 37.722418], [-122.382589, 37.722446], [-122.382593, 37.722467], [-122.382611, 37.722484], [-122.382642, 37.722502], [-122.382658, 37.722513], [-122.382675, 37.722524], [-122.382692, 37.722534], [-122.382709, 37.722545], [-122.382727, 37.722555], [-122.382745, 37.722565], [-122.382763, 37.722575], [-122.382781, 37.722584], [-122.3828, 37.722593], [-122.382825, 37.722608], [-122.382839, 37.722619], [-122.382863, 37.722627], [-122.382887, 37.72263], [-122.382915, 37.722631], [-122.382937, 37.722647], [-122.382949, 37.72267], [-122.382965, 37.722687], [-122.382983, 37.722701], [-122.383003, 37.722714], [-122.383026, 37.722725], [-122.383048, 37.722734], [-122.383077, 37.722744], [-122.383103, 37.722755], [-122.383128, 37.722767], [-122.383153, 37.72278], [-122.383176, 37.722795], [-122.383194, 37.722808], [-122.383212, 37.722822], [-122.383229, 37.722837], [-122.383248, 37.722853], [-122.383269, 37.722867], [-122.383291, 37.72288], [-122.383314, 37.722893], [-122.383337, 37.722905], [-122.383354, 37.722913], [-122.383372, 37.722921], [-122.383396, 37.722932], [-122.383423, 37.722942], [-122.383518, 37.722983], [-122.383614, 37.723029], [-122.38363, 37.72304], [-122.383646, 37.723056], [-122.383657, 37.723073], [-122.383664, 37.723089], [-122.38367, 37.723109], [-122.383679, 37.723127], [-122.383694, 37.723144], [-122.383712, 37.723156], [-122.383732, 37.723171], [-122.383751, 37.72319], [-122.383773, 37.723194], [-122.383798, 37.723188], [-122.38382, 37.723193], [-122.383834, 37.723215], [-122.383845, 37.723238], [-122.383853, 37.723258], [-122.383861, 37.723282], [-122.383867, 37.72331], [-122.383871, 37.723334], [-122.383873, 37.723352], [-122.383878, 37.723374], [-122.383886, 37.723398], [-122.383899, 37.723428], [-122.383916, 37.723444], [-122.383955, 37.723455], [-122.383982, 37.723459], [-122.384009, 37.723462], [-122.384036, 37.723465], [-122.384063, 37.723468], [-122.38409, 37.72347], [-122.384148, 37.723474], [-122.384174, 37.723477], [-122.384196, 37.723481], [-122.384227, 37.723487], [-122.384254, 37.723495], [-122.384275, 37.723502], [-122.384295, 37.72351], [-122.384319, 37.72352], [-122.384341, 37.723532], [-122.384371, 37.723552], [-122.38439, 37.723572], [-122.384405, 37.723586], [-122.38442, 37.723598], [-122.384444, 37.723609], [-122.384472, 37.723621], [-122.384492, 37.723631], [-122.384512, 37.723644], [-122.384529, 37.723657], [-122.384548, 37.723675], [-122.384565, 37.723696], [-122.384578, 37.723711], [-122.384594, 37.723727], [-122.384615, 37.723744], [-122.384637, 37.723758], [-122.384661, 37.723771], [-122.384679, 37.723779], [-122.384696, 37.723787], [-122.384715, 37.723797], [-122.384731, 37.723808], [-122.384746, 37.723822], [-122.384758, 37.723836], [-122.384769, 37.723853], [-122.384784, 37.723869], [-122.384799, 37.723881], [-122.384819, 37.723892], [-122.384843, 37.723901], [-122.384886, 37.723911], [-122.384904, 37.723922], [-122.384917, 37.723933], [-122.384932, 37.723954], [-122.384944, 37.723973], [-122.384955, 37.723993], [-122.384966, 37.724013], [-122.384982, 37.724031], [-122.384998, 37.724051], [-122.38501, 37.724071], [-122.385022, 37.724094], [-122.385041, 37.724109], [-122.38506, 37.724115], [-122.38508, 37.724114], [-122.385109, 37.724107], [-122.385136, 37.724102], [-122.385164, 37.7241], [-122.385193, 37.724101], [-122.385219, 37.724104], [-122.385248, 37.724112], [-122.385274, 37.724122], [-122.385301, 37.724134], [-122.385324, 37.724142], [-122.385348, 37.724149], [-122.385376, 37.724153], [-122.385409, 37.724155], [-122.385443, 37.724154], [-122.385466, 37.72415], [-122.385518, 37.724143], [-122.385578, 37.724136], [-122.385611, 37.724146], [-122.385629, 37.724163], [-122.385643, 37.724177], [-122.385659, 37.724191], [-122.385673, 37.724202], [-122.385691, 37.724214], [-122.385707, 37.724224], [-122.385727, 37.724234], [-122.385744, 37.724242], [-122.385768, 37.72425], [-122.385799, 37.72426], [-122.385827, 37.72427], [-122.385851, 37.72428], [-122.385873, 37.724292], [-122.385897, 37.724306], [-122.385921, 37.724324], [-122.385948, 37.724346], [-122.38597, 37.72436], [-122.385998, 37.724371], [-122.386021, 37.724378], [-122.386042, 37.724385], [-122.386067, 37.724395], [-122.386092, 37.724409], [-122.386113, 37.724425], [-122.386155, 37.724396], [-122.386135, 37.724441], [-122.386152, 37.72445], [-122.386174, 37.72446], [-122.386195, 37.724466], [-122.386217, 37.724471], [-122.386239, 37.724473], [-122.386268, 37.724474], [-122.386302, 37.724476], [-122.386334, 37.724478], [-122.386363, 37.724479], [-122.386388, 37.724478], [-122.386412, 37.724476], [-122.386441, 37.724473], [-122.386469, 37.724468], [-122.386497, 37.724462], [-122.386524, 37.724455], [-122.386556, 37.724447], [-122.386591, 37.72444], [-122.386617, 37.724433], [-122.386639, 37.724425], [-122.386659, 37.724417], [-122.386677, 37.724407], [-122.386695, 37.724397], [-122.386714, 37.724384], [-122.386733, 37.724368], [-122.386748, 37.724355], [-122.386758, 37.724339], [-122.386772, 37.724321], [-122.386799, 37.724306], [-122.386832, 37.724298], [-122.38686, 37.724294], [-122.386885, 37.724292], [-122.386908, 37.724285], [-122.386924, 37.724273], [-122.386933, 37.724256], [-122.386935, 37.724236], [-122.386932, 37.724217], [-122.386933, 37.724196], [-122.386928, 37.724172], [-122.386918, 37.724155], [-122.386903, 37.72414], [-122.386875, 37.724125], [-122.386838, 37.72411], [-122.386815, 37.7241], [-122.386793, 37.724089], [-122.38677, 37.724078], [-122.386748, 37.724067], [-122.386726, 37.724055], [-122.386704, 37.724043], [-122.386683, 37.724031], [-122.386662, 37.724018], [-122.386641, 37.724006], [-122.38662, 37.723992], [-122.3866, 37.723979], [-122.38658, 37.723965], [-122.386544, 37.72394], [-122.386298, 37.723802], [-122.386051, 37.723663], [-122.386026, 37.723653], [-122.385999, 37.723644], [-122.385973, 37.723635], [-122.385924, 37.723619], [-122.385903, 37.723608], [-122.385885, 37.723591], [-122.385867, 37.723564], [-122.385849, 37.72355], [-122.385828, 37.723544], [-122.385809, 37.723539], [-122.38578, 37.723529], [-122.385755, 37.723518], [-122.385735, 37.723502], [-122.385722, 37.723488], [-122.385704, 37.723477], [-122.385673, 37.72346], [-122.385652, 37.723446], [-122.385631, 37.723432], [-122.385602, 37.723415], [-122.38558, 37.723402], [-122.385557, 37.72339], [-122.385534, 37.723379], [-122.385496, 37.723365], [-122.385469, 37.723364], [-122.385441, 37.723359], [-122.385411, 37.723344], [-122.385389, 37.723329], [-122.385371, 37.723319], [-122.385352, 37.72331], [-122.385329, 37.7233], [-122.385309, 37.723292], [-122.385288, 37.723285], [-122.38527, 37.723275], [-122.385248, 37.723263], [-122.385229, 37.723254], [-122.385205, 37.723244], [-122.385177, 37.723233], [-122.385148, 37.723224], [-122.385114, 37.723216], [-122.385088, 37.723211], [-122.385063, 37.723206], [-122.385039, 37.723199], [-122.385008, 37.723188], [-122.384977, 37.723172], [-122.384946, 37.723153], [-122.384926, 37.72314], [-122.384906, 37.723128], [-122.384885, 37.723117], [-122.384864, 37.723105], [-122.384843, 37.723094], [-122.384822, 37.723083], [-122.384801, 37.723073], [-122.384779, 37.723063], [-122.384733, 37.723041], [-122.384709, 37.723026], [-122.384695, 37.723014], [-122.384675, 37.722994], [-122.384657, 37.72297], [-122.384641, 37.722955], [-122.384619, 37.722943], [-122.384592, 37.722928], [-122.384575, 37.722915], [-122.384559, 37.722901], [-122.384537, 37.722882], [-122.384519, 37.722863], [-122.384434, 37.722807], [-122.384348, 37.722752], [-122.384239, 37.722685], [-122.384208, 37.722671], [-122.384176, 37.722657], [-122.384145, 37.722642], [-122.384114, 37.722627], [-122.384083, 37.722611], [-122.384053, 37.722595], [-122.384023, 37.722579], [-122.383992, 37.722561], [-122.383974, 37.722546], [-122.383956, 37.722532], [-122.383937, 37.722517], [-122.383919, 37.722503], [-122.383877, 37.722476], [-122.383858, 37.722468], [-122.383835, 37.722457], [-122.383813, 37.722445], [-122.383796, 37.722435], [-122.383779, 37.722424], [-122.383762, 37.722412], [-122.383747, 37.7224], [-122.383732, 37.722387], [-122.383715, 37.722362], [-122.383684, 37.722349], [-122.383661, 37.722336], [-122.383642, 37.722327], [-122.383622, 37.722319], [-122.383601, 37.722313], [-122.383574, 37.722305], [-122.383557, 37.722296], [-122.383541, 37.722286], [-122.383526, 37.722276], [-122.38351, 37.722266], [-122.383495, 37.722255], [-122.383479, 37.722242], [-122.383461, 37.722226], [-122.383438, 37.722204], [-122.38342, 37.722192], [-122.383401, 37.722182], [-122.383374, 37.722174], [-122.383344, 37.722161], [-122.383318, 37.722144], [-122.383294, 37.722127], [-122.38327, 37.722111], [-122.383251, 37.7221], [-122.383228, 37.72209], [-122.383205, 37.722082], [-122.383185, 37.722076], [-122.383165, 37.722071], [-122.383132, 37.722062], [-122.3831, 37.722051], [-122.383076, 37.722042], [-122.383052, 37.722032], [-122.38302, 37.722019], [-122.382997, 37.722008], [-122.382975, 37.721997], [-122.382952, 37.721986], [-122.38293, 37.721973], [-122.38289, 37.721948], [-122.38287, 37.72193], [-122.382853, 37.721913], [-122.382838, 37.721896], [-122.382822, 37.721875], [-122.382812, 37.721859], [-122.382802, 37.721842], [-122.382791, 37.721818], [-122.382781, 37.721801], [-122.38277, 37.721784], [-122.382758, 37.721768], [-122.382745, 37.721752], [-122.382729, 37.721733], [-122.382721, 37.721715], [-122.382721, 37.721696], [-122.382728, 37.72167], [-122.382732, 37.721649], [-122.382732, 37.721629], [-122.382732, 37.721612], [-122.382734, 37.721587], [-122.382738, 37.721559], [-122.382743, 37.721535], [-122.382751, 37.721511], [-122.38276, 37.721488], [-122.382769, 37.721459], [-122.382776, 37.721438], [-122.382782, 37.721416], [-122.38279, 37.721395], [-122.382798, 37.721374], [-122.382806, 37.721353], [-122.382815, 37.721332], [-122.382824, 37.721311], [-122.382834, 37.72129], [-122.382844, 37.72127], [-122.382854, 37.721249], [-122.382866, 37.721229], [-122.382877, 37.721209], [-122.382904, 37.721162], [-122.38291, 37.721147], [-122.382918, 37.721132], [-122.382926, 37.721118], [-122.382936, 37.721104], [-122.382946, 37.72109], [-122.382958, 37.721077], [-122.382974, 37.72106], [-122.382992, 37.721044], [-122.383015, 37.721026], [-122.383037, 37.721011], [-122.383056, 37.721], [-122.383083, 37.720987], [-122.38311, 37.720971], [-122.383134, 37.720952], [-122.383152, 37.720935], [-122.383168, 37.720917], [-122.383199, 37.720872], [-122.383227, 37.720832], [-122.383257, 37.720793], [-122.383306, 37.72073], [-122.383317, 37.720714], [-122.383326, 37.720699], [-122.383336, 37.720683], [-122.383345, 37.720667], [-122.383353, 37.72065], [-122.383363, 37.720629], [-122.383372, 37.720606], [-122.38338, 37.720584], [-122.383386, 37.720567], [-122.383391, 37.72055], [-122.383396, 37.720527], [-122.383401, 37.720504], [-122.383405, 37.720481], [-122.383408, 37.720452], [-122.383408, 37.720437], [-122.383407, 37.720421], [-122.383405, 37.7204], [-122.383403, 37.720382], [-122.3834, 37.720367], [-122.383389, 37.720343], [-122.383357, 37.720336], [-122.383333, 37.720353], [-122.383308, 37.720348], [-122.383307, 37.720323], [-122.383287, 37.72031], [-122.383263, 37.720299], [-122.383246, 37.720281], [-122.383241, 37.720257], [-122.383249, 37.720233], [-122.383256, 37.720216], [-122.383259, 37.720197], [-122.383258, 37.720174], [-122.383248, 37.720146], [-122.383235, 37.720126], [-122.383219, 37.72011], [-122.3832, 37.720096], [-122.383075, 37.720032], [-122.382844, 37.719922], [-122.382825, 37.719917], [-122.382806, 37.719912], [-122.382788, 37.719907], [-122.382769, 37.719901], [-122.382751, 37.719895], [-122.382733, 37.719888], [-122.382709, 37.719879], [-122.382686, 37.719869], [-122.382669, 37.719861], [-122.382652, 37.719853], [-122.382635, 37.719845], [-122.382619, 37.719836], [-122.382598, 37.719823], [-122.382577, 37.71981], [-122.382557, 37.719797], [-122.382537, 37.719783], [-122.382518, 37.719768], [-122.38233, 37.719659], [-122.382141, 37.719552], [-122.382084, 37.719527], [-122.382018, 37.719499], [-122.381988, 37.719486], [-122.381964, 37.719474], [-122.381936, 37.719458], [-122.381909, 37.719441], [-122.381888, 37.719425], [-122.381868, 37.71941], [-122.381852, 37.7194], [-122.38183, 37.71939], [-122.381811, 37.719384], [-122.381794, 37.719377], [-122.381772, 37.719366], [-122.381753, 37.719353], [-122.381733, 37.719337], [-122.381718, 37.719319], [-122.381706, 37.719302], [-122.381692, 37.719278], [-122.381681, 37.71926], [-122.38167, 37.719246], [-122.381659, 37.719232], [-122.381642, 37.719214], [-122.381627, 37.719198], [-122.38161, 37.719183], [-122.381596, 37.719168], [-122.381583, 37.719149], [-122.381572, 37.719129], [-122.381567, 37.719114], [-122.38156, 37.719095], [-122.381551, 37.719077], [-122.381539, 37.719052], [-122.381525, 37.719028], [-122.38151, 37.719004], [-122.381495, 37.718981], [-122.381478, 37.718958], [-122.38146, 37.718936], [-122.381446, 37.718919], [-122.381432, 37.718903], [-122.381417, 37.718887], [-122.381401, 37.718871], [-122.38138, 37.718851], [-122.381363, 37.718836], [-122.381346, 37.718822], [-122.381322, 37.718803], [-122.381279, 37.718779], [-122.381249, 37.718771], [-122.381224, 37.718765], [-122.381199, 37.718761], [-122.381164, 37.718758], [-122.381132, 37.718757], [-122.381106, 37.718758], [-122.381085, 37.718759], [-122.381042, 37.71876], [-122.380998, 37.718762], [-122.380955, 37.718765], [-122.380912, 37.718768], [-122.380819, 37.718777], [-122.380792, 37.71878], [-122.380769, 37.718781], [-122.380746, 37.718781], [-122.380719, 37.71878], [-122.380692, 37.718778], [-122.380669, 37.718776], [-122.380647, 37.718772], [-122.380621, 37.718767], [-122.380594, 37.718761], [-122.380565, 37.718753], [-122.380515, 37.718742], [-122.380456, 37.71873], [-122.380436, 37.718726], [-122.380416, 37.718719], [-122.380389, 37.718709], [-122.380343, 37.718684], [-122.380325, 37.718669], [-122.380313, 37.718655], [-122.380295, 37.718635], [-122.380274, 37.718613], [-122.380257, 37.718588], [-122.380243, 37.718565], [-122.380229, 37.718546], [-122.380216, 37.718533], [-122.380201, 37.718522], [-122.380184, 37.71851], [-122.380165, 37.718501], [-122.380142, 37.718492], [-122.380117, 37.718485], [-122.380095, 37.718481], [-122.380071, 37.71848], [-122.380044, 37.71848], [-122.380014, 37.718475], [-122.379987, 37.718467], [-122.379969, 37.71846], [-122.379951, 37.71845], [-122.37993, 37.718435], [-122.379938, 37.718419], [-122.379912, 37.718416], [-122.379897, 37.718403], [-122.379873, 37.718387], [-122.379847, 37.718375], [-122.379823, 37.718368], [-122.3798, 37.718363], [-122.379778, 37.718361], [-122.379758, 37.718361], [-122.379735, 37.718361], [-122.379713, 37.718356], [-122.379696, 37.718345], [-122.379684, 37.718331], [-122.379676, 37.718311], [-122.379658, 37.71829], [-122.379638, 37.718279], [-122.379619, 37.718272], [-122.379603, 37.718261], [-122.379586, 37.71824], [-122.379562, 37.718215], [-122.379537, 37.718194], [-122.379517, 37.718179], [-122.379498, 37.718167], [-122.37947, 37.718149], [-122.379453, 37.718132], [-122.379439, 37.718112], [-122.379428, 37.71809], [-122.379421, 37.718066], [-122.379412, 37.718048], [-122.379399, 37.718032], [-122.379383, 37.718019], [-122.379364, 37.718004], [-122.379349, 37.717987], [-122.379329, 37.717969], [-122.379314, 37.717957], [-122.379295, 37.717943], [-122.379267, 37.717921], [-122.37925, 37.717904], [-122.379233, 37.717889], [-122.379214, 37.717875], [-122.379193, 37.717862], [-122.379165, 37.717843], [-122.379146, 37.717829], [-122.379123, 37.717818], [-122.379103, 37.717806], [-122.379088, 37.717793], [-122.379068, 37.717781], [-122.379035, 37.717774], [-122.379018, 37.717755], [-122.379008, 37.717742], [-122.378984, 37.717733], [-122.378961, 37.717726], [-122.378943, 37.717718], [-122.37892, 37.717707], [-122.378898, 37.717694], [-122.378877, 37.717682], [-122.378844, 37.717665], [-122.378823, 37.717655], [-122.378803, 37.717646], [-122.37878, 37.717637], [-122.378762, 37.717629], [-122.378744, 37.717621], [-122.378727, 37.717613], [-122.37871, 37.717605], [-122.378693, 37.717597], [-122.378676, 37.717588], [-122.378659, 37.717579], [-122.378643, 37.71757], [-122.378627, 37.71756], [-122.378611, 37.71755], [-122.378595, 37.71754], [-122.378579, 37.71753], [-122.378551, 37.717511], [-122.378491, 37.71748], [-122.378431, 37.717449], [-122.378373, 37.717417], [-122.378315, 37.717384], [-122.378221, 37.717328], [-122.378163, 37.717302], [-122.378105, 37.717277], [-122.378046, 37.717252], [-122.377987, 37.717228], [-122.377883, 37.717189], [-122.377451, 37.716962], [-122.377409, 37.716936], [-122.377367, 37.71691], [-122.377324, 37.716885], [-122.37728, 37.71686], [-122.377192, 37.716851], [-122.377174, 37.716801], [-122.377155, 37.71679], [-122.377136, 37.716779], [-122.377117, 37.716768], [-122.377098, 37.716757], [-122.377078, 37.716747], [-122.377058, 37.716736], [-122.377036, 37.716725], [-122.377004, 37.716708], [-122.376973, 37.716691], [-122.376943, 37.716673], [-122.376912, 37.716655], [-122.376883, 37.716637], [-122.376853, 37.716618], [-122.376824, 37.716599], [-122.376796, 37.716579], [-122.376768, 37.716559], [-122.37674, 37.716538], [-122.376713, 37.716518], [-122.376686, 37.716496], [-122.37664, 37.716459], [-122.376622, 37.716447], [-122.376603, 37.716437], [-122.376582, 37.716427], [-122.376562, 37.716415], [-122.376544, 37.7164], [-122.376529, 37.716384], [-122.376515, 37.716367], [-122.376499, 37.716352], [-122.376479, 37.716337], [-122.37646, 37.716324], [-122.376434, 37.71631], [-122.376365, 37.716277], [-122.376305, 37.716247], [-122.376222, 37.716202], [-122.376201, 37.716186], [-122.376183, 37.716172], [-122.376169, 37.716158], [-122.376156, 37.716143], [-122.376141, 37.716124], [-122.376129, 37.7161], [-122.376125, 37.716083], [-122.376123, 37.716065], [-122.376122, 37.716046], [-122.376123, 37.716026], [-122.376127, 37.716004], [-122.376135, 37.715978], [-122.376145, 37.715956], [-122.376155, 37.715934], [-122.376167, 37.71591], [-122.376177, 37.715893], [-122.376187, 37.715877], [-122.376198, 37.71586], [-122.376212, 37.715842], [-122.376231, 37.715819], [-122.37625, 37.715798], [-122.376266, 37.715783], [-122.376284, 37.715766], [-122.376297, 37.715754], [-122.37631, 37.715741], [-122.376322, 37.715729], [-122.376335, 37.715716], [-122.376347, 37.715703], [-122.376358, 37.71569], [-122.37637, 37.715677], [-122.376381, 37.715663], [-122.376391, 37.71565], [-122.376402, 37.715636], [-122.376412, 37.715622], [-122.376422, 37.715608], [-122.376431, 37.715594], [-122.376441, 37.71558], [-122.376454, 37.715557], [-122.37647, 37.715544], [-122.376485, 37.71553], [-122.3765, 37.715517], [-122.376515, 37.715503], [-122.376529, 37.715488], [-122.376543, 37.715474], [-122.376557, 37.715459], [-122.37657, 37.715445], [-122.376583, 37.71543], [-122.376596, 37.715414], [-122.376608, 37.715399], [-122.37662, 37.715384], [-122.376632, 37.715368], [-122.376643, 37.715352], [-122.376654, 37.715336], [-122.376665, 37.71532], [-122.376688, 37.715279], [-122.37669, 37.715258], [-122.376678, 37.715241], [-122.376648, 37.715231], [-122.376642, 37.715214], [-122.376656, 37.715198], [-122.376683, 37.71519], [-122.376699, 37.715174], [-122.376716, 37.715164], [-122.376736, 37.715149], [-122.376758, 37.71513], [-122.376777, 37.715111], [-122.376794, 37.71509], [-122.376822, 37.71506], [-122.376847, 37.715036], [-122.376871, 37.71501], [-122.376894, 37.714985], [-122.376917, 37.714959], [-122.376939, 37.714933], [-122.376961, 37.714907], [-122.377001, 37.714857], [-122.377017, 37.714845], [-122.377033, 37.714832], [-122.377048, 37.714818], [-122.377068, 37.714798], [-122.377089, 37.714774], [-122.377108, 37.714749], [-122.377123, 37.714718], [-122.377132, 37.714697], [-122.377141, 37.714677], [-122.377151, 37.714656], [-122.377161, 37.714636], [-122.377172, 37.714616], [-122.377183, 37.714596], [-122.377195, 37.714576], [-122.377207, 37.714556], [-122.377219, 37.714537], [-122.377232, 37.714518], [-122.377245, 37.714498], [-122.377259, 37.71448], [-122.377278, 37.714453], [-122.377287, 37.714433], [-122.377299, 37.714411], [-122.377313, 37.71439], [-122.377328, 37.714371], [-122.377342, 37.714354], [-122.377356, 37.714341], [-122.377373, 37.714326], [-122.377389, 37.714313], [-122.377407, 37.714298], [-122.377422, 37.714286], [-122.377437, 37.714273], [-122.377453, 37.714261], [-122.377469, 37.714249], [-122.377486, 37.714238], [-122.377502, 37.714226], [-122.377519, 37.714215], [-122.37755, 37.714195], [-122.3776, 37.714156], [-122.377651, 37.714117], [-122.377703, 37.714079], [-122.377755, 37.714041], [-122.377809, 37.714005], [-122.377878, 37.713959], [-122.378038, 37.713839], [-122.378317, 37.713639], [-122.378338, 37.713622], [-122.37836, 37.713601], [-122.378375, 37.713585], [-122.378388, 37.713568], [-122.3784, 37.713552], [-122.37841, 37.713534], [-122.378419, 37.713516], [-122.378426, 37.713498], [-122.378437, 37.713475], [-122.378451, 37.713454], [-122.378463, 37.713437], [-122.378479, 37.713419], [-122.378495, 37.713403], [-122.378545, 37.713358], [-122.378587, 37.713317], [-122.378667, 37.713242], [-122.378693, 37.71323], [-122.378718, 37.713218], [-122.378742, 37.713205], [-122.378766, 37.713191], [-122.378789, 37.713177], [-122.378812, 37.713162], [-122.378834, 37.713147], [-122.378855, 37.713131], [-122.378894, 37.713094], [-122.378903, 37.713077], [-122.378914, 37.713061], [-122.378924, 37.713044], [-122.378935, 37.713027], [-122.378944, 37.713009], [-122.378954, 37.712992], [-122.378963, 37.712975], [-122.378972, 37.712957], [-122.37898, 37.712939], [-122.378988, 37.712921], [-122.378995, 37.712904], [-122.379003, 37.712885], [-122.379013, 37.712859], [-122.379023, 37.712842], [-122.379036, 37.712825], [-122.379051, 37.712809], [-122.379087, 37.71276], [-122.379115, 37.71272], [-122.379143, 37.712681], [-122.379173, 37.712642], [-122.379203, 37.712603], [-122.37926, 37.712535], [-122.379271, 37.712521], [-122.379281, 37.712507], [-122.379292, 37.71249], [-122.379305, 37.71247], [-122.379313, 37.712455], [-122.37932, 37.712439], [-122.379328, 37.712421], [-122.379337, 37.7124], [-122.379346, 37.712378], [-122.379356, 37.712357], [-122.379366, 37.712336], [-122.379377, 37.712315], [-122.379388, 37.712295], [-122.3794, 37.712274], [-122.379412, 37.712254], [-122.379446, 37.712208], [-122.379462, 37.712188], [-122.379472, 37.712169], [-122.379484, 37.712152], [-122.379495, 37.712138], [-122.379508, 37.712117], [-122.37952, 37.712094], [-122.379528, 37.71207], [-122.379536, 37.712047], [-122.379545, 37.712027], [-122.379555, 37.712012], [-122.379574, 37.71199], [-122.379592, 37.711975], [-122.379604, 37.711962], [-122.379622, 37.71194], [-122.379634, 37.711922], [-122.379645, 37.711903], [-122.379654, 37.711883], [-122.37966, 37.711864], [-122.379669, 37.711843], [-122.37968, 37.711825], [-122.379691, 37.711807], [-122.379704, 37.711789], [-122.379717, 37.711772], [-122.37973, 37.711756], [-122.379746, 37.711738], [-122.37976, 37.711718], [-122.379773, 37.711703], [-122.379787, 37.71169], [-122.379803, 37.711678], [-122.379822, 37.711668], [-122.379847, 37.711659], [-122.37987, 37.711652], [-122.379893, 37.711645], [-122.379922, 37.711632], [-122.379948, 37.711618], [-122.379964, 37.711607], [-122.37998, 37.711595], [-122.379998, 37.711577], [-122.380015, 37.711556], [-122.380031, 37.711534], [-122.380041, 37.711519], [-122.380052, 37.711499], [-122.380063, 37.711476], [-122.38007, 37.711457], [-122.380076, 37.711437], [-122.38008, 37.711417], [-122.380082, 37.711401], [-122.380091, 37.711348], [-122.380099, 37.711295], [-122.380106, 37.711241], [-122.380111, 37.711188], [-122.380115, 37.711134], [-122.380119, 37.711081], [-122.380121, 37.711027], [-122.380121, 37.710973], [-122.380121, 37.71092], [-122.380121, 37.710903], [-122.38012, 37.710887], [-122.380119, 37.710871], [-122.380117, 37.710855], [-122.380115, 37.710839], [-122.380113, 37.710823], [-122.38011, 37.710807], [-122.380107, 37.710791], [-122.380104, 37.710775], [-122.3801, 37.710759], [-122.380096, 37.710743], [-122.380092, 37.710728], [-122.380087, 37.710712], [-122.380082, 37.710696], [-122.380077, 37.710681], [-122.380071, 37.710665], [-122.380065, 37.71065], [-122.380059, 37.710635], [-122.380043, 37.710607], [-122.380027, 37.71059], [-122.380011, 37.710575], [-122.379995, 37.710562], [-122.379978, 37.710549], [-122.37996, 37.710536], [-122.379938, 37.710523], [-122.379915, 37.71051], [-122.379894, 37.710501], [-122.379864, 37.71049], [-122.379839, 37.710489], [-122.379808, 37.710499], [-122.379778, 37.710504], [-122.379755, 37.710501], [-122.379732, 37.710492], [-122.379713, 37.710478], [-122.379701, 37.710463], [-122.379688, 37.710448], [-122.379674, 37.710435], [-122.379659, 37.710422], [-122.379641, 37.710408], [-122.379614, 37.710392], [-122.379587, 37.710379], [-122.379556, 37.710367], [-122.379528, 37.710359], [-122.379505, 37.710353], [-122.379475, 37.710343], [-122.379456, 37.710336], [-122.379438, 37.710328], [-122.379421, 37.71032], [-122.3794, 37.710309], [-122.379374, 37.710294], [-122.379356, 37.710281], [-122.379335, 37.710266], [-122.379319, 37.710251], [-122.3793, 37.710234], [-122.379286, 37.710218], [-122.379273, 37.710204], [-122.379259, 37.710189], [-122.379242, 37.710172], [-122.379214, 37.710147], [-122.379195, 37.710132], [-122.379177, 37.710118], [-122.379157, 37.710104], [-122.379131, 37.710088], [-122.379104, 37.710072], [-122.379074, 37.710056], [-122.37905, 37.710041], [-122.379031, 37.710027], [-122.379016, 37.710014], [-122.378998, 37.709999], [-122.378979, 37.70998], [-122.378961, 37.70996], [-122.378948, 37.709942], [-122.378937, 37.709927], [-122.378925, 37.709908], [-122.378917, 37.70989], [-122.37891, 37.709866], [-122.378907, 37.709842], [-122.378907, 37.709818], [-122.3789, 37.70979], [-122.378882, 37.709765], [-122.378855, 37.70976], [-122.37883, 37.709756], [-122.378815, 37.709746], [-122.3788, 37.709725], [-122.378791, 37.709709], [-122.378781, 37.709693], [-122.378773, 37.709677], [-122.378764, 37.709661], [-122.378756, 37.709645], [-122.378748, 37.709628], [-122.378741, 37.709612], [-122.378734, 37.709595], [-122.378727, 37.709579], [-122.378713, 37.709548], [-122.378702, 37.709534], [-122.378694, 37.709517], [-122.378688, 37.709498], [-122.37867, 37.709481], [-122.378647, 37.709473], [-122.378626, 37.70946], [-122.378609, 37.709442], [-122.378598, 37.709421], [-122.378586, 37.709399], [-122.378568, 37.709382], [-122.378547, 37.709369], [-122.378523, 37.709357], [-122.378502, 37.709341], [-122.378486, 37.709325], [-122.378471, 37.709306], [-122.37846, 37.709288], [-122.378454, 37.709272], [-122.378448, 37.709253], [-122.378445, 37.709229], [-122.378446, 37.709195], [-122.378447, 37.70917], [-122.378446, 37.709151], [-122.378445, 37.709132], [-122.378443, 37.709106], [-122.378439, 37.709081], [-122.378436, 37.709062], [-122.378432, 37.709043], [-122.378426, 37.709018], [-122.378418, 37.708993], [-122.37841, 37.708969], [-122.378403, 37.70895], [-122.378395, 37.708932], [-122.378378, 37.708898], [-122.378361, 37.708873], [-122.378347, 37.708853], [-122.378327, 37.70883], [-122.378313, 37.708813], [-122.378297, 37.708797], [-122.378281, 37.708781], [-122.378262, 37.708764], [-122.37824, 37.708754], [-122.378217, 37.708744], [-122.378194, 37.708734], [-122.378171, 37.708724], [-122.378147, 37.708715], [-122.378102, 37.708698], [-122.378077, 37.708686], [-122.378054, 37.708673], [-122.378038, 37.708662], [-122.378021, 37.708649], [-122.377994, 37.708634], [-122.377968, 37.708619], [-122.377939, 37.708607], [-122.377907, 37.708596], [-122.377876, 37.708588], [-122.377848, 37.708582], [-122.377819, 37.708579], [-122.377791, 37.708577], [-122.377762, 37.708577], [-122.377734, 37.708581], [-122.377715, 37.708587], [-122.377689, 37.708598], [-122.377661, 37.708613], [-122.377644, 37.708623], [-122.377619, 37.708635], [-122.377599, 37.708644], [-122.37758, 37.708652], [-122.377562, 37.708659], [-122.377542, 37.708666], [-122.377516, 37.708675], [-122.377493, 37.708681], [-122.377473, 37.708685], [-122.377453, 37.70869], [-122.377432, 37.708694], [-122.377361, 37.708714], [-122.37729, 37.708734], [-122.37722, 37.708756], [-122.377123, 37.708789], [-122.3771, 37.7088], [-122.377077, 37.708813], [-122.377054, 37.708825], [-122.377032, 37.708838], [-122.376983, 37.708866], [-122.376963, 37.708873], [-122.376943, 37.708878], [-122.376889, 37.708891], [-122.376871, 37.708897], [-122.376852, 37.708907], [-122.376837, 37.708917], [-122.376822, 37.708931], [-122.376797, 37.708953], [-122.376779, 37.708967], [-122.376762, 37.708982], [-122.376739, 37.709002], [-122.376717, 37.709029], [-122.376712, 37.709046], [-122.37671, 37.709063], [-122.376701, 37.709084], [-122.376681, 37.709103], [-122.376659, 37.709117], [-122.376649, 37.70913], [-122.376642, 37.709152], [-122.376635, 37.709172], [-122.376629, 37.709187], [-122.376621, 37.709202], [-122.376612, 37.709217], [-122.3766, 37.709233], [-122.376585, 37.70925], [-122.376567, 37.709274], [-122.376557, 37.709288], [-122.376546, 37.709303], [-122.37653, 37.709322], [-122.376514, 37.709341], [-122.376497, 37.709359], [-122.376466, 37.70942], [-122.376433, 37.709481], [-122.376388, 37.709564], [-122.37639, 37.709581], [-122.376399, 37.709598], [-122.376402, 37.709615], [-122.376392, 37.709639], [-122.376369, 37.709653], [-122.37634, 37.709661], [-122.37632, 37.709665], [-122.376301, 37.709669], [-122.376281, 37.709672], [-122.376262, 37.709675], [-122.376242, 37.709678], [-122.376222, 37.709681], [-122.376202, 37.709683], [-122.376182, 37.709685], [-122.376162, 37.709687], [-122.376142, 37.709689], [-122.376122, 37.70969], [-122.376102, 37.709691], [-122.376082, 37.709692], [-122.376062, 37.709692], [-122.376042, 37.709692], [-122.376022, 37.709692], [-122.375988, 37.709691], [-122.375955, 37.709688], [-122.37593, 37.709686], [-122.375905, 37.709682], [-122.37588, 37.709679], [-122.375855, 37.709675], [-122.375823, 37.709668], [-122.375799, 37.709663], [-122.375775, 37.709657], [-122.375743, 37.709649], [-122.375711, 37.709639], [-122.375688, 37.709632], [-122.375665, 37.709623], [-122.375635, 37.709612], [-122.375613, 37.709603], [-122.375581, 37.709588], [-122.375562, 37.709577], [-122.375544, 37.709564], [-122.37553, 37.709554], [-122.375516, 37.709542], [-122.3755, 37.709528], [-122.375488, 37.709516], [-122.375476, 37.709504], [-122.37546, 37.709484], [-122.375443, 37.709465], [-122.375427, 37.709449], [-122.375413, 37.709437], [-122.375395, 37.709422], [-122.375379, 37.709411], [-122.375361, 37.7094], [-122.375341, 37.709389], [-122.375322, 37.709379], [-122.3753, 37.70937], [-122.375277, 37.709361], [-122.375258, 37.709355], [-122.375235, 37.709345], [-122.375204, 37.70933], [-122.375173, 37.709315], [-122.375151, 37.709303], [-122.375129, 37.709291], [-122.375107, 37.709278], [-122.375086, 37.709265], [-122.375066, 37.709251], [-122.375047, 37.709238], [-122.37499, 37.709214], [-122.374933, 37.70919], [-122.374823, 37.709142], [-122.37479, 37.709132], [-122.374767, 37.709124], [-122.374744, 37.709116], [-122.374722, 37.709107], [-122.374697, 37.709096], [-122.374668, 37.709082], [-122.374639, 37.709067], [-122.374617, 37.709053], [-122.374595, 37.709039], [-122.374567, 37.709019], [-122.37454, 37.708998], [-122.374516, 37.708978], [-122.3745, 37.708963], [-122.374479, 37.708941], [-122.374463, 37.708923], [-122.374446, 37.708903], [-122.37441, 37.708836], [-122.374374, 37.708758], [-122.374372, 37.708736], [-122.374374, 37.708717], [-122.374378, 37.7087], [-122.374386, 37.708682], [-122.374398, 37.708662], [-122.374412, 37.708646], [-122.374425, 37.708634], [-122.374447, 37.708617], [-122.374464, 37.708605], [-122.374482, 37.708593], [-122.374499, 37.708581], [-122.374517, 37.70857], [-122.374536, 37.708559], [-122.374563, 37.708542], [-122.374587, 37.708536], [-122.374611, 37.70853], [-122.374634, 37.708524], [-122.374658, 37.708518], [-122.374683, 37.708513], [-122.374707, 37.708508], [-122.374733, 37.708503], [-122.374853, 37.7085], [-122.374919, 37.70849], [-122.374985, 37.708482], [-122.375051, 37.708475], [-122.375117, 37.708469], [-122.375184, 37.708463], [-122.375306, 37.708456], [-122.375372, 37.708447], [-122.375437, 37.708437], [-122.375502, 37.708426], [-122.375604, 37.708408], [-122.375632, 37.708405], [-122.375661, 37.708404], [-122.375684, 37.708403], [-122.375705, 37.708404], [-122.375747, 37.708403], [-122.375789, 37.708402], [-122.375831, 37.708401], [-122.375873, 37.708398], [-122.375914, 37.708396], [-122.375956, 37.708392], [-122.376026, 37.708385], [-122.376053, 37.708385], [-122.37609, 37.708384], [-122.376118, 37.708385], [-122.376146, 37.708386], [-122.376183, 37.708389], [-122.376222, 37.708392], [-122.376289, 37.708397], [-122.376357, 37.708401], [-122.376425, 37.708405], [-122.376492, 37.708407], [-122.37656, 37.708408], [-122.376628, 37.708409], [-122.376758, 37.708405], [-122.376794, 37.7084], [-122.376826, 37.708399], [-122.37685, 37.7084], [-122.37688, 37.708403], [-122.376907, 37.708407], [-122.376936, 37.708411], [-122.376972, 37.708414], [-122.376998, 37.708416], [-122.377027, 37.708417], [-122.377066, 37.708417], [-122.377103, 37.708416], [-122.37714, 37.708418], [-122.37717, 37.70842], [-122.377199, 37.708422], [-122.377229, 37.708423], [-122.377259, 37.708424], [-122.377289, 37.708425], [-122.377319, 37.708425], [-122.377349, 37.708424], [-122.377378, 37.708424], [-122.377421, 37.708422], [-122.377622, 37.708419], [-122.377643, 37.70842], [-122.377663, 37.708421], [-122.377684, 37.708422], [-122.377704, 37.708423], [-122.377724, 37.708425], [-122.377745, 37.708427], [-122.377768, 37.708427], [-122.378001, 37.708437], [-122.378306, 37.708441], [-122.378327, 37.708438], [-122.378356, 37.708435], [-122.378384, 37.708432], [-122.378413, 37.708431], [-122.378442, 37.70843], [-122.378463, 37.70843], [-122.378485, 37.70843], [-122.378514, 37.708432], [-122.378542, 37.708434], [-122.378571, 37.708437], [-122.378599, 37.70844], [-122.378628, 37.708445], [-122.378656, 37.70845], [-122.378692, 37.708457], [-122.37872, 37.708462], [-122.378749, 37.708465], [-122.378778, 37.708467], [-122.378803, 37.708467], [-122.378832, 37.708467], [-122.378866, 37.708465], [-122.37889, 37.708463], [-122.378919, 37.708459], [-122.37895, 37.708454], [-122.378976, 37.708449], [-122.379002, 37.708444], [-122.379028, 37.708439], [-122.379055, 37.708435], [-122.379081, 37.708432], [-122.379108, 37.708429], [-122.379134, 37.708426], [-122.379161, 37.708423], [-122.379201, 37.70842], [-122.379267, 37.708418], [-122.379363, 37.708418], [-122.379387, 37.708419], [-122.379407, 37.708421], [-122.37943, 37.708425], [-122.379455, 37.708431], [-122.379475, 37.708437], [-122.379493, 37.708444], [-122.379516, 37.708454], [-122.379543, 37.708469], [-122.379567, 37.708484], [-122.379588, 37.708493], [-122.379614, 37.7085], [-122.379648, 37.708507], [-122.379673, 37.708512], [-122.379699, 37.708518], [-122.379723, 37.708525], [-122.379787, 37.708523], [-122.379763, 37.708537], [-122.379781, 37.708543], [-122.379799, 37.70855], [-122.379816, 37.708557], [-122.379839, 37.708567], [-122.379856, 37.708574], [-122.379888, 37.70859], [-122.379916, 37.708599], [-122.379948, 37.708606], [-122.379981, 37.708615], [-122.380009, 37.708624], [-122.380035, 37.708635], [-122.380061, 37.708647], [-122.380092, 37.708665], [-122.38012, 37.70868], [-122.38015, 37.708694], [-122.38018, 37.708708], [-122.380211, 37.708721], [-122.380243, 37.708733], [-122.380275, 37.708744], [-122.380299, 37.708752], [-122.380324, 37.708759], [-122.380357, 37.708768], [-122.38039, 37.708776], [-122.380424, 37.708783], [-122.380458, 37.708789], [-122.380493, 37.708795], [-122.380519, 37.708798], [-122.380545, 37.708801], [-122.380571, 37.708803], [-122.380597, 37.708804], [-122.380623, 37.708805], [-122.38065, 37.708806], [-122.380676, 37.708806], [-122.380699, 37.708805], [-122.380745, 37.708807], [-122.380791, 37.70881], [-122.380837, 37.708813], [-122.380883, 37.708817], [-122.380929, 37.708822], [-122.380975, 37.708827], [-122.381021, 37.708833], [-122.381066, 37.70884], [-122.381111, 37.708847], [-122.38119, 37.708861], [-122.381211, 37.708864], [-122.381235, 37.708867], [-122.381267, 37.708869], [-122.381296, 37.70887], [-122.381318, 37.708871], [-122.381342, 37.70887], [-122.381404, 37.708868], [-122.381506, 37.708893], [-122.381585, 37.708864], [-122.381777, 37.708864], [-122.381811, 37.708869], [-122.381835, 37.708874], [-122.381862, 37.70888], [-122.381889, 37.70889], [-122.381912, 37.708901], [-122.381932, 37.708913], [-122.381951, 37.708927], [-122.381968, 37.708942], [-122.381986, 37.708957], [-122.382008, 37.708973], [-122.382025, 37.708984], [-122.382046, 37.708997], [-122.382067, 37.709008], [-122.382093, 37.709021], [-122.38212, 37.709032], [-122.382148, 37.709042], [-122.382181, 37.709051], [-122.382214, 37.709059], [-122.382239, 37.709064], [-122.382261, 37.709067], [-122.382287, 37.709069], [-122.382321, 37.709071], [-122.382348, 37.709071], [-122.382371, 37.709069], [-122.382397, 37.709068], [-122.38243, 37.709068], [-122.382456, 37.709069], [-122.382488, 37.70907], [-122.382511, 37.709073], [-122.382537, 37.709076], [-122.382568, 37.709081], [-122.382591, 37.709085], [-122.382613, 37.70909], [-122.382638, 37.709097], [-122.38267, 37.709106], [-122.382701, 37.709114], [-122.382724, 37.709118], [-122.382748, 37.709123], [-122.382771, 37.709127], [-122.382795, 37.709131], [-122.382818, 37.709134], [-122.382842, 37.709138], [-122.382866, 37.70914], [-122.38289, 37.709143], [-122.382914, 37.709145], [-122.382938, 37.709147], [-122.382962, 37.709148], [-122.382987, 37.70915], [-122.383008, 37.70915], [-122.38303, 37.70915], [-122.383051, 37.70915], [-122.383073, 37.709151], [-122.383094, 37.709152], [-122.383116, 37.709154], [-122.383137, 37.709155], [-122.383159, 37.709157], [-122.38318, 37.70916], [-122.383202, 37.709162], [-122.383223, 37.709165], [-122.383244, 37.709168], [-122.383265, 37.709172], [-122.38331, 37.70918], [-122.383346, 37.709185], [-122.383381, 37.709189], [-122.383417, 37.709192], [-122.383444, 37.709193], [-122.383471, 37.709194], [-122.383498, 37.709195], [-122.383526, 37.709195], [-122.383562, 37.709194], [-122.383609, 37.709191], [-122.383632, 37.70919], [-122.383658, 37.70919], [-122.383689, 37.709191], [-122.383712, 37.709192], [-122.383738, 37.709194], [-122.383769, 37.709198], [-122.3838, 37.709203], [-122.383834, 37.70921], [-122.383858, 37.709215], [-122.383881, 37.709222], [-122.383919, 37.709231], [-122.38395, 37.709238], [-122.383981, 37.709245], [-122.384012, 37.709251], [-122.384043, 37.709257], [-122.384075, 37.709262], [-122.384106, 37.709267], [-122.384138, 37.709271], [-122.38417, 37.709275], [-122.384201, 37.709279], [-122.384233, 37.709282], [-122.384265, 37.709284], [-122.384297, 37.709287], [-122.384329, 37.709288], [-122.384361, 37.70929], [-122.384394, 37.70929], [-122.384457, 37.709291], [-122.384487, 37.709292], [-122.384519, 37.709296], [-122.384538, 37.709301], [-122.3846, 37.709328], [-122.384651, 37.709349], [-122.384702, 37.70937], [-122.384754, 37.70939], [-122.384807, 37.70941], [-122.38486, 37.709428], [-122.384913, 37.709446], [-122.384967, 37.709463], [-122.385033, 37.709484], [-122.385058, 37.709494], [-122.385082, 37.709505], [-122.385105, 37.709517], [-122.385128, 37.709533], [-122.385161, 37.709552], [-122.385187, 37.709566], [-122.385213, 37.70958], [-122.38524, 37.709593], [-122.385266, 37.709606], [-122.385294, 37.709619], [-122.385321, 37.709631], [-122.385349, 37.709643], [-122.385377, 37.709654], [-122.385427, 37.709674], [-122.385474, 37.709698], [-122.38552, 37.709724], [-122.385566, 37.70975], [-122.385612, 37.709777], [-122.385657, 37.709804], [-122.38572, 37.709852], [-122.385741, 37.709862], [-122.385763, 37.709879], [-122.385785, 37.709896], [-122.385807, 37.709913], [-122.385829, 37.709929], [-122.385852, 37.709944], [-122.385907, 37.709978], [-122.385937, 37.709988], [-122.385974, 37.709996], [-122.386009, 37.709999], [-122.386044, 37.709998], [-122.386065, 37.709997], [-122.386085, 37.709996], [-122.386106, 37.709995], [-122.386127, 37.709993], [-122.386148, 37.70999], [-122.386169, 37.709988], [-122.38619, 37.709985], [-122.386211, 37.709982], [-122.386231, 37.709979], [-122.386252, 37.709975], [-122.386272, 37.709972], [-122.386293, 37.709967], [-122.386313, 37.709963], [-122.386333, 37.709958], [-122.386353, 37.709953], [-122.386373, 37.709948], [-122.386393, 37.709942], [-122.386413, 37.709936], [-122.386432, 37.70993], [-122.386452, 37.709924], [-122.386471, 37.709917], [-122.38649, 37.70991], [-122.386509, 37.709903], [-122.386528, 37.709896], [-122.386547, 37.709888], [-122.386565, 37.70988], [-122.386584, 37.709872], [-122.386602, 37.709864], [-122.38663, 37.70985], [-122.386648, 37.709844], [-122.386666, 37.709837], [-122.386689, 37.709827], [-122.386711, 37.709817], [-122.386728, 37.709809], [-122.386744, 37.7098], [-122.38676, 37.709791], [-122.386776, 37.709782], [-122.386792, 37.709773], [-122.386818, 37.709753], [-122.386828, 37.709728], [-122.38682, 37.7097], [-122.386819, 37.709678], [-122.386828, 37.709663], [-122.386844, 37.709653], [-122.386875, 37.709643], [-122.386902, 37.709636], [-122.386922, 37.70963], [-122.386942, 37.709624], [-122.386969, 37.709614], [-122.386988, 37.709607], [-122.387007, 37.709599], [-122.387026, 37.709591], [-122.387045, 37.709582], [-122.387069, 37.70957], [-122.387093, 37.709557], [-122.387116, 37.709544], [-122.387133, 37.709534], [-122.38715, 37.709523], [-122.387172, 37.709508], [-122.387192, 37.709496], [-122.387212, 37.709484], [-122.387232, 37.709472], [-122.387251, 37.70946], [-122.387271, 37.709447], [-122.38729, 37.709434], [-122.387308, 37.709421], [-122.387327, 37.709408], [-122.387345, 37.709394], [-122.387363, 37.70938], [-122.38738, 37.709366], [-122.387397, 37.709352], [-122.387414, 37.709337], [-122.387431, 37.709322], [-122.387447, 37.709307], [-122.387463, 37.709292], [-122.387478, 37.709276], [-122.387512, 37.709243], [-122.387534, 37.709224], [-122.387552, 37.709207], [-122.387574, 37.709183], [-122.387589, 37.709165], [-122.387601, 37.709149], [-122.387614, 37.709129], [-122.387636, 37.709098], [-122.387659, 37.709078], [-122.387678, 37.709063], [-122.387696, 37.709052], [-122.387716, 37.70904], [-122.38774, 37.709026], [-122.387759, 37.709011], [-122.387774, 37.708999], [-122.387789, 37.708985], [-122.387803, 37.708969], [-122.387815, 37.708953], [-122.387828, 37.708935], [-122.387841, 37.708913], [-122.387855, 37.708894], [-122.387867, 37.708874], [-122.387875, 37.708858], [-122.387883, 37.70884], [-122.387894, 37.708824], [-122.387909, 37.708809], [-122.387925, 37.708798], [-122.387947, 37.708789], [-122.387971, 37.708774], [-122.387987, 37.70876], [-122.387999, 37.708745], [-122.388008, 37.708728], [-122.388015, 37.708712], [-122.388026, 37.708695], [-122.388049, 37.708679], [-122.388077, 37.708672], [-122.38811, 37.708675], [-122.388142, 37.708687], [-122.388164, 37.708696], [-122.388181, 37.708705], [-122.388201, 37.708716], [-122.388218, 37.708726], [-122.388233, 37.708737], [-122.388248, 37.708748], [-122.388271, 37.708766], [-122.388294, 37.708782], [-122.388318, 37.708796], [-122.388339, 37.708806], [-122.38836, 37.708814], [-122.388391, 37.708824], [-122.388426, 37.708833], [-122.388455, 37.708838], [-122.388476, 37.70884], [-122.3885, 37.708841], [-122.388529, 37.708841], [-122.388553, 37.708844], [-122.388583, 37.708851], [-122.388611, 37.708863], [-122.388635, 37.708873], [-122.388666, 37.708888], [-122.388689, 37.7089], [-122.388712, 37.708912], [-122.388741, 37.708929], [-122.388763, 37.708943], [-122.388784, 37.708957], [-122.388804, 37.708971], [-122.388825, 37.708985], [-122.388851, 37.709006], [-122.38887, 37.709021], [-122.388888, 37.709037], [-122.388911, 37.709058], [-122.388973, 37.709108], [-122.389081, 37.709191], [-122.389101, 37.709202], [-122.389121, 37.709213], [-122.389142, 37.709223], [-122.389163, 37.709233], [-122.389183, 37.709243], [-122.389224, 37.709261], [-122.389314, 37.709317], [-122.38948, 37.70943], [-122.389498, 37.709448], [-122.389515, 37.709462], [-122.389537, 37.709477], [-122.389558, 37.709493], [-122.389572, 37.709505], [-122.389586, 37.709518], [-122.389599, 37.70953], [-122.389612, 37.709543], [-122.389625, 37.709557], [-122.389651, 37.709583], [-122.389667, 37.709597], [-122.38969, 37.709609], [-122.389713, 37.709618], [-122.389743, 37.709624], [-122.389773, 37.709624], [-122.389792, 37.709622], [-122.389812, 37.709617], [-122.389835, 37.70961], [-122.389856, 37.709603], [-122.389877, 37.709595], [-122.389898, 37.709587], [-122.389925, 37.709576], [-122.389951, 37.709564], [-122.389977, 37.709551], [-122.390002, 37.709537], [-122.390021, 37.709527], [-122.390039, 37.709516], [-122.390057, 37.709505], [-122.390074, 37.709493], [-122.390091, 37.709481], [-122.390108, 37.709468], [-122.390124, 37.709456], [-122.390145, 37.70944], [-122.390165, 37.70943], [-122.390184, 37.709419], [-122.390205, 37.709406], [-122.390232, 37.709388], [-122.390256, 37.70937], [-122.390273, 37.709356], [-122.390289, 37.709342], [-122.390304, 37.709328], [-122.390319, 37.709313], [-122.390338, 37.709292], [-122.390358, 37.709275], [-122.390375, 37.709259], [-122.3904, 37.709237], [-122.390423, 37.709221], [-122.390446, 37.709209], [-122.390469, 37.7092], [-122.39049, 37.709195], [-122.390512, 37.709191], [-122.390532, 37.70919], [-122.390552, 37.709191], [-122.390584, 37.709195], [-122.390619, 37.709207], [-122.390646, 37.70923], [-122.39066, 37.709242], [-122.390679, 37.709255], [-122.390702, 37.709268], [-122.390734, 37.709282], [-122.390755, 37.709289], [-122.39082, 37.709327], [-122.39088, 37.709362], [-122.390956, 37.709404], [-122.390985, 37.709425], [-122.391014, 37.709446], [-122.391043, 37.709465], [-122.391074, 37.709485], [-122.391104, 37.709504], [-122.391135, 37.709523], [-122.391166, 37.709541], [-122.391198, 37.709559], [-122.39123, 37.709576], [-122.391263, 37.709593], [-122.391296, 37.709609], [-122.391329, 37.709625], [-122.391383, 37.70965], [-122.391403, 37.709662], [-122.391424, 37.709672], [-122.391444, 37.709683], [-122.391481, 37.709697], [-122.391502, 37.709697], [-122.391539, 37.709684], [-122.391567, 37.709673], [-122.391596, 37.709662], [-122.391624, 37.70965], [-122.391716, 37.709607], [-122.391877, 37.709454], [-122.392093, 37.709271], [-122.392106, 37.709258], [-122.39212, 37.709243], [-122.392131, 37.709229], [-122.392141, 37.709215], [-122.392152, 37.709197], [-122.39216, 37.70918], [-122.392166, 37.709164], [-122.39219, 37.709127], [-122.392215, 37.70909], [-122.392241, 37.709053], [-122.392292, 37.708991], [-122.392319, 37.708975], [-122.39234, 37.708964], [-122.392362, 37.708954], [-122.392389, 37.708943], [-122.392408, 37.708936], [-122.392435, 37.708927], [-122.392462, 37.708915], [-122.392483, 37.708902], [-122.392503, 37.708886], [-122.392524, 37.708864], [-122.392542, 37.708845], [-122.39256, 37.708827], [-122.392579, 37.70881], [-122.392604, 37.708787], [-122.392631, 37.708764], [-122.392652, 37.708748], [-122.392673, 37.708732], [-122.392703, 37.708712], [-122.392733, 37.708693], [-122.392764, 37.708674], [-122.392799, 37.708654], [-122.392826, 37.708636], [-122.392847, 37.708623], [-122.392868, 37.708611], [-122.392897, 37.708596], [-122.392919, 37.708584], [-122.392943, 37.708573], [-122.392978, 37.708549], [-122.393012, 37.708524], [-122.393046, 37.708499], [-122.39308, 37.708473], [-122.393113, 37.708447], [-122.393167, 37.708402], [-122.393583, 37.708418], [-122.394984, 37.70841], [-122.395156, 37.708827], [-122.395654, 37.71147], [-122.396899, 37.713844], [-122.39856, 37.715698], [-122.399991, 37.721147], [-122.401091, 37.724311], [-122.401734, 37.726163], [-122.40346, 37.730495], [-122.406262, 37.734811], [-122.406703, 37.735178], [-122.407472, 37.735817], [-122.408073, 37.738287], [-122.408001, 37.739656], [-122.407709, 37.740857], [-122.407311, 37.742146], [-122.405848, 37.74388], [-122.404915, 37.745263], [-122.403576, 37.749388], [-122.40136, 37.749424], [-122.382547, 37.750581], [-122.382792, 37.751774], [-122.379963, 37.752061], [-122.37996, 37.75203], [-122.376087, 37.752249], [-122.375771, 37.748707], [-122.384914, 37.748145], [-122.384921, 37.748185], [-122.384651, 37.748202], [-122.384676, 37.748304], [-122.38471, 37.748305], [-122.384744, 37.748303], [-122.384774, 37.748298], [-122.384798, 37.748293], [-122.38482, 37.748287], [-122.384843, 37.748279], [-122.384863, 37.74827], [-122.384889, 37.748256], [-122.384916, 37.74824], [-122.38494, 37.748229], [-122.384963, 37.748221], [-122.384987, 37.748215], [-122.385014, 37.748208], [-122.385034, 37.748196], [-122.385051, 37.748178], [-122.385062, 37.748151], [-122.385078, 37.748127], [-122.385101, 37.748113], [-122.38512, 37.748109], [-122.385143, 37.748109], [-122.38517, 37.748118], [-122.385193, 37.748136], [-122.385212, 37.748148], [-122.38523, 37.748157], [-122.385258, 37.748164], [-122.385289, 37.748166], [-122.385314, 37.748159], [-122.385333, 37.748151], [-122.385351, 37.748142], [-122.385383, 37.748126], [-122.385405, 37.748119], [-122.385424, 37.748114], [-122.385446, 37.74811], [-122.385472, 37.748108], [-122.385497, 37.748107], [-122.385521, 37.748109], [-122.385543, 37.748112], [-122.385583, 37.748118], [-122.385617, 37.748123], [-122.385652, 37.748127], [-122.385686, 37.748131], [-122.385721, 37.748134], [-122.385786, 37.748142], [-122.385825, 37.748146], [-122.385853, 37.748141], [-122.385872, 37.748132], [-122.385891, 37.748118], [-122.385901, 37.748098], [-122.385907, 37.748082], [-122.385924, 37.748069], [-122.385945, 37.748065], [-122.385963, 37.748072], [-122.385981, 37.74808], [-122.386004, 37.748087], [-122.386029, 37.748092], [-122.38605, 37.748093], [-122.386077, 37.74809], [-122.386106, 37.748084], [-122.386129, 37.748077], [-122.386155, 37.748064], [-122.386172, 37.748052], [-122.386189, 37.748032], [-122.386201, 37.748011], [-122.386205, 37.747991], [-122.386207, 37.747974], [-122.386213, 37.747959], [-122.386223, 37.747942], [-122.38624, 37.747925], [-122.386258, 37.747913], [-122.386278, 37.747904], [-122.386301, 37.747898], [-122.386325, 37.747896], [-122.38636, 37.747901], [-122.386387, 37.747911], [-122.386408, 37.747922], [-122.386423, 37.747935], [-122.386437, 37.747946], [-122.386463, 37.747949], [-122.38679, 37.747885], [-122.386836, 37.747835], [-122.386856, 37.747824], [-122.386875, 37.747813], [-122.386896, 37.747799], [-122.386921, 37.747781], [-122.38694, 37.747766], [-122.386976, 37.747738], [-122.387003, 37.747721], [-122.387027, 37.747703], [-122.38705, 37.747683], [-122.387072, 37.747662], [-122.387095, 37.747639], [-122.38711, 37.747627], [-122.387128, 37.747616], [-122.387146, 37.747608], [-122.387172, 37.747603], [-122.387199, 37.747599], [-122.387236, 37.747596], [-122.387273, 37.747593], [-122.387301, 37.747592], [-122.387329, 37.747591], [-122.387357, 37.747591], [-122.387385, 37.747592], [-122.387413, 37.747593], [-122.387441, 37.747594], [-122.387477, 37.747597], [-122.387505, 37.7476], [-122.387532, 37.747605], [-122.387547, 37.747618], [-122.387565, 37.747635], [-122.387578, 37.747649], [-122.387591, 37.747666], [-122.387604, 37.747685], [-122.387617, 37.747708], [-122.387627, 37.747731], [-122.387633, 37.747753], [-122.387659, 37.747758], [-122.387636, 37.74778], [-122.387641, 37.747802], [-122.387654, 37.747821], [-122.387671, 37.747834], [-122.387692, 37.747841], [-122.387715, 37.747846], [-122.387736, 37.747849], [-122.387757, 37.747851], [-122.387779, 37.747851], [-122.387809, 37.747851], [-122.387846, 37.747847], [-122.387873, 37.747842], [-122.387899, 37.747836], [-122.387926, 37.747835], [-122.387958, 37.747844], [-122.387984, 37.747848], [-122.388007, 37.74785], [-122.388028, 37.74785], [-122.388051, 37.747848], [-122.388073, 37.747844], [-122.388095, 37.747838], [-122.388108, 37.747803]]], [[[-122.388108, 37.747803], [-122.388078, 37.747811], [-122.388075, 37.747796], [-122.388108, 37.747803]]]]
    },
    "properties": {
      "neighbourhood": "Bayview",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.394984, 37.70841], [-122.399685, 37.708385], [-122.405103, 37.708362], [-122.405523, 37.70835], [-122.406476, 37.708342], [-122.40729, 37.708344], [-122.407754, 37.708342], [-122.408112, 37.708327], [-122.41334, 37.708329], [-122.414374, 37.70833], [-122.41533, 37.708329], [-122.417093, 37.708327], [-122.418048, 37.708327], [-122.419017, 37.70833], [-122.419237, 37.708332], [-122.419704, 37.708332], [-122.42085, 37.708335], [-122.423799, 37.709475], [-122.424899, 37.710397], [-122.426535, 37.711225], [-122.428707, 37.711959], [-122.431095, 37.712775], [-122.431741, 37.712764], [-122.432823, 37.713003], [-122.433488, 37.713254], [-122.432657, 37.714887], [-122.431088, 37.716623], [-122.426112, 37.715678], [-122.426354, 37.7167], [-122.426069, 37.718158], [-122.426076, 37.718415], [-122.42651, 37.718579], [-122.425777, 37.71936], [-122.425692, 37.720216], [-122.423421, 37.719826], [-122.423621, 37.719224], [-122.423507, 37.71897], [-122.410983, 37.721653], [-122.401091, 37.724311], [-122.399991, 37.721147], [-122.39856, 37.715698], [-122.396899, 37.713844], [-122.395654, 37.71147], [-122.395156, 37.708827], [-122.394984, 37.70841]]]]
    },
    "properties": {
      "neighbourhood": "Visitacion Valley",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.446825, 37.787251], [-122.447228, 37.789667], [-122.447656, 37.791649], [-122.446231, 37.791859], [-122.446702, 37.79474], [-122.445588, 37.794874], [-122.423822, 37.797606], [-122.423435, 37.795722], [-122.422697, 37.792133], [-122.422333, 37.79035], [-122.445745, 37.787412], [-122.446825, 37.787251]]]]
    },
    "properties": {
      "neighbourhood": "Pacific Heights",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.4626, 37.789041], [-122.460923, 37.789385], [-122.454351, 37.790665], [-122.447656, 37.791649], [-122.447228, 37.789667], [-122.446825, 37.787251], [-122.446811, 37.787165], [-122.446648, 37.786331], [-122.447333, 37.785651], [-122.447676, 37.78531], [-122.447439, 37.784311], [-122.447124, 37.783033], [-122.447378, 37.782383], [-122.448931, 37.782278], [-122.450611, 37.782028], [-122.452852, 37.781767], [-122.455721, 37.781329], [-122.45888, 37.781221], [-122.45924, 37.786848], [-122.462539, 37.786737], [-122.4626, 37.789041]]]]
    },
    "properties": {
      "neighbourhood": "Presidio Heights",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.387425, 37.7805], [-122.387407, 37.780493], [-122.387331, 37.780498], [-122.387315, 37.780507], [-122.387297, 37.7805], [-122.387208, 37.780505], [-122.387191, 37.780514], [-122.387173, 37.780507], [-122.387083, 37.780512], [-122.387066, 37.780522], [-122.387048, 37.780514], [-122.386965, 37.780519], [-122.386949, 37.780529], [-122.386931, 37.780521], [-122.386853, 37.780526], [-122.386836, 37.780535], [-122.386818, 37.780528], [-122.386736, 37.780533], [-122.38672, 37.780542], [-122.386702, 37.780535], [-122.386619, 37.78054], [-122.386602, 37.780549], [-122.386584, 37.780542], [-122.3865, 37.780547], [-122.386483, 37.780556], [-122.386465, 37.780549], [-122.386384, 37.780554], [-122.386368, 37.780563], [-122.38635, 37.780556], [-122.386267, 37.780561], [-122.38625, 37.78057], [-122.386232, 37.780563], [-122.386143, 37.780568], [-122.386126, 37.780577], [-122.386109, 37.78057], [-122.386023, 37.780575], [-122.386007, 37.780584], [-122.385989, 37.780577], [-122.385901, 37.780582], [-122.385885, 37.780592], [-122.385867, 37.780584], [-122.385785, 37.780589], [-122.385768, 37.780599], [-122.385751, 37.780591], [-122.385669, 37.780596], [-122.385652, 37.780605], [-122.385634, 37.780598], [-122.385555, 37.780603], [-122.385539, 37.780612], [-122.385521, 37.780605], [-122.385434, 37.78061], [-122.385418, 37.780619], [-122.3854, 37.780612], [-122.385311, 37.780617], [-122.385295, 37.780627], [-122.385277, 37.780619], [-122.385192, 37.780624], [-122.385175, 37.780634], [-122.385157, 37.780626], [-122.38508, 37.780631], [-122.385063, 37.78064], [-122.385045, 37.780633], [-122.38496, 37.780638], [-122.384944, 37.780647], [-122.384926, 37.78064], [-122.384841, 37.780649], [-122.384843, 37.780757], [-122.384818, 37.780759], [-122.384804, 37.780526], [-122.384828, 37.780524], [-122.384839, 37.780619], [-122.384924, 37.780619], [-122.38494, 37.780609], [-122.384958, 37.780617], [-122.385043, 37.780612], [-122.38506, 37.780602], [-122.385078, 37.78061], [-122.385156, 37.780605], [-122.385172, 37.780596], [-122.38519, 37.780603], [-122.385275, 37.780598], [-122.385292, 37.780589], [-122.38531, 37.780596], [-122.385398, 37.780591], [-122.385414, 37.780582], [-122.385432, 37.780589], [-122.385519, 37.780584], [-122.385535, 37.780575], [-122.385553, 37.780582], [-122.385633, 37.780577], [-122.385649, 37.780568], [-122.385667, 37.780575], [-122.385749, 37.78057], [-122.385765, 37.780561], [-122.385783, 37.780568], [-122.385865, 37.780564], [-122.385881, 37.780554], [-122.385899, 37.780562], [-122.385987, 37.780557], [-122.386003, 37.780547], [-122.386021, 37.780555], [-122.386107, 37.78055], [-122.386123, 37.78054], [-122.386141, 37.780548], [-122.38623, 37.780542], [-122.386247, 37.780533], [-122.386265, 37.78054], [-122.386348, 37.780536], [-122.386364, 37.780526], [-122.386382, 37.780534], [-122.386464, 37.780529], [-122.38648, 37.78052], [-122.386498, 37.780527], [-122.386582, 37.780522], [-122.386599, 37.780513], [-122.386617, 37.78052], [-122.3867, 37.780515], [-122.386717, 37.780506], [-122.386735, 37.780513], [-122.386816, 37.780508], [-122.386833, 37.780499], [-122.386851, 37.780506], [-122.386929, 37.780502], [-122.386945, 37.780492], [-122.386963, 37.7805], [-122.387046, 37.780495], [-122.387063, 37.780486], [-122.387081, 37.780493], [-122.387172, 37.780487], [-122.387188, 37.780478], [-122.387206, 37.780485], [-122.387295, 37.78048], [-122.387312, 37.780471], [-122.38733, 37.780478], [-122.387406, 37.780474], [-122.387422, 37.780465], [-122.38744, 37.780472], [-122.387532, 37.780462], [-122.387494, 37.780053], [-122.387401, 37.780054], [-122.387385, 37.780063], [-122.387367, 37.780056], [-122.387291, 37.78006], [-122.387274, 37.780069], [-122.387256, 37.780062], [-122.387167, 37.780067], [-122.387151, 37.780076], [-122.387133, 37.780069], [-122.387042, 37.780074], [-122.387025, 37.780083], [-122.387007, 37.780076], [-122.386919, 37.780086], [-122.386916, 37.780194], [-122.386895, 37.780087], [-122.386812, 37.780087], [-122.386795, 37.780096], [-122.386777, 37.780089], [-122.386696, 37.780094], [-122.386679, 37.780103], [-122.386661, 37.780096], [-122.386578, 37.7801], [-122.386561, 37.78011], [-122.386543, 37.780102], [-122.386459, 37.780107], [-122.386442, 37.780116], [-122.386424, 37.780109], [-122.386343, 37.780114], [-122.386327, 37.780123], [-122.386309, 37.780116], [-122.386226, 37.78012], [-122.386209, 37.780129], [-122.386191, 37.780122], [-122.386102, 37.780127], [-122.386085, 37.780136], [-122.386067, 37.780129], [-122.385982, 37.780134], [-122.385966, 37.780143], [-122.385948, 37.780136], [-122.38586, 37.780141], [-122.385843, 37.78015], [-122.385825, 37.780143], [-122.385744, 37.780147], [-122.385727, 37.780157], [-122.385709, 37.780149], [-122.385628, 37.780154], [-122.385611, 37.780163], [-122.385593, 37.780156], [-122.385514, 37.78016], [-122.385497, 37.78017], [-122.385479, 37.780162], [-122.385393, 37.780167], [-122.385376, 37.780176], [-122.385359, 37.780169], [-122.38527, 37.780174], [-122.385254, 37.780183], [-122.385236, 37.780176], [-122.385151, 37.780181], [-122.385134, 37.78019], [-122.385116, 37.780183], [-122.385039, 37.780187], [-122.385022, 37.780196], [-122.385004, 37.780189], [-122.384919, 37.780194], [-122.384902, 37.780203], [-122.384884, 37.780196], [-122.3848, 37.780205], [-122.384801, 37.780313], [-122.384777, 37.780314], [-122.384763, 37.780081], [-122.384787, 37.78008], [-122.384798, 37.780175], [-122.384883, 37.780174], [-122.384899, 37.780165], [-122.384917, 37.780172], [-122.385002, 37.780168], [-122.385019, 37.780158], [-122.385037, 37.780166], [-122.385114, 37.780161], [-122.385131, 37.780152], [-122.385149, 37.78016], [-122.385234, 37.780155], [-122.38525, 37.780146], [-122.385268, 37.780153], [-122.385357, 37.780148], [-122.385373, 37.780139], [-122.385391, 37.780146], [-122.385478, 37.780141], [-122.385494, 37.780132], [-122.385512, 37.780139], [-122.385592, 37.780135], [-122.385608, 37.780126], [-122.385626, 37.780133], [-122.385708, 37.780129], [-122.385724, 37.780119], [-122.385742, 37.780127], [-122.385824, 37.780122], [-122.38584, 37.780113], [-122.385858, 37.78012], [-122.385946, 37.780115], [-122.385963, 37.780106], [-122.38598, 37.780113], [-122.386066, 37.780109], [-122.386082, 37.780099], [-122.3861, 37.780107], [-122.386189, 37.780102], [-122.386206, 37.780093], [-122.386224, 37.7801], [-122.386307, 37.780095], [-122.386323, 37.780086], [-122.386341, 37.780093], [-122.386423, 37.780089], [-122.386439, 37.78008], [-122.386457, 37.780087], [-122.386542, 37.780082], [-122.386558, 37.780073], [-122.386576, 37.78008], [-122.386659, 37.780076], [-122.386676, 37.780067], [-122.386694, 37.780074], [-122.386776, 37.780069], [-122.386792, 37.78006], [-122.38681, 37.780067], [-122.386888, 37.780063], [-122.386905, 37.780054], [-122.386923, 37.780061], [-122.387006, 37.780056], [-122.387022, 37.780047], [-122.38704, 37.780055], [-122.387131, 37.78005], [-122.387148, 37.78004], [-122.387166, 37.780048], [-122.387255, 37.780043], [-122.387271, 37.780033], [-122.387289, 37.780041], [-122.387365, 37.780037], [-122.387382, 37.780027], [-122.3874, 37.780035], [-122.387491, 37.780025], [-122.387457, 37.77966], [-122.387379, 37.77966], [-122.387363, 37.779669], [-122.387345, 37.779662], [-122.387276, 37.779666], [-122.38726, 37.779675], [-122.387242, 37.779668], [-122.387174, 37.779672], [-122.387157, 37.779681], [-122.387139, 37.779674], [-122.387067, 37.779678], [-122.387051, 37.779687], [-122.387033, 37.77968], [-122.386969, 37.779684], [-122.386953, 37.779693], [-122.386935, 37.779686], [-122.386868, 37.77969], [-122.386852, 37.779699], [-122.386834, 37.779692], [-122.386765, 37.779696], [-122.386748, 37.779705], [-122.38673, 37.779698], [-122.38666, 37.779702], [-122.386643, 37.779711], [-122.386625, 37.779704], [-122.386556, 37.779708], [-122.38654, 37.779717], [-122.386522, 37.77971], [-122.386452, 37.779714], [-122.386435, 37.779723], [-122.386417, 37.779716], [-122.386354, 37.779719], [-122.386338, 37.779728], [-122.38632, 37.779721], [-122.386246, 37.779726], [-122.386229, 37.779735], [-122.386211, 37.779728], [-122.386152, 37.779731], [-122.386135, 37.77974], [-122.386117, 37.779733], [-122.386049, 37.779737], [-122.386033, 37.779746], [-122.386014, 37.779739], [-122.385946, 37.779743], [-122.385929, 37.779752], [-122.385911, 37.779745], [-122.385843, 37.779749], [-122.385826, 37.779758], [-122.385808, 37.779751], [-122.385742, 37.779755], [-122.385725, 37.779764], [-122.385707, 37.779757], [-122.385635, 37.779761], [-122.385618, 37.77977], [-122.3856, 37.779763], [-122.385528, 37.779767], [-122.385511, 37.779776], [-122.385493, 37.779769], [-122.385423, 37.779773], [-122.385407, 37.779782], [-122.385389, 37.779775], [-122.38532, 37.779779], [-122.385303, 37.779788], [-122.385285, 37.779781], [-122.385226, 37.779784], [-122.385209, 37.779794], [-122.385191, 37.779786], [-122.385121, 37.77979], [-122.385105, 37.7798], [-122.385087, 37.779792], [-122.38502, 37.779796], [-122.385003, 37.779806], [-122.384985, 37.779798], [-122.384917, 37.779802], [-122.3849, 37.779811], [-122.384882, 37.779804], [-122.384807, 37.779813], [-122.384811, 37.779899], [-122.384783, 37.7799], [-122.384762, 37.779694], [-122.384789, 37.779692], [-122.384804, 37.779783], [-122.38488, 37.779782], [-122.384896, 37.779773], [-122.384915, 37.77978], [-122.384983, 37.779776], [-122.385, 37.779767], [-122.385018, 37.779774], [-122.385084, 37.779771], [-122.385101, 37.779761], [-122.385119, 37.779769], [-122.385189, 37.779765], [-122.385206, 37.779755], [-122.385224, 37.779763], [-122.385283, 37.779759], [-122.3853, 37.77975], [-122.385318, 37.779757], [-122.385386, 37.779753], [-122.385403, 37.779744], [-122.385421, 37.779751], [-122.385491, 37.779747], [-122.385508, 37.779738], [-122.385526, 37.779745], [-122.385598, 37.779741], [-122.385614, 37.779732], [-122.385633, 37.779739], [-122.385705, 37.779735], [-122.385721, 37.779726], [-122.385739, 37.779733], [-122.385806, 37.779729], [-122.385823, 37.77972], [-122.385841, 37.779727], [-122.385909, 37.779723], [-122.385926, 37.779714], [-122.385944, 37.779721], [-122.386012, 37.779717], [-122.386029, 37.779708], [-122.386047, 37.779715], [-122.386115, 37.779711], [-122.386132, 37.779702], [-122.38615, 37.779709], [-122.386209, 37.779706], [-122.386226, 37.779696], [-122.386244, 37.779704], [-122.386318, 37.779699], [-122.386334, 37.77969], [-122.386352, 37.779697], [-122.386415, 37.779694], [-122.386432, 37.779684], [-122.38645, 37.779692], [-122.38652, 37.779688], [-122.386536, 37.779678], [-122.386554, 37.779686], [-122.386623, 37.779682], [-122.38664, 37.779672], [-122.386658, 37.77968], [-122.386728, 37.779676], [-122.386745, 37.779666], [-122.386763, 37.779674], [-122.386831, 37.77967], [-122.386848, 37.77966], [-122.386866, 37.779668], [-122.386933, 37.779664], [-122.386949, 37.779655], [-122.386967, 37.779662], [-122.387036, 37.779654], [-122.387039, 37.779562], [-122.387055, 37.779657], [-122.387137, 37.779652], [-122.387153, 37.779643], [-122.387172, 37.77965], [-122.38724, 37.779646], [-122.387256, 37.779637], [-122.387274, 37.779644], [-122.387343, 37.77964], [-122.387359, 37.779631], [-122.387377, 37.779638], [-122.387454, 37.77963], [-122.387423, 37.779292], [-122.38734, 37.779292], [-122.387324, 37.779302], [-122.387306, 37.779294], [-122.387236, 37.779299], [-122.387219, 37.779308], [-122.387201, 37.779301], [-122.387132, 37.779305], [-122.387115, 37.779314], [-122.387097, 37.779307], [-122.387028, 37.779311], [-122.387011, 37.77932], [-122.386994, 37.779313], [-122.386933, 37.779316], [-122.386916, 37.779325], [-122.386898, 37.779318], [-122.386829, 37.779322], [-122.386812, 37.779331], [-122.386794, 37.779324], [-122.386727, 37.779328], [-122.38671, 37.779337], [-122.386692, 37.77933], [-122.386625, 37.779334], [-122.386608, 37.779343], [-122.38659, 37.779336], [-122.386521, 37.77934], [-122.386504, 37.779349], [-122.386486, 37.779342], [-122.386417, 37.779346], [-122.3864, 37.779355], [-122.386383, 37.779348], [-122.386319, 37.779351], [-122.386303, 37.779361], [-122.386285, 37.779353], [-122.386211, 37.779358], [-122.386194, 37.779367], [-122.386176, 37.77936], [-122.386113, 37.779363], [-122.386096, 37.779373], [-122.386079, 37.779365], [-122.386011, 37.779369], [-122.385994, 37.779378], [-122.385977, 37.779371], [-122.385909, 37.779375], [-122.385893, 37.779384], [-122.385875, 37.779377], [-122.385801, 37.779381], [-122.385785, 37.779391], [-122.385767, 37.779383], [-122.385699, 37.779387], [-122.385682, 37.779396], [-122.385664, 37.779389], [-122.385598, 37.779393], [-122.385581, 37.779402], [-122.385564, 37.779395], [-122.385495, 37.779399], [-122.385478, 37.779408], [-122.38546, 37.779401], [-122.38539, 37.779405], [-122.385373, 37.779414], [-122.385355, 37.779407], [-122.385285, 37.779411], [-122.385268, 37.77942], [-122.385251, 37.779413], [-122.38519, 37.779417], [-122.385174, 37.779426], [-122.385156, 37.779419], [-122.385088, 37.779423], [-122.385072, 37.779432], [-122.385054, 37.779425], [-122.384985, 37.779428], [-122.384968, 37.779438], [-122.38495, 37.77943], [-122.384881, 37.779434], [-122.384865, 37.779444], [-122.384847, 37.779436], [-122.38477, 37.779445], [-122.384771, 37.779536], [-122.384747, 37.779537], [-122.384732, 37.779329], [-122.384757, 37.779328], [-122.384768, 37.779418], [-122.384845, 37.779417], [-122.384862, 37.779408], [-122.38488, 37.779415], [-122.384949, 37.779411], [-122.384966, 37.779402], [-122.384984, 37.779409], [-122.385052, 37.779405], [-122.385069, 37.779396], [-122.385087, 37.779403], [-122.385155, 37.779399], [-122.385171, 37.77939], [-122.385189, 37.779397], [-122.385249, 37.779394], [-122.385266, 37.779385], [-122.385284, 37.779392], [-122.385354, 37.779388], [-122.385371, 37.779379], [-122.385389, 37.779386], [-122.385459, 37.779382], [-122.385475, 37.779373], [-122.385493, 37.77938], [-122.385562, 37.779376], [-122.385579, 37.779367], [-122.385597, 37.779374], [-122.385663, 37.77937], [-122.38568, 37.779361], [-122.385698, 37.779368], [-122.385766, 37.779364], [-122.385782, 37.779355], [-122.3858, 37.779362], [-122.385873, 37.779358], [-122.38589, 37.779349], [-122.385908, 37.779356], [-122.385975, 37.779352], [-122.385992, 37.779343], [-122.38601, 37.77935], [-122.386077, 37.779346], [-122.386094, 37.779337], [-122.386112, 37.779344], [-122.386175, 37.77934], [-122.386192, 37.779331], [-122.38621, 37.779339], [-122.386284, 37.779334], [-122.3863, 37.779325], [-122.386318, 37.779332], [-122.386381, 37.779329], [-122.386398, 37.779319], [-122.386416, 37.779327], [-122.386485, 37.779323], [-122.386502, 37.779313], [-122.38652, 37.779321], [-122.386589, 37.779317], [-122.386606, 37.779307], [-122.386624, 37.779315], [-122.386691, 37.779311], [-122.386708, 37.779301], [-122.386726, 37.779309], [-122.386793, 37.779305], [-122.38681, 37.779296], [-122.386827, 37.779303], [-122.386897, 37.779299], [-122.386913, 37.77929], [-122.386931, 37.779297], [-122.386992, 37.779293], [-122.387009, 37.779284], [-122.387027, 37.779291], [-122.387096, 37.779287], [-122.387113, 37.779278], [-122.387131, 37.779285], [-122.3872, 37.779281], [-122.387217, 37.779272], [-122.387234, 37.779279], [-122.387305, 37.779275], [-122.387321, 37.779266], [-122.387339, 37.779273], [-122.38742, 37.779264], [-122.38739, 37.778937], [-122.387316, 37.778937], [-122.387299, 37.778946], [-122.387281, 37.778939], [-122.387219, 37.778942], [-122.387203, 37.778951], [-122.387185, 37.778944], [-122.387123, 37.778948], [-122.387107, 37.778957], [-122.387089, 37.77895], [-122.387026, 37.778953], [-122.387009, 37.778962], [-122.386991, 37.778955], [-122.38693, 37.778959], [-122.386914, 37.778968], [-122.386896, 37.778961], [-122.386836, 37.778964], [-122.38682, 37.778973], [-122.386802, 37.778966], [-122.386736, 37.77897], [-122.386719, 37.778979], [-122.386701, 37.778972], [-122.386638, 37.778975], [-122.386622, 37.778985], [-122.386604, 37.778977], [-122.38655, 37.77898], [-122.386534, 37.77899], [-122.386516, 37.778982], [-122.38645, 37.778986], [-122.386433, 37.778995], [-122.386415, 37.778988], [-122.386356, 37.778991], [-122.386339, 37.779001], [-122.386321, 37.778993], [-122.386256, 37.778997], [-122.38624, 37.779006], [-122.386222, 37.778999], [-122.386164, 37.779002], [-122.386148, 37.779012], [-122.38613, 37.779004], [-122.386067, 37.779008], [-122.386051, 37.779017], [-122.386033, 37.77901], [-122.385962, 37.779014], [-122.385946, 37.779023], [-122.385928, 37.779016], [-122.385865, 37.77902], [-122.385848, 37.779029], [-122.385831, 37.779021], [-122.385768, 37.779025], [-122.385752, 37.779034], [-122.385734, 37.779027], [-122.385675, 37.77903], [-122.385658, 37.77904], [-122.38564, 37.779032], [-122.385578, 37.779036], [-122.385561, 37.779045], [-122.385543, 37.779038], [-122.385481, 37.779042], [-122.385464, 37.779051], [-122.385446, 37.779043], [-122.385385, 37.779047], [-122.385369, 37.779056], [-122.385351, 37.779049], [-122.385286, 37.779053], [-122.38527, 37.779062], [-122.385252, 37.779055], [-122.385195, 37.779058], [-122.385178, 37.779067], [-122.38516, 37.77906], [-122.385094, 37.779064], [-122.385078, 37.779073], [-122.38506, 37.779065], [-122.385002, 37.779069], [-122.384986, 37.779078], [-122.384968, 37.779071], [-122.384907, 37.779074], [-122.384891, 37.779083], [-122.384873, 37.779076], [-122.384801, 37.779084], [-122.384802, 37.779159], [-122.384781, 37.77916], [-122.384766, 37.778979], [-122.384787, 37.778978], [-122.384799, 37.779057], [-122.384871, 37.779057], [-122.384888, 37.779048], [-122.384906, 37.779055], [-122.384966, 37.779052], [-122.384983, 37.779042], [-122.385001, 37.77905], [-122.385058, 37.779046], [-122.385075, 37.779037], [-122.385093, 37.779044], [-122.385159, 37.779041], [-122.385175, 37.779031], [-122.385193, 37.779039], [-122.38525, 37.779035], [-122.385267, 37.779026], [-122.385285, 37.779033], [-122.385349, 37.77903], [-122.385366, 37.77902], [-122.385384, 37.779028], [-122.385445, 37.779024], [-122.385461, 37.779015], [-122.385479, 37.779022], [-122.385542, 37.779019], [-122.385558, 37.779009], [-122.385576, 37.779017], [-122.385639, 37.779013], [-122.385655, 37.779004], [-122.385673, 37.779011], [-122.385732, 37.779008], [-122.385749, 37.778999], [-122.385767, 37.779006], [-122.385829, 37.779002], [-122.385846, 37.778993], [-122.385864, 37.779], [-122.385926, 37.778997], [-122.385943, 37.778988], [-122.385961, 37.778995], [-122.386031, 37.778991], [-122.386048, 37.778982], [-122.386066, 37.778989], [-122.386128, 37.778985], [-122.386145, 37.778976], [-122.386163, 37.778983], [-122.38622, 37.77898], [-122.386237, 37.778971], [-122.386255, 37.778978], [-122.38632, 37.778974], [-122.386336, 37.778965], [-122.386354, 37.778972], [-122.386414, 37.778969], [-122.38643, 37.77896], [-122.386448, 37.778967], [-122.386514, 37.778963], [-122.386531, 37.778954], [-122.386549, 37.778961], [-122.386602, 37.778958], [-122.386619, 37.778949], [-122.386637, 37.778956], [-122.3867, 37.778953], [-122.386716, 37.778943], [-122.386734, 37.778951], [-122.3868, 37.778947], [-122.386817, 37.778938], [-122.386835, 37.778945], [-122.386894, 37.778941], [-122.386911, 37.778932], [-122.386929, 37.778939], [-122.38699, 37.778936], [-122.387006, 37.778927], [-122.387024, 37.778934], [-122.387087, 37.77893], [-122.387104, 37.778921], [-122.387122, 37.778928], [-122.387183, 37.778925], [-122.3872, 37.778916], [-122.387218, 37.778923], [-122.38728, 37.778919], [-122.387296, 37.77891], [-122.387314, 37.778917], [-122.387387, 37.778909], [-122.387359, 37.778609], [-122.387286, 37.778609], [-122.38727, 37.778618], [-122.387252, 37.778611], [-122.387186, 37.778615], [-122.38717, 37.778624], [-122.387152, 37.778617], [-122.387093, 37.77862], [-122.387077, 37.778629], [-122.387059, 37.778622], [-122.386995, 37.778626], [-122.386978, 37.778635], [-122.38696, 37.778628], [-122.3869, 37.778631], [-122.386884, 37.778641], [-122.386866, 37.778633], [-122.386799, 37.778637], [-122.386782, 37.778646], [-122.386764, 37.778639], [-122.386707, 37.778642], [-122.38669, 37.778652], [-122.386672, 37.778644], [-122.386614, 37.778648], [-122.386597, 37.778657], [-122.386579, 37.77865], [-122.38651, 37.778654], [-122.386494, 37.778663], [-122.386476, 37.778656], [-122.386417, 37.778659], [-122.386401, 37.778668], [-122.386383, 37.778661], [-122.386317, 37.778665], [-122.386301, 37.778674], [-122.386283, 37.778667], [-122.386221, 37.77867], [-122.386204, 37.77868], [-122.386186, 37.778672], [-122.386126, 37.778676], [-122.386109, 37.778685], [-122.386091, 37.778678], [-122.386028, 37.778682], [-122.386012, 37.778691], [-122.385994, 37.778684], [-122.385932, 37.778687], [-122.385916, 37.778696], [-122.385898, 37.778689], [-122.385834, 37.778693], [-122.385818, 37.778702], [-122.3858, 37.778695], [-122.385741, 37.778698], [-122.385725, 37.778707], [-122.385707, 37.7787], [-122.385643, 37.778704], [-122.385626, 37.778713], [-122.385608, 37.778706], [-122.38555, 37.778709], [-122.385533, 37.778718], [-122.385515, 37.778711], [-122.385452, 37.778715], [-122.385435, 37.778724], [-122.385417, 37.778717], [-122.385355, 37.77872], [-122.385338, 37.77873], [-122.38532, 37.778722], [-122.385258, 37.778726], [-122.385242, 37.778735], [-122.385224, 37.778728], [-122.385152, 37.778736], [-122.385154, 37.778814], [-122.38513, 37.778815], [-122.385114, 37.778634], [-122.385138, 37.778633], [-122.38515, 37.778709], [-122.385222, 37.778709], [-122.385239, 37.7787], [-122.385257, 37.778707], [-122.385319, 37.778703], [-122.385335, 37.778694], [-122.385353, 37.778701], [-122.385415, 37.778698], [-122.385432, 37.778688], [-122.38545, 37.778696], [-122.385514, 37.778692], [-122.38553, 37.778683], [-122.385548, 37.77869], [-122.385607, 37.778687], [-122.385623, 37.778677], [-122.385641, 37.778685], [-122.385705, 37.778681], [-122.385722, 37.778672], [-122.38574, 37.778679], [-122.385798, 37.778676], [-122.385815, 37.778666], [-122.385833, 37.778674], [-122.385896, 37.77867], [-122.385913, 37.778661], [-122.385931, 37.778668], [-122.385992, 37.778664], [-122.386009, 37.778655], [-122.386027, 37.778662], [-122.38609, 37.778659], [-122.386106, 37.77865], [-122.386124, 37.778657], [-122.386189, 37.778649], [-122.386195, 37.778572], [-122.386209, 37.778652], [-122.386281, 37.778648], [-122.386297, 37.778639], [-122.386315, 37.778646], [-122.386381, 37.778642], [-122.386398, 37.778633], [-122.386416, 37.77864], [-122.386474, 37.778637], [-122.386491, 37.778627], [-122.386509, 37.778635], [-122.386578, 37.778631], [-122.386594, 37.778621], [-122.386612, 37.778629], [-122.386671, 37.778625], [-122.386687, 37.778616], [-122.386705, 37.778623], [-122.386762, 37.77862], [-122.386779, 37.778611], [-122.386797, 37.778618], [-122.386864, 37.778614], [-122.386881, 37.778605], [-122.386899, 37.778612], [-122.386959, 37.778609], [-122.386975, 37.778599], [-122.386993, 37.778607], [-122.387057, 37.778603], [-122.387074, 37.778594], [-122.387092, 37.778601], [-122.38715, 37.778598], [-122.387167, 37.778588], [-122.387185, 37.778596], [-122.38725, 37.778592], [-122.387267, 37.778583], [-122.387285, 37.77859], [-122.387356, 37.778582], [-122.387341, 37.77836], [-122.385336, 37.77848], [-122.385293, 37.778451], [-122.385333, 37.778412], [-122.385371, 37.778438], [-122.387505, 37.778316], [-122.387507, 37.778336], [-122.387692, 37.778337], [-122.387624, 37.77821], [-122.390411, 37.777142], [-122.390349, 37.777093], [-122.389857, 37.7765], [-122.389811, 37.776503], [-122.389821, 37.776591], [-122.387678, 37.776716], [-122.387617, 37.776748], [-122.387586, 37.776747], [-122.387555, 37.776744], [-122.387526, 37.776739], [-122.387495, 37.776731], [-122.387473, 37.776723], [-122.387446, 37.776711], [-122.387415, 37.776693], [-122.387387, 37.776673], [-122.387368, 37.776656], [-122.387352, 37.776639], [-122.387334, 37.776614], [-122.387323, 37.776595], [-122.387312, 37.776572], [-122.387305, 37.776548], [-122.387302, 37.776531], [-122.3873, 37.776509], [-122.3873, 37.776485], [-122.387311, 37.776319], [-122.387103, 37.776326], [-122.387082, 37.776104], [-122.385018, 37.776334], [-122.384994, 37.776321], [-122.385026, 37.776275], [-122.384828, 37.775394], [-122.384881, 37.775389], [-122.384877, 37.77533], [-122.386996, 37.775082], [-122.386923, 37.774328], [-122.381814, 37.774615], [-122.381456, 37.771917], [-122.384679, 37.773344], [-122.384712, 37.773356], [-122.384738, 37.773363], [-122.38477, 37.77337], [-122.384797, 37.773374], [-122.384818, 37.773375], [-122.384839, 37.773376], [-122.38486, 37.773376], [-122.38676, 37.773273], [-122.386574, 37.772844], [-122.386578, 37.772821], [-122.386596, 37.772804], [-122.386717, 37.772771], [-122.386709, 37.772756], [-122.386703, 37.772741], [-122.386698, 37.772725], [-122.386691, 37.772704], [-122.386687, 37.772682], [-122.386684, 37.77266], [-122.386683, 37.77264], [-122.386683, 37.772625], [-122.386684, 37.772605], [-122.386687, 37.772586], [-122.38666, 37.772482], [-122.386673, 37.772457], [-122.386714, 37.77244], [-122.386679, 37.772362], [-122.386645, 37.772369], [-122.386631, 37.772337], [-122.386621, 37.77231], [-122.386611, 37.772282], [-122.386602, 37.772255], [-122.386593, 37.772228], [-122.386585, 37.7722], [-122.386577, 37.772172], [-122.38657, 37.772145], [-122.386564, 37.772117], [-122.386559, 37.772089], [-122.386554, 37.772061], [-122.386549, 37.772033], [-122.386545, 37.772004], [-122.386542, 37.771976], [-122.38654, 37.771948], [-122.386439, 37.771943], [-122.386459, 37.771679], [-122.386414, 37.771677], [-122.386417, 37.771634], [-122.386369, 37.77163], [-122.38637, 37.771591], [-122.386346, 37.771591], [-122.386349, 37.771562], [-122.386374, 37.771562], [-122.386384, 37.771459], [-122.386277, 37.771448], [-122.386286, 37.771405], [-122.386249, 37.771396], [-122.386214, 37.771392], [-122.386168, 37.771343], [-122.386148, 37.77134], [-122.386127, 37.771332], [-122.38611, 37.77132], [-122.386099, 37.771306], [-122.386092, 37.771291], [-122.386142, 37.771266], [-122.386086, 37.771183], [-122.386041, 37.771201], [-122.386018, 37.771195], [-122.386041, 37.771174], [-122.385895, 37.770994], [-122.38592, 37.770818], [-122.385838, 37.770683], [-122.385818, 37.770676], [-122.385798, 37.770681], [-122.385784, 37.770696], [-122.385798, 37.77125], [-122.385622, 37.772162], [-122.385554, 37.772154], [-122.385681, 37.771444], [-122.385515, 37.77143], [-122.385468, 37.771531], [-122.385336, 37.771652], [-122.385286, 37.771634], [-122.385643, 37.770848], [-122.385684, 37.770764], [-122.38572, 37.770637], [-122.385724, 37.770592], [-122.385559, 37.770637], [-122.383155, 37.769709], [-122.383376, 37.769333], [-122.385569, 37.77018], [-122.385493, 37.769991], [-122.385475, 37.769837], [-122.385019, 37.768857], [-122.384894, 37.768882], [-122.384788, 37.768657], [-122.385006, 37.768586], [-122.385007, 37.76853], [-122.385038, 37.768497], [-122.385008, 37.768429], [-122.38508, 37.768406], [-122.385043, 37.768341], [-122.385107, 37.768318], [-122.385168, 37.768296], [-122.385148, 37.768167], [-122.385146, 37.768147], [-122.384701, 37.768171], [-122.384624, 37.768075], [-122.383882, 37.768122], [-122.383843, 37.767745], [-122.382457, 37.767833], [-122.38244, 37.767692], [-122.384901, 37.767536], [-122.384858, 37.767119], [-122.405014, 37.765952], [-122.405032, 37.766635], [-122.40528, 37.767914], [-122.407029, 37.768911], [-122.40876, 37.769225], [-122.412755, 37.769588], [-122.415771, 37.769625], [-122.419768, 37.770073], [-122.421172, 37.770221], [-122.42269, 37.770624], [-122.423269, 37.772074], [-122.422213, 37.772905], [-122.416141, 37.777686], [-122.409664, 37.782642], [-122.405844, 37.785687], [-122.405808, 37.785716], [-122.401146, 37.781999], [-122.396671, 37.785584], [-122.391297, 37.789797], [-122.389334, 37.79142], [-122.388808, 37.790978], [-122.38893, 37.79088], [-122.388612, 37.790313], [-122.388049, 37.790508], [-122.388012, 37.790431], [-122.388369, 37.790308], [-122.388287, 37.790161], [-122.388321, 37.790151], [-122.388244, 37.790007], [-122.388219, 37.789996], [-122.388076, 37.790038], [-122.385728, 37.790972], [-122.385706, 37.790964], [-122.385507, 37.790549], [-122.385514, 37.790533], [-122.385687, 37.790452], [-122.387607, 37.789787], [-122.387348, 37.789311], [-122.385354, 37.78979], [-122.385326, 37.789788], [-122.385301, 37.789777], [-122.385286, 37.789762], [-122.385107, 37.789321], [-122.385109, 37.789304], [-122.385119, 37.789291], [-122.385134, 37.78928], [-122.385148, 37.78922], [-122.387188, 37.788774], [-122.387049, 37.788229], [-122.385261, 37.788519], [-122.385237, 37.788513], [-122.385218, 37.788497], [-122.385126, 37.788143], [-122.385135, 37.788122], [-122.385156, 37.788107], [-122.387123, 37.787786], [-122.387161, 37.78778], [-122.387198, 37.787773], [-122.387233, 37.787765], [-122.387269, 37.787756], [-122.387295, 37.787749], [-122.387321, 37.787741], [-122.387347, 37.787732], [-122.387373, 37.787724], [-122.387407, 37.787241], [-122.38702, 37.787247], [-122.384551, 37.7874], [-122.384524, 37.787391], [-122.384503, 37.787369], [-122.384342, 37.785742], [-122.384346, 37.785726], [-122.38436, 37.785711], [-122.384382, 37.7857], [-122.387218, 37.785525], [-122.387243, 37.785525], [-122.387263, 37.785524], [-122.38729, 37.785522], [-122.387316, 37.78552], [-122.387343, 37.785517], [-122.387369, 37.785513], [-122.387389, 37.785509], [-122.387409, 37.785505], [-122.387434, 37.7855], [-122.387454, 37.785495], [-122.387473, 37.78549], [-122.387498, 37.785482], [-122.387516, 37.785476], [-122.387535, 37.785469], [-122.387559, 37.78546], [-122.387581, 37.785438], [-122.387631, 37.784865], [-122.385459, 37.784994], [-122.385415, 37.784607], [-122.387222, 37.784502], [-122.387418, 37.784479], [-122.387444, 37.784475], [-122.387467, 37.784471], [-122.387493, 37.784465], [-122.387523, 37.784457], [-122.387545, 37.784451], [-122.387567, 37.784443], [-122.387588, 37.784436], [-122.387609, 37.784427], [-122.387629, 37.784418], [-122.387649, 37.784409], [-122.387669, 37.784399], [-122.387678, 37.78435], [-122.38771, 37.783876], [-122.386288, 37.783959], [-122.386237, 37.783406], [-122.387533, 37.78333], [-122.387696, 37.783279], [-122.387752, 37.783246], [-122.387777, 37.782868], [-122.387543, 37.7828], [-122.38752, 37.782797], [-122.387499, 37.782794], [-122.387478, 37.782792], [-122.38745, 37.78279], [-122.387426, 37.78279], [-122.387397, 37.78279], [-122.387373, 37.782791], [-122.387353, 37.782792], [-122.384754, 37.78294], [-122.384734, 37.782928], [-122.384681, 37.782546], [-122.384697, 37.78253], [-122.387509, 37.782347], [-122.387535, 37.782344], [-122.38756, 37.782342], [-122.387788, 37.782275], [-122.387755, 37.781796], [-122.38555, 37.781933], [-122.385532, 37.781921], [-122.385512, 37.781779], [-122.384922, 37.78181], [-122.384901, 37.781826], [-122.384858, 37.781799], [-122.384893, 37.781763], [-122.384916, 37.781777], [-122.385508, 37.781742], [-122.385494, 37.781593], [-122.38551, 37.781579], [-122.387629, 37.781451], [-122.387584, 37.780965], [-122.387472, 37.780975], [-122.38747, 37.781103], [-122.387444, 37.780977], [-122.387342, 37.780982], [-122.38734, 37.781111], [-122.387314, 37.780984], [-122.387211, 37.78099], [-122.387209, 37.781118], [-122.387183, 37.780992], [-122.387074, 37.780998], [-122.387072, 37.781126], [-122.387046, 37.780999], [-122.386942, 37.781005], [-122.38694, 37.781134], [-122.386914, 37.781007], [-122.386817, 37.781013], [-122.386815, 37.781141], [-122.386789, 37.781014], [-122.386681, 37.78102], [-122.38668, 37.781148], [-122.386654, 37.781022], [-122.386548, 37.781028], [-122.386546, 37.781156], [-122.38652, 37.781029], [-122.386416, 37.781035], [-122.386414, 37.781164], [-122.386389, 37.781037], [-122.386287, 37.781042], [-122.386284, 37.781171], [-122.386259, 37.781044], [-122.386152, 37.781051], [-122.38615, 37.781179], [-122.386124, 37.781052], [-122.386024, 37.781058], [-122.386022, 37.781186], [-122.385996, 37.781059], [-122.385884, 37.781066], [-122.385882, 37.781194], [-122.385856, 37.781067], [-122.38576, 37.781073], [-122.385758, 37.781201], [-122.385732, 37.781075], [-122.385626, 37.781081], [-122.385625, 37.781209], [-122.385599, 37.781082], [-122.385493, 37.781088], [-122.385491, 37.781216], [-122.385465, 37.78109], [-122.385357, 37.781096], [-122.385356, 37.781224], [-122.38533, 37.781098], [-122.385225, 37.781104], [-122.385223, 37.781232], [-122.385197, 37.781105], [-122.385092, 37.781111], [-122.38509, 37.781239], [-122.385064, 37.781113], [-122.38496, 37.781119], [-122.384958, 37.781247], [-122.384933, 37.78112], [-122.384829, 37.781126], [-122.384827, 37.781254], [-122.384801, 37.780979], [-122.384826, 37.781099], [-122.38493, 37.781093], [-122.384932, 37.780971], [-122.384958, 37.781091], [-122.385062, 37.781085], [-122.385064, 37.780964], [-122.385089, 37.781084], [-122.385195, 37.781078], [-122.385197, 37.780956], [-122.385222, 37.781076], [-122.385327, 37.78107], [-122.385329, 37.780949], [-122.385355, 37.781069], [-122.385463, 37.781062], [-122.385465, 37.780941], [-122.38549, 37.781061], [-122.385596, 37.781055], [-122.385599, 37.780933], [-122.385624, 37.781053], [-122.385729, 37.781047], [-122.385732, 37.780925], [-122.385757, 37.781046], [-122.385854, 37.78104], [-122.385856, 37.780918], [-122.385881, 37.781039], [-122.385994, 37.781032], [-122.385996, 37.78091], [-122.386021, 37.781031], [-122.386122, 37.781025], [-122.386124, 37.780903], [-122.386149, 37.781023], [-122.386256, 37.781017], [-122.386258, 37.780895], [-122.386284, 37.781016], [-122.386386, 37.78101], [-122.386388, 37.780888], [-122.386414, 37.781008], [-122.386518, 37.781002], [-122.38652, 37.78088], [-122.386545, 37.781001], [-122.386651, 37.780994], [-122.386654, 37.780873], [-122.386679, 37.780993], [-122.386787, 37.780987], [-122.386789, 37.780865], [-122.386814, 37.780985], [-122.386912, 37.78098], [-122.386914, 37.780858], [-122.386939, 37.780978], [-122.387044, 37.780972], [-122.387046, 37.78085], [-122.387071, 37.78097], [-122.38718, 37.780964], [-122.387183, 37.780842], [-122.387208, 37.780963], [-122.387312, 37.780957], [-122.387314, 37.780835], [-122.387339, 37.780955], [-122.387441, 37.780949], [-122.387444, 37.780828], [-122.387469, 37.780948], [-122.387582, 37.780945], [-122.387534, 37.78049], [-122.387442, 37.780491], [-122.387425, 37.7805]]]]
    },
    "properties": {
      "neighbourhood": "South of Market",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.424183, 37.742262], [-122.423941, 37.739909], [-122.424756, 37.738101], [-122.426541, 37.736362], [-122.429507, 37.734518], [-122.431956, 37.733452], [-122.432493, 37.733201], [-122.43841, 37.734339], [-122.439249, 37.734818], [-122.439862, 37.734872], [-122.439685, 37.735686], [-122.439727, 37.737272], [-122.439945, 37.737706], [-122.440164, 37.738195], [-122.439896, 37.738473], [-122.439628, 37.738751], [-122.439557, 37.738698], [-122.438656, 37.738494], [-122.43755, 37.738348], [-122.43693, 37.738358], [-122.436462, 37.738913], [-122.436003, 37.739796], [-122.435548, 37.740843], [-122.435632, 37.741443], [-122.435527, 37.74146], [-122.433299, 37.74181], [-122.432889, 37.741926], [-122.432333, 37.741771], [-122.4313, 37.741788], [-122.429924, 37.741865], [-122.425454, 37.742212], [-122.424183, 37.742262]]]]
    },
    "properties": {
      "neighbourhood": "Glen Park",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.379963, 37.752061], [-122.382792, 37.751774], [-122.382547, 37.750581], [-122.40136, 37.749424], [-122.403576, 37.749388], [-122.403019, 37.751107], [-122.402891, 37.754529], [-122.403271, 37.756746], [-122.403943, 37.757761], [-122.405147, 37.758511], [-122.406249, 37.759519], [-122.406285, 37.760887], [-122.405465, 37.762525], [-122.404982, 37.76467], [-122.405014, 37.765952], [-122.384858, 37.767119], [-122.384847, 37.767013], [-122.382855, 37.767139], [-122.382801, 37.766784], [-122.385861, 37.766599], [-122.385895, 37.766523], [-122.385924, 37.766412], [-122.385934, 37.766361], [-122.385915, 37.766285], [-122.385992, 37.76617], [-122.386292, 37.76569], [-122.386373, 37.765598], [-122.38652, 37.765412], [-122.386542, 37.765286], [-122.38647, 37.765278], [-122.386436, 37.765059], [-122.386447, 37.764929], [-122.386484, 37.764908], [-122.386501, 37.764815], [-122.386491, 37.764617], [-122.386448, 37.764613], [-122.386451, 37.7644], [-122.386482, 37.764399], [-122.386482, 37.764367], [-122.386604, 37.764322], [-122.38659, 37.764257], [-122.386569, 37.764249], [-122.386558, 37.764236], [-122.386555, 37.764219], [-122.386721, 37.7641], [-122.386736, 37.764018], [-122.386727, 37.764003], [-122.38671, 37.763989], [-122.386688, 37.763979], [-122.386666, 37.763976], [-122.386644, 37.763974], [-122.386625, 37.763965], [-122.386609, 37.763948], [-122.386601, 37.763929], [-122.386601, 37.763913], [-122.386606, 37.763898], [-122.386739, 37.763809], [-122.386835, 37.763736], [-122.386855, 37.763718], [-122.38687, 37.763707], [-122.386888, 37.763694], [-122.386909, 37.763681], [-122.386933, 37.763669], [-122.386961, 37.763657], [-122.386991, 37.763646], [-122.387014, 37.763639], [-122.387034, 37.763635], [-122.38706, 37.76363], [-122.387272, 37.763605], [-122.387241, 37.76351], [-122.386905, 37.76355], [-122.386894, 37.763479], [-122.386775, 37.763415], [-122.386725, 37.763471], [-122.38663, 37.763443], [-122.386635, 37.763427], [-122.386503, 37.763388], [-122.386597, 37.763185], [-122.386314, 37.763102], [-122.386214, 37.763316], [-122.38551, 37.76333], [-122.385503, 37.763234], [-122.385279, 37.76324], [-122.385288, 37.76337], [-122.385182, 37.763373], [-122.385104, 37.76232], [-122.384681, 37.762111], [-122.384292, 37.762135], [-122.384462, 37.764047], [-122.384304, 37.764057], [-122.384132, 37.762257], [-122.383427, 37.762301], [-122.383451, 37.762466], [-122.383631, 37.762457], [-122.383669, 37.762553], [-122.383744, 37.762544], [-122.383905, 37.764144], [-122.383833, 37.764148], [-122.38381, 37.764236], [-122.383582, 37.764254], [-122.383539, 37.764164], [-122.383463, 37.764168], [-122.38346, 37.764131], [-122.383299, 37.76414], [-122.383109, 37.762321], [-122.38229, 37.762372], [-122.382514, 37.764606], [-122.382344, 37.764612], [-122.382122, 37.762382], [-122.381748, 37.762405], [-122.381695, 37.764738], [-122.381632, 37.764741], [-122.381631, 37.764801], [-122.381492, 37.764806], [-122.38145, 37.764935], [-122.381173, 37.764933], [-122.381124, 37.764799], [-122.380984, 37.764799], [-122.381029, 37.762224], [-122.383307, 37.762082], [-122.382177, 37.760882], [-122.382144, 37.760889], [-122.382114, 37.760888], [-122.38209, 37.760881], [-122.382071, 37.760872], [-122.382052, 37.760856], [-122.382028, 37.76083], [-122.382013, 37.76081], [-122.382003, 37.760794], [-122.381995, 37.760779], [-122.381988, 37.760762], [-122.381984, 37.760746], [-122.381981, 37.76073], [-122.38198, 37.760712], [-122.381981, 37.760691], [-122.381985, 37.76067], [-122.381992, 37.760649], [-122.381696, 37.760647], [-122.381838, 37.762119], [-122.381336, 37.762148], [-122.381148, 37.760158], [-122.380611, 37.760188], [-122.380913, 37.763336], [-122.380702, 37.763342], [-122.3804, 37.7602], [-122.379507, 37.76025], [-122.379808, 37.763457], [-122.379779, 37.763485], [-122.379566, 37.763494], [-122.379533, 37.763466], [-122.379202, 37.759938], [-122.381256, 37.759668], [-122.381257, 37.759583], [-122.381469, 37.759573], [-122.381447, 37.759305], [-122.381389, 37.759311], [-122.381304, 37.759309], [-122.381202, 37.758322], [-122.3812, 37.758303], [-122.381198, 37.75828], [-122.381197, 37.75826], [-122.381198, 37.758237], [-122.381199, 37.75822], [-122.381202, 37.758201], [-122.381208, 37.758172], [-122.381212, 37.758153], [-122.381218, 37.758135], [-122.381227, 37.758112], [-122.381233, 37.758096], [-122.381241, 37.75808], [-122.381249, 37.758065], [-122.381263, 37.758047], [-122.381277, 37.758029], [-122.38129, 37.758011], [-122.381303, 37.757993], [-122.381315, 37.757974], [-122.381327, 37.757955], [-122.381339, 37.757936], [-122.38135, 37.757917], [-122.38136, 37.757898], [-122.381371, 37.757878], [-122.381381, 37.757859], [-122.38139, 37.757838], [-122.381399, 37.757819], [-122.381408, 37.757799], [-122.381416, 37.757779], [-122.381424, 37.757758], [-122.381431, 37.757738], [-122.381438, 37.757718], [-122.381444, 37.757697], [-122.38145, 37.757677], [-122.381455, 37.757656], [-122.38146, 37.757635], [-122.381465, 37.757615], [-122.381469, 37.757594], [-122.381472, 37.757573], [-122.381476, 37.757552], [-122.381478, 37.757531], [-122.381481, 37.757509], [-122.381428, 37.757519], [-122.381406, 37.757343], [-122.381469, 37.7573], [-122.381447, 37.757115], [-122.381324, 37.757117], [-122.381324, 37.757089], [-122.381364, 37.757079], [-122.381322, 37.756555], [-122.381325, 37.756533], [-122.381333, 37.756513], [-122.381343, 37.756497], [-122.381357, 37.756483], [-122.381372, 37.756472], [-122.381393, 37.756462], [-122.381392, 37.756405], [-122.381369, 37.756401], [-122.381344, 37.756394], [-122.38132, 37.756383], [-122.381299, 37.756368], [-122.381284, 37.756354], [-122.381272, 37.756338], [-122.381263, 37.75632], [-122.381258, 37.756301], [-122.381256, 37.756285], [-122.381238, 37.755877], [-122.381227, 37.755859], [-122.381209, 37.755848], [-122.381189, 37.755843], [-122.381023, 37.755831], [-122.381004, 37.755799], [-122.38094, 37.7558], [-122.380939, 37.755753], [-122.381032, 37.755743], [-122.38101, 37.75573], [-122.380988, 37.755718], [-122.380966, 37.755704], [-122.380945, 37.755691], [-122.380924, 37.755678], [-122.380903, 37.755664], [-122.380882, 37.75565], [-122.380862, 37.755635], [-122.380842, 37.75562], [-122.380823, 37.755605], [-122.380803, 37.75559], [-122.380784, 37.755574], [-122.380753, 37.755542], [-122.380744, 37.755523], [-122.380738, 37.755506], [-122.380732, 37.755489], [-122.380728, 37.755472], [-122.380724, 37.755452], [-122.380721, 37.755431], [-122.380719, 37.755414], [-122.380719, 37.755397], [-122.38072, 37.755376], [-122.380722, 37.755352], [-122.380726, 37.755331], [-122.380731, 37.755311], [-122.380739, 37.755287], [-122.380748, 37.755264], [-122.380759, 37.755242], [-122.380776, 37.75522], [-122.380798, 37.755203], [-122.380815, 37.755192], [-122.380838, 37.755181], [-122.380864, 37.755171], [-122.380894, 37.755164], [-122.380925, 37.75516], [-122.380947, 37.755159], [-122.380973, 37.755157], [-122.381013, 37.755152], [-122.381047, 37.755147], [-122.381072, 37.755142], [-122.381095, 37.755136], [-122.381125, 37.755128], [-122.381149, 37.75512], [-122.38117, 37.755113], [-122.381191, 37.755105], [-122.381214, 37.755096], [-122.381247, 37.755104], [-122.381254, 37.75508], [-122.381285, 37.755074], [-122.381317, 37.75507], [-122.381345, 37.755068], [-122.381374, 37.755069], [-122.381394, 37.75507], [-122.381417, 37.755073], [-122.38144, 37.755077], [-122.381462, 37.755083], [-122.381489, 37.755091], [-122.381517, 37.755103], [-122.381548, 37.755119], [-122.381571, 37.75513], [-122.381596, 37.75514], [-122.381626, 37.755148], [-122.381652, 37.755153], [-122.381677, 37.755156], [-122.381707, 37.755156], [-122.382834, 37.755036], [-122.383675, 37.754969], [-122.383694, 37.754962], [-122.383717, 37.754954], [-122.383744, 37.754947], [-122.383771, 37.754942], [-122.383793, 37.754939], [-122.383815, 37.754937], [-122.383846, 37.754937], [-122.383877, 37.754938], [-122.383897, 37.75494], [-122.384072, 37.754951], [-122.384101, 37.754914], [-122.384077, 37.754659], [-122.384, 37.754618], [-122.383899, 37.754647], [-122.383798, 37.754675], [-122.383696, 37.754701], [-122.383562, 37.754733], [-122.383525, 37.754737], [-122.383493, 37.754739], [-122.383461, 37.75474], [-122.383437, 37.75474], [-122.383416, 37.754739], [-122.383386, 37.754737], [-122.383355, 37.754734], [-122.383323, 37.754729], [-122.383292, 37.754723], [-122.383269, 37.754717], [-122.383249, 37.754712], [-122.383229, 37.754706], [-122.38321, 37.754699], [-122.383188, 37.754691], [-122.383162, 37.754681], [-122.383143, 37.754672], [-122.383125, 37.754663], [-122.383108, 37.754654], [-122.38309, 37.754644], [-122.383073, 37.754634], [-122.383057, 37.754623], [-122.383041, 37.754612], [-122.383023, 37.754597], [-122.382993, 37.754566], [-122.382971, 37.75454], [-122.38295, 37.754514], [-122.382929, 37.754488], [-122.382909, 37.754461], [-122.38289, 37.754434], [-122.382871, 37.754407], [-122.382852, 37.754379], [-122.382834, 37.754351], [-122.382817, 37.754323], [-122.382795, 37.754283], [-122.382787, 37.754266], [-122.382783, 37.754248], [-122.382782, 37.754227], [-122.382785, 37.754204], [-122.382792, 37.754184], [-122.382804, 37.754163], [-122.382822, 37.754141], [-122.38284, 37.754126], [-122.382865, 37.754112], [-122.382891, 37.754101], [-122.382897, 37.754067], [-122.382891, 37.754036], [-122.382886, 37.754005], [-122.382881, 37.753975], [-122.382877, 37.753944], [-122.382873, 37.753913], [-122.382871, 37.753882], [-122.382868, 37.753851], [-122.382867, 37.75382], [-122.382866, 37.753789], [-122.382866, 37.753758], [-122.382867, 37.753727], [-122.382869, 37.753669], [-122.382866, 37.753646], [-122.38286, 37.753616], [-122.382852, 37.753591], [-122.382843, 37.753571], [-122.382833, 37.753551], [-122.382824, 37.753534], [-122.382811, 37.753515], [-122.382797, 37.753497], [-122.382783, 37.753482], [-122.382767, 37.753466], [-122.382746, 37.753447], [-122.382727, 37.753433], [-122.382702, 37.753416], [-122.382679, 37.753402], [-122.382656, 37.753391], [-122.382636, 37.753382], [-122.382615, 37.753374], [-122.382591, 37.753365], [-122.382565, 37.753358], [-122.38253, 37.75335], [-122.382502, 37.753346], [-122.382479, 37.753343], [-122.382447, 37.753341], [-122.382408, 37.753341], [-122.382379, 37.753343], [-122.382355, 37.753346], [-122.382334, 37.753347], [-122.382305, 37.753349], [-122.382276, 37.75335], [-122.382247, 37.75335], [-122.382218, 37.753349], [-122.382189, 37.753348], [-122.38216, 37.753346], [-122.382131, 37.753343], [-122.38211, 37.75334], [-122.382089, 37.753336], [-122.382067, 37.753333], [-122.382046, 37.753329], [-122.382025, 37.753324], [-122.382004, 37.753319], [-122.381977, 37.753312], [-122.38195, 37.753303], [-122.381923, 37.753295], [-122.381897, 37.753285], [-122.381871, 37.753275], [-122.381845, 37.753264], [-122.38182, 37.753252], [-122.381796, 37.753239], [-122.381772, 37.753226], [-122.381749, 37.753212], [-122.381726, 37.753198], [-122.381697, 37.753178], [-122.381676, 37.753162], [-122.381656, 37.753146], [-122.381641, 37.753133], [-122.381627, 37.75312], [-122.381613, 37.753107], [-122.381597, 37.753094], [-122.38158, 37.753076], [-122.381569, 37.753061], [-122.381551, 37.753041], [-122.381534, 37.753026], [-122.381515, 37.753011], [-122.381495, 37.752997], [-122.381475, 37.752984], [-122.381456, 37.752974], [-122.381434, 37.752963], [-122.381407, 37.752952], [-122.381383, 37.752943], [-122.381362, 37.752937], [-122.381337, 37.752931], [-122.381311, 37.752926], [-122.381285, 37.752922], [-122.381259, 37.75292], [-122.381233, 37.752918], [-122.381203, 37.752918], [-122.381176, 37.75292], [-122.381154, 37.752922], [-122.381126, 37.752926], [-122.38109, 37.752934], [-122.381068, 37.752939], [-122.381045, 37.752943], [-122.381022, 37.752947], [-122.380999, 37.75295], [-122.380976, 37.752952], [-122.380953, 37.752954], [-122.38093, 37.752955], [-122.380907, 37.752955], [-122.380884, 37.752955], [-122.380861, 37.752954], [-122.380837, 37.752952], [-122.380806, 37.752949], [-122.38078, 37.752946], [-122.380757, 37.752942], [-122.380735, 37.752938], [-122.380712, 37.752933], [-122.38069, 37.752927], [-122.380668, 37.752921], [-122.380648, 37.752917], [-122.380629, 37.752914], [-122.380609, 37.752911], [-122.380589, 37.752908], [-122.380569, 37.752906], [-122.380548, 37.752904], [-122.380528, 37.752902], [-122.380508, 37.752901], [-122.380488, 37.752901], [-122.380461, 37.752901], [-122.380434, 37.752901], [-122.380238, 37.75291], [-122.380028, 37.752922], [-122.37999, 37.752921], [-122.379956, 37.752915], [-122.379928, 37.752907], [-122.379905, 37.752899], [-122.379881, 37.752886], [-122.379863, 37.752869], [-122.379852, 37.752846], [-122.379852, 37.752824], [-122.379861, 37.752805], [-122.37989, 37.752786], [-122.379911, 37.752778], [-122.379932, 37.75277], [-122.379954, 37.752763], [-122.379988, 37.752752], [-122.380009, 37.752739], [-122.380022, 37.752721], [-122.380025, 37.752704], [-122.380007, 37.752458], [-122.379963, 37.752061]], [[-122.383377, 37.762304], [-122.383271, 37.76231], [-122.383299, 37.762578], [-122.383384, 37.762562], [-122.383403, 37.762483], [-122.383377, 37.762304]]]]
    },
    "properties": {
      "neighbourhood": "Potrero Hill",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.446438, 37.761036], [-122.446408, 37.761074], [-122.446779, 37.761848], [-122.446499, 37.761853], [-122.4463, 37.762302], [-122.445808, 37.76231], [-122.445396, 37.762652], [-122.444572, 37.76339], [-122.444316, 37.764342], [-122.444105, 37.764346], [-122.443975, 37.764738], [-122.444121, 37.764959], [-122.443361, 37.765418], [-122.442742, 37.76593], [-122.441967, 37.765831], [-122.441763, 37.766113], [-122.44066, 37.766912], [-122.440051, 37.767814], [-122.438733, 37.76845], [-122.438395, 37.768957], [-122.437345, 37.769086], [-122.436851, 37.768982], [-122.435964, 37.769038], [-122.432081, 37.769284], [-122.426761, 37.769577], [-122.425578, 37.756617], [-122.432366, 37.756271], [-122.437801, 37.755908], [-122.43779, 37.755471], [-122.438892, 37.755452], [-122.438988, 37.756491], [-122.440501, 37.756356], [-122.441045, 37.756229], [-122.44161, 37.756612], [-122.442163, 37.756657], [-122.442586, 37.757033], [-122.443085, 37.757682], [-122.443578, 37.758057], [-122.444206, 37.758374], [-122.444548, 37.758259], [-122.444894, 37.758308], [-122.446079, 37.758836], [-122.446494, 37.758884], [-122.446309, 37.759708], [-122.446403, 37.760691], [-122.446412, 37.761019], [-122.446438, 37.761036]]]]
    },
    "properties": {
      "neighbourhood": "Castro/Upper Market",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.46142, 37.751562], [-122.460354, 37.751864], [-122.458881, 37.751944], [-122.458103, 37.751734], [-122.45683, 37.751421], [-122.456206, 37.75171], [-122.456079, 37.752214], [-122.45596, 37.753053], [-122.455485, 37.753674], [-122.455223, 37.754403], [-122.454902, 37.755524], [-122.454087, 37.756597], [-122.454105, 37.757266], [-122.453416, 37.757779], [-122.452724, 37.758181], [-122.451399, 37.758537], [-122.451436, 37.758735], [-122.449722, 37.7589], [-122.448252, 37.759091], [-122.447487, 37.759383], [-122.447215, 37.759722], [-122.446946, 37.760172], [-122.446816, 37.760565], [-122.446438, 37.761036], [-122.446412, 37.761019], [-122.446403, 37.760691], [-122.446309, 37.759708], [-122.446494, 37.758884], [-122.446079, 37.758836], [-122.444894, 37.758308], [-122.444548, 37.758259], [-122.444206, 37.758374], [-122.443578, 37.758057], [-122.443085, 37.757682], [-122.442586, 37.757033], [-122.442163, 37.756657], [-122.44161, 37.756612], [-122.441045, 37.756229], [-122.440979, 37.756184], [-122.441171, 37.755634], [-122.441699, 37.75475], [-122.442368, 37.753973], [-122.442753, 37.752872], [-122.443185, 37.75095], [-122.443621, 37.749191], [-122.444221, 37.748415], [-122.444138, 37.74787], [-122.444122, 37.747268], [-122.444668, 37.74704], [-122.444771, 37.746921], [-122.444804, 37.746983], [-122.447754, 37.746497], [-122.450699, 37.745791], [-122.451701, 37.745454], [-122.451866, 37.745608], [-122.452418, 37.745653], [-122.453797, 37.745685], [-122.454774, 37.746161], [-122.4563, 37.746519], [-122.457963, 37.746875], [-122.458648, 37.746699], [-122.459077, 37.747294], [-122.458745, 37.747792], [-122.458754, 37.74812], [-122.459744, 37.749088], [-122.460664, 37.750003], [-122.460814, 37.750439], [-122.461391, 37.751414], [-122.46142, 37.751562]]]]
    },
    "properties": {
      "neighbourhood": "Twin Peaks",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.428255, 37.731785], [-122.428147, 37.731889], [-122.429988, 37.732287], [-122.432247, 37.73225], [-122.433848, 37.731711], [-122.435572, 37.731768], [-122.432493, 37.733201], [-122.431956, 37.733452], [-122.429507, 37.734518], [-122.426541, 37.736362], [-122.424756, 37.738101], [-122.423941, 37.739909], [-122.424183, 37.742262], [-122.424756, 37.747849], [-122.423181, 37.747959], [-122.421568, 37.74807], [-122.420171, 37.748179], [-122.418126, 37.748212], [-122.415005, 37.748263], [-122.411344, 37.748237], [-122.407579, 37.748383], [-122.405767, 37.749097], [-122.404159, 37.749379], [-122.403576, 37.749388], [-122.404915, 37.745263], [-122.405848, 37.74388], [-122.407311, 37.742146], [-122.407709, 37.740857], [-122.408001, 37.739656], [-122.408073, 37.738287], [-122.407472, 37.735817], [-122.406703, 37.735178], [-122.408728, 37.734429], [-122.411818, 37.733182], [-122.413629, 37.732468], [-122.415017, 37.732018], [-122.419108, 37.732037], [-122.420931, 37.731751], [-122.422969, 37.731461], [-122.425231, 37.73151], [-122.427174, 37.731734], [-122.428255, 37.731785]]]]
    },
    "properties": {
      "neighbourhood": "Bernal Heights",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.408767, 37.790163], [-122.408797, 37.790161], [-122.408805, 37.790184], [-122.409062, 37.791429], [-122.410257, 37.7974], [-122.408153, 37.797667], [-122.40671, 37.79785], [-122.405445, 37.798012], [-122.405319, 37.797246], [-122.405195, 37.796514], [-122.40504, 37.79574], [-122.404041, 37.790763], [-122.406205, 37.790471], [-122.40628, 37.790461], [-122.406364, 37.79045], [-122.406565, 37.790418], [-122.407156, 37.790357], [-122.408069, 37.790247], [-122.408429, 37.790204], [-122.408743, 37.790165], [-122.408767, 37.790163]]]]
    },
    "properties": {
      "neighbourhood": "Chinatown",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.410635, 37.809724], [-122.410898, 37.810188], [-122.410976, 37.81016], [-122.410909, 37.810028], [-122.410991, 37.810143], [-122.411042, 37.810124], [-122.410985, 37.81], [-122.411067, 37.810115], [-122.411115, 37.810098], [-122.411058, 37.809974], [-122.41114, 37.810089], [-122.411192, 37.81007], [-122.411135, 37.809946], [-122.411217, 37.810061], [-122.41126, 37.810046], [-122.411203, 37.809921], [-122.411285, 37.810036], [-122.411335, 37.810018], [-122.411278, 37.809894], [-122.41136, 37.810009], [-122.411403, 37.809994], [-122.411346, 37.80987], [-122.411428, 37.809985], [-122.411474, 37.809968], [-122.411417, 37.809844], [-122.411499, 37.809959], [-122.41155, 37.809941], [-122.411493, 37.809817], [-122.411575, 37.809932], [-122.411621, 37.809915], [-122.411564, 37.809791], [-122.411646, 37.809906], [-122.411693, 37.809889], [-122.411636, 37.809765], [-122.411719, 37.80988], [-122.411761, 37.809865], [-122.411704, 37.809741], [-122.411873, 37.81003], [-122.411776, 37.80989], [-122.411722, 37.809909], [-122.411794, 37.810058], [-122.411697, 37.809918], [-122.411647, 37.809936], [-122.411719, 37.810085], [-122.411622, 37.809946], [-122.411566, 37.809966], [-122.411637, 37.810115], [-122.41154, 37.809975], [-122.411488, 37.809994], [-122.411559, 37.810143], [-122.411463, 37.810003], [-122.411412, 37.810022], [-122.411483, 37.81017], [-122.411386, 37.810031], [-122.41133, 37.810051], [-122.411401, 37.8102], [-122.411305, 37.81006], [-122.411251, 37.81008], [-122.411322, 37.810228], [-122.411226, 37.810089], [-122.411178, 37.810106], [-122.41125, 37.810255], [-122.411153, 37.810115], [-122.411106, 37.810132], [-122.411177, 37.810281], [-122.41108, 37.810141], [-122.41102, 37.810163], [-122.411091, 37.810312], [-122.410997, 37.810175], [-122.410906, 37.810203], [-122.411219, 37.810756], [-122.411323, 37.81094], [-122.411245, 37.811117], [-122.41095, 37.811221], [-122.410929, 37.811279], [-122.410682, 37.811367], [-122.410614, 37.811353], [-122.410417, 37.811418], [-122.410149, 37.811506], [-122.408512, 37.811284], [-122.407585, 37.808796], [-122.408535, 37.811269], [-122.410153, 37.811487], [-122.410406, 37.811399], [-122.410398, 37.811385], [-122.410199, 37.811328], [-122.410034, 37.811397], [-122.410029, 37.811424], [-122.408569, 37.811218], [-122.408613, 37.811066], [-122.408597, 37.811198], [-122.408646, 37.811205], [-122.408681, 37.811076], [-122.408701, 37.811079], [-122.408677, 37.811209], [-122.408729, 37.811217], [-122.408763, 37.811088], [-122.408783, 37.81109], [-122.408759, 37.811221], [-122.408809, 37.811228], [-122.408843, 37.811099], [-122.408863, 37.811102], [-122.408839, 37.811232], [-122.408887, 37.811239], [-122.408921, 37.81111], [-122.408941, 37.811113], [-122.408917, 37.811243], [-122.408971, 37.811251], [-122.409005, 37.811122], [-122.409025, 37.811125], [-122.409002, 37.811255], [-122.409048, 37.811262], [-122.409083, 37.811133], [-122.409103, 37.811136], [-122.409079, 37.811266], [-122.409132, 37.811273], [-122.409166, 37.811144], [-122.409186, 37.811147], [-122.409162, 37.811278], [-122.409217, 37.811285], [-122.409251, 37.811157], [-122.409271, 37.811159], [-122.409248, 37.81129], [-122.409286, 37.811295], [-122.40932, 37.811166], [-122.40934, 37.811169], [-122.409316, 37.811299], [-122.409371, 37.811307], [-122.409405, 37.811178], [-122.409425, 37.811181], [-122.409402, 37.811311], [-122.409447, 37.811318], [-122.409481, 37.811189], [-122.409501, 37.811192], [-122.409477, 37.811322], [-122.409533, 37.81133], [-122.409567, 37.811201], [-122.409588, 37.811204], [-122.409564, 37.811334], [-122.409613, 37.811341], [-122.409647, 37.811212], [-122.409667, 37.811215], [-122.409643, 37.811346], [-122.409694, 37.811353], [-122.409729, 37.811224], [-122.409749, 37.811227], [-122.409725, 37.811357], [-122.409773, 37.811364], [-122.409807, 37.811235], [-122.409827, 37.811238], [-122.409803, 37.811368], [-122.409855, 37.811375], [-122.40989, 37.811247], [-122.40991, 37.811249], [-122.409886, 37.81138], [-122.40994, 37.811387], [-122.409982, 37.811259], [-122.410045, 37.811353], [-122.410082, 37.811342], [-122.41004, 37.811242], [-122.41006, 37.811237], [-122.410112, 37.811346], [-122.410186, 37.811316], [-122.410002, 37.811], [-122.410015, 37.810934], [-122.410036, 37.810916], [-122.410047, 37.810862], [-122.410057, 37.810818], [-122.410043, 37.810795], [-122.410054, 37.810739], [-122.410078, 37.810724], [-122.410095, 37.810623], [-122.410082, 37.810597], [-122.410092, 37.810546], [-122.410117, 37.810527], [-122.410136, 37.810423], [-122.41012, 37.810401], [-122.410131, 37.810357], [-122.410155, 37.810331], [-122.410176, 37.810233], [-122.410158, 37.81021], [-122.410179, 37.810102], [-122.410077, 37.80992], [-122.410053, 37.809917], [-122.410035, 37.809923], [-122.410019, 37.809913], [-122.409992, 37.809909], [-122.409973, 37.809915], [-122.409957, 37.809904], [-122.409933, 37.809901], [-122.409915, 37.809907], [-122.409899, 37.809897], [-122.409868, 37.809893], [-122.40985, 37.809899], [-122.409834, 37.809888], [-122.409809, 37.809885], [-122.40979, 37.809891], [-122.409774, 37.80988], [-122.409749, 37.809877], [-122.40973, 37.809883], [-122.409715, 37.809873], [-122.409685, 37.809869], [-122.409667, 37.809875], [-122.409651, 37.809864], [-122.409623, 37.80986], [-122.409605, 37.809866], [-122.409589, 37.809856], [-122.409564, 37.809853], [-122.409545, 37.809858], [-122.40953, 37.809848], [-122.409501, 37.809844], [-122.409483, 37.80985], [-122.409467, 37.80984], [-122.409439, 37.809836], [-122.409421, 37.809842], [-122.409405, 37.809832], [-122.409375, 37.809828], [-122.409356, 37.809834], [-122.40934, 37.809823], [-122.409316, 37.80982], [-122.409298, 37.809826], [-122.409282, 37.809815], [-122.409251, 37.809811], [-122.409233, 37.809817], [-122.409217, 37.809807], [-122.409195, 37.809804], [-122.409177, 37.80981], [-122.409161, 37.809799], [-122.40913, 37.809795], [-122.409112, 37.809801], [-122.409096, 37.809791], [-122.409073, 37.809788], [-122.409055, 37.809794], [-122.409039, 37.809783], [-122.409014, 37.80978], [-122.408995, 37.809786], [-122.40898, 37.809776], [-122.408951, 37.809772], [-122.408933, 37.809778], [-122.408917, 37.809767], [-122.408884, 37.809763], [-122.408866, 37.809769], [-122.40885, 37.809758], [-122.408824, 37.809755], [-122.408805, 37.809761], [-122.40879, 37.80975], [-122.40876, 37.809746], [-122.408741, 37.809752], [-122.408725, 37.809742], [-122.4087, 37.809739], [-122.408681, 37.809745], [-122.408666, 37.809734], [-122.408639, 37.809731], [-122.40862, 37.809736], [-122.408605, 37.809726], [-122.40858, 37.809723], [-122.408562, 37.809729], [-122.408546, 37.809718], [-122.408515, 37.809714], [-122.408496, 37.80972], [-122.408481, 37.80971], [-122.408454, 37.809706], [-122.408436, 37.809712], [-122.40842, 37.809702], [-122.408397, 37.809699], [-122.408379, 37.809705], [-122.408363, 37.809694], [-122.408331, 37.80969], [-122.408312, 37.809696], [-122.408297, 37.809685], [-122.408261, 37.809685], [-122.408237, 37.809791], [-122.408217, 37.809788], [-122.408256, 37.809563], [-122.408276, 37.809566], [-122.408265, 37.80966], [-122.408287, 37.809667], [-122.408306, 37.809662], [-122.408321, 37.809672], [-122.408343, 37.809675], [-122.408361, 37.809669], [-122.408386, 37.80968], [-122.408413, 37.809676], [-122.408429, 37.809686], [-122.408451, 37.809689], [-122.40847, 37.809683], [-122.408494, 37.809695], [-122.408522, 37.80969], [-122.408538, 37.809701], [-122.408558, 37.809703], [-122.408577, 37.809697], [-122.408592, 37.809708], [-122.408615, 37.809711], [-122.408633, 37.809705], [-122.408656, 37.809716], [-122.408682, 37.809711], [-122.408697, 37.809722], [-122.408723, 37.809725], [-122.408742, 37.809719], [-122.408757, 37.809729], [-122.408777, 37.809732], [-122.408795, 37.809726], [-122.408811, 37.809737], [-122.408846, 37.809736], [-122.408874, 37.809645], [-122.40887, 37.80974], [-122.408892, 37.809747], [-122.40891, 37.809741], [-122.408926, 37.809752], [-122.408947, 37.809754], [-122.408965, 37.809749], [-122.408981, 37.809759], [-122.409002, 37.809762], [-122.409021, 37.809756], [-122.409044, 37.809767], [-122.409071, 37.809763], [-122.409087, 37.809773], [-122.409107, 37.809776], [-122.409126, 37.80977], [-122.409141, 37.80978], [-122.409162, 37.809783], [-122.40918, 37.809777], [-122.409205, 37.809789], [-122.409233, 37.809784], [-122.409249, 37.809794], [-122.409269, 37.809797], [-122.409288, 37.809791], [-122.409303, 37.809801], [-122.409325, 37.809804], [-122.409344, 37.809799], [-122.409369, 37.80981], [-122.409397, 37.809806], [-122.409413, 37.809816], [-122.409432, 37.809819], [-122.409451, 37.809813], [-122.409466, 37.809823], [-122.409489, 37.809826], [-122.409507, 37.80982], [-122.409523, 37.80983], [-122.409544, 37.809833], [-122.409563, 37.809827], [-122.409578, 37.809838], [-122.409599, 37.809841], [-122.409618, 37.809835], [-122.409641, 37.809846], [-122.409668, 37.809841], [-122.409683, 37.809852], [-122.40971, 37.809855], [-122.409728, 37.809849], [-122.409744, 37.80986], [-122.409764, 37.809862], [-122.409782, 37.809856], [-122.409806, 37.809868], [-122.409833, 37.809863], [-122.409848, 37.809873], [-122.409878, 37.809873], [-122.409903, 37.809781], [-122.409902, 37.809838], [-122.409928, 37.809869], [-122.410058, 37.809886], [-122.409785, 37.809405], [-122.409759, 37.809359], [-122.409646, 37.809089], [-122.409583, 37.809065], [-122.409522, 37.80906], [-122.409492, 37.809167], [-122.4095, 37.809075], [-122.409477, 37.809068], [-122.409459, 37.809074], [-122.409443, 37.809063], [-122.409422, 37.809061], [-122.409404, 37.809066], [-122.409388, 37.809056], [-122.409369, 37.809046], [-122.409397, 37.809039], [-122.409429, 37.808946], [-122.409422, 37.809012], [-122.409466, 37.809036], [-122.409563, 37.809047], [-122.40955, 37.809026], [-122.40955, 37.808997], [-122.409387, 37.80872], [-122.409343, 37.808707], [-122.409309, 37.808695], [-122.409263, 37.80877], [-122.409244, 37.808762], [-122.409287, 37.808681], [-122.409258, 37.808674], [-122.409212, 37.808749], [-122.409193, 37.808741], [-122.409232, 37.808668], [-122.409219, 37.808653], [-122.409189, 37.808648], [-122.409161, 37.808635], [-122.409137, 37.808633], [-122.409111, 37.808621], [-122.409087, 37.808618], [-122.409059, 37.808605], [-122.409035, 37.808603], [-122.409008, 37.80859], [-122.408984, 37.808587], [-122.408953, 37.808574], [-122.408929, 37.808571], [-122.408891, 37.808555], [-122.408867, 37.808553], [-122.40883, 37.808542], [-122.408772, 37.808649], [-122.408753, 37.808644], [-122.408801, 37.808533], [-122.408763, 37.808522], [-122.408704, 37.80863], [-122.408685, 37.808624], [-122.408734, 37.808513], [-122.408692, 37.808501], [-122.408633, 37.808609], [-122.408614, 37.808604], [-122.408663, 37.808492], [-122.408625, 37.808481], [-122.408565, 37.80859], [-122.408546, 37.808584], [-122.408595, 37.808472], [-122.408557, 37.808461], [-122.408495, 37.808576], [-122.408475, 37.80857], [-122.408528, 37.808452], [-122.408481, 37.808438], [-122.408419, 37.808554], [-122.408399, 37.808548], [-122.408452, 37.80843], [-122.408409, 37.808417], [-122.408346, 37.808533], [-122.408326, 37.808527], [-122.408379, 37.808408], [-122.408334, 37.808395], [-122.408271, 37.808511], [-122.408252, 37.808506], [-122.408325, 37.808356], [-122.408307, 37.808307], [-122.408234, 37.808277], [-122.408191, 37.80829], [-122.408103, 37.808474], [-122.40807, 37.808466], [-122.408166, 37.808253], [-122.408046, 37.808199], [-122.408025, 37.808206], [-122.407919, 37.808427], [-122.407887, 37.808418], [-122.407994, 37.808182], [-122.407919, 37.808151], [-122.407807, 37.808398], [-122.407787, 37.808393], [-122.407869, 37.808202], [-122.40791, 37.808111], [-122.407859, 37.80809], [-122.40783, 37.8081], [-122.407869, 37.808202], [-122.40766, 37.808254], [-122.407706, 37.808376], [-122.407614, 37.808397], [-122.407507, 37.808115], [-122.407548, 37.808106], [-122.407537, 37.808072], [-122.407463, 37.808043], [-122.407446, 37.808007], [-122.407487, 37.80793], [-122.407432, 37.807904], [-122.407355, 37.808049], [-122.406644, 37.807818], [-122.406816, 37.809995], [-122.406787, 37.810017], [-122.406179, 37.810069], [-122.406138, 37.810043], [-122.406122, 37.81003], [-122.405904, 37.80716], [-122.405322, 37.806867], [-122.404399, 37.808855], [-122.404383, 37.808867], [-122.404357, 37.808873], [-122.404317, 37.808819], [-122.403925, 37.808755], [-122.40391, 37.808741], [-122.403907, 37.808724], [-122.404717, 37.806971], [-122.403956, 37.806579], [-122.402764, 37.808012], [-122.402745, 37.808021], [-122.402717, 37.808022], [-122.402347, 37.807827], [-122.40234, 37.807804], [-122.402344, 37.807786], [-122.403422, 37.806471], [-122.402804, 37.806023], [-122.400939, 37.807639], [-122.400916, 37.807639], [-122.400399, 37.807262], [-122.400964, 37.803564], [-122.400843, 37.803429], [-122.40048, 37.803466], [-122.398541, 37.804605], [-122.398518, 37.804602], [-122.398559, 37.804526], [-122.398224, 37.804272], [-122.398228, 37.804254], [-122.399972, 37.803225], [-122.399602, 37.802808], [-122.39782, 37.803812], [-122.397797, 37.803811], [-122.397513, 37.803487], [-122.397516, 37.80347], [-122.399616, 37.802282], [-122.399724, 37.802176], [-122.399402, 37.801825], [-122.399377, 37.801828], [-122.399345, 37.801832], [-122.39932, 37.801837], [-122.399297, 37.801842], [-122.399267, 37.801849], [-122.399242, 37.801856], [-122.39922, 37.801863], [-122.399199, 37.80187], [-122.399178, 37.801878], [-122.399157, 37.801887], [-122.397111, 37.803023], [-122.397088, 37.803022], [-122.396144, 37.801956], [-122.396146, 37.80194], [-122.396156, 37.80192], [-122.398384, 37.800673], [-122.398279, 37.800555], [-122.397989, 37.80023], [-122.395759, 37.801475], [-122.395739, 37.801473], [-122.395441, 37.801159], [-122.395446, 37.80114], [-122.397528, 37.799968], [-122.397545, 37.799956], [-122.397561, 37.799942], [-122.397576, 37.799928], [-122.397598, 37.799905], [-122.397616, 37.799883], [-122.397627, 37.799867], [-122.397637, 37.79985], [-122.397582, 37.799774], [-122.397382, 37.799549], [-122.397363, 37.79956], [-122.397257, 37.799442], [-122.396973, 37.79961], [-122.396897, 37.799633], [-122.396944, 37.799579], [-122.397251, 37.799401], [-122.397223, 37.799369], [-122.398275, 37.798886], [-122.399679, 37.798808], [-122.40311, 37.798306], [-122.405445, 37.798012], [-122.40671, 37.79785], [-122.408255, 37.798892], [-122.416774, 37.804944], [-122.419633, 37.806794], [-122.420614, 37.806666], [-122.420952, 37.808967], [-122.420911, 37.808797], [-122.420858, 37.808796], [-122.420717, 37.8089], [-122.42076, 37.809085], [-122.420694, 37.80908], [-122.420677, 37.809022], [-122.420416, 37.809021], [-122.420361, 37.809004], [-122.420385, 37.808934], [-122.420668, 37.808958], [-122.420635, 37.808756], [-122.420541, 37.808769], [-122.420462, 37.808303], [-122.419104, 37.808468], [-122.419122, 37.808545], [-122.418981, 37.808562], [-122.418966, 37.808484], [-122.417886, 37.808615], [-122.417923, 37.808825], [-122.417844, 37.80883], [-122.417811, 37.808647], [-122.417726, 37.808646], [-122.417731, 37.808593], [-122.417625, 37.808592], [-122.417602, 37.808579], [-122.417489, 37.808584], [-122.417485, 37.808421], [-122.417587, 37.808408], [-122.417577, 37.808385], [-122.417669, 37.808376], [-122.417654, 37.808292], [-122.417376, 37.808325], [-122.417345, 37.808141], [-122.416346, 37.80826], [-122.416355, 37.808329], [-122.416305, 37.808335], [-122.416339, 37.808476], [-122.417185, 37.808497], [-122.417182, 37.808533], [-122.416327, 37.808506], [-122.416282, 37.808488], [-122.41615, 37.808503], [-122.416144, 37.80854], [-122.416207, 37.808544], [-122.416187, 37.808854], [-122.417428, 37.808927], [-122.417413, 37.809166], [-122.419291, 37.810403], [-122.419315, 37.810381], [-122.419834, 37.810735], [-122.419808, 37.810754], [-122.420595, 37.811267], [-122.420353, 37.81151], [-122.420002, 37.811281], [-122.419846, 37.81132], [-122.419952, 37.811563], [-122.419916, 37.811574], [-122.419724, 37.811135], [-122.419215, 37.810894], [-122.419186, 37.810925], [-122.419098, 37.810915], [-122.418988, 37.810835], [-122.418936, 37.810883], [-122.419125, 37.811023], [-122.419049, 37.811094], [-122.419466, 37.811382], [-122.419351, 37.811487], [-122.418846, 37.811473], [-122.416831, 37.810133], [-122.415352, 37.809161], [-122.4152, 37.809167], [-122.4152, 37.809195], [-122.415152, 37.809231], [-122.415172, 37.809244], [-122.415195, 37.809228], [-122.415413, 37.809363], [-122.41537, 37.809407], [-122.415149, 37.80926], [-122.415135, 37.809243], [-122.41504, 37.809186], [-122.414889, 37.809241], [-122.414973, 37.809299], [-122.414994, 37.809318], [-122.415007, 37.809304], [-122.415222, 37.809438], [-122.41518, 37.809481], [-122.414964, 37.809348], [-122.414981, 37.809331], [-122.414956, 37.809318], [-122.414846, 37.809257], [-122.41478, 37.809281], [-122.414775, 37.809372], [-122.415341, 37.809755], [-122.415289, 37.809838], [-122.414563, 37.809564], [-122.414024, 37.809471], [-122.41342, 37.809236], [-122.413374, 37.809318], [-122.413396, 37.809338], [-122.413411, 37.809351], [-122.413426, 37.809363], [-122.413441, 37.809375], [-122.413457, 37.809387], [-122.413472, 37.809399], [-122.413488, 37.809411], [-122.413505, 37.809422], [-122.413521, 37.809433], [-122.413538, 37.809444], [-122.413555, 37.809455], [-122.413572, 37.809466], [-122.41359, 37.809476], [-122.413607, 37.809486], [-122.413625, 37.809495], [-122.414282, 37.809946], [-122.414201, 37.810022], [-122.414027, 37.810139], [-122.41378, 37.809907], [-122.413857, 37.809846], [-122.412617, 37.809079], [-122.412498, 37.809066], [-122.412398, 37.809137], [-122.412389, 37.809159], [-122.41244, 37.809213], [-122.412629, 37.809393], [-122.412575, 37.809427], [-122.412396, 37.809241], [-122.412413, 37.809225], [-122.412351, 37.809179], [-122.412316, 37.809176], [-122.412099, 37.809297], [-122.412088, 37.809321], [-122.412138, 37.809376], [-122.412315, 37.809562], [-122.412253, 37.809597], [-122.412094, 37.809404], [-122.412111, 37.809388], [-122.41205, 37.809342], [-122.412014, 37.809338], [-122.411895, 37.809389], [-122.412862, 37.810522], [-122.412718, 37.810599], [-122.412705, 37.810584], [-122.41151, 37.811238], [-122.411489, 37.811219], [-122.412687, 37.810562], [-122.411453, 37.809105], [-122.411424, 37.809119], [-122.411249, 37.80892], [-122.411091, 37.808903], [-122.411283, 37.809135], [-122.411256, 37.809149], [-122.411029, 37.808897], [-122.410954, 37.808886], [-122.410766, 37.808851], [-122.410737, 37.808846], [-122.410731, 37.808873], [-122.410649, 37.808862], [-122.410652, 37.808835], [-122.410546, 37.808819], [-122.410442, 37.809325], [-122.410408, 37.80929], [-122.410402, 37.809312], [-122.410635, 37.809724]]], [[[-122.41897, 37.809397], [-122.418931, 37.809449], [-122.417897, 37.809029], [-122.41794, 37.80894], [-122.417947, 37.80887], [-122.417987, 37.808869], [-122.417987, 37.808838], [-122.418011, 37.808841], [-122.418895, 37.808836], [-122.418894, 37.80876], [-122.418932, 37.808758], [-122.418935, 37.808881], [-122.419948, 37.808902], [-122.419938, 37.809126], [-122.419083, 37.809091], [-122.419077, 37.809157], [-122.418887, 37.809084], [-122.418359, 37.809069], [-122.418314, 37.809145], [-122.41897, 37.809397]]], [[[-122.409932, 37.810869], [-122.409881, 37.810862], [-122.409841, 37.810978], [-122.409856, 37.810846], [-122.4098, 37.810839], [-122.40976, 37.810967], [-122.409773, 37.810835], [-122.409719, 37.810828], [-122.409677, 37.810955], [-122.409692, 37.810824], [-122.40964, 37.810817], [-122.4096, 37.810945], [-122.409613, 37.810813], [-122.409558, 37.810805], [-122.409519, 37.810934], [-122.40953, 37.810802], [-122.409476, 37.810794], [-122.409436, 37.810922], [-122.409448, 37.81079], [-122.409394, 37.810783], [-122.409352, 37.81091], [-122.409367, 37.810779], [-122.409313, 37.810772], [-122.409271, 37.810899], [-122.409286, 37.810768], [-122.409229, 37.81076], [-122.409186, 37.810888], [-122.409201, 37.810756], [-122.409147, 37.810749], [-122.409105, 37.810876], [-122.40912, 37.810745], [-122.409068, 37.810738], [-122.409026, 37.810865], [-122.409041, 37.810734], [-122.408988, 37.810727], [-122.408946, 37.810855], [-122.408961, 37.810723], [-122.408904, 37.810715], [-122.408862, 37.810843], [-122.408877, 37.810711], [-122.408821, 37.810704], [-122.408779, 37.810831], [-122.408794, 37.8107], [-122.408737, 37.810692], [-122.408695, 37.81082], [-122.40871, 37.810688], [-122.408657, 37.810681], [-122.408614, 37.810809], [-122.408629, 37.810677], [-122.408556, 37.810663], [-122.408597, 37.810513], [-122.408582, 37.810646], [-122.408635, 37.810653], [-122.408677, 37.810524], [-122.408662, 37.810657], [-122.408715, 37.810664], [-122.408757, 37.810535], [-122.408742, 37.810668], [-122.408799, 37.810676], [-122.408842, 37.810547], [-122.408827, 37.810679], [-122.408882, 37.810687], [-122.408925, 37.810559], [-122.40891, 37.810691], [-122.408966, 37.810699], [-122.409009, 37.81057], [-122.408994, 37.810702], [-122.409046, 37.81071], [-122.409088, 37.810581], [-122.409073, 37.810713], [-122.409126, 37.810721], [-122.409168, 37.810592], [-122.409153, 37.810724], [-122.409207, 37.810732], [-122.409249, 37.810603], [-122.409234, 37.810736], [-122.409291, 37.810743], [-122.409333, 37.810615], [-122.409318, 37.810747], [-122.409372, 37.810755], [-122.409414, 37.810626], [-122.409399, 37.810758], [-122.409453, 37.810766], [-122.409493, 37.810637], [-122.409481, 37.81077], [-122.409535, 37.810777], [-122.409574, 37.810648], [-122.409562, 37.810781], [-122.409618, 37.810788], [-122.409658, 37.81066], [-122.409645, 37.810792], [-122.409697, 37.810799], [-122.409739, 37.810671], [-122.409724, 37.810803], [-122.409778, 37.810811], [-122.409819, 37.810682], [-122.409806, 37.810814], [-122.409861, 37.810822], [-122.409904, 37.810694], [-122.409891, 37.810814], [-122.409943, 37.810818], [-122.409982, 37.810705], [-122.409959, 37.81085], [-122.40992, 37.810989], [-122.409932, 37.810869]]], [[[-122.410066, 37.810369], [-122.410043, 37.81036], [-122.410024, 37.810366], [-122.410009, 37.810355], [-122.409965, 37.810352], [-122.409931, 37.810454], [-122.409944, 37.810336], [-122.409902, 37.810326], [-122.409883, 37.810332], [-122.409868, 37.810321], [-122.409831, 37.810317], [-122.409812, 37.810322], [-122.409797, 37.810312], [-122.409756, 37.810306], [-122.409737, 37.810312], [-122.409722, 37.810302], [-122.409687, 37.810297], [-122.409668, 37.810303], [-122.409652, 37.810293], [-122.409619, 37.810288], [-122.409601, 37.810294], [-122.409585, 37.810284], [-122.409541, 37.810278], [-122.409523, 37.810283], [-122.409507, 37.810273], [-122.409468, 37.810268], [-122.409449, 37.810274], [-122.409434, 37.810263], [-122.409395, 37.810258], [-122.409376, 37.810264], [-122.409361, 37.810253], [-122.409313, 37.810251], [-122.409292, 37.810368], [-122.409289, 37.810248], [-122.40925, 37.810237], [-122.409231, 37.810244], [-122.409216, 37.810234], [-122.409177, 37.810229], [-122.409158, 37.810234], [-122.409143, 37.810224], [-122.409106, 37.810219], [-122.409088, 37.810225], [-122.409072, 37.810215], [-122.409029, 37.810209], [-122.40901, 37.810215], [-122.408995, 37.810204], [-122.40896, 37.8102], [-122.408942, 37.810205], [-122.408926, 37.810195], [-122.408886, 37.81019], [-122.408867, 37.810195], [-122.408852, 37.810185], [-122.408816, 37.81018], [-122.408798, 37.810186], [-122.408782, 37.810176], [-122.408738, 37.81017], [-122.408719, 37.810175], [-122.408704, 37.810165], [-122.408665, 37.81016], [-122.408646, 37.810166], [-122.408631, 37.810155], [-122.408595, 37.810151], [-122.408577, 37.810156], [-122.408561, 37.810146], [-122.408522, 37.810141], [-122.408503, 37.810146], [-122.408487, 37.810136], [-122.40845, 37.810131], [-122.408431, 37.810137], [-122.408415, 37.810126], [-122.408357, 37.810119], [-122.408382, 37.809996], [-122.408379, 37.810101], [-122.408409, 37.810109], [-122.408427, 37.810103], [-122.408443, 37.810113], [-122.408468, 37.810117], [-122.408487, 37.810111], [-122.408503, 37.810121], [-122.40853, 37.810125], [-122.408549, 37.810119], [-122.408564, 37.81013], [-122.408587, 37.810133], [-122.408606, 37.810127], [-122.408621, 37.810137], [-122.40865, 37.810141], [-122.408669, 37.810135], [-122.408684, 37.810146], [-122.408707, 37.810149], [-122.408726, 37.810143], [-122.408741, 37.810153], [-122.408768, 37.810157], [-122.408786, 37.810151], [-122.408802, 37.810162], [-122.408826, 37.810165], [-122.408844, 37.810159], [-122.40886, 37.810169], [-122.408887, 37.810173], [-122.408906, 37.810167], [-122.408921, 37.810178], [-122.408942, 37.81018], [-122.408961, 37.810175], [-122.408976, 37.810185], [-122.409008, 37.810189], [-122.409027, 37.810183], [-122.409042, 37.810194], [-122.409068, 37.810197], [-122.409086, 37.810191], [-122.409102, 37.810202], [-122.409125, 37.810205], [-122.409144, 37.810199], [-122.40916, 37.81021], [-122.409188, 37.810213], [-122.409207, 37.810208], [-122.409222, 37.810218], [-122.409246, 37.810221], [-122.409265, 37.810215], [-122.40928, 37.810226], [-122.409304, 37.810229], [-122.409323, 37.810223], [-122.409338, 37.810234], [-122.409365, 37.810237], [-122.409383, 37.810231], [-122.409399, 37.810242], [-122.409425, 37.810245], [-122.409444, 37.810239], [-122.409459, 37.81025], [-122.409482, 37.810253], [-122.409501, 37.810247], [-122.409516, 37.810257], [-122.409544, 37.810261], [-122.409563, 37.810255], [-122.409578, 37.810266], [-122.409605, 37.810269], [-122.409624, 37.810264], [-122.409639, 37.810274], [-122.409664, 37.810277], [-122.409683, 37.810272], [-122.409698, 37.810282], [-122.409725, 37.810286], [-122.409744, 37.81028], [-122.409759, 37.81029], [-122.409783, 37.810293], [-122.409802, 37.810288], [-122.409817, 37.810298], [-122.409839, 37.810301], [-122.409858, 37.810295], [-122.409874, 37.810306], [-122.409901, 37.810309], [-122.40992, 37.810303], [-122.409935, 37.810314], [-122.409969, 37.810314], [-122.410003, 37.810214], [-122.409995, 37.810307], [-122.410017, 37.810315], [-122.410044, 37.810313], [-122.410077, 37.810316], [-122.410108, 37.810228], [-122.410089, 37.810351], [-122.410056, 37.810471], [-122.410066, 37.810369]]], [[[-122.412116, 37.810455], [-122.412091, 37.810456], [-122.411309, 37.810722], [-122.411223, 37.810556], [-122.411318, 37.810696], [-122.411369, 37.810678], [-122.411299, 37.810529], [-122.411397, 37.810673], [-122.411526, 37.810627], [-122.411454, 37.810474], [-122.411549, 37.810614], [-122.411679, 37.810568], [-122.411609, 37.810419], [-122.411705, 37.810559], [-122.411743, 37.810545], [-122.411694, 37.810389], [-122.411765, 37.810542], [-122.411839, 37.810516], [-122.411919, 37.810483], [-122.411849, 37.810334], [-122.411944, 37.810472], [-122.412075, 37.810427], [-122.412004, 37.810278], [-122.412116, 37.810455]]], [[[-122.410742, 37.809699], [-122.410635, 37.809724], [-122.410709, 37.809689], [-122.41064, 37.809552], [-122.410722, 37.809669], [-122.410759, 37.809656], [-122.41072, 37.809561], [-122.410784, 37.809647], [-122.410825, 37.809632], [-122.410786, 37.809536], [-122.410851, 37.809623], [-122.410891, 37.809609], [-122.410851, 37.809511], [-122.410916, 37.8096], [-122.410954, 37.809587], [-122.410913, 37.809488], [-122.410979, 37.809578], [-122.411028, 37.809561], [-122.410986, 37.80946], [-122.411053, 37.809552], [-122.411092, 37.809538], [-122.411049, 37.809436], [-122.411187, 37.809678], [-122.411109, 37.809567], [-122.411053, 37.809587], [-122.411106, 37.809708], [-122.411028, 37.809596], [-122.41098, 37.809613], [-122.411034, 37.809735], [-122.410954, 37.809623], [-122.41091, 37.809639], [-122.410964, 37.809761], [-122.410885, 37.809648], [-122.410837, 37.809665], [-122.410892, 37.809788], [-122.410812, 37.809674], [-122.410767, 37.80969], [-122.410822, 37.809814], [-122.410742, 37.809699]]], [[[-122.409785, 37.809405], [-122.409693, 37.809452], [-122.409749, 37.809483], [-122.409727, 37.809495], [-122.409711, 37.809485], [-122.40969, 37.809482], [-122.409672, 37.809488], [-122.409649, 37.809477], [-122.409625, 37.809482], [-122.409609, 37.809471], [-122.409583, 37.809461], [-122.409628, 37.80946], [-122.409651, 37.809361], [-122.409646, 37.809433], [-122.409673, 37.809444], [-122.409785, 37.809405]]], [[[-122.407918, 37.80885], [-122.407868, 37.80885], [-122.407899, 37.808739], [-122.407891, 37.808835], [-122.407918, 37.80885]]], [[[-122.408082, 37.809258], [-122.40804, 37.809259], [-122.408065, 37.809147], [-122.408062, 37.809244], [-122.408082, 37.809258]]], [[[-122.409583, 37.809461], [-122.409566, 37.809474], [-122.409542, 37.809462], [-122.409516, 37.809467], [-122.4095, 37.809456], [-122.409473, 37.809446], [-122.409523, 37.809446], [-122.409583, 37.809461]]], [[[-122.409773, 37.809497], [-122.409749, 37.809483], [-122.409795, 37.809482], [-122.40977, 37.80959], [-122.409773, 37.809497]]], [[[-122.408679, 37.809338], [-122.408657, 37.809342], [-122.408639, 37.809348], [-122.408615, 37.809333], [-122.408636, 37.809326], [-122.408655, 37.80932], [-122.408679, 37.809338]]], [[[-122.409112, 37.809397], [-122.409087, 37.809401], [-122.409069, 37.809406], [-122.409047, 37.809388], [-122.40907, 37.809384], [-122.409089, 37.809379], [-122.409112, 37.809397]]], [[[-122.408349, 37.809294], [-122.408328, 37.809298], [-122.408309, 37.809304], [-122.408286, 37.809285], [-122.408308, 37.809281], [-122.408326, 37.809275], [-122.408349, 37.809294]]], [[[-122.408286, 37.809285], [-122.408257, 37.809297], [-122.408241, 37.809286], [-122.408225, 37.809277], [-122.408254, 37.809274], [-122.408272, 37.809268], [-122.408286, 37.809285]]], [[[-122.408777, 37.808966], [-122.408747, 37.808977], [-122.408725, 37.808959], [-122.408754, 37.808948], [-122.408777, 37.808966]]], [[[-122.408123, 37.808878], [-122.408094, 37.808889], [-122.408071, 37.808871], [-122.4081, 37.808859], [-122.408123, 37.808878]]], [[[-122.408725, 37.808959], [-122.408696, 37.808971], [-122.408674, 37.808952], [-122.408702, 37.808941], [-122.408725, 37.808959]]], [[[-122.408513, 37.809316], [-122.408494, 37.80932], [-122.408475, 37.809326], [-122.408465, 37.80931], [-122.40849, 37.809298], [-122.408513, 37.809316]]], [[[-122.4088, 37.808985], [-122.408777, 37.808966], [-122.408807, 37.808955], [-122.408821, 37.808972], [-122.4088, 37.808985]]], [[[-122.408835, 37.80936], [-122.408802, 37.80937], [-122.408791, 37.809354], [-122.408815, 37.809341], [-122.408835, 37.80936]]], [[[-122.408856, 37.809378], [-122.408835, 37.80936], [-122.408867, 37.809349], [-122.408879, 37.809365], [-122.408856, 37.809378]]], [[[-122.408147, 37.808896], [-122.408123, 37.808878], [-122.408153, 37.808866], [-122.408167, 37.808883], [-122.408147, 37.808896]]], [[[-122.408478, 37.808941], [-122.408455, 37.808922], [-122.408484, 37.808911], [-122.408498, 37.808928], [-122.408478, 37.808941]]], [[[-122.408455, 37.808922], [-122.408425, 37.808934], [-122.408411, 37.808917], [-122.408432, 37.808904], [-122.408455, 37.808922]]], [[[-122.408615, 37.809333], [-122.408584, 37.809341], [-122.408573, 37.809324], [-122.408596, 37.809312], [-122.408615, 37.809333]]], [[[-122.409293, 37.809051], [-122.40927, 37.809033], [-122.409299, 37.809022], [-122.409313, 37.809039], [-122.409293, 37.809051]]], [[[-122.40927, 37.809033], [-122.409241, 37.809044], [-122.409227, 37.809027], [-122.409247, 37.809015], [-122.40927, 37.809033]]], [[[-122.409348, 37.809444], [-122.409329, 37.809426], [-122.409362, 37.809416], [-122.409372, 37.809432], [-122.409348, 37.809444]]], [[[-122.409329, 37.809426], [-122.409298, 37.809437], [-122.409287, 37.809421], [-122.409309, 37.809408], [-122.409329, 37.809426]]], [[[-122.408071, 37.808871], [-122.408042, 37.808882], [-122.408028, 37.808865], [-122.408049, 37.808852], [-122.408071, 37.808871]]], [[[-122.407983, 37.808874], [-122.407961, 37.808856], [-122.40799, 37.808844], [-122.408003, 37.808861], [-122.407983, 37.808874]]], [[[-122.407961, 37.808856], [-122.407932, 37.808867], [-122.407918, 37.80885], [-122.407939, 37.808837], [-122.407961, 37.808856]]], [[[-122.408674, 37.808952], [-122.408645, 37.808964], [-122.408632, 37.808946], [-122.408652, 37.808934], [-122.408674, 37.808952]]], [[[-122.409127, 37.809414], [-122.409112, 37.809397], [-122.409141, 37.809386], [-122.409151, 37.809402], [-122.409127, 37.809414]]], [[[-122.409433, 37.80944], [-122.409406, 37.809452], [-122.409395, 37.809435], [-122.409417, 37.809423], [-122.409433, 37.80944]]], [[[-122.408695, 37.809356], [-122.408679, 37.809338], [-122.408706, 37.809327], [-122.408718, 37.809344], [-122.408695, 37.809356]]], [[[-122.408529, 37.809333], [-122.408513, 37.809316], [-122.408539, 37.809304], [-122.408551, 37.809321], [-122.408529, 37.809333]]], [[[-122.408365, 37.809311], [-122.408349, 37.809294], [-122.408376, 37.809282], [-122.408387, 37.809299], [-122.408365, 37.809311]]], [[[-122.409047, 37.809388], [-122.40902, 37.8094], [-122.409009, 37.809383], [-122.409032, 37.809371], [-122.409047, 37.809388]]], [[[-122.408333, 37.808906], [-122.408313, 37.808919], [-122.408299, 37.808901], [-122.408319, 37.808889], [-122.408333, 37.808906]]], [[[-122.409041, 37.809002], [-122.40902, 37.809014], [-122.409006, 37.808997], [-122.409027, 37.808985], [-122.409041, 37.809002]]], [[[-122.408279, 37.808899], [-122.408259, 37.808911], [-122.408245, 37.808894], [-122.408265, 37.808882], [-122.408279, 37.808899]]], [[[-122.408878, 37.80898], [-122.408858, 37.808992], [-122.408844, 37.808975], [-122.408864, 37.808963], [-122.408878, 37.80898]]], [[[-122.409154, 37.809017], [-122.409134, 37.80903], [-122.40912, 37.809013], [-122.40914, 37.809], [-122.409154, 37.809017]]], [[[-122.408553, 37.808936], [-122.408532, 37.808948], [-122.408519, 37.808931], [-122.408539, 37.808919], [-122.408553, 37.808936]]], [[[-122.40861, 37.808943], [-122.408589, 37.808956], [-122.408575, 37.808939], [-122.408596, 37.808926], [-122.40861, 37.808943]]], [[[-122.409208, 37.809024], [-122.409187, 37.809037], [-122.409173, 37.80902], [-122.409194, 37.809007], [-122.409208, 37.809024]]], [[[-122.409369, 37.809046], [-122.409349, 37.809059], [-122.409335, 37.809042], [-122.409355, 37.809029], [-122.409369, 37.809046]]], [[[-122.408932, 37.808987], [-122.408912, 37.809], [-122.408898, 37.808983], [-122.408918, 37.80897], [-122.408932, 37.808987]]], [[[-122.408389, 37.808914], [-122.408369, 37.808926], [-122.408355, 37.808909], [-122.408376, 37.808896], [-122.408389, 37.808914]]], [[[-122.408222, 37.808891], [-122.408201, 37.808903], [-122.408188, 37.808886], [-122.408208, 37.808874], [-122.408222, 37.808891]]], [[[-122.408986, 37.808994], [-122.408965, 37.809007], [-122.408951, 37.80899], [-122.408972, 37.808977], [-122.408986, 37.808994]]], [[[-122.409097, 37.80901], [-122.409077, 37.809022], [-122.409063, 37.809005], [-122.409083, 37.808992], [-122.409097, 37.80901]]], [[[-122.40817, 37.80927], [-122.408149, 37.809282], [-122.408136, 37.809265], [-122.408157, 37.809253], [-122.40817, 37.80927]]], [[[-122.408225, 37.809277], [-122.408202, 37.809289], [-122.408191, 37.809272], [-122.408215, 37.80926], [-122.408225, 37.809277]]], [[[-122.408989, 37.80938], [-122.408967, 37.809393], [-122.408955, 37.809376], [-122.408977, 37.809363], [-122.408989, 37.80938]]], [[[-122.408771, 37.809351], [-122.40875, 37.809363], [-122.408737, 37.809346], [-122.408759, 37.809334], [-122.408771, 37.809351]]], [[[-122.408933, 37.809373], [-122.408911, 37.809385], [-122.408899, 37.809368], [-122.408921, 37.809356], [-122.408933, 37.809373]]], [[[-122.408442, 37.809306], [-122.40842, 37.809319], [-122.408408, 37.809302], [-122.408431, 37.80929], [-122.408442, 37.809306]]], [[[-122.409209, 37.80941], [-122.409185, 37.809422], [-122.409175, 37.809406], [-122.409199, 37.809393], [-122.409209, 37.80941]]], [[[-122.408094, 37.809275], [-122.408082, 37.809258], [-122.408105, 37.809246], [-122.408117, 37.809262], [-122.408094, 37.809275]]], [[[-122.409266, 37.809418], [-122.409246, 37.80943], [-122.409232, 37.809413], [-122.409252, 37.809401], [-122.409266, 37.809418]]], [[[-122.409473, 37.809446], [-122.409458, 37.809459], [-122.409433, 37.80944], [-122.409473, 37.809446]]]]
    },
    "properties": {
      "neighbourhood": "North Beach",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.447983, 37.806972], [-122.447876, 37.80633], [-122.448577, 37.806263], [-122.448332, 37.804985], [-122.448473, 37.804982], [-122.448458, 37.804425], [-122.448944, 37.804194], [-122.449287, 37.803853], [-122.44955, 37.80318], [-122.449537, 37.802678], [-122.449096, 37.801961], [-122.448242, 37.801529], [-122.447822, 37.801591], [-122.446702, 37.79474], [-122.446231, 37.791859], [-122.447656, 37.791649], [-122.454351, 37.790665], [-122.460923, 37.789385], [-122.4626, 37.789041], [-122.465955, 37.788353], [-122.465782, 37.787129], [-122.475543, 37.78691], [-122.478282, 37.786864], [-122.478735, 37.786898], [-122.48131, 37.787092], [-122.483853, 37.787607], [-122.484089, 37.78791], [-122.483662, 37.788335], [-122.483687, 37.789283], [-122.484401, 37.789717], [-122.485465, 37.790089], [-122.486226, 37.790509], [-122.486197, 37.790545], [-122.486148, 37.790606], [-122.486109, 37.790688], [-122.486035, 37.790762], [-122.48596, 37.79082], [-122.485895, 37.790894], [-122.485741, 37.791022], [-122.485583, 37.791239], [-122.485411, 37.791468], [-122.485285, 37.791713], [-122.484996, 37.791948], [-122.484753, 37.792215], [-122.484542, 37.792522], [-122.484364, 37.79274], [-122.484184, 37.793062], [-122.484073, 37.793295], [-122.483858, 37.793646], [-122.483593, 37.794035], [-122.483294, 37.794671], [-122.483518, 37.79473], [-122.483088, 37.795612], [-122.482999, 37.795903], [-122.482851, 37.796178], [-122.482765, 37.796485], [-122.482667, 37.796814], [-122.482505, 37.797149], [-122.48235, 37.797496], [-122.48218, 37.797833], [-122.482169, 37.797996], [-122.482136, 37.79813], [-122.482085, 37.798234], [-122.482122, 37.79829], [-122.482129, 37.798329], [-122.482112, 37.798372], [-122.482102, 37.798405], [-122.482088, 37.798443], [-122.482079, 37.798472], [-122.482042, 37.798509], [-122.481958, 37.798535], [-122.48187, 37.798535], [-122.481831, 37.798574], [-122.481914, 37.798729], [-122.481933, 37.798775], [-122.481895, 37.79878], [-122.481783, 37.798686], [-122.481759, 37.798795], [-122.481736, 37.798806], [-122.481729, 37.798846], [-122.481698, 37.798857], [-122.481554, 37.798748], [-122.481545, 37.798792], [-122.481675, 37.798888], [-122.481685, 37.79893], [-122.481643, 37.798933], [-122.48162, 37.798952], [-122.481602, 37.798977], [-122.481583, 37.799007], [-122.481562, 37.799036], [-122.481553, 37.799086], [-122.481537, 37.79914], [-122.481507, 37.799211], [-122.481472, 37.799267], [-122.481416, 37.799334], [-122.48138, 37.799367], [-122.481394, 37.799401], [-122.481388, 37.79945], [-122.481312, 37.799517], [-122.4812, 37.799556], [-122.481106, 37.799613], [-122.481069, 37.799704], [-122.481064, 37.799823], [-122.481041, 37.799871], [-122.480987, 37.799938], [-122.48098, 37.800014], [-122.480978, 37.800225], [-122.480974, 37.800331], [-122.48086, 37.800385], [-122.480757, 37.800443], [-122.480678, 37.800582], [-122.480655, 37.800648], [-122.480593, 37.800725], [-122.480538, 37.800815], [-122.480468, 37.80095], [-122.480375, 37.801095], [-122.480296, 37.801293], [-122.480202, 37.801417], [-122.480181, 37.801558], [-122.480072, 37.801845], [-122.480027, 37.802059], [-122.480044, 37.802235], [-122.480005, 37.802388], [-122.479967, 37.802605], [-122.479927, 37.80275], [-122.479899, 37.802898], [-122.479814, 37.803058], [-122.479734, 37.803209], [-122.479678, 37.803311], [-122.479612, 37.803428], [-122.479497, 37.803573], [-122.479357, 37.803861], [-122.479173, 37.804332], [-122.479146, 37.804483], [-122.479061, 37.804693], [-122.478953, 37.804882], [-122.478814, 37.805291], [-122.478729, 37.805493], [-122.478723, 37.805679], [-122.478697, 37.805843], [-122.478686, 37.805962], [-122.478628, 37.806008], [-122.478654, 37.80609], [-122.478632, 37.80612], [-122.47866, 37.806171], [-122.478639, 37.806277], [-122.478627, 37.806353], [-122.478624, 37.80647], [-122.478577, 37.806638], [-122.478562, 37.806787], [-122.478545, 37.80696], [-122.478527, 37.807067], [-122.478527, 37.807185], [-122.478521, 37.807253], [-122.478489, 37.807311], [-122.478484, 37.807411], [-122.478496, 37.80755], [-122.478476, 37.807833], [-122.478405, 37.808093], [-122.478061, 37.808278], [-122.477896, 37.808449], [-122.477886, 37.808531], [-122.477924, 37.808669], [-122.477956, 37.809252], [-122.477923, 37.809783], [-122.477957, 37.810111], [-122.477925, 37.810324], [-122.477976, 37.810543], [-122.477691, 37.810628], [-122.477738, 37.810943], [-122.477669, 37.81096], [-122.477314, 37.811025], [-122.476952, 37.810983], [-122.476622, 37.810877], [-122.476561, 37.810893], [-122.476466, 37.810836], [-122.476399, 37.810758], [-122.476244, 37.810424], [-122.476193, 37.810243], [-122.476155, 37.809859], [-122.476049, 37.80964], [-122.475968, 37.809575], [-122.47579, 37.809485], [-122.475541, 37.809387], [-122.474949, 37.80926], [-122.474802, 37.809179], [-122.474477, 37.809144], [-122.474059, 37.809107], [-122.473248, 37.8091], [-122.472666, 37.809034], [-122.472248, 37.80897], [-122.471807, 37.808865], [-122.471577, 37.808857], [-122.471241, 37.808797], [-122.470932, 37.808717], [-122.47066, 37.808614], [-122.470601, 37.808599], [-122.470033, 37.80943], [-122.46999, 37.809452], [-122.469923, 37.809435], [-122.469403, 37.809204], [-122.469387, 37.809167], [-122.469446, 37.809068], [-122.469513, 37.809054], [-122.470047, 37.809289], [-122.470537, 37.808583], [-122.47042, 37.808453], [-122.470228, 37.808354], [-122.470098, 37.808266], [-122.470014, 37.808202], [-122.469816, 37.808099], [-122.469586, 37.807953], [-122.469304, 37.807727], [-122.469234, 37.807569], [-122.469112, 37.807371], [-122.468869, 37.807067], [-122.46879, 37.807003], [-122.468642, 37.806925], [-122.468442, 37.806861], [-122.468303, 37.806818], [-122.468149, 37.806981], [-122.468042, 37.806913], [-122.468205, 37.806743], [-122.468155, 37.8067], [-122.467927, 37.806564], [-122.467767, 37.806455], [-122.467356, 37.806141], [-122.467204, 37.806012], [-122.466996, 37.80591], [-122.466671, 37.805803], [-122.466474, 37.805989], [-122.466058, 37.806416], [-122.465889, 37.806308], [-122.465954, 37.806241], [-122.466061, 37.806296], [-122.466124, 37.806325], [-122.466652, 37.805791], [-122.466074, 37.805582], [-122.465896, 37.805571], [-122.465649, 37.805488], [-122.465461, 37.805394], [-122.464552, 37.805114], [-122.46423, 37.805004], [-122.463987, 37.80494], [-122.463579, 37.80488], [-122.463272, 37.804888], [-122.462953, 37.804917], [-122.46243, 37.805014], [-122.462213, 37.805019], [-122.462027, 37.804955], [-122.461897, 37.80493], [-122.461602, 37.804957], [-122.461272, 37.805023], [-122.461008, 37.805087], [-122.459773, 37.805253], [-122.459578, 37.805293], [-122.45954, 37.805305], [-122.459501, 37.805317], [-122.459463, 37.805328], [-122.459424, 37.805339], [-122.459385, 37.80535], [-122.459346, 37.805359], [-122.459306, 37.805368], [-122.459267, 37.805377], [-122.459227, 37.805385], [-122.459187, 37.805393], [-122.459146, 37.8054], [-122.459106, 37.805406], [-122.459066, 37.805412], [-122.459025, 37.805417], [-122.458984, 37.805422], [-122.458944, 37.805426], [-122.458903, 37.805429], [-122.458862, 37.805433], [-122.458788, 37.805437], [-122.458736, 37.80544], [-122.458683, 37.805444], [-122.458631, 37.80545], [-122.458579, 37.805455], [-122.458527, 37.805462], [-122.458475, 37.805469], [-122.458423, 37.805477], [-122.458371, 37.805486], [-122.45832, 37.805495], [-122.458269, 37.805505], [-122.458218, 37.805516], [-122.458167, 37.805528], [-122.458117, 37.80554], [-122.458067, 37.805553], [-122.457989, 37.805574], [-122.457937, 37.805594], [-122.457883, 37.805614], [-122.45783, 37.805633], [-122.457775, 37.805651], [-122.457721, 37.805668], [-122.457666, 37.805684], [-122.457611, 37.8057], [-122.457555, 37.805715], [-122.457499, 37.805729], [-122.457443, 37.805743], [-122.457387, 37.805755], [-122.45733, 37.805767], [-122.457273, 37.805778], [-122.457187, 37.805794], [-122.457078, 37.805804], [-122.45697, 37.805815], [-122.456863, 37.805828], [-122.456755, 37.805843], [-122.456648, 37.805859], [-122.456541, 37.805877], [-122.456435, 37.805896], [-122.456329, 37.805916], [-122.456224, 37.805938], [-122.456119, 37.805962], [-122.456014, 37.805987], [-122.455911, 37.806013], [-122.455807, 37.806041], [-122.455705, 37.80607], [-122.455565, 37.806112], [-122.455307, 37.806196], [-122.454483, 37.806469], [-122.454354, 37.806478], [-122.454308, 37.806459], [-122.454294, 37.806376], [-122.454078, 37.806357], [-122.453816, 37.806293], [-122.453296, 37.806259], [-122.452782, 37.80627], [-122.452439, 37.806267], [-122.451654, 37.806353], [-122.450906, 37.806532], [-122.450459, 37.806646], [-122.449912, 37.806721], [-122.449819, 37.806724], [-122.44972, 37.806719], [-122.449631, 37.806734], [-122.449554, 37.806768], [-122.449479, 37.8068], [-122.4494, 37.806822], [-122.449304, 37.806837], [-122.449171, 37.806837], [-122.449108, 37.806831], [-122.449049, 37.80682], [-122.449012, 37.806784], [-122.448891, 37.806726], [-122.448806, 37.806712], [-122.448728, 37.806702], [-122.448566, 37.806755], [-122.448402, 37.806792], [-122.448357, 37.806802], [-122.44832, 37.806811], [-122.448293, 37.80682], [-122.448269, 37.806828], [-122.448245, 37.806836], [-122.448213, 37.806849], [-122.448188, 37.806861], [-122.448157, 37.806876], [-122.448133, 37.806889], [-122.448111, 37.806903], [-122.447983, 37.806972]]]]
    },
    "properties": {
      "neighbourhood": "Presidio",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.418609, 37.78891], [-122.421954, 37.788488], [-122.422333, 37.79035], [-122.422697, 37.792133], [-122.423435, 37.795722], [-122.410257, 37.7974], [-122.409062, 37.791429], [-122.408805, 37.790184], [-122.408797, 37.790161], [-122.408789, 37.790145], [-122.408912, 37.790132], [-122.409094, 37.790105], [-122.411745, 37.789802], [-122.418609, 37.78891]]]]
    },
    "properties": {
      "neighbourhood": "Nob Hill",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.476014, 37.748679], [-122.475881, 37.746809], [-122.481842, 37.746486], [-122.495451, 37.745922], [-122.506604, 37.745398], [-122.509404, 37.745267], [-122.509397, 37.745292], [-122.509354, 37.745698], [-122.509336, 37.745938], [-122.509426, 37.746369], [-122.509461, 37.746453], [-122.509476, 37.746496], [-122.509491, 37.746539], [-122.509505, 37.746582], [-122.509518, 37.746625], [-122.50953, 37.746669], [-122.509541, 37.746713], [-122.509551, 37.746756], [-122.50956, 37.7468], [-122.509568, 37.746844], [-122.509575, 37.746888], [-122.509581, 37.746933], [-122.509587, 37.746977], [-122.509591, 37.747021], [-122.509594, 37.747066], [-122.509596, 37.74711], [-122.509598, 37.747155], [-122.509772, 37.747496], [-122.509783, 37.747525], [-122.509789, 37.747545], [-122.509795, 37.747564], [-122.509801, 37.747584], [-122.509806, 37.747604], [-122.509811, 37.747625], [-122.509816, 37.747645], [-122.509819, 37.747665], [-122.509823, 37.747685], [-122.509826, 37.747706], [-122.509829, 37.747726], [-122.509831, 37.747746], [-122.509832, 37.747767], [-122.509834, 37.747787], [-122.509834, 37.747808], [-122.509835, 37.747828], [-122.509835, 37.747849], [-122.509834, 37.747869], [-122.509833, 37.74789], [-122.509832, 37.74791], [-122.50983, 37.747931], [-122.509827, 37.747951], [-122.509825, 37.747971], [-122.509778, 37.748298], [-122.509718, 37.748715], [-122.509712, 37.748764], [-122.509709, 37.748796], [-122.509707, 37.748828], [-122.509705, 37.74886], [-122.509704, 37.748892], [-122.509704, 37.748924], [-122.509704, 37.748956], [-122.509705, 37.748988], [-122.509707, 37.74902], [-122.50971, 37.749052], [-122.509713, 37.749084], [-122.509729, 37.749111], [-122.509729, 37.749168], [-122.509736, 37.749194], [-122.509743, 37.749221], [-122.509751, 37.749247], [-122.50976, 37.749273], [-122.509769, 37.749298], [-122.509779, 37.749324], [-122.509789, 37.74935], [-122.5098, 37.749375], [-122.509811, 37.7494], [-122.509823, 37.749425], [-122.509836, 37.74945], [-122.509849, 37.749475], [-122.509862, 37.7495], [-122.509876, 37.749524], [-122.509891, 37.749548], [-122.509906, 37.749572], [-122.509922, 37.749596], [-122.509938, 37.749619], [-122.509955, 37.749643], [-122.509972, 37.749666], [-122.50999, 37.749689], [-122.510008, 37.749711], [-122.510075, 37.749792], [-122.510113, 37.74984], [-122.51015, 37.749889], [-122.510186, 37.749938], [-122.510221, 37.749988], [-122.510255, 37.750038], [-122.510288, 37.750089], [-122.510319, 37.75014], [-122.51035, 37.750191], [-122.510379, 37.750243], [-122.510407, 37.750296], [-122.510435, 37.750349], [-122.510451, 37.750393], [-122.510464, 37.75043], [-122.510476, 37.750467], [-122.510487, 37.750504], [-122.510497, 37.750542], [-122.510506, 37.750579], [-122.510515, 37.750617], [-122.510523, 37.750655], [-122.51053, 37.750693], [-122.510536, 37.750731], [-122.510541, 37.750769], [-122.510546, 37.750807], [-122.510549, 37.750845], [-122.510552, 37.750883], [-122.510554, 37.750921], [-122.510555, 37.75096], [-122.510556, 37.750998], [-122.510555, 37.751036], [-122.510554, 37.751074], [-122.510551, 37.751113], [-122.510548, 37.751151], [-122.510544, 37.751189], [-122.510539, 37.751227], [-122.510534, 37.751248], [-122.510529, 37.751269], [-122.510523, 37.751299], [-122.510518, 37.751328], [-122.510515, 37.751358], [-122.510513, 37.751387], [-122.510512, 37.751417], [-122.510513, 37.751439], [-122.510514, 37.751461], [-122.510516, 37.751483], [-122.510518, 37.751505], [-122.510523, 37.751535], [-122.510527, 37.751557], [-122.510532, 37.751579], [-122.510538, 37.7516], [-122.510544, 37.751622], [-122.510554, 37.751651], [-122.510565, 37.751679], [-122.510577, 37.751707], [-122.51059, 37.751735], [-122.510601, 37.751755], [-122.510612, 37.751775], [-122.510629, 37.751802], [-122.510646, 37.751828], [-122.51067, 37.751855], [-122.510687, 37.751873], [-122.510698, 37.75189], [-122.510706, 37.751909], [-122.51071, 37.751935], [-122.510724, 37.751989], [-122.510731, 37.752014], [-122.510738, 37.752039], [-122.510744, 37.752065], [-122.510826, 37.752223], [-122.510879, 37.75232], [-122.510893, 37.752342], [-122.510905, 37.752356], [-122.51092, 37.752372], [-122.510938, 37.752389], [-122.51096, 37.752407], [-122.510985, 37.752435], [-122.510997, 37.752456], [-122.511004, 37.752472], [-122.511011, 37.752488], [-122.511018, 37.752507], [-122.511024, 37.752529], [-122.511029, 37.752552], [-122.511031, 37.752569], [-122.511032, 37.752585], [-122.511033, 37.752609], [-122.511031, 37.752635], [-122.51103, 37.752813], [-122.511028, 37.752907], [-122.511023, 37.753002], [-122.511017, 37.753096], [-122.511008, 37.753189], [-122.511045, 37.753427], [-122.511071, 37.753569], [-122.5111, 37.753711], [-122.51111, 37.753738], [-122.511122, 37.753764], [-122.511135, 37.75379], [-122.511168, 37.753851], [-122.511191, 37.753896], [-122.511214, 37.753941], [-122.511235, 37.753986], [-122.511255, 37.754032], [-122.511275, 37.754078], [-122.511287, 37.75413], [-122.511275, 37.754143], [-122.511263, 37.75416], [-122.511252, 37.754181], [-122.511248, 37.754201], [-122.511247, 37.75422], [-122.511251, 37.754243], [-122.511259, 37.754263], [-122.51127, 37.754281], [-122.51129, 37.754305], [-122.511301, 37.754327], [-122.511304, 37.75435], [-122.5113, 37.754376], [-122.51129, 37.754393], [-122.511271, 37.754414], [-122.511246, 37.754429], [-122.511205, 37.754494], [-122.511174, 37.754504], [-122.511189, 37.754579], [-122.511196, 37.754623], [-122.511172, 37.754668], [-122.511187, 37.754748], [-122.511164, 37.754817], [-122.511168, 37.754966], [-122.511187, 37.754986], [-122.511182, 37.755041], [-122.511153, 37.755096], [-122.511141, 37.755116], [-122.51113, 37.7552], [-122.511137, 37.755225], [-122.511152, 37.755314], [-122.511173, 37.755368], [-122.511186, 37.755408], [-122.511212, 37.755447], [-122.51122, 37.755502], [-122.511246, 37.755536], [-122.511247, 37.755571], [-122.511273, 37.755605], [-122.511268, 37.755665], [-122.511303, 37.755793], [-122.511291, 37.755813], [-122.511298, 37.755858], [-122.511331, 37.755897], [-122.511344, 37.755917], [-122.511351, 37.755971], [-122.511359, 37.756011], [-122.511372, 37.75605], [-122.51138, 37.75611], [-122.511388, 37.756174], [-122.511415, 37.756238], [-122.511442, 37.756327], [-122.511451, 37.756401], [-122.511445, 37.756431], [-122.511466, 37.756496], [-122.511475, 37.7566], [-122.51149, 37.756684], [-122.511511, 37.756768], [-122.511506, 37.756823], [-122.511508, 37.756882], [-122.511541, 37.756976], [-122.511511, 37.756996], [-122.511537, 37.757036], [-122.511551, 37.75709], [-122.511552, 37.757135], [-122.511535, 37.7572], [-122.511545, 37.757328], [-122.511565, 37.757373], [-122.511548, 37.757462], [-122.51157, 37.757566], [-122.51159, 37.757606], [-122.511636, 37.757689], [-122.511626, 37.757804], [-122.511646, 37.757853], [-122.511694, 37.75823], [-122.511744, 37.758437], [-122.511847, 37.759012], [-122.511858, 37.759137], [-122.511865, 37.759261], [-122.51187, 37.759384], [-122.511867, 37.759469], [-122.511887, 37.759537], [-122.511894, 37.759554], [-122.5119, 37.75957], [-122.511907, 37.759587], [-122.511913, 37.759604], [-122.511918, 37.759621], [-122.511924, 37.759637], [-122.511928, 37.759654], [-122.511933, 37.759671], [-122.511937, 37.759689], [-122.511941, 37.759706], [-122.511944, 37.759723], [-122.511947, 37.75974], [-122.51195, 37.759757], [-122.511952, 37.759775], [-122.511954, 37.759792], [-122.511955, 37.759809], [-122.511957, 37.759827], [-122.511957, 37.759844], [-122.511958, 37.759861], [-122.511958, 37.759879], [-122.511957, 37.759896], [-122.511956, 37.759914], [-122.511955, 37.759931], [-122.511954, 37.759948], [-122.511904, 37.760441], [-122.511896, 37.760466], [-122.51189, 37.760488], [-122.511884, 37.760509], [-122.511879, 37.760531], [-122.511874, 37.760553], [-122.51187, 37.760575], [-122.511866, 37.760596], [-122.511863, 37.760618], [-122.51186, 37.76064], [-122.511857, 37.760663], [-122.511856, 37.760685], [-122.511854, 37.760707], [-122.511853, 37.760729], [-122.511853, 37.760751], [-122.511853, 37.760773], [-122.511853, 37.760795], [-122.511854, 37.760817], [-122.511856, 37.760839], [-122.511858, 37.760861], [-122.51186, 37.760884], [-122.511863, 37.760906], [-122.511867, 37.760928], [-122.51187, 37.760949], [-122.511875, 37.760971], [-122.51188, 37.760993], [-122.511885, 37.761015], [-122.511891, 37.761036], [-122.511897, 37.761058], [-122.511904, 37.761079], [-122.511911, 37.761101], [-122.511919, 37.761122], [-122.511927, 37.761143], [-122.511936, 37.761164], [-122.511945, 37.761185], [-122.511954, 37.761206], [-122.511965, 37.761227], [-122.511975, 37.761247], [-122.511986, 37.761268], [-122.511997, 37.761288], [-122.512026, 37.761324], [-122.512065, 37.761354], [-122.512085, 37.76142], [-122.512126, 37.761532], [-122.512146, 37.761569], [-122.512203, 37.761605], [-122.512204, 37.761627], [-122.512287, 37.761909], [-122.512329, 37.762102], [-122.51236, 37.762176], [-122.5124, 37.76228], [-122.512413, 37.762407], [-122.512472, 37.762518], [-122.51242, 37.762682], [-122.512395, 37.762787], [-122.512326, 37.763005], [-122.512318, 37.763065], [-122.512275, 37.763199], [-122.512347, 37.763452], [-122.51237, 37.763586], [-122.512457, 37.763703], [-122.512503, 37.763858], [-122.510197, 37.764018], [-122.494901, 37.764668], [-122.477711, 37.765404], [-122.477206, 37.765426], [-122.476014, 37.748679]]]]
    },
    "properties": {
      "neighbourhood": "Outer Sunset",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.422213, 37.772905], [-122.423269, 37.772074], [-122.423302, 37.772048], [-122.426329, 37.769601], [-122.426761, 37.769577], [-122.432081, 37.769284], [-122.435964, 37.769038], [-122.436094, 37.769608], [-122.436599, 37.770102], [-122.436887, 37.770376], [-122.437287, 37.772265], [-122.438251, 37.776878], [-122.440491, 37.776562], [-122.446457, 37.775805], [-122.447164, 37.779185], [-122.447642, 37.781352], [-122.447519, 37.782023], [-122.447378, 37.782383], [-122.447124, 37.783033], [-122.447439, 37.784311], [-122.447676, 37.78531], [-122.447333, 37.785651], [-122.446648, 37.786331], [-122.446811, 37.787165], [-122.446825, 37.787251], [-122.445745, 37.787412], [-122.422333, 37.79035], [-122.421954, 37.788488], [-122.421008, 37.783852], [-122.421637, 37.78373], [-122.424298, 37.783408], [-122.422213, 37.772905]]]]
    },
    "properties": {
      "neighbourhood": "Western Addition",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-122.454691, 37.774696], [-122.453014, 37.766373], [-122.456858, 37.765808], [-122.458555, 37.766226], [-122.459538, 37.766209], [-122.467467, 37.765854], [-122.477206, 37.765426], [-122.477711, 37.765404], [-122.494901, 37.764668], [-122.510197, 37.764018], [-122.512503, 37.763858], [-122.512548, 37.763933], [-122.512647, 37.764118], [-122.512695, 37.764147], [-122.512734, 37.764183], [-122.512736, 37.764288], [-122.512776, 37.764362], [-122.512778, 37.764421], [-122.512752, 37.764519], [-122.512782, 37.764585], [-122.512775, 37.76466], [-122.512786, 37.764734], [-122.512762, 37.764869], [-122.512744, 37.764922], [-122.512717, 37.764967], [-122.512685, 37.765161], [-122.51267, 37.765311], [-122.512655, 37.765453], [-122.512646, 37.765475], [-122.512639, 37.765542], [-122.512632, 37.765632], [-122.512652, 37.765684], [-122.512693, 37.765802], [-122.512705, 37.765899], [-122.512725, 37.765951], [-122.5127, 37.766071], [-122.512768, 37.766137], [-122.512789, 37.766218], [-122.512783, 37.766338], [-122.512803, 37.76639], [-122.512832, 37.766441], [-122.512881, 37.766515], [-122.512889, 37.766783], [-122.512893, 37.766962], [-122.512932, 37.766999], [-122.51296, 37.767006], [-122.513017, 37.76702], [-122.513066, 37.767079], [-122.513078, 37.767198], [-122.513108, 37.767242], [-122.513081, 37.767302], [-122.513103, 37.767399], [-122.513124, 37.76751], [-122.513079, 37.767556], [-122.513071, 37.767608], [-122.513091, 37.767652], [-122.513076, 37.767794], [-122.513059, 37.767854], [-122.513041, 37.767892], [-122.513051, 37.767936], [-122.513081, 37.767981], [-122.513073, 37.768048], [-122.513084, 37.768801], [-122.513105, 37.768883], [-122.513112, 37.769136], [-122.513087, 37.769233], [-122.513126, 37.769292], [-122.513091, 37.769397], [-122.513086, 37.769554], [-122.513146, 37.77003], [-122.513104, 37.770232], [-122.513083, 37.770501], [-122.513147, 37.770761], [-122.513128, 37.771214], [-122.505415, 37.771628], [-122.488715, 37.772357], [-122.479593, 37.772789], [-122.477816, 37.77287], [-122.46991, 37.77323], [-122.465068, 37.773423], [-122.454706, 37.774766], [-122.454691, 37.774696]]]]
    },
    "properties": {
      "neighbourhood": "Golden Gate Park",
      "neighbourhood_group": null
    }
  }]
};
},{}],"cxS8":[function(require,module,exports) {
module.exports = {
  "type": "FeatureCollection",
  "features": [{
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.079209, 29.92804], [-90.080013, 29.927571], [-90.080828, 29.927136], [-90.081591, 29.926679], [-90.082478, 29.926211], [-90.082985, 29.925926], [-90.083049, 29.92589], [-90.083763, 29.925491], [-90.084624, 29.925], [-90.085361, 29.924591], [-90.086171, 29.924129], [-90.086368, 29.924031], [-90.087238, 29.923629], [-90.087727, 29.92343], [-90.088196, 29.924388], [-90.088611, 29.925336], [-90.088937, 29.926108], [-90.089551, 29.927345], [-90.090182, 29.928632], [-90.090092, 29.92867], [-90.089258, 29.929035], [-90.088886, 29.929225], [-90.088085, 29.929658], [-90.087277, 29.930126], [-90.086569, 29.9305], [-90.085899, 29.930891], [-90.085034, 29.931367], [-90.084222, 29.931808], [-90.083389, 29.932295], [-90.082648, 29.932757], [-90.081824, 29.931558], [-90.080989, 29.93042], [-90.080456, 29.929742], [-90.079842, 29.928904], [-90.079209, 29.92804]]]]
    },
    "properties": {
      "neighbourhood": "Garden District",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-89.939486, 30.060051], [-89.940079, 30.059649], [-89.941223, 30.058918], [-89.943042, 30.057765], [-89.943246, 30.057662], [-89.943373, 30.057595], [-89.943725, 30.05738], [-89.944543, 30.056846], [-89.946027, 30.055896], [-89.947525, 30.054949], [-89.948866, 30.054113], [-89.950863, 30.052834], [-89.952828, 30.051613], [-89.953696, 30.051067], [-89.954971, 30.050239], [-89.956212, 30.049455], [-89.957633, 30.048559], [-89.957807, 30.048449], [-89.958555, 30.047999], [-89.959214, 30.047574], [-89.960235, 30.046927], [-89.96112, 30.046348], [-89.961316, 30.046219], [-89.964127, 30.044474], [-89.964237, 30.044405], [-89.964956, 30.043961], [-89.965778, 30.043439], [-89.967035, 30.042612], [-89.968188, 30.041875], [-89.969383, 30.041128], [-89.970548, 30.040403], [-89.971793, 30.039618], [-89.972743, 30.039059], [-89.973462, 30.038557], [-89.973994, 30.038275], [-89.974521, 30.037988], [-89.975223, 30.037631], [-89.976106, 30.03722], [-89.976311, 30.037124], [-89.97952, 30.035824], [-89.981008, 30.035219], [-89.981177, 30.035151], [-89.981518, 30.035014], [-89.982478, 30.034586], [-89.983474, 30.034186], [-89.985377, 30.033441], [-89.987159, 30.032684], [-89.988941, 30.031951], [-89.989588, 30.031717], [-89.989984, 30.031558], [-89.993603, 30.030079], [-89.993797, 30.03], [-89.995308, 30.029402], [-89.995795, 30.029225], [-89.996071, 30.029127], [-89.996522, 30.028996], [-89.997476, 30.028699], [-89.997909, 30.028579], [-89.998086, 30.02853], [-89.99876, 30.028367], [-89.999247, 30.02826], [-90.000016, 30.028112], [-90.001313, 30.02789], [-90.002931, 30.027583], [-90.003914, 30.02742], [-90.006457, 30.026969], [-90.007421, 30.026803], [-90.007749, 30.026746], [-90.008002, 30.02671], [-90.008544, 30.026614], [-90.009191, 30.026505], [-90.009954, 30.026423], [-90.010181, 30.026437], [-90.010707, 30.026447], [-90.011321, 30.026467], [-90.011351, 30.026467], [-90.011567, 30.026478], [-90.012196, 30.02654], [-90.012599, 30.026591], [-90.013222, 30.026691], [-90.013523, 30.026751], [-90.014112, 30.026903], [-90.014805, 30.027099], [-90.015301, 30.02727], [-90.015389, 30.027286], [-90.015507, 30.027296], [-90.015598, 30.027286], [-90.015655, 30.027378], [-90.015712, 30.027426], [-90.015793, 30.027466], [-90.0159, 30.027522], [-90.016088, 30.027608], [-90.0166, 30.027842], [-90.016795, 30.027907], [-90.016925, 30.02795], [-90.017072, 30.027983], [-90.017227, 30.028014], [-90.017946, 30.028064], [-90.01842, 30.028061], [-90.019525, 30.027727], [-90.020344, 30.027489], [-90.020796, 30.02735], [-90.021389, 30.027168], [-90.022386, 30.026877], [-90.022887, 30.02673], [-90.023725, 30.026474], [-90.024514, 30.026233], [-90.024778, 30.026958], [-90.025067, 30.027764], [-90.025368, 30.028564], [-90.025652, 30.029348], [-90.025747, 30.02962], [-90.025938, 30.03019], [-90.026248, 30.030968], [-90.026336, 30.031176], [-90.026711, 30.032138], [-90.026799, 30.032365], [-90.026954, 30.032764], [-90.027131, 30.032715], [-90.027461, 30.032638], [-90.027664, 30.032603], [-90.027878, 30.032587], [-90.028179, 30.032558], [-90.028394, 30.032516], [-90.0287, 30.032428], [-90.029256, 30.032279], [-90.031576, 30.031674], [-90.032893, 30.031367], [-90.033024, 30.031349], [-90.033176, 30.031365], [-90.033508, 30.031411], [-90.033687, 30.031447], [-90.033797, 30.031433], [-90.0342, 30.031348], [-90.034374, 30.0313], [-90.034489, 30.031341], [-90.034473, 30.031436], [-90.035242, 30.03166], [-90.035248, 30.031681], [-90.035222, 30.031675], [-90.035202, 30.031669], [-90.035166, 30.031659], [-90.034901, 30.031582], [-90.034872, 30.031573], [-90.034595, 30.031495], [-90.034525, 30.031475], [-90.034477, 30.031463], [-90.034249, 30.031513], [-90.034244, 30.031583], [-90.034229, 30.031646], [-90.034159, 30.03175], [-90.034139, 30.03178], [-90.034132, 30.031796], [-90.034107, 30.031852], [-90.034094, 30.031946], [-90.034129, 30.032156], [-90.034147, 30.03251], [-90.034173, 30.03283], [-90.034176, 30.032864], [-90.034188, 30.033005], [-90.034196, 30.033104], [-90.034197, 30.033229], [-90.034196, 30.033247], [-90.034189, 30.033322], [-90.034179, 30.033349], [-90.034168, 30.033368], [-90.034129, 30.033396], [-90.031716, 30.033973], [-90.031624, 30.034014], [-90.031565, 30.034031], [-90.031495, 30.034078], [-90.031473, 30.034121], [-90.031478, 30.034359], [-90.031478, 30.034378], [-90.031502, 30.035634], [-90.031549, 30.038132], [-90.031558, 30.038622], [-90.031607, 30.041208], [-90.031592, 30.041908], [-90.03159, 30.04193], [-90.031549, 30.042209], [-90.031547, 30.042226], [-90.031457, 30.042533], [-90.031297, 30.042845], [-90.031164, 30.043063], [-90.031068, 30.043221], [-90.031049, 30.043253], [-90.03103, 30.043283], [-90.030886, 30.043466], [-90.030815, 30.043557], [-90.030781, 30.043614], [-90.030746, 30.043686], [-90.03073, 30.043766], [-90.030723, 30.04416], [-90.030732, 30.045981], [-90.030761, 30.047878], [-90.030772, 30.048595], [-90.030772, 30.048721], [-90.030768, 30.049002], [-90.030765, 30.049175], [-90.03076, 30.049526], [-90.030757, 30.049722], [-90.030789, 30.051119], [-90.030792, 30.051249], [-90.030814, 30.052386], [-90.030821, 30.052762], [-90.030819, 30.052892], [-90.030816, 30.052926], [-90.030813, 30.052942], [-90.0308, 30.052972], [-90.030792, 30.052991], [-90.030734, 30.053015], [-90.030401, 30.053007], [-90.030224, 30.053002], [-90.028383, 30.053036], [-90.028312, 30.053032], [-90.028249, 30.053009], [-90.028233, 30.052994], [-90.028213, 30.052967], [-90.028208, 30.052949], [-90.028203, 30.052923], [-90.028204, 30.052899], [-90.028205, 30.052859], [-90.028213, 30.052693], [-90.028214, 30.052657], [-90.028215, 30.052637], [-90.02822, 30.052527], [-90.028222, 30.052481], [-90.028225, 30.052415], [-90.028225, 30.052399], [-90.028184, 30.051238], [-90.028181, 30.051222], [-90.028171, 30.051161], [-90.028168, 30.051145], [-90.028143, 30.051115], [-90.028132, 30.051101], [-90.028087, 30.051082], [-90.028001, 30.051082], [-90.027216, 30.051083], [-90.026433, 30.051061], [-90.026351, 30.051044], [-90.026291, 30.051018], [-90.026243, 30.050976], [-90.026192, 30.050899], [-90.026157, 30.050807], [-90.026135, 30.050717], [-90.026105, 30.05059], [-90.02607, 30.050492], [-90.025909, 30.050258], [-90.025834, 30.050208], [-90.025789, 30.050164], [-90.025759, 30.050122], [-90.025742, 30.050079], [-90.025716, 30.050016], [-90.025695, 30.049981], [-90.025647, 30.049919], [-90.02552, 30.049795], [-90.025471, 30.049716], [-90.025431, 30.04964], [-90.02542, 30.049615], [-90.025391, 30.049544], [-90.025382, 30.049524], [-90.025361, 30.049481], [-90.025353, 30.049464], [-90.025356, 30.049444], [-90.025365, 30.049392], [-90.025398, 30.04935], [-90.025442, 30.049274], [-90.025452, 30.049257], [-90.025452, 30.049238], [-90.025453, 30.0492], [-90.025454, 30.049184], [-90.025419, 30.049154], [-90.025375, 30.049137], [-90.025355, 30.049128], [-90.025334, 30.049125], [-90.025261, 30.049112], [-90.025216, 30.049118], [-90.025127, 30.049186], [-90.025071, 30.049216], [-90.02499, 30.04924], [-90.024945, 30.04926], [-90.024839, 30.049276], [-90.024736, 30.049273], [-90.024642, 30.049254], [-90.024594, 30.049232], [-90.024551, 30.049189], [-90.024499, 30.049118], [-90.02449, 30.049104], [-90.024472, 30.049074], [-90.024437, 30.04903], [-90.024371, 30.048997], [-90.024294, 30.048985], [-90.024201, 30.048977], [-90.024143, 30.048977], [-90.024048, 30.048977], [-90.023985, 30.048904], [-90.023962, 30.048804], [-90.02396, 30.048788], [-90.023959, 30.04876], [-90.023958, 30.048723], [-90.02397, 30.048651], [-90.023973, 30.048635], [-90.023983, 30.048621], [-90.024005, 30.048592], [-90.024075, 30.048555], [-90.024141, 30.048562], [-90.024202, 30.048561], [-90.024331, 30.048542], [-90.024351, 30.048535], [-90.024437, 30.048467], [-90.024517, 30.048412], [-90.024545, 30.048337], [-90.024583, 30.048252], [-90.024647, 30.048185], [-90.024707, 30.048078], [-90.024755, 30.048006], [-90.024789, 30.047948], [-90.02479, 30.047851], [-90.024776, 30.047723], [-90.024773, 30.047708], [-90.024764, 30.047661], [-90.024754, 30.047605], [-90.02471, 30.047524], [-90.024569, 30.047393], [-90.024441, 30.047352], [-90.024322, 30.047341], [-90.024231, 30.047348], [-90.024156, 30.047391], [-90.024109, 30.047448], [-90.024055, 30.047511], [-90.024024, 30.047534], [-90.023957, 30.047531], [-90.023886, 30.047476], [-90.023873, 30.047408], [-90.023872, 30.047392], [-90.02385, 30.046858], [-90.023849, 30.046842], [-90.023842, 30.046716], [-90.02381, 30.046166], [-90.023806, 30.046105], [-90.023805, 30.046089], [-90.023778, 30.04472], [-90.023776, 30.044654], [-90.023736, 30.044487], [-90.023631, 30.044236], [-90.023523, 30.044016], [-90.023494, 30.043959], [-90.023476, 30.043932], [-90.023462, 30.043911], [-90.023322, 30.043777], [-90.022922, 30.043408], [-90.021902, 30.04256], [-90.020896, 30.041723], [-90.020336, 30.041232], [-90.020271, 30.041207], [-90.020174, 30.041213], [-90.020135, 30.041237], [-90.020108, 30.041254], [-90.019877, 30.04147], [-90.019737, 30.041601], [-90.019702, 30.041634], [-90.01961, 30.041715], [-90.01955, 30.041751], [-90.019347, 30.041815], [-90.017989, 30.04224], [-90.01698, 30.042577], [-90.016812, 30.042634], [-90.016697, 30.042706], [-90.015933, 30.043412], [-90.01584, 30.043501], [-90.015804, 30.04355], [-90.015769, 30.043619], [-90.015747, 30.043694], [-90.015715, 30.043884], [-90.015713, 30.0439], [-90.015716, 30.043993], [-90.015769, 30.044064], [-90.015976, 30.04422], [-90.015987, 30.044239], [-90.015994, 30.044265], [-90.015997, 30.044294], [-90.015968, 30.044341], [-90.015746, 30.044549], [-90.015557, 30.044727], [-90.015493, 30.044781], [-90.015476, 30.044785], [-90.015434, 30.044793], [-90.015409, 30.044794], [-90.015343, 30.044771], [-90.015318, 30.044751], [-90.015276, 30.044714], [-90.014536, 30.044071], [-90.014506, 30.044045], [-90.014459, 30.044003], [-90.014437, 30.043978], [-90.014424, 30.043963], [-90.014419, 30.043945], [-90.014408, 30.04391], [-90.014407, 30.043889], [-90.014425, 30.043854], [-90.014475, 30.04381], [-90.014575, 30.043724], [-90.015688, 30.04275], [-90.01664, 30.041887], [-90.017057, 30.041491], [-90.017132, 30.041437], [-90.017245, 30.041385], [-90.017383, 30.041344], [-90.018431, 30.041031], [-90.018752, 30.040921], [-90.018892, 30.040871], [-90.018967, 30.040828], [-90.0191, 30.040716], [-90.019312, 30.040526], [-90.019343, 30.040489], [-90.019351, 30.040464], [-90.019354, 30.040436], [-90.019353, 30.040418], [-90.019342, 30.040383], [-90.019294, 30.040331], [-90.019073, 30.040161], [-90.018323, 30.039525], [-90.018154, 30.039399], [-90.018129, 30.039384], [-90.018092, 30.039371], [-90.018055, 30.039389], [-90.018034, 30.039403], [-90.017967, 30.039457], [-90.017933, 30.039485], [-90.017867, 30.039498], [-90.017799, 30.039465], [-90.017178, 30.038923], [-90.017133, 30.038884], [-90.016681, 30.038509], [-90.016331, 30.038219], [-90.016255, 30.038158], [-90.016189, 30.038128], [-90.016136, 30.03811], [-90.0161, 30.038112], [-90.016046, 30.038114], [-90.015773, 30.038202], [-90.015613, 30.03827], [-90.01555, 30.038309], [-90.0155, 30.038361], [-90.015471, 30.038395], [-90.015466, 30.038458], [-90.015481, 30.038471], [-90.01552, 30.038503], [-90.015523, 30.038545], [-90.015384, 30.038685], [-90.014918, 30.03914], [-90.013413, 30.040488], [-90.01338, 30.040522], [-90.013328, 30.040576], [-90.01328, 30.040605], [-90.013132, 30.040647], [-90.013068, 30.040689], [-90.013027, 30.040753], [-90.013045, 30.040913], [-90.013152, 30.041166], [-90.013301, 30.041559], [-90.013344, 30.041732], [-90.013349, 30.041753], [-90.013338, 30.041774], [-90.013323, 30.041803], [-90.013275, 30.041834], [-90.013228, 30.041852], [-90.013099, 30.041889], [-90.012994, 30.041908], [-90.012934, 30.041905], [-90.012885, 30.041886], [-90.012852, 30.041859], [-90.012804, 30.041745], [-90.01214, 30.039668], [-90.012031, 30.039326], [-90.012009, 30.03923], [-90.01202, 30.039171], [-90.01207, 30.039115], [-90.012614, 30.038645], [-90.012683, 30.038545], [-90.012709, 30.038433], [-90.012705, 30.038355], [-90.012682, 30.038264], [-90.012662, 30.038223], [-90.012651, 30.038203], [-90.012615, 30.038154], [-90.012592, 30.038124], [-90.012556, 30.038103], [-90.012493, 30.038066], [-90.012454, 30.038072], [-90.012382, 30.038083], [-90.012291, 30.038096], [-90.012066, 30.038186], [-90.011758, 30.038284], [-90.011492, 30.038385], [-90.011313, 30.038468], [-90.011157, 30.038518], [-90.011042, 30.038571], [-90.010816, 30.038649], [-90.01068, 30.038698], [-90.009286, 30.039203], [-90.008347, 30.039527], [-90.008071, 30.039622], [-90.007958, 30.039696], [-90.007917, 30.039742], [-90.007884, 30.039808], [-90.007869, 30.039857], [-90.007864, 30.039876], [-90.007845, 30.039917], [-90.007837, 30.039933], [-90.007823, 30.039945], [-90.007799, 30.039967], [-90.007444, 30.040083], [-90.006977, 30.040182], [-90.006903, 30.040199], [-90.006861, 30.040181], [-90.006842, 30.040173], [-90.006816, 30.040153], [-90.006795, 30.040137], [-90.006655, 30.040154], [-90.006508, 30.040207], [-90.006238, 30.040318], [-90.0061, 30.040385], [-90.005943, 30.040471], [-90.005753, 30.040579], [-90.005647, 30.040651], [-90.005578, 30.040692], [-90.005467, 30.040717], [-90.005339, 30.040704], [-90.005197, 30.040698], [-90.004487, 30.040952], [-90.004317, 30.04104], [-90.004221, 30.041128], [-90.00418, 30.041166], [-90.004028, 30.041267], [-90.003869, 30.041333], [-90.003113, 30.041521], [-90.002518, 30.041729], [-90.001339, 30.042203], [-90.00087, 30.042417], [-90.000834, 30.042486], [-90.000826, 30.042528], [-90.000813, 30.042587], [-90.000712, 30.042691], [-90.000642, 30.042731], [-90.000462, 30.04283], [-90.00028, 30.042915], [-90.000045, 30.042935], [-89.999948, 30.042944], [-89.999195, 30.043176], [-89.998863, 30.043278], [-89.998688, 30.043332], [-89.998132, 30.04353], [-89.997734, 30.043694], [-89.996904, 30.044037], [-89.993874, 30.045343], [-89.992571, 30.045939], [-89.992506, 30.045969], [-89.99241, 30.046013], [-89.992028, 30.046185], [-89.991437, 30.04645], [-89.989081, 30.047568], [-89.989052, 30.047582], [-89.988996, 30.047609], [-89.984633, 30.049688], [-89.980761, 30.051656], [-89.979886, 30.052181], [-89.979466, 30.052385], [-89.979397, 30.052433], [-89.979343, 30.052504], [-89.97932, 30.052616], [-89.979317, 30.052631], [-89.979304, 30.052693], [-89.9793, 30.052709], [-89.979265, 30.05277], [-89.979178, 30.052818], [-89.978953, 30.052888], [-89.978773, 30.052947], [-89.978548, 30.053032], [-89.978358, 30.053156], [-89.978216, 30.053269], [-89.978146, 30.0533], [-89.978058, 30.053311], [-89.977988, 30.053305], [-89.977896, 30.053307], [-89.977757, 30.053364], [-89.977722, 30.053408], [-89.977726, 30.053488], [-89.97784, 30.053685], [-89.977862, 30.053739], [-89.977861, 30.053774], [-89.977861, 30.053792], [-89.97786, 30.053809], [-89.977852, 30.053832], [-89.97784, 30.053863], [-89.977824, 30.053876], [-89.977798, 30.053894], [-89.977706, 30.0539], [-89.977682, 30.053898], [-89.977616, 30.053859], [-89.97756, 30.053792], [-89.977516, 30.053723], [-89.977439, 30.053619], [-89.977383, 30.05358], [-89.977291, 30.053573], [-89.977201, 30.053593], [-89.977106, 30.053645], [-89.976998, 30.053726], [-89.976958, 30.053753], [-89.976899, 30.05379], [-89.976836, 30.053837], [-89.97682, 30.053879], [-89.976827, 30.053934], [-89.976851, 30.053977], [-89.976906, 30.054051], [-89.976964, 30.054136], [-89.976998, 30.054258], [-89.977, 30.054279], [-89.977009, 30.054356], [-89.977011, 30.054373], [-89.976962, 30.054462], [-89.976918, 30.05451], [-89.97688, 30.054551], [-89.976795, 30.054605], [-89.976684, 30.05463], [-89.976652, 30.054637], [-89.976477, 30.054622], [-89.97641, 30.054613], [-89.976356, 30.054606], [-89.9762, 30.054624], [-89.976018, 30.054677], [-89.975878, 30.054731], [-89.975736, 30.054742], [-89.975665, 30.054715], [-89.975615, 30.054665], [-89.975583, 30.05461], [-89.975542, 30.054587], [-89.975468, 30.054579], [-89.97518, 30.054678], [-89.973718, 30.055512], [-89.97343, 30.055684], [-89.97332, 30.05575], [-89.973021, 30.055923], [-89.971554, 30.056771], [-89.97021, 30.057548], [-89.966795, 30.059642], [-89.962259, 30.062593], [-89.961922, 30.062825], [-89.961554, 30.06308], [-89.961169, 30.063356], [-89.960946, 30.063516], [-89.96034, 30.063959], [-89.960308, 30.06397], [-89.96028, 30.06398], [-89.959688, 30.06436], [-89.958973, 30.064872], [-89.958585, 30.065143], [-89.958243, 30.065394], [-89.95779, 30.065719], [-89.957483, 30.065921], [-89.957193, 30.066137], [-89.956708, 30.066496], [-89.956355, 30.066755], [-89.956082, 30.066953], [-89.955745, 30.067256], [-89.95559, 30.067386], [-89.955336, 30.067611], [-89.955317, 30.067698], [-89.955312, 30.067719], [-89.955243, 30.067841], [-89.955164, 30.06789], [-89.955161, 30.067916], [-89.95516, 30.067937], [-89.955144, 30.067981], [-89.955135, 30.068007], [-89.954979, 30.068165], [-89.954869, 30.06827], [-89.954653, 30.068602], [-89.954627, 30.068703], [-89.954681, 30.068816], [-89.954842, 30.068985], [-89.954917, 30.069063], [-89.955089, 30.069236], [-89.95514, 30.069333], [-89.955148, 30.06944], [-89.955147, 30.069571], [-89.955142, 30.069646], [-89.955091, 30.069643], [-89.955044, 30.069628], [-89.955012, 30.06963], [-89.954981, 30.069636], [-89.95475, 30.069723], [-89.95422, 30.070073], [-89.953956, 30.070183], [-89.95349, 30.070473], [-89.952805, 30.070988], [-89.952397, 30.07127], [-89.952267, 30.07141], [-89.95221, 30.071489], [-89.95217, 30.071575], [-89.952196, 30.071835], [-89.952197, 30.071853], [-89.952266, 30.071895], [-89.952314, 30.0719], [-89.952376, 30.07191], [-89.952355, 30.071949], [-89.952302, 30.071977], [-89.952262, 30.071987], [-89.952238, 30.071992], [-89.952031, 30.071989], [-89.951762, 30.071991], [-89.951641, 30.071956], [-89.9514, 30.071703], [-89.951177, 30.071465], [-89.950937, 30.071236], [-89.950809, 30.071119], [-89.950745, 30.071103], [-89.950683, 30.07116], [-89.950683, 30.07121], [-89.950684, 30.07124], [-89.950735, 30.071313], [-89.950806, 30.07134], [-89.950854, 30.071357], [-89.95092, 30.071403], [-89.950929, 30.071454], [-89.950933, 30.071472], [-89.95088, 30.071511], [-89.950763, 30.071523], [-89.950698, 30.071501], [-89.950669, 30.071448], [-89.950646, 30.071404], [-89.950589, 30.071279], [-89.950542, 30.07125], [-89.950483, 30.071243], [-89.95037, 30.071312], [-89.95028, 30.07137], [-89.950059, 30.071511], [-89.949468, 30.071977], [-89.949027, 30.072318], [-89.948805, 30.072494], [-89.948689, 30.072587], [-89.948568, 30.072688], [-89.948495, 30.072746], [-89.948181, 30.073011], [-89.947616, 30.073462], [-89.946907, 30.074009], [-89.946514, 30.074331], [-89.946169, 30.074615], [-89.945856, 30.074873], [-89.945494, 30.075161], [-89.945167, 30.075481], [-89.945075, 30.075575], [-89.944957, 30.075686], [-89.94478, 30.075831], [-89.944758, 30.075848], [-89.944678, 30.075913], [-89.944669, 30.0759], [-89.944957, 30.075665], [-89.944735, 30.07547], [-89.944437, 30.075235], [-89.944171, 30.075454], [-89.943964, 30.075271], [-89.943676, 30.075029], [-89.942814, 30.074315], [-89.942427, 30.074017], [-89.941826, 30.073534], [-89.94159, 30.073325], [-89.941292, 30.073034], [-89.941128, 30.072848], [-89.94097, 30.072633], [-89.940802, 30.072334], [-89.940696, 30.072087], [-89.940655, 30.071938], [-89.940607, 30.071679], [-89.940581, 30.07145], [-89.940568, 30.071327], [-89.940532, 30.070938], [-89.940454, 30.069858], [-89.940298, 30.068255], [-89.940263, 30.067805], [-89.940236, 30.067531], [-89.940191, 30.067096], [-89.940132, 30.066454], [-89.940069, 30.065824], [-89.94, 30.065217], [-89.939888, 30.06418], [-89.939794, 30.063115], [-89.939615, 30.061346], [-89.939486, 30.060051]]]]
    },
    "properties": {
      "neighbourhood": "Little Woods",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.070649, 29.959424], [-90.0713, 29.958708], [-90.072025, 29.957904], [-90.07268, 29.957116], [-90.073168, 29.957431], [-90.073735, 29.957798], [-90.074471, 29.958325], [-90.075266, 29.95885], [-90.076041, 29.959385], [-90.076793, 29.959894], [-90.076114, 29.960666], [-90.075388, 29.961483], [-90.074735, 29.962198], [-90.07435, 29.961933], [-90.07399, 29.961685], [-90.073191, 29.961172], [-90.073065, 29.961084], [-90.072423, 29.960641], [-90.071657, 29.960118], [-90.071122, 29.959751], [-90.070649, 29.959424]]]]
    },
    "properties": {
      "neighbourhood": "Iberville",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.006206, 29.958119], [-90.012031, 29.945941], [-90.012102, 29.94598], [-90.013871, 29.947003], [-90.014586, 29.947349], [-90.016331, 29.948195], [-90.016589, 29.948319], [-90.018205, 29.949102], [-90.019996, 29.949969], [-90.020115, 29.950027], [-90.022583, 29.951222], [-90.025369, 29.952572], [-90.025458, 29.952615], [-90.026671, 29.953203], [-90.027856, 29.957382], [-90.028571, 29.959903], [-90.02743, 29.963741], [-90.027396, 29.963836], [-90.02678, 29.963702], [-90.026392, 29.963598], [-90.025255, 29.963333], [-90.024108, 29.963072], [-90.023182, 29.962864], [-90.022292, 29.962654], [-90.021402, 29.96246], [-90.021369, 29.962529], [-90.020497, 29.962302], [-90.019617, 29.96211], [-90.018482, 29.961853], [-90.016771, 29.961473], [-90.01582, 29.961246], [-90.014732, 29.960996], [-90.013917, 29.960811], [-90.012998, 29.960591], [-90.012202, 29.960328], [-90.011145, 29.959949], [-90.010063, 29.95956], [-90.009115, 29.959215], [-90.008197, 29.958845], [-90.007517, 29.958592], [-90.006551, 29.958241], [-90.006464, 29.958213], [-90.006206, 29.958119]]]]
    },
    "properties": {
      "neighbourhood": "Holy Cross",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-89.820462, 30.043408], [-89.820701, 30.042994], [-89.821693, 30.040891], [-89.82176, 30.040669], [-89.822345, 30.040063], [-89.822697, 30.040081], [-89.822922, 30.040014], [-89.823085, 30.039779], [-89.823091, 30.039418], [-89.823914, 30.038926], [-89.824399, 30.038556], [-89.825551, 30.037511], [-89.825729, 30.03736], [-89.826002, 30.037252], [-89.826342, 30.037006], [-89.826683, 30.036689], [-89.826908, 30.036609], [-89.826909, 30.036525], [-89.826862, 30.036427], [-89.827009, 30.036248], [-89.827329, 30.036252], [-89.827878, 30.03591], [-89.828619, 30.035584], [-89.82981, 30.035069], [-89.830083, 30.035003], [-89.830518, 30.034757], [-89.831439, 30.034169], [-89.831778, 30.033923], [-89.831973, 30.033744], [-89.832153, 30.03344], [-89.832479, 30.033068], [-89.832852, 30.032696], [-89.833176, 30.032464], [-89.833403, 30.032244], [-89.833597, 30.032107], [-89.833822, 30.032012], [-89.834325, 30.031558], [-89.835103, 30.030871], [-89.835572, 30.030515], [-89.836041, 30.030186], [-89.836379, 30.030037], [-89.836653, 30.029859], [-89.836912, 30.029681], [-89.83709, 30.029516], [-89.837125, 30.029308], [-89.837337, 30.029074], [-89.837886, 30.02869], [-89.838566, 30.028141], [-89.838972, 30.027756], [-89.839836, 30.026681], [-89.840063, 30.026447], [-89.840289, 30.026324], [-89.840513, 30.026313], [-89.840971, 30.025608], [-89.841769, 30.024685], [-89.841723, 30.024531], [-89.84174, 30.02442], [-89.841885, 30.02438], [-89.842696, 30.023624], [-89.84344, 30.022951], [-89.843669, 30.022744], [-89.843736, 30.022494], [-89.843723, 30.022327], [-89.843677, 30.022188], [-89.844021, 30.021607], [-89.844232, 30.021456], [-89.844266, 30.021304], [-89.844561, 30.020778], [-89.844961, 30.019711], [-89.84514, 30.019546], [-89.845397, 30.019452], [-89.846129, 30.018583], [-89.846412, 30.017835], [-89.846479, 30.017669], [-89.846689, 30.017518], [-89.846868, 30.017325], [-89.8477, 30.016235], [-89.848546, 30.015243], [-89.848757, 30.015036], [-89.848903, 30.014857], [-89.848907, 30.014635], [-89.849053, 30.014455], [-89.849296, 30.014263], [-89.84946, 30.013959], [-89.849625, 30.013669], [-89.849916, 30.013435], [-89.850112, 30.013159], [-89.850341, 30.012772], [-89.850571, 30.012399], [-89.851026, 30.011903], [-89.851267, 30.01185], [-89.851493, 30.011672], [-89.851497, 30.01138], [-89.851612, 30.011186], [-89.851904, 30.010939], [-89.852021, 30.010551], [-89.852137, 30.010301], [-89.852397, 30.010054], [-89.853454, 30.008869], [-89.853697, 30.008649], [-89.853938, 30.008513], [-89.854099, 30.008487], [-89.854479, 30.008741], [-89.854878, 30.008787], [-89.855277, 30.008806], [-89.855776, 30.008617], [-89.856466, 30.008416], [-89.856886, 30.008114], [-89.85719, 30.007873], [-89.857388, 30.007716], [-89.857582, 30.007593], [-89.857825, 30.007332], [-89.858039, 30.006972], [-89.858365, 30.00653], [-89.858593, 30.006213], [-89.858759, 30.005853], [-89.858925, 30.005423], [-89.859043, 30.004993], [-89.859014, 30.00477], [-89.858826, 30.004518], [-89.858733, 30.00435], [-89.858608, 30.00414], [-89.858579, 30.003958], [-89.858423, 30.003692], [-89.858268, 30.003357], [-89.858255, 30.003175], [-89.858339, 30.002856], [-89.858522, 30.002413], [-89.858686, 30.002109], [-89.859029, 30.001653], [-89.859322, 30.001253], [-89.859746, 30.000729], [-89.860167, 30.000372], [-89.860458, 30.000125], [-89.860716, 29.999988], [-89.861537, 29.999608], [-89.861889, 29.999473], [-89.862355, 29.999293], [-89.863144, 29.999055], [-89.863946, 29.998726], [-89.864057, 29.998679], [-89.864166, 29.998633], [-89.864232, 29.998605], [-89.86428, 29.998584], [-89.864364, 29.998549], [-89.864479, 29.9985], [-89.864753, 29.998322], [-89.864985, 29.9981], [-89.864987, 29.998096], [-89.86513, 29.997728], [-89.86523, 29.997437], [-89.865173, 29.997005], [-89.865034, 29.996655], [-89.864751, 29.99629], [-89.864236, 29.995733], [-89.864208, 29.995714], [-89.86325, 29.995118], [-89.862463, 29.994692], [-89.862408, 29.994663], [-89.862403, 29.99466], [-89.861727, 29.994294], [-89.860586, 29.993655], [-89.859953, 29.993217], [-89.85959, 29.992865], [-89.85934, 29.9925], [-89.85917, 29.992109], [-89.859083, 29.991509], [-89.859196, 29.991066], [-89.859235, 29.990913], [-89.859466, 29.99047], [-89.85997, 29.989905], [-89.860217, 29.989689], [-89.861055, 29.988957], [-89.861635, 29.988447], [-89.862267, 29.988052], [-89.863071, 29.987741], [-89.863648, 29.98765], [-89.864164, 29.987592], [-89.864799, 29.987635], [-89.865388, 29.987767], [-89.865928, 29.988037], [-89.866037, 29.988114], [-89.866357, 29.98834], [-89.866796, 29.988812], [-89.867109, 29.989247], [-89.867372, 29.989834], [-89.867651, 29.990464], [-89.867866, 29.991037], [-89.868021, 29.991386], [-89.868162, 29.991646], [-89.868177, 29.991673], [-89.868348, 29.991988], [-89.868693, 29.992451], [-89.869088, 29.992776], [-89.869216, 29.992832], [-89.869364, 29.992896], [-89.869548, 29.992976], [-89.869641, 29.993], [-89.86993, 29.993078], [-89.870117, 29.993058], [-89.870411, 29.993027], [-89.870909, 29.992838], [-89.871473, 29.992552], [-89.871705, 29.992411], [-89.871925, 29.992279], [-89.872314, 29.991893], [-89.872557, 29.991551], [-89.872574, 29.991527], [-89.872586, 29.99151], [-89.872706, 29.991341], [-89.873036, 29.990649], [-89.873301, 29.98997], [-89.873468, 29.989471], [-89.873632, 29.989194], [-89.874007, 29.988684], [-89.874429, 29.988257], [-89.874949, 29.98772], [-89.875418, 29.987322], [-89.875847, 29.987162], [-89.876043, 29.987089], [-89.877989, 29.986404], [-89.878568, 29.986187], [-89.87921, 29.986014], [-89.879834, 29.985979], [-89.880473, 29.986028], [-89.880965, 29.986256], [-89.881439, 29.986623], [-89.88169, 29.986932], [-89.881971, 29.987408], [-89.882283, 29.98794], [-89.882501, 29.988374], [-89.882736, 29.988711], [-89.882922, 29.989088], [-89.883173, 29.989439], [-89.883534, 29.989888], [-89.88399, 29.990366], [-89.884432, 29.990803], [-89.884619, 29.991111], [-89.884695, 29.99139], [-89.884675, 29.991626], [-89.884378, 29.992277], [-89.884214, 29.992595], [-89.884065, 29.992928], [-89.884013, 29.993219], [-89.883976, 29.993581], [-89.884051, 29.99386], [-89.884301, 29.994266], [-89.884504, 29.994616], [-89.884611, 29.994952], [-89.884655, 29.995216], [-89.884584, 29.995745], [-89.884563, 29.996064], [-89.88467, 29.996413], [-89.884922, 29.996681], [-89.885207, 29.996879], [-89.885589, 29.99698], [-89.885987, 29.997096], [-89.886466, 29.997157], [-89.88688, 29.997245], [-89.887278, 29.997374], [-89.887724, 29.997505], [-89.888136, 29.997718], [-89.888421, 29.997944], [-89.888612, 29.998237], [-89.888761, 29.998755], [-89.888897, 29.999271], [-89.888958, 29.99948], [-89.889113, 29.999844], [-89.889268, 30.000138], [-89.889584, 30.000406], [-89.889934, 30.000563], [-89.89041, 30.00079], [-89.892093, 30.00163], [-89.892616, 30.001942], [-89.893138, 30.002187], [-89.893552, 30.002411], [-89.89414, 30.00264], [-89.894507, 30.002756], [-89.894985, 30.002817], [-89.895305, 30.002792], [-89.895595, 30.002698], [-89.895821, 30.00252], [-89.896259, 30.002079], [-89.896616, 30.001693], [-89.896939, 30.001516], [-89.89718, 30.001407], [-89.897533, 30.001328], [-89.897853, 30.001317], [-89.898236, 30.001321], [-89.898636, 30.001353], [-89.898938, 30.00144], [-89.899335, 30.001612], [-89.899813, 30.001784], [-89.900513, 30.002014], [-89.90115, 30.00216], [-89.901772, 30.002264], [-89.902314, 30.002409], [-89.902919, 30.002569], [-89.903572, 30.002743], [-89.90405, 30.00286], [-89.904529, 30.002907], [-89.90496, 30.002953], [-89.905345, 30.002888], [-89.90573, 30.002808], [-89.906051, 30.0027], [-89.90663, 30.002442], [-89.907242, 30.002157], [-89.908047, 30.001762], [-89.909334, 30.001205], [-89.909848, 30.001016], [-89.910121, 30.000949], [-89.910538, 30.00087], [-89.91097, 30.000861], [-89.91145, 30.000825], [-89.911787, 30.000717], [-89.912045, 30.000567], [-89.912255, 30.000388], [-89.91245, 30.000223], [-89.912565, 29.999988], [-89.912795, 29.999573], [-89.912841, 29.999452], [-89.912961, 29.999143], [-89.913274, 29.998437], [-89.913455, 29.998133], [-89.913571, 29.997828], [-89.91367, 29.997606], [-89.91377, 29.997343], [-89.913939, 29.996691], [-89.914123, 29.996066], [-89.914223, 29.995789], [-89.914371, 29.99554], [-89.914582, 29.995334], [-89.914791, 29.995252], [-89.915127, 29.995187], [-89.915367, 29.995161], [-89.915641, 29.995053], [-89.915867, 29.994888], [-89.916109, 29.994738], [-89.916368, 29.994462], [-89.916643, 29.994243], [-89.916853, 29.994092], [-89.917158, 29.994012], [-89.917414, 29.993987], [-89.917718, 29.994004], [-89.918021, 29.994063], [-89.918339, 29.99415], [-89.918706, 29.994195], [-89.918799, 29.994193], [-89.919223, 29.994183], [-89.919658, 29.994139], [-89.920361, 29.994001], [-89.920696, 29.993908], [-89.920908, 29.993804], [-89.921145, 29.993603], [-89.921359, 29.993383], [-89.921585, 29.993114], [-89.921778, 29.992893], [-89.922003, 29.992693], [-89.922306, 29.992493], [-89.922575, 29.99237], [-89.922964, 29.992354], [-89.92333, 29.992465], [-89.923662, 29.992584], [-89.924006, 29.992637], [-89.924207, 29.99259], [-89.924442, 29.992468], [-89.924679, 29.992247], [-89.924849, 29.992036], [-89.925096, 29.991835], [-89.925411, 29.991625], [-89.925736, 29.991425], [-89.926028, 29.991196], [-89.92622, 29.991043], [-89.926401, 29.990813], [-89.926515, 29.990591], [-89.926675, 29.990332], [-89.926834, 29.990053], [-89.92696, 29.989822], [-89.927141, 29.989591], [-89.927367, 29.989361], [-89.927727, 29.989026], [-89.927979, 29.988809], [-89.928308, 29.988619], [-89.928725, 29.988482], [-89.929067, 29.988421], [-89.929468, 29.988399], [-89.929824, 29.98839], [-89.930135, 29.988394], [-89.930491, 29.988384], [-89.930936, 29.988389], [-89.931218, 29.988341], [-89.931531, 29.988266], [-89.931844, 29.988141], [-89.932098, 29.988001], [-89.932321, 29.987926], [-89.932545, 29.987838], [-89.932932, 29.987726], [-89.93317, 29.987664], [-89.933438, 29.987615], [-89.933707, 29.987476], [-89.933902, 29.987323], [-89.934127, 29.987132], [-89.934365, 29.987044], [-89.934618, 29.987021], [-89.93511, 29.98682], [-89.935378, 29.986732], [-89.935603, 29.986567], [-89.935784, 29.986362], [-89.936027, 29.985978], [-89.936238, 29.985709], [-89.936523, 29.985492], [-89.936806, 29.985379], [-89.937133, 29.985305], [-89.937654, 29.985207], [-89.938234, 29.985072], [-89.938651, 29.984908], [-89.93904, 29.984706], [-89.939326, 29.984441], [-89.939525, 29.98421], [-89.939599, 29.98395], [-89.939648, 29.983641], [-89.939593, 29.983317], [-89.939523, 29.98302], [-89.939351, 29.982579], [-89.939267, 29.982217], [-89.939183, 29.981919], [-89.939172, 29.981635], [-89.939204, 29.981416], [-89.939251, 29.981274], [-89.939343, 29.98103], [-89.939569, 29.980813], [-89.939792, 29.980725], [-89.940029, 29.980779], [-89.94031, 29.980821], [-89.940783, 29.980916], [-89.941108, 29.98101], [-89.941434, 29.981039], [-89.941745, 29.981055], [-89.94207, 29.981123], [-89.942221, 29.981139], [-89.942227, 29.98114], [-89.942337, 29.981152], [-89.942766, 29.981208], [-89.943151, 29.981289], [-89.943624, 29.981385], [-89.943919, 29.981465], [-89.944407, 29.981613], [-89.944924, 29.98176], [-89.945249, 29.981841], [-89.9455, 29.981908], [-89.945826, 29.981937], [-89.946078, 29.98194], [-89.946391, 29.981827], [-89.946779, 29.981651], [-89.947211, 29.9815], [-89.947628, 29.981324], [-89.947971, 29.981185], [-89.948448, 29.981048], [-89.948849, 29.980975], [-89.949117, 29.980926], [-89.949548, 29.980841], [-89.9498, 29.980856], [-89.950094, 29.981027], [-89.950315, 29.981171], [-89.950551, 29.981264], [-89.950832, 29.981306], [-89.951084, 29.981296], [-89.951336, 29.98126], [-89.951664, 29.981147], [-89.951992, 29.981021], [-89.95235, 29.980922], [-89.952662, 29.980835], [-89.952915, 29.980811], [-89.953226, 29.980815], [-89.95358, 29.980935], [-89.953861, 29.981002], [-89.954184, 29.981212], [-89.954418, 29.981498], [-89.954636, 29.981772], [-89.954811, 29.982032], [-89.955029, 29.982344], [-89.955232, 29.982682], [-89.955361, 29.983006], [-89.95543, 29.983316], [-89.955514, 29.983679], [-89.955583, 29.984054], [-89.955637, 29.984493], [-89.955677, 29.984778], [-89.955673, 29.9851], [-89.955728, 29.985411], [-89.955768, 29.985721], [-89.955809, 29.98598], [-89.955895, 29.986161], [-89.956071, 29.986357], [-89.956349, 29.986605], [-89.956584, 29.986736], [-89.956761, 29.986803], [-89.957043, 29.986832], [-89.957355, 29.986809], [-89.957652, 29.986773], [-89.95789, 29.98666], [-89.958086, 29.986494], [-89.958296, 29.986251], [-89.958462, 29.986098], [-89.958671, 29.985958], [-89.958955, 29.985793], [-89.959223, 29.985718], [-89.959462, 29.985643], [-89.959758, 29.985621], [-89.960025, 29.985636], [-89.960366, 29.985666], [-89.960705, 29.985811], [-89.960925, 29.985994], [-89.961306, 29.986334], [-89.961715, 29.986777], [-89.962432, 29.987482], [-89.962784, 29.987769], [-89.963385, 29.988266], [-89.964, 29.988815], [-89.964323, 29.989076], [-89.964587, 29.989273], [-89.964837, 29.98943], [-89.965088, 29.989549], [-89.965324, 29.989603], [-89.965591, 29.989593], [-89.965858, 29.989583], [-89.966022, 29.989559], [-89.966364, 29.989472], [-89.966571, 29.9895], [-89.966778, 29.989554], [-89.966969, 29.989698], [-89.967248, 29.989894], [-89.967733, 29.990209], [-89.968013, 29.99038], [-89.968307, 29.990525], [-89.968602, 29.99067], [-89.96897, 29.990829], [-89.969295, 29.990922], [-89.969664, 29.991081], [-89.969988, 29.991239], [-89.970311, 29.991449], [-89.970561, 29.99162], [-89.970929, 29.991869], [-89.971118, 29.992103], [-89.971263, 29.99235], [-89.971274, 29.992608], [-89.971212, 29.99284], [-89.971164, 29.993085], [-89.971146, 29.993343], [-89.971202, 29.993576], [-89.971258, 29.99377], [-89.971375, 29.993926], [-89.971536, 29.994082], [-89.971786, 29.994253], [-89.972007, 29.994358], [-89.972258, 29.994451], [-89.972464, 29.994531], [-89.972686, 29.994572], [-89.973012, 29.994575], [-89.97328, 29.994552], [-89.973576, 29.994568], [-89.973888, 29.994533], [-89.974126, 29.994471], [-89.97438, 29.99437], [-89.974603, 29.994282], [-89.974843, 29.994117], [-89.975097, 29.993951], [-89.975322, 29.993747], [-89.975548, 29.99353], [-89.975804, 29.993236], [-89.976015, 29.993006], [-89.976287, 29.992621], [-89.976633, 29.992225], [-89.9768, 29.991981], [-89.976981, 29.99175], [-89.977221, 29.991533], [-89.97761, 29.991266], [-89.978015, 29.990974], [-89.978344, 29.99077], [-89.978584, 29.990566], [-89.978913, 29.99035], [-89.979138, 29.990159], [-89.979438, 29.98993], [-89.979603, 29.989789], [-89.979709, 29.98961], [-89.979831, 29.989353], [-89.979926, 29.989227], [-89.979999, 29.988993], [-89.980091, 29.988749], [-89.980274, 29.988402], [-89.980396, 29.988132], [-89.980504, 29.987875], [-89.980685, 29.987658], [-89.980984, 29.98748], [-89.981372, 29.987303], [-89.981714, 29.987165], [-89.982044, 29.987058], [-89.982102, 29.98704], [-89.982067, 29.98663], [-89.982127, 29.986252], [-89.98222, 29.985969], [-89.982317, 29.985678], [-89.982361, 29.985442], [-89.98235, 29.985144], [-89.98283, 29.985038], [-89.983427, 29.98476], [-89.984087, 29.984224], [-89.984993, 29.98302], [-89.987209, 29.979171], [-89.987245, 29.978706], [-89.98722, 29.978345], [-89.987699, 29.97804], [-89.988325, 29.977788], [-89.988748, 29.977199], [-89.989068, 29.976568], [-89.993888, 29.971907], [-89.99869, 29.973678], [-89.998751, 29.9737], [-89.998739, 29.973726], [-89.999859, 29.974134], [-90.000735, 29.974448], [-90.001635, 29.974777], [-90.00262, 29.975134], [-90.003173, 29.975331], [-90.003691, 29.975516], [-90.003858, 29.975577], [-90.004753, 29.975895], [-90.005801, 29.976295], [-90.00686, 29.976661], [-90.007529, 29.976914], [-90.007706, 29.97697], [-90.007882, 29.977021], [-90.008151, 29.977089], [-90.0086, 29.977189], [-90.009422, 29.977369], [-90.010399, 29.977601], [-90.010524, 29.977631], [-90.011456, 29.97785], [-90.01238, 29.978052], [-90.013062, 29.978206], [-90.014147, 29.978446], [-90.014988, 29.978638], [-90.015862, 29.978832], [-90.016745, 29.979044], [-90.017654, 29.979242], [-90.018615, 29.979462], [-90.019485, 29.979667], [-90.019659, 29.979708], [-90.019735, 29.979723], [-90.02027, 29.979851], [-90.020434, 29.979897], [-90.020557, 29.979944], [-90.020992, 29.980549], [-90.021698, 29.980719], [-90.021635, 29.980895], [-90.021611, 29.980964], [-90.021601, 29.980994], [-90.021578, 29.981061], [-90.021501, 29.981415], [-90.021407, 29.981823], [-90.021158, 29.98312], [-90.020828, 29.984165], [-90.02081, 29.984221], [-90.020271, 29.985902], [-90.021271, 29.989902], [-90.022146, 29.992768], [-90.022367, 29.993491], [-90.024281, 29.999754], [-90.025087, 30.002393], [-90.025343, 30.003228], [-90.025824, 30.004515], [-90.025827, 30.004527], [-90.025834, 30.004554], [-90.025863, 30.004619], [-90.025876, 30.004643], [-90.025878, 30.004647], [-90.025889, 30.00468], [-90.025912, 30.004747], [-90.026098, 30.005355], [-90.026966, 30.00818], [-90.027007, 30.008315], [-90.026506, 30.008451], [-90.024333, 30.008954], [-90.024187, 30.008998], [-90.020886, 30.009837], [-90.020455, 30.009978], [-90.020172, 30.010051], [-90.019951, 30.010092], [-90.019576, 30.010147], [-90.019296, 30.010181], [-90.017595, 30.010357], [-90.0153, 30.01061], [-90.01448, 30.010698], [-90.014414, 30.010706], [-90.013339, 30.010829], [-90.013167, 30.010852], [-90.012871, 30.010883], [-90.012809, 30.010889], [-90.012285, 30.010948], [-90.012043, 30.010968], [-90.01092, 30.01107], [-90.01068, 30.011104], [-90.009757, 30.011209], [-90.008855, 30.011302], [-90.008244, 30.011366], [-90.007184, 30.011478], [-90.005863, 30.011613], [-90.004276, 30.01179], [-90.002861, 30.011947], [-90.002491, 30.011987], [-90.002197, 30.012019], [-90.001604, 30.012084], [-90.000637, 30.012189], [-89.999506, 30.012316], [-89.999044, 30.012381], [-89.998653, 30.012448], [-89.997229, 30.012706], [-89.996974, 30.012752], [-89.995845, 30.012951], [-89.994449, 30.013196], [-89.993521, 30.013359], [-89.993013, 30.013445], [-89.991992, 30.013625], [-89.990963, 30.013803], [-89.9901, 30.013957], [-89.989248, 30.014106], [-89.988866, 30.014181], [-89.988228, 30.014295], [-89.987883, 30.014353], [-89.986105, 30.014652], [-89.984685, 30.014907], [-89.98464, 30.014915], [-89.983901, 30.01505], [-89.983463, 30.015132], [-89.983016, 30.015215], [-89.982507, 30.01531], [-89.981766, 30.015442], [-89.981024, 30.015555], [-89.980449, 30.015659], [-89.980203, 30.015703], [-89.979855, 30.015772], [-89.978783, 30.015983], [-89.978634, 30.016015], [-89.978511, 30.016041], [-89.977822, 30.016187], [-89.976924, 30.016392], [-89.976434, 30.016506], [-89.975527, 30.016741], [-89.975059, 30.016856], [-89.972895, 30.017386], [-89.971076, 30.017832], [-89.970502, 30.017984], [-89.970121, 30.018075], [-89.969853, 30.018139], [-89.96938, 30.018251], [-89.968557, 30.018455], [-89.968123, 30.018577], [-89.967942, 30.01862], [-89.967229, 30.018791], [-89.966587, 30.018954], [-89.965882, 30.019133], [-89.965158, 30.019323], [-89.964449, 30.019479], [-89.963769, 30.019651], [-89.963112, 30.019813], [-89.963049, 30.019829], [-89.962351, 30.020009], [-89.961654, 30.020178], [-89.961002, 30.020334], [-89.960167, 30.020548], [-89.959786, 30.020643], [-89.959266, 30.020775], [-89.959202, 30.020791], [-89.959041, 30.020828], [-89.958017, 30.021078], [-89.957858, 30.021118], [-89.957414, 30.021231], [-89.957176, 30.021292], [-89.956114, 30.021553], [-89.955731, 30.021649], [-89.955475, 30.021711], [-89.955417, 30.021725], [-89.954405, 30.021981], [-89.953312, 30.022282], [-89.952298, 30.022586], [-89.952106, 30.022644], [-89.951663, 30.022785], [-89.951185, 30.022937], [-89.950555, 30.023146], [-89.9501, 30.023309], [-89.950057, 30.023324], [-89.949286, 30.023596], [-89.947659, 30.024152], [-89.947541, 30.024194], [-89.9474, 30.024244], [-89.947068, 30.024363], [-89.946766, 30.024471], [-89.945153, 30.025047], [-89.943197, 30.025732], [-89.941999, 30.026151], [-89.941195, 30.02643], [-89.940177, 30.026783], [-89.939617, 30.026996], [-89.93928, 30.027114], [-89.936315, 30.028154], [-89.936202, 30.028194], [-89.934122, 30.028923], [-89.933513, 30.029136], [-89.933446, 30.029159], [-89.932114, 30.029626], [-89.931347, 30.029895], [-89.9309, 30.030052], [-89.930837, 30.030074], [-89.930727, 30.030113], [-89.930489, 30.030196], [-89.92906, 30.030697], [-89.928902, 30.030752], [-89.92781, 30.031135], [-89.927641, 30.031196], [-89.927448, 30.031266], [-89.927325, 30.03131], [-89.926904, 30.031462], [-89.926698, 30.031537], [-89.926454, 30.031625], [-89.926136, 30.03174], [-89.924718, 30.032211], [-89.924292, 30.032353], [-89.924026, 30.03244], [-89.923151, 30.032727], [-89.922692, 30.032878], [-89.921866, 30.033138], [-89.921785, 30.033164], [-89.921036, 30.0334], [-89.920003, 30.033725], [-89.919936, 30.033747], [-89.919717, 30.033817], [-89.919263, 30.033963], [-89.918903, 30.034078], [-89.91877, 30.034121], [-89.917293, 30.034595], [-89.915581, 30.035141], [-89.914889, 30.035358], [-89.914672, 30.035426], [-89.914293, 30.035545], [-89.914084, 30.03561], [-89.913436, 30.035823], [-89.913202, 30.0359], [-89.913125, 30.035925], [-89.912916, 30.035994], [-89.912502, 30.03613], [-89.912036, 30.036283], [-89.911857, 30.036342], [-89.911606, 30.036424], [-89.911524, 30.03645], [-89.911423, 30.036483], [-89.910661, 30.036727], [-89.909794, 30.037004], [-89.908483, 30.037423], [-89.908402, 30.037447], [-89.907906, 30.037592], [-89.907092, 30.037859], [-89.906234, 30.038137], [-89.905454, 30.038384], [-89.902376, 30.039366], [-89.900859, 30.039844], [-89.899971, 30.040149], [-89.899084, 30.040502], [-89.898436, 30.040781], [-89.897846, 30.041062], [-89.897504, 30.041241], [-89.897437, 30.041266], [-89.897389, 30.041279], [-89.897306, 30.041284], [-89.896556, 30.041708], [-89.896004, 30.042069], [-89.894919, 30.042837], [-89.893958, 30.043537], [-89.893203, 30.044087], [-89.891825, 30.045094], [-89.890641, 30.045961], [-89.889617, 30.046623], [-89.888835, 30.047089], [-89.8879, 30.04764], [-89.887803, 30.047699], [-89.88718, 30.048072], [-89.886705, 30.048352], [-89.88362, 30.050187], [-89.880455, 30.05207], [-89.88039, 30.052108], [-89.880278, 30.052175], [-89.880167, 30.052239], [-89.880017, 30.052326], [-89.87974, 30.052486], [-89.879157, 30.052823], [-89.878185, 30.053401], [-89.874532, 30.05558], [-89.87395, 30.055942], [-89.87315, 30.056453], [-89.872198, 30.057133], [-89.87141, 30.057719], [-89.870603, 30.058331], [-89.869781, 30.05895], [-89.868953, 30.059572], [-89.868112, 30.060219], [-89.867722, 30.060548], [-89.867421, 30.060826], [-89.866989, 30.061263], [-89.866759, 30.061519], [-89.86635, 30.062022], [-89.866162, 30.06227], [-89.865873, 30.062684], [-89.865693, 30.062971], [-89.86544, 30.06342], [-89.865283, 30.063718], [-89.865093, 30.064107], [-89.864942, 30.064452], [-89.864708, 30.065], [-89.864577, 30.065478], [-89.864428, 30.066105], [-89.864359, 30.066535], [-89.864296, 30.067056], [-89.864224, 30.06781], [-89.864155, 30.068572], [-89.864094, 30.069341], [-89.864026, 30.070106], [-89.863983, 30.070638], [-89.863948, 30.070926], [-89.863893, 30.071213], [-89.863836, 30.071442], [-89.863717, 30.071788], [-89.863542, 30.072218], [-89.863408, 30.0725], [-89.86316, 30.072942], [-89.862836, 30.073418], [-89.862628, 30.07369], [-89.862361, 30.073979], [-89.861997, 30.074335], [-89.861739, 30.074592], [-89.861542, 30.074764], [-89.861203, 30.075034], [-89.860876, 30.075261], [-89.860357, 30.075575], [-89.859985, 30.075766], [-89.859635, 30.075929], [-89.859306, 30.076061], [-89.858894, 30.076205], [-89.858507, 30.076328], [-89.858084, 30.076436], [-89.857587, 30.076532], [-89.857159, 30.076592], [-89.856743, 30.076633], [-89.85655, 30.07565], [-89.85623, 30.075049], [-89.855913, 30.07483], [-89.855325, 30.074797], [-89.852891, 30.074893], [-89.849479, 30.074972], [-89.848427, 30.074923], [-89.847382, 30.074825], [-89.846252, 30.075077], [-89.844809, 30.074465], [-89.843603, 30.073128], [-89.841932, 30.071505], [-89.840324, 30.070103], [-89.837992, 30.06785], [-89.835157, 30.065052], [-89.834699, 30.064572], [-89.834485, 30.064285], [-89.834359, 30.064052], [-89.834282, 30.063648], [-89.834209, 30.062981], [-89.834031, 30.062067], [-89.83377, 30.060487], [-89.833311, 30.058189], [-89.833276, 30.058012], [-89.833072, 30.056993], [-89.832768, 30.055505], [-89.832436, 30.053769], [-89.830703, 30.044949], [-89.830487, 30.043852], [-89.830092, 30.042882], [-89.829745, 30.042999], [-89.823734, 30.045533], [-89.823344, 30.045677], [-89.822674, 30.04601], [-89.821954, 30.046196], [-89.821095, 30.046103], [-89.820573, 30.045824], [-89.820527, 30.04508], [-89.820543, 30.044217], [-89.820462, 30.043408]]]]
    },
    "properties": {
      "neighbourhood": "Viavant - Venetian Isles",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.026671, 29.953203], [-90.025458, 29.952615], [-90.025369, 29.952572], [-90.022583, 29.951222], [-90.020115, 29.950027], [-90.019996, 29.949969], [-90.018205, 29.949102], [-90.016589, 29.948319], [-90.016331, 29.948195], [-90.014586, 29.947349], [-90.013871, 29.947003], [-90.014914, 29.942983], [-90.014256, 29.942401], [-90.014353, 29.940979], [-90.014418, 29.94003], [-90.014596, 29.936997], [-90.01637, 29.937788], [-90.017896, 29.938463], [-90.019109, 29.939005], [-90.019504, 29.939165], [-90.020294, 29.939511], [-90.021382, 29.940005], [-90.022535, 29.940506], [-90.023529, 29.940941], [-90.024263, 29.941258], [-90.024376, 29.941308], [-90.025174, 29.941638], [-90.025856, 29.941978], [-90.02626, 29.942185], [-90.027347, 29.942586], [-90.0275, 29.942644], [-90.027648, 29.942701], [-90.027783, 29.942753], [-90.02844, 29.943004], [-90.029564, 29.943436], [-90.029681, 29.943489], [-90.030112, 29.943644], [-90.030528, 29.943793], [-90.031345, 29.944124], [-90.031497, 29.944185], [-90.032586, 29.944613], [-90.033065, 29.944779], [-90.033334, 29.944833], [-90.033703, 29.944866], [-90.034607, 29.944921], [-90.035516, 29.944956], [-90.035839, 29.944974], [-90.03662, 29.945], [-90.03667, 29.944994], [-90.036815, 29.944975], [-90.03782, 29.944997], [-90.038826, 29.94506], [-90.038737, 29.946056], [-90.038739, 29.946111], [-90.038665, 29.947162], [-90.038617, 29.948161], [-90.03861, 29.948318], [-90.038569, 29.949248], [-90.038537, 29.949554], [-90.038516, 29.949826], [-90.038478, 29.95042], [-90.03839, 29.95161], [-90.03831, 29.952733], [-90.038297, 29.952873], [-90.038278, 29.952938], [-90.038266, 29.952996], [-90.038244, 29.953314], [-90.038383, 29.953693], [-90.038071, 29.956703], [-90.036764, 29.956302], [-90.032744, 29.955068], [-90.026671, 29.953203]]]]
    },
    "properties": {
      "neighbourhood": "U.S. Naval Base",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.045372, 29.958103], [-90.045577, 29.955879], [-90.045572, 29.955103], [-90.045752, 29.954908], [-90.045788, 29.954277], [-90.045849, 29.953144], [-90.045923, 29.951975], [-90.046001, 29.950785], [-90.046077, 29.9496], [-90.046138, 29.948653], [-90.047065, 29.948658], [-90.04818, 29.948699], [-90.049209, 29.948729], [-90.049847, 29.948756], [-90.050547, 29.948725], [-90.050705, 29.948721], [-90.051193, 29.94871], [-90.052155, 29.948686], [-90.052321, 29.948682], [-90.052364, 29.948612], [-90.052392, 29.948528], [-90.052715, 29.948539], [-90.053278, 29.948562], [-90.053346, 29.948578], [-90.053413, 29.948598], [-90.053542, 29.948634], [-90.05384, 29.949006], [-90.05404, 29.948882], [-90.054629, 29.948516], [-90.054725, 29.948456], [-90.055053, 29.948448], [-90.055465, 29.948278], [-90.058572, 29.946505], [-90.058572, 29.949979], [-90.058572, 29.951503], [-90.058641, 29.953149], [-90.058672, 29.953903], [-90.056972, 29.956603], [-90.054472, 29.958003], [-90.052331, 29.958381], [-90.051901, 29.958364], [-90.047431, 29.958185], [-90.045372, 29.958103]]]]
    },
    "properties": {
      "neighbourhood": "Algiers Point",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.038071, 29.956703], [-90.038383, 29.953693], [-90.038244, 29.953314], [-90.038266, 29.952996], [-90.038278, 29.952938], [-90.038297, 29.952873], [-90.03831, 29.952733], [-90.03839, 29.95161], [-90.038478, 29.95042], [-90.038516, 29.949826], [-90.038537, 29.949554], [-90.038569, 29.949248], [-90.03861, 29.948318], [-90.038617, 29.948161], [-90.038665, 29.947162], [-90.038739, 29.946111], [-90.038737, 29.946056], [-90.038826, 29.94506], [-90.038905, 29.943972], [-90.038971, 29.942896], [-90.039065, 29.941842], [-90.03913, 29.940825], [-90.039222, 29.93981], [-90.039278, 29.938824], [-90.038284, 29.938771], [-90.037238, 29.938735], [-90.037249, 29.938477], [-90.037286, 29.938223], [-90.037286, 29.938218], [-90.037317, 29.938054], [-90.037401, 29.937951], [-90.037492, 29.937873], [-90.037576, 29.937783], [-90.037597, 29.937727], [-90.037607, 29.937701], [-90.037601, 29.937664], [-90.037567, 29.937624], [-90.037476, 29.93758], [-90.037771, 29.937604], [-90.03838, 29.937619], [-90.039455, 29.937645], [-90.039613, 29.937649], [-90.040512, 29.93767], [-90.04121, 29.937687], [-90.04138, 29.937743], [-90.041389, 29.937465], [-90.04161, 29.937529], [-90.041877, 29.937585], [-90.04219, 29.937628], [-90.042421, 29.937647], [-90.04255, 29.937649], [-90.042726, 29.937636], [-90.042822, 29.937599], [-90.043076, 29.937422], [-90.043147, 29.937356], [-90.0432, 29.937307], [-90.04336, 29.937111], [-90.043475, 29.936906], [-90.043539, 29.936617], [-90.043565, 29.936428], [-90.04357, 29.936224], [-90.043585, 29.936056], [-90.043613, 29.935605], [-90.043626, 29.935346], [-90.04366, 29.934696], [-90.0437, 29.934064], [-90.043748, 29.933311], [-90.043867, 29.931441], [-90.043972, 29.931504], [-90.043972, 29.931406], [-90.043972, 29.931104], [-90.043972, 29.930793], [-90.048197, 29.9348], [-90.047791, 29.934822], [-90.04651, 29.934891], [-90.046378, 29.937207], [-90.046314, 29.937973], [-90.046296, 29.938241], [-90.046279, 29.938488], [-90.046277, 29.938524], [-90.046269, 29.938637], [-90.046257, 29.938805], [-90.046191, 29.939773], [-90.046147, 29.940747], [-90.046101, 29.941207], [-90.045685, 29.941192], [-90.045603, 29.942189], [-90.045524, 29.943279], [-90.0455, 29.943673], [-90.04546, 29.944326], [-90.045394, 29.945375], [-90.045312, 29.946437], [-90.045244, 29.947493], [-90.045216, 29.948102], [-90.045198, 29.948476], [-90.045191, 29.94862], [-90.046138, 29.948653], [-90.046077, 29.9496], [-90.046001, 29.950785], [-90.045923, 29.951975], [-90.045849, 29.953144], [-90.045788, 29.954277], [-90.045752, 29.954908], [-90.045572, 29.955103], [-90.045577, 29.955879], [-90.045372, 29.958103], [-90.041653, 29.957516], [-90.041571, 29.957503], [-90.038071, 29.956703]]]]
    },
    "properties": {
      "neighbourhood": "Whitney",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.085202, 29.950452], [-90.085491, 29.950076], [-90.085632, 29.949893], [-90.085698, 29.949796], [-90.085771, 29.949699], [-90.085978, 29.949405], [-90.086068, 29.949287], [-90.086631, 29.94849], [-90.08727, 29.947698], [-90.087736, 29.946981], [-90.088193, 29.946429], [-90.088244, 29.946358], [-90.088359, 29.946189], [-90.088693, 29.946374], [-90.089527, 29.94685], [-90.090442, 29.947365], [-90.091357, 29.947888], [-90.092285, 29.948398], [-90.09314, 29.948891], [-90.093334, 29.948995], [-90.094146, 29.949457], [-90.094738, 29.949781], [-90.095081, 29.949968], [-90.095601, 29.950257], [-90.096007, 29.950471], [-90.097029, 29.951051], [-90.097617, 29.95138], [-90.097839, 29.951496], [-90.098276, 29.951724], [-90.098185, 29.95179], [-90.09817, 29.951801], [-90.09807, 29.951881], [-90.098021, 29.951971], [-90.098, 29.952027], [-90.097982, 29.952126], [-90.097964, 29.952399], [-90.097953, 29.952437], [-90.097951, 29.952453], [-90.097937, 29.952503], [-90.097909, 29.952557], [-90.097861, 29.952646], [-90.097573, 29.953041], [-90.097344, 29.953356], [-90.09716, 29.953617], [-90.096956, 29.95391], [-90.096741, 29.954208], [-90.096181, 29.954944], [-90.096032, 29.955135], [-90.095848, 29.955378], [-90.09568, 29.955611], [-90.095485, 29.955881], [-90.09438, 29.957432], [-90.094224, 29.957657], [-90.094117, 29.95781], [-90.094055, 29.957773], [-90.092335, 29.956508], [-90.09221, 29.95642], [-90.0921, 29.956334], [-90.091802, 29.956118], [-90.090918, 29.955539], [-90.090113, 29.954932], [-90.089313, 29.954342], [-90.087893, 29.953344], [-90.087645, 29.953092], [-90.087359, 29.952933], [-90.086819, 29.952636], [-90.086793, 29.952619], [-90.086365, 29.952286], [-90.086118, 29.952049], [-90.085995, 29.951889], [-90.085871, 29.951703], [-90.085742, 29.951457], [-90.085672, 29.951324], [-90.085539, 29.95107], [-90.085428, 29.950872], [-90.085365, 29.950751], [-90.085324, 29.950686], [-90.085264, 29.950592], [-90.085202, 29.950452]]]]
    },
    "properties": {
      "neighbourhood": "B. W. Cooper",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.109632, 29.94135], [-90.109842, 29.94059], [-90.11007, 29.939718], [-90.110312, 29.938754], [-90.110545, 29.937867], [-90.110759, 29.937107], [-90.110999, 29.936184], [-90.11127, 29.935192], [-90.11152, 29.934264], [-90.111759, 29.933324], [-90.112001, 29.932377], [-90.112256, 29.931459], [-90.112511, 29.9305], [-90.112786, 29.929544], [-90.113019, 29.928628], [-90.113055, 29.92847], [-90.11343, 29.927155], [-90.113562, 29.9266], [-90.113794, 29.925789], [-90.113923, 29.925126], [-90.114102, 29.924451], [-90.114295, 29.923791], [-90.114519, 29.923009], [-90.114795, 29.921938], [-90.114905, 29.921537], [-90.11499, 29.921172], [-90.115029, 29.920924], [-90.116028, 29.921077], [-90.117059, 29.921196], [-90.117981, 29.921364], [-90.118902, 29.921557], [-90.119901, 29.921721], [-90.121311, 29.922088], [-90.121523, 29.922143], [-90.123334, 29.922762], [-90.123702, 29.921883], [-90.124087, 29.921044], [-90.124247, 29.920647], [-90.1245, 29.920061], [-90.124958, 29.919091], [-90.125353, 29.918201], [-90.126516, 29.91864], [-90.12769, 29.919128], [-90.127773, 29.919164], [-90.128267, 29.919376], [-90.129107, 29.919737], [-90.129152, 29.919675], [-90.129251, 29.919591], [-90.129579, 29.919355], [-90.129692, 29.919257], [-90.129776, 29.919147], [-90.129836, 29.918962], [-90.129859, 29.918778], [-90.12983, 29.918531], [-90.129726, 29.918261], [-90.129685, 29.918116], [-90.129697, 29.918015], [-90.129765, 29.917873], [-90.129955, 29.917666], [-90.13019, 29.917391], [-90.130658, 29.916484], [-90.131125, 29.915576], [-90.132474, 29.913005], [-90.132534, 29.91289], [-90.135384, 29.914553], [-90.136601, 29.915704], [-90.137511, 29.916784], [-90.138413, 29.918568], [-90.138439, 29.918677], [-90.138667, 29.919617], [-90.138853, 29.920381], [-90.138978, 29.921396], [-90.138886, 29.921522], [-90.135543, 29.926105], [-90.133718, 29.928507], [-90.133583, 29.928703], [-90.133427, 29.928883], [-90.132771, 29.929688], [-90.132182, 29.930535], [-90.131642, 29.931236], [-90.132393, 29.931681], [-90.133132, 29.932148], [-90.132531, 29.932923], [-90.1319, 29.933701], [-90.131284, 29.934525], [-90.130789, 29.935119], [-90.130672, 29.935279], [-90.130188, 29.935887], [-90.130015, 29.936081], [-90.129561, 29.936661], [-90.129435, 29.936768], [-90.128834, 29.937573], [-90.128229, 29.93821], [-90.128148, 29.938295], [-90.127584, 29.939171], [-90.126902, 29.939953], [-90.126331, 29.940679], [-90.125672, 29.941515], [-90.125085, 29.942369], [-90.124437, 29.943193], [-90.123862, 29.943849], [-90.123235, 29.944696], [-90.122555, 29.945555], [-90.121965, 29.946267], [-90.121338, 29.947127], [-90.120691, 29.947905], [-90.12008, 29.948735], [-90.119424, 29.949534], [-90.118786, 29.950312], [-90.118119, 29.95115], [-90.117481, 29.951974], [-90.116861, 29.952793], [-90.116818, 29.952721], [-90.116779, 29.95265], [-90.116728, 29.952524], [-90.116584, 29.952139], [-90.116481, 29.951863], [-90.116454, 29.951795], [-90.116281, 29.951361], [-90.116145, 29.951017], [-90.116044, 29.95079], [-90.11581, 29.950225], [-90.115697, 29.949953], [-90.115573, 29.949624], [-90.115316, 29.949012], [-90.115244, 29.94885], [-90.114858, 29.947975], [-90.114771, 29.94773], [-90.114329, 29.946735], [-90.114137, 29.946261], [-90.113985, 29.945885], [-90.113584, 29.944879], [-90.113505, 29.944696], [-90.113384, 29.944414], [-90.113223, 29.944041], [-90.113137, 29.943772], [-90.11305, 29.943618], [-90.112947, 29.943464], [-90.112761, 29.943262], [-90.112329, 29.942923], [-90.112045, 29.942749], [-90.111768, 29.94257], [-90.111391, 29.942365], [-90.110517, 29.94187], [-90.109632, 29.94135]]]]
    },
    "properties": {
      "neighbourhood": "Audubon",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.070799, 30.021408], [-90.070803, 30.021168], [-90.07079, 30.02092], [-90.070751, 30.020435], [-90.070727, 30.020046], [-90.070681, 30.019589], [-90.070661, 30.019084], [-90.070512, 30.0173], [-90.070463, 30.016257], [-90.070074, 30.011862], [-90.0697, 30.00765], [-90.06969, 30.007538], [-90.069495, 30.005385], [-90.070017, 30.005277], [-90.070686, 30.004763], [-90.070973, 30.004518], [-90.071421, 30.004155], [-90.07267, 30.00304], [-90.073617, 30.002279], [-90.073722, 30.002219], [-90.073784, 30.002191], [-90.073856, 30.002167], [-90.073861, 30.002165], [-90.074084, 30.002134], [-90.074011, 30.001111], [-90.073977, 30.000762], [-90.073965, 30.000598], [-90.07393, 30.000096], [-90.075102, 30.000032], [-90.07625, 29.999954], [-90.077428, 29.9999], [-90.078591, 29.999829], [-90.079752, 29.999753], [-90.08092, 29.999693], [-90.081001, 29.999696], [-90.081262, 29.999706], [-90.082087, 29.99965], [-90.083248, 29.99959], [-90.084416, 29.999506], [-90.085021, 29.999468], [-90.085375, 29.999445], [-90.085761, 29.999421], [-90.08505, 29.999724], [-90.08535, 30.002713], [-90.085308, 30.00385], [-90.085299, 30.006651], [-90.084992, 30.008471], [-90.08489, 30.010924], [-90.084882, 30.011105], [-90.084296, 30.015142], [-90.084084, 30.018105], [-90.084063, 30.018771], [-90.083125, 30.020685], [-90.083037, 30.020865], [-90.082357, 30.020835], [-90.082001, 30.020859], [-90.081812, 30.020883], [-90.081562, 30.020912], [-90.081102, 30.020936], [-90.079797, 30.021015], [-90.079424, 30.021039], [-90.07844, 30.021099], [-90.077492, 30.021168], [-90.076475, 30.021218], [-90.075626, 30.021258], [-90.075379, 30.021277], [-90.075232, 30.021288], [-90.075066, 30.021305], [-90.074914, 30.02133], [-90.074828, 30.021351], [-90.074419, 30.021441], [-90.07422, 30.021474], [-90.074043, 30.021491], [-90.073886, 30.021499], [-90.073771, 30.021498], [-90.073618, 30.021486], [-90.07359, 30.021482], [-90.073533, 30.021475], [-90.073359, 30.021459], [-90.073188, 30.021442], [-90.072943, 30.021436], [-90.072799, 30.021435], [-90.072535, 30.021446], [-90.072258, 30.021463], [-90.071637, 30.021458], [-90.070799, 30.021408]]]]
    },
    "properties": {
      "neighbourhood": "Fillmore",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.012031, 29.945941], [-90.012063, 29.945874], [-90.00188, 29.939968], [-90.00188, 29.939968], [-90.00124, 29.939569], [-89.998612, 29.937932], [-89.994425, 29.935335], [-89.990926, 29.933293], [-89.990906, 29.933281], [-89.989467, 29.932459], [-89.988126, 29.931696], [-89.986572, 29.930921], [-89.985511, 29.930402], [-89.985051, 29.930196], [-89.985051, 29.930173], [-89.984992, 29.926297], [-89.984936, 29.925736], [-89.984927, 29.925642], [-89.984897, 29.925348], [-89.984937, 29.92489], [-89.985, 29.924411], [-89.985039, 29.92409], [-89.98506, 29.92392], [-89.985111, 29.923415], [-89.985142, 29.923169], [-89.985268, 29.922245], [-89.985376, 29.921343], [-89.985488, 29.920446], [-89.985513, 29.920265], [-89.985526, 29.920169], [-89.985612, 29.919548], [-89.985707, 29.91863], [-89.985803, 29.917698], [-89.985904, 29.916891], [-89.985955, 29.916646], [-89.985983, 29.916484], [-89.986012, 29.916344], [-89.986033, 29.916218], [-89.986111, 29.915505], [-89.986205, 29.914773], [-89.986311, 29.913967], [-89.986407, 29.913291], [-89.986454, 29.912802], [-89.986492, 29.912473], [-89.986553, 29.911867], [-89.986578, 29.911653], [-89.986638, 29.911161], [-89.986682, 29.910706], [-89.98672, 29.910396], [-89.986784, 29.909916], [-89.986951, 29.908677], [-89.987014, 29.908085], [-89.987212, 29.907351], [-89.987288, 29.907069], [-89.987235, 29.906851], [-89.987832, 29.907471], [-89.987944, 29.907587], [-89.988212, 29.907868], [-89.988359, 29.908025], [-89.988514, 29.908157], [-89.988845, 29.908412], [-89.989093, 29.908555], [-89.989328, 29.908676], [-89.989549, 29.908773], [-89.989583, 29.908785], [-89.989727, 29.908837], [-89.989949, 29.9089], [-89.99019, 29.908955], [-89.990398, 29.908996], [-89.990625, 29.909013], [-89.990889, 29.909023], [-89.991248, 29.909049], [-89.991606, 29.909047], [-89.992048, 29.909064], [-89.99253, 29.909047], [-89.993214, 29.908724], [-89.993376, 29.908647], [-89.993856, 29.908724], [-89.994406, 29.908812], [-89.995056, 29.908875], [-89.995372, 29.908955], [-89.99549, 29.908991], [-89.99568, 29.909048], [-89.995967, 29.909161], [-89.996416, 29.909325], [-89.997044, 29.909694], [-89.998162, 29.910412], [-89.998889, 29.910897], [-90.000909, 29.912243], [-90.001273, 29.912486], [-90.002061, 29.912975], [-90.002857, 29.913486], [-90.003014, 29.91358], [-90.003562, 29.913907], [-90.00416, 29.91425], [-90.00425, 29.914308], [-90.004944, 29.914676], [-90.005273, 29.91485], [-90.005596, 29.915021], [-90.006354, 29.915428], [-90.006846, 29.915634], [-90.007124, 29.915728], [-90.007323, 29.915805], [-90.007609, 29.915954], [-90.00826, 29.916342], [-90.008485, 29.916471], [-90.008711, 29.916614], [-90.008942, 29.916769], [-90.009179, 29.91694], [-90.009404, 29.917138], [-90.009545, 29.917297], [-90.009737, 29.91749], [-90.009873, 29.91758], [-90.010696, 29.918089], [-90.011249, 29.918484], [-90.011373, 29.918586], [-90.011524, 29.91872], [-90.012023, 29.919166], [-90.012173, 29.919284], [-90.012421, 29.919479], [-90.012708, 29.91968], [-90.013182, 29.920004], [-90.013278, 29.920063], [-90.014549, 29.920843], [-90.014708, 29.920941], [-90.014485, 29.921202], [-90.014908, 29.921453], [-90.014938, 29.921578], [-90.014954, 29.921683], [-90.014956, 29.921749], [-90.014949, 29.921847], [-90.014887, 29.922179], [-90.014859, 29.922255], [-90.014835, 29.922331], [-90.014818, 29.922404], [-90.014768, 29.922812], [-90.014688, 29.923487], [-90.01461, 29.924049], [-90.014573, 29.924409], [-90.014553, 29.924611], [-90.014504, 29.926194], [-90.014432, 29.927264], [-90.014385, 29.927969], [-90.014275, 29.929741], [-90.014156, 29.931524], [-90.014155, 29.93154], [-90.014049, 29.933302], [-90.01404, 29.93345], [-90.01395, 29.934882], [-90.01397, 29.934998], [-90.014021, 29.935095], [-90.014107, 29.935204], [-90.014173, 29.93529], [-90.014262, 29.935341], [-90.014369, 29.935378], [-90.014471, 29.935407], [-90.014651, 29.935425], [-90.014596, 29.936997], [-90.014418, 29.94003], [-90.014353, 29.940979], [-90.014256, 29.942401], [-90.014914, 29.942983], [-90.013871, 29.947003], [-90.012102, 29.94598], [-90.012031, 29.945941]]]]
    },
    "properties": {
      "neighbourhood": "Old Aurora",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.119424, 29.949534], [-90.12008, 29.948735], [-90.120691, 29.947905], [-90.121338, 29.947127], [-90.121965, 29.946267], [-90.122555, 29.945555], [-90.123235, 29.944696], [-90.123862, 29.943849], [-90.124437, 29.943193], [-90.125085, 29.942369], [-90.125672, 29.941515], [-90.126331, 29.940679], [-90.126902, 29.939953], [-90.127584, 29.939171], [-90.128148, 29.938295], [-90.12854, 29.938576], [-90.129381, 29.939253], [-90.130151, 29.939925], [-90.130897, 29.940492], [-90.131706, 29.941145], [-90.132485, 29.941803], [-90.132895, 29.942142], [-90.133249, 29.942437], [-90.134011, 29.943062], [-90.133323, 29.943789], [-90.13264, 29.944434], [-90.1319, 29.945141], [-90.131175, 29.94583], [-90.130394, 29.946507], [-90.129599, 29.947204], [-90.128865, 29.947924], [-90.128119, 29.948633], [-90.127342, 29.949365], [-90.126626, 29.950093], [-90.125851, 29.950815], [-90.125093, 29.951528], [-90.124317, 29.952169], [-90.123561, 29.952882], [-90.12278, 29.952222], [-90.121995, 29.951614], [-90.121193, 29.950997], [-90.120394, 29.950323], [-90.119659, 29.949725], [-90.119424, 29.949534]]]]
    },
    "properties": {
      "neighbourhood": "East Carrollton",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.078176, 29.975992], [-90.078676, 29.975416], [-90.078941, 29.975115], [-90.079412, 29.974567], [-90.079811, 29.974128], [-90.080037, 29.973867], [-90.080086, 29.973811], [-90.080793, 29.973004], [-90.081547, 29.972115], [-90.082273, 29.971282], [-90.08272, 29.970765], [-90.08279, 29.970686], [-90.083134, 29.9703], [-90.083817, 29.969512], [-90.084115, 29.969167], [-90.084296, 29.968889], [-90.084449, 29.968699], [-90.084569, 29.968558], [-90.084828, 29.968724], [-90.086124, 29.969557], [-90.087046, 29.970049], [-90.087915, 29.970576], [-90.088756, 29.971153], [-90.089438, 29.97154], [-90.09038, 29.97209], [-90.091344, 29.97266], [-90.09124, 29.97277], [-90.091213, 29.972798], [-90.091312, 29.972902], [-90.091612, 29.973229], [-90.091562, 29.973308], [-90.091456, 29.973266], [-90.091406, 29.973367], [-90.091275, 29.973315], [-90.091274, 29.973314], [-90.09114, 29.973635], [-90.090937, 29.974092], [-90.090886, 29.974577], [-90.090608, 29.975258], [-90.090396, 29.975774], [-90.090381, 29.975815], [-90.090354, 29.975868], [-90.090409, 29.975931], [-90.090311, 29.976011], [-90.090255, 29.976268], [-90.090194, 29.97652], [-90.090071, 29.976761], [-90.089695, 29.97723], [-90.089425, 29.977478], [-90.08921, 29.977653], [-90.088731, 29.978114], [-90.088466, 29.978361], [-90.088169, 29.978784], [-90.08776, 29.979445], [-90.087568, 29.979889], [-90.087551, 29.98014], [-90.087896, 29.980376], [-90.088257, 29.980633], [-90.088746, 29.980954], [-90.089092, 29.981182], [-90.089998, 29.981877], [-90.090464, 29.9826], [-90.090343, 29.982891], [-90.089966, 29.983058], [-90.089605, 29.983385], [-90.089401, 29.983706], [-90.089392, 29.983723], [-90.089384, 29.983746], [-90.08937, 29.983772], [-90.089135, 29.983629], [-90.089017, 29.983462], [-90.08841, 29.983062], [-90.087778, 29.982611], [-90.08667, 29.981853], [-90.086147, 29.981478], [-90.085755, 29.981224], [-90.08553, 29.981076], [-90.084813, 29.980584], [-90.084621, 29.980448], [-90.083776, 29.979855], [-90.083353, 29.979568], [-90.082902, 29.979245], [-90.08241, 29.978915], [-90.081438, 29.978212], [-90.080456, 29.977569], [-90.080049, 29.977301], [-90.079472, 29.976942], [-90.07854, 29.976264], [-90.078381, 29.976145], [-90.078176, 29.975992]]]]
    },
    "properties": {
      "neighbourhood": "Bayou St. John",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.07268, 29.957116], [-90.072448, 29.956945], [-90.071969, 29.956634], [-90.071862, 29.956559], [-90.070933, 29.955922], [-90.069969, 29.95529], [-90.069083, 29.954678], [-90.068174, 29.954052], [-90.067708, 29.953736], [-90.067295, 29.953454], [-90.066651, 29.953035], [-90.066265, 29.952768], [-90.067002, 29.951924], [-90.065962, 29.951255], [-90.065674, 29.951072], [-90.064969, 29.950637], [-90.064462, 29.950318], [-90.064079, 29.950055], [-90.063772, 29.949803], [-90.062556, 29.94986], [-90.058572, 29.949979], [-90.058572, 29.946505], [-90.058547, 29.945334], [-90.058489, 29.944558], [-90.058658, 29.944718], [-90.058562, 29.944252], [-90.058417, 29.943306], [-90.058373, 29.943013], [-90.058372, 29.943009], [-90.058199, 29.941872], [-90.05814, 29.941377], [-90.057886, 29.939231], [-90.057932, 29.938016], [-90.057982, 29.938015], [-90.060915, 29.937968], [-90.062013, 29.937924], [-90.062511, 29.937917], [-90.062476, 29.938605], [-90.062038, 29.938588], [-90.062043, 29.939022], [-90.062052, 29.939861], [-90.062772, 29.940304], [-90.062824, 29.941139], [-90.063018, 29.943951], [-90.063566, 29.944084], [-90.064068, 29.944182], [-90.064175, 29.944201], [-90.064531, 29.944269], [-90.065234, 29.944435], [-90.065828, 29.944575], [-90.066581, 29.94474], [-90.067452, 29.944936], [-90.0683, 29.945115], [-90.06918, 29.945312], [-90.069633, 29.943812], [-90.069952, 29.942757], [-90.070189, 29.941946], [-90.070435, 29.941182], [-90.070448, 29.941125], [-90.07048, 29.940981], [-90.070525, 29.940783], [-90.070555, 29.940651], [-90.071044, 29.940915], [-90.071716, 29.941254], [-90.071909, 29.941356], [-90.072056, 29.94143], [-90.07246, 29.941651], [-90.07313, 29.942067], [-90.073339, 29.942173], [-90.073968, 29.942538], [-90.074502, 29.942816], [-90.075688, 29.943478], [-90.076885, 29.944139], [-90.077019, 29.944211], [-90.077337, 29.944384], [-90.07784, 29.944624], [-90.077984, 29.944687], [-90.078188, 29.944776], [-90.07898, 29.945215], [-90.079402, 29.945441], [-90.079843, 29.945719], [-90.080373, 29.946053], [-90.081351, 29.946627], [-90.082026, 29.947095], [-90.082859, 29.947623], [-90.082959, 29.947685], [-90.083028, 29.94776], [-90.083128, 29.947852], [-90.083562, 29.948154], [-90.084075, 29.948575], [-90.084253, 29.948739], [-90.084327, 29.948845], [-90.084629, 29.949315], [-90.08473, 29.949551], [-90.084911, 29.949896], [-90.085093, 29.950244], [-90.085116, 29.950288], [-90.085202, 29.950452], [-90.085107, 29.950529], [-90.085041, 29.950613], [-90.084889, 29.950798], [-90.084475, 29.951312], [-90.084365, 29.95146], [-90.083909, 29.951977], [-90.083461, 29.952494], [-90.082676, 29.953406], [-90.082501, 29.953577], [-90.082433, 29.953645], [-90.081547, 29.95458], [-90.080567, 29.955656], [-90.079625, 29.956739], [-90.079548, 29.956825], [-90.079205, 29.957207], [-90.078476, 29.958057], [-90.078247, 29.958284], [-90.07768, 29.958892], [-90.077534, 29.959055], [-90.076793, 29.959894], [-90.076041, 29.959385], [-90.075266, 29.95885], [-90.074471, 29.958325], [-90.073735, 29.957798], [-90.073168, 29.957431], [-90.07268, 29.957116]]]]
    },
    "properties": {
      "neighbourhood": "Central Business District",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.098276, 29.951724], [-90.097839, 29.951496], [-90.097617, 29.95138], [-90.097029, 29.951051], [-90.096007, 29.950471], [-90.095601, 29.950257], [-90.095081, 29.949968], [-90.094738, 29.949781], [-90.094146, 29.949457], [-90.093334, 29.948995], [-90.09314, 29.948891], [-90.092285, 29.948398], [-90.091357, 29.947888], [-90.090442, 29.947365], [-90.089527, 29.94685], [-90.088693, 29.946374], [-90.088359, 29.946189], [-90.088244, 29.946358], [-90.088193, 29.946429], [-90.087736, 29.946981], [-90.08727, 29.947698], [-90.086631, 29.94849], [-90.086068, 29.949287], [-90.085978, 29.949405], [-90.085771, 29.949699], [-90.085698, 29.949796], [-90.085632, 29.949893], [-90.085491, 29.950076], [-90.085202, 29.950452], [-90.085116, 29.950288], [-90.085093, 29.950244], [-90.084911, 29.949896], [-90.08473, 29.949551], [-90.084629, 29.949315], [-90.084327, 29.948845], [-90.084253, 29.948739], [-90.084075, 29.948575], [-90.083562, 29.948154], [-90.083128, 29.947852], [-90.083028, 29.94776], [-90.082959, 29.947685], [-90.082859, 29.947623], [-90.082026, 29.947095], [-90.081351, 29.946627], [-90.080373, 29.946053], [-90.079843, 29.945719], [-90.079402, 29.945441], [-90.07898, 29.945215], [-90.078188, 29.944776], [-90.077984, 29.944687], [-90.07784, 29.944624], [-90.077337, 29.944384], [-90.077019, 29.944211], [-90.076885, 29.944139], [-90.075688, 29.943478], [-90.074502, 29.942816], [-90.073968, 29.942538], [-90.073339, 29.942173], [-90.07313, 29.942067], [-90.07246, 29.941651], [-90.072056, 29.94143], [-90.071909, 29.941356], [-90.071716, 29.941254], [-90.071044, 29.940915], [-90.070555, 29.940651], [-90.070623, 29.940391], [-90.070661, 29.940279], [-90.070995, 29.93931], [-90.071296, 29.938237], [-90.072512, 29.938506], [-90.07272, 29.938503], [-90.073597, 29.939035], [-90.074072, 29.938342], [-90.074124, 29.938281], [-90.074578, 29.937655], [-90.074638, 29.937572], [-90.075144, 29.936903], [-90.075648, 29.936265], [-90.076296, 29.9354], [-90.076422, 29.935219], [-90.076819, 29.935607], [-90.077503, 29.936189], [-90.07804, 29.93574], [-90.078681, 29.935255], [-90.079571, 29.934643], [-90.080523, 29.934054], [-90.080597, 29.934007], [-90.081496, 29.933437], [-90.081994, 29.933147], [-90.082648, 29.932757], [-90.083389, 29.932295], [-90.084222, 29.931808], [-90.085034, 29.931367], [-90.085899, 29.930891], [-90.086569, 29.9305], [-90.087277, 29.930126], [-90.088085, 29.929658], [-90.088886, 29.929225], [-90.089258, 29.929035], [-90.090092, 29.92867], [-90.090182, 29.928632], [-90.090274, 29.928742], [-90.09057, 29.929282], [-90.090762, 29.929693], [-90.091173, 29.930575], [-90.091471, 29.931204], [-90.091559, 29.931399], [-90.091583, 29.931497], [-90.092014, 29.932371], [-90.092479, 29.933233], [-90.092883, 29.934156], [-90.093349, 29.935014], [-90.093785, 29.935927], [-90.094284, 29.935739], [-90.094873, 29.935522], [-90.094931, 29.935631], [-90.095314, 29.936422], [-90.095767, 29.937386], [-90.09619, 29.938306], [-90.09633, 29.938601], [-90.096396, 29.93887], [-90.096414, 29.938978], [-90.096418, 29.939076], [-90.096415, 29.93918], [-90.096409, 29.939303], [-90.09638, 29.9395], [-90.096341, 29.939632], [-90.096296, 29.939753], [-90.09617, 29.939996], [-90.096113, 29.940159], [-90.096076, 29.940279], [-90.096044, 29.940406], [-90.096029, 29.940524], [-90.096026, 29.940811], [-90.096025, 29.941047], [-90.096038, 29.941238], [-90.09607, 29.941468], [-90.09612, 29.941628], [-90.096169, 29.941781], [-90.096588, 29.942694], [-90.097021, 29.943564], [-90.097445, 29.944369], [-90.097848, 29.945231], [-90.098209, 29.945996], [-90.098289, 29.946153], [-90.098653, 29.946911], [-90.099066, 29.94774], [-90.099444, 29.948545], [-90.099826, 29.949434], [-90.099975, 29.949722], [-90.100043, 29.949854], [-90.100131, 29.950025], [-90.100555, 29.950846], [-90.100632, 29.950999], [-90.100928, 29.951695], [-90.101453, 29.952731], [-90.101995, 29.95366], [-90.102199, 29.953962], [-90.101917, 29.953752], [-90.101047, 29.953283], [-90.100165, 29.952789], [-90.09884, 29.952067], [-90.098494, 29.951857], [-90.098276, 29.951724]]]]
    },
    "properties": {
      "neighbourhood": "Central City",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.112146, 29.977315], [-90.111862, 29.976634], [-90.111541, 29.975728], [-90.111147, 29.974591], [-90.111049, 29.974351], [-90.110943, 29.97402], [-90.110443, 29.972549], [-90.110091, 29.971784], [-90.109652, 29.970973], [-90.109632, 29.97093], [-90.109517, 29.970682], [-90.109122, 29.969976], [-90.109088, 29.969875], [-90.108751, 29.969251], [-90.108608, 29.969034], [-90.108418, 29.96878], [-90.108272, 29.968612], [-90.107648, 29.968016], [-90.107523, 29.9679], [-90.107651, 29.967793], [-90.107685, 29.967763], [-90.107776, 29.967687], [-90.107874, 29.967604], [-90.107968, 29.96751], [-90.108324, 29.967155], [-90.108788, 29.966712], [-90.109265, 29.966263], [-90.109706, 29.965839], [-90.109855, 29.965702], [-90.110052, 29.96552], [-90.110207, 29.965666], [-90.110367, 29.965859], [-90.110419, 29.965923], [-90.110707, 29.966198], [-90.110901, 29.966365], [-90.111036, 29.966471], [-90.111122, 29.966546], [-90.11189, 29.967175], [-90.112717, 29.967828], [-90.113537, 29.968485], [-90.114323, 29.969148], [-90.11513, 29.969796], [-90.115916, 29.970477], [-90.116716, 29.97114], [-90.116845, 29.971248], [-90.117121, 29.971466], [-90.117288, 29.971613], [-90.118357, 29.972444], [-90.11915, 29.973078], [-90.119953, 29.973738], [-90.119876, 29.973809], [-90.119719, 29.973956], [-90.119095, 29.974555], [-90.11906, 29.97458], [-90.119017, 29.974593], [-90.118983, 29.974598], [-90.118954, 29.974597], [-90.118934, 29.974594], [-90.1189, 29.974584], [-90.118867, 29.974571], [-90.118798, 29.97452], [-90.118402, 29.974192], [-90.118184, 29.974011], [-90.117551, 29.974614], [-90.117512, 29.974645], [-90.117488, 29.974657], [-90.117421, 29.974664], [-90.117349, 29.974647], [-90.117305, 29.97462], [-90.117137, 29.974475], [-90.116639, 29.974053], [-90.115896, 29.974724], [-90.11511, 29.975463], [-90.114558, 29.975991], [-90.114397, 29.976139], [-90.113604, 29.976869], [-90.114428, 29.97756], [-90.113049, 29.977392], [-90.112606, 29.977338], [-90.112406, 29.977328], [-90.112307, 29.977323], [-90.112146, 29.977315]]]]
    },
    "properties": {
      "neighbourhood": "Dixon",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.014596, 29.936997], [-90.014651, 29.935425], [-90.014471, 29.935407], [-90.014369, 29.935378], [-90.014262, 29.935341], [-90.014173, 29.93529], [-90.014107, 29.935204], [-90.014021, 29.935095], [-90.01397, 29.934998], [-90.01395, 29.934882], [-90.01404, 29.93345], [-90.014049, 29.933302], [-90.014155, 29.93154], [-90.014156, 29.931524], [-90.014275, 29.929741], [-90.014385, 29.927969], [-90.014432, 29.927264], [-90.014504, 29.926194], [-90.014553, 29.924611], [-90.014573, 29.924409], [-90.01461, 29.924049], [-90.014688, 29.923487], [-90.014768, 29.922812], [-90.014818, 29.922404], [-90.014835, 29.922331], [-90.014859, 29.922255], [-90.014887, 29.922179], [-90.014949, 29.921847], [-90.014956, 29.921749], [-90.014954, 29.921683], [-90.014938, 29.921578], [-90.014908, 29.921453], [-90.014485, 29.921202], [-90.014708, 29.920941], [-90.015086, 29.92119], [-90.015158, 29.921236], [-90.015435, 29.921411], [-90.016687, 29.922196], [-90.016823, 29.922246], [-90.016884, 29.922265], [-90.016916, 29.922272], [-90.016954, 29.922277], [-90.017252, 29.922282], [-90.017396, 29.922285], [-90.017581, 29.922294], [-90.017666, 29.922307], [-90.017717, 29.92232], [-90.017772, 29.922343], [-90.017828, 29.922371], [-90.01788, 29.922411], [-90.018004, 29.922531], [-90.018425, 29.923023], [-90.018551, 29.923153], [-90.018663, 29.923251], [-90.018757, 29.923329], [-90.018834, 29.923389], [-90.018927, 29.923449], [-90.019069, 29.923537], [-90.019217, 29.923622], [-90.019975, 29.924036], [-90.02027, 29.924197], [-90.02036, 29.924252], [-90.020553, 29.924361], [-90.020704, 29.924439], [-90.020781, 29.924479], [-90.0209, 29.924534], [-90.021203, 29.924664], [-90.021569, 29.924813], [-90.021937, 29.924974], [-90.022349, 29.925155], [-90.022843, 29.925353], [-90.023395, 29.925574], [-90.024372, 29.926007], [-90.025341, 29.926408], [-90.026311, 29.926825], [-90.027273, 29.927233], [-90.027669, 29.9274], [-90.02825, 29.927646], [-90.028443, 29.927724], [-90.029038, 29.927966], [-90.029206, 29.928034], [-90.03018, 29.928442], [-90.030642, 29.928586], [-90.030715, 29.928609], [-90.031083, 29.928673], [-90.031239, 29.928707], [-90.031448, 29.92876], [-90.031553, 29.928805], [-90.031589, 29.92882], [-90.031837, 29.928924], [-90.031961, 29.928985], [-90.032193, 29.929121], [-90.032465, 29.9293], [-90.033032, 29.929711], [-90.033486, 29.929928], [-90.033824, 29.930029], [-90.03424, 29.930125], [-90.034745, 29.930244], [-90.035074, 29.930282], [-90.035449, 29.930308], [-90.036253, 29.930336], [-90.03746, 29.930494], [-90.037575, 29.930509], [-90.03774, 29.930531], [-90.037912, 29.930544], [-90.037961, 29.930547], [-90.038026, 29.930551], [-90.038391, 29.930571], [-90.038275, 29.931925], [-90.038187, 29.933123], [-90.038164, 29.933478], [-90.03817, 29.93368], [-90.03822, 29.934181], [-90.038247, 29.934358], [-90.03831, 29.934763], [-90.038321, 29.934834], [-90.038389, 29.935152], [-90.03855, 29.935537], [-90.038719, 29.93583], [-90.03887, 29.936045], [-90.039241, 29.936501], [-90.039409, 29.936656], [-90.039658, 29.936852], [-90.039986, 29.937089], [-90.040323, 29.937294], [-90.040756, 29.937513], [-90.04121, 29.937687], [-90.040512, 29.93767], [-90.039613, 29.937649], [-90.039455, 29.937645], [-90.03838, 29.937619], [-90.037771, 29.937604], [-90.037476, 29.93758], [-90.037567, 29.937624], [-90.037601, 29.937664], [-90.037607, 29.937701], [-90.037597, 29.937727], [-90.037576, 29.937783], [-90.037492, 29.937873], [-90.037401, 29.937951], [-90.037317, 29.938054], [-90.037286, 29.938218], [-90.037286, 29.938223], [-90.037249, 29.938477], [-90.037238, 29.938735], [-90.038284, 29.938771], [-90.039278, 29.938824], [-90.039222, 29.93981], [-90.03913, 29.940825], [-90.039065, 29.941842], [-90.038971, 29.942896], [-90.038905, 29.943972], [-90.038826, 29.94506], [-90.03782, 29.944997], [-90.036815, 29.944975], [-90.03667, 29.944994], [-90.03662, 29.945], [-90.035839, 29.944974], [-90.035516, 29.944956], [-90.034607, 29.944921], [-90.033703, 29.944866], [-90.033334, 29.944833], [-90.033065, 29.944779], [-90.032586, 29.944613], [-90.031497, 29.944185], [-90.031345, 29.944124], [-90.030528, 29.943793], [-90.030112, 29.943644], [-90.029681, 29.943489], [-90.029564, 29.943436], [-90.02844, 29.943004], [-90.027783, 29.942753], [-90.027648, 29.942701], [-90.0275, 29.942644], [-90.027347, 29.942586], [-90.02626, 29.942185], [-90.025856, 29.941978], [-90.025174, 29.941638], [-90.024376, 29.941308], [-90.024263, 29.941258], [-90.023529, 29.940941], [-90.022535, 29.940506], [-90.021382, 29.940005], [-90.020294, 29.939511], [-90.019504, 29.939165], [-90.019109, 29.939005], [-90.017896, 29.938463], [-90.01637, 29.937788], [-90.014596, 29.936997]]]]
    },
    "properties": {
      "neighbourhood": "Behrman",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.128148, 29.938295], [-90.128229, 29.93821], [-90.128834, 29.937573], [-90.129435, 29.936768], [-90.129561, 29.936661], [-90.130015, 29.936081], [-90.130188, 29.935887], [-90.130672, 29.935279], [-90.130789, 29.935119], [-90.131284, 29.934525], [-90.1319, 29.933701], [-90.132531, 29.932923], [-90.133132, 29.932148], [-90.132393, 29.931681], [-90.131642, 29.931236], [-90.132182, 29.930535], [-90.132771, 29.929688], [-90.133427, 29.928883], [-90.133583, 29.928703], [-90.133718, 29.928507], [-90.135543, 29.926105], [-90.138886, 29.921522], [-90.138978, 29.921396], [-90.139168, 29.922931], [-90.139274, 29.924904], [-90.139274, 29.924904], [-90.139274, 29.924904], [-90.139224, 29.927924], [-90.139137, 29.930303], [-90.13911, 29.931055], [-90.139109, 29.931072], [-90.139004, 29.933023], [-90.138961, 29.933818], [-90.138823, 29.935727], [-90.138919, 29.937438], [-90.138974, 29.938404], [-90.138974, 29.938404], [-90.13607, 29.941145], [-90.13534, 29.9418], [-90.134752, 29.942327], [-90.134653, 29.942454], [-90.134516, 29.942526], [-90.134407, 29.942629], [-90.134204, 29.942815], [-90.134106, 29.94293], [-90.134061, 29.942983], [-90.134011, 29.943062], [-90.133249, 29.942437], [-90.132895, 29.942142], [-90.132485, 29.941803], [-90.131706, 29.941145], [-90.130897, 29.940492], [-90.130151, 29.939925], [-90.129381, 29.939253], [-90.12854, 29.938576], [-90.128148, 29.938295]]]]
    },
    "properties": {
      "neighbourhood": "Black Pearl",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.101453, 29.952731], [-90.100928, 29.951695], [-90.100632, 29.950999], [-90.100555, 29.950846], [-90.100131, 29.950025], [-90.100043, 29.949854], [-90.099975, 29.949722], [-90.099826, 29.949434], [-90.099444, 29.948545], [-90.099066, 29.94774], [-90.098653, 29.946911], [-90.098289, 29.946153], [-90.098209, 29.945996], [-90.097848, 29.945231], [-90.097445, 29.944369], [-90.097021, 29.943564], [-90.096588, 29.942694], [-90.096169, 29.941781], [-90.09612, 29.941628], [-90.09607, 29.941468], [-90.096249, 29.941372], [-90.097451, 29.94087], [-90.097574, 29.940824], [-90.098135, 29.940615], [-90.098539, 29.940481], [-90.09887, 29.94043], [-90.099852, 29.940352], [-90.101074, 29.940259], [-90.102182, 29.940165], [-90.103065, 29.940112], [-90.103305, 29.940097], [-90.103541, 29.940075], [-90.104703, 29.939995], [-90.105808, 29.939895], [-90.106265, 29.939864], [-90.106532, 29.939859], [-90.106746, 29.939872], [-90.107028, 29.939922], [-90.107211, 29.939977], [-90.107545, 29.940129], [-90.107772, 29.940248], [-90.108055, 29.940417], [-90.108354, 29.940589], [-90.108952, 29.940934], [-90.109514, 29.941278], [-90.109632, 29.94135], [-90.10954, 29.941667], [-90.109329, 29.942408], [-90.109076, 29.943329], [-90.10884, 29.944283], [-90.10863, 29.945173], [-90.108347, 29.946104], [-90.108235, 29.946087], [-90.107793, 29.946018], [-90.107775, 29.946394], [-90.107761, 29.946924], [-90.109044, 29.94716], [-90.110048, 29.947375], [-90.11025, 29.947429], [-90.109934, 29.948303], [-90.109599, 29.949237], [-90.109267, 29.950117], [-90.108947, 29.951021], [-90.108642, 29.950959], [-90.10811, 29.950841], [-90.108067, 29.950962], [-90.107843, 29.951732], [-90.107621, 29.952629], [-90.107487, 29.953063], [-90.107151, 29.953493], [-90.106926, 29.953781], [-90.106581, 29.954365], [-90.106533, 29.954358], [-90.106507, 29.954358], [-90.106472, 29.954368], [-90.106374, 29.954464], [-90.105941, 29.955147], [-90.104903, 29.954596], [-90.103953, 29.954048], [-90.103285, 29.953681], [-90.102388, 29.953169], [-90.101799, 29.952891], [-90.101453, 29.952731]]]]
    },
    "properties": {
      "neighbourhood": "Broadmoor",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.021871, 29.980672], [-90.024142, 29.973704], [-90.024777, 29.971759], [-90.025615, 29.969081], [-90.025645, 29.968995], [-90.025733, 29.968741], [-90.026526, 29.966466], [-90.027264, 29.96427], [-90.027371, 29.963903], [-90.027396, 29.963836], [-90.02743, 29.963741], [-90.028571, 29.959903], [-90.027856, 29.957382], [-90.026671, 29.953203], [-90.032744, 29.955068], [-90.036764, 29.956302], [-90.038071, 29.956703], [-90.041571, 29.957503], [-90.041653, 29.957516], [-90.045372, 29.958103], [-90.047431, 29.958185], [-90.051901, 29.958364], [-90.052331, 29.958381], [-90.052472, 29.961303], [-90.052472, 29.961703], [-90.052469, 29.961871], [-90.052266, 29.962126], [-90.052006, 29.962896], [-90.05171, 29.963898], [-90.051372, 29.964903], [-90.0511, 29.965819], [-90.051069, 29.965938], [-90.050818, 29.966775], [-90.050776, 29.966918], [-90.050515, 29.967741], [-90.050451, 29.967936], [-90.050143, 29.968937], [-90.050083, 29.969104], [-90.04968, 29.969012], [-90.049154, 29.968891], [-90.048222, 29.968672], [-90.047253, 29.96846], [-90.047023, 29.96841], [-90.045951, 29.968172], [-90.045029, 29.96796], [-90.044182, 29.967756], [-90.044227, 29.967602], [-90.044572, 29.966403], [-90.044874, 29.965429], [-90.043126, 29.96503], [-90.042264, 29.964824], [-90.04115, 29.964586], [-90.040264, 29.964377], [-90.039466, 29.964198], [-90.038712, 29.964029], [-90.037917, 29.963843], [-90.037031, 29.963647], [-90.036063, 29.963427], [-90.035095, 29.963217], [-90.03421, 29.963009], [-90.033229, 29.962789], [-90.032935, 29.963765], [-90.032573, 29.964962], [-90.032525, 29.96512], [-90.032299, 29.965906], [-90.031989, 29.966952], [-90.03166, 29.967997], [-90.031342, 29.969021], [-90.03105, 29.970068], [-90.030724, 29.971108], [-90.030429, 29.97214], [-90.030117, 29.973184], [-90.029931, 29.973737], [-90.029763, 29.974235], [-90.029455, 29.975269], [-90.030449, 29.975497], [-90.031367, 29.975679], [-90.031055, 29.976726], [-90.030729, 29.977775], [-90.030424, 29.978811], [-90.03011, 29.979835], [-90.030032, 29.980121], [-90.029939, 29.980463], [-90.029815, 29.980875], [-90.02949, 29.98193], [-90.029539, 29.982007], [-90.029625, 29.982108], [-90.029373, 29.982037], [-90.029442, 29.982099], [-90.02962, 29.982293], [-90.029626, 29.982301], [-90.029793, 29.982505], [-90.029652, 29.982474], [-90.029287, 29.982395], [-90.028334, 29.982169], [-90.028115, 29.982119], [-90.02672, 29.981807], [-90.025683, 29.981571], [-90.022806, 29.980936], [-90.022002, 29.980759], [-90.021871, 29.980672]]]]
    },
    "properties": {
      "neighbourhood": "Bywater",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.085375, 29.999445], [-90.085375, 29.999383], [-90.085375, 29.99932], [-90.085378, 29.999088], [-90.08538, 29.998815], [-90.085379, 29.998677], [-90.085352, 29.998174], [-90.085071, 29.997223], [-90.084922, 29.996614], [-90.084916, 29.99659], [-90.085331, 29.995925], [-90.085633, 29.99535], [-90.085869, 29.99457], [-90.085904, 29.993863], [-90.086094, 29.993351], [-90.086121, 29.993121], [-90.086148, 29.993054], [-90.086168, 29.992979], [-90.086235, 29.992862], [-90.086281, 29.992747], [-90.086291, 29.992683], [-90.086382, 29.99248], [-90.086458, 29.992336], [-90.086468, 29.992003], [-90.086483, 29.991727], [-90.08672, 29.991347], [-90.086958, 29.990957], [-90.087074, 29.990664], [-90.087089, 29.990313], [-90.087145, 29.989919], [-90.087251, 29.989565], [-90.087291, 29.989261], [-90.087375, 29.989068], [-90.087664, 29.988693], [-90.08784, 29.988339], [-90.08784, 29.98797], [-90.08768, 29.987449], [-90.087704, 29.98713], [-90.088033, 29.986629], [-90.088466, 29.986296], [-90.088851, 29.985809], [-90.088955, 29.985399], [-90.089068, 29.984663], [-90.089188, 29.984044], [-90.08937, 29.983772], [-90.089384, 29.983746], [-90.089392, 29.983723], [-90.089401, 29.983706], [-90.089605, 29.983385], [-90.089966, 29.983058], [-90.090343, 29.982891], [-90.090464, 29.9826], [-90.089998, 29.981877], [-90.089092, 29.981182], [-90.088746, 29.980954], [-90.088257, 29.980633], [-90.087896, 29.980376], [-90.087551, 29.98014], [-90.087568, 29.979889], [-90.08776, 29.979445], [-90.088169, 29.978784], [-90.088466, 29.978361], [-90.088731, 29.978114], [-90.08921, 29.977653], [-90.089425, 29.977478], [-90.089695, 29.97723], [-90.090071, 29.976761], [-90.090194, 29.97652], [-90.090255, 29.976268], [-90.090311, 29.976011], [-90.090409, 29.975931], [-90.090815, 29.976218], [-90.090889, 29.976308], [-90.090948, 29.976382], [-90.091146, 29.976612], [-90.091201, 29.976674], [-90.091271, 29.976735], [-90.091435, 29.976856], [-90.091464, 29.976875], [-90.091726, 29.977052], [-90.092164, 29.977348], [-90.092219, 29.977385], [-90.092971, 29.977888], [-90.0937, 29.978365], [-90.093776, 29.978417], [-90.09433, 29.978784], [-90.094525, 29.978923], [-90.09525, 29.979418], [-90.095397, 29.979518], [-90.095673, 29.979264], [-90.095532, 29.979171], [-90.095888, 29.978837], [-90.096673, 29.978103], [-90.096802, 29.978197], [-90.097874, 29.978911], [-90.098797, 29.979539], [-90.099755, 29.980157], [-90.100681, 29.980783], [-90.101573, 29.981403], [-90.101951, 29.981663], [-90.102489, 29.982018], [-90.103422, 29.982616], [-90.10437, 29.983262], [-90.105011, 29.983735], [-90.105086, 29.983791], [-90.103893, 29.984095], [-90.103839, 29.984109], [-90.102734, 29.984121], [-90.102553, 29.98559], [-90.102449, 29.986432], [-90.102395, 29.986873], [-90.102112, 29.989165], [-90.101978, 29.990195], [-90.101949, 29.990466], [-90.101917, 29.990773], [-90.101906, 29.990873], [-90.101884, 29.991122], [-90.101854, 29.991374], [-90.101851, 29.991409], [-90.101809, 29.991768], [-90.101649, 29.993224], [-90.101587, 29.9937], [-90.101538, 29.994021], [-90.101483, 29.994574], [-90.101455, 29.994859], [-90.101457, 29.995024], [-90.101263, 29.996718], [-90.101051, 29.998571], [-90.100842, 30.00034], [-90.100639, 30.00215], [-90.100414, 30.004029], [-90.100152, 30.006138], [-90.099957, 30.007958], [-90.099747, 30.009747], [-90.099545, 30.011555], [-90.09931, 30.013358], [-90.099109, 30.015115], [-90.098913, 30.016969], [-90.09869, 30.018427], [-90.098672, 30.018604], [-90.098661, 30.018682], [-90.098675, 30.018816], [-90.098684, 30.018909], [-90.098519, 30.018901], [-90.098156, 30.018874], [-90.097903, 30.018856], [-90.097523, 30.018831], [-90.097401, 30.018826], [-90.097044, 30.018834], [-90.096867, 30.018841], [-90.096736, 30.018834], [-90.096593, 30.018824], [-90.096274, 30.018781], [-90.095984, 30.018756], [-90.095506, 30.018716], [-90.094788, 30.018672], [-90.094262, 30.018615], [-90.093772, 30.018542], [-90.093631, 30.018536], [-90.093111, 30.018535], [-90.092753, 30.018557], [-90.092074, 30.018566], [-90.09162, 30.018618], [-90.091079, 30.01868], [-90.090753, 30.018736], [-90.090396, 30.018797], [-90.090046, 30.01889], [-90.089836, 30.018946], [-90.089393, 30.019097], [-90.088813, 30.019327], [-90.088484, 30.019468], [-90.088378, 30.019513], [-90.087889, 30.019714], [-90.087409, 30.01993], [-90.087376, 30.019945], [-90.086821, 30.020184], [-90.086254, 30.020428], [-90.08602, 30.020507], [-90.085953, 30.02053], [-90.085668, 30.02062], [-90.08537, 30.020683], [-90.085211, 30.020712], [-90.084768, 30.020772], [-90.08459, 30.020793], [-90.084359, 30.02082], [-90.084038, 30.020843], [-90.083929, 30.020851], [-90.083666, 30.020868], [-90.083574, 30.020868], [-90.083037, 30.020865], [-90.083125, 30.020685], [-90.084063, 30.018771], [-90.084084, 30.018105], [-90.084296, 30.015142], [-90.084882, 30.011105], [-90.08489, 30.010924], [-90.084992, 30.008471], [-90.085299, 30.006651], [-90.085308, 30.00385], [-90.08535, 30.002713], [-90.08505, 29.999724], [-90.085761, 29.999421], [-90.085375, 29.999445]]]]
    },
    "properties": {
      "neighbourhood": "City Park",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.021698, 29.980719], [-90.021871, 29.980672], [-90.022002, 29.980759], [-90.022806, 29.980936], [-90.025683, 29.981571], [-90.02672, 29.981807], [-90.028115, 29.982119], [-90.028334, 29.982169], [-90.029287, 29.982395], [-90.029652, 29.982474], [-90.029793, 29.982505], [-90.031241, 29.982837], [-90.032076, 29.983027], [-90.033728, 29.983401], [-90.035424, 29.98379], [-90.03659, 29.984055], [-90.037331, 29.984224], [-90.043188, 29.98554], [-90.043402, 29.985588], [-90.044002, 29.985733], [-90.044788, 29.986058], [-90.04487, 29.986122], [-90.04508, 29.986286], [-90.045025, 29.986428], [-90.044671, 29.987302], [-90.04484, 29.989621], [-90.044916, 29.990639], [-90.04499, 29.99165], [-90.045038, 29.992735], [-90.045069, 29.993185], [-90.045136, 29.993982], [-90.045246, 29.995281], [-90.045247, 29.995552], [-90.045271, 29.996202], [-90.045285, 29.996325], [-90.045332, 29.996752], [-90.045356, 29.996992], [-90.04537, 29.997157], [-90.045461, 29.997968], [-90.045524, 29.998757], [-90.045586, 29.999542], [-90.045651, 30.000355], [-90.045712, 30.001143], [-90.045794, 30.001953], [-90.045852, 30.002623], [-90.045862, 30.002736], [-90.045488, 30.002751], [-90.045403, 30.002752], [-90.045162, 30.00276], [-90.044447, 30.002803], [-90.044344, 30.002811], [-90.044132, 30.002827], [-90.043957, 30.002844], [-90.043564, 30.002898], [-90.043239, 30.002949], [-90.042967, 30.002999], [-90.04261, 30.003074], [-90.042287, 30.003163], [-90.04186, 30.003294], [-90.041554, 30.003406], [-90.041497, 30.003427], [-90.041295, 30.003506], [-90.040113, 30.003967], [-90.040016, 30.004004], [-90.03815, 30.004714], [-90.036384, 30.005387], [-90.03575, 30.005636], [-90.034175, 30.006256], [-90.032955, 30.00672], [-90.03234, 30.006954], [-90.031935, 30.007101], [-90.031656, 30.007198], [-90.031034, 30.007382], [-90.029912, 30.007648], [-90.029778, 30.00768], [-90.029573, 30.007737], [-90.028241, 30.008029], [-90.027532, 30.008185], [-90.027007, 30.008315], [-90.026966, 30.00818], [-90.026098, 30.005355], [-90.025912, 30.004747], [-90.025889, 30.00468], [-90.025878, 30.004647], [-90.025876, 30.004643], [-90.025863, 30.004619], [-90.025834, 30.004554], [-90.025827, 30.004527], [-90.025824, 30.004515], [-90.025343, 30.003228], [-90.025087, 30.002393], [-90.024281, 29.999754], [-90.022367, 29.993491], [-90.022146, 29.992768], [-90.021271, 29.989902], [-90.020271, 29.985902], [-90.02081, 29.984221], [-90.020828, 29.984165], [-90.021158, 29.98312], [-90.021407, 29.981823], [-90.021501, 29.981415], [-90.021578, 29.981061], [-90.021601, 29.980994], [-90.021611, 29.980964], [-90.021635, 29.980895], [-90.021698, 29.980719]]]]
    },
    "properties": {
      "neighbourhood": "Desire Area",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.05873, 29.990864], [-90.059921, 29.990777], [-90.06104, 29.990691], [-90.062178, 29.990624], [-90.063182, 29.990577], [-90.063435, 29.990568], [-90.064464, 29.990508], [-90.064671, 29.990503], [-90.064738, 29.990491], [-90.064801, 29.990467], [-90.06485, 29.990439], [-90.064903, 29.990402], [-90.064973, 29.990335], [-90.065197, 29.990296], [-90.065654, 29.990423], [-90.06614, 29.990392], [-90.066805, 29.990352], [-90.067274, 29.99032], [-90.067513, 29.990303], [-90.06787, 29.990278], [-90.067973, 29.990273], [-90.068229, 29.990261], [-90.069398, 29.990199], [-90.069421, 29.990589], [-90.069434, 29.990817], [-90.069547, 29.990808], [-90.069724, 29.990804], [-90.069987, 29.990801], [-90.070253, 29.99081], [-90.070398, 29.990827], [-90.070718, 29.990863], [-90.070842, 29.990881], [-90.071268, 29.990951], [-90.071415, 29.990982], [-90.071527, 29.991015], [-90.0717, 29.991074], [-90.072552, 29.991411], [-90.072783, 29.991505], [-90.072909, 29.991544], [-90.073016, 29.99158], [-90.073262, 29.991664], [-90.07326, 29.991685], [-90.073281, 29.991849], [-90.073293, 29.992015], [-90.07336, 29.993029], [-90.073437, 29.994028], [-90.073513, 29.995031], [-90.073594, 29.996043], [-90.073672, 29.997053], [-90.073739, 29.997911], [-90.073752, 29.998072], [-90.073843, 29.999078], [-90.073884, 29.999664], [-90.07393, 30.000096], [-90.073965, 30.000598], [-90.073977, 30.000762], [-90.074011, 30.001111], [-90.074084, 30.002134], [-90.073861, 30.002165], [-90.073856, 30.002167], [-90.073784, 30.002191], [-90.073722, 30.002219], [-90.073617, 30.002279], [-90.07267, 30.00304], [-90.071421, 30.004155], [-90.070973, 30.004518], [-90.070686, 30.004763], [-90.070017, 30.005277], [-90.069495, 30.005385], [-90.06969, 30.007538], [-90.0697, 30.00765], [-90.069399, 30.00767], [-90.068576, 30.007726], [-90.067033, 30.007832], [-90.065858, 30.007912], [-90.064794, 30.007993], [-90.064589, 30.008006], [-90.063572, 30.00807], [-90.062436, 30.008129], [-90.061309, 30.008189], [-90.060141, 30.008251], [-90.060128, 30.00811], [-90.06003, 30.007056], [-90.059958, 30.006049], [-90.059861, 30.005024], [-90.059777, 30.004012], [-90.059711, 30.002996], [-90.05963, 30.001983], [-90.059545, 30.000969], [-90.059455, 29.999971], [-90.059424, 29.999604], [-90.05941, 29.999446], [-90.059365, 29.998951], [-90.059353, 29.998781], [-90.059291, 29.997914], [-90.059204, 29.996921], [-90.059127, 29.995905], [-90.059056, 29.994904], [-90.058976, 29.9939], [-90.058882, 29.992882], [-90.058794, 29.991855], [-90.058801, 29.99168], [-90.058798, 29.991576], [-90.058787, 29.991428], [-90.058765, 29.991209], [-90.05873, 29.990864]]]]
    },
    "properties": {
      "neighbourhood": "Dillard",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.103305, 29.940097], [-90.103222, 29.939099], [-90.103125, 29.938121], [-90.103073, 29.93728], [-90.102929, 29.936222], [-90.102837, 29.935266], [-90.102752, 29.934313], [-90.102971, 29.934294], [-90.104111, 29.934194], [-90.105226, 29.934126], [-90.106356, 29.934028], [-90.107325, 29.933943], [-90.108414, 29.933954], [-90.109371, 29.93404], [-90.110293, 29.934073], [-90.110519, 29.934096], [-90.111371, 29.934239], [-90.11152, 29.934264], [-90.11127, 29.935192], [-90.110999, 29.936184], [-90.110759, 29.937107], [-90.110545, 29.937867], [-90.110312, 29.938754], [-90.11007, 29.939718], [-90.109842, 29.94059], [-90.109632, 29.94135], [-90.109514, 29.941278], [-90.108952, 29.940934], [-90.108354, 29.940589], [-90.108055, 29.940417], [-90.107772, 29.940248], [-90.107545, 29.940129], [-90.107211, 29.939977], [-90.107028, 29.939922], [-90.106746, 29.939872], [-90.106532, 29.939859], [-90.106265, 29.939864], [-90.105808, 29.939895], [-90.104703, 29.939995], [-90.103541, 29.940075], [-90.103305, 29.940097]]]]
    },
    "properties": {
      "neighbourhood": "Freret",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.100959, 29.917147], [-90.101074, 29.917956], [-90.101151, 29.918785], [-90.101269, 29.919783], [-90.101351, 29.920807], [-90.100175, 29.920903], [-90.099089, 29.920992], [-90.097955, 29.921068], [-90.096844, 29.921149], [-90.095734, 29.921227], [-90.094957, 29.9213], [-90.094551, 29.921363], [-90.094093, 29.921458], [-90.093233, 29.921651], [-90.092539, 29.921831], [-90.091638, 29.922091], [-90.090718, 29.922371], [-90.090018, 29.922575], [-90.088937, 29.922968], [-90.088812, 29.923019], [-90.087727, 29.92343], [-90.087221, 29.922503], [-90.086781, 29.921576], [-90.086347, 29.920648], [-90.085704, 29.919477], [-90.085761, 29.919451], [-90.085585, 29.919118], [-90.085348, 29.918554], [-90.086569, 29.918407], [-90.086669, 29.918402], [-90.087942, 29.918255], [-90.08908, 29.918159], [-90.09003, 29.918076], [-90.091111, 29.91798], [-90.09223, 29.917884], [-90.093077, 29.917815], [-90.094017, 29.917736], [-90.095356, 29.917631], [-90.095936, 29.917593], [-90.096457, 29.91755], [-90.097611, 29.917425], [-90.098717, 29.917335], [-90.099825, 29.917242], [-90.100959, 29.917147]]]]
    },
    "properties": {
      "neighbourhood": "East Riverside",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.076898, 29.99215], [-90.076669, 29.991741], [-90.076451, 29.991667], [-90.075558, 29.991365], [-90.074985, 29.991158], [-90.074308, 29.990914], [-90.07407, 29.990836], [-90.073866, 29.990773], [-90.07372, 29.988949], [-90.073448, 29.988965], [-90.073237, 29.988968], [-90.073018, 29.988967], [-90.072811, 29.988977], [-90.071632, 29.989031], [-90.070476, 29.989115], [-90.070383, 29.988099], [-90.069234, 29.988184], [-90.068824, 29.988201], [-90.068641, 29.988207], [-90.068509, 29.988205], [-90.068418, 29.988193], [-90.068323, 29.988163], [-90.068177, 29.988056], [-90.068091, 29.987982], [-90.068039, 29.987918], [-90.068011, 29.987801], [-90.067989, 29.987614], [-90.067964, 29.987395], [-90.068147, 29.987191], [-90.069023, 29.986213], [-90.069101, 29.98615], [-90.070085, 29.985068], [-90.071022, 29.984011], [-90.071651, 29.983305], [-90.071735, 29.98321], [-90.072394, 29.982457], [-90.073112, 29.981673], [-90.073838, 29.980849], [-90.074546, 29.980065], [-90.075259, 29.97926], [-90.075971, 29.978463], [-90.076684, 29.977666], [-90.076987, 29.977325], [-90.077695, 29.976545], [-90.078176, 29.975992], [-90.078381, 29.976145], [-90.07854, 29.976264], [-90.079472, 29.976942], [-90.080049, 29.977301], [-90.080456, 29.977569], [-90.081438, 29.978212], [-90.08241, 29.978915], [-90.082902, 29.979245], [-90.083353, 29.979568], [-90.083776, 29.979855], [-90.084621, 29.980448], [-90.084813, 29.980584], [-90.08553, 29.981076], [-90.085755, 29.981224], [-90.086147, 29.981478], [-90.08667, 29.981853], [-90.087778, 29.982611], [-90.08841, 29.983062], [-90.089017, 29.983462], [-90.089135, 29.983629], [-90.08937, 29.983772], [-90.089188, 29.984044], [-90.089068, 29.984663], [-90.088955, 29.985399], [-90.088851, 29.985809], [-90.088466, 29.986296], [-90.088033, 29.986629], [-90.087704, 29.98713], [-90.08768, 29.987449], [-90.08784, 29.98797], [-90.08784, 29.988339], [-90.087664, 29.988693], [-90.087375, 29.989068], [-90.087291, 29.989261], [-90.087251, 29.989565], [-90.087145, 29.989919], [-90.087089, 29.990313], [-90.087074, 29.990664], [-90.086958, 29.990957], [-90.08672, 29.991347], [-90.086483, 29.991727], [-90.086468, 29.992003], [-90.086458, 29.992336], [-90.086382, 29.99248], [-90.086291, 29.992683], [-90.086197, 29.992675], [-90.086088, 29.992665], [-90.084499, 29.992526], [-90.083542, 29.992441], [-90.082985, 29.992389], [-90.082615, 29.992371], [-90.082285, 29.992367], [-90.080017, 29.992427], [-90.078536, 29.992472], [-90.07827, 29.99247], [-90.078103, 29.992458], [-90.077938, 29.992443], [-90.077738, 29.992402], [-90.077416, 29.992322], [-90.077174, 29.992244], [-90.076898, 29.99215]]]]
    },
    "properties": {
      "neighbourhood": "Fairgrounds",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.04121, 29.937687], [-90.040756, 29.937513], [-90.040323, 29.937294], [-90.039986, 29.937089], [-90.039658, 29.936852], [-90.039409, 29.936656], [-90.039241, 29.936501], [-90.03887, 29.936045], [-90.038719, 29.93583], [-90.03855, 29.935537], [-90.038389, 29.935152], [-90.038321, 29.934834], [-90.03831, 29.934763], [-90.038247, 29.934358], [-90.03822, 29.934181], [-90.03817, 29.93368], [-90.038164, 29.933478], [-90.038187, 29.933123], [-90.038275, 29.931925], [-90.038391, 29.930571], [-90.038407, 29.930436], [-90.03844, 29.930162], [-90.038457, 29.930012], [-90.038539, 29.929272], [-90.038688, 29.928655], [-90.038814, 29.928276], [-90.038848, 29.928199], [-90.039118, 29.927579], [-90.039284, 29.927258], [-90.039417, 29.927001], [-90.039491, 29.926858], [-90.0396, 29.926647], [-90.043972, 29.930793], [-90.043972, 29.931104], [-90.043972, 29.931406], [-90.043972, 29.931504], [-90.043867, 29.931441], [-90.043748, 29.933311], [-90.0437, 29.934064], [-90.04366, 29.934696], [-90.043626, 29.935346], [-90.043613, 29.935605], [-90.043585, 29.936056], [-90.04357, 29.936224], [-90.043565, 29.936428], [-90.043539, 29.936617], [-90.043475, 29.936906], [-90.04336, 29.937111], [-90.0432, 29.937307], [-90.043147, 29.937356], [-90.043076, 29.937422], [-90.042822, 29.937599], [-90.042726, 29.937636], [-90.04255, 29.937649], [-90.042421, 29.937647], [-90.04219, 29.937628], [-90.041877, 29.937585], [-90.04161, 29.937529], [-90.041389, 29.937465], [-90.04138, 29.937743], [-90.04121, 29.937687]]]]
    },
    "properties": {
      "neighbourhood": "Fischer Dev",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.035424, 29.98379], [-90.035457, 29.983639], [-90.034593, 29.983437], [-90.034641, 29.98321], [-90.034678, 29.983083], [-90.034718, 29.982946], [-90.034863, 29.982518], [-90.034988, 29.98205], [-90.034178, 29.981856], [-90.034254, 29.981669], [-90.034315, 29.981494], [-90.034507, 29.980829], [-90.033749, 29.980664], [-90.032941, 29.980475], [-90.03205, 29.980292], [-90.03152, 29.980171], [-90.031068, 29.980064], [-90.03011, 29.979835], [-90.030424, 29.978811], [-90.030729, 29.977775], [-90.031055, 29.976726], [-90.031367, 29.975679], [-90.032317, 29.975924], [-90.033302, 29.976133], [-90.034185, 29.976327], [-90.034996, 29.976521], [-90.035749, 29.976683], [-90.036551, 29.976857], [-90.037437, 29.977062], [-90.03849, 29.977302], [-90.039363, 29.977494], [-90.041124, 29.977898], [-90.041956, 29.978102], [-90.04289, 29.978315], [-90.042586, 29.979325], [-90.042272, 29.980378], [-90.041951, 29.981407], [-90.041645, 29.982455], [-90.041339, 29.983481], [-90.042224, 29.983741], [-90.042529, 29.984039], [-90.042886, 29.984022], [-90.043842, 29.984004], [-90.043971, 29.984002], [-90.044446, 29.984179], [-90.045372, 29.984418], [-90.045447, 29.984437], [-90.045554, 29.984459], [-90.045632, 29.984475], [-90.045482, 29.985012], [-90.045434, 29.985174], [-90.045385, 29.985338], [-90.045294, 29.98563], [-90.045233, 29.985818], [-90.045116, 29.986177], [-90.04508, 29.986286], [-90.04487, 29.986122], [-90.044788, 29.986058], [-90.044002, 29.985733], [-90.043402, 29.985588], [-90.043188, 29.98554], [-90.037331, 29.984224], [-90.03659, 29.984055], [-90.035424, 29.98379]]]]
    },
    "properties": {
      "neighbourhood": "Florida Area",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.029793, 29.982505], [-90.029626, 29.982301], [-90.02962, 29.982293], [-90.029442, 29.982099], [-90.029373, 29.982037], [-90.029625, 29.982108], [-90.029539, 29.982007], [-90.02949, 29.98193], [-90.029815, 29.980875], [-90.029939, 29.980463], [-90.030032, 29.980121], [-90.03011, 29.979835], [-90.031068, 29.980064], [-90.03152, 29.980171], [-90.03205, 29.980292], [-90.032941, 29.980475], [-90.033749, 29.980664], [-90.034507, 29.980829], [-90.034315, 29.981494], [-90.034254, 29.981669], [-90.034178, 29.981856], [-90.034988, 29.98205], [-90.034863, 29.982518], [-90.034718, 29.982946], [-90.034678, 29.983083], [-90.034641, 29.98321], [-90.034593, 29.983437], [-90.035457, 29.983639], [-90.035424, 29.98379], [-90.033728, 29.983401], [-90.032076, 29.983027], [-90.031241, 29.982837], [-90.029793, 29.982505]]]]
    },
    "properties": {
      "neighbourhood": "Florida Dev",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.046705, 30.012893], [-90.046672, 30.012512], [-90.046504, 30.010764], [-90.046371, 30.00898], [-90.046218, 30.00722], [-90.046087, 30.005481], [-90.046025, 30.00467], [-90.045973, 30.003808], [-90.045862, 30.002736], [-90.045852, 30.002623], [-90.045794, 30.001953], [-90.045712, 30.001143], [-90.045651, 30.000355], [-90.045586, 29.999542], [-90.045524, 29.998757], [-90.045461, 29.997968], [-90.04537, 29.997157], [-90.045356, 29.996992], [-90.045332, 29.996752], [-90.045285, 29.996325], [-90.045271, 29.996202], [-90.045247, 29.995552], [-90.046053, 29.994663], [-90.04767, 29.992853], [-90.048294, 29.992148], [-90.049247, 29.991104], [-90.04927, 29.991119], [-90.049434, 29.991224], [-90.049563, 29.991303], [-90.049626, 29.991337], [-90.049685, 29.991358], [-90.049836, 29.991383], [-90.050227, 29.991282], [-90.050645, 29.991303], [-90.050773, 29.991303], [-90.050987, 29.991294], [-90.051635, 29.991258], [-90.052759, 29.991188], [-90.053777, 29.991148], [-90.054011, 29.991139], [-90.055039, 29.99107], [-90.056166, 29.991], [-90.057285, 29.990925], [-90.058434, 29.990877], [-90.05873, 29.990864], [-90.058765, 29.991209], [-90.058787, 29.991428], [-90.058798, 29.991576], [-90.058801, 29.99168], [-90.058794, 29.991855], [-90.058882, 29.992882], [-90.058976, 29.9939], [-90.059056, 29.994904], [-90.059127, 29.995905], [-90.059204, 29.996921], [-90.059291, 29.997914], [-90.059353, 29.998781], [-90.059365, 29.998951], [-90.05941, 29.999446], [-90.059424, 29.999604], [-90.059455, 29.999971], [-90.059545, 30.000969], [-90.05963, 30.001983], [-90.059711, 30.002996], [-90.059777, 30.004012], [-90.059861, 30.005024], [-90.059958, 30.006049], [-90.06003, 30.007056], [-90.060128, 30.00811], [-90.060141, 30.008251], [-90.060214, 30.009295], [-90.060267, 30.009924], [-90.060287, 30.010309], [-90.060371, 30.011338], [-90.06045, 30.012366], [-90.060463, 30.012535], [-90.060128, 30.012548], [-90.05955, 30.01259], [-90.059008, 30.012675], [-90.058646, 30.012805], [-90.058322, 30.012924], [-90.058167, 30.012975], [-90.058061, 30.013004], [-90.05798, 30.01302], [-90.057892, 30.013029], [-90.057748, 30.01304], [-90.056811, 30.013099], [-90.05587, 30.013155], [-90.055594, 30.013164], [-90.054759, 30.013193], [-90.054497, 30.013199], [-90.053872, 30.013208], [-90.053485, 30.013213], [-90.052975, 30.013221], [-90.052078, 30.013234], [-90.051163, 30.013181], [-90.050985, 30.013187], [-90.049989, 30.013219], [-90.049102, 30.01324], [-90.048854, 30.01325], [-90.048179, 30.013258], [-90.047726, 30.013262], [-90.047255, 30.013262], [-90.046735, 30.013262], [-90.046705, 30.012893]]]]
    },
    "properties": {
      "neighbourhood": "Gentilly Terrace",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.027007, 30.008315], [-90.027532, 30.008185], [-90.028241, 30.008029], [-90.029573, 30.007737], [-90.029778, 30.00768], [-90.029912, 30.007648], [-90.031034, 30.007382], [-90.031656, 30.007198], [-90.031935, 30.007101], [-90.03234, 30.006954], [-90.032955, 30.00672], [-90.034175, 30.006256], [-90.03575, 30.005636], [-90.036384, 30.005387], [-90.03815, 30.004714], [-90.040016, 30.004004], [-90.040113, 30.003967], [-90.041295, 30.003506], [-90.041497, 30.003427], [-90.041554, 30.003406], [-90.04186, 30.003294], [-90.042287, 30.003163], [-90.04261, 30.003074], [-90.042967, 30.002999], [-90.043239, 30.002949], [-90.043564, 30.002898], [-90.043957, 30.002844], [-90.044132, 30.002827], [-90.044344, 30.002811], [-90.044447, 30.002803], [-90.045162, 30.00276], [-90.045403, 30.002752], [-90.045488, 30.002751], [-90.045862, 30.002736], [-90.045973, 30.003808], [-90.046025, 30.00467], [-90.046087, 30.005481], [-90.046218, 30.00722], [-90.046371, 30.00898], [-90.046504, 30.010764], [-90.046672, 30.012512], [-90.046705, 30.012893], [-90.046593, 30.013171], [-90.046509, 30.013266], [-90.046433, 30.01332], [-90.046361, 30.013354], [-90.046257, 30.013387], [-90.044529, 30.013836], [-90.044246, 30.013883], [-90.043987, 30.013909], [-90.04366, 30.013933], [-90.0432, 30.013928], [-90.042799, 30.013919], [-90.042634, 30.013924], [-90.042299, 30.013971], [-90.041883, 30.014048], [-90.041511, 30.01413], [-90.038876, 30.014717], [-90.037771, 30.014961], [-90.03476, 30.015618], [-90.033369, 30.015941], [-90.033155, 30.015972], [-90.032982, 30.01597], [-90.032792, 30.015943], [-90.032471, 30.015901], [-90.032203, 30.015947], [-90.031706, 30.016065], [-90.030304, 30.016398], [-90.030083, 30.016459], [-90.029571, 30.016601], [-90.028345, 30.012639], [-90.027109, 30.008647], [-90.027049, 30.008452], [-90.027007, 30.008315]]]]
    },
    "properties": {
      "neighbourhood": "Gentilly Woods",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.046735, 30.013262], [-90.047255, 30.013262], [-90.047726, 30.013262], [-90.048179, 30.013258], [-90.048854, 30.01325], [-90.049102, 30.01324], [-90.049989, 30.013219], [-90.050985, 30.013187], [-90.051163, 30.013181], [-90.052078, 30.013234], [-90.052975, 30.013221], [-90.053485, 30.013213], [-90.053872, 30.013208], [-90.054497, 30.013199], [-90.054759, 30.013193], [-90.055594, 30.013164], [-90.05587, 30.013155], [-90.056811, 30.013099], [-90.057748, 30.01304], [-90.057892, 30.013029], [-90.05798, 30.01302], [-90.058061, 30.013004], [-90.058167, 30.012975], [-90.058322, 30.012924], [-90.058646, 30.012805], [-90.059008, 30.012675], [-90.05955, 30.01259], [-90.060128, 30.012548], [-90.060463, 30.012535], [-90.060501, 30.012882], [-90.060523, 30.013049], [-90.060565, 30.013261], [-90.060593, 30.013384], [-90.060605, 30.013453], [-90.060615, 30.013562], [-90.060698, 30.014575], [-90.060783, 30.015593], [-90.060869, 30.016634], [-90.060882, 30.016792], [-90.060976, 30.017853], [-90.061047, 30.018871], [-90.061076, 30.019329], [-90.061122, 30.019878], [-90.061209, 30.020917], [-90.061294, 30.021912], [-90.06131, 30.022096], [-90.061395, 30.023136], [-90.061486, 30.024145], [-90.06151, 30.025032], [-90.061516, 30.025237], [-90.06112, 30.025256], [-90.060731, 30.02527], [-90.060398, 30.02526], [-90.060233, 30.025254], [-90.059921, 30.025245], [-90.059535, 30.025261], [-90.058884, 30.02533], [-90.056791, 30.025617], [-90.056469, 30.025659], [-90.055517, 30.025785], [-90.054942, 30.025862], [-90.054454, 30.025934], [-90.053644, 30.02606], [-90.053469, 30.026087], [-90.053305, 30.026113], [-90.052247, 30.026388], [-90.052069, 30.02642], [-90.049707, 30.026845], [-90.049052, 30.02695], [-90.048438, 30.027065], [-90.048054, 30.027151], [-90.047937, 30.027187], [-90.047909, 30.027045], [-90.047875, 30.026871], [-90.047844, 30.026723], [-90.047768, 30.026645], [-90.047726, 30.025997], [-90.047638, 30.024979], [-90.04757, 30.023962], [-90.047481, 30.022943], [-90.047465, 30.022763], [-90.047372, 30.021701], [-90.047349, 30.021107], [-90.047331, 30.020704], [-90.047268, 30.019702], [-90.04716, 30.01867], [-90.047078, 30.017628], [-90.047065, 30.017467], [-90.046977, 30.016416], [-90.046913, 30.01576], [-90.046876, 30.015412], [-90.046808, 30.014404], [-90.046735, 30.013262]]]]
    },
    "properties": {
      "neighbourhood": "Milneburg",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.094117, 29.95781], [-90.094224, 29.957657], [-90.09438, 29.957432], [-90.095485, 29.955881], [-90.09568, 29.955611], [-90.095848, 29.955378], [-90.096032, 29.955135], [-90.096181, 29.954944], [-90.096741, 29.954208], [-90.096956, 29.95391], [-90.09716, 29.953617], [-90.097344, 29.953356], [-90.097573, 29.953041], [-90.097861, 29.952646], [-90.097909, 29.952557], [-90.097937, 29.952503], [-90.097951, 29.952453], [-90.097953, 29.952437], [-90.097964, 29.952399], [-90.097982, 29.952126], [-90.098, 29.952027], [-90.098021, 29.951971], [-90.09807, 29.951881], [-90.09817, 29.951801], [-90.098185, 29.95179], [-90.098276, 29.951724], [-90.098494, 29.951857], [-90.09884, 29.952067], [-90.100165, 29.952789], [-90.101047, 29.953283], [-90.101917, 29.953752], [-90.102199, 29.953962], [-90.101995, 29.95366], [-90.101453, 29.952731], [-90.101799, 29.952891], [-90.102388, 29.953169], [-90.103285, 29.953681], [-90.103953, 29.954048], [-90.104903, 29.954596], [-90.105941, 29.955147], [-90.10546, 29.955792], [-90.105331, 29.955965], [-90.105846, 29.956194], [-90.106143, 29.956368], [-90.106383, 29.956499], [-90.106671, 29.956659], [-90.106844, 29.95674], [-90.107016, 29.956822], [-90.107273, 29.956926], [-90.108152, 29.957335], [-90.108197, 29.957359], [-90.108679, 29.957626], [-90.109426, 29.958028], [-90.110217, 29.958477], [-90.110306, 29.958368], [-90.110948, 29.957613], [-90.111637, 29.958135], [-90.112253, 29.958638], [-90.112717, 29.958984], [-90.11348, 29.959643], [-90.114201, 29.960255], [-90.114343, 29.960123], [-90.114605, 29.960338], [-90.115137, 29.960777], [-90.115752, 29.960215], [-90.11587, 29.960315], [-90.116823, 29.961048], [-90.117689, 29.961767], [-90.118498, 29.962401], [-90.117946, 29.962921], [-90.117897, 29.962974], [-90.117856, 29.963015], [-90.117747, 29.963124], [-90.116958, 29.963844], [-90.116214, 29.964564], [-90.117026, 29.965192], [-90.116285, 29.965887], [-90.115532, 29.96659], [-90.114711, 29.965935], [-90.11398, 29.966652], [-90.113208, 29.967344], [-90.112717, 29.967828], [-90.11189, 29.967175], [-90.111122, 29.966546], [-90.111036, 29.966471], [-90.110901, 29.966365], [-90.110707, 29.966198], [-90.110419, 29.965923], [-90.110367, 29.965859], [-90.110207, 29.965666], [-90.110052, 29.96552], [-90.109855, 29.965702], [-90.109706, 29.965839], [-90.109265, 29.966263], [-90.108788, 29.966712], [-90.108324, 29.967155], [-90.107968, 29.96751], [-90.107874, 29.967604], [-90.107776, 29.967687], [-90.107685, 29.967763], [-90.107651, 29.967793], [-90.107523, 29.9679], [-90.107284, 29.96766], [-90.107127, 29.967497], [-90.106976, 29.967351], [-90.106113, 29.966532], [-90.105978, 29.966412], [-90.104961, 29.965501], [-90.103894, 29.964757], [-90.103249, 29.964307], [-90.10245, 29.963754], [-90.100785, 29.962621], [-90.10072, 29.962568], [-90.097267, 29.960119], [-90.096131, 29.959309], [-90.095786, 29.959074], [-90.095632, 29.958953], [-90.095615, 29.958911], [-90.095576, 29.958861], [-90.095529, 29.958825], [-90.094171, 29.957842], [-90.094117, 29.95781]]]]
    },
    "properties": {
      "neighbourhood": "Gert Town",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.119953, 29.973738], [-90.11915, 29.973078], [-90.118357, 29.972444], [-90.117288, 29.971613], [-90.117121, 29.971466], [-90.116845, 29.971248], [-90.116716, 29.97114], [-90.115916, 29.970477], [-90.11513, 29.969796], [-90.114323, 29.969148], [-90.113537, 29.968485], [-90.112717, 29.967828], [-90.113208, 29.967344], [-90.11398, 29.966652], [-90.114711, 29.965935], [-90.115532, 29.96659], [-90.116285, 29.965887], [-90.117026, 29.965192], [-90.116214, 29.964564], [-90.116958, 29.963844], [-90.117747, 29.963124], [-90.117856, 29.963015], [-90.117897, 29.962974], [-90.117946, 29.962921], [-90.118498, 29.962401], [-90.119332, 29.963048], [-90.120132, 29.963709], [-90.12086, 29.963036], [-90.121615, 29.962328], [-90.122361, 29.961604], [-90.12314, 29.960879], [-90.123892, 29.960192], [-90.124676, 29.959455], [-90.1249, 29.959252], [-90.12571, 29.959918], [-90.12597, 29.960132], [-90.126515, 29.96058], [-90.127387, 29.961287], [-90.12812, 29.961908], [-90.128606, 29.962289], [-90.12916, 29.962736], [-90.129436, 29.962952], [-90.129751, 29.963208], [-90.130083, 29.963478], [-90.130381, 29.963702], [-90.130498, 29.963781], [-90.13074, 29.963918], [-90.130737, 29.963924], [-90.130665, 29.96405], [-90.125028, 29.973681], [-90.124855, 29.975793], [-90.124775, 29.975791], [-90.124255, 29.975781], [-90.124213, 29.975778], [-90.123905, 29.975759], [-90.123482, 29.975715], [-90.123081, 29.97569], [-90.122593, 29.975654], [-90.122449, 29.975632], [-90.122359, 29.975612], [-90.122295, 29.975588], [-90.122209, 29.975538], [-90.12161, 29.97506], [-90.121011, 29.974591], [-90.120776, 29.974399], [-90.119953, 29.973738]]]]
    },
    "properties": {
      "neighbourhood": "Hollygrove",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.076084, 29.923807], [-90.075729, 29.923328], [-90.075619, 29.923184], [-90.075346, 29.922828], [-90.074633, 29.921858], [-90.074525, 29.921763], [-90.074449, 29.921675], [-90.074275, 29.921476], [-90.073919, 29.921068], [-90.072572, 29.919004], [-90.072448, 29.918814], [-90.074379, 29.917971], [-90.076534, 29.917236], [-90.078204, 29.916667], [-90.082142, 29.915431], [-90.085695, 29.914259], [-90.089055, 29.913152], [-90.089614, 29.913005], [-90.091525, 29.912505], [-90.0937, 29.911865], [-90.093823, 29.911829], [-90.094703, 29.911571], [-90.094886, 29.911517], [-90.095501, 29.911336], [-90.099205, 29.910366], [-90.100536, 29.909872], [-90.100887, 29.909742], [-90.100873, 29.910005], [-90.100732, 29.912683], [-90.100711, 29.912757], [-90.100598, 29.913146], [-90.100618, 29.913909], [-90.100621, 29.914023], [-90.100676, 29.914617], [-90.100704, 29.9151], [-90.100737, 29.915238], [-90.100801, 29.915312], [-90.100913, 29.915354], [-90.10101, 29.915401], [-90.101074, 29.915468], [-90.101097, 29.915577], [-90.101094, 29.915624], [-90.101084, 29.915761], [-90.10108, 29.915858], [-90.101086, 29.915941], [-90.101104, 29.916175], [-90.100865, 29.916219], [-90.100959, 29.917147], [-90.099825, 29.917242], [-90.098717, 29.917335], [-90.097611, 29.917425], [-90.096457, 29.91755], [-90.095936, 29.917593], [-90.095356, 29.917631], [-90.094017, 29.917736], [-90.093077, 29.917815], [-90.09223, 29.917884], [-90.091111, 29.91798], [-90.09003, 29.918076], [-90.08908, 29.918159], [-90.087942, 29.918255], [-90.086669, 29.918402], [-90.086569, 29.918407], [-90.085348, 29.918554], [-90.085585, 29.919118], [-90.085761, 29.919451], [-90.085704, 29.919477], [-90.086347, 29.920648], [-90.086781, 29.921576], [-90.087221, 29.922503], [-90.087727, 29.92343], [-90.087238, 29.923629], [-90.086368, 29.924031], [-90.086171, 29.924129], [-90.085361, 29.924591], [-90.084624, 29.925], [-90.083763, 29.925491], [-90.083049, 29.92589], [-90.082985, 29.925926], [-90.082478, 29.926211], [-90.081591, 29.926679], [-90.080828, 29.927136], [-90.080013, 29.927571], [-90.079209, 29.92804], [-90.07857, 29.927177], [-90.077948, 29.926347], [-90.077316, 29.925512], [-90.076701, 29.924651], [-90.076084, 29.923807]]]]
    },
    "properties": {
      "neighbourhood": "Irish Channel",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-89.742408, 30.173864], [-89.742344, 30.173832], [-89.74224, 30.173772], [-89.742169, 30.17373], [-89.742104, 30.173665], [-89.742037, 30.173577], [-89.74195, 30.1735], [-89.741924, 30.173459], [-89.741899, 30.17341], [-89.741802, 30.173236], [-89.741754, 30.173194], [-89.741686, 30.173171], [-89.741633, 30.173162], [-89.741614, 30.173159], [-89.741598, 30.17315], [-89.741563, 30.173131], [-89.741548, 30.173122], [-89.741538, 30.173109], [-89.741466, 30.173019], [-89.741376, 30.172911], [-89.741345, 30.172825], [-89.741321, 30.172744], [-89.741318, 30.172723], [-89.741304, 30.172587], [-89.741304, 30.172568], [-89.741306, 30.172516], [-89.741325, 30.172495], [-89.74145, 30.172357], [-89.741302, 30.17211], [-89.741256, 30.172167], [-89.741149, 30.172285], [-89.741108, 30.172331], [-89.741091, 30.172344], [-89.741022, 30.172337], [-89.741011, 30.172297], [-89.741005, 30.172275], [-89.741005, 30.172253], [-89.741005, 30.172232], [-89.741005, 30.172209], [-89.741005, 30.172193], [-89.741005, 30.172172], [-89.741006, 30.172154], [-89.741016, 30.172082], [-89.741029, 30.17202], [-89.741031, 30.171938], [-89.741057, 30.171859], [-89.741055, 30.17184], [-89.741053, 30.171802], [-89.741032, 30.17172], [-89.740999, 30.171666], [-89.740955, 30.171607], [-89.740927, 30.17155], [-89.740881, 30.171492], [-89.740777, 30.171418], [-89.740734, 30.171369], [-89.740706, 30.17133], [-89.740606, 30.171238], [-89.740513, 30.171116], [-89.740487, 30.171004], [-89.740495, 30.170924], [-89.740494, 30.170908], [-89.740488, 30.170835], [-89.740465, 30.170778], [-89.740453, 30.170728], [-89.740415, 30.170681], [-89.740372, 30.170647], [-89.740336, 30.170586], [-89.740302, 30.170522], [-89.740303, 30.170504], [-89.740302, 30.170443], [-89.740269, 30.170406], [-89.740227, 30.170347], [-89.740136, 30.17029], [-89.740098, 30.170263], [-89.740037, 30.170232], [-89.739985, 30.170192], [-89.739952, 30.170117], [-89.739929, 30.170008], [-89.739864, 30.169867], [-89.739836, 30.169794], [-89.73976, 30.169736], [-89.739748, 30.169686], [-89.739726, 30.169645], [-89.739717, 30.169629], [-89.739701, 30.169615], [-89.739632, 30.169555], [-89.73958, 30.16949], [-89.739523, 30.169424], [-89.739477, 30.169384], [-89.739459, 30.169309], [-89.739423, 30.169227], [-89.739347, 30.169171], [-89.739224, 30.169057], [-89.739143, 30.169001], [-89.739097, 30.168956], [-89.739063, 30.168891], [-89.739059, 30.168871], [-89.739045, 30.168797], [-89.739016, 30.168715], [-89.738956, 30.168641], [-89.738895, 30.168589], [-89.738868, 30.168544], [-89.738864, 30.168524], [-89.738855, 30.168469], [-89.738854, 30.168448], [-89.738853, 30.16838], [-89.738858, 30.168363], [-89.738897, 30.168324], [-89.738645, 30.168122], [-89.738463, 30.167976], [-89.73819, 30.168143], [-89.738147, 30.168168], [-89.73807, 30.168145], [-89.738041, 30.168136], [-89.738001, 30.168094], [-89.738007, 30.168072], [-89.738013, 30.168051], [-89.738027, 30.167998], [-89.738012, 30.167965], [-89.738004, 30.167951], [-89.737987, 30.167945], [-89.737914, 30.167918], [-89.737829, 30.167888], [-89.737734, 30.167825], [-89.737671, 30.167777], [-89.73759, 30.167725], [-89.73757, 30.167709], [-89.737523, 30.167668], [-89.73743, 30.167637], [-89.737365, 30.167644], [-89.737329, 30.167685], [-89.737292, 30.167708], [-89.737276, 30.167718], [-89.737258, 30.167716], [-89.737204, 30.167711], [-89.737133, 30.167647], [-89.737116, 30.16763], [-89.737078, 30.167589], [-89.736978, 30.167494], [-89.736884, 30.167424], [-89.736784, 30.167376], [-89.736694, 30.167326], [-89.736642, 30.167291], [-89.73658, 30.167232], [-89.736541, 30.167191], [-89.736511, 30.16715], [-89.736488, 30.167104], [-89.736486, 30.167083], [-89.736484, 30.167038], [-89.736483, 30.167022], [-89.736484, 30.16698], [-89.736503, 30.166939], [-89.736513, 30.166919], [-89.736583, 30.166917], [-89.73663, 30.166925], [-89.736688, 30.166927], [-89.736725, 30.166917], [-89.736772, 30.166891], [-89.736779, 30.166842], [-89.736583, 30.166729], [-89.736531, 30.166699], [-89.736406, 30.166626], [-89.736278, 30.166477], [-89.736208, 30.166349], [-89.736174, 30.166217], [-89.736174, 30.166196], [-89.736174, 30.166087], [-89.736181, 30.166061], [-89.7362, 30.165998], [-89.73626, 30.165873], [-89.73632, 30.165745], [-89.736376, 30.165685], [-89.736407, 30.165678], [-89.736441, 30.165671], [-89.736428, 30.165593], [-89.736372, 30.165571], [-89.73633, 30.165545], [-89.736296, 30.165538], [-89.736277, 30.165536], [-89.736238, 30.165545], [-89.736212, 30.165553], [-89.736179, 30.165509], [-89.736165, 30.165487], [-89.736141, 30.165447], [-89.73613, 30.165428], [-89.736129, 30.165412], [-89.736129, 30.165391], [-89.736129, 30.165366], [-89.736137, 30.165306], [-89.73618, 30.165248], [-89.736192, 30.165232], [-89.736206, 30.165216], [-89.736253, 30.165163], [-89.73629, 30.165138], [-89.736335, 30.165137], [-89.736396, 30.165155], [-89.736569, 30.165215], [-89.736668, 30.165246], [-89.736754, 30.165263], [-89.736847, 30.165278], [-89.73694, 30.165306], [-89.737026, 30.16531], [-89.737146, 30.165308], [-89.73721, 30.165288], [-89.737331, 30.165271], [-89.737396, 30.165245], [-89.737468, 30.165212], [-89.737519, 30.16517], [-89.737598, 30.165123], [-89.737686, 30.165029], [-89.737734, 30.164961], [-89.737754, 30.164858], [-89.737785, 30.164527], [-89.737824, 30.164351], [-89.737895, 30.164354], [-89.737309, 30.16383], [-89.737288, 30.163946], [-89.737236, 30.163966], [-89.737185, 30.163973], [-89.737165, 30.163948], [-89.737153, 30.163932], [-89.737108, 30.163892], [-89.73704, 30.163888], [-89.736968, 30.163897], [-89.736877, 30.163894], [-89.736806, 30.163867], [-89.736755, 30.163836], [-89.736708, 30.163798], [-89.736674, 30.163785], [-89.736576, 30.163807], [-89.736523, 30.163804], [-89.736468, 30.163781], [-89.736467, 30.163726], [-89.736498, 30.163689], [-89.73648, 30.163646], [-89.736432, 30.163608], [-89.736387, 30.163604], [-89.736341, 30.163619], [-89.736289, 30.163487], [-89.736219, 30.163442], [-89.736111, 30.163371], [-89.735996, 30.163347], [-89.735902, 30.163283], [-89.735825, 30.163232], [-89.735695, 30.163208], [-89.735527, 30.163192], [-89.735389, 30.163181], [-89.735281, 30.163124], [-89.735195, 30.16304], [-89.735124, 30.162942], [-89.735028, 30.162812], [-89.734873, 30.162696], [-89.734711, 30.162633], [-89.734548, 30.162518], [-89.734414, 30.162362], [-89.734229, 30.162266], [-89.734073, 30.162157], [-89.733881, 30.162082], [-89.733741, 30.162005], [-89.733625, 30.161935], [-89.733534, 30.161824], [-89.733533, 30.161803], [-89.733531, 30.161708], [-89.733543, 30.161566], [-89.733603, 30.161254], [-89.733602, 30.161234], [-89.733599, 30.161121], [-89.733574, 30.161036], [-89.733465, 30.160972], [-89.733388, 30.160947], [-89.733356, 30.160875], [-89.733358, 30.160859], [-89.733369, 30.160795], [-89.733428, 30.160728], [-89.733424, 30.160709], [-89.733419, 30.160682], [-89.733357, 30.160644], [-89.7333, 30.160617], [-89.733313, 30.160565], [-89.733325, 30.160478], [-89.73327, 30.160401], [-89.733165, 30.160171], [-89.733085, 30.160041], [-89.73295, 30.159845], [-89.732925, 30.159753], [-89.732884, 30.159668], [-89.732814, 30.159583], [-89.732788, 30.159491], [-89.732647, 30.159362], [-89.732612, 30.159259], [-89.732654, 30.159196], [-89.732761, 30.159181], [-89.732883, 30.159211], [-89.732959, 30.159166], [-89.732962, 30.159072], [-89.733004, 30.158947], [-89.733013, 30.158843], [-89.733034, 30.158783], [-89.733042, 30.158701], [-89.733031, 30.158659], [-89.732984, 30.15862], [-89.732921, 30.158617], [-89.732825, 30.158669], [-89.732757, 30.158679], [-89.73262, 30.158663], [-89.732596, 30.158654], [-89.732499, 30.158616], [-89.73235, 30.158579], [-89.732246, 30.158537], [-89.732182, 30.158498], [-89.732147, 30.158469], [-89.732146, 30.158448], [-89.732145, 30.15841], [-89.73219, 30.158369], [-89.732257, 30.158328], [-89.732307, 30.158292], [-89.73234, 30.158247], [-89.732348, 30.158161], [-89.73233, 30.158084], [-89.732283, 30.158045], [-89.732233, 30.158007], [-89.732202, 30.157983], [-89.732104, 30.15796], [-89.732064, 30.157936], [-89.732, 30.157893], [-89.731953, 30.157859], [-89.731944, 30.157835], [-89.731928, 30.157785], [-89.731928, 30.157764], [-89.731929, 30.157712], [-89.731681, 30.157659], [-89.731383, 30.157594], [-89.730738, 30.157455], [-89.72905, 30.15709], [-89.724299, 30.156063], [-89.723523, 30.155895], [-89.72278, 30.15579], [-89.722283, 30.155675], [-89.721111, 30.155403], [-89.720639, 30.15499], [-89.720461, 30.154834], [-89.719861, 30.15444], [-89.719217, 30.154299], [-89.718448, 30.154605], [-89.71708, 30.154516], [-89.716634, 30.154566], [-89.716025, 30.154634], [-89.715934, 30.154623], [-89.715201, 30.155017], [-89.714818, 30.15502], [-89.714702, 30.155209], [-89.714286, 30.155299], [-89.713987, 30.155575], [-89.713803, 30.155447], [-89.713319, 30.155378], [-89.713187, 30.155625], [-89.71307, 30.15551], [-89.712887, 30.155728], [-89.712255, 30.155863], [-89.712004, 30.155792], [-89.711754, 30.155895], [-89.711288, 30.155942], [-89.710839, 30.156249], [-89.710273, 30.156383], [-89.709841, 30.156675], [-89.709408, 30.156635], [-89.709258, 30.156781], [-89.708925, 30.15687], [-89.708311, 30.157322], [-89.708134, 30.157458], [-89.707503, 30.157942], [-89.706865, 30.157984], [-89.706838, 30.157986], [-89.706638, 30.158101], [-89.706355, 30.158174], [-89.706006, 30.158232], [-89.70589, 30.158405], [-89.705674, 30.15855], [-89.70471, 30.158983], [-89.703545, 30.159346], [-89.70303, 30.15962], [-89.702581, 30.159678], [-89.702515, 30.159837], [-89.702299, 30.159953], [-89.702017, 30.160227], [-89.701634, 30.160242], [-89.701301, 30.16043], [-89.700936, 30.16069], [-89.700437, 30.160763], [-89.700188, 30.160993], [-89.699938, 30.160994], [-89.699557, 30.161369], [-89.698975, 30.1615], [-89.698361, 30.162235], [-89.696782, 30.163045], [-89.696484, 30.163377], [-89.695985, 30.163478], [-89.695321, 30.164084], [-89.694822, 30.164316], [-89.694191, 30.164835], [-89.693693, 30.165211], [-89.693245, 30.165428], [-89.693078, 30.165529], [-89.69298, 30.165832], [-89.692481, 30.166092], [-89.692215, 30.166323], [-89.691851, 30.166553], [-89.691845, 30.166608], [-89.691835, 30.16672], [-89.691834, 30.166741], [-89.691477, 30.167011], [-89.691319, 30.167131], [-89.691253, 30.167333], [-89.691248, 30.168004], [-89.691238, 30.168965], [-89.691109, 30.169119], [-89.69081, 30.169149], [-89.690748, 30.169207], [-89.690627, 30.169322], [-89.690483, 30.1696], [-89.690611, 30.16984], [-89.690618, 30.169957], [-89.690642, 30.170414], [-89.690648, 30.170517], [-89.690767, 30.171425], [-89.690768, 30.171684], [-89.690895, 30.171795], [-89.690472, 30.172343], [-89.690359, 30.172487], [-89.690339, 30.172513], [-89.688713, 30.173501], [-89.687973, 30.173467], [-89.687784, 30.173458], [-89.686888, 30.173346], [-89.685715, 30.172974], [-89.685611, 30.172934], [-89.684519, 30.172507], [-89.682766, 30.17159], [-89.682647, 30.171421], [-89.682356, 30.171005], [-89.682176, 30.171034], [-89.68199, 30.171065], [-89.681846, 30.171062], [-89.681746, 30.171048], [-89.681639, 30.170996], [-89.681564, 30.170887], [-89.681406, 30.170798], [-89.681304, 30.170724], [-89.681197, 30.170678], [-89.681109, 30.170642], [-89.681027, 30.170643], [-89.680953, 30.170668], [-89.6809, 30.170688], [-89.680844, 30.170705], [-89.680794, 30.170698], [-89.680775, 30.170692], [-89.680732, 30.170643], [-89.68073, 30.170626], [-89.680726, 30.170606], [-89.680723, 30.170583], [-89.680712, 30.170566], [-89.680686, 30.17054], [-89.680126, 30.170276], [-89.67965, 30.170044], [-89.679614, 30.170007], [-89.679585, 30.169972], [-89.679531, 30.169929], [-89.679418, 30.169895], [-89.679273, 30.169857], [-89.678889, 30.16972], [-89.678196, 30.169466], [-89.677676, 30.16924], [-89.677529, 30.16917], [-89.677486, 30.169123], [-89.677399, 30.169062], [-89.67724, 30.168964], [-89.677023, 30.168849], [-89.676881, 30.168811], [-89.67675, 30.168793], [-89.676706, 30.168805], [-89.676658, 30.168804], [-89.676634, 30.1688], [-89.676608, 30.168775], [-89.676585, 30.168752], [-89.67654, 30.168688], [-89.676443, 30.168614], [-89.676318, 30.16856], [-89.676087, 30.168461], [-89.675507, 30.168211], [-89.675454, 30.168173], [-89.675374, 30.16812], [-89.675183, 30.168031], [-89.67492, 30.167954], [-89.674744, 30.167891], [-89.674442, 30.16776], [-89.674428, 30.167746], [-89.674381, 30.167702], [-89.674346, 30.167665], [-89.673925, 30.167481], [-89.673739, 30.167373], [-89.673616, 30.167295], [-89.673479, 30.167222], [-89.673336, 30.167137], [-89.673274, 30.167065], [-89.673112, 30.166984], [-89.672418, 30.166718], [-89.672018, 30.166611], [-89.671703, 30.166481], [-89.671406, 30.166335], [-89.671315, 30.166242], [-89.671277, 30.166202], [-89.671108, 30.166118], [-89.670863, 30.166059], [-89.670834, 30.166027], [-89.670822, 30.166015], [-89.670816, 30.165999], [-89.6708, 30.165956], [-89.670762, 30.165922], [-89.670725, 30.165898], [-89.670668, 30.165887], [-89.670637, 30.165882], [-89.6706, 30.165841], [-89.670602, 30.165824], [-89.670624, 30.165786], [-89.670633, 30.165769], [-89.670639, 30.165751], [-89.670651, 30.165711], [-89.670635, 30.165682], [-89.670622, 30.165665], [-89.670584, 30.165631], [-89.670469, 30.165596], [-89.670395, 30.165546], [-89.670331, 30.165504], [-89.67025, 30.16544], [-89.669863, 30.165428], [-89.669703, 30.165398], [-89.669488, 30.165346], [-89.668759, 30.165013], [-89.668065, 30.164516], [-89.667816, 30.16428], [-89.667614, 30.164156], [-89.667508, 30.164102], [-89.667378, 30.164086], [-89.667243, 30.164081], [-89.667147, 30.164026], [-89.667074, 30.163954], [-89.666692, 30.163512], [-89.666527, 30.163357], [-89.666479, 30.163333], [-89.666422, 30.163335], [-89.666378, 30.16334], [-89.666359, 30.163338], [-89.666296, 30.163296], [-89.66626, 30.16324], [-89.666258, 30.163219], [-89.666256, 30.163185], [-89.666222, 30.163122], [-89.666158, 30.163071], [-89.666091, 30.163019], [-89.666016, 30.162971], [-89.66593, 30.162922], [-89.665829, 30.162904], [-89.66572, 30.162837], [-89.6656, 30.162785], [-89.665443, 30.162715], [-89.664881, 30.162165], [-89.664754, 30.162031], [-89.664675, 30.161976], [-89.6646, 30.161969], [-89.664579, 30.161967], [-89.664557, 30.16197], [-89.66448, 30.16198], [-89.664388, 30.161952], [-89.664339, 30.161896], [-89.664335, 30.161876], [-89.664329, 30.161844], [-89.664301, 30.16178], [-89.664175, 30.16168], [-89.663968, 30.161574], [-89.663129, 30.161152], [-89.663112, 30.161141], [-89.663103, 30.161127], [-89.663077, 30.161085], [-89.663078, 30.161067], [-89.663084, 30.160995], [-89.663096, 30.160919], [-89.663067, 30.160844], [-89.662991, 30.160776], [-89.662977, 30.160763], [-89.662963, 30.160751], [-89.662893, 30.160692], [-89.662767, 30.160644], [-89.662479, 30.16015], [-89.662477, 30.160081], [-89.662456, 30.160048], [-89.662448, 30.160034], [-89.66243, 30.160026], [-89.662376, 30.160003], [-89.662316, 30.159972], [-89.662242, 30.159889], [-89.662177, 30.159782], [-89.662149, 30.15974], [-89.662118, 30.159719], [-89.662098, 30.159711], [-89.662065, 30.159704], [-89.662008, 30.159706], [-89.661939, 30.159696], [-89.661902, 30.159657], [-89.661898, 30.159629], [-89.661897, 30.159608], [-89.661895, 30.159591], [-89.661945, 30.159541], [-89.661958, 30.159525], [-89.661934, 30.159484], [-89.661758, 30.159474], [-89.661715, 30.159472], [-89.66165, 30.159418], [-89.661629, 30.159376], [-89.661589, 30.159352], [-89.661567, 30.15934], [-89.661496, 30.159305], [-89.661494, 30.159288], [-89.661492, 30.159267], [-89.661489, 30.159247], [-89.661488, 30.15923], [-89.661458, 30.159185], [-89.661386, 30.159159], [-89.661392, 30.159131], [-89.661404, 30.15907], [-89.661417, 30.159018], [-89.661375, 30.158961], [-89.661348, 30.158934], [-89.661342, 30.158915], [-89.661342, 30.158897], [-89.661341, 30.158879], [-89.661375, 30.158855], [-89.661399, 30.158838], [-89.661411, 30.158755], [-89.661409, 30.158734], [-89.6614, 30.158633], [-89.661346, 30.158529], [-89.661275, 30.158402], [-89.661216, 30.15833], [-89.6612, 30.158317], [-89.661177, 30.158309], [-89.66114, 30.158294], [-89.661132, 30.158264], [-89.661125, 30.158196], [-89.661086, 30.158138], [-89.661067, 30.158128], [-89.661003, 30.158092], [-89.66093, 30.158024], [-89.660906, 30.157935], [-89.660872, 30.157874], [-89.660803, 30.15782], [-89.660758, 30.157809], [-89.660693, 30.157802], [-89.660501, 30.157684], [-89.660432, 30.157585], [-89.660399, 30.157524], [-89.660373, 30.157413], [-89.660372, 30.157392], [-89.66037, 30.157327], [-89.660437, 30.157134], [-89.660465, 30.156998], [-89.660381, 30.15636], [-89.65714, 30.15638], [-89.657097, 30.15638], [-89.657071, 30.156359], [-89.656578, 30.15595], [-89.656429, 30.155907], [-89.656329, 30.155893], [-89.6561, 30.155868], [-89.656052, 30.155843], [-89.65599, 30.155798], [-89.655903, 30.155737], [-89.655705, 30.155669], [-89.655655, 30.155647], [-89.655636, 30.155633], [-89.655607, 30.155606], [-89.655581, 30.15556], [-89.655568, 30.155543], [-89.655534, 30.155516], [-89.655493, 30.155499], [-89.655448, 30.155496], [-89.655397, 30.155497], [-89.655336, 30.15549], [-89.655203, 30.155454], [-89.65518, 30.155446], [-89.655123, 30.155413], [-89.655032, 30.155262], [-89.654981, 30.155227], [-89.65496, 30.155222], [-89.6549, 30.15521], [-89.654761, 30.155195], [-89.65469, 30.155196], [-89.654628, 30.155197], [-89.654559, 30.155207], [-89.654496, 30.155224], [-89.654452, 30.155232], [-89.654372, 30.155212], [-89.654331, 30.15519], [-89.654244, 30.155121], [-89.654112, 30.155048], [-89.654023, 30.155014], [-89.653901, 30.154986], [-89.653778, 30.154977], [-89.653616, 30.154977], [-89.653485, 30.154972], [-89.653431, 30.154942], [-89.653385, 30.154867], [-89.653349, 30.154843], [-89.653334, 30.154832], [-89.653313, 30.154831], [-89.653248, 30.154828], [-89.653045, 30.154838], [-89.652874, 30.15486], [-89.652726, 30.15489], [-89.652578, 30.154939], [-89.652503, 30.154917], [-89.652454, 30.154869], [-89.652375, 30.154718], [-89.6523, 30.154604], [-89.652233, 30.154571], [-89.652101, 30.154535], [-89.651954, 30.154458], [-89.651852, 30.154438], [-89.651759, 30.154386], [-89.65163, 30.15432], [-89.651484, 30.154235], [-89.651364, 30.1542], [-89.651173, 30.154104], [-89.651071, 30.154065], [-89.650815, 30.153989], [-89.650723, 30.153983], [-89.650647, 30.153984], [-89.650579, 30.153996], [-89.650519, 30.154003], [-89.650453, 30.154012], [-89.650406, 30.153994], [-89.650391, 30.153984], [-89.650373, 30.153954], [-89.650356, 30.153893], [-89.650075, 30.153961], [-89.65007, 30.153978], [-89.650054, 30.154041], [-89.650015, 30.154072], [-89.649994, 30.154123], [-89.650022, 30.154177], [-89.650039, 30.154184], [-89.650098, 30.15421], [-89.650253, 30.154346], [-89.650295, 30.154404], [-89.650286, 30.154439], [-89.65027, 30.154451], [-89.650221, 30.154476], [-89.650083, 30.154482], [-89.650063, 30.154482], [-89.650046, 30.154489], [-89.649972, 30.15452], [-89.649906, 30.154539], [-89.64984, 30.154538], [-89.649768, 30.154524], [-89.649696, 30.154501], [-89.649632, 30.154455], [-89.649583, 30.154373], [-89.649565, 30.15437], [-89.649474, 30.154367], [-89.649372, 30.154354], [-89.649267, 30.154327], [-89.649132, 30.154259], [-89.64905, 30.154232], [-89.64878, 30.154194], [-89.648713, 30.154183], [-89.648576, 30.154176], [-89.648563, 30.154163], [-89.64853, 30.15413], [-89.648473, 30.154099], [-89.648342, 30.154095], [-89.648196, 30.15411], [-89.648005, 30.154128], [-89.647783, 30.154119], [-89.647654, 30.154134], [-89.647502, 30.154172], [-89.647421, 30.154208], [-89.647371, 30.154216], [-89.647315, 30.154229], [-89.647259, 30.154252], [-89.647194, 30.154292], [-89.647111, 30.154357], [-89.64705, 30.154412], [-89.647009, 30.154447], [-89.646661, 30.154595], [-89.646499, 30.15465], [-89.646297, 30.154698], [-89.646081, 30.154704], [-89.64589, 30.154722], [-89.645783, 30.154744], [-89.645451, 30.154818], [-89.645324, 30.15484], [-89.644924, 30.154825], [-89.644735, 30.154814], [-89.644295, 30.154775], [-89.643832, 30.154775], [-89.643745, 30.154777], [-89.643691, 30.154761], [-89.643583, 30.154713], [-89.643507, 30.15469], [-89.643489, 30.154684], [-89.64347, 30.154685], [-89.643416, 30.154689], [-89.643367, 30.154718], [-89.643351, 30.154731], [-89.643322, 30.15476], [-89.643308, 30.154777], [-89.643276, 30.154817], [-89.643203, 30.15485], [-89.643055, 30.154859], [-89.642698, 30.154788], [-89.642595, 30.154756], [-89.642451, 30.154701], [-89.642413, 30.154636], [-89.642373, 30.154607], [-89.642316, 30.154596], [-89.642274, 30.154559], [-89.642259, 30.154546], [-89.642244, 30.154534], [-89.642202, 30.154502], [-89.64218, 30.154496], [-89.642099, 30.154495], [-89.641934, 30.154507], [-89.641872, 30.154523], [-89.64181, 30.154517], [-89.641722, 30.154492], [-89.641592, 30.154477], [-89.641532, 30.154481], [-89.641465, 30.154487], [-89.641413, 30.154504], [-89.641337, 30.15451], [-89.641286, 30.154509], [-89.641215, 30.154488], [-89.641146, 30.154458], [-89.641044, 30.154443], [-89.640971, 30.154444], [-89.640764, 30.154469], [-89.640703, 30.154497], [-89.640656, 30.154538], [-89.64058, 30.154546], [-89.640532, 30.154545], [-89.640433, 30.154527], [-89.640309, 30.154497], [-89.64021, 30.154486], [-89.640103, 30.154476], [-89.639992, 30.154442], [-89.639748, 30.154362], [-89.639601, 30.154336], [-89.639516, 30.15432], [-89.639166, 30.15416], [-89.639006, 30.154099], [-89.63888, 30.154045], [-89.638829, 30.154024], [-89.63877, 30.15402], [-89.638691, 30.154022], [-89.638631, 30.154009], [-89.638536, 30.15398], [-89.638479, 30.153981], [-89.638392, 30.153995], [-89.638302, 30.153997], [-89.638214, 30.153969], [-89.638017, 30.153957], [-89.637791, 30.153942], [-89.637671, 30.15391], [-89.637614, 30.153865], [-89.637509, 30.153799], [-89.637452, 30.153776], [-89.637308, 30.153767], [-89.637194, 30.153737], [-89.637126, 30.153712], [-89.637071, 30.153673], [-89.636956, 30.153557], [-89.63689, 30.153499], [-89.636833, 30.153464], [-89.636736, 30.153441], [-89.636642, 30.153428], [-89.636537, 30.153401], [-89.636442, 30.153358], [-89.636321, 30.153277], [-89.636262, 30.1532], [-89.636202, 30.153149], [-89.636147, 30.153119], [-89.636054, 30.153103], [-89.635884, 30.153044], [-89.635433, 30.152948], [-89.635233, 30.152907], [-89.635112, 30.152861], [-89.634907, 30.152891], [-89.634887, 30.152887], [-89.63482, 30.152873], [-89.634694, 30.152859], [-89.634673, 30.152856], [-89.634652, 30.152859], [-89.634601, 30.152865], [-89.634564, 30.152876], [-89.634545, 30.152885], [-89.634519, 30.152901], [-89.634478, 30.152918], [-89.63446, 30.152926], [-89.63444, 30.152926], [-89.634394, 30.152924], [-89.634351, 30.152869], [-89.634361, 30.152829], [-89.634374, 30.152815], [-89.634435, 30.152768], [-89.634459, 30.152743], [-89.634472, 30.152725], [-89.634485, 30.152687], [-89.634498, 30.152645], [-89.634508, 30.152629], [-89.634535, 30.152599], [-89.6346, 30.152559], [-89.634694, 30.15251], [-89.634793, 30.152427], [-89.634872, 30.15239], [-89.634887, 30.152369], [-89.634903, 30.152347], [-89.634903, 30.152317], [-89.634904, 30.152264], [-89.634888, 30.152224], [-89.634825, 30.152112], [-89.634783, 30.152075], [-89.634725, 30.152034], [-89.63469, 30.152017], [-89.63467, 30.15201], [-89.63464, 30.151999], [-89.634603, 30.151967], [-89.634581, 30.151922], [-89.634567, 30.151872], [-89.63456, 30.151849], [-89.634542, 30.15179], [-89.634521, 30.151743], [-89.634517, 30.15172], [-89.634517, 30.151703], [-89.634517, 30.151682], [-89.634347, 30.151458], [-89.634207, 30.151488], [-89.634103, 30.15149], [-89.634031, 30.151479], [-89.633937, 30.151474], [-89.633874, 30.15148], [-89.633831, 30.1515], [-89.633815, 30.151508], [-89.633803, 30.151521], [-89.633777, 30.151548], [-89.633745, 30.151582], [-89.633728, 30.15159], [-89.633695, 30.151595], [-89.633669, 30.151578], [-89.633649, 30.151564], [-89.633632, 30.151553], [-89.633598, 30.151529], [-89.633547, 30.151508], [-89.633455, 30.151488], [-89.633379, 30.151481], [-89.633297, 30.151482], [-89.633234, 30.15149], [-89.633171, 30.151417], [-89.63315, 30.151414], [-89.633111, 30.151409], [-89.633053, 30.151399], [-89.632995, 30.1514], [-89.632901, 30.151414], [-89.632857, 30.151405], [-89.632801, 30.15138], [-89.632604, 30.151253], [-89.632459, 30.151105], [-89.632363, 30.151059], [-89.63231, 30.151042], [-89.632257, 30.151039], [-89.632194, 30.151042], [-89.632125, 30.151031], [-89.632109, 30.151019], [-89.632074, 30.150996], [-89.632054, 30.150985], [-89.631999, 30.150969], [-89.631937, 30.150962], [-89.631892, 30.150943], [-89.631725, 30.150857], [-89.631458, 30.150798], [-89.631404, 30.150783], [-89.631342, 30.150779], [-89.631252, 30.150782], [-89.631191, 30.150768], [-89.631142, 30.150736], [-89.631098, 30.150696], [-89.63107, 30.150658], [-89.63106, 30.150643], [-89.631044, 30.150634], [-89.630975, 30.150592], [-89.630861, 30.150557], [-89.630681, 30.150529], [-89.630603, 30.150529], [-89.630453, 30.150507], [-89.630196, 30.150475], [-89.63012, 30.150474], [-89.630052, 30.150469], [-89.630008, 30.150454], [-89.629901, 30.150413], [-89.629815, 30.15036], [-89.629744, 30.150305], [-89.629611, 30.150224], [-89.629498, 30.150144], [-89.629418, 30.150117], [-89.629314, 30.150091], [-89.629264, 30.150092], [-89.629216, 30.150098], [-89.6291, 30.15009], [-89.629081, 30.150066], [-89.629068, 30.150047], [-89.629053, 30.150038], [-89.628996, 30.149999], [-89.628893, 30.149963], [-89.628861, 30.149963], [-89.628826, 30.149964], [-89.628807, 30.14997], [-89.628751, 30.149988], [-89.628664, 30.149995], [-89.628607, 30.149997], [-89.628527, 30.149996], [-89.628421, 30.14998], [-89.628293, 30.149956], [-89.627938, 30.149899], [-89.627827, 30.149818], [-89.62779, 30.149771], [-89.627781, 30.149731], [-89.627782, 30.149716], [-89.62779, 30.149645], [-89.627821, 30.14953], [-89.627879, 30.149419], [-89.627895, 30.149353], [-89.627903, 30.149235], [-89.627926, 30.149173], [-89.627991, 30.149063], [-89.628118, 30.148878], [-89.628294, 30.148592], [-89.628593, 30.147077], [-89.628966, 30.14517], [-89.62895, 30.145132], [-89.628961, 30.14507], [-89.628979, 30.145023], [-89.629138, 30.144615], [-89.629155, 30.144598], [-89.629202, 30.144563], [-89.629263, 30.14452], [-89.629301, 30.14447], [-89.629348, 30.144393], [-89.629382, 30.144308], [-89.629423, 30.144042], [-89.629462, 30.143793], [-89.629465, 30.143772], [-89.631019, 30.14371], [-89.631673, 30.143275], [-89.632327, 30.14284], [-89.633798, 30.142326], [-89.634823, 30.142074], [-89.635606, 30.142054], [-89.637963, 30.141464], [-89.639706, 30.140954], [-89.640699, 30.140553], [-89.640943, 30.140231], [-89.641561, 30.137873], [-89.642113, 30.136561], [-89.64382, 30.135035], [-89.644202, 30.134567], [-89.645615, 30.133461], [-89.64586, 30.13308], [-89.646447, 30.132556], [-89.647411, 30.131858], [-89.648035, 30.131107], [-89.64814, 30.130981], [-89.648165, 30.130985], [-89.648581, 30.131046], [-89.649095, 30.130845], [-89.649474, 30.130554], [-89.650107, 30.129321], [-89.650217, 30.12882], [-89.650017, 30.12861], [-89.649989, 30.128255], [-89.650758, 30.126994], [-89.651078, 30.1262], [-89.65174, 30.125262], [-89.652263, 30.1245], [-89.652338, 30.124057], [-89.653277, 30.122828], [-89.653835, 30.122007], [-89.654287, 30.121451], [-89.654639, 30.120746], [-89.655088, 30.120308], [-89.655849, 30.11952], [-89.656951, 30.118706], [-89.657468, 30.118328], [-89.657815, 30.117919], [-89.658635, 30.117693], [-89.659703, 30.116879], [-89.660899, 30.116509], [-89.662241, 30.11558], [-89.663027, 30.115324], [-89.663441, 30.114975], [-89.663785, 30.114743], [-89.664572, 30.114457], [-89.665259, 30.114052], [-89.665296, 30.113995], [-89.665354, 30.113905], [-89.665887, 30.113084], [-89.66654, 30.112679], [-89.666697, 30.112416], [-89.666855, 30.11215], [-89.66734, 30.111884], [-89.667644, 30.111717], [-89.668039, 30.111484], [-89.668331, 30.111312], [-89.669087, 30.110819], [-89.669771, 30.110591], [-89.670897, 30.110399], [-89.671612, 30.110289], [-89.672086, 30.110413], [-89.672243, 30.110399], [-89.672248, 30.110399], [-89.672665, 30.110361], [-89.673071, 30.110485], [-89.673513, 30.11052], [-89.67364, 30.110549], [-89.673645, 30.11055], [-89.674055, 30.110645], [-89.674413, 30.110394], [-89.674489, 30.110341], [-89.67464, 30.110398], [-89.674772, 30.110447], [-89.675373, 30.11013], [-89.675613, 30.110105], [-89.675869, 30.109929], [-89.675894, 30.109424], [-89.675898, 30.109343], [-89.67598, 30.109425], [-89.675983, 30.109428], [-89.676314, 30.109757], [-89.676693, 30.109687], [-89.67753, 30.109405], [-89.677812, 30.108769], [-89.678167, 30.108716], [-89.678376, 30.108452], [-89.678249, 30.107919], [-89.679039, 30.107426], [-89.678944, 30.106981], [-89.679494, 30.106604], [-89.679668, 30.10637], [-89.679759, 30.105011], [-89.679736, 30.104716], [-89.67961, 30.104589], [-89.679726, 30.104382], [-89.679673, 30.103699], [-89.679742, 30.103394], [-89.679784, 30.102838], [-89.679933, 30.102533], [-89.679988, 30.102103], [-89.680157, 30.101534], [-89.68012, 30.100907], [-89.680381, 30.100563], [-89.680642, 30.100302], [-89.680661, 30.100121], [-89.68062, 30.099717], [-89.680856, 30.098982], [-89.680858, 30.098829], [-89.681053, 30.098665], [-89.681188, 30.098263], [-89.68122, 30.097261], [-89.681324, 30.096803], [-89.681507, 30.096388], [-89.681694, 30.095723], [-89.681685, 30.095305], [-89.681533, 30.094788], [-89.681685, 30.094359], [-89.681563, 30.093981], [-89.681684, 30.093412], [-89.681835, 30.093025], [-89.682225, 30.092654], [-89.682357, 30.092433], [-89.682444, 30.092016], [-89.682418, 30.091613], [-89.682585, 30.091239], [-89.682604, 30.091044], [-89.682574, 30.090891], [-89.682689, 30.090725], [-89.682617, 30.090237], [-89.682722, 30.089724], [-89.682843, 30.089141], [-89.682899, 30.088682], [-89.68312, 30.087906], [-89.683094, 30.087502], [-89.682991, 30.086986], [-89.683173, 30.086654], [-89.683114, 30.086319], [-89.683123, 30.085763], [-89.68297, 30.085371], [-89.682981, 30.084703], [-89.683049, 30.08444], [-89.683101, 30.084204], [-89.683075, 30.083842], [-89.683129, 30.083508], [-89.683211, 30.083342], [-89.683232, 30.083037], [-89.683446, 30.082677], [-89.683436, 30.082357], [-89.683425, 30.082009], [-89.683718, 30.081721], [-89.683867, 30.081444], [-89.683806, 30.081262], [-89.683347, 30.080964], [-89.683255, 30.080713], [-89.683371, 30.08045], [-89.68323, 30.080281], [-89.683155, 30.080002], [-89.683209, 30.079599], [-89.683293, 30.079391], [-89.683104, 30.079194], [-89.683062, 30.078846], [-89.683226, 30.078569], [-89.683182, 30.07836], [-89.683385, 30.077667], [-89.683566, 30.077405], [-89.683529, 30.076722], [-89.6836, 30.07632], [-89.68396, 30.075795], [-89.684227, 30.075659], [-89.684277, 30.075633], [-89.684783, 30.075374], [-89.68499, 30.075173], [-89.685206, 30.074962], [-89.685467, 30.074815], [-89.685721, 30.074815], [-89.685995, 30.074666], [-89.686589, 30.074562], [-89.686845, 30.074537], [-89.687248, 30.074286], [-89.687282, 30.074264], [-89.687378, 30.074239], [-89.687587, 30.074185], [-89.687894, 30.073925], [-89.687899, 30.073921], [-89.687928, 30.073897], [-89.687988, 30.073884], [-89.688169, 30.073844], [-89.688458, 30.073792], [-89.688588, 30.073654], [-89.688958, 30.073534], [-89.689311, 30.073455], [-89.689664, 30.073431], [-89.689938, 30.073282], [-89.690424, 30.072898], [-89.691341, 30.072589], [-89.691375, 30.07258], [-89.691375, 30.07258], [-89.691936, 30.072416], [-89.691991, 30.072402], [-89.693029, 30.072137], [-89.693687, 30.071992], [-89.694394, 30.071792], [-89.695554, 30.07132], [-89.695907, 30.071238], [-89.697013, 30.071171], [-89.697414, 30.071092], [-89.698331, 30.070812], [-89.698784, 30.070469], [-89.698993, 30.070455], [-89.699342, 30.070601], [-89.699903, 30.070539], [-89.700468, 30.070578], [-89.700939, 30.070774], [-89.701529, 30.070879], [-89.702062, 30.070621], [-89.702555, 30.070753], [-89.703277, 30.070636], [-89.704091, 30.070758], [-89.705569, 30.070414], [-89.706097, 30.070379], [-89.706611, 30.07026], [-89.707124, 30.070239], [-89.707592, 30.069994], [-89.707976, 30.069971], [-89.70831, 30.070114], [-89.709172, 30.070208], [-89.710168, 30.069984], [-89.710681, 30.069921], [-89.711162, 30.069815], [-89.712193, 30.069396], [-89.712754, 30.06932], [-89.713157, 30.069172], [-89.713574, 30.069107], [-89.714123, 30.068766], [-89.714592, 30.068508], [-89.714533, 30.068187], [-89.714711, 30.06805], [-89.714777, 30.068084], [-89.714779, 30.068085], [-89.714933, 30.068164], [-89.715046, 30.068257], [-89.715154, 30.068347], [-89.715381, 30.068183], [-89.715406, 30.068134], [-89.715469, 30.068009], [-89.715528, 30.067893], [-89.715538, 30.067873], [-89.715636, 30.067829], [-89.715658, 30.06782], [-89.715736, 30.067785], [-89.715981, 30.067676], [-89.716157, 30.067692], [-89.716177, 30.067707], [-89.716426, 30.06789], [-89.716794, 30.067881], [-89.71702, 30.067744], [-89.717355, 30.067776], [-89.717691, 30.067766], [-89.717984, 30.067505], [-89.718103, 30.067473], [-89.718273, 30.067426], [-89.718441, 30.067309], [-89.718548, 30.067234], [-89.718761, 30.067246], [-89.718852, 30.067252], [-89.719297, 30.067424], [-89.719844, 30.067236], [-89.721021, 30.066666], [-89.721616, 30.066478], [-89.721875, 30.066273], [-89.722105, 30.065942], [-89.722081, 30.06544], [-89.722054, 30.065379], [-89.721988, 30.065231], [-89.722145, 30.065171], [-89.722342, 30.065096], [-89.72246, 30.064721], [-89.722813, 30.064698], [-89.723027, 30.06454], [-89.723361, 30.06444], [-89.723526, 30.064136], [-89.723848, 30.063949], [-89.724043, 30.063836], [-89.724089, 30.063726], [-89.724159, 30.063559], [-89.724302, 30.063631], [-89.724395, 30.063813], [-89.72457, 30.063857], [-89.72478, 30.063734], [-89.725166, 30.063613], [-89.725533, 30.063687], [-89.725858, 30.063357], [-89.726091, 30.06336], [-89.72621, 30.063362], [-89.726628, 30.063228], [-89.726538, 30.062865], [-89.726539, 30.062833], [-89.726539, 30.062828], [-89.726542, 30.0626], [-89.726717, 30.062658], [-89.726918, 30.062715], [-89.72692, 30.062715], [-89.726946, 30.062712], [-89.726971, 30.062706], [-89.727165, 30.062664], [-89.727392, 30.062499], [-89.72754, 30.062265], [-89.727512, 30.062014], [-89.727321, 30.0619], [-89.727307, 30.061775], [-89.727771, 30.06178], [-89.72806, 30.061728], [-89.728285, 30.061689], [-89.728403, 30.061301], [-89.728828, 30.060736], [-89.728769, 30.060415], [-89.729104, 30.060461], [-89.729268, 30.060212], [-89.729578, 30.060067], [-89.729503, 30.059886], [-89.729543, 30.059783], [-89.729588, 30.059665], [-89.729522, 30.059461], [-89.729505, 30.059408], [-89.729574, 30.059103], [-89.72962, 30.059006], [-89.729627, 30.058992], [-89.729929, 30.05894], [-89.730217, 30.058943], [-89.730429, 30.058682], [-89.730531, 30.058321], [-89.73063, 30.0581], [-89.730538, 30.057848], [-89.730315, 30.057776], [-89.730477, 30.057694], [-89.730863, 30.05756], [-89.73087, 30.057142], [-89.730833, 30.057061], [-89.730777, 30.056932], [-89.730244, 30.056915], [-89.730369, 30.056454], [-89.730295, 30.05605], [-89.730635, 30.055831], [-89.730638, 30.055637], [-89.730721, 30.055429], [-89.730642, 30.055358], [-89.730435, 30.0553], [-89.730761, 30.05497], [-89.730717, 30.054663], [-89.730912, 30.054499], [-89.731168, 30.054511], [-89.731189, 30.05421], [-89.731129, 30.053931], [-89.731232, 30.053501], [-89.73116, 30.052985], [-89.731019, 30.05283], [-89.730778, 30.052869], [-89.730604, 30.052783], [-89.730687, 30.052604], [-89.730786, 30.052382], [-89.730614, 30.052115], [-89.730619, 30.051837], [-89.730858, 30.051882], [-89.731035, 30.051801], [-89.730993, 30.051466], [-89.730643, 30.051309], [-89.730566, 30.051141], [-89.73073, 30.050892], [-89.730589, 30.050696], [-89.730965, 30.050241], [-89.731004, 30.049768], [-89.730864, 30.049558], [-89.730694, 30.04918], [-89.730828, 30.048792], [-89.730754, 30.048429], [-89.730332, 30.047838], [-89.730077, 30.047753], [-89.730174, 30.047643], [-89.730016, 30.047558], [-89.730163, 30.047392], [-89.73012, 30.047072], [-89.729787, 30.046873], [-89.729695, 30.046649], [-89.729716, 30.046288], [-89.729562, 30.045952], [-89.729122, 30.045432], [-89.729068, 30.044805], [-89.728232, 30.044085], [-89.728284, 30.043863], [-89.727875, 30.043426], [-89.727409, 30.042572], [-89.726922, 30.042023], [-89.726575, 30.041699], [-89.726307, 30.041473], [-89.72583, 30.040948], [-89.725459, 30.040474], [-89.725033, 30.040149], [-89.72483, 30.039841], [-89.724757, 30.039422], [-89.724295, 30.039263], [-89.724032, 30.038731], [-89.723782, 30.038339], [-89.723452, 30.038001], [-89.723078, 30.037384], [-89.722827, 30.037075], [-89.722526, 30.036876], [-89.722151, 30.036371], [-89.721854, 30.035908], [-89.721641, 30.035237], [-89.721472, 30.034804], [-89.721016, 30.034353], [-89.720783, 30.033891], [-89.720376, 30.033385], [-89.720225, 30.032812], [-89.719977, 30.032336], [-89.720003, 30.032124], [-89.720032, 30.031891], [-89.720084, 30.031655], [-89.719958, 30.031501], [-89.719766, 30.031554], [-89.71962, 30.031644], [-89.719616, 30.031646], [-89.719588, 30.031663], [-89.71927, 30.031548], [-89.718654, 30.031053], [-89.718501, 30.030662], [-89.718136, 30.030449], [-89.717689, 30.030401], [-89.717392, 30.029994], [-89.717399, 30.029549], [-89.71734, 30.02927], [-89.717268, 30.028768], [-89.717, 30.028528], [-89.716522, 30.028439], [-89.71617, 30.028435], [-89.715884, 30.028306], [-89.716065, 30.028002], [-89.716008, 30.02757], [-89.716108, 30.027307], [-89.716352, 30.027087], [-89.716225, 30.027016], [-89.715953, 30.027026], [-89.715892, 30.026845], [-89.716054, 30.026708], [-89.716077, 30.026276], [-89.716482, 30.025934], [-89.716743, 30.025644], [-89.71721, 30.025428], [-89.717486, 30.025208], [-89.717936, 30.025019], [-89.718433, 30.024942], [-89.718764, 30.024816], [-89.719109, 30.024685], [-89.719445, 30.024418], [-89.719676, 30.024233], [-89.720095, 30.024071], [-89.720154, 30.024056], [-89.720448, 30.023978], [-89.722017, 30.023169], [-89.722543, 30.023002], [-89.723137, 30.022828], [-89.723591, 30.022746], [-89.723859, 30.022698], [-89.724066, 30.022613], [-89.724519, 30.022428], [-89.725126, 30.022491], [-89.725271, 30.022539], [-89.725276, 30.02254], [-89.725301, 30.022549], [-89.725347, 30.022534], [-89.725353, 30.022532], [-89.725742, 30.02241], [-89.725794, 30.022392], [-89.726291, 30.022219], [-89.726292, 30.022219], [-89.726426, 30.022173], [-89.726788, 30.022195], [-89.727515, 30.022061], [-89.728172, 30.022027], [-89.729129, 30.022136], [-89.729995, 30.022007], [-89.730539, 30.021972], [-89.731563, 30.022057], [-89.731563, 30.022057], [-89.731721, 30.02207], [-89.731813, 30.022058], [-89.732795, 30.02193], [-89.733529, 30.022036], [-89.73399, 30.022181], [-89.734352, 30.022534], [-89.734426, 30.022896], [-89.734886, 30.023152], [-89.735149, 30.023712], [-89.735319, 30.024062], [-89.735718, 30.02415], [-89.736191, 30.024546], [-89.736645, 30.02515], [-89.737055, 30.02553], [-89.737513, 30.025898], [-89.737748, 30.026155], [-89.738369, 30.026381], [-89.738974, 30.026556], [-89.739548, 30.02666], [-89.739706, 30.026773], [-89.739668, 30.027162], [-89.739982, 30.027514], [-89.740409, 30.027825], [-89.741521, 30.028284], [-89.742556, 30.028698], [-89.7433, 30.029043], [-89.744313, 30.029668], [-89.744708, 30.029993], [-89.745335, 30.030766], [-89.745664, 30.031257], [-89.74601, 30.031567], [-89.745989, 30.031887], [-89.746241, 30.032168], [-89.746671, 30.032285], [-89.746866, 30.033066], [-89.746907, 30.033526], [-89.747346, 30.03406], [-89.747866, 30.034567], [-89.748479, 30.035229], [-89.748984, 30.03568], [-89.749604, 30.035924], [-89.75001, 30.036541], [-89.750031, 30.036599], [-89.750163, 30.036961], [-89.750158, 30.037295], [-89.750696, 30.037621], [-89.75087, 30.037762], [-89.750946, 30.037986], [-89.751202, 30.038017], [-89.751539, 30.037965], [-89.751887, 30.03815], [-89.752572, 30.038367], [-89.753177, 30.038528], [-89.753668, 30.038826], [-89.754355, 30.038876], [-89.754594, 30.038934], [-89.754702, 30.0392], [-89.754811, 30.039354], [-89.755034, 30.039441], [-89.755396, 30.039779], [-89.755747, 30.039881], [-89.756194, 30.039914], [-89.756478, 30.04014], [-89.757054, 30.040161], [-89.757229, 30.040204], [-89.757437, 30.040179], [-89.757612, 30.040237], [-89.757788, 30.040322], [-89.757838, 30.040156], [-89.758822, 30.040599], [-89.759297, 30.040953], [-89.760203, 30.04127], [-89.760487, 30.041538], [-89.760721, 30.041902], [-89.761499, 30.042259], [-89.761687, 30.042498], [-89.761796, 30.042722], [-89.762001, 30.042892], [-89.76244, 30.043453], [-89.762757, 30.043624], [-89.763203, 30.043769], [-89.763406, 30.044091], [-89.763961, 30.04439], [-89.764644, 30.044663], [-89.764817, 30.044873], [-89.764863, 30.044971], [-89.765326, 30.045033], [-89.765771, 30.045247], [-89.765964, 30.045165], [-89.76619, 30.045043], [-89.766637, 30.045118], [-89.766875, 30.045218], [-89.767371, 30.045238], [-89.767819, 30.045201], [-89.769922, 30.044725], [-89.770486, 30.044642], [-89.772359, 30.044365], [-89.772791, 30.044342], [-89.773236, 30.044528], [-89.773647, 30.044811], [-89.774251, 30.045097], [-89.774601, 30.045184], [-89.774921, 30.04523], [-89.775239, 30.045345], [-89.77551, 30.045362], [-89.775943, 30.045312], [-89.776263, 30.045329], [-89.776947, 30.045574], [-89.777266, 30.045578], [-89.777586, 30.045623], [-89.778047, 30.045768], [-89.778319, 30.045799], [-89.778655, 30.045747], [-89.779134, 30.045822], [-89.779994, 30.046083], [-89.780279, 30.046281], [-89.780744, 30.046203], [-89.781032, 30.046179], [-89.783159, 30.046204], [-89.783861, 30.046323], [-89.784214, 30.046258], [-89.784741, 30.04632], [-89.785123, 30.046422], [-89.785458, 30.046481], [-89.786195, 30.04642], [-89.786451, 30.046423], [-89.787458, 30.046449], [-89.787809, 30.046509], [-89.787952, 30.04658], [-89.788096, 30.04654], [-89.788417, 30.046474], [-89.789342, 30.046666], [-89.789596, 30.046822], [-89.78993, 30.04691], [-89.790266, 30.046941], [-89.790554, 30.046903], [-89.790987, 30.046839], [-89.791516, 30.046761], [-89.792204, 30.046755], [-89.792397, 30.046702], [-89.792829, 30.046679], [-89.793328, 30.046476], [-89.793568, 30.046465], [-89.794078, 30.046582], [-89.79467, 30.046575], [-89.795262, 30.046582], [-89.795695, 30.046518], [-89.79603, 30.046536], [-89.796588, 30.046667], [-89.797532, 30.046651], [-89.798061, 30.046573], [-89.798431, 30.046466], [-89.798959, 30.046417], [-89.799615, 30.046397], [-89.801169, 30.046289], [-89.801905, 30.04627], [-89.802256, 30.046344], [-89.802977, 30.046241], [-89.803359, 30.046343], [-89.803792, 30.046306], [-89.804081, 30.046198], [-89.804449, 30.04623], [-89.804833, 30.046207], [-89.805232, 30.046253], [-89.805694, 30.046384], [-89.806013, 30.046415], [-89.806366, 30.046364], [-89.806672, 30.046228], [-89.807072, 30.046191], [-89.807921, 30.046145], [-89.808433, 30.046109], [-89.80885, 30.046086], [-89.809605, 30.045831], [-89.810055, 30.045724], [-89.810503, 30.045716], [-89.811304, 30.0456], [-89.812393, 30.045543], [-89.81319, 30.045705], [-89.81383, 30.045726], [-89.814405, 30.045747], [-89.814742, 30.045667], [-89.815237, 30.045743], [-89.815861, 30.045708], [-89.816502, 30.045646], [-89.817016, 30.045499], [-89.817965, 30.045162], [-89.818818, 30.044824], [-89.819496, 30.044414], [-89.820013, 30.044044], [-89.820096, 30.043864], [-89.820373, 30.043561], [-89.820462, 30.043408], [-89.820543, 30.044217], [-89.820527, 30.04508], [-89.820573, 30.045824], [-89.821095, 30.046103], [-89.821954, 30.046196], [-89.822674, 30.04601], [-89.823344, 30.045677], [-89.823734, 30.045533], [-89.829745, 30.042999], [-89.830092, 30.042882], [-89.830487, 30.043852], [-89.830703, 30.044949], [-89.832436, 30.053769], [-89.832768, 30.055505], [-89.833072, 30.056993], [-89.833276, 30.058012], [-89.833311, 30.058189], [-89.83377, 30.060487], [-89.834031, 30.062067], [-89.834209, 30.062981], [-89.834282, 30.063648], [-89.834359, 30.064052], [-89.834485, 30.064285], [-89.834699, 30.064572], [-89.835157, 30.065052], [-89.837992, 30.06785], [-89.840324, 30.070103], [-89.841932, 30.071505], [-89.843603, 30.073128], [-89.844809, 30.074465], [-89.846252, 30.075077], [-89.847382, 30.074825], [-89.848427, 30.074923], [-89.849479, 30.074972], [-89.852891, 30.074893], [-89.855325, 30.074797], [-89.855913, 30.07483], [-89.85623, 30.075049], [-89.85655, 30.07565], [-89.856743, 30.076633], [-89.856875, 30.07741], [-89.856924, 30.077833], [-89.860459, 30.095977], [-89.860853, 30.099071], [-89.861597, 30.103261], [-89.861709, 30.103644], [-89.862173, 30.10613], [-89.863239, 30.111803], [-89.86348, 30.114157], [-89.86384, 30.114521], [-89.863848, 30.114561], [-89.863874, 30.1147], [-89.863948, 30.115088], [-89.86414, 30.116094], [-89.864383, 30.117264], [-89.865598, 30.122848], [-89.865892, 30.123979], [-89.866009, 30.12398], [-89.866086, 30.123982], [-89.866185, 30.12398], [-89.866306, 30.123981], [-89.866474, 30.123971], [-89.866764, 30.123974], [-89.867785, 30.124028], [-89.868216, 30.124113], [-89.868861, 30.125226], [-89.869515, 30.126362], [-89.86983, 30.126855], [-89.869997, 30.127248], [-89.870567, 30.128317], [-89.870659, 30.128502], [-89.872802, 30.133033], [-89.872937, 30.133319], [-89.873108, 30.133631], [-89.874559, 30.136283], [-89.876545, 30.140308], [-89.876816, 30.140812], [-89.880127, 30.147104], [-89.880666, 30.147726], [-89.880061, 30.148478], [-89.880088, 30.148512], [-89.880056, 30.148495], [-89.879984, 30.148439], [-89.880028, 30.148328], [-89.880049, 30.148282], [-89.880066, 30.148263], [-89.880097, 30.148236], [-89.880141, 30.148204], [-89.880158, 30.148187], [-89.880191, 30.14815], [-89.880219, 30.148109], [-89.880275, 30.148045], [-89.880415, 30.147914], [-89.880437, 30.147866], [-89.88044, 30.147845], [-89.880439, 30.147827], [-89.880439, 30.14781], [-89.880437, 30.147784], [-89.880411, 30.147717], [-89.880374, 30.147684], [-89.880333, 30.147635], [-89.880296, 30.147611], [-89.880277, 30.147603], [-89.880205, 30.14758], [-89.880176, 30.147553], [-89.880165, 30.147535], [-89.880151, 30.147503], [-89.880146, 30.147477], [-89.880144, 30.147458], [-89.880143, 30.147437], [-89.88014, 30.147305], [-89.880118, 30.147262], [-89.880103, 30.147246], [-89.880071, 30.147222], [-89.880013, 30.147177], [-89.879995, 30.147164], [-89.879976, 30.147154], [-89.879906, 30.147109], [-89.879922, 30.147058], [-89.879922, 30.147023], [-89.87992, 30.147004], [-89.879916, 30.146978], [-89.879906, 30.146955], [-89.879894, 30.146927], [-89.879889, 30.146902], [-89.879885, 30.146882], [-89.879824, 30.14686], [-89.879805, 30.146865], [-89.879777, 30.146879], [-89.879754, 30.146889], [-89.87973, 30.146899], [-89.879715, 30.146909], [-89.879691, 30.146939], [-89.879655, 30.146964], [-89.879618, 30.146914], [-89.879616, 30.146894], [-89.879618, 30.14685], [-89.879621, 30.146825], [-89.879649, 30.146778], [-89.879669, 30.146759], [-89.879686, 30.146743], [-89.879698, 30.146714], [-89.879703, 30.146697], [-89.879664, 30.14667], [-89.879631, 30.146668], [-89.87956, 30.146678], [-89.879548, 30.146627], [-89.879543, 30.146606], [-89.879468, 30.146563], [-89.879448, 30.146566], [-89.879397, 30.146574], [-89.879371, 30.146583], [-89.879341, 30.146596], [-89.879308, 30.146624], [-89.87929, 30.146665], [-89.879293, 30.146705], [-89.879298, 30.146783], [-89.879296, 30.146811], [-89.879254, 30.146858], [-89.879206, 30.146857], [-89.879179, 30.146857], [-89.879135, 30.146855], [-89.87909, 30.146843], [-89.87908, 30.146808], [-89.879086, 30.146767], [-89.879082, 30.146724], [-89.879054, 30.146693], [-89.879005, 30.146678], [-89.878962, 30.146673], [-89.87892, 30.146667], [-89.87886, 30.146651], [-89.878823, 30.146682], [-89.878821, 30.146706], [-89.878821, 30.146723], [-89.878817, 30.146762], [-89.878815, 30.146792], [-89.878742, 30.146803], [-89.878733, 30.146772], [-89.878722, 30.146732], [-89.878721, 30.146709], [-89.878723, 30.146671], [-89.878716, 30.146653], [-89.878708, 30.146633], [-89.87866, 30.146619], [-89.878593, 30.146627], [-89.878575, 30.146629], [-89.878557, 30.146633], [-89.878504, 30.146644], [-89.878443, 30.146644], [-89.878309, 30.146632], [-89.878241, 30.146628], [-89.878159, 30.146627], [-89.878053, 30.14664], [-89.878023, 30.146647], [-89.877966, 30.14666], [-89.877834, 30.146694], [-89.877737, 30.146741], [-89.877544, 30.146877], [-89.877498, 30.146956], [-89.877465, 30.147002], [-89.87742, 30.147049], [-89.877353, 30.147091], [-89.877255, 30.147122], [-89.877194, 30.147159], [-89.877137, 30.147203], [-89.877061, 30.147256], [-89.876979, 30.147306], [-89.876902, 30.147332], [-89.876819, 30.147336], [-89.876729, 30.147327], [-89.876629, 30.147303], [-89.876528, 30.147302], [-89.87643, 30.147323], [-89.876298, 30.147358], [-89.876079, 30.147401], [-89.875975, 30.147443], [-89.875867, 30.147502], [-89.875739, 30.147556], [-89.875659, 30.147587], [-89.875561, 30.147616], [-89.875466, 30.147651], [-89.875285, 30.147741], [-89.875244, 30.147754], [-89.875224, 30.147758], [-89.875186, 30.147757], [-89.875167, 30.147757], [-89.866133, 30.152103], [-89.866164, 30.152159], [-89.866182, 30.152192], [-89.866188, 30.152207], [-89.866192, 30.152242], [-89.866188, 30.152277], [-89.866179, 30.152301], [-89.866145, 30.152345], [-89.866112, 30.152376], [-89.866049, 30.152419], [-89.866001, 30.152443], [-89.865896, 30.152483], [-89.865842, 30.152488], [-89.865773, 30.152479], [-89.865705, 30.152447], [-89.865654, 30.152449], [-89.865629, 30.152466], [-89.865614, 30.152479], [-89.865602, 30.152493], [-89.865585, 30.152514], [-89.865562, 30.152539], [-89.865543, 30.152555], [-89.865509, 30.152576], [-89.86547, 30.152581], [-89.865449, 30.152584], [-89.865379, 30.15259], [-89.865359, 30.152592], [-89.865338, 30.152595], [-89.865277, 30.152604], [-89.865222, 30.15261], [-89.863876, 30.152593], [-89.863815, 30.152658], [-89.863779, 30.152716], [-89.863769, 30.152733], [-89.863768, 30.15275], [-89.863767, 30.152771], [-89.863766, 30.152793], [-89.863767, 30.15281], [-89.863768, 30.152842], [-89.863769, 30.152863], [-89.863765, 30.152885], [-89.863761, 30.152902], [-89.863753, 30.152926], [-89.863702, 30.152971], [-89.863658, 30.152999], [-89.86358, 30.153032], [-89.863517, 30.153043], [-89.863496, 30.153047], [-89.863474, 30.153048], [-89.86343, 30.153051], [-89.86341, 30.153052], [-89.863393, 30.153062], [-89.863338, 30.153096], [-89.863314, 30.15312], [-89.863284, 30.153153], [-89.863249, 30.153184], [-89.8632, 30.153214], [-89.86315, 30.153234], [-89.86309, 30.153254], [-89.863015, 30.153255], [-89.862847, 30.153225], [-89.862667, 30.153156], [-89.86256, 30.15309], [-89.862461, 30.153048], [-89.862381, 30.153027], [-89.86226, 30.153015], [-89.862206, 30.152983], [-89.862165, 30.15295], [-89.862121, 30.152921], [-89.862023, 30.152907], [-89.861926, 30.152902], [-89.861724, 30.152906], [-89.861614, 30.15292], [-89.861438, 30.152974], [-89.861173, 30.152988], [-89.860916, 30.153005], [-89.860674, 30.153075], [-89.860282, 30.153184], [-89.860153, 30.153214], [-89.860054, 30.153216], [-89.859973, 30.153205], [-89.859898, 30.153206], [-89.859724, 30.153246], [-89.859647, 30.153265], [-89.859601, 30.153268], [-89.859553, 30.153265], [-89.859472, 30.153266], [-89.85937, 30.153279], [-89.85924, 30.153309], [-89.859126, 30.153356], [-89.85885, 30.153461], [-89.858629, 30.153537], [-89.858571, 30.153557], [-89.85824, 30.153693], [-89.857986, 30.153805], [-89.857841, 30.1539], [-89.857642, 30.154037], [-89.857388, 30.154225], [-89.857265, 30.154347], [-89.857226, 30.154378], [-89.857201, 30.154397], [-89.857191, 30.154414], [-89.857177, 30.154439], [-89.857168, 30.154454], [-89.857173, 30.154472], [-89.857187, 30.154517], [-89.85719, 30.154542], [-89.857178, 30.154572], [-89.857171, 30.154587], [-89.857159, 30.154654], [-89.857167, 30.154702], [-89.857166, 30.154737], [-89.857165, 30.154754], [-89.857163, 30.15477], [-89.857155, 30.154811], [-89.857061, 30.154935], [-89.857047, 30.154949], [-89.856951, 30.154973], [-89.856902, 30.154967], [-89.856861, 30.154937], [-89.85681, 30.154904], [-89.856782, 30.154887], [-89.856649, 30.154791], [-89.856629, 30.154783], [-89.856579, 30.154784], [-89.856556, 30.15479], [-89.856511, 30.154809], [-89.856453, 30.154839], [-89.856413, 30.154878], [-89.856332, 30.155076], [-89.856253, 30.15527], [-89.856147, 30.155531], [-89.856014, 30.15552], [-89.855831, 30.155437], [-89.855885, 30.155261], [-89.855936, 30.155091], [-89.855975, 30.154965], [-89.855983, 30.154915], [-89.855981, 30.154899], [-89.855978, 30.154873], [-89.85597, 30.154855], [-89.85595, 30.154823], [-89.8559, 30.15478], [-89.855734, 30.154689], [-89.855655, 30.154643], [-89.855597, 30.15463], [-89.85551, 30.154603], [-89.855434, 30.154586], [-89.855346, 30.154575], [-89.85523, 30.154565], [-89.855107, 30.154556], [-89.855042, 30.154555], [-89.854973, 30.154539], [-89.854842, 30.154472], [-89.854733, 30.154403], [-89.854549, 30.154325], [-89.854493, 30.154282], [-89.854448, 30.154229], [-89.854427, 30.15417], [-89.854411, 30.154089], [-89.854409, 30.154065], [-89.854409, 30.15404], [-89.854421, 30.153986], [-89.854445, 30.153936], [-89.854541, 30.153847], [-89.85458, 30.153811], [-89.854621, 30.153801], [-89.854644, 30.1538], [-89.854691, 30.1538], [-89.854785, 30.153813], [-89.854832, 30.153814], [-89.854877, 30.153806], [-89.854929, 30.153772], [-89.855008, 30.153683], [-89.85516, 30.153546], [-89.855253, 30.153443], [-89.855279, 30.153393], [-89.855297, 30.153318], [-89.855312, 30.153206], [-89.855306, 30.153026], [-89.855303, 30.152933], [-89.855304, 30.152903], [-89.855308, 30.152751], [-89.855303, 30.152731], [-89.855293, 30.152699], [-89.855279, 30.152683], [-89.855257, 30.152658], [-89.855194, 30.152623], [-89.855115, 30.152572], [-89.855078, 30.152541], [-89.855042, 30.152488], [-89.855009, 30.152383], [-89.85494, 30.152108], [-89.854931, 30.152082], [-89.854899, 30.151988], [-89.854896, 30.151971], [-89.854876, 30.151843], [-89.854874, 30.151827], [-89.854851, 30.151566], [-89.854862, 30.151477], [-89.854909, 30.151118], [-89.854907, 30.150938], [-89.854907, 30.150885], [-89.854931, 30.15051], [-89.854986, 30.150326], [-89.855038, 30.150167], [-89.855153, 30.150034], [-89.855248, 30.149931], [-89.855373, 30.149846], [-89.855425, 30.149812], [-89.855438, 30.149797], [-89.855456, 30.149765], [-89.855455, 30.149732], [-89.85545, 30.149713], [-89.855444, 30.149698], [-89.855437, 30.149679], [-89.855436, 30.149647], [-89.855458, 30.149603], [-89.855481, 30.149561], [-89.855444, 30.149525], [-89.855423, 30.149505], [-89.85541, 30.149467], [-89.855443, 30.149403], [-89.855457, 30.149384], [-89.855492, 30.149359], [-89.855523, 30.149352], [-89.855548, 30.14935], [-89.855578, 30.149342], [-89.855623, 30.149302], [-89.855637, 30.149284], [-89.855659, 30.149251], [-89.855699, 30.149205], [-89.855711, 30.149191], [-89.855725, 30.149177], [-89.855748, 30.149154], [-89.85576, 30.149127], [-89.855765, 30.1491], [-89.855779, 30.149082], [-89.855799, 30.149062], [-89.855818, 30.149043], [-89.855834, 30.149031], [-89.855848, 30.14902], [-89.855867, 30.149005], [-89.85589, 30.148993], [-89.855925, 30.148979], [-89.855942, 30.148971], [-89.85597, 30.148971], [-89.856013, 30.14897], [-89.856033, 30.148942], [-89.856077, 30.148899], [-89.856092, 30.148886], [-89.85613, 30.148868], [-89.856147, 30.14886], [-89.856172, 30.148851], [-89.856197, 30.148843], [-89.856209, 30.148831], [-89.856222, 30.148811], [-89.856236, 30.148791], [-89.856274, 30.148771], [-89.856291, 30.148762], [-89.856316, 30.148753], [-89.856339, 30.148745], [-89.856365, 30.148733], [-89.85641, 30.148705], [-89.856428, 30.148706], [-89.856473, 30.148709], [-89.856526, 30.14872], [-89.856582, 30.148693], [-89.856574, 30.148662], [-89.856584, 30.148648], [-89.856604, 30.148629], [-89.856649, 30.1486], [-89.856683, 30.148566], [-89.856831, 30.148515], [-89.856881, 30.148526], [-89.856945, 30.148536], [-89.856963, 30.148526], [-89.856992, 30.148504], [-89.856999, 30.148485], [-89.856996, 30.148468], [-89.85698, 30.148452], [-89.856954, 30.148437], [-89.856923, 30.148422], [-89.856911, 30.148408], [-89.856895, 30.148388], [-89.856886, 30.14837], [-89.856889, 30.148343], [-89.856949, 30.148316], [-89.856974, 30.148324], [-89.857009, 30.148334], [-89.857018, 30.148267], [-89.856946, 30.148258], [-89.856884, 30.148257], [-89.856836, 30.148248], [-89.856818, 30.148245], [-89.856789, 30.148248], [-89.856734, 30.148254], [-89.856694, 30.148222], [-89.856733, 30.148171], [-89.856748, 30.148122], [-89.856736, 30.148065], [-89.856732, 30.148037], [-89.856729, 30.147992], [-89.856748, 30.147954], [-89.856789, 30.147924], [-89.856848, 30.147887], [-89.856863, 30.147874], [-89.856881, 30.147847], [-89.856883, 30.147822], [-89.856876, 30.147793], [-89.856871, 30.147778], [-89.856866, 30.14776], [-89.856857, 30.14773], [-89.856903, 30.147685], [-89.856917, 30.147671], [-89.856929, 30.147658], [-89.856941, 30.14764], [-89.856952, 30.147625], [-89.856962, 30.14761], [-89.856979, 30.1476], [-89.857008, 30.147588], [-89.857056, 30.147549], [-89.857005, 30.14752], [-89.856984, 30.147516], [-89.856909, 30.147503], [-89.856899, 30.147454], [-89.856935, 30.147415], [-89.856981, 30.147393], [-89.857045, 30.147373], [-89.857081, 30.147366], [-89.857099, 30.147362], [-89.857158, 30.147344], [-89.857173, 30.147335], [-89.857196, 30.147303], [-89.857201, 30.147285], [-89.857205, 30.14722], [-89.857205, 30.147176], [-89.857196, 30.147133], [-89.857188, 30.147118], [-89.857138, 30.147093], [-89.857119, 30.147084], [-89.857098, 30.147071], [-89.857077, 30.147057], [-89.857043, 30.147035], [-89.857021, 30.147029], [-89.856984, 30.147031], [-89.85696, 30.147032], [-89.856945, 30.147046], [-89.856928, 30.147064], [-89.856919, 30.147114], [-89.856917, 30.147129], [-89.856906, 30.147217], [-89.856852, 30.147195], [-89.856795, 30.147177], [-89.856778, 30.147172], [-89.856754, 30.147172], [-89.856674, 30.147173], [-89.856655, 30.147143], [-89.856634, 30.147112], [-89.85662, 30.147093], [-89.856648, 30.147038], [-89.856706, 30.146991], [-89.856699, 30.146962], [-89.856726, 30.146919], [-89.856742, 30.146911], [-89.856763, 30.146899], [-89.856756, 30.146856], [-89.856725, 30.146826], [-89.856702, 30.146809], [-89.856688, 30.146799], [-89.856666, 30.14675], [-89.856672, 30.146731], [-89.856682, 30.146688], [-89.856626, 30.146648], [-89.85656, 30.14665], [-89.856542, 30.14666], [-89.856513, 30.146675], [-89.856488, 30.146634], [-89.856517, 30.146579], [-89.856509, 30.146509], [-89.856503, 30.146493], [-89.856493, 30.146456], [-89.856497, 30.146426], [-89.856506, 30.146409], [-89.856529, 30.146394], [-89.856545, 30.14638], [-89.856569, 30.146338], [-89.85658, 30.146319], [-89.856591, 30.1463], [-89.8566, 30.146284], [-89.856635, 30.146224], [-89.856621, 30.146202], [-89.85661, 30.146184], [-89.856592, 30.146156], [-89.856586, 30.146129], [-89.856581, 30.146102], [-89.856594, 30.146028], [-89.856625, 30.145944], [-89.856659, 30.145906], [-89.85667, 30.145892], [-89.856681, 30.145872], [-89.856693, 30.145851], [-89.856706, 30.14583], [-89.856721, 30.145813], [-89.856763, 30.145751], [-89.85676, 30.14573], [-89.856756, 30.145708], [-89.856752, 30.145686], [-89.856784, 30.145632], [-89.856802, 30.145625], [-89.856839, 30.145611], [-89.856853, 30.145595], [-89.856864, 30.145559], [-89.856863, 30.14552], [-89.856864, 30.145495], [-89.856869, 30.145449], [-89.856897, 30.145427], [-89.85693, 30.145417], [-89.856961, 30.145411], [-89.856978, 30.145389], [-89.856993, 30.145371], [-89.857031, 30.145329], [-89.857111, 30.145296], [-89.857093, 30.145275], [-89.857076, 30.145254], [-89.857028, 30.145173], [-89.857028, 30.145151], [-89.857028, 30.145119], [-89.857026, 30.14507], [-89.857014, 30.144996], [-89.857011, 30.144975], [-89.857008, 30.144952], [-89.857009, 30.1449], [-89.857021, 30.144859], [-89.857026, 30.14484], [-89.857028, 30.144821], [-89.857034, 30.144749], [-89.857033, 30.144733], [-89.857024, 30.144572], [-89.857023, 30.144556], [-89.85702, 30.144523], [-89.857022, 30.144467], [-89.857026, 30.144451], [-89.857043, 30.144421], [-89.857052, 30.144406], [-89.857063, 30.144392], [-89.857096, 30.14435], [-89.85717, 30.144292], [-89.857196, 30.144251], [-89.860589, 30.141528], [-89.860702, 30.141462], [-89.860778, 30.141406], [-89.860813, 30.14136], [-89.860852, 30.141284], [-89.860884, 30.141264], [-89.860899, 30.141255], [-89.860919, 30.141254], [-89.860964, 30.141253], [-89.861023, 30.141249], [-89.86107, 30.141239], [-89.861111, 30.141214], [-89.86114, 30.141186], [-89.861153, 30.141174], [-89.861165, 30.141162], [-89.861206, 30.141122], [-89.861275, 30.141038], [-89.861291, 30.141018], [-89.861292, 30.140988], [-89.861291, 30.140966], [-89.861276, 30.14092], [-89.861251, 30.14087], [-89.861222, 30.140838], [-89.861199, 30.140823], [-89.861152, 30.140796], [-89.86109, 30.140792], [-89.861028, 30.140777], [-89.861014, 30.140765], [-89.860995, 30.140736], [-89.860975, 30.140715], [-89.860957, 30.140694], [-89.860938, 30.140647], [-89.860976, 30.140557], [-89.860982, 30.140541], [-89.860985, 30.140525], [-89.860992, 30.140479], [-89.860988, 30.140417], [-89.860969, 30.14038], [-89.860955, 30.140366], [-89.860919, 30.140351], [-89.860889, 30.140343], [-89.860839, 30.140346], [-89.860805, 30.140348], [-89.860782, 30.140304], [-89.860801, 30.140292], [-89.860861, 30.140254], [-89.860905, 30.140217], [-89.860929, 30.140163], [-89.86093, 30.140111], [-89.860912, 30.14005], [-89.860907, 30.140031], [-89.860903, 30.139998], [-89.860902, 30.139967], [-89.8609, 30.139941], [-89.860897, 30.139905], [-89.860835, 30.139903], [-89.860776, 30.139887], [-89.860761, 30.139863], [-89.860748, 30.139841], [-89.86078, 30.139781], [-89.860802, 30.139729], [-89.860809, 30.13971], [-89.860815, 30.139689], [-89.860821, 30.139643], [-89.860819, 30.139605], [-89.860818, 30.139589], [-89.860816, 30.139564], [-89.860815, 30.13954], [-89.86082, 30.139455], [-89.86079, 30.139411], [-89.860772, 30.139366], [-89.860808, 30.139349], [-89.860824, 30.139341], [-89.860857, 30.139326], [-89.860865, 30.139263], [-89.860858, 30.139225], [-89.86085, 30.139203], [-89.860843, 30.139179], [-89.860838, 30.139158], [-89.860831, 30.139126], [-89.860806, 30.139067], [-89.860795, 30.139043], [-89.860762, 30.139005], [-89.860753, 30.138978], [-89.860743, 30.138946], [-89.86076, 30.138927], [-89.860806, 30.138875], [-89.860815, 30.138861], [-89.860825, 30.138818], [-89.860834, 30.138783], [-89.86084, 30.138757], [-89.860856, 30.138742], [-89.860884, 30.138721], [-89.860901, 30.138707], [-89.860916, 30.138691], [-89.86096, 30.138635], [-89.861, 30.138589], [-89.861035, 30.138557], [-89.861092, 30.138531], [-89.861151, 30.138497], [-89.861205, 30.138447], [-89.861216, 30.138434], [-89.861229, 30.138398], [-89.861233, 30.138382], [-89.861235, 30.138358], [-89.861238, 30.138336], [-89.861247, 30.13831], [-89.861284, 30.138191], [-89.861265, 30.138134], [-89.861247, 30.138114], [-89.861229, 30.138094], [-89.861202, 30.138081], [-89.861172, 30.138068], [-89.861141, 30.138056], [-89.861124, 30.138041], [-89.861107, 30.138019], [-89.861064, 30.137947], [-89.861025, 30.137881], [-89.860972, 30.13775], [-89.860968, 30.137734], [-89.860952, 30.137657], [-89.860949, 30.137642], [-89.860938, 30.137584], [-89.860935, 30.137569], [-89.860924, 30.1375], [-89.86091, 30.137449], [-89.860899, 30.137421], [-89.860889, 30.137397], [-89.860876, 30.137356], [-89.860873, 30.137339], [-89.860867, 30.137294], [-89.860866, 30.137278], [-89.860861, 30.137178], [-89.860864, 30.13713], [-89.860862, 30.137114], [-89.860859, 30.137091], [-89.860843, 30.137046], [-89.860833, 30.137029], [-89.860802, 30.136976], [-89.860795, 30.136951], [-89.860791, 30.13693], [-89.860785, 30.1369], [-89.860784, 30.136884], [-89.860779, 30.136837], [-89.860745, 30.13677], [-89.860723, 30.136744], [-89.860703, 30.13672], [-89.860671, 30.136654], [-89.860639, 30.136539], [-89.860637, 30.136518], [-89.860636, 30.136497], [-89.860634, 30.136469], [-89.860643, 30.13644], [-89.860648, 30.136425], [-89.860657, 30.136396], [-89.860662, 30.136359], [-89.860654, 30.136325], [-89.86065, 30.136309], [-89.860645, 30.136286], [-89.860644, 30.136266], [-89.860659, 30.136231], [-89.860676, 30.136195], [-89.860682, 30.136175], [-89.860682, 30.136146], [-89.860675, 30.136116], [-89.860665, 30.136088], [-89.860638, 30.136013], [-89.860636, 30.135996], [-89.86066, 30.135962], [-89.860686, 30.135948], [-89.860706, 30.135938], [-89.860718, 30.135926], [-89.860735, 30.135904], [-89.860735, 30.135882], [-89.860726, 30.135862], [-89.860715, 30.135848], [-89.860689, 30.135835], [-89.860663, 30.135829], [-89.860624, 30.135823], [-89.860631, 30.1358], [-89.86064, 30.135771], [-89.860644, 30.135716], [-89.860631, 30.135674], [-89.860594, 30.135644], [-89.860587, 30.135627], [-89.860574, 30.135597], [-89.860569, 30.135538], [-89.860555, 30.135492], [-89.860549, 30.135475], [-89.86054, 30.135459], [-89.860518, 30.135423], [-89.8605, 30.135395], [-89.860484, 30.135371], [-89.860476, 30.13534], [-89.860471, 30.135312], [-89.860476, 30.135257], [-89.860496, 30.135104], [-89.860497, 30.135084], [-89.860501, 30.134954], [-89.860509, 30.134939], [-89.860531, 30.134915], [-89.86057, 30.13489], [-89.860586, 30.13488], [-89.860602, 30.134872], [-89.860641, 30.134854], [-89.860691, 30.134817], [-89.860702, 30.134802], [-89.860716, 30.134752], [-89.860712, 30.134729], [-89.8607, 30.134704], [-89.860677, 30.134678], [-89.860656, 30.134655], [-89.860638, 30.134637], [-89.860587, 30.134601], [-89.860572, 30.13459], [-89.860547, 30.134585], [-89.860521, 30.13458], [-89.860495, 30.134561], [-89.860475, 30.134542], [-89.86045, 30.134499], [-89.860435, 30.134477], [-89.860423, 30.13446], [-89.860404, 30.134434], [-89.860361, 30.134362], [-89.860262, 30.134195], [-89.860201, 30.134097], [-89.860168, 30.134026], [-89.860133, 30.133979], [-89.860121, 30.133965], [-89.860099, 30.13394], [-89.860075, 30.133908], [-89.860041, 30.133843], [-89.860034, 30.1338], [-89.860009, 30.133757], [-89.859999, 30.133743], [-89.859975, 30.133706], [-89.859943, 30.133597], [-89.8599, 30.133403], [-89.859898, 30.133387], [-89.859874, 30.133226], [-89.859871, 30.13321], [-89.859864, 30.133156], [-89.859875, 30.133101], [-89.859888, 30.13304], [-89.85988, 30.132968], [-89.859837, 30.132856], [-89.859794, 30.132803], [-89.85978, 30.132786], [-89.859742, 30.13273], [-89.859723, 30.13268], [-89.85972, 30.132664], [-89.859717, 30.132635], [-89.859716, 30.132619], [-89.85971, 30.132566], [-89.8597, 30.132534], [-89.859691, 30.132507], [-89.859678, 30.132479], [-89.859662, 30.132445], [-89.85961, 30.132302], [-89.859575, 30.132248], [-89.859534, 30.132182], [-89.859479, 30.132069], [-89.859447, 30.131997], [-89.859415, 30.131912], [-89.859397, 30.131858], [-89.859379, 30.131814], [-89.859356, 30.131774], [-89.859345, 30.131753], [-89.859331, 30.13172], [-89.859328, 30.131694], [-89.859325, 30.131662], [-89.859326, 30.131631], [-89.859327, 30.131592], [-89.859325, 30.131576], [-89.85932, 30.131536], [-89.8593, 30.131473], [-89.859275, 30.13143], [-89.859209, 30.131357], [-89.859159, 30.1313], [-89.859079, 30.131131], [-89.859048, 30.131059], [-89.859021, 30.13098], [-89.859001, 30.130898], [-89.858996, 30.130849], [-89.858992, 30.130821], [-89.858961, 30.130748], [-89.858913, 30.130696], [-89.85887, 30.130649], [-89.858845, 30.130558], [-89.858842, 30.130541], [-89.858834, 30.130475], [-89.858803, 30.130396], [-89.858766, 30.130356], [-89.858736, 30.130338], [-89.858696, 30.130318], [-89.858637, 30.130287], [-89.85861, 30.130258], [-89.858596, 30.130233], [-89.858587, 30.130215], [-89.858558, 30.130115], [-89.858533, 30.130034], [-89.858508, 30.129978], [-89.858457, 30.129921], [-89.858389, 30.129849], [-89.858327, 30.129758], [-89.858288, 30.129649], [-89.858236, 30.129553], [-89.858195, 30.129482], [-89.857847, 30.128873], [-89.85767, 30.128484], [-89.857466, 30.128168], [-89.857322, 30.127945], [-89.857056, 30.127487], [-89.856679, 30.126974], [-89.856594, 30.126865], [-89.856541, 30.126813], [-89.856471, 30.126761], [-89.856305, 30.126646], [-89.856259, 30.126611], [-89.856227, 30.126572], [-89.856179, 30.126484], [-89.856134, 30.126418], [-89.856083, 30.126355], [-89.855951, 30.126192], [-89.855901, 30.126112], [-89.855879, 30.126042], [-89.855879, 30.126024], [-89.855882, 30.125919], [-89.855871, 30.125877], [-89.855863, 30.125853], [-89.855829, 30.1258], [-89.855762, 30.125713], [-89.855745, 30.125692], [-89.855623, 30.125545], [-89.855461, 30.125307], [-89.855389, 30.125186], [-89.855363, 30.125138], [-89.855341, 30.125061], [-89.855328, 30.125033], [-89.855319, 30.125017], [-89.855293, 30.124978], [-89.855241, 30.12491], [-89.855222, 30.124866], [-89.855171, 30.124768], [-89.855158, 30.124752], [-89.855137, 30.124726], [-89.855117, 30.124683], [-89.855105, 30.124652], [-89.855102, 30.124632], [-89.855099, 30.12461], [-89.855096, 30.124585], [-89.855092, 30.124548], [-89.855065, 30.124474], [-89.854988, 30.124328], [-89.854865, 30.124155], [-89.854614, 30.123867], [-89.854568, 30.123815], [-89.854544, 30.123783], [-89.85452, 30.123745], [-89.854505, 30.12372], [-89.854493, 30.123705], [-89.854469, 30.123673], [-89.854454, 30.12366], [-89.854437, 30.123646], [-89.854421, 30.12363], [-89.854397, 30.123604], [-89.854386, 30.123579], [-89.854372, 30.123547], [-89.854373, 30.12353], [-89.854376, 30.123496], [-89.854394, 30.12337], [-89.854422, 30.123285], [-89.854475, 30.123174], [-89.854537, 30.123068], [-89.854591, 30.123027], [-89.854629, 30.123002], [-89.854645, 30.12299], [-89.854672, 30.122959], [-89.854683, 30.12294], [-89.854705, 30.122902], [-89.854801, 30.122727], [-89.854783, 30.122678], [-89.854586, 30.122496], [-89.854559, 30.1225], [-89.85451, 30.122507], [-89.854483, 30.122515], [-89.854453, 30.122527], [-89.854398, 30.122552], [-89.854348, 30.122511], [-89.854341, 30.122494], [-89.854328, 30.122466], [-89.854284, 30.122423], [-89.854228, 30.122418], [-89.854205, 30.122423], [-89.854168, 30.122442], [-89.854142, 30.12246], [-89.85412, 30.122484], [-89.854106, 30.12251], [-89.854089, 30.122554], [-89.854077, 30.1226], [-89.854058, 30.122652], [-89.854031, 30.122679], [-89.854011, 30.122692], [-89.853982, 30.1227], [-89.853962, 30.122705], [-89.853944, 30.12271], [-89.853927, 30.122705], [-89.85387, 30.122689], [-89.853862, 30.122673], [-89.853846, 30.122638], [-89.853842, 30.122602], [-89.853845, 30.122573], [-89.853858, 30.122547], [-89.85387, 30.122526], [-89.853891, 30.122512], [-89.853908, 30.122503], [-89.853923, 30.122494], [-89.853939, 30.122483], [-89.853963, 30.122463], [-89.853985, 30.122435], [-89.85399, 30.122417], [-89.853973, 30.122339], [-89.853925, 30.122315], [-89.853885, 30.122309], [-89.853851, 30.122305], [-89.85377, 30.122305], [-89.853731, 30.122338], [-89.853679, 30.122351], [-89.853657, 30.122314], [-89.853688, 30.122282], [-89.853708, 30.122229], [-89.853711, 30.122167], [-89.853708, 30.122152], [-89.853692, 30.122061], [-89.853684, 30.122041], [-89.853634, 30.122006], [-89.853574, 30.121978], [-89.853542, 30.121943], [-89.853535, 30.121926], [-89.853531, 30.121907], [-89.853531, 30.121889], [-89.853554, 30.121864], [-89.853577, 30.121853], [-89.853622, 30.121841], [-89.853651, 30.121816], [-89.853665, 30.121805], [-89.853668, 30.121787], [-89.853675, 30.121737], [-89.853678, 30.12172], [-89.853592, 30.121718], [-89.853519, 30.121748], [-89.8535, 30.121752], [-89.85346, 30.121761], [-89.853441, 30.121761], [-89.853391, 30.121755], [-89.853384, 30.121727], [-89.853383, 30.121707], [-89.853389, 30.121652], [-89.853358, 30.121618], [-89.853326, 30.121592], [-89.853304, 30.121574], [-89.853222, 30.121575], [-89.853199, 30.121573], [-89.853153, 30.121567], [-89.853107, 30.121534], [-89.853079, 30.121474], [-89.853114, 30.121432], [-89.853213, 30.121415], [-89.853264, 30.121373], [-89.853275, 30.121343], [-89.853282, 30.121309], [-89.853282, 30.121251], [-89.853241, 30.121226], [-89.853183, 30.121214], [-89.853166, 30.121177], [-89.853182, 30.121145], [-89.853195, 30.121128], [-89.853229, 30.121107], [-89.853291, 30.121076], [-89.853307, 30.121057], [-89.85332, 30.121023], [-89.853322, 30.121], [-89.853326, 30.120975], [-89.85335, 30.120944], [-89.853381, 30.120902], [-89.853416, 30.120837], [-89.853444, 30.120804], [-89.853447, 30.120783], [-89.853436, 30.120759], [-89.853393, 30.120736], [-89.853299, 30.120722], [-89.853283, 30.120713], [-89.853281, 30.120691], [-89.853273, 30.120597], [-89.853269, 30.120575], [-89.853266, 30.120556], [-89.853222, 30.120479], [-89.85322, 30.120458], [-89.853217, 30.120418], [-89.853214, 30.120397], [-89.853211, 30.120368], [-89.853205, 30.120348], [-89.853183, 30.120314], [-89.853168, 30.120275], [-89.853162, 30.120255], [-89.853146, 30.120218], [-89.853115, 30.120202], [-89.853098, 30.120199], [-89.853055, 30.12021], [-89.853037, 30.120219], [-89.852996, 30.120253], [-89.85298, 30.120266], [-89.852962, 30.120276], [-89.85293, 30.120292], [-89.852911, 30.120302], [-89.852847, 30.120312], [-89.852827, 30.120316], [-89.852806, 30.120318], [-89.852626, 30.120338], [-89.852568, 30.120317], [-89.852574, 30.120258], [-89.852626, 30.120168], [-89.852655, 30.1201], [-89.852704, 30.120027], [-89.852744, 30.119986], [-89.85279, 30.11995], [-89.85284, 30.119913], [-89.85289, 30.119863], [-89.852924, 30.119808], [-89.852948, 30.119754], [-89.852973, 30.119705], [-89.852997, 30.119664], [-89.853042, 30.119614], [-89.853112, 30.119559], [-89.853147, 30.119522], [-89.853161, 30.119477], [-89.853162, 30.119419], [-89.853157, 30.119389], [-89.853152, 30.119374], [-89.853134, 30.119331], [-89.853104, 30.119302], [-89.853086, 30.119289], [-89.853006, 30.119257], [-89.852916, 30.119255], [-89.852813, 30.119244], [-89.852725, 30.119232], [-89.852668, 30.119202], [-89.85261, 30.119154], [-89.852573, 30.11912], [-89.852515, 30.119085], [-89.852458, 30.119046], [-89.85241, 30.118998], [-89.852379, 30.118953], [-89.85237, 30.118939], [-89.852366, 30.118922], [-89.852361, 30.118904], [-89.852355, 30.118879], [-89.852355, 30.118861], [-89.852356, 30.11883], [-89.852356, 30.118807], [-89.852356, 30.118788], [-89.852355, 30.11875], [-89.852342, 30.118709], [-89.852332, 30.118687], [-89.852292, 30.118626], [-89.85226, 30.118595], [-89.852222, 30.11857], [-89.852207, 30.118561], [-89.852191, 30.118553], [-89.852173, 30.118545], [-89.852144, 30.118529], [-89.852116, 30.118471], [-89.852132, 30.118459], [-89.852183, 30.118425], [-89.852172, 30.118359], [-89.852047, 30.118281], [-89.851984, 30.118262], [-89.851922, 30.118241], [-89.851831, 30.118217], [-89.851693, 30.118215], [-89.851638, 30.118273], [-89.851623, 30.11829], [-89.851582, 30.118333], [-89.851562, 30.118328], [-89.851535, 30.118319], [-89.851523, 30.118285], [-89.851518, 30.11827], [-89.85152, 30.118253], [-89.851525, 30.118208], [-89.851553, 30.118142], [-89.851601, 30.118068], [-89.851638, 30.117998], [-89.851706, 30.11784], [-89.851743, 30.117767], [-89.851779, 30.117683], [-89.851786, 30.117666], [-89.851788, 30.117647], [-89.85179, 30.117605], [-89.851786, 30.117583], [-89.851774, 30.117546], [-89.851756, 30.117508], [-89.851752, 30.117488], [-89.851744, 30.117444], [-89.851737, 30.117422], [-89.851686, 30.117361], [-89.85166, 30.117299], [-89.851651, 30.117279], [-89.851631, 30.117232], [-89.851612, 30.117228], [-89.851565, 30.117218], [-89.851534, 30.117216], [-89.851475, 30.117219], [-89.851419, 30.11722], [-89.851274, 30.117167], [-89.851199, 30.117127], [-89.851151, 30.117105], [-89.851097, 30.117048], [-89.851076, 30.117013], [-89.851034, 30.11697], [-89.85098, 30.116926], [-89.85093, 30.116891], [-89.850884, 30.116852], [-89.850802, 30.116776], [-89.850728, 30.116679], [-89.850677, 30.116628], [-89.850638, 30.116583], [-89.850624, 30.116547], [-89.850618, 30.116531], [-89.850616, 30.116514], [-89.850614, 30.116487], [-89.85062, 30.116446], [-89.850622, 30.116425], [-89.850607, 30.116377], [-89.850558, 30.116351], [-89.850541, 30.116344], [-89.850524, 30.116335], [-89.850487, 30.116317], [-89.850468, 30.116308], [-89.850448, 30.1163], [-89.850407, 30.116283], [-89.850314, 30.116209], [-89.850281, 30.116156], [-89.850267, 30.116095], [-89.850274, 30.116046], [-89.850286, 30.115963], [-89.850273, 30.115898], [-89.850245, 30.115867], [-89.850226, 30.115846], [-89.850205, 30.11584], [-89.850162, 30.115831], [-89.850144, 30.115823], [-89.850094, 30.115802], [-89.850069, 30.115792], [-89.850042, 30.115783], [-89.850002, 30.115769], [-89.849934, 30.115748], [-89.849901, 30.115755], [-89.84988, 30.115758], [-89.849827, 30.115723], [-89.849811, 30.115712], [-89.849803, 30.115695], [-89.849786, 30.115657], [-89.849788, 30.115636], [-89.849794, 30.115611], [-89.849795, 30.115591], [-89.84978, 30.115552], [-89.84977, 30.115537], [-89.849755, 30.115521], [-89.849747, 30.115507], [-89.849733, 30.115471], [-89.849728, 30.115451], [-89.849718, 30.115406], [-89.849714, 30.115386], [-89.849703, 30.115331], [-89.8497, 30.115313], [-89.849691, 30.115297], [-89.849662, 30.115246], [-89.849606, 30.115195], [-89.849584, 30.115139], [-89.849589, 30.115099], [-89.849604, 30.11508], [-89.84962, 30.11506], [-89.849624, 30.115034], [-89.84962, 30.115012], [-89.849596, 30.114978], [-89.849587, 30.114961], [-89.849569, 30.114929], [-89.849566, 30.114908], [-89.849566, 30.114892], [-89.849566, 30.114856], [-89.849563, 30.114835], [-89.84956, 30.11481], [-89.84955, 30.114789], [-89.849521, 30.114751], [-89.849504, 30.114738], [-89.849457, 30.11471], [-89.849399, 30.114682], [-89.849361, 30.114657], [-89.84933, 30.114631], [-89.849316, 30.114616], [-89.849283, 30.11457], [-89.84925, 30.114541], [-89.849139, 30.114387], [-89.849128, 30.114372], [-89.849122, 30.114354], [-89.849112, 30.114317], [-89.849089, 30.114287], [-89.849072, 30.114269], [-89.849054, 30.114253], [-89.849008, 30.114213], [-89.848899, 30.114056], [-89.84878, 30.113872], [-89.84875, 30.113807], [-89.848742, 30.113791], [-89.848742, 30.113769], [-89.848742, 30.113753], [-89.84876, 30.113725], [-89.84877, 30.113711], [-89.848784, 30.1137], [-89.848865, 30.113634], [-89.848902, 30.113611], [-89.848959, 30.113593], [-89.848999, 30.113583], [-89.849013, 30.113573], [-89.84904, 30.113549], [-89.849054, 30.113531], [-89.849074, 30.113501], [-89.849085, 30.113461], [-89.849065, 30.113419], [-89.849048, 30.113405], [-89.848918, 30.113319], [-89.848811, 30.113252], [-89.848746, 30.113192], [-89.848683, 30.113124], [-89.848648, 30.113071], [-89.848634, 30.113028], [-89.848633, 30.113007], [-89.848632, 30.112963], [-89.848644, 30.112858], [-89.848696, 30.112753], [-89.848704, 30.112736], [-89.848724, 30.112708], [-89.848727, 30.112689], [-89.848727, 30.112672], [-89.848726, 30.112653], [-89.848721, 30.112633], [-89.848716, 30.112606], [-89.848712, 30.112584], [-89.848711, 30.112564], [-89.848714, 30.112522], [-89.848714, 30.112506], [-89.84871, 30.112488], [-89.848695, 30.112447], [-89.848671, 30.112406], [-89.848639, 30.112345], [-89.848631, 30.112329], [-89.848618, 30.112318], [-89.848581, 30.112285], [-89.848543, 30.112253], [-89.848503, 30.112199], [-89.848482, 30.112154], [-89.8484, 30.112049], [-89.848364, 30.111986], [-89.848299, 30.111827], [-89.848265, 30.111737], [-89.848228, 30.111631], [-89.84822, 30.111564], [-89.848225, 30.11154], [-89.848236, 30.111499], [-89.84824, 30.111482], [-89.848243, 30.111466], [-89.848241, 30.111438], [-89.848237, 30.111412], [-89.848222, 30.111393], [-89.848204, 30.111369], [-89.848126, 30.111355], [-89.848061, 30.111327], [-89.848012, 30.111285], [-89.847998, 30.111273], [-89.847987, 30.111259], [-89.847953, 30.111213], [-89.847939, 30.111164], [-89.847948, 30.11114], [-89.847965, 30.111115], [-89.847985, 30.111058], [-89.847941, 30.111], [-89.847926, 30.110964], [-89.847923, 30.110946], [-89.847931, 30.110923], [-89.847937, 30.110906], [-89.847944, 30.11089], [-89.847938, 30.110865], [-89.847927, 30.110848], [-89.847916, 30.110836], [-89.847895, 30.110821], [-89.847865, 30.110798], [-89.84785, 30.110787], [-89.84784, 30.110772], [-89.847796, 30.110704], [-89.847746, 30.110627], [-89.847727, 30.110588], [-89.847723, 30.110567], [-89.84772, 30.110547], [-89.847718, 30.110526], [-89.847715, 30.110482], [-89.847709, 30.110462], [-89.847686, 30.110426], [-89.847677, 30.110413], [-89.84766, 30.110408], [-89.84762, 30.110397], [-89.847597, 30.11039], [-89.847573, 30.110383], [-89.847536, 30.110371], [-89.847509, 30.110337], [-89.847497, 30.110321], [-89.847444, 30.110274], [-89.847423, 30.110263], [-89.847391, 30.110247], [-89.847361, 30.11023], [-89.847336, 30.110222], [-89.847292, 30.11022], [-89.847272, 30.110221], [-89.847219, 30.110223], [-89.847199, 30.110224], [-89.847181, 30.110218], [-89.847121, 30.110196], [-89.847068, 30.110153], [-89.847055, 30.110141], [-89.847046, 30.110126], [-89.847026, 30.110094], [-89.847026, 30.110073], [-89.847027, 30.110049], [-89.847031, 30.110031], [-89.847044, 30.109994], [-89.847041, 30.109954], [-89.84703, 30.109934], [-89.847001, 30.109905], [-89.846988, 30.109893], [-89.846976, 30.10988], [-89.846938, 30.109843], [-89.846901, 30.109808], [-89.846881, 30.109753], [-89.846859, 30.109678], [-89.84683, 30.109608], [-89.846658, 30.109477], [-89.845939, 30.108929], [-89.845234, 30.108391], [-89.8445, 30.107831], [-89.844227, 30.107622], [-89.844117, 30.107433], [-89.844076, 30.107361], [-89.843783, 30.106854], [-89.842538, 30.104698], [-89.839412, 30.10287], [-89.83942, 30.102854], [-89.839586, 30.102516], [-89.839642, 30.102368], [-89.839674, 30.102265], [-89.839702, 30.102195], [-89.839701, 30.102124], [-89.839687, 30.102088], [-89.839671, 30.102061], [-89.839635, 30.102032], [-89.839608, 30.102009], [-89.839579, 30.101967], [-89.83957, 30.101954], [-89.839585, 30.101895], [-89.839597, 30.10188], [-89.839625, 30.101845], [-89.839626, 30.101807], [-89.839617, 30.101712], [-89.839631, 30.101664], [-89.839387, 30.101541], [-89.839277, 30.101485], [-89.839172, 30.101834], [-89.839115, 30.101865], [-89.839049, 30.101856], [-89.839026, 30.101853], [-89.838999, 30.101799], [-89.838996, 30.101778], [-89.838985, 30.101678], [-89.838895, 30.101663], [-89.838815, 30.101673], [-89.838696, 30.101663], [-89.838569, 30.101623], [-89.838539, 30.101574], [-89.838518, 30.101525], [-89.838504, 30.101473], [-89.838502, 30.101452], [-89.838496, 30.101333], [-89.838452, 30.101204], [-89.838379, 30.101084], [-89.838346, 30.100949], [-89.838375, 30.100851], [-89.838607, 30.100626], [-89.838736, 30.100455], [-89.838878, 30.100232], [-89.839209, 30.099823], [-89.839278, 30.099712], [-89.839201, 30.099539], [-89.839155, 30.099501], [-89.83908, 30.099464], [-89.838921, 30.099061], [-89.838976, 30.098961], [-89.839014, 30.098801], [-89.838967, 30.098651], [-89.838852, 30.098539], [-89.838659, 30.098434], [-89.838521, 30.098387], [-89.838394, 30.098383], [-89.838286, 30.098398], [-89.838174, 30.098441], [-89.838066, 30.098479], [-89.837953, 30.098504], [-89.837794, 30.098552], [-89.837477, 30.098615], [-89.837344, 30.098641], [-89.837206, 30.098707], [-89.837113, 30.098718], [-89.836906, 30.098682], [-89.836821, 30.098629], [-89.836739, 30.09846], [-89.836635, 30.098445], [-89.836538, 30.098483], [-89.836445, 30.098494], [-89.836217, 30.098389], [-89.836072, 30.098387], [-89.835957, 30.098363], [-89.835877, 30.098279], [-89.835888, 30.098266], [-89.835913, 30.098238], [-89.835907, 30.098223], [-89.835896, 30.098193], [-89.835643, 30.098055], [-89.83555, 30.098034], [-89.835479, 30.098085], [-89.835433, 30.098127], [-89.835288, 30.098107], [-89.835111, 30.098053], [-89.835047, 30.097991], [-89.835053, 30.097976], [-89.835093, 30.097889], [-89.835132, 30.097798], [-89.83519, 30.097658], [-89.835206, 30.097525], [-89.83519, 30.097487], [-89.835103, 30.097341], [-89.83504, 30.097135], [-89.834976, 30.097051], [-89.83483, 30.096922], [-89.834606, 30.096859], [-89.834481, 30.096844], [-89.834238, 30.09684], [-89.83418, 30.096805], [-89.834112, 30.096789], [-89.834045, 30.096781], [-89.833952, 30.096779], [-89.833791, 30.096773], [-89.833578, 30.096738], [-89.833375, 30.096701], [-89.833272, 30.096708], [-89.833153, 30.096706], [-89.833049, 30.096695], [-89.832935, 30.096697], [-89.832852, 30.096681], [-89.832595, 30.09664], [-89.832425, 30.09667], [-89.832343, 30.096703], [-89.832245, 30.096706], [-89.832143, 30.096656], [-89.83192, 30.096629], [-89.831736, 30.096544], [-89.831544, 30.096507], [-89.831097, 30.096533], [-89.830983, 30.096535], [-89.830807, 30.096534], [-89.830538, 30.096518], [-89.829902, 30.096619], [-89.829713, 30.096737], [-89.829685, 30.096838], [-89.829691, 30.096916], [-89.829693, 30.096934], [-89.829628, 30.097018], [-89.829551, 30.097026], [-89.829484, 30.097005], [-89.829385, 30.096972], [-89.829298, 30.09696], [-89.829205, 30.096953], [-89.829128, 30.096946], [-89.829036, 30.096975], [-89.82898, 30.096998], [-89.828941, 30.097053], [-89.828846, 30.097064], [-89.828712, 30.097053], [-89.828604, 30.097051], [-89.828527, 30.097035], [-89.828413, 30.097015], [-89.828228, 30.097019], [-89.827934, 30.096989], [-89.827496, 30.096914], [-89.827096, 30.09686], [-89.826885, 30.096865], [-89.826572, 30.096876], [-89.826372, 30.096898], [-89.826065, 30.09694], [-89.825723, 30.09701], [-89.825509, 30.097082], [-89.825419, 30.097146], [-89.825299, 30.09718], [-89.825253, 30.097177], [-89.8252, 30.097142], [-89.825101, 30.097095], [-89.825019, 30.097097], [-89.824937, 30.097117], [-89.824888, 30.097176], [-89.824844, 30.097248], [-89.824833, 30.097308], [-89.82483, 30.097329], [-89.824771, 30.097419], [-89.824594, 30.097517], [-89.824522, 30.09751], [-89.824504, 30.097508], [-89.824485, 30.097504], [-89.824383, 30.097481], [-89.824285, 30.097488], [-89.824184, 30.097548], [-89.824063, 30.097636], [-89.823962, 30.097682], [-89.823881, 30.097742], [-89.823832, 30.097815], [-89.823817, 30.097933], [-89.823815, 30.097954], [-89.823775, 30.09817], [-89.823771, 30.098191], [-89.823743, 30.098394], [-89.823741, 30.098415], [-89.823661, 30.098564], [-89.823517, 30.098769], [-89.823308, 30.098853], [-89.823299, 30.098954], [-89.823331, 30.099197], [-89.823372, 30.099407], [-89.823408, 30.099596], [-89.823403, 30.099897], [-89.823402, 30.099919], [-89.823386, 30.100126], [-89.823385, 30.100147], [-89.823348, 30.100262], [-89.8231, 30.100348], [-89.822994, 30.100339], [-89.822821, 30.100274], [-89.822676, 30.100288], [-89.822531, 30.100291], [-89.822266, 30.10024], [-89.822146, 30.100208], [-89.82193, 30.100041], [-89.82177, 30.099975], [-89.821355, 30.099979], [-89.820823, 30.099818], [-89.820607, 30.099662], [-89.820323, 30.099405], [-89.820212, 30.099212], [-89.82006, 30.098963], [-89.820057, 30.098942], [-89.820042, 30.098815], [-89.819958, 30.098656], [-89.819845, 30.098372], [-89.8196, 30.098125], [-89.819318, 30.097925], [-89.81867, 30.097949], [-89.818621, 30.097951], [-89.818595, 30.097952], [-89.817807, 30.09798], [-89.816264, 30.098037], [-89.814795, 30.098091], [-89.813621, 30.098134], [-89.812788, 30.098164], [-89.81278, 30.098293], [-89.812779, 30.098314], [-89.812711, 30.098427], [-89.812626, 30.098499], [-89.812567, 30.098529], [-89.812343, 30.098597], [-89.812185, 30.098641], [-89.812086, 30.098672], [-89.811914, 30.098705], [-89.811661, 30.098698], [-89.811381, 30.098755], [-89.811115, 30.098766], [-89.810831, 30.098813], [-89.810671, 30.098828], [-89.810479, 30.098838], [-89.810326, 30.098852], [-89.810201, 30.098884], [-89.810062, 30.09891], [-89.80985, 30.098932], [-89.80954, 30.098936], [-89.809301, 30.098947], [-89.809218, 30.098955], [-89.809142, 30.098962], [-89.808895, 30.098926], [-89.808721, 30.098907], [-89.808487, 30.098872], [-89.80832, 30.098829], [-89.808224, 30.098834], [-89.808112, 30.098906], [-89.807934, 30.098961], [-89.807816, 30.098999], [-89.807523, 30.099011], [-89.807409, 30.098973], [-89.807283, 30.098964], [-89.806817, 30.099069], [-89.805951, 30.09929], [-89.805061, 30.099569], [-89.804415, 30.099768], [-89.804151, 30.09986], [-89.803462, 30.099967], [-89.803317, 30.099999], [-89.803232, 30.100047], [-89.803128, 30.100136], [-89.803063, 30.100201], [-89.803044, 30.100242], [-89.802946, 30.100296], [-89.802761, 30.100323], [-89.802647, 30.100303], [-89.802574, 30.100304], [-89.80248, 30.100295], [-89.802252, 30.100432], [-89.802023, 30.100599], [-89.801891, 30.100619], [-89.801798, 30.100621], [-89.801711, 30.1006], [-89.801656, 30.100555], [-89.801606, 30.100519], [-89.801496, 30.100518], [-89.80127, 30.10054], [-89.801185, 30.100514], [-89.801166, 30.100508], [-89.80103, 30.100534], [-89.800952, 30.100604], [-89.800939, 30.100617], [-89.800932, 30.100634], [-89.800915, 30.100675], [-89.800864, 30.10078], [-89.800676, 30.10094], [-89.800541, 30.101093], [-89.800443, 30.10117], [-89.800401, 30.101189], [-89.799934, 30.1014], [-89.799402, 30.101641], [-89.798579, 30.10209], [-89.798359, 30.10221], [-89.7983, 30.102232], [-89.797394, 30.102569], [-89.797161, 30.102608], [-89.797065, 30.102642], [-89.796597, 30.10281], [-89.794534, 30.103782], [-89.792515, 30.10446], [-89.792331, 30.104472], [-89.792086, 30.104443], [-89.791929, 30.104396], [-89.791744, 30.104391], [-89.791616, 30.104419], [-89.79153, 30.104438], [-89.791247, 30.1045], [-89.791133, 30.104471], [-89.791076, 30.104409], [-89.790936, 30.10444], [-89.79069, 30.104494], [-89.790702, 30.104686], [-89.790692, 30.104774], [-89.790648, 30.104818], [-89.790582, 30.104982], [-89.790611, 30.105065], [-89.790657, 30.105113], [-89.790686, 30.105184], [-89.790672, 30.105262], [-89.790624, 30.105336], [-89.790532, 30.105423], [-89.790364, 30.105583], [-89.790305, 30.105642], [-89.790141, 30.105638], [-89.790068, 30.105606], [-89.790018, 30.105607], [-89.789992, 30.105662], [-89.790026, 30.105735], [-89.790006, 30.1058], [-89.789975, 30.105859], [-89.789904, 30.105933], [-89.789879, 30.105935], [-89.789793, 30.105941], [-89.78983, 30.105972], [-89.789845, 30.105984], [-89.789863, 30.105988], [-89.789919, 30.106001], [-89.78997, 30.105976], [-89.790021, 30.105937], [-89.790073, 30.105931], [-89.790178, 30.106008], [-89.79023, 30.106114], [-89.790263, 30.106194], [-89.79023, 30.10627], [-89.790159, 30.106356], [-89.790047, 30.106429], [-89.789964, 30.106492], [-89.789871, 30.106552], [-89.789717, 30.106658], [-89.789564, 30.106747], [-89.789466, 30.106832], [-89.789384, 30.106936], [-89.789157, 30.107091], [-89.7891, 30.10714], [-89.789048, 30.107125], [-89.789089, 30.10705], [-89.789158, 30.106915], [-89.7888, 30.106911], [-89.788783, 30.106954], [-89.788733, 30.10708], [-89.788457, 30.107446], [-89.788182, 30.107742], [-89.787941, 30.107882], [-89.787784, 30.107922], [-89.787715, 30.10794], [-89.787599, 30.107952], [-89.787401, 30.107927], [-89.787328, 30.107917], [-89.787153, 30.107843], [-89.786755, 30.108063], [-89.786898, 30.108285], [-89.787197, 30.108792], [-89.787366, 30.109001], [-89.787582, 30.109239], [-89.78763, 30.109291], [-89.787745, 30.109417], [-89.788063, 30.109871], [-89.788192, 30.110116], [-89.788314, 30.110512], [-89.788362, 30.110565], [-89.788364, 30.110628], [-89.788365, 30.110645], [-89.788333, 30.11076], [-89.788285, 30.110828], [-89.788203, 30.110937], [-89.788109, 30.111022], [-89.788019, 30.111101], [-89.78799, 30.111162], [-89.787992, 30.111243], [-89.788004, 30.111319], [-89.787953, 30.111438], [-89.787894, 30.111523], [-89.787866, 30.11161], [-89.787853, 30.111704], [-89.78785, 30.111725], [-89.787817, 30.111789], [-89.787697, 30.111916], [-89.787533, 30.112107], [-89.787427, 30.112323], [-89.787381, 30.112455], [-89.787321, 30.112607], [-89.787231, 30.112703], [-89.78714, 30.112882], [-89.787073, 30.112967], [-89.786917, 30.113044], [-89.786843, 30.113126], [-89.786791, 30.113208], [-89.786762, 30.113279], [-89.786723, 30.113312], [-89.786638, 30.113385], [-89.786517, 30.113465], [-89.78633, 30.113553], [-89.786197, 30.113626], [-89.786128, 30.11368], [-89.786048, 30.113743], [-89.785761, 30.113943], [-89.785424, 30.114145], [-89.785273, 30.114275], [-89.78518, 30.114374], [-89.785013, 30.114472], [-89.784892, 30.114568], [-89.784785, 30.114584], [-89.784732, 30.114642], [-89.784685, 30.114742], [-89.784691, 30.11482], [-89.784717, 30.114903], [-89.784715, 30.114973], [-89.784715, 30.114994], [-89.784702, 30.11506], [-89.784699, 30.115081], [-89.784513, 30.115305], [-89.784107, 30.115646], [-89.783518, 30.116005], [-89.783156, 30.116251], [-89.782842, 30.116545], [-89.782752, 30.116604], [-89.78259, 30.116719], [-89.782415, 30.116791], [-89.782369, 30.116785], [-89.782319, 30.116768], [-89.782265, 30.116718], [-89.782261, 30.116697], [-89.782249, 30.116628], [-89.782246, 30.116611], [-89.782147, 30.116577], [-89.782012, 30.116619], [-89.781888, 30.116733], [-89.781785, 30.116833], [-89.781607, 30.116935], [-89.781547, 30.116976], [-89.781497, 30.117069], [-89.781418, 30.117201], [-89.781401, 30.117317], [-89.781399, 30.117333], [-89.781456, 30.117469], [-89.781501, 30.117525], [-89.781475, 30.117626], [-89.781342, 30.117733], [-89.781254, 30.117814], [-89.780928, 30.118011], [-89.780869, 30.11806], [-89.78067, 30.118226], [-89.78053, 30.118353], [-89.780349, 30.118452], [-89.779946, 30.118855], [-89.779754, 30.119038], [-89.779573, 30.119221], [-89.779409, 30.119319], [-89.779341, 30.119346], [-89.779245, 30.119311], [-89.779077, 30.119298], [-89.778938, 30.119371], [-89.778844, 30.119484], [-89.778813, 30.119644], [-89.778809, 30.119664], [-89.778696, 30.11982], [-89.778459, 30.12014], [-89.778326, 30.120297], [-89.778124, 30.120421], [-89.778017, 30.120466], [-89.777932, 30.120439], [-89.777857, 30.120375], [-89.777658, 30.120268], [-89.777508, 30.120186], [-89.777438, 30.120154], [-89.777411, 30.120186], [-89.777432, 30.120265], [-89.777493, 30.120357], [-89.777534, 30.120449], [-89.777529, 30.120489], [-89.777527, 30.12051], [-89.777423, 30.120666], [-89.777258, 30.120843], [-89.777202, 30.120936], [-89.777206, 30.121088], [-89.777221, 30.121232], [-89.777223, 30.12125], [-89.777172, 30.121327], [-89.777133, 30.121399], [-89.77699, 30.121484], [-89.776863, 30.121552], [-89.776701, 30.121617], [-89.776492, 30.121687], [-89.776343, 30.121766], [-89.776165, 30.121882], [-89.775965, 30.122044], [-89.775684, 30.122263], [-89.775416, 30.122502], [-89.775212, 30.122735], [-89.774934, 30.12303], [-89.774652, 30.12329], [-89.774528, 30.12345], [-89.774464, 30.123457], [-89.77437, 30.123438], [-89.774265, 30.123461], [-89.774196, 30.123498], [-89.774176, 30.123548], [-89.774253, 30.123705], [-89.774251, 30.123745], [-89.77425, 30.123766], [-89.774228, 30.123822], [-89.774182, 30.123828], [-89.774128, 30.123773], [-89.77408, 30.123739], [-89.774033, 30.12374], [-89.773981, 30.123751], [-89.773907, 30.123809], [-89.773885, 30.123885], [-89.773883, 30.124006], [-89.773881, 30.124022], [-89.773864, 30.124134], [-89.773861, 30.124155], [-89.773718, 30.12429], [-89.773485, 30.124534], [-89.77308, 30.124877], [-89.772588, 30.125248], [-89.772315, 30.125437], [-89.772229, 30.125479], [-89.772053, 30.125483], [-89.771926, 30.125516], [-89.771864, 30.125614], [-89.771857, 30.125705], [-89.771856, 30.125726], [-89.771789, 30.125854], [-89.771612, 30.126015], [-89.771195, 30.126359], [-89.771032, 30.126481], [-89.770986, 30.126516], [-89.770877, 30.126574], [-89.770766, 30.126602], [-89.770702, 30.126619], [-89.770662, 30.126623], [-89.770641, 30.126625], [-89.770612, 30.126577], [-89.770631, 30.1265], [-89.77064, 30.126468], [-89.770653, 30.126344], [-89.770603, 30.126259], [-89.77048, 30.126202], [-89.770345, 30.126159], [-89.770218, 30.126153], [-89.770134, 30.126118], [-89.769917, 30.126137], [-89.769933, 30.12618], [-89.769999, 30.126245], [-89.770053, 30.126335], [-89.770062, 30.126349], [-89.769835, 30.126535], [-89.769662, 30.126719], [-89.769517, 30.126835], [-89.769369, 30.126859], [-89.769232, 30.126852], [-89.769148, 30.126817], [-89.769052, 30.126783], [-89.768978, 30.12679], [-89.768854, 30.126834], [-89.768791, 30.126892], [-89.76878, 30.126921], [-89.768778, 30.126941], [-89.768801, 30.127041], [-89.768855, 30.127076], [-89.768958, 30.127136], [-89.769049, 30.127206], [-89.769123, 30.127303], [-89.769157, 30.127452], [-89.769165, 30.127562], [-89.769144, 30.127653], [-89.76907, 30.127737], [-89.768982, 30.12778], [-89.768916, 30.127777], [-89.768849, 30.127721], [-89.768807, 30.127681], [-89.768753, 30.127682], [-89.768746, 30.127739], [-89.768744, 30.12776], [-89.768697, 30.127895], [-89.768638, 30.128118], [-89.768593, 30.128217], [-89.768454, 30.128343], [-89.768373, 30.128412], [-89.76825, 30.128477], [-89.767961, 30.12854], [-89.767808, 30.128615], [-89.76768, 30.1287], [-89.767641, 30.128773], [-89.767637, 30.128842], [-89.767638, 30.128899], [-89.767639, 30.128918], [-89.767611, 30.128985], [-89.767514, 30.129034], [-89.767415, 30.129088], [-89.767356, 30.129089], [-89.767302, 30.129074], [-89.7672, 30.129051], [-89.767106, 30.129073], [-89.76703, 30.129142], [-89.766937, 30.129196], [-89.766765, 30.129194], [-89.766568, 30.129183], [-89.766384, 30.129176], [-89.766332, 30.12911], [-89.766299, 30.129018], [-89.766244, 30.128942], [-89.76603, 30.128926], [-89.76596, 30.128969], [-89.76588, 30.129089], [-89.76573, 30.129262], [-89.7655, 30.12951], [-89.765159, 30.12977], [-89.765041, 30.129798], [-89.764976, 30.12981], [-89.764942, 30.129852], [-89.76481, 30.130019], [-89.764611, 30.130338], [-89.764502, 30.13048], [-89.764362, 30.130576], [-89.764211, 30.130666], [-89.763824, 30.130757], [-89.763743, 30.130816], [-89.763686, 30.130925], [-89.763649, 30.131076], [-89.76358, 30.131175], [-89.763488, 30.131265], [-89.763273, 30.131445], [-89.76324, 30.13147], [-89.763089, 30.131588], [-89.762958, 30.131745], [-89.762858, 30.131886], [-89.762764, 30.131962], [-89.762734, 30.131908], [-89.762729, 30.131836], [-89.762663, 30.131838], [-89.762558, 30.131842], [-89.762535, 30.131958], [-89.762518, 30.132041], [-89.762514, 30.132058], [-89.7625, 30.132106], [-89.762448, 30.132122], [-89.762353, 30.132106], [-89.762296, 30.13211], [-89.762261, 30.132175], [-89.762239, 30.132241], [-89.762234, 30.132258], [-89.762285, 30.132303], [-89.762479, 30.132367], [-89.76251, 30.132409], [-89.762413, 30.13266], [-89.76217, 30.13259], [-89.762071, 30.132785], [-89.762002, 30.132822], [-89.761913, 30.132884], [-89.761836, 30.133016], [-89.761827, 30.133032], [-89.762003, 30.133143], [-89.76197, 30.133243], [-89.761941, 30.133332], [-89.761935, 30.13335], [-89.762143, 30.133456], [-89.762002, 30.13364], [-89.761902, 30.133707], [-89.761805, 30.133762], [-89.761657, 30.133747], [-89.761573, 30.133699], [-89.76145, 30.13367], [-89.761339, 30.133665], [-89.761257, 30.133667], [-89.761223, 30.133704], [-89.761235, 30.133746], [-89.761766, 30.133979], [-89.76171, 30.134158], [-89.761704, 30.134177], [-89.761823, 30.134229], [-89.761762, 30.134361], [-89.761632, 30.134403], [-89.761503, 30.134477], [-89.76135, 30.134665], [-89.761137, 30.134812], [-89.76102, 30.134872], [-89.760923, 30.13492], [-89.760904, 30.134991], [-89.760886, 30.135052], [-89.760821, 30.135089], [-89.760759, 30.13508], [-89.760691, 30.135135], [-89.760641, 30.135198], [-89.760665, 30.135306], [-89.760653, 30.135399], [-89.76065, 30.13542], [-89.760557, 30.135469], [-89.760458, 30.135503], [-89.760401, 30.135693], [-89.760379, 30.135786], [-89.760328, 30.135851], [-89.760174, 30.135985], [-89.760235, 30.136055], [-89.760334, 30.136174], [-89.760201, 30.136299], [-89.760156, 30.136289], [-89.75995, 30.136138], [-89.759768, 30.13629], [-89.759625, 30.136307], [-89.759458, 30.136321], [-89.759344, 30.136363], [-89.759171, 30.13648], [-89.758969, 30.136591], [-89.758886, 30.136682], [-89.758863, 30.136757], [-89.758829, 30.136876], [-89.758847, 30.136922], [-89.758899, 30.13698], [-89.758886, 30.137036], [-89.758882, 30.137056], [-89.758839, 30.137125], [-89.75877, 30.137147], [-89.758684, 30.137164], [-89.758633, 30.137232], [-89.758554, 30.137348], [-89.758468, 30.137499], [-89.758416, 30.137557], [-89.758408, 30.137611], [-89.758406, 30.137632], [-89.758367, 30.137708], [-89.758284, 30.137759], [-89.758236, 30.137771], [-89.758202, 30.137746], [-89.758217, 30.137715], [-89.758227, 30.137686], [-89.758198, 30.137612], [-89.758157, 30.137584], [-89.758033, 30.137576], [-89.757952, 30.137585], [-89.757817, 30.137588], [-89.757745, 30.137532], [-89.75758, 30.137647], [-89.757648, 30.137767], [-89.757658, 30.137783], [-89.757561, 30.137832], [-89.757473, 30.137756], [-89.757471, 30.137815], [-89.75747, 30.137832], [-89.757462, 30.13787], [-89.757455, 30.137897], [-89.757279, 30.137951], [-89.757166, 30.137993], [-89.757115, 30.138065], [-89.757104, 30.138113], [-89.7571, 30.138133], [-89.757048, 30.13817], [-89.75697, 30.138171], [-89.756924, 30.138185], [-89.756951, 30.138232], [-89.75698, 30.138284], [-89.756976, 30.138332], [-89.756975, 30.138353], [-89.756839, 30.138484], [-89.756883, 30.138564], [-89.756893, 30.138579], [-89.7568, 30.138631], [-89.756741, 30.138561], [-89.756645, 30.138641], [-89.75654, 30.138711], [-89.756426, 30.138738], [-89.756296, 30.138481], [-89.756237, 30.138418], [-89.756007, 30.138589], [-89.756057, 30.138814], [-89.756123, 30.138938], [-89.756099, 30.138977], [-89.756029, 30.138998], [-89.756116, 30.139161], [-89.756129, 30.139253], [-89.756132, 30.139271], [-89.756064, 30.13933], [-89.755999, 30.13932], [-89.755981, 30.139307], [-89.755862, 30.139174], [-89.755444, 30.139368], [-89.755443, 30.139492], [-89.755462, 30.139599], [-89.755501, 30.139676], [-89.755513, 30.139739], [-89.755516, 30.139754], [-89.755473, 30.139826], [-89.755392, 30.139878], [-89.755332, 30.139871], [-89.755315, 30.139859], [-89.755258, 30.139781], [-89.755231, 30.1397], [-89.755228, 30.139681], [-89.755219, 30.139622], [-89.755126, 30.139588], [-89.755053, 30.139604], [-89.755016, 30.139611], [-89.755384, 30.140058], [-89.755361, 30.140096], [-89.75522, 30.140109], [-89.755018, 30.1399], [-89.754893, 30.139974], [-89.754667, 30.139801], [-89.754547, 30.139792], [-89.754158, 30.140035], [-89.75436, 30.140292], [-89.754371, 30.140305], [-89.75423, 30.140401], [-89.754159, 30.140352], [-89.754064, 30.140429], [-89.754122, 30.140519], [-89.754119, 30.140539], [-89.754116, 30.14056], [-89.754076, 30.140586], [-89.754022, 30.14058], [-89.753972, 30.140563], [-89.753863, 30.140469], [-89.7538, 30.140417], [-89.753761, 30.14046], [-89.753778, 30.140499], [-89.753828, 30.140534], [-89.753846, 30.14059], [-89.753882, 30.140696], [-89.754068, 30.141009], [-89.754031, 30.141042], [-89.75393, 30.141026], [-89.753854, 30.140943], [-89.753801, 30.140972], [-89.753743, 30.140916], [-89.753538, 30.141074], [-89.753472, 30.141079], [-89.753378, 30.141084], [-89.753337, 30.141136], [-89.753353, 30.141192], [-89.753486, 30.141357], [-89.753497, 30.14137], [-89.753396, 30.14144], [-89.753337, 30.141352], [-89.753219, 30.141419], [-89.753106, 30.141325], [-89.753057, 30.141337], [-89.753063, 30.141394], [-89.753135, 30.14161], [-89.753141, 30.141627], [-89.752988, 30.141723], [-89.752848, 30.141533], [-89.75283, 30.141484], [-89.752784, 30.141456], [-89.752727, 30.141465], [-89.752434, 30.141688], [-89.752217, 30.141557], [-89.752164, 30.141562], [-89.752032, 30.141625], [-89.751969, 30.141691], [-89.751954, 30.14177], [-89.751952, 30.141786], [-89.751972, 30.141976], [-89.751939, 30.142097], [-89.751851, 30.142163], [-89.751763, 30.142272], [-89.751712, 30.142333], [-89.751643, 30.142367], [-89.751581, 30.142361], [-89.751501, 30.142284], [-89.751138, 30.142545], [-89.751041, 30.142465], [-89.750973, 30.142505], [-89.750947, 30.142598], [-89.750947, 30.142621], [-89.750944, 30.142643], [-89.750909, 30.142706], [-89.75081, 30.142836], [-89.750668, 30.142978], [-89.75044, 30.143026], [-89.750261, 30.143072], [-89.75001, 30.143191], [-89.749963, 30.143274], [-89.749955, 30.143346], [-89.749953, 30.143367], [-89.749891, 30.143479], [-89.749781, 30.143618], [-89.749833, 30.14371], [-89.749826, 30.143762], [-89.749823, 30.143783], [-89.749763, 30.143834], [-89.749686, 30.143846], [-89.749617, 30.143813], [-89.749574, 30.1438], [-89.749555, 30.143794], [-89.749505, 30.143847], [-89.749518, 30.143876], [-89.749527, 30.14389], [-89.74975, 30.14408], [-89.749786, 30.14417], [-89.749758, 30.14424], [-89.749665, 30.144281], [-89.749534, 30.144287], [-89.749457, 30.14431], [-89.749406, 30.14439], [-89.749407, 30.144451], [-89.749408, 30.144468], [-89.749386, 30.14456], [-89.749382, 30.144579], [-89.749377, 30.144599], [-89.749373, 30.144618], [-89.749358, 30.144631], [-89.749233, 30.144742], [-89.749048, 30.144863], [-89.748936, 30.144919], [-89.748891, 30.144936], [-89.748883, 30.144957], [-89.748878, 30.144978], [-89.748883, 30.145], [-89.748929, 30.145035], [-89.748943, 30.145046], [-89.748958, 30.145057], [-89.749045, 30.145116], [-89.749166, 30.145223], [-89.749209, 30.145292], [-89.749203, 30.145333], [-89.74919, 30.145353], [-89.749157, 30.145391], [-89.749141, 30.145433], [-89.749137, 30.145451], [-89.749174, 30.145514], [-89.749385, 30.145657], [-89.749716, 30.14588], [-89.749737, 30.145913], [-89.749746, 30.145934], [-89.749747, 30.145966], [-89.749748, 30.145987], [-89.749635, 30.146146], [-89.749597, 30.146147], [-89.749556, 30.146117], [-89.749486, 30.146065], [-89.749367, 30.145958], [-89.749258, 30.145871], [-89.749133, 30.14577], [-89.749098, 30.145805], [-89.749186, 30.145908], [-89.749224, 30.145938], [-89.749252, 30.145978], [-89.749266, 30.146009], [-89.74921, 30.146117], [-89.749066, 30.146419], [-89.748716, 30.146935], [-89.748634, 30.147101], [-89.748541, 30.14721], [-89.748425, 30.147275], [-89.748303, 30.147343], [-89.748215, 30.147434], [-89.748177, 30.147538], [-89.748131, 30.147638], [-89.748101, 30.147728], [-89.747991, 30.147837], [-89.747679, 30.148135], [-89.747434, 30.148457], [-89.747386, 30.148498], [-89.747288, 30.148503], [-89.747226, 30.148483], [-89.747163, 30.148442], [-89.747119, 30.148423], [-89.747155, 30.148506], [-89.747179, 30.148553], [-89.747187, 30.148568], [-89.747188, 30.148583], [-89.747189, 30.148609], [-89.747191, 30.14863], [-89.747132, 30.148727], [-89.747095, 30.148877], [-89.747054, 30.14901], [-89.747045, 30.149078], [-89.747064, 30.149163], [-89.747119, 30.149219], [-89.747144, 30.149303], [-89.747131, 30.149376], [-89.747128, 30.149397], [-89.747055, 30.149576], [-89.747024, 30.149636], [-89.746882, 30.149914], [-89.746687, 30.150204], [-89.746559, 30.150395], [-89.746408, 30.15064], [-89.746273, 30.150782], [-89.746168, 30.150837], [-89.745964, 30.150888], [-89.745764, 30.150913], [-89.745703, 30.150929], [-89.745667, 30.150962], [-89.745669, 30.151036], [-89.745707, 30.151089], [-89.745767, 30.151159], [-89.745822, 30.151215], [-89.745847, 30.151267], [-89.745835, 30.151354], [-89.745832, 30.151375], [-89.745732, 30.15159], [-89.745724, 30.151644], [-89.745721, 30.151665], [-89.745484, 30.151962], [-89.745376, 30.15215], [-89.745262, 30.152455], [-89.745224, 30.152565], [-89.745224, 30.152582], [-89.745227, 30.152657], [-89.745273, 30.152864], [-89.745271, 30.152925], [-89.745271, 30.152946], [-89.745245, 30.153042], [-89.745103, 30.153327], [-89.744899, 30.153666], [-89.744855, 30.153752], [-89.744841, 30.153781], [-89.744787, 30.153797], [-89.744764, 30.153804], [-89.744689, 30.153792], [-89.744628, 30.153764], [-89.744577, 30.153701], [-89.744558, 30.153634], [-89.744536, 30.153581], [-89.744478, 30.15355], [-89.744421, 30.153494], [-89.744314, 30.153475], [-89.744261, 30.153469], [-89.744161, 30.153407], [-89.74408, 30.153389], [-89.744049, 30.153385], [-89.743979, 30.153382], [-89.743914, 30.153391], [-89.743827, 30.153368], [-89.743741, 30.153355], [-89.743676, 30.153396], [-89.743609, 30.153461], [-89.743562, 30.153548], [-89.743554, 30.153597], [-89.743551, 30.153615], [-89.743589, 30.153657], [-89.743655, 30.153652], [-89.743716, 30.153644], [-89.74375, 30.153679], [-89.743762, 30.153736], [-89.743741, 30.153789], [-89.743668, 30.153816], [-89.743619, 30.153838], [-89.743606, 30.153888], [-89.743602, 30.153971], [-89.743601, 30.153992], [-89.743587, 30.154068], [-89.743583, 30.154088], [-89.743575, 30.15419], [-89.743574, 30.154209], [-89.743655, 30.15434], [-89.743755, 30.154488], [-89.743766, 30.154505], [-89.743743, 30.154541], [-89.743674, 30.154613], [-89.743735, 30.154637], [-89.743899, 30.154623], [-89.744027, 30.154638], [-89.744042, 30.154672], [-89.744049, 30.154688], [-89.74385, 30.154788], [-89.743834, 30.15488], [-89.743844, 30.154898], [-89.743889, 30.154963], [-89.74392, 30.155009], [-89.743909, 30.15503], [-89.743894, 30.155059], [-89.743875, 30.155068], [-89.743794, 30.155106], [-89.743693, 30.155172], [-89.743676, 30.155283], [-89.743674, 30.1553], [-89.743726, 30.155395], [-89.743859, 30.155475], [-89.743864, 30.155531], [-89.743824, 30.1557], [-89.743824, 30.155827], [-89.743824, 30.155845], [-89.743816, 30.155899], [-89.743814, 30.15592], [-89.74371, 30.156076], [-89.74367, 30.156243], [-89.743705, 30.156499], [-89.743852, 30.156628], [-89.743865, 30.156698], [-89.743855, 30.15676], [-89.743852, 30.156781], [-89.743808, 30.156807], [-89.743739, 30.156826], [-89.743717, 30.156883], [-89.743731, 30.15698], [-89.743752, 30.157049], [-89.743738, 30.157168], [-89.743736, 30.157189], [-89.743723, 30.157304], [-89.743721, 30.157323], [-89.743784, 30.1574], [-89.743827, 30.157474], [-89.743869, 30.157515], [-89.744013, 30.15752], [-89.744113, 30.157514], [-89.744169, 30.15758], [-89.744179, 30.157662], [-89.74421, 30.158082], [-89.744212, 30.158099], [-89.744169, 30.1582], [-89.744144, 30.158307], [-89.744124, 30.158343], [-89.744075, 30.158337], [-89.743996, 30.158307], [-89.743893, 30.158302], [-89.743799, 30.158311], [-89.743726, 30.158344], [-89.743645, 30.1584], [-89.743622, 30.158512], [-89.743542, 30.15848], [-89.743438, 30.158462], [-89.743417, 30.158459], [-89.743366, 30.158453], [-89.743325, 30.158464], [-89.743308, 30.158469], [-89.743256, 30.158576], [-89.743268, 30.158609], [-89.743283, 30.158623], [-89.7433, 30.158632], [-89.74332, 30.158643], [-89.74335, 30.158659], [-89.743374, 30.158801], [-89.743395, 30.158871], [-89.743404, 30.158929], [-89.743429, 30.158989], [-89.743452, 30.159024], [-89.743498, 30.159041], [-89.743592, 30.159069], [-89.743666, 30.1591], [-89.743685, 30.159108], [-89.743705, 30.159111], [-89.743781, 30.159121], [-89.743831, 30.159128], [-89.74389, 30.159166], [-89.743933, 30.159182], [-89.743975, 30.159214], [-89.74401, 30.159278], [-89.744125, 30.159523], [-89.744142, 30.159587], [-89.744144, 30.159649], [-89.744143, 30.15973], [-89.744153, 30.159829], [-89.744159, 30.159931], [-89.744183, 30.160086], [-89.744211, 30.160148], [-89.744287, 30.160221], [-89.744337, 30.160285], [-89.744358, 30.160334], [-89.744365, 30.160429], [-89.744415, 30.16064], [-89.744426, 30.160761], [-89.744456, 30.160914], [-89.744485, 30.16105], [-89.744493, 30.161089], [-89.744501, 30.161105], [-89.744541, 30.16113], [-89.74458, 30.161178], [-89.744569, 30.16124], [-89.744573, 30.161255], [-89.744589, 30.161312], [-89.744626, 30.161357], [-89.744677, 30.161378], [-89.74474, 30.161412], [-89.744779, 30.161441], [-89.744802, 30.161484], [-89.744836, 30.161527], [-89.744848, 30.161542], [-89.744868, 30.161547], [-89.74491, 30.161558], [-89.744931, 30.161564], [-89.744993, 30.161595], [-89.745052, 30.161594], [-89.745069, 30.161571], [-89.74508, 30.161553], [-89.745095, 30.161543], [-89.745186, 30.161482], [-89.745233, 30.161473], [-89.745283, 30.161481], [-89.745303, 30.161484], [-89.745318, 30.161494], [-89.745359, 30.16152], [-89.745402, 30.161581], [-89.74542, 30.161631], [-89.745481, 30.161692], [-89.745503, 30.161692], [-89.745558, 30.161692], [-89.74567, 30.161684], [-89.745821, 30.161689], [-89.745847, 30.161721], [-89.745845, 30.161744], [-89.745843, 30.161765], [-89.74581, 30.161793], [-89.745796, 30.161805], [-89.745786, 30.161818], [-89.745741, 30.161873], [-89.745735, 30.161917], [-89.745733, 30.161936], [-89.745731, 30.161996], [-89.74573, 30.162021], [-89.745722, 30.162036], [-89.745704, 30.16206], [-89.745695, 30.162077], [-89.745705, 30.162125], [-89.745717, 30.162141], [-89.74574, 30.162171], [-89.74573, 30.162214], [-89.745679, 30.162359], [-89.745677, 30.162394], [-89.745677, 30.162413], [-89.745686, 30.162462], [-89.745709, 30.162516], [-89.745746, 30.162565], [-89.74581, 30.162642], [-89.745849, 30.16265], [-89.745872, 30.162643], [-89.74592, 30.162617], [-89.745974, 30.162637], [-89.745991, 30.162644], [-89.746008, 30.162649], [-89.746069, 30.162664], [-89.746158, 30.162698], [-89.746198, 30.162734], [-89.746249, 30.162827], [-89.746236, 30.162875], [-89.746194, 30.162911], [-89.746159, 30.162943], [-89.746112, 30.16296], [-89.746043, 30.162962], [-89.745985, 30.162948], [-89.745942, 30.162923], [-89.745852, 30.162967], [-89.745836, 30.162975], [-89.745824, 30.162987], [-89.745798, 30.163015], [-89.745795, 30.163045], [-89.745801, 30.163133], [-89.745818, 30.163236], [-89.745889, 30.163407], [-89.74593, 30.163441], [-89.74595, 30.163441], [-89.746038, 30.163442], [-89.746095, 30.163462], [-89.746098, 30.163479], [-89.746103, 30.163504], [-89.746108, 30.163525], [-89.746255, 30.163601], [-89.746303, 30.163598], [-89.74645, 30.163491], [-89.746499, 30.163463], [-89.746551, 30.163443], [-89.746596, 30.163436], [-89.74666, 30.16347], [-89.746667, 30.163514], [-89.746662, 30.163559], [-89.74666, 30.16358], [-89.746635, 30.163616], [-89.746607, 30.163654], [-89.746599, 30.163697], [-89.746595, 30.163717], [-89.746558, 30.16379], [-89.746488, 30.163843], [-89.746446, 30.163871], [-89.746413, 30.163907], [-89.746372, 30.163975], [-89.746372, 30.164024], [-89.746372, 30.164043], [-89.746355, 30.164147], [-89.746352, 30.164168], [-89.746347, 30.164224], [-89.746345, 30.16424], [-89.746347, 30.164326], [-89.746365, 30.164379], [-89.746429, 30.164439], [-89.746471, 30.164461], [-89.746523, 30.164554], [-89.746509, 30.164599], [-89.746504, 30.164614], [-89.7465, 30.164629], [-89.746496, 30.164649], [-89.746524, 30.164694], [-89.746561, 30.164737], [-89.746612, 30.164788], [-89.746652, 30.164818], [-89.746674, 30.164834], [-89.746649, 30.164887], [-89.746748, 30.165015], [-89.746762, 30.165033], [-89.746869, 30.164977], [-89.74704, 30.164926], [-89.747097, 30.164942], [-89.747147, 30.164976], [-89.747193, 30.165076], [-89.747203, 30.165102], [-89.747238, 30.16519], [-89.747241, 30.16525], [-89.74724, 30.165272], [-89.74722, 30.165334], [-89.747146, 30.165351], [-89.747046, 30.165356], [-89.746756, 30.165374], [-89.746549, 30.165403], [-89.746331, 30.165463], [-89.746241, 30.165456], [-89.746208, 30.165526], [-89.746197, 30.165549], [-89.746308, 30.16555], [-89.7463, 30.165564], [-89.746247, 30.165661], [-89.746197, 30.16577], [-89.746205, 30.165874], [-89.746216, 30.165932], [-89.746266, 30.165997], [-89.746281, 30.166051], [-89.746278, 30.166159], [-89.746258, 30.166264], [-89.746254, 30.166284], [-89.746204, 30.166431], [-89.746157, 30.166486], [-89.746119, 30.166485], [-89.746098, 30.166481], [-89.746051, 30.166451], [-89.74602, 30.166385], [-89.745989, 30.166298], [-89.745955, 30.166253], [-89.745916, 30.166233], [-89.745849, 30.166226], [-89.745753, 30.166241], [-89.745644, 30.166256], [-89.745564, 30.166299], [-89.745431, 30.166331], [-89.745317, 30.166366], [-89.745232, 30.166405], [-89.74519, 30.166452], [-89.745169, 30.166523], [-89.74518, 30.166598], [-89.745195, 30.166709], [-89.745245, 30.166779], [-89.74526, 30.166848], [-89.745255, 30.16691], [-89.745254, 30.166928], [-89.745284, 30.166994], [-89.745329, 30.16706], [-89.745388, 30.167112], [-89.745456, 30.167165], [-89.745524, 30.167205], [-89.745572, 30.167225], [-89.745591, 30.167233], [-89.745611, 30.167239], [-89.745669, 30.167256], [-89.745812, 30.167249], [-89.745864, 30.167206], [-89.745973, 30.167158], [-89.746036, 30.167151], [-89.74606, 30.16721], [-89.746062, 30.167285], [-89.746133, 30.167408], [-89.74628, 30.167642], [-89.7463, 30.167707], [-89.746296, 30.167737], [-89.746293, 30.167758], [-89.746257, 30.167825], [-89.74624, 30.167889], [-89.746235, 30.167909], [-89.746214, 30.168104], [-89.746212, 30.168125], [-89.746175, 30.168176], [-89.746114, 30.168202], [-89.746062, 30.168228], [-89.746024, 30.168254], [-89.745998, 30.16832], [-89.746002, 30.168403], [-89.746003, 30.168582], [-89.746027, 30.168615], [-89.746053, 30.168677], [-89.746053, 30.16882], [-89.746053, 30.168839], [-89.746027, 30.168976], [-89.746024, 30.168997], [-89.745982, 30.169064], [-89.745951, 30.16914], [-89.745945, 30.169242], [-89.74595, 30.169345], [-89.745945, 30.169455], [-89.745944, 30.169476], [-89.745904, 30.169585], [-89.745867, 30.169644], [-89.74583, 30.169678], [-89.745828, 30.169722], [-89.745827, 30.169755], [-89.745836, 30.169769], [-89.745866, 30.169817], [-89.74585, 30.16996], [-89.745848, 30.169981], [-89.745729, 30.17027], [-89.745643, 30.17063], [-89.745639, 30.17065], [-89.745553, 30.171204], [-89.74555, 30.171225], [-89.74552, 30.171503], [-89.74554, 30.171769], [-89.745524, 30.171966], [-89.745523, 30.171986], [-89.745484, 30.172048], [-89.745466, 30.172064], [-89.745436, 30.172087], [-89.74542, 30.172128], [-89.745417, 30.172146], [-89.745415, 30.172162], [-89.745419, 30.172219], [-89.745431, 30.172271], [-89.745436, 30.172292], [-89.745438, 30.172319], [-89.745438, 30.172342], [-89.745434, 30.172362], [-89.745417, 30.172393], [-89.745406, 30.172421], [-89.745399, 30.172448], [-89.745403, 30.172577], [-89.745402, 30.1726], [-89.745364, 30.172668], [-89.745336, 30.172711], [-89.745329, 30.172733], [-89.745331, 30.172749], [-89.745335, 30.172791], [-89.745351, 30.172851], [-89.745342, 30.172917], [-89.745339, 30.172938], [-89.745316, 30.173042], [-89.745312, 30.173062], [-89.745245, 30.173245], [-89.745191, 30.173361], [-89.745151, 30.173443], [-89.7451, 30.173513], [-89.74505, 30.173559], [-89.745, 30.173588], [-89.744917, 30.173616], [-89.744896, 30.173626], [-89.74483, 30.173673], [-89.744769, 30.173738], [-89.744699, 30.173786], [-89.74451, 30.173831], [-89.744448, 30.173864], [-89.744411, 30.173918], [-89.744377, 30.173957], [-89.744317, 30.173985], [-89.744223, 30.173983], [-89.744198, 30.173978], [-89.74415, 30.173943], [-89.74409, 30.173914], [-89.743991, 30.173905], [-89.743971, 30.173906], [-89.743898, 30.173912], [-89.743844, 30.173933], [-89.743784, 30.173929], [-89.743732, 30.173896], [-89.743681, 30.173871], [-89.743627, 30.173861], [-89.74361, 30.173858], [-89.743593, 30.173865], [-89.743548, 30.173882], [-89.743529, 30.173892], [-89.743486, 30.173928], [-89.743456, 30.173975], [-89.743445, 30.173991], [-89.743442, 30.17401], [-89.743437, 30.174036], [-89.743433, 30.174057], [-89.743429, 30.174098], [-89.743428, 30.174119], [-89.743404, 30.174171], [-89.743389, 30.174188], [-89.743342, 30.174229], [-89.743315, 30.174249], [-89.743303, 30.174261], [-89.743281, 30.174313], [-89.743201, 30.174473], [-89.743168, 30.174516], [-89.743165, 30.174537], [-89.743161, 30.174562], [-89.743158, 30.174585], [-89.743163, 30.1746], [-89.743173, 30.174633], [-89.743191, 30.174671], [-89.743202, 30.174695], [-89.743103, 30.174805], [-89.743022, 30.174804], [-89.742956, 30.17476], [-89.742902, 30.17467], [-89.742842, 30.174441], [-89.742789, 30.174333], [-89.742757, 30.174243], [-89.742751, 30.174225], [-89.742738, 30.174211], [-89.742691, 30.174161], [-89.742525, 30.174064], [-89.74249, 30.173999], [-89.742471, 30.173941], [-89.74245, 30.173901], [-89.742408, 30.173864]]]]
    },
    "properties": {
      "neighbourhood": "Lake Catherine",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.101649, 29.993224], [-90.101809, 29.991768], [-90.101851, 29.991409], [-90.101854, 29.991374], [-90.101884, 29.991122], [-90.101906, 29.990873], [-90.101917, 29.990773], [-90.101949, 29.990466], [-90.101978, 29.990195], [-90.102112, 29.989165], [-90.102395, 29.986873], [-90.102449, 29.986432], [-90.102553, 29.98559], [-90.102734, 29.984121], [-90.103839, 29.984109], [-90.103893, 29.984095], [-90.105086, 29.983791], [-90.105389, 29.983702], [-90.105827, 29.98361], [-90.106218, 29.983513], [-90.107428, 29.983209], [-90.108721, 29.982815], [-90.110411, 29.982263], [-90.111027, 29.982064], [-90.111286, 29.98196], [-90.111558, 29.981869], [-90.112095, 29.981689], [-90.112832, 29.981441], [-90.113392, 29.981253], [-90.113588, 29.981185], [-90.113699, 29.981151], [-90.113949, 29.981725], [-90.114185, 29.982375], [-90.114379, 29.982909], [-90.11517, 29.984973], [-90.115487, 29.985794], [-90.115647, 29.986265], [-90.116048, 29.987923], [-90.116111, 29.988499], [-90.116082, 29.989411], [-90.116026, 29.990225], [-90.116085, 29.990939], [-90.116137, 29.991319], [-90.116268, 29.991812], [-90.11635, 29.992036], [-90.116506, 29.992417], [-90.116352, 29.992797], [-90.11621, 29.993205], [-90.116056, 29.993739], [-90.115964, 29.994266], [-90.11595, 29.994703], [-90.115917, 29.995424], [-90.115907, 29.995721], [-90.115601, 29.99574], [-90.115143, 29.995768], [-90.114574, 29.995785], [-90.113746, 29.995769], [-90.113035, 29.995729], [-90.110381, 29.995472], [-90.109559, 29.995389], [-90.109292, 29.995362], [-90.109316, 29.995087], [-90.109361, 29.994793], [-90.109457, 29.994165], [-90.109492, 29.993932], [-90.109059, 29.993902], [-90.108097, 29.993806], [-90.107261, 29.993723], [-90.107023, 29.993701], [-90.106366, 29.993641], [-90.106036, 29.993613], [-90.105292, 29.993614], [-90.105206, 29.993615], [-90.104912, 29.993617], [-90.104796, 29.99348], [-90.104537, 29.99349], [-90.103731, 29.993406], [-90.103039, 29.993321], [-90.102607, 29.99329], [-90.101649, 29.993224]]]]
    },
    "properties": {
      "neighbourhood": "Navarre",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.082512, 30.026223], [-90.082512, 30.026211], [-90.082507, 30.026114], [-90.082534, 30.025988], [-90.082544, 30.025555], [-90.082514, 30.025224], [-90.082792, 30.024835], [-90.082904, 30.024237], [-90.082829, 30.0234], [-90.082709, 30.022109], [-90.082702, 30.02146], [-90.082867, 30.021102], [-90.082868, 30.021103], [-90.082926, 30.021108], [-90.082954, 30.021093], [-90.08295, 30.021077], [-90.082951, 30.021044], [-90.082989, 30.020976], [-90.083037, 30.020865], [-90.083574, 30.020868], [-90.083666, 30.020868], [-90.083929, 30.020851], [-90.084038, 30.020843], [-90.084359, 30.02082], [-90.08459, 30.020793], [-90.084768, 30.020772], [-90.085211, 30.020712], [-90.08537, 30.020683], [-90.085668, 30.02062], [-90.085953, 30.02053], [-90.08602, 30.020507], [-90.086254, 30.020428], [-90.086821, 30.020184], [-90.087376, 30.019945], [-90.087409, 30.01993], [-90.087889, 30.019714], [-90.088378, 30.019513], [-90.088484, 30.019468], [-90.088813, 30.019327], [-90.089393, 30.019097], [-90.089836, 30.018946], [-90.090046, 30.01889], [-90.090396, 30.018797], [-90.090753, 30.018736], [-90.091079, 30.01868], [-90.09162, 30.018618], [-90.092074, 30.018566], [-90.092753, 30.018557], [-90.093111, 30.018535], [-90.093631, 30.018536], [-90.093772, 30.018542], [-90.094262, 30.018615], [-90.094788, 30.018672], [-90.095506, 30.018716], [-90.095984, 30.018756], [-90.096274, 30.018781], [-90.096593, 30.018824], [-90.096736, 30.018834], [-90.096867, 30.018841], [-90.097044, 30.018834], [-90.097401, 30.018826], [-90.097523, 30.018831], [-90.097903, 30.018856], [-90.098156, 30.018874], [-90.098519, 30.018901], [-90.098684, 30.018909], [-90.099761, 30.019013], [-90.101065, 30.019124], [-90.102026, 30.019209], [-90.103062, 30.019308], [-90.104022, 30.0194], [-90.105031, 30.019488], [-90.106047, 30.01959], [-90.106455, 30.019623], [-90.107554, 30.019713], [-90.108573, 30.019807], [-90.10938, 30.019878], [-90.110803, 30.020002], [-90.111733, 30.020078], [-90.112469, 30.020165], [-90.113128, 30.020226], [-90.113546, 30.020256], [-90.113597, 30.020217], [-90.113647, 30.020182], [-90.113693, 30.020158], [-90.113849, 30.020116], [-90.113884, 30.020095], [-90.114716, 30.019488], [-90.114586, 30.019972], [-90.114539, 30.020147], [-90.114395, 30.021626], [-90.114286, 30.023118], [-90.114187, 30.023304], [-90.114186, 30.023305], [-90.113965, 30.023855], [-90.113848, 30.024327], [-90.113776, 30.026598], [-90.113555, 30.027531], [-90.11336, 30.027935], [-90.112824, 30.027981], [-90.11318, 30.0272], [-90.113134, 30.027087], [-90.113102, 30.026976], [-90.113089, 30.026923], [-90.113051, 30.026839], [-90.113027, 30.026832], [-90.112986, 30.026828], [-90.112829, 30.026857], [-90.112412, 30.026934], [-90.112357, 30.026944], [-90.111167, 30.027176], [-90.111146, 30.027181], [-90.110125, 30.027438], [-90.109939, 30.027485], [-90.108728, 30.02783], [-90.108527, 30.027884], [-90.108427, 30.0279], [-90.10834, 30.027908], [-90.107447, 30.027806], [-90.106552, 30.027702], [-90.106146, 30.027654], [-90.105502, 30.02758], [-90.105022, 30.027533], [-90.104129, 30.027491], [-90.103688, 30.02749], [-90.103534, 30.027502], [-90.103142, 30.027657], [-90.102721, 30.027946], [-90.1026, 30.028029], [-90.101908, 30.028471], [-90.101718, 30.028548], [-90.10162, 30.028564], [-90.10141, 30.028572], [-90.10119, 30.02856], [-90.100707, 30.028443], [-90.100618, 30.028421], [-90.100428, 30.028384], [-90.100108, 30.028348], [-90.099929, 30.02835], [-90.099679, 30.028383], [-90.099166, 30.028526], [-90.098593, 30.028685], [-90.098301, 30.028741], [-90.098197, 30.028746], [-90.098068, 30.028738], [-90.097887, 30.028712], [-90.097788, 30.028672], [-90.097634, 30.028554], [-90.097572, 30.028497], [-90.097528, 30.028442], [-90.097509, 30.028401], [-90.097484, 30.028345], [-90.097408, 30.028056], [-90.097136, 30.028101], [-90.097111, 30.028105], [-90.096887, 30.028142], [-90.096851, 30.028148], [-90.096853, 30.028196], [-90.096866, 30.028552], [-90.096867, 30.028571], [-90.096812, 30.028679], [-90.096664, 30.028882], [-90.096546, 30.028962], [-90.096406, 30.029035], [-90.096178, 30.029084], [-90.095619, 30.029135], [-90.095597, 30.029135], [-90.094534, 30.029118], [-90.094336, 30.029123], [-90.094059, 30.02913], [-90.093889, 30.029147], [-90.093677, 30.029199], [-90.093349, 30.029444], [-90.093256, 30.029503], [-90.092896, 30.029733], [-90.092422, 30.029982], [-90.092094, 30.030072], [-90.091678, 30.030156], [-90.091501, 30.030155], [-90.091029, 30.030083], [-90.090328, 30.02988], [-90.09, 30.029731], [-90.08979, 30.029538], [-90.08973, 30.029483], [-90.089407, 30.029013], [-90.089392, 30.028993], [-90.089078, 30.028594], [-90.088542, 30.028058], [-90.088374, 30.0279], [-90.088233, 30.027827], [-90.088029, 30.027752], [-90.087833, 30.027679], [-90.087115, 30.027515], [-90.086762, 30.027477], [-90.085997, 30.027459], [-90.085606, 30.02745], [-90.08558, 30.027449], [-90.084476, 30.027449], [-90.084039, 30.02743], [-90.083777, 30.027396], [-90.083697, 30.027379], [-90.083558, 30.027339], [-90.083385, 30.027263], [-90.083137, 30.027131], [-90.082963, 30.02698], [-90.082952, 30.026967], [-90.082865, 30.026857], [-90.082828, 30.026774], [-90.082824, 30.026758], [-90.082805, 30.026625], [-90.082806, 30.026609], [-90.082816, 30.02644], [-90.082818, 30.026417], [-90.082819, 30.026381], [-90.082808, 30.026347], [-90.082803, 30.02633], [-90.082763, 30.026286], [-90.082741, 30.026275], [-90.082669, 30.026253], [-90.082541, 30.026229], [-90.082512, 30.026223]]]]
    },
    "properties": {
      "neighbourhood": "Lakeshore - Lake Vista",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.098684, 30.018909], [-90.098675, 30.018816], [-90.098661, 30.018682], [-90.098672, 30.018604], [-90.09869, 30.018427], [-90.098913, 30.016969], [-90.099109, 30.015115], [-90.09931, 30.013358], [-90.099545, 30.011555], [-90.099747, 30.009747], [-90.099957, 30.007958], [-90.100152, 30.006138], [-90.100414, 30.004029], [-90.100639, 30.00215], [-90.100842, 30.00034], [-90.101051, 29.998571], [-90.101263, 29.996718], [-90.101457, 29.995024], [-90.101455, 29.994859], [-90.101483, 29.994574], [-90.101538, 29.994021], [-90.101587, 29.9937], [-90.101649, 29.993224], [-90.102607, 29.99329], [-90.103039, 29.993321], [-90.103731, 29.993406], [-90.104537, 29.99349], [-90.104796, 29.99348], [-90.104912, 29.993617], [-90.105206, 29.993615], [-90.105292, 29.993614], [-90.106036, 29.993613], [-90.106366, 29.993641], [-90.107023, 29.993701], [-90.107261, 29.993723], [-90.108097, 29.993806], [-90.109059, 29.993902], [-90.109492, 29.993932], [-90.109457, 29.994165], [-90.109361, 29.994793], [-90.109316, 29.995087], [-90.109292, 29.995362], [-90.109559, 29.995389], [-90.110381, 29.995472], [-90.113035, 29.995729], [-90.113746, 29.995769], [-90.114574, 29.995785], [-90.115143, 29.995768], [-90.115601, 29.99574], [-90.115907, 29.995721], [-90.115903, 29.996102], [-90.115902, 29.996436], [-90.115832, 29.997351], [-90.115848, 29.997658], [-90.115853, 29.997817], [-90.115897, 29.99802], [-90.115996, 29.998353], [-90.116144, 29.998748], [-90.116198, 29.999043], [-90.116239, 29.999339], [-90.116236, 29.99956], [-90.116235, 29.999691], [-90.11618, 30.000286], [-90.116167, 30.00069], [-90.116107, 30.001498], [-90.116056, 30.002304], [-90.115978, 30.003129], [-90.11592, 30.003934], [-90.115858, 30.004752], [-90.115804, 30.005603], [-90.115752, 30.006418], [-90.115674, 30.00722], [-90.115625, 30.008023], [-90.115576, 30.008556], [-90.115524, 30.009188], [-90.115437, 30.010369], [-90.115317, 30.012174], [-90.115259, 30.01306], [-90.11519, 30.014], [-90.115169, 30.014351], [-90.115052, 30.015812], [-90.114974, 30.016647], [-90.114909, 30.017464], [-90.114866, 30.018044], [-90.114853, 30.018278], [-90.114782, 30.019035], [-90.11476, 30.019247], [-90.114716, 30.019488], [-90.113884, 30.020095], [-90.113849, 30.020116], [-90.113693, 30.020158], [-90.113647, 30.020182], [-90.113597, 30.020217], [-90.113546, 30.020256], [-90.113128, 30.020226], [-90.112469, 30.020165], [-90.111733, 30.020078], [-90.110803, 30.020002], [-90.10938, 30.019878], [-90.108573, 30.019807], [-90.107554, 30.019713], [-90.106455, 30.019623], [-90.106047, 30.01959], [-90.105031, 30.019488], [-90.104022, 30.0194], [-90.103062, 30.019308], [-90.102026, 30.019209], [-90.101065, 30.019124], [-90.099761, 30.019013], [-90.098684, 30.018909]]]]
    },
    "properties": {
      "neighbourhood": "Lakeview",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.101919, 29.9264], [-90.101854, 29.925729], [-90.101763, 29.925039], [-90.101703, 29.924295], [-90.101647, 29.923653], [-90.101555, 29.922863], [-90.101454, 29.921795], [-90.101351, 29.920807], [-90.101595, 29.920782], [-90.102711, 29.920701], [-90.103826, 29.920605], [-90.104988, 29.920515], [-90.106092, 29.920394], [-90.1072, 29.920334], [-90.107997, 29.920291], [-90.109083, 29.920323], [-90.11002, 29.92036], [-90.110999, 29.920445], [-90.112055, 29.920451], [-90.112697, 29.920519], [-90.113766, 29.920716], [-90.115029, 29.920924], [-90.11499, 29.921172], [-90.114905, 29.921537], [-90.114795, 29.921938], [-90.114519, 29.923009], [-90.114295, 29.923791], [-90.114102, 29.924451], [-90.113923, 29.925126], [-90.113794, 29.925789], [-90.113562, 29.9266], [-90.11343, 29.927155], [-90.113055, 29.92847], [-90.113019, 29.928628], [-90.112786, 29.929544], [-90.112511, 29.9305], [-90.112256, 29.931459], [-90.112001, 29.932377], [-90.111759, 29.933324], [-90.11152, 29.934264], [-90.111371, 29.934239], [-90.110519, 29.934096], [-90.110293, 29.934073], [-90.109371, 29.93404], [-90.108414, 29.933954], [-90.107325, 29.933943], [-90.106356, 29.934028], [-90.105226, 29.934126], [-90.104111, 29.934194], [-90.102971, 29.934294], [-90.102752, 29.934313], [-90.102659, 29.933348], [-90.102563, 29.932394], [-90.102453, 29.931424], [-90.102345, 29.930471], [-90.102285, 29.929475], [-90.102187, 29.928525], [-90.102061, 29.927574], [-90.101946, 29.926584], [-90.101919, 29.9264]]]]
    },
    "properties": {
      "neighbourhood": "Uptown",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.035248, 30.031681], [-90.035242, 30.03166], [-90.035673, 30.031542], [-90.035917, 30.031476], [-90.037838, 30.031018], [-90.038851, 30.0308], [-90.040548, 30.030373], [-90.041059, 30.030245], [-90.042072, 30.02999], [-90.042974, 30.029851], [-90.044038, 30.029706], [-90.044306, 30.029662], [-90.044405, 30.029639], [-90.044526, 30.029606], [-90.044691, 30.029551], [-90.044876, 30.029474], [-90.044988, 30.02942], [-90.045099, 30.029357], [-90.045314, 30.029208], [-90.045623, 30.028969], [-90.045741, 30.028877], [-90.045887, 30.028763], [-90.046133, 30.028573], [-90.046335, 30.028413], [-90.046504, 30.028268], [-90.046661, 30.028119], [-90.046922, 30.027859], [-90.047104, 30.027687], [-90.047334, 30.027508], [-90.047674, 30.0273], [-90.047937, 30.027187], [-90.048054, 30.027151], [-90.048438, 30.027065], [-90.049052, 30.02695], [-90.049707, 30.026845], [-90.052069, 30.02642], [-90.052247, 30.026388], [-90.053305, 30.026113], [-90.053469, 30.026087], [-90.053644, 30.02606], [-90.054454, 30.025934], [-90.054942, 30.025862], [-90.055517, 30.025785], [-90.056469, 30.025659], [-90.056791, 30.025617], [-90.058884, 30.02533], [-90.059535, 30.025261], [-90.059921, 30.025245], [-90.060233, 30.025254], [-90.060398, 30.02526], [-90.060731, 30.02527], [-90.06112, 30.025256], [-90.061516, 30.025237], [-90.061951, 30.025199], [-90.062172, 30.025167], [-90.062376, 30.02513], [-90.062496, 30.025101], [-90.062707, 30.025051], [-90.062904, 30.024992], [-90.063225, 30.024884], [-90.063526, 30.024772], [-90.063686, 30.024694], [-90.063858, 30.024598], [-90.064088, 30.024471], [-90.064451, 30.024276], [-90.064501, 30.024255], [-90.064836, 30.024115], [-90.065177, 30.023999], [-90.065319, 30.023964], [-90.065582, 30.023914], [-90.065765, 30.023887], [-90.065854, 30.023879], [-90.06607, 30.02386], [-90.066942, 30.023809], [-90.067783, 30.023762], [-90.068616, 30.023713], [-90.069639, 30.023616], [-90.070284, 30.023506], [-90.070541, 30.023452], [-90.07098, 30.023359], [-90.070968, 30.023267], [-90.070954, 30.02316], [-90.070892, 30.022194], [-90.070849, 30.021796], [-90.070799, 30.021408], [-90.071637, 30.021458], [-90.072258, 30.021463], [-90.072535, 30.021446], [-90.072799, 30.021435], [-90.072943, 30.021436], [-90.073188, 30.021442], [-90.073359, 30.021459], [-90.073533, 30.021475], [-90.07359, 30.021482], [-90.073618, 30.021486], [-90.073771, 30.021498], [-90.073886, 30.021499], [-90.074043, 30.021491], [-90.07422, 30.021474], [-90.074419, 30.021441], [-90.074828, 30.021351], [-90.074914, 30.02133], [-90.075066, 30.021305], [-90.075232, 30.021288], [-90.075379, 30.021277], [-90.075626, 30.021258], [-90.076475, 30.021218], [-90.077492, 30.021168], [-90.07844, 30.021099], [-90.079424, 30.021039], [-90.079797, 30.021015], [-90.081102, 30.020936], [-90.081562, 30.020912], [-90.081812, 30.020883], [-90.082001, 30.020859], [-90.082357, 30.020835], [-90.083037, 30.020865], [-90.082989, 30.020976], [-90.082951, 30.021044], [-90.08295, 30.021077], [-90.082954, 30.021093], [-90.082926, 30.021108], [-90.082868, 30.021103], [-90.082867, 30.021102], [-90.082702, 30.02146], [-90.082709, 30.022109], [-90.082829, 30.0234], [-90.082904, 30.024237], [-90.082792, 30.024835], [-90.082514, 30.025224], [-90.082544, 30.025555], [-90.082534, 30.025988], [-90.082507, 30.026114], [-90.082512, 30.026211], [-90.082512, 30.026223], [-90.082512, 30.026223], [-90.08244, 30.026244], [-90.082351, 30.026272], [-90.082322, 30.026284], [-90.082284, 30.026313], [-90.082274, 30.026332], [-90.082258, 30.026361], [-90.082252, 30.026393], [-90.082246, 30.026437], [-90.082244, 30.026459], [-90.082246, 30.02649], [-90.082252, 30.026566], [-90.082272, 30.02686], [-90.082271, 30.026891], [-90.082269, 30.026912], [-90.08226, 30.027036], [-90.082258, 30.027052], [-90.082255, 30.027072], [-90.08224, 30.027169], [-90.082234, 30.027188], [-90.082196, 30.027283], [-90.082147, 30.027351], [-90.082034, 30.027482], [-90.08191, 30.027561], [-90.08168, 30.027683], [-90.081411, 30.027811], [-90.081253, 30.027895], [-90.081209, 30.027934], [-90.081096, 30.028022], [-90.081012, 30.028105], [-90.080875, 30.028241], [-90.080626, 30.028522], [-90.080606, 30.028545], [-90.080453, 30.028714], [-90.080336, 30.028844], [-90.080064, 30.029156], [-90.079929, 30.029391], [-90.079865, 30.029488], [-90.079836, 30.029533], [-90.079796, 30.029603], [-90.07965, 30.029858], [-90.079632, 30.029889], [-90.079421, 30.030248], [-90.079191, 30.030602], [-90.078952, 30.030955], [-90.078714, 30.031282], [-90.078484, 30.031521], [-90.078409, 30.031586], [-90.078142, 30.031744], [-90.078006, 30.031807], [-90.077794, 30.031911], [-90.077633, 30.031966], [-90.077558, 30.031992], [-90.077205, 30.032056], [-90.077139, 30.03206], [-90.076947, 30.03207], [-90.076688, 30.032052], [-90.076204, 30.032025], [-90.07591, 30.031984], [-90.075632, 30.031932], [-90.075188, 30.031854], [-90.075055, 30.031815], [-90.074908, 30.03177], [-90.074763, 30.031696], [-90.074666, 30.031629], [-90.074597, 30.031539], [-90.07456, 30.031462], [-90.074525, 30.031383], [-90.074518, 30.031366], [-90.074504, 30.031336], [-90.074496, 30.031319], [-90.074473, 30.031284], [-90.07446, 30.031273], [-90.074417, 30.031265], [-90.074382, 30.031258], [-90.074258, 30.031261], [-90.074233, 30.031262], [-90.074135, 30.03132], [-90.07412, 30.031333], [-90.074102, 30.031349], [-90.074073, 30.031423], [-90.074071, 30.031439], [-90.074064, 30.031492], [-90.074062, 30.031508], [-90.074046, 30.031589], [-90.074043, 30.031606], [-90.07401, 30.031697], [-90.073925, 30.031833], [-90.073798, 30.031967], [-90.073693, 30.032062], [-90.073458, 30.032254], [-90.073184, 30.032432], [-90.073065, 30.032479], [-90.072983, 30.032495], [-90.072701, 30.03249], [-90.071809, 30.032453], [-90.071679, 30.032453], [-90.071512, 30.032452], [-90.071185, 30.032459], [-90.070842, 30.032499], [-90.070577, 30.032544], [-90.070465, 30.032575], [-90.070121, 30.032671], [-90.069936, 30.032759], [-90.069565, 30.032969], [-90.069437, 30.033027], [-90.069343, 30.033051], [-90.069227, 30.033077], [-90.068929, 30.033131], [-90.06786, 30.033338], [-90.067612, 30.033356], [-90.067491, 30.033355], [-90.06737, 30.033338], [-90.067239, 30.033298], [-90.066678, 30.033101], [-90.066465, 30.033044], [-90.066058, 30.032933], [-90.065951, 30.032917], [-90.065788, 30.032879], [-90.065709, 30.032859], [-90.065632, 30.032843], [-90.065615, 30.032882], [-90.065633, 30.032908], [-90.065646, 30.032927], [-90.065639, 30.032961], [-90.065627, 30.032977], [-90.0656, 30.033002], [-90.065564, 30.033047], [-90.065532, 30.033108], [-90.065493, 30.033195], [-90.06544, 30.033321], [-90.065433, 30.033338], [-90.065388, 30.033445], [-90.065247, 30.033663], [-90.065042, 30.033861], [-90.064909, 30.033989], [-90.064821, 30.034012], [-90.064762, 30.03401], [-90.064702, 30.03399], [-90.064682, 30.033962], [-90.064678, 30.033947], [-90.064701, 30.033898], [-90.064735, 30.033866], [-90.064845, 30.033782], [-90.064922, 30.033671], [-90.064945, 30.033588], [-90.064942, 30.03353], [-90.064917, 30.03346], [-90.064873, 30.03341], [-90.064696, 30.033322], [-90.064615, 30.033282], [-90.064435, 30.033243], [-90.064163, 30.033218], [-90.064038, 30.033225], [-90.063865, 30.033257], [-90.063754, 30.03329], [-90.063659, 30.03333], [-90.063555, 30.03338], [-90.063532, 30.033403], [-90.063505, 30.03344], [-90.0635, 30.0335], [-90.063539, 30.033693], [-90.063533, 30.033803], [-90.063532, 30.033829], [-90.063527, 30.033913], [-90.063534, 30.033982], [-90.063541, 30.034004], [-90.063587, 30.034145], [-90.063591, 30.034164], [-90.063588, 30.03418], [-90.063584, 30.034205], [-90.063581, 30.034222], [-90.063562, 30.034248], [-90.063546, 30.034262], [-90.063508, 30.034276], [-90.063438, 30.034245], [-90.063405, 30.034182], [-90.063406, 30.034137], [-90.063407, 30.034114], [-90.063406, 30.034083], [-90.063406, 30.034057], [-90.063409, 30.033932], [-90.063407, 30.03391], [-90.063403, 30.033873], [-90.0634, 30.033847], [-90.063392, 30.033819], [-90.063387, 30.033796], [-90.063374, 30.033744], [-90.063341, 30.033563], [-90.063337, 30.033536], [-90.063327, 30.033523], [-90.063308, 30.033497], [-90.063294, 30.033487], [-90.063257, 30.033466], [-90.063179, 30.033448], [-90.063084, 30.033438], [-90.062853, 30.033427], [-90.062528, 30.033423], [-90.062115, 30.033452], [-90.061899, 30.033453], [-90.061758, 30.033454], [-90.061501, 30.033469], [-90.061174, 30.0335], [-90.061002, 30.033537], [-90.06082, 30.033603], [-90.060731, 30.033657], [-90.060686, 30.033699], [-90.060664, 30.033842], [-90.060665, 30.033859], [-90.060685, 30.034045], [-90.060688, 30.034085], [-90.060697, 30.034251], [-90.06072, 30.034338], [-90.060733, 30.034357], [-90.060745, 30.034373], [-90.060754, 30.034391], [-90.060751, 30.034414], [-90.060741, 30.034449], [-90.060684, 30.034471], [-90.060625, 30.034466], [-90.060578, 30.034421], [-90.060585, 30.034405], [-90.060595, 30.034385], [-90.060604, 30.034366], [-90.060609, 30.03435], [-90.060615, 30.034317], [-90.060579, 30.034087], [-90.060569, 30.034053], [-90.060562, 30.034027], [-90.060546, 30.033977], [-90.060543, 30.03396], [-90.060535, 30.033895], [-90.060525, 30.033813], [-90.060529, 30.033736], [-90.060524, 30.0337], [-90.060508, 30.033673], [-90.060493, 30.033651], [-90.060438, 30.033613], [-90.060271, 30.033576], [-90.060112, 30.033565], [-90.05979, 30.033579], [-90.059366, 30.033646], [-90.0592, 30.033702], [-90.059095, 30.033775], [-90.05901, 30.033847], [-90.058957, 30.033929], [-90.058947, 30.034001], [-90.058952, 30.034089], [-90.058974, 30.034131], [-90.058986, 30.034154], [-90.05903, 30.034199], [-90.059059, 30.034228], [-90.059128, 30.03429], [-90.059181, 30.034338], [-90.059191, 30.034357], [-90.059203, 30.034394], [-90.059199, 30.034412], [-90.059183, 30.034447], [-90.059159, 30.034464], [-90.059131, 30.034478], [-90.059067, 30.034491], [-90.05891, 30.03449], [-90.058822, 30.034461], [-90.058761, 30.034422], [-90.058663, 30.034258], [-90.058644, 30.034226], [-90.058601, 30.034151], [-90.058593, 30.034136], [-90.058369, 30.033805], [-90.058323, 30.033736], [-90.058226, 30.033659], [-90.058123, 30.033583], [-90.05806, 30.033537], [-90.057994, 30.033508], [-90.057918, 30.033491], [-90.057858, 30.033497], [-90.057772, 30.033523], [-90.057728, 30.033542], [-90.057558, 30.033615], [-90.057168, 30.03382], [-90.056977, 30.03392], [-90.056851, 30.03398], [-90.05669, 30.034024], [-90.056518, 30.034051], [-90.056344, 30.034046], [-90.056318, 30.034046], [-90.055326, 30.034051], [-90.05501, 30.034076], [-90.054934, 30.034082], [-90.054555, 30.034111], [-90.054301, 30.034137], [-90.053848, 30.034184], [-90.052818, 30.034367], [-90.052355, 30.034466], [-90.052252, 30.034489], [-90.052203, 30.034499], [-90.051696, 30.03465], [-90.051315, 30.034764], [-90.05107, 30.034828], [-90.050459, 30.034901], [-90.049806, 30.034939], [-90.049106, 30.034979], [-90.048589, 30.035042], [-90.048301, 30.035103], [-90.048122, 30.035141], [-90.047787, 30.035212], [-90.047244, 30.035347], [-90.04648, 30.035508], [-90.046055, 30.035543], [-90.045282, 30.035553], [-90.044692, 30.035538], [-90.044413, 30.035531], [-90.043649, 30.035489], [-90.043405, 30.035444], [-90.042771, 30.03524], [-90.042259, 30.03508], [-90.041457, 30.034719], [-90.040405, 30.034166], [-90.039931, 30.033881], [-90.039163, 30.033326], [-90.039043, 30.033199], [-90.038887, 30.033016], [-90.038627, 30.032626], [-90.038494, 30.032384], [-90.038451, 30.032305], [-90.038212, 30.031886], [-90.038036, 30.03173], [-90.037863, 30.031484], [-90.037805, 30.031427], [-90.037785, 30.031424], [-90.037743, 30.031418], [-90.037637, 30.031443], [-90.037608, 30.03145], [-90.036273, 30.031797], [-90.036119, 30.031822], [-90.035991, 30.031829], [-90.035815, 30.031795], [-90.035669, 30.031765], [-90.035248, 30.031681], [-90.035248, 30.031681]]]]
    },
    "properties": {
      "neighbourhood": "Lake Terrace & Oaks",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.116235, 29.999691], [-90.116236, 29.99956], [-90.116239, 29.999339], [-90.116198, 29.999043], [-90.116144, 29.998748], [-90.115996, 29.998353], [-90.115897, 29.99802], [-90.115853, 29.997817], [-90.115848, 29.997658], [-90.115832, 29.997351], [-90.115902, 29.996436], [-90.115903, 29.996102], [-90.115907, 29.995721], [-90.115917, 29.995424], [-90.11595, 29.994703], [-90.115964, 29.994266], [-90.116056, 29.993739], [-90.11621, 29.993205], [-90.116352, 29.992797], [-90.116506, 29.992417], [-90.11635, 29.992036], [-90.116268, 29.991812], [-90.116137, 29.991319], [-90.116085, 29.990939], [-90.116026, 29.990225], [-90.116082, 29.989411], [-90.116111, 29.988499], [-90.116048, 29.987923], [-90.115647, 29.986265], [-90.115487, 29.985794], [-90.11517, 29.984973], [-90.114379, 29.982909], [-90.114185, 29.982375], [-90.113949, 29.981725], [-90.113699, 29.981151], [-90.11367, 29.981077], [-90.113474, 29.98058], [-90.113183, 29.979832], [-90.112425, 29.978011], [-90.112146, 29.977315], [-90.112307, 29.977323], [-90.112406, 29.977328], [-90.112606, 29.977338], [-90.113049, 29.977392], [-90.114428, 29.97756], [-90.113604, 29.976869], [-90.114397, 29.976139], [-90.114558, 29.975991], [-90.11511, 29.975463], [-90.115896, 29.974724], [-90.116639, 29.974053], [-90.117137, 29.974475], [-90.117305, 29.97462], [-90.117349, 29.974647], [-90.117421, 29.974664], [-90.117488, 29.974657], [-90.117512, 29.974645], [-90.117551, 29.974614], [-90.118184, 29.974011], [-90.118402, 29.974192], [-90.118798, 29.97452], [-90.118867, 29.974571], [-90.1189, 29.974584], [-90.118934, 29.974594], [-90.118954, 29.974597], [-90.118983, 29.974598], [-90.119017, 29.974593], [-90.11906, 29.97458], [-90.119095, 29.974555], [-90.119719, 29.973956], [-90.119876, 29.973809], [-90.119953, 29.973738], [-90.120776, 29.974399], [-90.121011, 29.974591], [-90.12161, 29.97506], [-90.122209, 29.975538], [-90.122295, 29.975588], [-90.122359, 29.975612], [-90.122449, 29.975632], [-90.122593, 29.975654], [-90.123081, 29.97569], [-90.123482, 29.975715], [-90.123905, 29.975759], [-90.124213, 29.975778], [-90.124255, 29.975781], [-90.124775, 29.975791], [-90.124855, 29.975793], [-90.124815, 29.976277], [-90.123875, 29.987735], [-90.12277, 29.999977], [-90.122763, 30.000058], [-90.122119, 30.000016], [-90.121972, 30.000009], [-90.119312, 29.999861], [-90.119033, 29.999845], [-90.116235, 29.999691]]]]
    },
    "properties": {
      "neighbourhood": "Lakewood",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.062609, 29.926039], [-90.063019, 29.925579], [-90.063442, 29.925103], [-90.06609, 29.922582], [-90.06869, 29.920798], [-90.07175, 29.919118], [-90.072448, 29.918814], [-90.072572, 29.919004], [-90.073919, 29.921068], [-90.074275, 29.921476], [-90.074449, 29.921675], [-90.074525, 29.921763], [-90.074633, 29.921858], [-90.075346, 29.922828], [-90.075619, 29.923184], [-90.075729, 29.923328], [-90.076084, 29.923807], [-90.075206, 29.924355], [-90.075883, 29.925147], [-90.074962, 29.925754], [-90.073999, 29.926356], [-90.07391, 29.926418], [-90.074607, 29.92723], [-90.075313, 29.927997], [-90.075984, 29.928805], [-90.074977, 29.929419], [-90.073891, 29.930209], [-90.073066, 29.930811], [-90.073375, 29.931091], [-90.07306, 29.93218], [-90.072099, 29.931236], [-90.071507, 29.930778], [-90.070997, 29.930307], [-90.070261, 29.929718], [-90.070172, 29.929647], [-90.06987, 29.92933], [-90.069063, 29.928611], [-90.068707, 29.928284], [-90.068311, 29.927923], [-90.068119, 29.927738], [-90.067289, 29.927001], [-90.066624, 29.926844], [-90.066463, 29.926847], [-90.066433, 29.926848], [-90.066261, 29.926851], [-90.065333, 29.926742], [-90.062609, 29.926039]]]]
    },
    "properties": {
      "neighbourhood": "St. Thomas Dev",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.112824, 30.027981], [-90.11336, 30.027935], [-90.113555, 30.027531], [-90.113776, 30.026598], [-90.113848, 30.024327], [-90.113965, 30.023855], [-90.114186, 30.023305], [-90.114187, 30.023304], [-90.114286, 30.023118], [-90.114395, 30.021626], [-90.114539, 30.020147], [-90.114586, 30.019972], [-90.114716, 30.019488], [-90.11476, 30.019247], [-90.114782, 30.019035], [-90.114853, 30.018278], [-90.114866, 30.018044], [-90.114909, 30.017464], [-90.114974, 30.016647], [-90.115052, 30.015812], [-90.115169, 30.014351], [-90.11519, 30.014], [-90.115259, 30.01306], [-90.115317, 30.012174], [-90.115437, 30.010369], [-90.115524, 30.009188], [-90.115576, 30.008556], [-90.115625, 30.008023], [-90.115674, 30.00722], [-90.115752, 30.006418], [-90.115804, 30.005603], [-90.115858, 30.004752], [-90.11592, 30.003934], [-90.115978, 30.003129], [-90.116056, 30.002304], [-90.116107, 30.001498], [-90.116167, 30.00069], [-90.11618, 30.000286], [-90.116235, 29.999691], [-90.119033, 29.999845], [-90.119312, 29.999861], [-90.121972, 30.000009], [-90.122119, 30.000016], [-90.122763, 30.000058], [-90.120757, 30.023103], [-90.120577, 30.025153], [-90.120176, 30.029712], [-90.120093, 30.029718], [-90.119886, 30.029734], [-90.119617, 30.029754], [-90.119599, 30.029608], [-90.119499, 30.029552], [-90.119457, 30.02953], [-90.119401, 30.029508], [-90.119368, 30.029538], [-90.119351, 30.029543], [-90.119313, 30.029555], [-90.119263, 30.029549], [-90.119203, 30.029549], [-90.119146, 30.029562], [-90.119054, 30.029586], [-90.119013, 30.029605], [-90.118996, 30.029613], [-90.118983, 30.029626], [-90.11895, 30.02966], [-90.118876, 30.029707], [-90.11882, 30.029739], [-90.118731, 30.029772], [-90.118617, 30.029785], [-90.118597, 30.029787], [-90.118527, 30.029795], [-90.118429, 30.029801], [-90.118312, 30.029806], [-90.118185, 30.029803], [-90.118091, 30.029792], [-90.117971, 30.029777], [-90.117849, 30.029726], [-90.11783, 30.029719], [-90.117685, 30.02964], [-90.117602, 30.029596], [-90.117536, 30.029577], [-90.117511, 30.02957], [-90.117495, 30.029564], [-90.11742, 30.02954], [-90.117371, 30.029524], [-90.117282, 30.029506], [-90.117149, 30.029493], [-90.1171, 30.029484], [-90.117073, 30.029475], [-90.116992, 30.029426], [-90.116877, 30.029312], [-90.116677, 30.029198], [-90.116603, 30.029166], [-90.116527, 30.029153], [-90.116292, 30.029121], [-90.116086, 30.029101], [-90.115915, 30.029069], [-90.115772, 30.029039], [-90.115652, 30.029028], [-90.115536, 30.029014], [-90.115235, 30.02901], [-90.114838, 30.02902], [-90.114419, 30.029062], [-90.114194, 30.029071], [-90.114134, 30.029068], [-90.114109, 30.029067], [-90.114077, 30.029057], [-90.113952, 30.02902], [-90.113851, 30.029006], [-90.113779, 30.028995], [-90.113716, 30.028994], [-90.113658, 30.028996], [-90.113223, 30.028969], [-90.113059, 30.028931], [-90.113011, 30.02891], [-90.11296, 30.02887], [-90.112856, 30.028834], [-90.112654, 30.028764], [-90.112617, 30.028726], [-90.112596, 30.028688], [-90.112591, 30.028665], [-90.112586, 30.02864], [-90.112582, 30.028614], [-90.112583, 30.028597], [-90.112586, 30.028556], [-90.11261, 30.02845], [-90.112824, 30.027981]]]]
    },
    "properties": {
      "neighbourhood": "West End",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.046138, 29.948653], [-90.045191, 29.94862], [-90.045198, 29.948476], [-90.045216, 29.948102], [-90.045244, 29.947493], [-90.045312, 29.946437], [-90.045394, 29.945375], [-90.04546, 29.944326], [-90.0455, 29.943673], [-90.045524, 29.943279], [-90.045603, 29.942189], [-90.045685, 29.941192], [-90.046101, 29.941207], [-90.046147, 29.940747], [-90.046191, 29.939773], [-90.046257, 29.938805], [-90.046269, 29.938637], [-90.046277, 29.938524], [-90.046279, 29.938488], [-90.046296, 29.938241], [-90.046314, 29.937973], [-90.046378, 29.937207], [-90.04651, 29.934891], [-90.047791, 29.934822], [-90.048197, 29.9348], [-90.054479, 29.940756], [-90.058489, 29.944558], [-90.058547, 29.945334], [-90.058572, 29.946505], [-90.055465, 29.948278], [-90.055053, 29.948448], [-90.054725, 29.948456], [-90.054629, 29.948516], [-90.05404, 29.948882], [-90.05384, 29.949006], [-90.053542, 29.948634], [-90.053413, 29.948598], [-90.053346, 29.948578], [-90.053278, 29.948562], [-90.052715, 29.948539], [-90.052392, 29.948528], [-90.052364, 29.948612], [-90.052321, 29.948682], [-90.052155, 29.948686], [-90.051193, 29.94871], [-90.050705, 29.948721], [-90.050547, 29.948725], [-90.049847, 29.948756], [-90.049209, 29.948729], [-90.04818, 29.948699], [-90.047065, 29.948658], [-90.046138, 29.948653]]]]
    },
    "properties": {
      "neighbourhood": "Mcdonogh",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.118498, 29.962401], [-90.117689, 29.961767], [-90.116823, 29.961048], [-90.11587, 29.960315], [-90.115752, 29.960215], [-90.116519, 29.959518], [-90.117252, 29.958789], [-90.118057, 29.95808], [-90.118688, 29.957464], [-90.118773, 29.957382], [-90.118873, 29.957299], [-90.119546, 29.956665], [-90.119885, 29.95633], [-90.120297, 29.955922], [-90.120502, 29.955738], [-90.121298, 29.955045], [-90.122069, 29.954308], [-90.122801, 29.953567], [-90.123561, 29.952882], [-90.124317, 29.952169], [-90.125093, 29.951528], [-90.125851, 29.950815], [-90.126626, 29.950093], [-90.127342, 29.949365], [-90.128119, 29.948633], [-90.128865, 29.947924], [-90.129599, 29.947204], [-90.130394, 29.946507], [-90.131175, 29.94583], [-90.1319, 29.945141], [-90.13264, 29.944434], [-90.133323, 29.943789], [-90.134011, 29.943062], [-90.134061, 29.942983], [-90.134106, 29.94293], [-90.134204, 29.942815], [-90.134407, 29.942629], [-90.134516, 29.942526], [-90.134653, 29.942454], [-90.134752, 29.942327], [-90.13534, 29.9418], [-90.13607, 29.941145], [-90.138974, 29.938404], [-90.139008, 29.93859], [-90.139415, 29.940859], [-90.139486, 29.942823], [-90.139486, 29.942823], [-90.139773, 29.945309], [-90.139803, 29.945572], [-90.139909, 29.946512], [-90.139939, 29.946775], [-90.140031, 29.947589], [-90.138848, 29.949669], [-90.136294, 29.954157], [-90.136201, 29.954322], [-90.134465, 29.957372], [-90.133875, 29.958409], [-90.133824, 29.958499], [-90.132913, 29.960099], [-90.131204, 29.963103], [-90.13074, 29.963918], [-90.130498, 29.963781], [-90.130381, 29.963702], [-90.130083, 29.963478], [-90.129751, 29.963208], [-90.129436, 29.962952], [-90.12916, 29.962736], [-90.128606, 29.962289], [-90.12812, 29.961908], [-90.127387, 29.961287], [-90.126515, 29.96058], [-90.12597, 29.960132], [-90.12571, 29.959918], [-90.1249, 29.959252], [-90.124676, 29.959455], [-90.123892, 29.960192], [-90.12314, 29.960879], [-90.122361, 29.961604], [-90.121615, 29.962328], [-90.12086, 29.963036], [-90.120132, 29.963709], [-90.119332, 29.963048], [-90.118498, 29.962401]]]]
    },
    "properties": {
      "neighbourhood": "Leonidas",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.057932, 29.938016], [-90.058016, 29.935814], [-90.058151, 29.934333], [-90.058729, 29.931976], [-90.059027, 29.93133], [-90.05903, 29.931323], [-90.059389, 29.930546], [-90.059767, 29.929725], [-90.061273, 29.927602], [-90.061491, 29.927295], [-90.06157, 29.927207], [-90.062587, 29.926064], [-90.062609, 29.926039], [-90.065333, 29.926742], [-90.066261, 29.926851], [-90.066433, 29.926848], [-90.066463, 29.926847], [-90.066624, 29.926844], [-90.067289, 29.927001], [-90.068119, 29.927738], [-90.068311, 29.927923], [-90.068707, 29.928284], [-90.069063, 29.928611], [-90.06987, 29.92933], [-90.070172, 29.929647], [-90.070261, 29.929718], [-90.070997, 29.930307], [-90.071507, 29.930778], [-90.072099, 29.931236], [-90.07306, 29.93218], [-90.073375, 29.931091], [-90.073066, 29.930811], [-90.073891, 29.930209], [-90.074977, 29.929419], [-90.075984, 29.928805], [-90.075313, 29.927997], [-90.074607, 29.92723], [-90.07391, 29.926418], [-90.073999, 29.926356], [-90.074962, 29.925754], [-90.075883, 29.925147], [-90.075206, 29.924355], [-90.076084, 29.923807], [-90.076701, 29.924651], [-90.077316, 29.925512], [-90.077948, 29.926347], [-90.07857, 29.927177], [-90.079209, 29.92804], [-90.079842, 29.928904], [-90.080456, 29.929742], [-90.080989, 29.93042], [-90.081824, 29.931558], [-90.082648, 29.932757], [-90.081994, 29.933147], [-90.081496, 29.933437], [-90.080597, 29.934007], [-90.080523, 29.934054], [-90.079571, 29.934643], [-90.078681, 29.935255], [-90.07804, 29.93574], [-90.077503, 29.936189], [-90.076819, 29.935607], [-90.076422, 29.935219], [-90.076296, 29.9354], [-90.075648, 29.936265], [-90.075144, 29.936903], [-90.074638, 29.937572], [-90.074578, 29.937655], [-90.074124, 29.938281], [-90.074072, 29.938342], [-90.073597, 29.939035], [-90.07272, 29.938503], [-90.072512, 29.938506], [-90.071296, 29.938237], [-90.070995, 29.93931], [-90.070661, 29.940279], [-90.070623, 29.940391], [-90.070555, 29.940651], [-90.070525, 29.940783], [-90.07048, 29.940981], [-90.070448, 29.941125], [-90.070435, 29.941182], [-90.070189, 29.941946], [-90.069952, 29.942757], [-90.069633, 29.943812], [-90.06918, 29.945312], [-90.0683, 29.945115], [-90.067452, 29.944936], [-90.066581, 29.94474], [-90.065828, 29.944575], [-90.065234, 29.944435], [-90.064531, 29.944269], [-90.064175, 29.944201], [-90.064068, 29.944182], [-90.063566, 29.944084], [-90.063018, 29.943951], [-90.062824, 29.941139], [-90.062772, 29.940304], [-90.062052, 29.939861], [-90.062043, 29.939022], [-90.062038, 29.938588], [-90.062476, 29.938605], [-90.062511, 29.937917], [-90.062013, 29.937924], [-90.060915, 29.937968], [-90.057982, 29.938015], [-90.057932, 29.938016]]]]
    },
    "properties": {
      "neighbourhood": "Lower Garden District",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-89.998751, 29.9737], [-89.999078, 29.973017], [-90.006206, 29.958119], [-90.006464, 29.958213], [-90.006551, 29.958241], [-90.007517, 29.958592], [-90.008197, 29.958845], [-90.009115, 29.959215], [-90.010063, 29.95956], [-90.011145, 29.959949], [-90.012202, 29.960328], [-90.012998, 29.960591], [-90.013917, 29.960811], [-90.014732, 29.960996], [-90.01582, 29.961246], [-90.016771, 29.961473], [-90.018482, 29.961853], [-90.019617, 29.96211], [-90.020497, 29.962302], [-90.021369, 29.962529], [-90.021402, 29.96246], [-90.022292, 29.962654], [-90.023182, 29.962864], [-90.024108, 29.963072], [-90.025255, 29.963333], [-90.026392, 29.963598], [-90.02678, 29.963702], [-90.027396, 29.963836], [-90.027371, 29.963903], [-90.027264, 29.96427], [-90.026526, 29.966466], [-90.025733, 29.968741], [-90.025645, 29.968995], [-90.025615, 29.969081], [-90.024777, 29.971759], [-90.024142, 29.973704], [-90.021871, 29.980672], [-90.021698, 29.980719], [-90.020992, 29.980549], [-90.020557, 29.979944], [-90.020434, 29.979897], [-90.02027, 29.979851], [-90.019735, 29.979723], [-90.019659, 29.979708], [-90.019485, 29.979667], [-90.018615, 29.979462], [-90.017654, 29.979242], [-90.016745, 29.979044], [-90.015862, 29.978832], [-90.014988, 29.978638], [-90.014147, 29.978446], [-90.013062, 29.978206], [-90.01238, 29.978052], [-90.011456, 29.97785], [-90.010524, 29.977631], [-90.010399, 29.977601], [-90.009422, 29.977369], [-90.0086, 29.977189], [-90.008151, 29.977089], [-90.007882, 29.977021], [-90.007706, 29.97697], [-90.007529, 29.976914], [-90.00686, 29.976661], [-90.005801, 29.976295], [-90.004753, 29.975895], [-90.003858, 29.975577], [-90.003691, 29.975516], [-90.003173, 29.975331], [-90.00262, 29.975134], [-90.001635, 29.974777], [-90.000735, 29.974448], [-89.999859, 29.974134], [-89.998739, 29.973726], [-89.998751, 29.9737]]]]
    },
    "properties": {
      "neighbourhood": "Lower Ninth Ward",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.050083, 29.969104], [-90.050143, 29.968937], [-90.050451, 29.967936], [-90.050515, 29.967741], [-90.050776, 29.966918], [-90.050818, 29.966775], [-90.051069, 29.965938], [-90.0511, 29.965819], [-90.051372, 29.964903], [-90.05171, 29.963898], [-90.052006, 29.962896], [-90.052266, 29.962126], [-90.052469, 29.961871], [-90.052472, 29.961703], [-90.052472, 29.961303], [-90.052331, 29.958381], [-90.056258, 29.960384], [-90.056692, 29.961068], [-90.056808, 29.961273], [-90.056853, 29.961354], [-90.057586, 29.961873], [-90.05795, 29.962109], [-90.058965, 29.962816], [-90.059862, 29.963434], [-90.060812, 29.964051], [-90.061655, 29.964679], [-90.062571, 29.965316], [-90.063486, 29.965933], [-90.063597, 29.966021], [-90.062967, 29.966719], [-90.062579, 29.967143], [-90.062412, 29.96732], [-90.062306, 29.967443], [-90.062154, 29.967596], [-90.061898, 29.967814], [-90.061712, 29.967946], [-90.061523, 29.968036], [-90.061321, 29.968115], [-90.061074, 29.9682], [-90.06092, 29.968245], [-90.060733, 29.968285], [-90.060388, 29.968303], [-90.059263, 29.968383], [-90.058133, 29.968609], [-90.056979, 29.968709], [-90.056737, 29.968725], [-90.055547, 29.968808], [-90.054389, 29.968872], [-90.05328, 29.968937], [-90.052288, 29.969009], [-90.052034, 29.969024], [-90.051008, 29.969084], [-90.05033, 29.96912], [-90.050236, 29.969118], [-90.050157, 29.969114], [-90.050083, 29.969104]]]]
    },
    "properties": {
      "neighbourhood": "Marigny",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.105941, 29.955147], [-90.106374, 29.954464], [-90.106472, 29.954368], [-90.106507, 29.954358], [-90.106533, 29.954358], [-90.106581, 29.954365], [-90.106926, 29.953781], [-90.107151, 29.953493], [-90.107487, 29.953063], [-90.107621, 29.952629], [-90.107843, 29.951732], [-90.108067, 29.950962], [-90.10811, 29.950841], [-90.108642, 29.950959], [-90.108947, 29.951021], [-90.109267, 29.950117], [-90.109599, 29.949237], [-90.109934, 29.948303], [-90.11025, 29.947429], [-90.110048, 29.947375], [-90.109044, 29.94716], [-90.107761, 29.946924], [-90.107775, 29.946394], [-90.107793, 29.946018], [-90.108235, 29.946087], [-90.108347, 29.946104], [-90.10863, 29.945173], [-90.10884, 29.944283], [-90.109076, 29.943329], [-90.109329, 29.942408], [-90.10954, 29.941667], [-90.109632, 29.94135], [-90.110517, 29.94187], [-90.111391, 29.942365], [-90.111768, 29.94257], [-90.112045, 29.942749], [-90.112329, 29.942923], [-90.112761, 29.943262], [-90.112947, 29.943464], [-90.11305, 29.943618], [-90.113137, 29.943772], [-90.113223, 29.944041], [-90.113384, 29.944414], [-90.113505, 29.944696], [-90.113584, 29.944879], [-90.113985, 29.945885], [-90.114137, 29.946261], [-90.114329, 29.946735], [-90.114771, 29.94773], [-90.114858, 29.947975], [-90.115244, 29.94885], [-90.115316, 29.949012], [-90.115573, 29.949624], [-90.115697, 29.949953], [-90.11581, 29.950225], [-90.116044, 29.95079], [-90.116145, 29.951017], [-90.116281, 29.951361], [-90.116454, 29.951795], [-90.116481, 29.951863], [-90.116584, 29.952139], [-90.116728, 29.952524], [-90.116779, 29.95265], [-90.116818, 29.952721], [-90.116861, 29.952793], [-90.117481, 29.951974], [-90.118119, 29.95115], [-90.118786, 29.950312], [-90.119424, 29.949534], [-90.119659, 29.949725], [-90.120394, 29.950323], [-90.121193, 29.950997], [-90.121995, 29.951614], [-90.12278, 29.952222], [-90.123561, 29.952882], [-90.122801, 29.953567], [-90.122069, 29.954308], [-90.121298, 29.955045], [-90.120502, 29.955738], [-90.120297, 29.955922], [-90.119885, 29.95633], [-90.119546, 29.956665], [-90.118873, 29.957299], [-90.118773, 29.957382], [-90.118688, 29.957464], [-90.118057, 29.95808], [-90.117252, 29.958789], [-90.116519, 29.959518], [-90.115752, 29.960215], [-90.115137, 29.960777], [-90.114605, 29.960338], [-90.114343, 29.960123], [-90.114201, 29.960255], [-90.11348, 29.959643], [-90.112717, 29.958984], [-90.112253, 29.958638], [-90.111637, 29.958135], [-90.110948, 29.957613], [-90.110306, 29.958368], [-90.110217, 29.958477], [-90.109426, 29.958028], [-90.108679, 29.957626], [-90.108197, 29.957359], [-90.108152, 29.957335], [-90.107273, 29.956926], [-90.107016, 29.956822], [-90.106844, 29.95674], [-90.106671, 29.956659], [-90.106383, 29.956499], [-90.106143, 29.956368], [-90.105846, 29.956194], [-90.105331, 29.955965], [-90.10546, 29.955792], [-90.105941, 29.955147]]]]
    },
    "properties": {
      "neighbourhood": "Marlyville - Fontainbleau",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.034374, 30.0313], [-90.034333, 30.031083], [-90.033984, 30.030023], [-90.032348, 30.025049], [-90.032296, 30.024891], [-90.032197, 30.024588], [-90.030669, 30.019941], [-90.030658, 30.019908], [-90.03017, 30.018424], [-90.02967, 30.016902], [-90.029571, 30.016601], [-90.030083, 30.016459], [-90.030304, 30.016398], [-90.031706, 30.016065], [-90.032203, 30.015947], [-90.032471, 30.015901], [-90.032792, 30.015943], [-90.032982, 30.01597], [-90.033155, 30.015972], [-90.033369, 30.015941], [-90.03476, 30.015618], [-90.037771, 30.014961], [-90.038876, 30.014717], [-90.041511, 30.01413], [-90.041883, 30.014048], [-90.042299, 30.013971], [-90.042634, 30.013924], [-90.042799, 30.013919], [-90.0432, 30.013928], [-90.04366, 30.013933], [-90.043987, 30.013909], [-90.044246, 30.013883], [-90.044529, 30.013836], [-90.046257, 30.013387], [-90.046361, 30.013354], [-90.046433, 30.01332], [-90.046509, 30.013266], [-90.046593, 30.013171], [-90.046705, 30.012893], [-90.046735, 30.013262], [-90.046808, 30.014404], [-90.046876, 30.015412], [-90.046913, 30.01576], [-90.046977, 30.016416], [-90.047065, 30.017467], [-90.047078, 30.017628], [-90.04716, 30.01867], [-90.047268, 30.019702], [-90.047331, 30.020704], [-90.047349, 30.021107], [-90.047372, 30.021701], [-90.047465, 30.022763], [-90.047481, 30.022943], [-90.04757, 30.023962], [-90.047638, 30.024979], [-90.047726, 30.025997], [-90.047768, 30.026645], [-90.047844, 30.026723], [-90.047875, 30.026871], [-90.047909, 30.027045], [-90.047937, 30.027187], [-90.047674, 30.0273], [-90.047334, 30.027508], [-90.047104, 30.027687], [-90.046922, 30.027859], [-90.046661, 30.028119], [-90.046504, 30.028268], [-90.046335, 30.028413], [-90.046133, 30.028573], [-90.045887, 30.028763], [-90.045741, 30.028877], [-90.045623, 30.028969], [-90.045314, 30.029208], [-90.045099, 30.029357], [-90.044988, 30.02942], [-90.044876, 30.029474], [-90.044691, 30.029551], [-90.044526, 30.029606], [-90.044405, 30.029639], [-90.044306, 30.029662], [-90.044038, 30.029706], [-90.042974, 30.029851], [-90.042072, 30.02999], [-90.041059, 30.030245], [-90.040548, 30.030373], [-90.038851, 30.0308], [-90.037838, 30.031018], [-90.035917, 30.031476], [-90.035673, 30.031542], [-90.035242, 30.03166], [-90.034473, 30.031436], [-90.034489, 30.031341], [-90.034374, 30.0313]]]]
    },
    "properties": {
      "neighbourhood": "Pontchartrain Park",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.090409, 29.975931], [-90.090354, 29.975868], [-90.090381, 29.975815], [-90.090396, 29.975774], [-90.090608, 29.975258], [-90.090886, 29.974577], [-90.090937, 29.974092], [-90.09114, 29.973635], [-90.091274, 29.973314], [-90.091275, 29.973315], [-90.091406, 29.973367], [-90.091456, 29.973266], [-90.091562, 29.973308], [-90.091612, 29.973229], [-90.091312, 29.972902], [-90.091213, 29.972798], [-90.09124, 29.97277], [-90.091344, 29.97266], [-90.09038, 29.97209], [-90.089438, 29.97154], [-90.088756, 29.971153], [-90.087915, 29.970576], [-90.087046, 29.970049], [-90.086124, 29.969557], [-90.084828, 29.968724], [-90.084569, 29.968558], [-90.085041, 29.968035], [-90.085622, 29.967411], [-90.085788, 29.967233], [-90.086471, 29.966454], [-90.087231, 29.965586], [-90.087359, 29.965437], [-90.087874, 29.964838], [-90.088093, 29.964583], [-90.088497, 29.964127], [-90.088816, 29.963766], [-90.08908, 29.963455], [-90.089555, 29.962894], [-90.089627, 29.962811], [-90.090058, 29.962329], [-90.090193, 29.962178], [-90.090368, 29.961983], [-90.090506, 29.961816], [-90.090581, 29.961727], [-90.090905, 29.961357], [-90.091267, 29.960944], [-90.091526, 29.960649], [-90.092498, 29.959571], [-90.093101, 29.95887], [-90.093509, 29.958476], [-90.093618, 29.958365], [-90.093699, 29.958283], [-90.093737, 29.958246], [-90.093849, 29.958125], [-90.094018, 29.957934], [-90.094117, 29.95781], [-90.094171, 29.957842], [-90.095529, 29.958825], [-90.095576, 29.958861], [-90.095615, 29.958911], [-90.095632, 29.958953], [-90.095786, 29.959074], [-90.096131, 29.959309], [-90.097267, 29.960119], [-90.10072, 29.962568], [-90.100785, 29.962621], [-90.10245, 29.963754], [-90.103249, 29.964307], [-90.103894, 29.964757], [-90.104961, 29.965501], [-90.105978, 29.966412], [-90.106113, 29.966532], [-90.106976, 29.967351], [-90.107127, 29.967497], [-90.107284, 29.96766], [-90.107523, 29.9679], [-90.107648, 29.968016], [-90.108272, 29.968612], [-90.108418, 29.96878], [-90.108608, 29.969034], [-90.108751, 29.969251], [-90.109088, 29.969875], [-90.109122, 29.969976], [-90.109517, 29.970682], [-90.109632, 29.97093], [-90.109652, 29.970973], [-90.110091, 29.971784], [-90.110443, 29.972549], [-90.110943, 29.97402], [-90.111049, 29.974351], [-90.111147, 29.974591], [-90.111541, 29.975728], [-90.111862, 29.976634], [-90.112146, 29.977315], [-90.112425, 29.978011], [-90.113183, 29.979832], [-90.113474, 29.98058], [-90.11367, 29.981077], [-90.113699, 29.981151], [-90.113588, 29.981185], [-90.113392, 29.981253], [-90.112832, 29.981441], [-90.112095, 29.981689], [-90.111558, 29.981869], [-90.111286, 29.98196], [-90.111027, 29.982064], [-90.110411, 29.982263], [-90.108721, 29.982815], [-90.107428, 29.983209], [-90.106218, 29.983513], [-90.105827, 29.98361], [-90.105389, 29.983702], [-90.105086, 29.983791], [-90.105011, 29.983735], [-90.10437, 29.983262], [-90.103422, 29.982616], [-90.102489, 29.982018], [-90.101951, 29.981663], [-90.101573, 29.981403], [-90.100681, 29.980783], [-90.099755, 29.980157], [-90.098797, 29.979539], [-90.097874, 29.978911], [-90.096802, 29.978197], [-90.096673, 29.978103], [-90.095888, 29.978837], [-90.095532, 29.979171], [-90.095673, 29.979264], [-90.095397, 29.979518], [-90.09525, 29.979418], [-90.094525, 29.978923], [-90.09433, 29.978784], [-90.093776, 29.978417], [-90.0937, 29.978365], [-90.092971, 29.977888], [-90.092219, 29.977385], [-90.092164, 29.977348], [-90.091726, 29.977052], [-90.091464, 29.976875], [-90.091435, 29.976856], [-90.091271, 29.976735], [-90.091201, 29.976674], [-90.091146, 29.976612], [-90.090948, 29.976382], [-90.090889, 29.976308], [-90.090815, 29.976218], [-90.090409, 29.975931]]]]
    },
    "properties": {
      "neighbourhood": "Mid-City",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.090182, 29.928632], [-90.09131, 29.9282], [-90.091442, 29.928155], [-90.092524, 29.927759], [-90.092739, 29.92768], [-90.093633, 29.927384], [-90.094541, 29.927117], [-90.09469, 29.927076], [-90.09553, 29.926918], [-90.096352, 29.926831], [-90.097415, 29.926742], [-90.098562, 29.926674], [-90.098883, 29.926638], [-90.099643, 29.926578], [-90.10077, 29.926489], [-90.101919, 29.9264], [-90.101946, 29.926584], [-90.102061, 29.927574], [-90.102187, 29.928525], [-90.102285, 29.929475], [-90.102345, 29.930471], [-90.102453, 29.931424], [-90.102563, 29.932394], [-90.102659, 29.933348], [-90.102752, 29.934313], [-90.102837, 29.935266], [-90.102929, 29.936222], [-90.103073, 29.93728], [-90.103125, 29.938121], [-90.103222, 29.939099], [-90.103305, 29.940097], [-90.103065, 29.940112], [-90.102182, 29.940165], [-90.101074, 29.940259], [-90.099852, 29.940352], [-90.09887, 29.94043], [-90.098539, 29.940481], [-90.098135, 29.940615], [-90.097574, 29.940824], [-90.097451, 29.94087], [-90.096249, 29.941372], [-90.09607, 29.941468], [-90.096038, 29.941238], [-90.096025, 29.941047], [-90.096026, 29.940811], [-90.096029, 29.940524], [-90.096044, 29.940406], [-90.096076, 29.940279], [-90.096113, 29.940159], [-90.09617, 29.939996], [-90.096296, 29.939753], [-90.096341, 29.939632], [-90.09638, 29.9395], [-90.096409, 29.939303], [-90.096415, 29.93918], [-90.096418, 29.939076], [-90.096414, 29.938978], [-90.096396, 29.93887], [-90.09633, 29.938601], [-90.09619, 29.938306], [-90.095767, 29.937386], [-90.095314, 29.936422], [-90.094931, 29.935631], [-90.094873, 29.935522], [-90.094284, 29.935739], [-90.093785, 29.935927], [-90.093349, 29.935014], [-90.092883, 29.934156], [-90.092479, 29.933233], [-90.092014, 29.932371], [-90.091583, 29.931497], [-90.091559, 29.931399], [-90.091471, 29.931204], [-90.091173, 29.930575], [-90.090762, 29.929693], [-90.09057, 29.929282], [-90.090274, 29.928742], [-90.090182, 29.928632]]]]
    },
    "properties": {
      "neighbourhood": "Milan",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.009954, 30.026423], [-90.010533, 30.026287], [-90.010787, 30.026227], [-90.01109, 30.026142], [-90.011451, 30.026014], [-90.011767, 30.025883], [-90.012134, 30.025706], [-90.012531, 30.025429], [-90.012846, 30.02517], [-90.013159, 30.024883], [-90.013367, 30.024642], [-90.013683, 30.024262], [-90.01398, 30.023612], [-90.014052, 30.0234], [-90.014154, 30.022967], [-90.014197, 30.022656], [-90.014206, 30.022313], [-90.014198, 30.022128], [-90.014163, 30.021723], [-90.014125, 30.02142], [-90.014036, 30.020503], [-90.014005, 30.020274], [-90.013974, 30.019934], [-90.013853, 30.018497], [-90.013722, 30.016946], [-90.013439, 30.013979], [-90.013381, 30.01325], [-90.013192, 30.011514], [-90.013167, 30.010852], [-90.013339, 30.010829], [-90.014414, 30.010706], [-90.01448, 30.010698], [-90.0153, 30.01061], [-90.017595, 30.010357], [-90.019296, 30.010181], [-90.019576, 30.010147], [-90.019951, 30.010092], [-90.020172, 30.010051], [-90.020455, 30.009978], [-90.020886, 30.009837], [-90.024187, 30.008998], [-90.024333, 30.008954], [-90.026506, 30.008451], [-90.027007, 30.008315], [-90.027049, 30.008452], [-90.027109, 30.008647], [-90.028345, 30.012639], [-90.029571, 30.016601], [-90.02967, 30.016902], [-90.03017, 30.018424], [-90.030658, 30.019908], [-90.030669, 30.019941], [-90.032197, 30.024588], [-90.032296, 30.024891], [-90.032348, 30.025049], [-90.033984, 30.030023], [-90.034333, 30.031083], [-90.034374, 30.0313], [-90.0342, 30.031348], [-90.033797, 30.031433], [-90.033687, 30.031447], [-90.033508, 30.031411], [-90.033176, 30.031365], [-90.033024, 30.031349], [-90.032893, 30.031367], [-90.031576, 30.031674], [-90.029256, 30.032279], [-90.0287, 30.032428], [-90.028394, 30.032516], [-90.028179, 30.032558], [-90.027878, 30.032587], [-90.027664, 30.032603], [-90.027461, 30.032638], [-90.027131, 30.032715], [-90.026954, 30.032764], [-90.026799, 30.032365], [-90.026711, 30.032138], [-90.026336, 30.031176], [-90.026248, 30.030968], [-90.025938, 30.03019], [-90.025747, 30.02962], [-90.025652, 30.029348], [-90.025368, 30.028564], [-90.025067, 30.027764], [-90.024778, 30.026958], [-90.024514, 30.026233], [-90.023725, 30.026474], [-90.022887, 30.02673], [-90.022386, 30.026877], [-90.021389, 30.027168], [-90.020796, 30.02735], [-90.020344, 30.027489], [-90.019525, 30.027727], [-90.01842, 30.028061], [-90.017946, 30.028064], [-90.017227, 30.028014], [-90.017072, 30.027983], [-90.016925, 30.02795], [-90.016795, 30.027907], [-90.0166, 30.027842], [-90.016088, 30.027608], [-90.0159, 30.027522], [-90.015793, 30.027466], [-90.015712, 30.027426], [-90.015655, 30.027378], [-90.015598, 30.027286], [-90.015507, 30.027296], [-90.015389, 30.027286], [-90.015301, 30.02727], [-90.014805, 30.027099], [-90.014112, 30.026903], [-90.013523, 30.026751], [-90.013222, 30.026691], [-90.012599, 30.026591], [-90.012196, 30.02654], [-90.011567, 30.026478], [-90.011351, 30.026467], [-90.011321, 30.026467], [-90.010707, 30.026447], [-90.010181, 30.026437], [-90.009954, 30.026423]]]]
    },
    "properties": {
      "neighbourhood": "Pines Village",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-89.988866, 30.014181], [-89.989248, 30.014106], [-89.9901, 30.013957], [-89.990963, 30.013803], [-89.991992, 30.013625], [-89.993013, 30.013445], [-89.993521, 30.013359], [-89.994449, 30.013196], [-89.995845, 30.012951], [-89.996974, 30.012752], [-89.997229, 30.012706], [-89.998653, 30.012448], [-89.999044, 30.012381], [-89.999506, 30.012316], [-90.000637, 30.012189], [-90.001604, 30.012084], [-90.002197, 30.012019], [-90.002491, 30.011987], [-90.002861, 30.011947], [-90.004276, 30.01179], [-90.005863, 30.011613], [-90.007184, 30.011478], [-90.008244, 30.011366], [-90.008855, 30.011302], [-90.009757, 30.011209], [-90.01068, 30.011104], [-90.01092, 30.01107], [-90.012043, 30.010968], [-90.012285, 30.010948], [-90.012809, 30.010889], [-90.012871, 30.010883], [-90.013167, 30.010852], [-90.013192, 30.011514], [-90.013381, 30.01325], [-90.013439, 30.013979], [-90.013722, 30.016946], [-90.013853, 30.018497], [-90.013974, 30.019934], [-90.014005, 30.020274], [-90.013697, 30.020359], [-90.012933, 30.020569], [-90.012142, 30.02062], [-90.011665, 30.020886], [-90.010735, 30.020746], [-90.009824, 30.020824], [-90.006395, 30.02115], [-90.005524, 30.021231], [-90.004877, 30.021298], [-90.004328, 30.021362], [-90.003465, 30.021441], [-90.002616, 30.021534], [-90.001846, 30.021595], [-90.001222, 30.021664], [-90.000432, 30.021733], [-89.9999, 30.021785], [-89.999672, 30.021818], [-89.99818, 30.022246], [-89.997434, 30.022459], [-89.996641, 30.022661], [-89.995787, 30.022926], [-89.995507, 30.023008], [-89.995295, 30.023086], [-89.994135, 30.02331], [-89.99277, 30.023501], [-89.992181, 30.023573], [-89.990912, 30.023727], [-89.98947, 30.023901], [-89.989851, 30.023779], [-89.989597, 30.021363], [-89.989425, 30.019732], [-89.989408, 30.019571], [-89.989401, 30.019508], [-89.989218, 30.017803], [-89.989041, 30.016027], [-89.988866, 30.014181]]]]
    },
    "properties": {
      "neighbourhood": "Plum Orchard",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-89.939617, 30.026996], [-89.940177, 30.026783], [-89.941195, 30.02643], [-89.941999, 30.026151], [-89.943197, 30.025732], [-89.945153, 30.025047], [-89.946766, 30.024471], [-89.947068, 30.024363], [-89.9474, 30.024244], [-89.947541, 30.024194], [-89.947659, 30.024152], [-89.949286, 30.023596], [-89.950057, 30.023324], [-89.9501, 30.023309], [-89.950555, 30.023146], [-89.951185, 30.022937], [-89.951663, 30.022785], [-89.952106, 30.022644], [-89.952298, 30.022586], [-89.953312, 30.022282], [-89.954405, 30.021981], [-89.955417, 30.021725], [-89.955475, 30.021711], [-89.955731, 30.021649], [-89.956114, 30.021553], [-89.957176, 30.021292], [-89.957414, 30.021231], [-89.957858, 30.021118], [-89.958017, 30.021078], [-89.959041, 30.020828], [-89.959202, 30.020791], [-89.959266, 30.020775], [-89.959786, 30.020643], [-89.960167, 30.020548], [-89.961002, 30.020334], [-89.961654, 30.020178], [-89.962351, 30.020009], [-89.963049, 30.019829], [-89.963112, 30.019813], [-89.963769, 30.019651], [-89.964449, 30.019479], [-89.965158, 30.019323], [-89.965882, 30.019133], [-89.966587, 30.018954], [-89.967229, 30.018791], [-89.967942, 30.01862], [-89.968123, 30.018577], [-89.968151, 30.01887], [-89.968233, 30.01974], [-89.968326, 30.02083], [-89.968399, 30.021521], [-89.96848, 30.022213], [-89.968558, 30.022885], [-89.968623, 30.023595], [-89.968702, 30.024266], [-89.968751, 30.024947], [-89.96882, 30.025615], [-89.968878, 30.026104], [-89.968906, 30.026326], [-89.968954, 30.026744], [-89.968994, 30.026947], [-89.969096, 30.027139], [-89.969186, 30.02729], [-89.969499, 30.02773], [-89.969998, 30.028477], [-89.970228, 30.028817], [-89.970406, 30.02908], [-89.970986, 30.029858], [-89.971144, 30.030086], [-89.971346, 30.03038], [-89.971549, 30.030674], [-89.97156, 30.03069], [-89.971977, 30.03124], [-89.972055, 30.031343], [-89.972375, 30.031777], [-89.973001, 30.032623], [-89.973178, 30.032862], [-89.973705, 30.033542], [-89.973958, 30.033891], [-89.974448, 30.034567], [-89.974557, 30.034711], [-89.974773, 30.034997], [-89.975081, 30.035424], [-89.975122, 30.035482], [-89.97534, 30.035796], [-89.975385, 30.035865], [-89.97568, 30.036249], [-89.975913, 30.036563], [-89.97603, 30.036729], [-89.976182, 30.036942], [-89.976311, 30.037124], [-89.976106, 30.03722], [-89.975223, 30.037631], [-89.974521, 30.037988], [-89.973994, 30.038275], [-89.973462, 30.038557], [-89.972743, 30.039059], [-89.971793, 30.039618], [-89.970548, 30.040403], [-89.969383, 30.041128], [-89.968188, 30.041875], [-89.967035, 30.042612], [-89.965778, 30.043439], [-89.964956, 30.043961], [-89.964237, 30.044405], [-89.964127, 30.044474], [-89.961316, 30.046219], [-89.96112, 30.046348], [-89.960235, 30.046927], [-89.959214, 30.047574], [-89.958555, 30.047999], [-89.957807, 30.048449], [-89.957633, 30.048559], [-89.956212, 30.049455], [-89.954971, 30.050239], [-89.953696, 30.051067], [-89.952828, 30.051613], [-89.950863, 30.052834], [-89.948866, 30.054113], [-89.947525, 30.054949], [-89.946027, 30.055896], [-89.944543, 30.056846], [-89.943725, 30.05738], [-89.943373, 30.057595], [-89.943246, 30.057662], [-89.943042, 30.057765], [-89.941223, 30.058918], [-89.940079, 30.059649], [-89.939486, 30.060051], [-89.939465, 30.059782], [-89.939446, 30.059545], [-89.939291, 30.058161], [-89.939127, 30.056348], [-89.939094, 30.056016], [-89.939091, 30.055766], [-89.939097, 30.055491], [-89.939151, 30.055071], [-89.939186, 30.053982], [-89.93917, 30.053491], [-89.939162, 30.053044], [-89.93914, 30.052607], [-89.939092, 30.052131], [-89.93901, 30.05146], [-89.938867, 30.050068], [-89.938729, 30.048306], [-89.938725, 30.047789], [-89.938734, 30.047657], [-89.938757, 30.047312], [-89.938817, 30.046716], [-89.938874, 30.046247], [-89.938942, 30.045778], [-89.939065, 30.044973], [-89.939232, 30.044003], [-89.939341, 30.043264], [-89.939378, 30.042996], [-89.939458, 30.042001], [-89.939506, 30.040564], [-89.939484, 30.039072], [-89.939484, 30.037588], [-89.939484, 30.036888], [-89.939571, 30.033981], [-89.939573, 30.033852], [-89.939593, 30.03275], [-89.939592, 30.032592], [-89.939585, 30.031121], [-89.939575, 30.029643], [-89.939591, 30.028788], [-89.939599, 30.028204], [-89.939617, 30.026996]]]]
    },
    "properties": {
      "neighbourhood": "Read Blvd East",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-89.968123, 30.018577], [-89.968557, 30.018455], [-89.96938, 30.018251], [-89.969853, 30.018139], [-89.970121, 30.018075], [-89.970502, 30.017984], [-89.971076, 30.017832], [-89.972895, 30.017386], [-89.975059, 30.016856], [-89.975527, 30.016741], [-89.976434, 30.016506], [-89.976924, 30.016392], [-89.977822, 30.016187], [-89.978511, 30.016041], [-89.978634, 30.016015], [-89.978783, 30.015983], [-89.979855, 30.015772], [-89.980203, 30.015703], [-89.980449, 30.015659], [-89.981024, 30.015555], [-89.981766, 30.015442], [-89.982507, 30.01531], [-89.983016, 30.015215], [-89.983463, 30.015132], [-89.983901, 30.01505], [-89.98464, 30.014915], [-89.984685, 30.014907], [-89.986105, 30.014652], [-89.987883, 30.014353], [-89.988228, 30.014295], [-89.988866, 30.014181], [-89.989041, 30.016027], [-89.989218, 30.017803], [-89.989401, 30.019508], [-89.989408, 30.019571], [-89.989425, 30.019732], [-89.989597, 30.021363], [-89.989851, 30.023779], [-89.98947, 30.023901], [-89.988931, 30.023985], [-89.988675, 30.024019], [-89.987188, 30.024213], [-89.987008, 30.024237], [-89.986078, 30.024346], [-89.985599, 30.024422], [-89.9849, 30.024494], [-89.983771, 30.024559], [-89.98297, 30.024601], [-89.982234, 30.024626], [-89.981806, 30.024649], [-89.981412, 30.024655], [-89.981034, 30.024657], [-89.980097, 30.024704], [-89.979771, 30.024726], [-89.979182, 30.024765], [-89.978731, 30.024799], [-89.978425, 30.024834], [-89.977934, 30.024931], [-89.97715, 30.025083], [-89.976517, 30.025208], [-89.975882, 30.025331], [-89.975213, 30.025461], [-89.974227, 30.025654], [-89.973437, 30.025816], [-89.972867, 30.02594], [-89.972168, 30.0261], [-89.971113, 30.026318], [-89.970559, 30.026416], [-89.96948, 30.026631], [-89.968954, 30.026744], [-89.968906, 30.026326], [-89.968878, 30.026104], [-89.96882, 30.025615], [-89.968751, 30.024947], [-89.968702, 30.024266], [-89.968623, 30.023595], [-89.968558, 30.022885], [-89.96848, 30.022213], [-89.968399, 30.021521], [-89.968326, 30.02083], [-89.968233, 30.01974], [-89.968151, 30.01887], [-89.968123, 30.018577]]]]
    },
    "properties": {
      "neighbourhood": "Read Blvd West",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-89.985324, 29.904317], [-89.98532, 29.904375], [-89.985286, 29.904827], [-89.985808, 29.905369], [-89.986226, 29.905816], [-89.986343, 29.905936], [-89.987235, 29.906851], [-89.987288, 29.907069], [-89.987212, 29.907351], [-89.987014, 29.908085], [-89.986951, 29.908677], [-89.986784, 29.909916], [-89.98672, 29.910396], [-89.986682, 29.910706], [-89.986638, 29.911161], [-89.986578, 29.911653], [-89.986553, 29.911867], [-89.986492, 29.912473], [-89.986454, 29.912802], [-89.986407, 29.913291], [-89.986311, 29.913967], [-89.986205, 29.914773], [-89.986111, 29.915505], [-89.986033, 29.916218], [-89.986012, 29.916344], [-89.985983, 29.916484], [-89.985955, 29.916646], [-89.985904, 29.916891], [-89.985803, 29.917698], [-89.985707, 29.91863], [-89.985612, 29.919548], [-89.985526, 29.920169], [-89.985513, 29.920265], [-89.985488, 29.920446], [-89.985376, 29.921343], [-89.985268, 29.922245], [-89.985142, 29.923169], [-89.985111, 29.923415], [-89.98506, 29.92392], [-89.985039, 29.92409], [-89.985, 29.924411], [-89.984937, 29.92489], [-89.984897, 29.925348], [-89.984927, 29.925642], [-89.984936, 29.925736], [-89.984992, 29.926297], [-89.985051, 29.930173], [-89.985051, 29.930196], [-89.983916, 29.929687], [-89.98381, 29.929639], [-89.983159, 29.929347], [-89.981851, 29.928806], [-89.980552, 29.928268], [-89.977617, 29.927131], [-89.967519, 29.923463], [-89.962912, 29.922994], [-89.961998, 29.922908], [-89.958957, 29.92262], [-89.954971, 29.922507], [-89.950955, 29.92256], [-89.947181, 29.922972], [-89.943576, 29.92291], [-89.940522, 29.922592], [-89.936704, 29.922171], [-89.933079, 29.921681], [-89.929947, 29.921029], [-89.927072, 29.920372], [-89.92691, 29.920336], [-89.925935, 29.919927], [-89.924111, 29.919164], [-89.921751, 29.917785], [-89.919065, 29.915514], [-89.916386, 29.912694], [-89.913904, 29.909665], [-89.911961, 29.906345], [-89.910257, 29.903323], [-89.908414, 29.899793], [-89.90677, 29.895926], [-89.906245, 29.894494], [-89.906113, 29.894135], [-89.905322, 29.891977], [-89.903783, 29.887604], [-89.903236, 29.885103], [-89.903124, 29.882733], [-89.903208, 29.880281], [-89.903434, 29.878084], [-89.903904, 29.875721], [-89.904562, 29.873825], [-89.905308, 29.872342], [-89.905311, 29.872337], [-89.905453, 29.872054], [-89.906363, 29.871014], [-89.906786, 29.870529], [-89.90822, 29.869425], [-89.909843, 29.86823], [-89.912026, 29.867134], [-89.914261, 29.866155], [-89.91626, 29.865605], [-89.917049, 29.866731], [-89.920433, 29.871558], [-89.930281, 29.885606], [-89.930381, 29.885748], [-89.935303, 29.892767], [-89.959035, 29.902335], [-89.972944, 29.904164], [-89.97694, 29.902409], [-89.977048, 29.902407], [-89.979151, 29.902387], [-89.983, 29.903882], [-89.98341, 29.903959], [-89.984763, 29.904212], [-89.985217, 29.904297], [-89.985324, 29.904317]]]]
    },
    "properties": {
      "neighbourhood": "New Aurora - English Turn",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.074735, 29.962198], [-90.075388, 29.961483], [-90.076114, 29.960666], [-90.076793, 29.959894], [-90.077534, 29.959055], [-90.07768, 29.958892], [-90.078247, 29.958284], [-90.078476, 29.958057], [-90.079205, 29.957207], [-90.079548, 29.956825], [-90.079625, 29.956739], [-90.080567, 29.955656], [-90.081547, 29.95458], [-90.082433, 29.953645], [-90.082501, 29.953577], [-90.082676, 29.953406], [-90.083461, 29.952494], [-90.083909, 29.951977], [-90.084365, 29.95146], [-90.084475, 29.951312], [-90.084889, 29.950798], [-90.085041, 29.950613], [-90.085107, 29.950529], [-90.085202, 29.950452], [-90.085264, 29.950592], [-90.085324, 29.950686], [-90.085365, 29.950751], [-90.085428, 29.950872], [-90.085539, 29.95107], [-90.085672, 29.951324], [-90.085742, 29.951457], [-90.085871, 29.951703], [-90.085995, 29.951889], [-90.086118, 29.952049], [-90.086365, 29.952286], [-90.086793, 29.952619], [-90.086819, 29.952636], [-90.087359, 29.952933], [-90.087645, 29.953092], [-90.087893, 29.953344], [-90.089313, 29.954342], [-90.090113, 29.954932], [-90.090918, 29.955539], [-90.091802, 29.956118], [-90.0921, 29.956334], [-90.09221, 29.95642], [-90.092335, 29.956508], [-90.094055, 29.957773], [-90.094117, 29.95781], [-90.094018, 29.957934], [-90.093849, 29.958125], [-90.093737, 29.958246], [-90.093699, 29.958283], [-90.093618, 29.958365], [-90.093509, 29.958476], [-90.093101, 29.95887], [-90.092498, 29.959571], [-90.091526, 29.960649], [-90.091267, 29.960944], [-90.090905, 29.961357], [-90.090581, 29.961727], [-90.090506, 29.961816], [-90.090368, 29.961983], [-90.090193, 29.962178], [-90.090058, 29.962329], [-90.089627, 29.962811], [-90.089555, 29.962894], [-90.08908, 29.963455], [-90.088816, 29.963766], [-90.088497, 29.964127], [-90.088093, 29.964583], [-90.087874, 29.964838], [-90.087359, 29.965437], [-90.087231, 29.965586], [-90.086471, 29.966454], [-90.085788, 29.967233], [-90.085622, 29.967411], [-90.085041, 29.968035], [-90.084569, 29.968558], [-90.084449, 29.968699], [-90.083113, 29.967839], [-90.082017, 29.967096], [-90.081147, 29.966499], [-90.080259, 29.965911], [-90.079471, 29.965388], [-90.079259, 29.965246], [-90.078514, 29.964719], [-90.077634, 29.964145], [-90.076781, 29.963531], [-90.07588, 29.962937], [-90.075102, 29.962424], [-90.074971, 29.962343], [-90.074837, 29.96226], [-90.074735, 29.962198]]]]
    },
    "properties": {
      "neighbourhood": "Tulane - Gravier",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.056979, 29.968709], [-90.058133, 29.968609], [-90.059263, 29.968383], [-90.060388, 29.968303], [-90.060733, 29.968285], [-90.06092, 29.968245], [-90.061074, 29.9682], [-90.061321, 29.968115], [-90.061523, 29.968036], [-90.061712, 29.967946], [-90.061898, 29.967814], [-90.062154, 29.967596], [-90.062306, 29.967443], [-90.062412, 29.96732], [-90.062579, 29.967143], [-90.062967, 29.966719], [-90.063597, 29.966021], [-90.064512, 29.966608], [-90.065306, 29.967195], [-90.065836, 29.967577], [-90.066859, 29.968259], [-90.067625, 29.968807], [-90.068365, 29.969334], [-90.068458, 29.9694], [-90.068601, 29.9695], [-90.068714, 29.969575], [-90.069482, 29.970097], [-90.070368, 29.970683], [-90.071235, 29.97127], [-90.072089, 29.971881], [-90.072972, 29.972507], [-90.073042, 29.972546], [-90.073121, 29.972611], [-90.073188, 29.972675], [-90.073244, 29.972731], [-90.073504, 29.972874], [-90.07364, 29.972943], [-90.07375, 29.973002], [-90.073845, 29.973062], [-90.073951, 29.973092], [-90.074041, 29.973123], [-90.074174, 29.973181], [-90.074798, 29.973585], [-90.075631, 29.974251], [-90.076821, 29.975085], [-90.078176, 29.975992], [-90.077695, 29.976545], [-90.076987, 29.977325], [-90.076684, 29.977666], [-90.075971, 29.978463], [-90.075259, 29.97926], [-90.074546, 29.980065], [-90.073838, 29.980849], [-90.073112, 29.981673], [-90.072394, 29.982457], [-90.071735, 29.98321], [-90.071651, 29.983305], [-90.071022, 29.984011], [-90.070085, 29.985068], [-90.069101, 29.98615], [-90.069023, 29.986213], [-90.068147, 29.987191], [-90.067964, 29.987395], [-90.067937, 29.98721], [-90.067741, 29.987226], [-90.066554, 29.987323], [-90.065404, 29.987394], [-90.065322, 29.986373], [-90.064154, 29.986446], [-90.062988, 29.986503], [-90.062902, 29.985504], [-90.061783, 29.985569], [-90.060651, 29.985637], [-90.059557, 29.985706], [-90.059494, 29.985686], [-90.059431, 29.984694], [-90.058096, 29.984763], [-90.058054, 29.983756], [-90.058059, 29.983397], [-90.058073, 29.983196], [-90.058107, 29.982732], [-90.058143, 29.982283], [-90.058127, 29.982141], [-90.058123, 29.981986], [-90.058166, 29.981008], [-90.058167, 29.980672], [-90.05815, 29.980432], [-90.05811, 29.980292], [-90.058068, 29.980059], [-90.058019, 29.979783], [-90.057981, 29.979678], [-90.057955, 29.979599], [-90.057874, 29.979354], [-90.057839, 29.979215], [-90.057716, 29.978672], [-90.05765, 29.977661], [-90.057581, 29.976645], [-90.057499, 29.975638], [-90.057437, 29.974615], [-90.057345, 29.973606], [-90.057327, 29.973277], [-90.057279, 29.972594], [-90.057202, 29.9717], [-90.057192, 29.971584], [-90.05712, 29.970552], [-90.057034, 29.969545], [-90.056979, 29.968709]]]]
    },
    "properties": {
      "neighbourhood": "Seventh Ward",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.063597, 29.966021], [-90.063701, 29.965906], [-90.064196, 29.965355], [-90.064875, 29.964566], [-90.065581, 29.9638], [-90.066284, 29.963005], [-90.067012, 29.96219], [-90.067712, 29.961403], [-90.068103, 29.960969], [-90.06849, 29.96053], [-90.069211, 29.959718], [-90.069921, 29.958941], [-90.070391, 29.959272], [-90.070649, 29.959424], [-90.071122, 29.959751], [-90.071657, 29.960118], [-90.072423, 29.960641], [-90.073065, 29.961084], [-90.073191, 29.961172], [-90.07399, 29.961685], [-90.07435, 29.961933], [-90.074735, 29.962198], [-90.074837, 29.96226], [-90.074971, 29.962343], [-90.075102, 29.962424], [-90.07588, 29.962937], [-90.076781, 29.963531], [-90.077634, 29.964145], [-90.078514, 29.964719], [-90.079259, 29.965246], [-90.079471, 29.965388], [-90.080259, 29.965911], [-90.081147, 29.966499], [-90.082017, 29.967096], [-90.083113, 29.967839], [-90.084449, 29.968699], [-90.084296, 29.968889], [-90.084115, 29.969167], [-90.083817, 29.969512], [-90.083134, 29.9703], [-90.08279, 29.970686], [-90.08272, 29.970765], [-90.082273, 29.971282], [-90.081547, 29.972115], [-90.080793, 29.973004], [-90.080086, 29.973811], [-90.080037, 29.973867], [-90.079811, 29.974128], [-90.079412, 29.974567], [-90.078941, 29.975115], [-90.078676, 29.975416], [-90.078176, 29.975992], [-90.076821, 29.975085], [-90.075631, 29.974251], [-90.074798, 29.973585], [-90.074174, 29.973181], [-90.074041, 29.973123], [-90.073951, 29.973092], [-90.073845, 29.973062], [-90.07375, 29.973002], [-90.07364, 29.972943], [-90.073504, 29.972874], [-90.073244, 29.972731], [-90.073188, 29.972675], [-90.073121, 29.972611], [-90.073042, 29.972546], [-90.072972, 29.972507], [-90.072089, 29.971881], [-90.071235, 29.97127], [-90.070368, 29.970683], [-90.069482, 29.970097], [-90.068714, 29.969575], [-90.068601, 29.9695], [-90.068458, 29.9694], [-90.068365, 29.969334], [-90.067625, 29.968807], [-90.066859, 29.968259], [-90.065836, 29.967577], [-90.065306, 29.967195], [-90.064512, 29.966608], [-90.063597, 29.966021]]]]
    },
    "properties": {
      "neighbourhood": "Treme - Lafitte",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.060463, 30.012535], [-90.06045, 30.012366], [-90.060371, 30.011338], [-90.060287, 30.010309], [-90.060267, 30.009924], [-90.060214, 30.009295], [-90.060141, 30.008251], [-90.061309, 30.008189], [-90.062436, 30.008129], [-90.063572, 30.00807], [-90.064589, 30.008006], [-90.064794, 30.007993], [-90.065858, 30.007912], [-90.067033, 30.007832], [-90.068576, 30.007726], [-90.069399, 30.00767], [-90.0697, 30.00765], [-90.070074, 30.011862], [-90.070463, 30.016257], [-90.070512, 30.0173], [-90.070661, 30.019084], [-90.070681, 30.019589], [-90.070727, 30.020046], [-90.070751, 30.020435], [-90.07079, 30.02092], [-90.070803, 30.021168], [-90.070799, 30.021408], [-90.070849, 30.021796], [-90.070892, 30.022194], [-90.070954, 30.02316], [-90.070968, 30.023267], [-90.07098, 30.023359], [-90.070541, 30.023452], [-90.070284, 30.023506], [-90.069639, 30.023616], [-90.068616, 30.023713], [-90.067783, 30.023762], [-90.066942, 30.023809], [-90.06607, 30.02386], [-90.065854, 30.023879], [-90.065765, 30.023887], [-90.065582, 30.023914], [-90.065319, 30.023964], [-90.065177, 30.023999], [-90.064836, 30.024115], [-90.064501, 30.024255], [-90.064451, 30.024276], [-90.064088, 30.024471], [-90.063858, 30.024598], [-90.063686, 30.024694], [-90.063526, 30.024772], [-90.063225, 30.024884], [-90.062904, 30.024992], [-90.062707, 30.025051], [-90.062496, 30.025101], [-90.062376, 30.02513], [-90.062172, 30.025167], [-90.061951, 30.025199], [-90.061516, 30.025237], [-90.06151, 30.025032], [-90.061486, 30.024145], [-90.061395, 30.023136], [-90.06131, 30.022096], [-90.061294, 30.021912], [-90.061209, 30.020917], [-90.061122, 30.019878], [-90.061076, 30.019329], [-90.061047, 30.018871], [-90.060976, 30.017853], [-90.060882, 30.016792], [-90.060869, 30.016634], [-90.060783, 30.015593], [-90.060698, 30.014575], [-90.060615, 30.013562], [-90.060605, 30.013453], [-90.060593, 30.013384], [-90.060565, 30.013261], [-90.060523, 30.013049], [-90.060501, 30.012882], [-90.060463, 30.012535]]]]
    },
    "properties": {
      "neighbourhood": "St.  Anthony",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.07336, 29.993029], [-90.074543, 29.992943], [-90.075699, 29.992878], [-90.076108, 29.992854], [-90.07626, 29.992855], [-90.076409, 29.992868], [-90.076572, 29.992905], [-90.076762, 29.992968], [-90.07688, 29.99306], [-90.077028, 29.993071], [-90.077232, 29.993079], [-90.077428, 29.993087], [-90.077311, 29.992895], [-90.07722, 29.992745], [-90.077146, 29.992622], [-90.076898, 29.99215], [-90.077174, 29.992244], [-90.077416, 29.992322], [-90.077738, 29.992402], [-90.077938, 29.992443], [-90.078103, 29.992458], [-90.07827, 29.99247], [-90.078536, 29.992472], [-90.080017, 29.992427], [-90.082285, 29.992367], [-90.082615, 29.992371], [-90.082985, 29.992389], [-90.083542, 29.992441], [-90.084499, 29.992526], [-90.086088, 29.992665], [-90.086197, 29.992675], [-90.086291, 29.992683], [-90.086281, 29.992747], [-90.086235, 29.992862], [-90.086168, 29.992979], [-90.086148, 29.993054], [-90.086121, 29.993121], [-90.086094, 29.993351], [-90.085904, 29.993863], [-90.085869, 29.99457], [-90.085633, 29.99535], [-90.085331, 29.995925], [-90.084916, 29.99659], [-90.084922, 29.996614], [-90.085071, 29.997223], [-90.085352, 29.998174], [-90.085379, 29.998677], [-90.08538, 29.998815], [-90.085378, 29.999088], [-90.085375, 29.99932], [-90.085375, 29.999383], [-90.085375, 29.999445], [-90.085021, 29.999468], [-90.084416, 29.999506], [-90.083248, 29.99959], [-90.082087, 29.99965], [-90.081262, 29.999706], [-90.081001, 29.999696], [-90.08092, 29.999693], [-90.079752, 29.999753], [-90.078591, 29.999829], [-90.077428, 29.9999], [-90.07625, 29.999954], [-90.075102, 30.000032], [-90.07393, 30.000096], [-90.073884, 29.999664], [-90.073843, 29.999078], [-90.073752, 29.998072], [-90.073739, 29.997911], [-90.073672, 29.997053], [-90.073594, 29.996043], [-90.073513, 29.995031], [-90.073437, 29.994028], [-90.07336, 29.993029]]]]
    },
    "properties": {
      "neighbourhood": "St. Bernard Area",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.031367, 29.975679], [-90.030449, 29.975497], [-90.029455, 29.975269], [-90.029763, 29.974235], [-90.029931, 29.973737], [-90.030117, 29.973184], [-90.030429, 29.97214], [-90.030724, 29.971108], [-90.03105, 29.970068], [-90.031342, 29.969021], [-90.03166, 29.967997], [-90.031989, 29.966952], [-90.032299, 29.965906], [-90.032525, 29.96512], [-90.032573, 29.964962], [-90.032935, 29.963765], [-90.033229, 29.962789], [-90.03421, 29.963009], [-90.035095, 29.963217], [-90.036063, 29.963427], [-90.037031, 29.963647], [-90.037917, 29.963843], [-90.038712, 29.964029], [-90.039466, 29.964198], [-90.040264, 29.964377], [-90.04115, 29.964586], [-90.042264, 29.964824], [-90.043126, 29.96503], [-90.044874, 29.965429], [-90.044572, 29.966403], [-90.044227, 29.967602], [-90.044182, 29.967756], [-90.045029, 29.96796], [-90.045951, 29.968172], [-90.047023, 29.96841], [-90.047253, 29.96846], [-90.048222, 29.968672], [-90.049154, 29.968891], [-90.04968, 29.969012], [-90.050083, 29.969104], [-90.050157, 29.969114], [-90.050236, 29.969118], [-90.05033, 29.96912], [-90.050082, 29.969934], [-90.049774, 29.970995], [-90.049443, 29.972026], [-90.049135, 29.972987], [-90.048825, 29.974111], [-90.048488, 29.975153], [-90.048326, 29.975636], [-90.048286, 29.975832], [-90.048274, 29.975944], [-90.048276, 29.976045], [-90.04829, 29.976173], [-90.048044, 29.976158], [-90.04812, 29.976806], [-90.047992, 29.976848], [-90.047947, 29.976917], [-90.047907, 29.97702], [-90.047858, 29.977202], [-90.047548, 29.978247], [-90.047224, 29.979271], [-90.046887, 29.980322], [-90.046581, 29.981364], [-90.046421, 29.981876], [-90.046365, 29.982061], [-90.046257, 29.982418], [-90.04593, 29.983442], [-90.045632, 29.984475], [-90.045554, 29.984459], [-90.045447, 29.984437], [-90.045372, 29.984418], [-90.044446, 29.984179], [-90.043971, 29.984002], [-90.043842, 29.984004], [-90.042886, 29.984022], [-90.042529, 29.984039], [-90.042224, 29.983741], [-90.041339, 29.983481], [-90.041645, 29.982455], [-90.041951, 29.981407], [-90.042272, 29.980378], [-90.042586, 29.979325], [-90.04289, 29.978315], [-90.041956, 29.978102], [-90.041124, 29.977898], [-90.039363, 29.977494], [-90.03849, 29.977302], [-90.037437, 29.977062], [-90.036551, 29.976857], [-90.035749, 29.976683], [-90.034996, 29.976521], [-90.034185, 29.976327], [-90.033302, 29.976133], [-90.032317, 29.975924], [-90.031367, 29.975679]]]]
    },
    "properties": {
      "neighbourhood": "St. Claude",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.04508, 29.986286], [-90.045116, 29.986177], [-90.045233, 29.985818], [-90.045294, 29.98563], [-90.045385, 29.985338], [-90.045434, 29.985174], [-90.045482, 29.985012], [-90.045632, 29.984475], [-90.04593, 29.983442], [-90.046257, 29.982418], [-90.046365, 29.982061], [-90.046421, 29.981876], [-90.046581, 29.981364], [-90.046887, 29.980322], [-90.047224, 29.979271], [-90.047548, 29.978247], [-90.047858, 29.977202], [-90.047907, 29.97702], [-90.047947, 29.976917], [-90.047992, 29.976848], [-90.04812, 29.976806], [-90.048044, 29.976158], [-90.04829, 29.976173], [-90.048276, 29.976045], [-90.048274, 29.975944], [-90.048286, 29.975832], [-90.048326, 29.975636], [-90.048488, 29.975153], [-90.048825, 29.974111], [-90.049135, 29.972987], [-90.049443, 29.972026], [-90.049774, 29.970995], [-90.050082, 29.969934], [-90.05033, 29.96912], [-90.051008, 29.969084], [-90.052034, 29.969024], [-90.052288, 29.969009], [-90.05328, 29.968937], [-90.054389, 29.968872], [-90.055547, 29.968808], [-90.056737, 29.968725], [-90.056979, 29.968709], [-90.057034, 29.969545], [-90.05712, 29.970552], [-90.057192, 29.971584], [-90.057202, 29.9717], [-90.057279, 29.972594], [-90.057327, 29.973277], [-90.057345, 29.973606], [-90.057437, 29.974615], [-90.057499, 29.975638], [-90.057581, 29.976645], [-90.05765, 29.977661], [-90.057716, 29.978672], [-90.057839, 29.979215], [-90.057874, 29.979354], [-90.057955, 29.979599], [-90.057981, 29.979678], [-90.058019, 29.979783], [-90.058068, 29.980059], [-90.05811, 29.980292], [-90.05815, 29.980432], [-90.058167, 29.980672], [-90.058166, 29.981008], [-90.058123, 29.981986], [-90.058127, 29.982141], [-90.058143, 29.982283], [-90.058107, 29.982732], [-90.058073, 29.983196], [-90.058059, 29.983397], [-90.058054, 29.983756], [-90.058096, 29.984763], [-90.059431, 29.984694], [-90.059494, 29.985686], [-90.059557, 29.985706], [-90.060651, 29.985637], [-90.061783, 29.985569], [-90.062902, 29.985504], [-90.062988, 29.986503], [-90.064154, 29.986446], [-90.065322, 29.986373], [-90.065404, 29.987394], [-90.066554, 29.987323], [-90.067741, 29.987226], [-90.067937, 29.98721], [-90.067964, 29.987395], [-90.067989, 29.987614], [-90.068011, 29.987801], [-90.068039, 29.987918], [-90.068091, 29.987982], [-90.068177, 29.988056], [-90.068323, 29.988163], [-90.068418, 29.988193], [-90.068509, 29.988205], [-90.068641, 29.988207], [-90.068824, 29.988201], [-90.069234, 29.988184], [-90.070383, 29.988099], [-90.070476, 29.989115], [-90.071632, 29.989031], [-90.072811, 29.988977], [-90.073018, 29.988967], [-90.073237, 29.988968], [-90.073448, 29.988965], [-90.07372, 29.988949], [-90.073866, 29.990773], [-90.07407, 29.990836], [-90.074308, 29.990914], [-90.074985, 29.991158], [-90.075558, 29.991365], [-90.076451, 29.991667], [-90.076669, 29.991741], [-90.076898, 29.99215], [-90.077146, 29.992622], [-90.07722, 29.992745], [-90.077311, 29.992895], [-90.077428, 29.993087], [-90.077232, 29.993079], [-90.077028, 29.993071], [-90.07688, 29.99306], [-90.076762, 29.992968], [-90.076572, 29.992905], [-90.076409, 29.992868], [-90.07626, 29.992855], [-90.076108, 29.992854], [-90.075699, 29.992878], [-90.074543, 29.992943], [-90.07336, 29.993029], [-90.073293, 29.992015], [-90.073281, 29.991849], [-90.07326, 29.991685], [-90.073262, 29.991664], [-90.073016, 29.99158], [-90.072909, 29.991544], [-90.072783, 29.991505], [-90.072552, 29.991411], [-90.0717, 29.991074], [-90.071527, 29.991015], [-90.071415, 29.990982], [-90.071268, 29.990951], [-90.070842, 29.990881], [-90.070718, 29.990863], [-90.070398, 29.990827], [-90.070253, 29.99081], [-90.069987, 29.990801], [-90.069724, 29.990804], [-90.069547, 29.990808], [-90.069434, 29.990817], [-90.069421, 29.990589], [-90.069398, 29.990199], [-90.068229, 29.990261], [-90.067973, 29.990273], [-90.06787, 29.990278], [-90.067513, 29.990303], [-90.067274, 29.99032], [-90.066805, 29.990352], [-90.06614, 29.990392], [-90.065654, 29.990423], [-90.065197, 29.990296], [-90.064973, 29.990335], [-90.064903, 29.990402], [-90.06485, 29.990439], [-90.064801, 29.990467], [-90.064738, 29.990491], [-90.064671, 29.990503], [-90.064464, 29.990508], [-90.063435, 29.990568], [-90.063182, 29.990577], [-90.062178, 29.990624], [-90.06104, 29.990691], [-90.059921, 29.990777], [-90.05873, 29.990864], [-90.058434, 29.990877], [-90.057285, 29.990925], [-90.056166, 29.991], [-90.055039, 29.99107], [-90.054011, 29.991139], [-90.053777, 29.991148], [-90.052759, 29.991188], [-90.051635, 29.991258], [-90.050987, 29.991294], [-90.050773, 29.991303], [-90.050645, 29.991303], [-90.050227, 29.991282], [-90.049836, 29.991383], [-90.049685, 29.991358], [-90.049626, 29.991337], [-90.049563, 29.991303], [-90.049434, 29.991224], [-90.04927, 29.991119], [-90.049247, 29.991104], [-90.048294, 29.992148], [-90.04767, 29.992853], [-90.046053, 29.994663], [-90.045247, 29.995552], [-90.045246, 29.995281], [-90.045136, 29.993982], [-90.045069, 29.993185], [-90.045038, 29.992735], [-90.04499, 29.99165], [-90.044916, 29.990639], [-90.04484, 29.989621], [-90.044671, 29.987302], [-90.045025, 29.986428], [-90.04508, 29.986286]]]]
    },
    "properties": {
      "neighbourhood": "St. Roch",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.014708, 29.920941], [-90.014549, 29.920843], [-90.013278, 29.920063], [-90.013182, 29.920004], [-90.012708, 29.91968], [-90.012421, 29.919479], [-90.012173, 29.919284], [-90.012023, 29.919166], [-90.011524, 29.91872], [-90.011373, 29.918586], [-90.011249, 29.918484], [-90.010696, 29.918089], [-90.009873, 29.91758], [-90.009737, 29.91749], [-90.009545, 29.917297], [-90.009404, 29.917138], [-90.009179, 29.91694], [-90.008942, 29.916769], [-90.008711, 29.916614], [-90.008485, 29.916471], [-90.00826, 29.916342], [-90.007609, 29.915954], [-90.007323, 29.915805], [-90.007124, 29.915728], [-90.006846, 29.915634], [-90.006354, 29.915428], [-90.005596, 29.915021], [-90.005273, 29.91485], [-90.004944, 29.914676], [-90.00425, 29.914308], [-90.00416, 29.91425], [-90.003562, 29.913907], [-90.003014, 29.91358], [-90.002857, 29.913486], [-90.002061, 29.912975], [-90.001273, 29.912486], [-90.000909, 29.912243], [-89.998889, 29.910897], [-89.998162, 29.910412], [-89.997044, 29.909694], [-89.996416, 29.909325], [-89.995967, 29.909161], [-89.99568, 29.909048], [-89.99549, 29.908991], [-89.995372, 29.908955], [-89.995056, 29.908875], [-89.994406, 29.908812], [-89.993856, 29.908724], [-89.993376, 29.908647], [-89.993214, 29.908724], [-89.99253, 29.909047], [-89.992048, 29.909064], [-89.991606, 29.909047], [-89.991248, 29.909049], [-89.990889, 29.909023], [-89.990625, 29.909013], [-89.990398, 29.908996], [-89.99019, 29.908955], [-89.989949, 29.9089], [-89.989727, 29.908837], [-89.989583, 29.908785], [-89.989549, 29.908773], [-89.989328, 29.908676], [-89.989093, 29.908555], [-89.988845, 29.908412], [-89.988514, 29.908157], [-89.988359, 29.908025], [-89.988212, 29.907868], [-89.987944, 29.907587], [-89.987832, 29.907471], [-89.987235, 29.906851], [-89.986343, 29.905936], [-89.986226, 29.905816], [-89.985808, 29.905369], [-89.985286, 29.904827], [-89.98532, 29.904375], [-89.985324, 29.904317], [-89.987327, 29.904691], [-89.987702, 29.904761], [-89.989403, 29.889533], [-89.989429, 29.889301], [-90.002034, 29.897588], [-90.002329, 29.892153], [-90.007848, 29.89529], [-90.007845, 29.895424], [-90.007818, 29.896577], [-90.007967, 29.896717], [-90.008917, 29.89761], [-90.010139, 29.898761], [-90.018284, 29.906424], [-90.018314, 29.906452], [-90.0396, 29.926647], [-90.039491, 29.926858], [-90.039417, 29.927001], [-90.039284, 29.927258], [-90.039118, 29.927579], [-90.038848, 29.928199], [-90.038814, 29.928276], [-90.038688, 29.928655], [-90.038539, 29.929272], [-90.038457, 29.930012], [-90.03844, 29.930162], [-90.038407, 29.930436], [-90.038391, 29.930571], [-90.038026, 29.930551], [-90.037961, 29.930547], [-90.037912, 29.930544], [-90.03774, 29.930531], [-90.037575, 29.930509], [-90.03746, 29.930494], [-90.036253, 29.930336], [-90.035449, 29.930308], [-90.035074, 29.930282], [-90.034745, 29.930244], [-90.03424, 29.930125], [-90.033824, 29.930029], [-90.033486, 29.929928], [-90.033032, 29.929711], [-90.032465, 29.9293], [-90.032193, 29.929121], [-90.031961, 29.928985], [-90.031837, 29.928924], [-90.031589, 29.92882], [-90.031553, 29.928805], [-90.031448, 29.92876], [-90.031239, 29.928707], [-90.031083, 29.928673], [-90.030715, 29.928609], [-90.030642, 29.928586], [-90.03018, 29.928442], [-90.029206, 29.928034], [-90.029038, 29.927966], [-90.028443, 29.927724], [-90.02825, 29.927646], [-90.027669, 29.9274], [-90.027273, 29.927233], [-90.026311, 29.926825], [-90.025341, 29.926408], [-90.024372, 29.926007], [-90.023395, 29.925574], [-90.022843, 29.925353], [-90.022349, 29.925155], [-90.021937, 29.924974], [-90.021569, 29.924813], [-90.021203, 29.924664], [-90.0209, 29.924534], [-90.020781, 29.924479], [-90.020704, 29.924439], [-90.020553, 29.924361], [-90.02036, 29.924252], [-90.02027, 29.924197], [-90.019975, 29.924036], [-90.019217, 29.923622], [-90.019069, 29.923537], [-90.018927, 29.923449], [-90.018834, 29.923389], [-90.018757, 29.923329], [-90.018663, 29.923251], [-90.018551, 29.923153], [-90.018425, 29.923023], [-90.018004, 29.922531], [-90.01788, 29.922411], [-90.017828, 29.922371], [-90.017772, 29.922343], [-90.017717, 29.92232], [-90.017666, 29.922307], [-90.017581, 29.922294], [-90.017396, 29.922285], [-90.017252, 29.922282], [-90.016954, 29.922277], [-90.016916, 29.922272], [-90.016884, 29.922265], [-90.016823, 29.922246], [-90.016687, 29.922196], [-90.015435, 29.921411], [-90.015158, 29.921236], [-90.015086, 29.92119], [-90.014708, 29.920941]]]]
    },
    "properties": {
      "neighbourhood": "Tall Timbers - Brechtel",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.087727, 29.92343], [-90.088812, 29.923019], [-90.088937, 29.922968], [-90.090018, 29.922575], [-90.090718, 29.922371], [-90.091638, 29.922091], [-90.092539, 29.921831], [-90.093233, 29.921651], [-90.094093, 29.921458], [-90.094551, 29.921363], [-90.094957, 29.9213], [-90.095734, 29.921227], [-90.096844, 29.921149], [-90.097955, 29.921068], [-90.099089, 29.920992], [-90.100175, 29.920903], [-90.101351, 29.920807], [-90.101454, 29.921795], [-90.101555, 29.922863], [-90.101647, 29.923653], [-90.101703, 29.924295], [-90.101763, 29.925039], [-90.101854, 29.925729], [-90.101919, 29.9264], [-90.10077, 29.926489], [-90.099643, 29.926578], [-90.098883, 29.926638], [-90.098562, 29.926674], [-90.097415, 29.926742], [-90.096352, 29.926831], [-90.09553, 29.926918], [-90.09469, 29.927076], [-90.094541, 29.927117], [-90.093633, 29.927384], [-90.092739, 29.92768], [-90.092524, 29.927759], [-90.091442, 29.928155], [-90.09131, 29.9282], [-90.090182, 29.928632], [-90.089551, 29.927345], [-90.088937, 29.926108], [-90.088611, 29.925336], [-90.088196, 29.924388], [-90.087727, 29.92343]]]]
    },
    "properties": {
      "neighbourhood": "Touro",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.052331, 29.958381], [-90.054472, 29.958003], [-90.056972, 29.956603], [-90.058672, 29.953903], [-90.058641, 29.953149], [-90.058572, 29.951503], [-90.058572, 29.949979], [-90.062556, 29.94986], [-90.063772, 29.949803], [-90.064079, 29.950055], [-90.064462, 29.950318], [-90.064969, 29.950637], [-90.065674, 29.951072], [-90.065962, 29.951255], [-90.067002, 29.951924], [-90.066265, 29.952768], [-90.066651, 29.953035], [-90.067295, 29.953454], [-90.067708, 29.953736], [-90.068174, 29.954052], [-90.069083, 29.954678], [-90.069969, 29.95529], [-90.070933, 29.955922], [-90.071862, 29.956559], [-90.071969, 29.956634], [-90.072448, 29.956945], [-90.07268, 29.957116], [-90.072025, 29.957904], [-90.0713, 29.958708], [-90.070649, 29.959424], [-90.070391, 29.959272], [-90.069921, 29.958941], [-90.069211, 29.959718], [-90.06849, 29.96053], [-90.068103, 29.960969], [-90.067712, 29.961403], [-90.067012, 29.96219], [-90.066284, 29.963005], [-90.065581, 29.9638], [-90.064875, 29.964566], [-90.064196, 29.965355], [-90.063701, 29.965906], [-90.063597, 29.966021], [-90.063486, 29.965933], [-90.062571, 29.965316], [-90.061655, 29.964679], [-90.060812, 29.964051], [-90.059862, 29.963434], [-90.058965, 29.962816], [-90.05795, 29.962109], [-90.057586, 29.961873], [-90.056853, 29.961354], [-90.056808, 29.961273], [-90.056692, 29.961068], [-90.056258, 29.960384], [-90.052331, 29.958381]]]]
    },
    "properties": {
      "neighbourhood": "French Quarter",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-89.968954, 30.026744], [-89.96948, 30.026631], [-89.970559, 30.026416], [-89.971113, 30.026318], [-89.972168, 30.0261], [-89.972867, 30.02594], [-89.973437, 30.025816], [-89.974227, 30.025654], [-89.975213, 30.025461], [-89.975882, 30.025331], [-89.976517, 30.025208], [-89.97715, 30.025083], [-89.977934, 30.024931], [-89.978425, 30.024834], [-89.978731, 30.024799], [-89.979182, 30.024765], [-89.979771, 30.024726], [-89.980097, 30.024704], [-89.981034, 30.024657], [-89.981412, 30.024655], [-89.981806, 30.024649], [-89.982234, 30.024626], [-89.98297, 30.024601], [-89.983771, 30.024559], [-89.9849, 30.024494], [-89.985599, 30.024422], [-89.986078, 30.024346], [-89.987008, 30.024237], [-89.987188, 30.024213], [-89.988675, 30.024019], [-89.988931, 30.023985], [-89.98947, 30.023901], [-89.990912, 30.023727], [-89.992181, 30.023573], [-89.99277, 30.023501], [-89.994135, 30.02331], [-89.995295, 30.023086], [-89.995507, 30.023008], [-89.995787, 30.022926], [-89.996641, 30.022661], [-89.997434, 30.022459], [-89.99818, 30.022246], [-89.999672, 30.021818], [-89.9999, 30.021785], [-90.000432, 30.021733], [-90.001222, 30.021664], [-90.001846, 30.021595], [-90.002616, 30.021534], [-90.003465, 30.021441], [-90.004328, 30.021362], [-90.004877, 30.021298], [-90.005524, 30.021231], [-90.006395, 30.02115], [-90.009824, 30.020824], [-90.010735, 30.020746], [-90.011665, 30.020886], [-90.012142, 30.02062], [-90.012933, 30.020569], [-90.013697, 30.020359], [-90.014005, 30.020274], [-90.014036, 30.020503], [-90.014125, 30.02142], [-90.014163, 30.021723], [-90.014198, 30.022128], [-90.014206, 30.022313], [-90.014197, 30.022656], [-90.014154, 30.022967], [-90.014052, 30.0234], [-90.01398, 30.023612], [-90.013683, 30.024262], [-90.013367, 30.024642], [-90.013159, 30.024883], [-90.012846, 30.02517], [-90.012531, 30.025429], [-90.012134, 30.025706], [-90.011767, 30.025883], [-90.011451, 30.026014], [-90.01109, 30.026142], [-90.010787, 30.026227], [-90.010533, 30.026287], [-90.009954, 30.026423], [-90.009191, 30.026505], [-90.008544, 30.026614], [-90.008002, 30.02671], [-90.007749, 30.026746], [-90.007421, 30.026803], [-90.006457, 30.026969], [-90.003914, 30.02742], [-90.002931, 30.027583], [-90.001313, 30.02789], [-90.000016, 30.028112], [-89.999247, 30.02826], [-89.99876, 30.028367], [-89.998086, 30.02853], [-89.997909, 30.028579], [-89.997476, 30.028699], [-89.996522, 30.028996], [-89.996071, 30.029127], [-89.995795, 30.029225], [-89.995308, 30.029402], [-89.993797, 30.03], [-89.993603, 30.030079], [-89.989984, 30.031558], [-89.989588, 30.031717], [-89.988941, 30.031951], [-89.987159, 30.032684], [-89.985377, 30.033441], [-89.983474, 30.034186], [-89.982478, 30.034586], [-89.981518, 30.035014], [-89.981177, 30.035151], [-89.981008, 30.035219], [-89.97952, 30.035824], [-89.976311, 30.037124], [-89.976182, 30.036942], [-89.97603, 30.036729], [-89.975913, 30.036563], [-89.97568, 30.036249], [-89.975385, 30.035865], [-89.97534, 30.035796], [-89.975122, 30.035482], [-89.975081, 30.035424], [-89.974773, 30.034997], [-89.974557, 30.034711], [-89.974448, 30.034567], [-89.973958, 30.033891], [-89.973705, 30.033542], [-89.973178, 30.032862], [-89.973001, 30.032623], [-89.972375, 30.031777], [-89.972055, 30.031343], [-89.971977, 30.03124], [-89.97156, 30.03069], [-89.971549, 30.030674], [-89.971346, 30.03038], [-89.971144, 30.030086], [-89.970986, 30.029858], [-89.970406, 30.02908], [-89.970228, 30.028817], [-89.969998, 30.028477], [-89.969499, 30.02773], [-89.969186, 30.02729], [-89.969096, 30.027139], [-89.968994, 30.026947], [-89.968954, 30.026744]]]]
    },
    "properties": {
      "neighbourhood": "West Lake Forest",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.115029, 29.920924], [-90.113766, 29.920716], [-90.112697, 29.920519], [-90.112055, 29.920451], [-90.110999, 29.920445], [-90.11002, 29.92036], [-90.109083, 29.920323], [-90.107997, 29.920291], [-90.1072, 29.920334], [-90.106092, 29.920394], [-90.104988, 29.920515], [-90.103826, 29.920605], [-90.102711, 29.920701], [-90.101595, 29.920782], [-90.101351, 29.920807], [-90.101269, 29.919783], [-90.101151, 29.918785], [-90.101074, 29.917956], [-90.100959, 29.917147], [-90.100865, 29.916219], [-90.101104, 29.916175], [-90.101086, 29.915941], [-90.10108, 29.915858], [-90.101084, 29.915761], [-90.101094, 29.915624], [-90.101097, 29.915577], [-90.101074, 29.915468], [-90.10101, 29.915401], [-90.100913, 29.915354], [-90.100801, 29.915312], [-90.100737, 29.915238], [-90.100704, 29.9151], [-90.100676, 29.914617], [-90.100621, 29.914023], [-90.100618, 29.913909], [-90.100598, 29.913146], [-90.100711, 29.912757], [-90.100732, 29.912683], [-90.100873, 29.910005], [-90.100887, 29.909742], [-90.101407, 29.909549], [-90.104263, 29.908771], [-90.107074, 29.908496], [-90.110574, 29.908461], [-90.113843, 29.908492], [-90.117454, 29.908793], [-90.121867, 29.909605], [-90.122014, 29.909635], [-90.125627, 29.910376], [-90.129, 29.911312], [-90.132176, 29.912681], [-90.132534, 29.91289], [-90.132474, 29.913005], [-90.131125, 29.915576], [-90.130658, 29.916484], [-90.13019, 29.917391], [-90.129955, 29.917666], [-90.129765, 29.917873], [-90.129697, 29.918015], [-90.129685, 29.918116], [-90.129726, 29.918261], [-90.12983, 29.918531], [-90.129859, 29.918778], [-90.129836, 29.918962], [-90.129776, 29.919147], [-90.129692, 29.919257], [-90.129579, 29.919355], [-90.129251, 29.919591], [-90.129152, 29.919675], [-90.129107, 29.919737], [-90.128267, 29.919376], [-90.127773, 29.919164], [-90.12769, 29.919128], [-90.126516, 29.91864], [-90.125353, 29.918201], [-90.124958, 29.919091], [-90.1245, 29.920061], [-90.124247, 29.920647], [-90.124087, 29.921044], [-90.123702, 29.921883], [-90.123334, 29.922762], [-90.121523, 29.922143], [-90.121311, 29.922088], [-90.119901, 29.921721], [-90.118902, 29.921557], [-90.117981, 29.921364], [-90.117059, 29.921196], [-90.116028, 29.921077], [-90.115029, 29.920924]]]]
    },
    "properties": {
      "neighbourhood": "West Riverside",
      "neighbourhood_group": null
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-89.880088, 30.148512], [-89.880061, 30.148478], [-89.880666, 30.147726], [-89.880127, 30.147104], [-89.876816, 30.140812], [-89.876545, 30.140308], [-89.874559, 30.136283], [-89.873108, 30.133631], [-89.872937, 30.133319], [-89.872802, 30.133033], [-89.870659, 30.128502], [-89.870567, 30.128317], [-89.869997, 30.127248], [-89.86983, 30.126855], [-89.869515, 30.126362], [-89.868861, 30.125226], [-89.868216, 30.124113], [-89.867785, 30.124028], [-89.866764, 30.123974], [-89.866474, 30.123971], [-89.866306, 30.123981], [-89.866185, 30.12398], [-89.866086, 30.123982], [-89.866009, 30.12398], [-89.865892, 30.123979], [-89.865598, 30.122848], [-89.864383, 30.117264], [-89.86414, 30.116094], [-89.863948, 30.115088], [-89.863874, 30.1147], [-89.863848, 30.114561], [-89.86384, 30.114521], [-89.86348, 30.114157], [-89.863239, 30.111803], [-89.862173, 30.10613], [-89.861709, 30.103644], [-89.861597, 30.103261], [-89.860853, 30.099071], [-89.860459, 30.095977], [-89.856924, 30.077833], [-89.856875, 30.07741], [-89.856743, 30.076633], [-89.857159, 30.076592], [-89.857587, 30.076532], [-89.858084, 30.076436], [-89.858507, 30.076328], [-89.858894, 30.076205], [-89.859306, 30.076061], [-89.859635, 30.075929], [-89.859985, 30.075766], [-89.860357, 30.075575], [-89.860876, 30.075261], [-89.861203, 30.075034], [-89.861542, 30.074764], [-89.861739, 30.074592], [-89.861997, 30.074335], [-89.862361, 30.073979], [-89.862628, 30.07369], [-89.862836, 30.073418], [-89.86316, 30.072942], [-89.863408, 30.0725], [-89.863542, 30.072218], [-89.863717, 30.071788], [-89.863836, 30.071442], [-89.863893, 30.071213], [-89.863948, 30.070926], [-89.863983, 30.070638], [-89.864026, 30.070106], [-89.864094, 30.069341], [-89.864155, 30.068572], [-89.864224, 30.06781], [-89.864296, 30.067056], [-89.864359, 30.066535], [-89.864428, 30.066105], [-89.864577, 30.065478], [-89.864708, 30.065], [-89.864942, 30.064452], [-89.865093, 30.064107], [-89.865283, 30.063718], [-89.86544, 30.06342], [-89.865693, 30.062971], [-89.865873, 30.062684], [-89.866162, 30.06227], [-89.86635, 30.062022], [-89.866759, 30.061519], [-89.866989, 30.061263], [-89.867421, 30.060826], [-89.867722, 30.060548], [-89.868112, 30.060219], [-89.868953, 30.059572], [-89.869781, 30.05895], [-89.870603, 30.058331], [-89.87141, 30.057719], [-89.872198, 30.057133], [-89.87315, 30.056453], [-89.87395, 30.055942], [-89.874532, 30.05558], [-89.878185, 30.053401], [-89.879157, 30.052823], [-89.87974, 30.052486], [-89.880017, 30.052326], [-89.880167, 30.052239], [-89.880278, 30.052175], [-89.88039, 30.052108], [-89.880455, 30.05207], [-89.88362, 30.050187], [-89.886705, 30.048352], [-89.88718, 30.048072], [-89.887803, 30.047699], [-89.8879, 30.04764], [-89.888835, 30.047089], [-89.889617, 30.046623], [-89.890641, 30.045961], [-89.891825, 30.045094], [-89.893203, 30.044087], [-89.893958, 30.043537], [-89.894919, 30.042837], [-89.896004, 30.042069], [-89.896556, 30.041708], [-89.897306, 30.041284], [-89.897389, 30.041279], [-89.897437, 30.041266], [-89.897504, 30.041241], [-89.897846, 30.041062], [-89.898436, 30.040781], [-89.899084, 30.040502], [-89.899971, 30.040149], [-89.900859, 30.039844], [-89.902376, 30.039366], [-89.905454, 30.038384], [-89.906234, 30.038137], [-89.907092, 30.037859], [-89.907906, 30.037592], [-89.908402, 30.037447], [-89.908483, 30.037423], [-89.909794, 30.037004], [-89.910661, 30.036727], [-89.911423, 30.036483], [-89.911524, 30.03645], [-89.911606, 30.036424], [-89.911857, 30.036342], [-89.912036, 30.036283], [-89.912502, 30.03613], [-89.912916, 30.035994], [-89.913125, 30.035925], [-89.913202, 30.0359], [-89.913436, 30.035823], [-89.914084, 30.03561], [-89.914293, 30.035545], [-89.914672, 30.035426], [-89.914889, 30.035358], [-89.915581, 30.035141], [-89.917293, 30.034595], [-89.91877, 30.034121], [-89.918903, 30.034078], [-89.919263, 30.033963], [-89.919717, 30.033817], [-89.919936, 30.033747], [-89.920003, 30.033725], [-89.921036, 30.0334], [-89.921785, 30.033164], [-89.921866, 30.033138], [-89.922692, 30.032878], [-89.923151, 30.032727], [-89.924026, 30.03244], [-89.924292, 30.032353], [-89.924718, 30.032211], [-89.926136, 30.03174], [-89.926454, 30.031625], [-89.926698, 30.031537], [-89.926904, 30.031462], [-89.927325, 30.03131], [-89.927448, 30.031266], [-89.927641, 30.031196], [-89.92781, 30.031135], [-89.928902, 30.030752], [-89.92906, 30.030697], [-89.930489, 30.030196], [-89.930727, 30.030113], [-89.930837, 30.030074], [-89.9309, 30.030052], [-89.931347, 30.029895], [-89.932114, 30.029626], [-89.933446, 30.029159], [-89.933513, 30.029136], [-89.934122, 30.028923], [-89.936202, 30.028194], [-89.936315, 30.028154], [-89.93928, 30.027114], [-89.939617, 30.026996], [-89.939599, 30.028204], [-89.939591, 30.028788], [-89.939575, 30.029643], [-89.939585, 30.031121], [-89.939592, 30.032592], [-89.939593, 30.03275], [-89.939573, 30.033852], [-89.939571, 30.033981], [-89.939484, 30.036888], [-89.939484, 30.037588], [-89.939484, 30.039072], [-89.939506, 30.040564], [-89.939458, 30.042001], [-89.939378, 30.042996], [-89.939341, 30.043264], [-89.939232, 30.044003], [-89.939065, 30.044973], [-89.938942, 30.045778], [-89.938874, 30.046247], [-89.938817, 30.046716], [-89.938757, 30.047312], [-89.938734, 30.047657], [-89.938725, 30.047789], [-89.938729, 30.048306], [-89.938867, 30.050068], [-89.93901, 30.05146], [-89.939092, 30.052131], [-89.93914, 30.052607], [-89.939162, 30.053044], [-89.93917, 30.053491], [-89.939186, 30.053982], [-89.939151, 30.055071], [-89.939097, 30.055491], [-89.939091, 30.055766], [-89.939094, 30.056016], [-89.939127, 30.056348], [-89.939291, 30.058161], [-89.939446, 30.059545], [-89.939465, 30.059782], [-89.939486, 30.060051], [-89.939615, 30.061346], [-89.939794, 30.063115], [-89.939888, 30.06418], [-89.94, 30.065217], [-89.940069, 30.065824], [-89.940132, 30.066454], [-89.940191, 30.067096], [-89.940236, 30.067531], [-89.940263, 30.067805], [-89.940298, 30.068255], [-89.940454, 30.069858], [-89.940532, 30.070938], [-89.940568, 30.071327], [-89.940581, 30.07145], [-89.940607, 30.071679], [-89.940655, 30.071938], [-89.940696, 30.072087], [-89.940802, 30.072334], [-89.94097, 30.072633], [-89.941128, 30.072848], [-89.941292, 30.073034], [-89.94159, 30.073325], [-89.941826, 30.073534], [-89.942427, 30.074017], [-89.942814, 30.074315], [-89.943676, 30.075029], [-89.943964, 30.075271], [-89.944171, 30.075454], [-89.944437, 30.075235], [-89.944735, 30.07547], [-89.944957, 30.075665], [-89.944669, 30.0759], [-89.944678, 30.075913], [-89.944675, 30.075916], [-89.944659, 30.075926], [-89.944401, 30.076086], [-89.94423, 30.076187], [-89.944204, 30.076195], [-89.943988, 30.076265], [-89.943952, 30.076276], [-89.943712, 30.07641], [-89.943458, 30.076613], [-89.943184, 30.076835], [-89.942916, 30.077218], [-89.942881, 30.077268], [-89.942865, 30.077296], [-89.942734, 30.07754], [-89.942571, 30.07773], [-89.942108, 30.078081], [-89.941595, 30.078516], [-89.941173, 30.078885], [-89.940968, 30.079108], [-89.940599, 30.079393], [-89.940334, 30.079672], [-89.940231, 30.079833], [-89.939958, 30.079985], [-89.939939, 30.079986], [-89.939826, 30.079992], [-89.939754, 30.080029], [-89.93974, 30.080066], [-89.939733, 30.080085], [-89.939697, 30.080209], [-89.93969, 30.080233], [-89.939684, 30.080253], [-89.93946, 30.08055], [-89.939189, 30.080695], [-89.939016, 30.080865], [-89.938837, 30.080999], [-89.938548, 30.081216], [-89.938417, 30.08133], [-89.938097, 30.081578], [-89.937714, 30.081888], [-89.937533, 30.082066], [-89.937153, 30.082371], [-89.936912, 30.082546], [-89.936742, 30.082669], [-89.9364, 30.082934], [-89.93625, 30.083033], [-89.935876, 30.083334], [-89.935446, 30.083715], [-89.935257, 30.083886], [-89.935123, 30.084005], [-89.934827, 30.084268], [-89.934517, 30.084563], [-89.934186, 30.084856], [-89.933765, 30.085237], [-89.933702, 30.085296], [-89.933627, 30.085367], [-89.933578, 30.085418], [-89.93355, 30.085448], [-89.933327, 30.085599], [-89.933269, 30.085657], [-89.932767, 30.086164], [-89.932712, 30.086219], [-89.932467, 30.086443], [-89.932266, 30.086628], [-89.932183, 30.086702], [-89.931756, 30.087087], [-89.931465, 30.087331], [-89.931168, 30.087626], [-89.930835, 30.087915], [-89.930395, 30.088336], [-89.930078, 30.088626], [-89.930043, 30.088658], [-89.929958, 30.088745], [-89.929797, 30.088908], [-89.929406, 30.089295], [-89.92882, 30.089844], [-89.928506, 30.090151], [-89.928348, 30.090305], [-89.927964, 30.090698], [-89.927696, 30.090965], [-89.927098, 30.091552], [-89.926742, 30.091909], [-89.926142, 30.092551], [-89.925786, 30.092915], [-89.925242, 30.093466], [-89.924998, 30.093716], [-89.924691, 30.094032], [-89.924294, 30.094449], [-89.923647, 30.095148], [-89.923259, 30.095572], [-89.922585, 30.096291], [-89.922241, 30.096667], [-89.921569, 30.097434], [-89.921269, 30.097769], [-89.920508, 30.098625], [-89.919541, 30.099735], [-89.918654, 30.100768], [-89.91774, 30.101849], [-89.916878, 30.102861], [-89.91684, 30.102906], [-89.916028, 30.103882], [-89.915318, 30.104753], [-89.914502, 30.105744], [-89.913793, 30.106647], [-89.912969, 30.107686], [-89.912339, 30.108484], [-89.911471, 30.109556], [-89.910809, 30.110382], [-89.910006, 30.111361], [-89.90916, 30.112413], [-89.90835, 30.113429], [-89.907543, 30.114436], [-89.90675, 30.115439], [-89.90597, 30.116402], [-89.905604, 30.11683], [-89.90544, 30.11707], [-89.90529, 30.117254], [-89.905064, 30.11754], [-89.90481, 30.117858], [-89.904554, 30.11817], [-89.904302, 30.11848], [-89.904039, 30.118813], [-89.903778, 30.119134], [-89.903548, 30.119433], [-89.903302, 30.119738], [-89.903046, 30.120045], [-89.902159, 30.121159], [-89.901775, 30.121612], [-89.901721, 30.121679], [-89.900183, 30.123604], [-89.898979, 30.125141], [-89.897287, 30.127249], [-89.895695, 30.129246], [-89.894505, 30.130728], [-89.894023, 30.131337], [-89.892908, 30.132719], [-89.892178, 30.133622], [-89.890966, 30.135142], [-89.889899, 30.136469], [-89.88925, 30.137252], [-89.888378, 30.138387], [-89.887516, 30.139426], [-89.886149, 30.141142], [-89.885097, 30.142453], [-89.8843, 30.143448], [-89.88423, 30.143535], [-89.883467, 30.144484], [-89.882512, 30.145665], [-89.882456, 30.145742], [-89.882288, 30.145975], [-89.882153, 30.146163], [-89.882142, 30.146178], [-89.882096, 30.146312], [-89.88209, 30.146331], [-89.882039, 30.146436], [-89.88203, 30.146454], [-89.881889, 30.146652], [-89.881425, 30.147244], [-89.880886, 30.147909], [-89.880849, 30.147945], [-89.88083, 30.147964], [-89.880756, 30.147976], [-89.880657, 30.147979], [-89.880584, 30.148031], [-89.880514, 30.148109], [-89.880451, 30.148186], [-89.880385, 30.148273], [-89.880293, 30.14839], [-89.88019, 30.148522], [-89.880168, 30.148536], [-89.880148, 30.148543], [-89.880088, 30.148512]]]]
    },
    "properties": {
      "neighbourhood": "Village De Lest",
      "neighbourhood_group": null
    }
  }]
};
},{}],"quTw":[function(require,module,exports) {
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var d3 = require('d3');

var simpleslider = require('d3-simple-slider');

var mapWidth = 640;
var mapHeight = 600;
var minNumListings = 10;
var maxNumListings = 500;
var colorPalette = ['#d3d3d3', '#e08984', '#bf809b', '#65c1cf', '#5374a6', '#776399'];

var neighborhoodsNYC = require('../data/neighbourhoods-nyc.geo.json');

var neighborhoodsSeattle = require('../data/neighbourhoods-seattle.geo.json');

var neighborhoodsAustin = require('../data/neighbourhoods-austin.geo.json');

var neighborhoodsSF = require('../data/neighbourhoods-sf.geo.json');

var neighborhoodsNOLA = require('../data/neighbourhoods-nola.geo.json');

var neighborhoodListings = d3.map();
var pricesMap = d3.map();
var active = d3.select(null);
var city = "New York"; // default

var MapVis =
/*#__PURE__*/
function () {
  function MapVis(city) {
    _classCallCheck(this, MapVis);

    var self = this;
    this.city = city;
    var listings_csv = "listings_small.csv"; // New York by default

    var calendar_csv = "calendar_nyc.csv";
    var numlistings_csv = "num_listings_ny.csv";

    if (this.city === "Seattle") {
      listings_csv = "listings_seattle.csv";
      numlistings_csv = "num_listings_seattle.csv";
      calendar_csv = "calendar_seattle.csv";
    } else if (this.city === "Austin") {
      listings_csv = "listings_small_austin.csv";
      numlistings_csv = "num_listings_austin.csv";
      calendar_csv = "calendar_austin.csv";
    } else if (this.city === "San Francisco") {
      listings_csv = "listings_small_sf.csv";
      numlistings_csv = "num_listings_sf.csv";
      calendar_csv = "calendar_sf.csv";
    } else if (this.city === "New Orleans") {
      listings_csv = "listings_small_nola.csv";
      numlistings_csv = "num_listings_nola.csv";
      calendar_csv = "calendar_nola.csv";
    }

    d3.select("#city-name").text("Map of the Airbnbs in " + this.city).style("font-weight", "bold");
    d3.csv(listings_csv).then(function (data) {
      data.forEach(function (d) {
        var point = [d.longitude, d.latitude, d.minimum_nights, d.id, d.neighbourhood, d.name, d.availability_365, d.room_type];
        var key = d.neighbourhood;

        if (neighborhoodListings.has(key)) {
          var currentListings = neighborhoodListings.get(key);
          currentListings.push(point);
          neighborhoodListings.set(key, currentListings);
        } else {
          neighborhoodListings.set(key, [point]);
        }
      });
    });
    d3.csv(calendar_csv).then(function (data) {
      data.forEach(function (d) {
        var id = d.listing_id;
        var price = d.price;
        price = price.replace("$", "");
        price = price.replace(".00 ", "");
        price = parseInt(price);

        if (pricesMap.has(id)) {
          var currentPrices = pricesMap.get(id);
          currentPrices.push(price);
          pricesMap.set(id, currentPrices);
        } else {
          pricesMap.set(id, [price]);
        }
      });
    });
    var neighborhoodCt = d3.csv(numlistings_csv).then(getNeighborhoodCounts);
    neighborhoodCt.then(function (value) {
      self.drawMap(value);
      console.log("drawing map");
    });

    function getNeighborhoodCounts(data) {
      console.log("starting mapping...");
      var neighborhoodMap = d3.map();
      data.forEach(function (d) {
        neighborhoodMap.set(d.neighborhood, d.num_listings);
      });
      minNumListings = d3.min(neighborhoodMap.values());
      maxNumListings = d3.max(neighborhoodMap.values());
      return neighborhoodMap;
    }
  }

  _createClass(MapVis, [{
    key: "drawMap",
    value: function drawMap(neighborhoodCt) {
      d3.selectAll("#map-svg > *").remove();
      var colorScale = d3.scaleQuantize().domain([minNumListings, maxNumListings]).range(d3.schemePurples[5]); //var legend = d3.legend.color().scale(colorScale);
      //d3.select("#map-svg").append("g").attr("transform", "translate(352, 60)").call(colorLegend);

      d3.select("#map-svg").append("rect").attr("class", "background").attr("width", mapWidth).attr("height", mapHeight).on("click", reset); // default is New York

      var neighborhoods = neighborhoodsNYC;
      var projection = d3.geoMercator().center([-73.94, 40.70]).scale(60000).translate([mapWidth / 2, mapHeight / 2]);

      if (this.city == "Seattle") {
        var projection = d3.geoMercator().center([-122.33, 47.61]).scale(90000).translate([mapWidth / 2, mapHeight / 2]);
        neighborhoods = neighborhoodsSeattle;
      } else if (this.city == "Austin") {
        var projection = d3.geoMercator().center([-97.7559964, 30.3071816]).scale(50000).translate([mapWidth / 2, mapHeight / 2]);
        neighborhoods = neighborhoodsAustin;
      } else if (this.city == "San Francisco") {
        var projection = d3.geoMercator().center([-122.433701, 37.767683]).scale(150000).translate([mapWidth / 2, mapHeight / 2]);
        neighborhoods = neighborhoodsSF;
      } else if (this.city == "New Orleans") {
        var projection = d3.geoMercator().center([-89.92697, 30.03979]).scale(60000).translate([mapWidth / 2, mapHeight / 2]);
        neighborhoods = neighborhoodsNOLA;
      }

      var geoPath = d3.geoPath().projection(projection);
      var currentCity = this.city;
      var g = d3.select("map-svg").append("g");
      d3.select("#map-svg").selectAll("path").data(neighborhoods.features).enter().append('path').attr("d", geoPath).attr("id", function (d) {
        return d.properties.neighbourhood; // neighborhood name
      }).attr("class", function (d) {
        return d.properties.neighbourhood_group; // borough name
      }).style("fill", function (d) {
        var numlistings = neighborhoodCt.get(this.id) == undefined ? 0 : neighborhoodCt.get(this.id);
        return colorScale(numlistings);
      }).style("stroke", "#d3d3d3") // set outline to be gray
      .on("mouseover", handleMouseOver).on("mouseout", handleMouseOut).on("click", handlePathClick); // Display the neighborhood and borough name on mouseover

      function handleMouseOver(d) {
        d3.select(this).style("fill", "#767676").style("cursor", "pointer");
      } // Reset the visual to default fill on mouseout


      function handleMouseOut(d) {
        var _this = this;

        d3.select(this).style("fill", function () {
          var numlistings = neighborhoodCt.get(_this.id) == undefined ? 0 : neighborhoodCt.get(_this.id);
          return colorScale(numlistings);
        });
      }

      function handlePathClick(d) {
        if (active.node() === this) return reset();
        d3.select("#slider-range").select("svg").data([]).exit().remove();
        d3.selectAll("button").remove();
        d3.select(this).style("outline", "none");
        active.classed("active", false);
        active = d3.select(this).classed("active", true);
        var zoom = d3.zoom().on("zoom", zoomed); // d3.select("#map-svg").selectAll("path")
        //   .on("mouseover", handleMouseOver);
        // d3.select(this).style("fill", "#D3D3D3")
        //   .on("mouseover", d3.select(this).style("fill", "#D3D3D3"));

        var bounds = geoPath.bounds(d),
            dx = bounds[1][0] - bounds[0][0],
            dy = bounds[1][1] - bounds[0][1],
            x = (bounds[0][0] + bounds[1][0]) / 2,
            y = (bounds[0][1] + bounds[1][1]) / 2,
            scale = 0.5 / Math.max(dx / mapWidth, dy / mapHeight),
            translate = [mapWidth / 2 - scale * x, mapHeight / 2 - scale * y];
        drawListingPoints(neighborhoodListings.get(this.id));
        d3.select("#map-svg").transition().duration(750).style("stroke-width", "0.5px").attr("transform", "translate(" + translate + ")scale(" + scale + ")");
        showSlider(this.id);
        showRoomTypeFilter(this.id);
        var numlistings = neighborhoodCt.get(this.id) == undefined ? 0 : neighborhoodCt.get(this.id);
        d3.select("#selection").text("Neighborhood: " + this.id);
        d3.select("#total-listings").text("Total number of listings in this neighborhood: " + numlistings);
      }

      function zoomed() {
        d3.select("#map-svg").attr("transform", d3.event.transform);
      }

      function reset() {
        active.classed("active", false);
        active = d3.select(null);
        d3.select("#map-svg").transition().duration(750).style("stroke-width", "0.5px").attr("transform", "");
        d3.select("#map-svg").selectAll("circle").data([]).exit().remove();
        d3.select("#slider-range").select("svg").data([]).exit().remove();
        d3.select("#value-range").exit().remove();
        d3.select("#listing-avail").select("svg").data([]).exit().remove();
        d3.selectAll("button").remove();
        d3.selectAll("p").text("");
        document.getElementById("price-over-year-container").style.display = "none";
      }

      function drawListingPoints(inputdata) {
        d3.select("#map-svg").selectAll("circle").remove();
        var circles = d3.select("#map-svg").selectAll("circle").data(inputdata);
        circles.enter().append("circle").attr("cx", function (d) {
          var datum = [d[0], d[1]];
          return projection(datum)[0];
        }).attr("cy", function (d) {
          var datum = [d[0], d[1]];
          return projection(datum)[1];
        }).attr("r", "0.7px").attr("fill", function (d) {
          if (currentCity === "New York") {
            if (d[3] <= 1881586) {
              return "#00ff00";
            } else {
              return "#fd5c63";
            }
          }

          return "#00ff00";
        }).style("cursor", "pointer").on("mouseover", handlePointMouseover).on("mouseout", handlePointMouseout).on("click", handlePointClick);
      }

      function handlePointMouseover(d) {
        d3.select(this).attr("stroke", "white").attr("stroke-width", "0.3px");
      }

      function handlePointMouseout(d) {
        d3.select(this).attr("stroke", "transparent");
      }

      function handlePointClick(d) {
        // remove old point data
        d3.select("#listing-avail").select("svg").data([]).exit().remove();
        d3.selectAll("p").text(""); // add new point data

        d3.select("#selection").text("Neighborhood: " + d[4]);
        d3.select("#listing-name").text("Listing name: " + d[5]);
        d3.select("#min-nights").text("Minimum nights: " + d[2]);
        d3.select(".active-point").classed("active-point", false);
        d3.select(this).classed("active-point", true);
        showAvailability(d[6]);
        displayPriceOverYear(d);
      }

      function showAvailability(avail) {
        d3.select("#listing-avail").append("p").text("Listing availability out of the year: " + avail);
        var colorScale = d3.scaleLinear().domain([0, 365]).range(["yellow", "green"]);
        var svg = d3.select("#listing-avail").append('svg').attr("height", 50).attr("width", 500).attr('transform', 'translate(70,30)');
        svg.append('rect').attr('class', 'bg-rect').attr('rx', 10).attr('ry', 10).attr('fill', 'gray').attr('height', 15).attr('width', 365).attr('x', 0);
        var progress = svg.append('rect').attr('class', 'progress-rect').attr('fill', function () {
          return colorScale(avail);
        }).attr('height', 15).attr('width', 0).attr('rx', 10).attr('ry', 10).attr('x', 0);
        progress.transition().duration(1000).attr('width', avail);
      }

      function displayPriceOverYear(d) {
        var id = d[3];
        var pricesOverMonths = pricesMap.get(id);

        if (pricesOverMonths === undefined) {
          document.getElementById("price-over-year-container").style.display = "none";
        } else {
          document.getElementById("price-over-year-container").style.display = "block";
          var ctx = $("#line-chart");
          var data = {
            labels: ['Jan', '', 'Feb', '', 'Mar', '', 'Apr', '', 'May', '', 'Jun', '', 'Jul', '', 'Aug', '', 'Sept', '', 'Oct', '', 'Nov', '', 'Dec'],
            datasets: [{
              label: "Price ($USD)",
              data: pricesOverMonths,
              backgroundColor: "rgba(0,51,102,0.3)",
              strokeColor: "rgba(151,187,205,1)",
              pointColor: "rgba(151,187,205,1)",
              pointStrokeColor: "#fff",
              pointHighlightFill: "#fff",
              pointHighlightStroke: "rgba(151,187,205,1)"
            }]
          };
          var options = {
            tooltips: {
              callbacks: {
                title: function title() {}
              }
            },
            scales: {
              xAxes: [{
                gridLines: {
                  display: false
                }
              }],
              yAxes: [{
                ticks: {
                  beginAtZero: true
                }
              }]
            }
          };
          var myChart = new Chart(ctx, {
            type: 'line',
            data: data,
            options: options
          });
        }
      }

      function showSlider(id) {
        var listingPoints = neighborhoodListings.get(id);
        var nightsArray = [];
        listingPoints.forEach(function (d) {
          nightsArray.push(d[2]);
        });
        var min = d3.min(nightsArray);
        var max = d3.max(nightsArray);
        var f = d3.format(',.2r');
        var sliderRange = simpleslider.sliderBottom().min(min).max(max).width(360).tickFormat(f).ticks(10).default([min, max]).fill('#2196f3').on('onchange', function (val) {
          var filteredPoints = [];
          listingPoints.forEach(function (d) {
            if (d[2] >= val[0] && d[2] <= val[1]) {
              filteredPoints.push(d);
            }
          }); // remove old points

          d3.select("#map-svg").selectAll("circle").data([]).exit().remove(); // draw new points

          drawListingPoints(filteredPoints);
          d3.select('p#value-range').text("Minimum nights filter: " + f(val[0]) + "-" + f(val[1]) + " nights");
        });
        var gRange = d3.select('div#slider-range').append('svg').attr('width', 500).attr('height', 100).append('g').attr('transform', 'translate(70,30)');
        gRange.call(sliderRange);
      }

      function showRoomTypeFilter(id) {
        d3.select("#room-filter").append("button").text("Entire home/apt").attr("id", "entire-home").attr("class", "btn btn-outline-info btn-sm");
        d3.select("#room-filter").append("button").text("Hotel room").attr("id", "hotel").attr("class", "btn btn-outline-info btn-sm ");
        d3.select("#room-filter").append("button").text("Private room").attr("id", "private").attr("class", "btn btn-outline-info btn-sm ");
        d3.select("#room-filter").append("button").text("Shared room").attr("id", "shared").attr("class", "btn btn-outline-info btn-sm ");
        d3.select("#room-filter").append("button").text("Show all points").attr("id", "all-points").attr("class", "btn btn-outline-warning btn-sm ");
        var listingPoints = neighborhoodListings.get(id);
        d3.select("#entire-home").on("click", function (data) {
          // remove old points
          d3.select("#map-svg").selectAll("circle").data([]).exit().remove(); // draw new points

          drawListingPoints(listingPoints.filter(function (d) {
            return d[7] == "Entire home/apt";
          }));
        });
        d3.select("#hotel").on("click", function (data) {
          // remove old points
          d3.select("#map-svg").selectAll("circle").data([]).exit().remove(); // draw new points

          drawListingPoints(listingPoints.filter(function (d) {
            return d[7] == "Hotel room";
          }));
        });
        d3.select("#private").on("click", function (data) {
          // remove old points
          d3.select("#map-svg").selectAll("circle").data([]).exit().remove(); // draw new points

          drawListingPoints(listingPoints.filter(function (d) {
            return d[7] == "Private room";
          }));
        });
        d3.select("#shared").on("click", function (data) {
          // remove old points
          d3.select("#map-svg").selectAll("circle").data([]).exit().remove(); // draw new points

          drawListingPoints(listingPoints.filter(function (d) {
            return d[7] == "Shared room";
          }));
        });
        d3.select("#all-points").on("click", function () {
          drawListingPoints(neighborhoodListings.get(id));
        });
      }

      $('svg path').tipsy({
        gravity: 'w',
        html: true,
        title: function title() {
          var d = this.__data__;
          var numlistings = neighborhoodCt.get(this.id) == undefined ? 0 : neighborhoodCt.get(this.id);
          return 'Neighborhood: ' + this.id + '<br>' + 'Borough: ' + d.properties.neighbourhood_group + '<br> Number of listings: ' + numlistings;
        }
      });
    }
  }]);

  return MapVis;
}();

module.exports = MapVis;
},{"d3":"UzF0","d3-simple-slider":"Sf04","../data/neighbourhoods-nyc.geo.json":"ZfVJ","../data/neighbourhoods-seattle.geo.json":"fJGE","../data/neighbourhoods-austin.geo.json":"hgUf","../data/neighbourhoods-sf.geo.json":"ZOns","../data/neighbourhoods-nola.geo.json":"cxS8"}],"nUtH":[function(require,module,exports) {
var d3 = require('d3');

var MapVis = require('./map');

var highlighted = null;
var selectedCity = 'New York';
var ctx1 = document.getElementById('barchart-chartcanvas-1');
var name1 = 'New York';
var nycount = d3.csv("listings_small.csv").then(processData);
nycount.then(function (value) {
  makeChart(value, ctx1, name1);
});
var ctx2 = document.getElementById('barchart-chartcanvas-2');
var name2 = 'Seattle';
var seattlecount = d3.csv("listings_seattle.csv").then(processData);
seattlecount.then(function (value) {
  makeChart(value, ctx2, name2);
});
var ctx3 = document.getElementById('barchart-chartcanvas-3');
var name3 = 'Honolulu';
var honolulucount = d3.csv("listings_hono.csv").then(processData);
honolulucount.then(function (value) {
  makeChart(value, ctx3, name3);
});
var ctx4 = document.getElementById('barchart-chartcanvas-4');
var name4 = 'San Francisco';
var sfcount = d3.csv("listings_small_sf.csv").then(processData);
sfcount.then(function (value) {
  makeChart(value, ctx4, name4);
});
var ctx5 = document.getElementById('barchart-chartcanvas-5');
var name5 = 'New Orleans';
var nolacount = d3.csv("listings_small_nola.csv").then(processData);
nolacount.then(function (value) {
  makeChart(value, ctx5, name5);
});
var ctx6 = document.getElementById('barchart-chartcanvas-6');
var name6 = 'Austin';
var austincount = d3.csv("listings_small_austin.csv").then(processData);
austincount.then(function (value) {
  makeChart(value, ctx6, name6);
});

function processData(data) {
  var nyCount = new Array(0, 0, 0, 0, 0, 0);
  data.forEach(function (d) {
    var guests_included = d.guests_included;

    if (guests_included >= 6) {
      nyCount[5] = nyCount[5] + 1;
    } else {
      nyCount[guests_included - 1] = nyCount[guests_included - 1] + 1;
    }
  });
  return nyCount;
}

function makeChart(count, ctx, name) {
  var myChart = new Chart(ctx, {
    type: 'bar',
    data: {
      labels: ['1', '2', '3', '4', '5', '6+'],
      datasets: [{
        label: '',
        data: count,
        backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],
        borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],
        borderWidth: 1
      }]
    },
    options: {
      title: {
        display: true,
        fontColor: '#000',
        fontSize: 16,
        text: name
      },
      legend: {
        display: false
      },
      scales: {
        yAxes: [{
          ticks: {
            beginAtZero: true,
            suggestedMax: 40000
          }
        }],
        xAxes: [{
          gridLines: {
            display: false
          }
        }]
      },
      events: ['click'],
      onClick: function onClick(evt, item) {
        if (highlighted != null) {
          highlighted.options.title.fontColor = '#000';
          highlighted.update();
        }

        myChart.options.title.fontColor = '#00A699';
        myChart.update();
        highlighted = myChart;
        selectedCity = myChart.options.title.text;
        var myMap = new MapVis(selectedCity);
      }
    }
  });
}
},{"d3":"UzF0","./map":"quTw"}]},{},["nUtH"], null)
//# sourceMappingURL=https://uw-cse442-wi20.github.io/FP-airbnbs-in-new-york/barchart.2d4fbf98.js.map